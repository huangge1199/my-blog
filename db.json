{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"node_modules/hexo-theme-butterfly/source/css/index.styl","path":"css/index.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/css/var.styl","path":"css/var.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/img/404.jpg","path":"img/404.jpg","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/img/friend_404.gif","path":"img/friend_404.gif","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/img/favicon.png","path":"img/favicon.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/js/tw_cn.js","path":"js/tw_cn.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/js/search/local-search.js","path":"js/search/local-search.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/js/search/algolia.js","path":"js/search/algolia.js","modified":0,"renderable":1},{"_id":"source/link/idea.png","path":"link/idea.png","modified":0,"renderable":0},{"_id":"source/link/AnotherRedisDesktopManager.png","path":"link/AnotherRedisDesktopManager.png","modified":0,"renderable":0},{"_id":"source/link/datagrip.png","path":"link/datagrip.png","modified":0,"renderable":0},{"_id":"source/link/jdgui.png","path":"link/jdgui.png","modified":0,"renderable":0},{"_id":"source/link/jui.png","path":"link/jui.png","modified":0,"renderable":0},{"_id":"source/link/kafka.png","path":"link/kafka.png","modified":0,"renderable":0},{"_id":"source/link/jdk.png","path":"link/jdk.png","modified":0,"renderable":0},{"_id":"source/link/pycharm.png","path":"link/pycharm.png","modified":0,"renderable":0},{"_id":"source/link/nginx.png","path":"link/nginx.png","modified":0,"renderable":0},{"_id":"source/link/rabbitmq.png","path":"link/rabbitmq.png","modified":0,"renderable":0},{"_id":"source/link/webstorm.png","path":"link/webstorm.png","modified":0,"renderable":0},{"_id":"source/link/xshell.png","path":"link/xshell.png","modified":0,"renderable":0},{"_id":"source/images/WeaselLong.jpg","path":"images/WeaselLong.jpg","modified":0,"renderable":0},{"_id":"source/link/yapi.png","path":"link/yapi.png","modified":0,"renderable":0},{"_id":"source/images/alipay.png","path":"images/alipay.png","modified":0,"renderable":0},{"_id":"source/images/bg.jpeg","path":"images/bg.jpeg","modified":0,"renderable":0},{"_id":"source/images/gjh.png","path":"images/gjh.png","modified":0,"renderable":0},{"_id":"source/images/avatar.jpeg","path":"images/avatar.jpeg","modified":0,"renderable":0},{"_id":"source/images/logo.png","path":"images/logo.png","modified":0,"renderable":0},{"_id":"source/images/wechat.png","path":"images/wechat.png","modified":0,"renderable":0}],"Cache":[{"_id":"source/Gallery/index.md","hash":"54be9b38845fa010d353c43fe774fcec8a9e593b","modified":1640770001176},{"_id":"source/ _data/valine.json","hash":"e19f07aad3d84f757c7190c4039e23df77b1a107","modified":1642398276093},{"_id":"source/_posts/day20220118.md","hash":"4f1e58ca7bbb3285059aff20aed5970b0448de67","modified":1642563166278},{"_id":"source/ _data/link.yml","hash":"92aa9a900749a1ca2e355fc0145a92d7c9b507eb","modified":1647334826224},{"_id":"source/_posts/day20220119.md","hash":"e1e9e6ede9a1a685c7d6660fb074750d206425d5","modified":1642563166284},{"_id":"source/_posts/day20220120.md","hash":"6d087af5b7a3cc7f35e70068c3db82c09bd59aee","modified":1642658120726},{"_id":"source/_posts/day20220121.md","hash":"df1d5e6c1699ad5b6fd9498f05294ba5922b703c","modified":1642753996998},{"_id":"source/_posts/day20220204.md","hash":"ffbd809e6acd8db6d9ec22ff0b5af4cdd6ebb22b","modified":1644557514240},{"_id":"source/_posts/day20220125.md","hash":"9e8408fe8e47bdfa0612b1f7102f047db515667e","modified":1643090456342},{"_id":"source/_posts/day20220205.md","hash":"f358ad4564b40b631cf59f8b5789c30e110f8e07","modified":1644557514244},{"_id":"source/_posts/day20220211.md","hash":"d2707e17137060a64dc080f423a5e6866d32d58c","modified":1644571261853},{"_id":"source/_posts/day20220124.md","hash":"56b7919899a528e567911a1a19892f1b6230b959","modified":1643011294283},{"_id":"source/_posts/day20220212.md","hash":"74a46ce8ee7e9357994cfeb45f86b391f13a6d3e","modified":1644798960462},{"_id":"source/_posts/day20220213.md","hash":"b3bcfb32c4e0d051ffb96ed19c8d40d6b39f9521","modified":1644798960466},{"_id":"source/_posts/day20220214.md","hash":"c15edc807c8c46754f46a57af4545d89e35e3d09","modified":1645080797710},{"_id":"source/_posts/day20220307.md","hash":"9715c38b9b43932f42f580d3aa2c42faefd28db6","modified":1646634020700},{"_id":"source/_posts/day20220311.md","hash":"09bc2d665a87791a93a8a99f8a0bc7c92e7270e6","modified":1646977418395},{"_id":"source/_posts/day20220310.md","hash":"981574fed2288113040575acdec2d18fc9133b09","modified":1646879120321},{"_id":"source/_posts/day20220309.md","hash":"de17ee01d9508cd21416bf15b7d8a6bc3e6bc246","modified":1646818290408},{"_id":"source/_posts/gitPushMoreRepo.md","hash":"478d07da497d637362ac2ede6f98354bd03fdcbb","modified":1644572885636},{"_id":"source/_posts/jpaCompositePK.md","hash":"61a2b2b42a6c10ae61b8b80179bc2908b0c72f7c","modified":1642487597017},{"_id":"source/_posts/mystery0307.md","hash":"983353ab0f793a705ec4a1840f53643098099eb0","modified":1646618048895},{"_id":"source/_posts/hello-world.md","hash":"f2ad52b1f99746f9c2163a8421852226f03f0fcb","modified":1640768464298},{"_id":"source/_posts/mystery0305.md","hash":"b41772f0910b84952d1ddf7f1413b4d77002acba","modified":1646617965787},{"_id":"source/_posts/mystery0304.md","hash":"069dc08e4d5c841ff98ab7e7095283a9e201834e","modified":1646617965798},{"_id":"source/_posts/mystery0310.md","hash":"21c544d9d09d0ae703f201ebffe5c633a6368ab8","modified":1646980505665},{"_id":"source/_posts/putWebsiteToSearchEngine.md","hash":"f03a88c30657a0a8bf214f349310f5d4a4bd6f5b","modified":1644573270130},{"_id":"source/_posts/mystery0311.md","hash":"2c996b53e6efe0cffc65f99f65eaac232ff3e9af","modified":1646989247523},{"_id":"source/_posts/pyControl.md","hash":"acb80ae6315fa4d663d20b5e3eb4b003838a6c9b","modified":1642124775552},{"_id":"source/_posts/nexusCreate.md","hash":"9da669086c28417edfa4f731aec4600a87fffe0d","modified":1642124775319},{"_id":"source/_posts/pyMulCom.md","hash":"a6c30f03fe85f9177abd6fd2b374c1e653a94925","modified":1646361348465},{"_id":"source/_posts/pyListSlice.md","hash":"9f2754cb25457abf37e5a1241b29591449f9b03c","modified":1646100647932},{"_id":"source/_posts/pyUsefulFun.md","hash":"242d1a21e0bd614a6ad63f57d2a350443545efdd","modified":1646100688761},{"_id":"source/_posts/seata141demo.md","hash":"51db3430a372862fa8391abeafb5174b57191e16","modified":1644557514252},{"_id":"source/_posts/question20220310-1.md","hash":"1a4998bac11fa38835e7d03c58209e81a04b541c","modified":1646897744035},{"_id":"source/_posts/pyListSort.md","hash":"1c802a8118d912d8114c95b21365180bc4065833","modified":1642124775558},{"_id":"source/_posts/sublimeText4Purchase.md","hash":"c0413bda2dfe7cb4348ed546a5c40d5771602f72","modified":1642383002009},{"_id":"source/music/index.md","hash":"4056eccae1a12b011b8553c8b0af8ee0aecd294e","modified":1647402663988},{"_id":"source/bg/index.md","hash":"ed75b862a4f5d9a6de94c58845fc087340167726","modified":1646877631907},{"_id":"source/about/index.md","hash":"72b2c0c31e3b6cf1ade45a2d32c67ec6e2435270","modified":1640742402563},{"_id":"source/categories/index.md","hash":"54cefc42800d549a84280e5de716b7c1b615cfa0","modified":1644557514255},{"_id":"source/link/idea.png","hash":"6c89f00d2862f89837a1b432429b027914774743","modified":1642474492932},{"_id":"source/link/index.md","hash":"4e0f37de7c2faad9126ccf3e3d04f22d4d47166c","modified":1644557514258},{"_id":"source/link/AnotherRedisDesktopManager.png","hash":"f5d4a37281a521e453578a5efb26fdb759118e07","modified":1642475782699},{"_id":"source/link/jui.png","hash":"38e01ae04f2aa135f7794f53227b15883942e5c7","modified":1642559932221},{"_id":"source/link/datagrip.png","hash":"aa317c6d8e0a85b6bca31517ecbbd50db6746e6a","modified":1642475006619},{"_id":"source/link/jdgui.png","hash":"fc2837240b55a63fa7a4d9163559be7d64bc702a","modified":1642557666350},{"_id":"source/link/nginx.png","hash":"ade7f203ca7daebb5c102ca94d72fb95ca3fa015","modified":1642572547623},{"_id":"source/link/kafka.png","hash":"74ae6f9aa0843be5cd83e87141ca298dc65dd158","modified":1642572846570},{"_id":"source/link/jdk.png","hash":"1157487ecfd838bd52c0185aa41d491c4d8e2ded","modified":1642475910425},{"_id":"source/link/rabbitmq.png","hash":"590e3739240026e0ba88bf70ffe21474e9cf7f20","modified":1642573566186},{"_id":"source/link/pycharm.png","hash":"5ac649e6bf8cde216db8c36b4d4eba7f999f666c","modified":1642475135740},{"_id":"source/link/webstorm.png","hash":"cb07d5812778c779914a0480f1693a95d9c19ae9","modified":1642474589463},{"_id":"source/link/xshell.png","hash":"2921bd09d9e10264cdf23565ce88a1321dffbcda","modified":1642475362681},{"_id":"source/link/yapi.png","hash":"ffb2431afae088e6d03d550791da2389f5720b92","modified":1642660914085},{"_id":"source/images/WeaselLong.jpg","hash":"fab9fb7f21bf0317822e797f180cdca70465c2d4","modified":1640918447051},{"_id":"source/tags/index.md","hash":"cccbf8aeab25bb00f073d22e5bb2f59e894b97b9","modified":1644557514263},{"_id":"source/wallpaper/index.md","hash":"cee1c6914b2761f934d1c190995cd734df4ef286","modified":1642124775572},{"_id":"source/images/logo.png","hash":"fbe28f905637f2bca7fe7e9ed99da71e4a79d3ae","modified":1642124775568},{"_id":"source/_posts/day20220310/bg.jpeg","hash":"24bb7768d31db65487b9cd5ba01e3d31eda6617f","modified":1646877492733},{"_id":"source/_posts/nexusCreate/1A658347.png","hash":"928311dbf17bb72a8c1a4f9714e7791fc5ffe65c","modified":1642124775323},{"_id":"source/_posts/day20220213/1536_ex2_upd.jpeg","hash":"b819f149e17daafe0cc271a5d6cb355b5d234416","modified":1644798960475},{"_id":"source/_posts/day20220213/1536_ex1_upd.jpeg","hash":"de9d9cf87a5014da884edef0f4a3a567a16d4cbd","modified":1644798960473},{"_id":"source/_posts/nexusCreate/image-20220112203927784.png","hash":"c8ecb9d0600f00dae3f2e6230c81fc2775ea10ae","modified":1642124775347},{"_id":"source/_posts/nexusCreate/image-20220112202513617.png","hash":"03541f6127dcc4d03b8f2b7aa9a45b6e7ee69558","modified":1642124775340},{"_id":"source/_posts/nexusCreate/image-20220112204407509.png","hash":"ebf83c4522609999971402b982bdf86967ca6adf","modified":1642124775355},{"_id":"source/_posts/nexusCreate/image-20220112204921432.png","hash":"7ba35c07910d9b2799e625ba2b7b11036652f3d6","modified":1642124775361},{"_id":"source/_posts/nexusCreate/image-20220112205557025.png","hash":"da96eb5aaf2357e3d5a89dd77d762748b72d38c1","modified":1642124775368},{"_id":"source/_posts/nexusCreate/image-20220112212243615.png","hash":"b484e6b4a9cfe1f063de17080457e70707f46fed","modified":1642124775395},{"_id":"source/_posts/nexusCreate/image-20220112214637528.png","hash":"0f5ba6e53179e542c5717cb0c63d7251f60ea688","modified":1642124775417},{"_id":"source/_posts/nexusCreate/image-20220112214220341.png","hash":"f5d92dc47282b668be4b4e4061f0c69cb254f900","modified":1642124775407},{"_id":"source/_posts/nexusCreate/image-20220112214506743.png","hash":"62ad6f02e00f67761867c51bbcb4b64a1ed0e2f1","modified":1642124775412},{"_id":"source/_posts/nexusCreate/image-20220112214717867.png","hash":"dabc261030d2e8d3237fca662109b1ed395e1284","modified":1642124775422},{"_id":"source/_posts/nexusCreate/image-20220112214820826.png","hash":"966c02c84ac0cfcb9c4d4a35c377f266a92726c4","modified":1642124775429},{"_id":"source/_posts/nexusCreate/image-20220112214831857.png","hash":"e71ee4b6f71ebca05168782a2b26511fcc4a0738","modified":1642124775433},{"_id":"source/_posts/nexusCreate/image-20220112215809631.png","hash":"2e94631128761f962f3beea80fd1177ea90a3cd3","modified":1642124775450},{"_id":"source/_posts/nexusCreate/image-20220112215708898.png","hash":"61138282d1e7e9a18dbddb6bfdaae6fb427f4700","modified":1642124775441},{"_id":"source/_posts/nexusCreate/image-20220112215951755.png","hash":"bf466e4f5a3724bf3a2c5e8d6d02b83c9cb1b432","modified":1642124775459},{"_id":"source/_posts/nexusCreate/image-20220112221637473.png","hash":"155b77f021e8bc65e9980105c8486fa789e91bab","modified":1642124775505},{"_id":"source/_posts/question20220310-1/bg.jpeg","hash":"a11c1466b533dd62d55697b3aa42e9c128103be7","modified":1646895478652},{"_id":"source/_posts/sublimeText4Purchase/image-20220114155341371.png","hash":"44757f86776c7e43375c9b8655b9c01fca5521f8","modified":1642383002032},{"_id":"source/_posts/sublimeText4Purchase/image-20220114155558214.png","hash":"035ce7c26f51fadab6eb64ad45a6cd4a42e4a8af","modified":1642383002033},{"_id":"source/images/avatar.jpeg","hash":"96aafacca4dee9d5244a865f97d388b1e2e6da5a","modified":1640742402566},{"_id":"source/_posts/nexusCreate/image-20220112211546086.png","hash":"d0de4224b0a8d83811956f7f7143d6632e8ccd95","modified":1642124775377},{"_id":"source/_posts/nexusCreate/image-20220112211948810.png","hash":"e71015033a0d78d97af65ecbae655c6ba2c4e7bf","modified":1642124775387},{"_id":"source/_posts/nexusCreate/image-20220112212410144.png","hash":"af039630b66495f82f5735076964e7edee625f38","modified":1642124775401},{"_id":"source/_posts/nexusCreate/image-20220112220741095.png","hash":"a6eb80658e6691867633869feda9e49aa290865d","modified":1642124775481},{"_id":"source/_posts/nexusCreate/image-20220112220131151.png","hash":"c3ea21681a8c3c6b8678d1cfdddb8cfc016c023b","modified":1642124775466},{"_id":"source/_posts/nexusCreate/image-20220112220511830.png","hash":"23987ac51f17611935d69a4ad67e185d6800baf1","modified":1642124775473},{"_id":"source/_posts/nexusCreate/image-20220112221401367.png","hash":"ba0b1b60a0b7553166311310a158e7a11f35dac1","modified":1642124775491},{"_id":"source/_posts/nexusCreate/image-20220112221517343.png","hash":"09f13482ac33ce11d6d809c1be26b36da0059414","modified":1642124775498},{"_id":"source/_posts/nexusCreate/image-20220112223312451.png","hash":"682c3c7dad92d974d9cfdb0a87acb80bbbf43818","modified":1642124775521},{"_id":"source/_posts/nexusCreate/image-20220112221849871.png","hash":"31e9d8fe4f0d50b1157609adb7b73e192361e043","modified":1642124775512},{"_id":"source/_posts/nexusCreate/image-20220112224909515.png","hash":"273802e42499373e429f2f66d60ce144b2f21249","modified":1642124775528},{"_id":"source/_posts/nexusCreate/image-20220112230645860.png","hash":"5f46697b3c40e5aeefb0c473b326c84286070cff","modified":1642124775547},{"_id":"source/_posts/sublimeText4Purchase/image-20220114155104130.png","hash":"fa188c572dd0901c1dd7db14570321fd874249cc","modified":1642383002028},{"_id":"source/_posts/sublimeText4Purchase/image-20220114155245648.png","hash":"1b3aa8df2d43f623d8e789e50e2cceddf5cd44e0","modified":1642383002031},{"_id":"source/js/search/local-search.js","hash":"faef5153fbe092e5951ca27c9a5222bf1f3fb6de","modified":1645064614225},{"_id":"source/images/alipay.png","hash":"300c66513a784f35174b5db09fe96e49c501cec0","modified":1640742402565},{"_id":"source/images/wechat.png","hash":"1c7c579dca0c8612445acec0d2fc56a07fa73e74","modified":1640742402568},{"_id":"source/_posts/day20220118/bg.jpeg","hash":"a88c53650ff208c971e622f2dac860784f898969","modified":1642489485263},{"_id":"source/_posts/day20220120/bg.jpeg","hash":"ef479b44558abc0915d7ea8f30de5d33eba6f565","modified":1642658093460},{"_id":"source/_posts/sublimeText4Purchase/img.png","hash":"048beb0cb34a7ebb5d85fefd94c6d53f791cc5d5","modified":1642383002035},{"_id":"source/images/bg.jpeg","hash":"c2b5ac45b440a9bcf08951ff4b83eea2c502daea","modified":1640769217832},{"_id":"source/_posts/day20220119/bg.jpeg","hash":"d849225c11c973e549c1c6706025671495341889","modified":1642562778020},{"_id":"source/_posts/sublimeText4Purchase/image-20220114153619254.png","hash":"8b0511461b8b0717aec5536339ba0f3692d42024","modified":1642383002016},{"_id":"source/_posts/sublimeText4Purchase/bg.jpeg","hash":"b5ea7fcebc03e8ab5e3008ec7d65c71536ba1b3c","modified":1642383002013},{"_id":"source/_posts/day20220121/bg.jpeg","hash":"f4d28cd025fd48cb31a1541b1dc426abe2a208ac","modified":1642753681272},{"_id":"source/_posts/pyControl/bg.jpeg","hash":"c43f58191b438e23c0b4239cae3783fb7a19f508","modified":1640767442470},{"_id":"source/_posts/pyListSort/bg.jpeg","hash":"6d4e40b2505465124e359f0a07bf98b661844783","modified":1640767940326},{"_id":"source/_posts/nexusCreate/image-20220112230213213.png","hash":"ac490f98b757bb557ebfb3b0fc4be1df6e53464c","modified":1642124775541},{"_id":"source/_posts/jpaCompositePK/bg.jpg","hash":"af3ff6b0eb635ed02714edb5af1c0f6fde48c3f5","modified":1642124775314},{"_id":"source/_posts/nexusCreate/bg.jpeg","hash":"8bbae5df02ef58fab4c03dabc58765994e6d5d4b","modified":1642124775332},{"_id":"source/_posts/sublimeText4Purchase/image-20220114154843108.png","hash":"a3b9f1acf5cc2c26651de90fa81c397a07d64437","modified":1642383002025},{"_id":"node_modules/hexo-theme-butterfly/LICENSE","hash":"1128f8f91104ba9ef98d37eea6523a888dcfa5de","modified":1647401193314},{"_id":"node_modules/hexo-theme-butterfly/README.md","hash":"6ee27baf95a5741abbc224ef8938d679b6597665","modified":1647401194440},{"_id":"node_modules/hexo-theme-butterfly/.github/stale.yml","hash":"05a55a87fa7f122c59683e41c8b2e37e79f688f0","modified":1647401195538},{"_id":"node_modules/hexo-theme-butterfly/package.json","hash":"4577d39a6d79a18b5c4f57bf68f68edefbf407ab","modified":1647401194427},{"_id":"node_modules/hexo-theme-butterfly/README_CN.md","hash":"49ace5208f98783344f17a00adab7641cda43280","modified":1647401194439},{"_id":"node_modules/hexo-theme-butterfly/_config.yml","hash":"8239544985a87481bf4c6c4775e8a3b4745d0bcb","modified":1647401195518},{"_id":"node_modules/hexo-theme-butterfly/languages/default.yml","hash":"7fd2950554e99a6f15232267621f36f026a85380","modified":1647401195524},{"_id":"node_modules/hexo-theme-butterfly/languages/zh-CN.yml","hash":"6c35255c196ea8e9817b85b6d7729d00cf18f231","modified":1647401195541},{"_id":"node_modules/hexo-theme-butterfly/languages/en.yml","hash":"4b2c351f2b5fd4f8497e806085364928e1af0b5b","modified":1647401195532},{"_id":"node_modules/hexo-theme-butterfly/languages/zh-TW.yml","hash":"ef035065ebb37fce3e56e51f8b56deb596db78b2","modified":1647401195541},{"_id":"node_modules/hexo-theme-butterfly/layout/archive.pug","hash":"bd62286afb64a51c97e800c5945620d51605d5fa","modified":1647401194503},{"_id":"node_modules/hexo-theme-butterfly/layout/category.pug","hash":"710708cfdb436bc875602abf096c919ccdf544db","modified":1647401194551},{"_id":"node_modules/hexo-theme-butterfly/layout/index.pug","hash":"e1c3146834c16e6077406180858add0a8183875a","modified":1647401194757},{"_id":"node_modules/hexo-theme-butterfly/.github/ISSUE_TEMPLATE/bug_report.md","hash":"476802922b774b679225102ac30a9d9183394701","modified":1647401194430},{"_id":"node_modules/hexo-theme-butterfly/.github/ISSUE_TEMPLATE/custom.md","hash":"eff495eb1584cf4586e33c76e8b2fa6a469a179b","modified":1647401194433},{"_id":"node_modules/hexo-theme-butterfly/.github/ISSUE_TEMPLATE/feature_request.md","hash":"f6867a2f0417fe89a0f2008730ee19dd38422021","modified":1647401194435},{"_id":"node_modules/hexo-theme-butterfly/layout/page.pug","hash":"baf469784aef227e4cc840550888554588e87a13","modified":1647401194872},{"_id":"node_modules/hexo-theme-butterfly/layout/post.pug","hash":"fc9f45252d78fcd15e4a82bfd144401cba5b169a","modified":1647401194947},{"_id":"node_modules/hexo-theme-butterfly/layout/tag.pug","hash":"0440f42569df2676273c026a92384fa7729bc4e9","modified":1647401194994},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/404.pug","hash":"cb49f737aca272ccfeb62880bd651eccee72a129","modified":1647401194443},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/additional-js.pug","hash":"ab3bdeb6e0acd3d58091698c1335afb069eea7e5","modified":1647401194455},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head.pug","hash":"847a5cbc13db1a435a4f762a7c0007d9bcbb79a2","modified":1647401194710},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/footer.pug","hash":"02390a5b6ae1f57497b22ba2e6be9f13cfb7acac","modified":1647401194678},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/layout.pug","hash":"6f2608c4d93d3d10ae6b2cd7f8918f303f024321","modified":1647401194779},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/pagination.pug","hash":"0b80f04950bd0fe5e6c4e7b7559adf4d0ce28436","modified":1647401194876},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/sidebar.pug","hash":"f093ab771257a6a939b194f68607a2038c8d7da3","modified":1647401194981},{"_id":"node_modules/hexo-theme-butterfly/.github/workflows/publish.yml","hash":"05857c2f265246d8de00e31037f2720709540c09","modified":1647401195536},{"_id":"node_modules/hexo-theme-butterfly/scripts/filters/post_lazyload.js","hash":"932df912976261929f809b7dbd4eb473e7787345","modified":1647401194384},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/rightside.pug","hash":"699d0d2cff233628752956c4434125c8203f7d63","modified":1647401194970},{"_id":"node_modules/hexo-theme-butterfly/scripts/events/404.js","hash":"83cd7f73225ccad123afbd526ce1834eb1eb6a6d","modified":1647401194285},{"_id":"node_modules/hexo-theme-butterfly/scripts/filters/random_cover.js","hash":"21379ed2dccb69c43b893895c9d56238c11e5f43","modified":1647401194387},{"_id":"node_modules/hexo-theme-butterfly/scripts/events/init.js","hash":"a7f567b3d3110afe2f99c967b8e15351a7f5bd6d","modified":1647401194334},{"_id":"node_modules/hexo-theme-butterfly/scripts/events/config.js","hash":"a72c2020c87c4998aa124a16e9f8560875b9f86d","modified":1647401194313},{"_id":"node_modules/hexo-theme-butterfly/scripts/events/stylus.js","hash":"9819f0996234fbd80d6c50a9e526c56ebf22588d","modified":1647401194396},{"_id":"node_modules/hexo-theme-butterfly/scripts/helpers/aside_archives.js","hash":"2ec66513d5322f185d2071acc052978ba9415a8e","modified":1647401194297},{"_id":"node_modules/hexo-theme-butterfly/scripts/helpers/aside_categories.js","hash":"e00efdb5d02bc5c6eb4159e498af69fa61a7dbb9","modified":1647401194302},{"_id":"node_modules/hexo-theme-butterfly/scripts/events/welcome.js","hash":"3cfc46c749e2fd7ae9c2a17206238ed0e0e17e7d","modified":1647401194423},{"_id":"node_modules/hexo-theme-butterfly/scripts/helpers/page.js","hash":"c6611d97087c51845cb1ab4821696a62fa33daeb","modified":1647401194380},{"_id":"node_modules/hexo-theme-butterfly/scripts/helpers/inject_head_js.js","hash":"6a103a2472903289bdecd5240eb89cac0b9e13d9","modified":1647401194338},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/button.js","hash":"91d954f6e9fe6e571eb8ec9f8996294b2dc3688e","modified":1647401194309},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/flink.js","hash":"ab62919fa567b95fbe14889517abda649991b1ee","modified":1647401194319},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/inlineImg.js","hash":"a43ee2c7871bdd93cb6beb804429e404570f7929","modified":1647401194344},{"_id":"node_modules/hexo-theme-butterfly/scripts/helpers/related_post.js","hash":"21556f9cb412ddc500ad12ecfd419f3ea6c9f663","modified":1647401194392},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/gallery.js","hash":"f79c99f6c5b626c272dc2bed2b0250d6b91bb28a","modified":1647401194324},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/hide.js","hash":"396c3ab1bcf1c7693ad7e506eadd13016c6769b6","modified":1647401194329},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/label.js","hash":"03b2afef41d02bd1045c89578a02402c28356006","modified":1647401194348},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/note.js","hash":"c16c6eb058af2b36bcd583b2591076c7ebdd51ad","modified":1647401194376},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/mermaid.js","hash":"531808a290b8bdd66bac2faab211ada8e9646a37","modified":1647401194372},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/timeline.js","hash":"300eb779588bf35a1b687d9f829d866074b707e3","modified":1647401194408},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/tabs.js","hash":"6c6e415623d0fd39da016d9e353bb4f5cca444f5","modified":1647401194401},{"_id":"node_modules/hexo-theme-butterfly/source/css/index.styl","hash":"861998e4ac67a59529a8245a9130d68f826c9c12","modified":1647401195202},{"_id":"node_modules/hexo-theme-butterfly/source/css/var.styl","hash":"4890a40366d6443f8b8942a4e9a6dce9fe3494f5","modified":1647401195508},{"_id":"node_modules/hexo-theme-butterfly/source/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1647401194281},{"_id":"node_modules/hexo-theme-butterfly/source/img/favicon.png","hash":"3cf89864b4f6c9b532522a4d260a2e887971c92d","modified":1647401194441},{"_id":"node_modules/hexo-theme-butterfly/source/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1647401194269},{"_id":"node_modules/hexo-theme-butterfly/source/js/tw_cn.js","hash":"00053ce73210274b3679f42607edef1206eebc68","modified":1647401194412},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/analytics.pug","hash":"15530d9ac59c576d79af75dd687efe71e8d261b0","modified":1647401194498},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/Open_Graph.pug","hash":"6c41f49a3e682067533dd9384e6e4511fc3a1349","modified":1647401194866},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/config.pug","hash":"9e58c80af8bbd0c66ccb4f94d3781818cebf0d66","modified":1647401194561},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/config_site.pug","hash":"7df90c8e432e33716517ab918b0a125bc284041b","modified":1647401194558},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/preconnect.pug","hash":"65a23b5170204e55b813ce13a79d799b66b7382c","modified":1647401194950},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/google_adsense.pug","hash":"95a37e92b39c44bcbea4be7e29ddb3921c5b8220","modified":1647401194706},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/pwa.pug","hash":"3d492cfe645d37c94d30512e0b230b0a09913148","modified":1647401194956},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/noscript.pug","hash":"d16ad2ee0ff5751fd7f8a5ce1b83935518674977","modified":1647401194852},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/site_verification.pug","hash":"e2e8d681f183f00ce5ee239c42d2e36b3744daad","modified":1647401194984},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/header/post-info.pug","hash":"dc3913c1a6dd207051c3d3414a33851ae8bc0a45","modified":1647401194936},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/header/menu_item.pug","hash":"31346a210f4f9912c5b29f51d8f659913492f388","modified":1647401194845},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/header/nav.pug","hash":"78a3abd90bb3c18cd773d3d5abac3541e7f415e5","modified":1647401194850},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/header/social.pug","hash":"0d953e51d04a9294a64153c89c20f491a9ec42d4","modified":1647401194986},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/header/index.pug","hash":"65fa23680af0daf64930a399c2f2ca37809a8149","modified":1647401194718},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/loading/loading-js.pug","hash":"4cfcf0100e37ce91864703cd44f1cb99cb5493ea","modified":1647401194787},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/page/categories.pug","hash":"5276a8d2835e05bd535fedc9f593a0ce8c3e8437","modified":1647401194550},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/loading/loading.pug","hash":"5276937fbcceb9d62879dc47be880cd469a27349","modified":1647401194807},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/mixins/post-ui.pug","hash":"b9ebb02af8ccf43e3f73be43db19254fa913c57b","modified":1647401194941},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/mixins/article-sort.pug","hash":"2fb74d0b0e4b98749427c5a1a1b0acb6c85fadc4","modified":1647401194507},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/page/flink.pug","hash":"fed069baa9b383f57db32bb631115071d29bdc60","modified":1647401194646},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/post/reward.pug","hash":"864869c43fe5b5bb6f4ac6b13dd4bfb16ea47550","modified":1647401194958},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/page/default-page.pug","hash":"12c65c174d26a41821df9bad26cdf1087ec5b0ca","modified":1647401194571},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/page/tags.pug","hash":"6311eda08e4515281c51bd49f43902a51832383c","modified":1647401194998},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_ad.pug","hash":"60dc48a7b5d89c2a49123c3fc5893ab9c57dd225","modified":1647401194510},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/post/post-copyright.pug","hash":"88e3b611b03149665e4113cfa39595c1a3fca7e5","modified":1647401194912},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_archives.pug","hash":"86897010fe71503e239887fd8f6a4f5851737be9","modified":1647401194514},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_announcement.pug","hash":"ae392459ad401a083ca51ee0b27526b3c1e1faed","modified":1647401194513},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_bottom_self.pug","hash":"13dc8ce922e2e2332fe6ad5856ebb5dbf9ea4444","modified":1647401194523},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_author.pug","hash":"0380a1e048e6219ea4b4a8a4eadba960edf308f0","modified":1647401194516},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_categories.pug","hash":"d1a416d0a8a7916d0b1a41d73adc66f8c811e493","modified":1647401194534},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_newest_comment.pug","hash":"6d93564a8bd13cb9b52ee5e178db3bcbf18b1bc6","modified":1647401194535},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_post_toc.pug","hash":"3057a2f6f051355e35d3b205121af8735100eacf","modified":1647401194537},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_tags.pug","hash":"438aea3e713ed16b7559b9a80a9c5ec0221263df","modified":1647401194542},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_recent_post.pug","hash":"9c1229af6ab48961021886882c473514101fba21","modified":1647401194540},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_top_self.pug","hash":"ae67c6d4130a6c075058a9c1faea1648bcc6f83e","modified":1647401194544},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/effect.pug","hash":"b9d54a01d7c2a7a183cb7209e99430ce7fea1fe3","modified":1647401194635},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/index.pug","hash":"7fb096656c8a6c21a4b6a5100885b1081d6021ed","modified":1647401194755},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/pangu.pug","hash":"d5fec7dedc52ab23865fb4db002755e9bdaadc9f","modified":1647401194893},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/aplayer.pug","hash":"292646dfab135973b09f0fa9e3931e83da2ed30e","modified":1647401194501},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_webinfo.pug","hash":"0612aaee878f33ea8d3da0293c7dc3b6cd871466","modified":1647401194545},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/prismjs.pug","hash":"1fbecfd299068f90d727f0c8c65e2a792fa6e3e2","modified":1647401194953},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/pjax.pug","hash":"d4072f9ab79f4ac49aa251ae470abc45a2fddbd6","modified":1647401194909},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/subtitle.pug","hash":"b63fd8ec48d782f51ee11226753fed1998bbf34a","modified":1647401194989},{"_id":"node_modules/hexo-theme-butterfly/source/css/_highlight/theme.styl","hash":"bcd384c8b2aa0390c9eb69ac1abbfd1240ce1da4","modified":1647401195492},{"_id":"node_modules/hexo-theme-butterfly/source/css/_highlight/highlight.styl","hash":"2f95e99b8351fbecd9037a1bbdc3fee9d6ea8a77","modified":1647401195181},{"_id":"node_modules/hexo-theme-butterfly/source/css/_global/index.styl","hash":"714f19e7d66df84938bd1b82b33d5667abe1f147","modified":1647401195188},{"_id":"node_modules/hexo-theme-butterfly/source/js/utils.js","hash":"0b95daada72abb5d64a1e3236049a60120e47cca","modified":1647401194418},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/chat.styl","hash":"29f48f9370f245e6e575b5836bccf47eb5688d8b","modified":1647401195093},{"_id":"node_modules/hexo-theme-butterfly/source/css/_mode/readmode.styl","hash":"69f8e9414526dfda3af9a71c8e528fdd0ecbbfe5","modified":1647401195294},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/aside.styl","hash":"2d3b0386c8b62a61734e10bab2cf86842cbb1673","modified":1647401195072},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/comments.styl","hash":"c61dccca690d486c3d9c29cf028d87b777385141","modified":1647401195095},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/head.styl","hash":"d97c1722ce0fcc319f1f90ec2d51f9d746748e2b","modified":1647401195166},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/footer.styl","hash":"26be2afa9d4e7016cf3c42a6cd166f01e8e4ad5c","modified":1647401195149},{"_id":"node_modules/hexo-theme-butterfly/source/css/_global/function.styl","hash":"f7fd855593396b30932a06627287a73a407aff88","modified":1647401195155},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/pagination.styl","hash":"fb9f78bfbb79579f1d752cb73fb6d25c8418e0fd","modified":1647401195286},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/post.styl","hash":"84d4f27fde933bdf839629eb3bddcbc0f4592836","modified":1647401195290},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/loading.styl","hash":"ef21990de28bd75dcd0f88b8d616e1a7a137502f","modified":1647401195228},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/reward.styl","hash":"c5cfed620708807a48076b5ee59b0ba84e29aa80","modified":1647401195326},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/rightside.styl","hash":"bd88ee30ebf8ca2e7b4d3a034c317fd61733921f","modified":1647401195483},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/relatedposts.styl","hash":"d53de408cb27a2e704aba7f7402b7caebe0410d8","modified":1647401195322},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/sidebar.styl","hash":"1bcbc80dff19cd53d0b367c3b9a3c751d3a1f10d","modified":1647401195485},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/third-party.styl","hash":"e5008f43897d8482b4831cd4c13a0af40e496762","modified":1647401195501},{"_id":"node_modules/hexo-theme-butterfly/source/css/_page/archives.styl","hash":"6f4b4ede52305bce9b22c8c897dcbde8af6e2ce4","modified":1647401195063},{"_id":"node_modules/hexo-theme-butterfly/source/css/_page/404.styl","hash":"50dbb9e6d98c71ffe16741b8c1b0c1b9771efd2b","modified":1647401195049},{"_id":"node_modules/hexo-theme-butterfly/source/css/_page/categories.styl","hash":"f01ee74948cedb44e53cd3bb1ef36b7d2778ede7","modified":1647401195089},{"_id":"node_modules/hexo-theme-butterfly/source/css/_page/common.styl","hash":"a58d35d698885f1034dedbe99f7dbc1a801412c6","modified":1647401195105},{"_id":"node_modules/hexo-theme-butterfly/source/css/_page/tags.styl","hash":"580feb7e8b0822a1be48ac380f8c5c53b1523321","modified":1647401195491},{"_id":"node_modules/hexo-theme-butterfly/source/css/_page/homepage.styl","hash":"826dae759062d8f84eb2bf5ab8fdb80e0f79d58b","modified":1647401195185},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/button.styl","hash":"45f0c32bdea117540f6b14ebac6450d7142bd710","modified":1647401195081},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/gallery.styl","hash":"a310e48f826a4cacc55d8e68f43806e5085554f6","modified":1647401195162},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/hexo.styl","hash":"d76c38adf1d9c1279ef4241835667789f5b736e0","modified":1647401195173},{"_id":"node_modules/hexo-theme-butterfly/source/css/_mode/darkmode.styl","hash":"f67177310f5594954b25a591d186d28d5d450b18","modified":1647401195111},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/inlineImg.styl","hash":"df9d405c33a9a68946b530410f64096bcb72560c","modified":1647401195207},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/label.styl","hash":"66c59e193d794cdb02cca7bd1dc4aea5a19d7e84","modified":1647401195210},{"_id":"node_modules/hexo-theme-butterfly/source/css/_search/algolia.styl","hash":"656f9007d94cf29a20532705d94fb7f22827e6fe","modified":1647401195060},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/timeline.styl","hash":"f071156d439556e7463ed4bc61ceee87170d5d08","modified":1647401195505},{"_id":"node_modules/hexo-theme-butterfly/source/css/_search/index.styl","hash":"0290605c4984882990059eefe3ad18d2ac6a19ef","modified":1647401195198},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/note.styl","hash":"08493b66b9f31f2bd3e9a3115017a0ce16142b20","modified":1647401195275},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/tabs.styl","hash":"bf9568444dd54e39dc59b461323dcd38942f27d9","modified":1647401195488},{"_id":"node_modules/hexo-theme-butterfly/source/css/_search/local-search.styl","hash":"e4c987c0202162b50dec91e1df74665d0fa933c9","modified":1647401195271},{"_id":"node_modules/hexo-theme-butterfly/source/js/main.js","hash":"04efcbd28b37875cfec88eb87cab7256a9ebb327","modified":1647401194363},{"_id":"node_modules/hexo-theme-butterfly/source/css/_third-party/normalize.min.css","hash":"2c18a1c9604af475b4749def8f1959df88d8b276","modified":1647401193319},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/chat/chatra.pug","hash":"481cd5053bafb1a19f623554a27d3aa077ea59c3","modified":1647401194553},{"_id":"node_modules/hexo-theme-butterfly/source/js/search/algolia.js","hash":"aaa5e44125dcf321866bc2355a73773b11db8c9c","modified":1647401194291},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/chat/crisp.pug","hash":"76634112c64023177260d1317ae39cef2a68e35f","modified":1647401194566},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/chat/gitter.pug","hash":"d1d2474420bf4edc2e43ccdff6f92b8b082143df","modified":1647401194699},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/chat/daovoice.pug","hash":"cfe63e7d26a6665df6aa32ca90868ad48e05ec04","modified":1647401194569},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/chat/index.pug","hash":"3f05f8311ae559d768ee3d0925e84ed767c314d3","modified":1647401194726},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/chat/tidio.pug","hash":"24a926756c2300b9c561aaab6bd3a71fdd16e16d","modified":1647401195000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/card-post-count/disqus.pug","hash":"d85c3737b5c9548553a78b757a7698df126a52cf","modified":1647401194576},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/card-post-count/fb.pug","hash":"7848ec58c6ec03243abf80a3b22b4dc10f3edf53","modified":1647401194644},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/card-post-count/index.pug","hash":"e3bf847553515174f6085df982f0623e9783db7a","modified":1647401194724},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/hide.styl","hash":"ce489ca2e249e2a3cf71584e20d84bdb022e3475","modified":1647401195177},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/card-post-count/twikoo.pug","hash":"ef1b2b5b980d6aeaa5d06b97d1afc9644b155a16","modified":1647401195010},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/card-post-count/valine.pug","hash":"bba9871f446c10ffcc8fa9023f5a2eb701a86bae","modified":1647401195020},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/card-post-count/waline.pug","hash":"400ce038548d6f9ddb486150c724c87b6923a88b","modified":1647401195035},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/disqus.pug","hash":"a111407fdcafcf1099e26ffa69786f8822c5d9fb","modified":1647401194630},{"_id":"node_modules/hexo-theme-butterfly/source/css/_page/flink.styl","hash":"98d755b686ee833e9da10afaa40c4ec2bd66c19a","modified":1647401195145},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/disqusjs.pug","hash":"143236e395c18d80ab8dc794821eb337c85f6b32","modified":1647401194633},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/facebook_comments.pug","hash":"fe684aaad4c99b908dc4499c85afd9a2cd893aae","modified":1647401194638},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/gitalk.pug","hash":"9c96e6e67931977268b218b99084b98597c2e42b","modified":1647401194694},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/giscus.pug","hash":"0764709381fa29778f6390d645ed137d2f91228f","modified":1647401194693},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/livere.pug","hash":"52ea8aa26b84d3ad38ae28cdf0f163e9ca8dced7","modified":1647401194784},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/index.pug","hash":"e4850f2c9ba5f6b2248808f7257662679e0fab0a","modified":1647401194729},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/js.pug","hash":"9302837f1e35f153323bb4f166514c7e96e8ecdd","modified":1647401194759},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/utterances.pug","hash":"c1c75abe5c899618ed6699c97ac999544840098a","modified":1647401195017},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/twikoo.pug","hash":"c271cacbac14ed665bbf47aa9c6e74e94c69dcef","modified":1647401195014},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/valine.pug","hash":"59c22ebf3aaee90152e7cdb17ff5841c888fcd82","modified":1647401195027},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/waline.pug","hash":"7648e4cb0b224f480b5f1356d64f62c9235f6723","modified":1647401195040},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/math/katex.pug","hash":"f9b00ead54573ba6e6eb33481588af144aab648d","modified":1647401194773},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/math/index.pug","hash":"b8ae5fd7d74e1edcef21f5004fc96147e064d219","modified":1647401194739},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/math/mathjax.pug","hash":"a47d8f9f593091cc91192c0c49deaa2c0d2317fd","modified":1647401194827},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/math/mermaid.pug","hash":"0a7587a0211011b5942edba2aa80d51169561d30","modified":1647401194848},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/newest-comments/disqus-comment.pug","hash":"04b2a5882e789a988e41d45abe606f0617b08e38","modified":1647401194573},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/newest-comments/github-issues.pug","hash":"e846ddfe4a63b15d1416f6055f5756af5e3da7c6","modified":1647401194697},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/newest-comments/index.pug","hash":"f6506ccfd1ce994b9e53aa95588d0b6dbad11411","modified":1647401194743},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/newest-comments/twikoo-comment.pug","hash":"ac811c1d6e0bf08aeb933ade1b9557e0c560d0c9","modified":1647401195003},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/newest-comments/waline.pug","hash":"5e32d903903c76db55a625640f9417d15a3a312f","modified":1647401195044},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/newest-comments/valine.pug","hash":"9028efac78e4122acd734edd5ef9110ef3f05cd1","modified":1647401195031},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/share/add-this.pug","hash":"2980f1889226ca981aa23b8eb1853fde26dcf89a","modified":1647401194446},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/share/addtoany.pug","hash":"309f51bc5302e72fc469d54c577fbcfe57fb07a8","modified":1647401194459},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/share/index.pug","hash":"4c4a9c15215ae8ac5eadb0e086b278f76db9ee92","modified":1647401194753},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/share/share-js.pug","hash":"006acc91ce25fc7c7d778ca043e970f57dc46b83","modified":1647401194978},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/search/algolia.pug","hash":"c92df4f9d0611cf44c1a4491e226f242ec80f5bb","modified":1647401194461},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/search/index.pug","hash":"da3b9437d061ee68dbc383057db5c73034c49605","modified":1647401194752},{"_id":"node_modules/hexo-theme-butterfly/source/css/_highlight/highlight/diff.styl","hash":"cf1fae641c927621a4df1be5ca4a853b9b526e23","modified":1647401195118},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/search/local-search.pug","hash":"8ce336a4c8cae81b58ee26ff51040ca650ff1519","modified":1647401194813},{"_id":"node_modules/hexo-theme-butterfly/source/css/_highlight/prismjs/index.styl","hash":"5dc2e0bcae9a54bfb9bdcc82d02ae5a3cf1ca97d","modified":1647401195196},{"_id":"node_modules/hexo-theme-butterfly/source/css/_highlight/highlight/index.styl","hash":"18804c58239d95798fa86d0597f32d7f7dd30051","modified":1647401195193},{"_id":"node_modules/hexo-theme-butterfly/source/css/_highlight/prismjs/diff.styl","hash":"5972c61f5125068cbe0af279a0c93a54847fdc3b","modified":1647401195131},{"_id":"node_modules/hexo-theme-butterfly/source/css/_highlight/prismjs/line-number.styl","hash":"8970cc1916c982b64a1478792b2822d1d31e276d","modified":1647401195213},{"_id":"source/_posts/sublimeText4Purchase/image-20220114154528250.png","hash":"86088922bd6dc90ae61f5c4e465a0586ee00c259","modified":1642383002020},{"_id":"node_modules/hexo-theme-butterfly/source/js/search/local-search.js","hash":"ec62117f38e095425f295b1170c222c7a1399425","modified":1647401194353},{"_id":"source/images/gjh.png","hash":"eb8d94df48ebed96df0a5f18dfdb6d62b2c3eac1","modified":1644807969776},{"_id":"public/js/search/local-search.js","hash":"faef5153fbe092e5951ca27c9a5222bf1f3fb6de","modified":1647402256922},{"_id":"public/ _data/link.json","hash":"f4a95c1dd648fab1b3d2035bca08483ec9cb4fca","modified":1647402256922},{"_id":"public/ _data/valine.json","hash":"c4f8467a1017cb9c6bdc9f7ba059ef24355bf2c5","modified":1647402256922},{"_id":"public/search.xml","hash":"133eb3ac73f8a629f36d7b2cd61314dfe81da906","modified":1647402256922},{"_id":"public/404.html","hash":"0a67effbd09f02226ce1bd7690ec097780a05b30","modified":1647499517679},{"_id":"public/Gallery/index.html","hash":"e401b8b8c02716ec46196d54219d9d62bb529519","modified":1647499517679},{"_id":"public/bg/index.html","hash":"4c3a8d0197e9dd2e22c2574e7a802b14ad64676b","modified":1647499517679},{"_id":"public/categories/index.html","hash":"c68114af83a3fb3a1fbf4b46207c57c7fc2cbd10","modified":1647499517679},{"_id":"public/about/index.html","hash":"4b496a1d9912dade253454f4578d82fc87f0a51b","modified":1647499517679},{"_id":"public/music/index.html","hash":"9e03030c477fcbe418ed8eed53485da9e5fd94e1","modified":1647499517679},{"_id":"public/link/index.html","hash":"4cbe16b22ca65c426a2f7e7812c2ad1a794efb52","modified":1647499517679},{"_id":"public/tags/index.html","hash":"88791744c3287037cd34b4ec8801cb8edb6da233","modified":1647499517679},{"_id":"public/wallpaper/index.html","hash":"af2f93e8c3fed5d6f9d4cb62f7839c2b72167575","modified":1647499517679},{"_id":"public/post/mystery0311/index.html","hash":"5eb4c47324381e5883ea82886e4b0f25be6c66e9","modified":1647402256922},{"_id":"public/post/day20220311/index.html","hash":"9ab5c33154a03f39505a4b67c2ed0f3d9f2e1665","modified":1647402256922},{"_id":"public/post/question20220310-1/index.html","hash":"9117c1383bb4d4c26a2c9c2a6ab3576793fbb2f9","modified":1647402256922},{"_id":"public/post/mystery0310/index.html","hash":"d443c00fe2b4529df04a6d8db43143192c792d99","modified":1647402256922},{"_id":"public/post/day20220310/index.html","hash":"73c82da10b58ca975792401d2242a432b28d24bd","modified":1647402256922},{"_id":"public/post/day20220309/index.html","hash":"6714c70001264fcf508f115be9eef9c053538fcc","modified":1647402256922},{"_id":"public/post/day20220307/index.html","hash":"76a7c58e561bf06b57aa4213b5974b01bcd6154f","modified":1647402256922},{"_id":"public/post/mystery0307/index.html","hash":"efce4681bf523ff34b5fc3ffa13073bdf69b2764","modified":1647402256922},{"_id":"public/post/mystery0305/index.html","hash":"a8187d3a2e59c355ecc2ef85def9305932ba47c9","modified":1647402256922},{"_id":"public/post/mystery0304/index.html","hash":"c827ed8b46978c9e1e52716540294bba56c45301","modified":1647402256922},{"_id":"public/post/pyMulCom/index.html","hash":"accc908ad7f39a0678ec818b744d7d7c8abe6c64","modified":1647402256922},{"_id":"public/post/pyListSlice/index.html","hash":"3b72655a95938ba9e1ff601b6721dbe6748302a7","modified":1647402256922},{"_id":"public/post/pyUsefulFun/index.html","hash":"d46ad98815dc5b7b360f5d56ade952e3f06f51b6","modified":1647402256922},{"_id":"public/post/day20220214/index.html","hash":"2ba8e5c16415e101ab612339e2b821d6f990ec26","modified":1647402256922},{"_id":"public/post/day20220213/index.html","hash":"04a8ad6681696ae1bc9f9766aa6eb5aa0856f2e4","modified":1647402256922},{"_id":"public/post/day20220212/index.html","hash":"8deb517fbfa6b54142e1df218cdd820ecb23bc4a","modified":1647402256922},{"_id":"public/post/gitPushMoreRepo/index.html","hash":"c96f73b17f9b9f601e8bd4424da348863188d799","modified":1647402256922},{"_id":"public/post/day20220211/index.html","hash":"4bebdcb8addfaac9fbfcf2e63dd61696ffb9de1b","modified":1647402256922},{"_id":"public/post/putWebsiteToSearchEngine/index.html","hash":"911ae084503d68e1477d0b43a680b31e50b9dbd1","modified":1647402256922},{"_id":"public/post/day20220205/index.html","hash":"1fc2fd8fa2d10e40e941fd215cd54e3b443ff68a","modified":1647402256922},{"_id":"public/post/day20220204/index.html","hash":"f2a6a6ad08d830a0128d810dbf046e55ccfc7c1b","modified":1647402256922},{"_id":"public/post/seata141demo/index.html","hash":"9cc9aa0742d9c068c7270f50adab8849ba850d30","modified":1647402256922},{"_id":"public/post/day20220125/index.html","hash":"cbcea9b3e5e2052fc5264688f233172a6bff4b75","modified":1647402256922},{"_id":"public/post/day20220124/index.html","hash":"ceea96ef7ac4886d26e685d66ad22c5f7b6ce5a2","modified":1647402256922},{"_id":"public/post/day20220121/index.html","hash":"b38556623d01beb61ff9d3a44c235439f581d645","modified":1647402256922},{"_id":"public/post/day20220120/index.html","hash":"0da859ffa4280e6b79e3a86db54b2e549ddec991","modified":1647402256922},{"_id":"public/post/day20220119/index.html","hash":"891a698552dc0beeb13856d354bb4a026046ee07","modified":1647402256922},{"_id":"public/post/day20220118/index.html","hash":"be0b77cfdf8c46efd7b10e68a55302bb7454d29d","modified":1647402256922},{"_id":"public/post/sublimeText4Purchase/index.html","hash":"fe0ad11afabe7b96856a3be518af13b32084cdad","modified":1647402256922},{"_id":"public/post/nexusCreate/index.html","hash":"3ee8f5f1d7f51a3daa0cfbb01d3ebf77bdc8d7f1","modified":1647402256922},{"_id":"public/post/jpaCompositePK/index.html","hash":"2646e00bc06cffa7a1ed91913267c16a47fdfe96","modified":1647402256922},{"_id":"public/post/pyControl/index.html","hash":"9dcc16d9a634e9da3232a66d4fc9087c3704d177","modified":1647402256922},{"_id":"public/post/pyListSort/index.html","hash":"fa5b4d6b06fc11374b79c05ee24e9331b463b039","modified":1647402256922},{"_id":"public/post/hello-world/index.html","hash":"304a81718061be09e63532efd5387e25c72263ea","modified":1647402256922},{"_id":"public/archives/index.html","hash":"e18ce8410984fa008b433847f0b21888e0c1613a","modified":1647499517679},{"_id":"public/archives/page/2/index.html","hash":"ba26c0da41421746834c23feba686bfb9165a0bf","modified":1647499517679},{"_id":"public/archives/page/3/index.html","hash":"a7c99586a01393bca52b5f0c827fd207b03d7bd7","modified":1647499517679},{"_id":"public/archives/page/4/index.html","hash":"0be75e0ae94a2ddd2a74bfccda3f55aed4852dbe","modified":1647499517679},{"_id":"public/archives/2021/index.html","hash":"b34bbfcb2201a9224fccbe8c79da17eac5de2b85","modified":1647499517679},{"_id":"public/archives/2021/12/index.html","hash":"5f152fc2f3677a641326cd4f566c7566b74fca0d","modified":1647499517679},{"_id":"public/archives/2022/index.html","hash":"07545837486cc970d7323199d20d1e7f162b33f4","modified":1647499517679},{"_id":"public/archives/2022/page/2/index.html","hash":"0543cd6f9c477a2f747bd22aa1f9430889bf9bd0","modified":1647499517679},{"_id":"public/archives/2022/page/3/index.html","hash":"6932ff0471a1e15bf51b469f0a59e0446c80e188","modified":1647499517679},{"_id":"public/archives/2022/page/4/index.html","hash":"61123098fd0537e30c4618a79b66ad7c81b45169","modified":1647499517679},{"_id":"public/archives/2022/01/index.html","hash":"722b045a6d8ef649ac4c2cf8cdfe98651be0c3fc","modified":1647499517679},{"_id":"public/archives/2022/02/index.html","hash":"37766f707533f9c70f42e7ad2980e5e6f0a7ba01","modified":1647499517679},{"_id":"public/archives/2022/03/index.html","hash":"4a2e373b6c6f821ce355887dc34683f6ae5248b9","modified":1647499517679},{"_id":"public/archives/2022/03/page/2/index.html","hash":"acb1fd4f1aec7d2aaf1b850287befb41d09bf23c","modified":1647499517679},{"_id":"public/categories/算法/index.html","hash":"c3ac342ad2936dbf1ef21548cd7dc09f63156d05","modified":1647499517679},{"_id":"public/categories/算法/page/2/index.html","hash":"c1f71cb72a609bddd04eedbc3c3c1b6aaa23d8ce","modified":1647499517679},{"_id":"public/categories/算法/力扣/index.html","hash":"65f37c0bef8c3dae7034c93f389a357d11ae3eb8","modified":1647499517679},{"_id":"public/categories/算法/力扣/page/2/index.html","hash":"546688fd90d5e3ce71a92744e619200fc3f46b91","modified":1647499517679},{"_id":"public/categories/算法/力扣/每日一题/index.html","hash":"0e7bc8998e7de82fd1ff3ea98630bf124f2c3e66","modified":1647499517679},{"_id":"public/categories/算法/力扣/每日一题/page/2/index.html","hash":"a3c69c38beb76a4211e3f0beee79917c13a2a463","modified":1647499517679},{"_id":"public/categories/git/index.html","hash":"f14a4f8a2992a3050ffb534d83f2534e4d13ed5f","modified":1647499517679},{"_id":"public/categories/推理/index.html","hash":"ce822cef788445ea730b6a734110b1d9eb497211","modified":1647499517679},{"_id":"public/categories/java/index.html","hash":"9f3e313dfac09b686ddaa49d0a0cba41e1db9634","modified":1647499517679},{"_id":"public/categories/nexus/index.html","hash":"0ff41e3e0bf5109a7ab1536db338d3cd530eba9d","modified":1647499517679},{"_id":"public/categories/网站建设/index.html","hash":"fbddffe2d2952453bf3814ed3f14c63fd5691dcf","modified":1647499517679},{"_id":"public/categories/python/index.html","hash":"94431a777c059ebd9f929d710e8f6dc457cbee01","modified":1647499517679},{"_id":"public/categories/java/jpa/index.html","hash":"56e29c8c7d7cf24c43c50ebbe59423be9657d24c","modified":1647499517679},{"_id":"public/categories/java/seata/index.html","hash":"822f3bf1bd2ab7f7d4422386936276921dae7edb","modified":1647499517679},{"_id":"public/categories/问题记录/index.html","hash":"c8dc2bc0b1e5bd32c8787eb0fd58b3ca0d4009ef","modified":1647499517679},{"_id":"public/categories/破解方法/index.html","hash":"d6dc5a41102aa8254ac56de771327aad7e75a70e","modified":1647499517679},{"_id":"public/index.html","hash":"f7942148ec9f80f9707a99d3f623af77694612ed","modified":1647499517679},{"_id":"public/page/2/index.html","hash":"832d9c624df934a31765b0d72083fcb5589d1e4a","modified":1647499517679},{"_id":"public/page/3/index.html","hash":"bbe4082402706521eb577942e012d64958124030","modified":1647499517679},{"_id":"public/page/4/index.html","hash":"4060e3e14c9fee59b31727b06bacc34655c6d660","modified":1647499517679},{"_id":"public/tags/力扣/index.html","hash":"1e5db8731589a7191a28d73a3a613cb5dec49d52","modified":1647499517679},{"_id":"public/tags/力扣/page/2/index.html","hash":"7ec705e4f2a284279dddfb3ab976eaa603c8822a","modified":1647499517679},{"_id":"public/tags/git/index.html","hash":"1cd339c111f920335c50163316053b06d7647ee4","modified":1647499517679},{"_id":"public/tags/推理界的今天/index.html","hash":"81edeab088550cc33f913dea6f7cf22daef69bf3","modified":1647499517679},{"_id":"public/tags/java/index.html","hash":"c549277463e99edb2393bb74fbf7bb0a830dea7c","modified":1647499517679},{"_id":"public/tags/jpa/index.html","hash":"cce8d505a27b85256a418cd09060aefe94d5785c","modified":1647499517679},{"_id":"public/tags/搜索引擎/index.html","hash":"30c20bbc363f2a5a7d22ad12fadaec4db51d9418","modified":1647499517679},{"_id":"public/tags/maven/index.html","hash":"1610644be4a03c1f16131390186f28fe9c463bf0","modified":1647499517679},{"_id":"public/tags/nexus/index.html","hash":"a36b59102c510670d1cb795c7622a134aeb1ed06","modified":1647499517679},{"_id":"public/tags/学习笔记/index.html","hash":"8ec1cf044492c9f72e72d81673310a3d891b6eda","modified":1647499517679},{"_id":"public/tags/python/index.html","hash":"17b9185096401987fb9efbf27daf28e7a5c759ff","modified":1647499517679},{"_id":"public/tags/seata/index.html","hash":"037df6c5be1f264bb9d29f917ff54d8e1147efbf","modified":1647499517679},{"_id":"public/tags/破解/index.html","hash":"8c53d822eb3c5466ee535cfd936202b5664d9889","modified":1647499517679},{"_id":"public/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1647402256922},{"_id":"public/img/favicon.png","hash":"3cf89864b4f6c9b532522a4d260a2e887971c92d","modified":1647402256922},{"_id":"public/link/AnotherRedisDesktopManager.png","hash":"f5d4a37281a521e453578a5efb26fdb759118e07","modified":1647402256922},{"_id":"public/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1647402256922},{"_id":"public/link/idea.png","hash":"6c89f00d2862f89837a1b432429b027914774743","modified":1647402256922},{"_id":"public/link/jdgui.png","hash":"fc2837240b55a63fa7a4d9163559be7d64bc702a","modified":1647402256922},{"_id":"public/link/datagrip.png","hash":"aa317c6d8e0a85b6bca31517ecbbd50db6746e6a","modified":1647402256922},{"_id":"public/link/kafka.png","hash":"74ae6f9aa0843be5cd83e87141ca298dc65dd158","modified":1647402256922},{"_id":"public/link/jui.png","hash":"38e01ae04f2aa135f7794f53227b15883942e5c7","modified":1647402256922},{"_id":"public/link/jdk.png","hash":"1157487ecfd838bd52c0185aa41d491c4d8e2ded","modified":1647402256922},{"_id":"public/link/nginx.png","hash":"ade7f203ca7daebb5c102ca94d72fb95ca3fa015","modified":1647402256922},{"_id":"public/link/pycharm.png","hash":"5ac649e6bf8cde216db8c36b4d4eba7f999f666c","modified":1647402256922},{"_id":"public/link/rabbitmq.png","hash":"590e3739240026e0ba88bf70ffe21474e9cf7f20","modified":1647402256922},{"_id":"public/images/WeaselLong.jpg","hash":"fab9fb7f21bf0317822e797f180cdca70465c2d4","modified":1647402256922},{"_id":"public/link/webstorm.png","hash":"cb07d5812778c779914a0480f1693a95d9c19ae9","modified":1647402256922},{"_id":"public/link/xshell.png","hash":"2921bd09d9e10264cdf23565ce88a1321dffbcda","modified":1647402256922},{"_id":"public/link/yapi.png","hash":"ffb2431afae088e6d03d550791da2389f5720b92","modified":1647402256922},{"_id":"public/images/logo.png","hash":"fbe28f905637f2bca7fe7e9ed99da71e4a79d3ae","modified":1647402256922},{"_id":"public/post/day20220213/1536_ex1_upd.jpeg","hash":"de9d9cf87a5014da884edef0f4a3a567a16d4cbd","modified":1647402256922},{"_id":"public/post/day20220310/bg.jpeg","hash":"24bb7768d31db65487b9cd5ba01e3d31eda6617f","modified":1647402256922},{"_id":"public/post/day20220213/1536_ex2_upd.jpeg","hash":"b819f149e17daafe0cc271a5d6cb355b5d234416","modified":1647402256922},{"_id":"public/post/nexusCreate/1A658347.png","hash":"928311dbf17bb72a8c1a4f9714e7791fc5ffe65c","modified":1647402256922},{"_id":"public/post/nexusCreate/image-20220112202513617.png","hash":"03541f6127dcc4d03b8f2b7aa9a45b6e7ee69558","modified":1647402256922},{"_id":"public/post/nexusCreate/image-20220112204407509.png","hash":"ebf83c4522609999971402b982bdf86967ca6adf","modified":1647402256922},{"_id":"public/post/nexusCreate/image-20220112203927784.png","hash":"c8ecb9d0600f00dae3f2e6230c81fc2775ea10ae","modified":1647402256922},{"_id":"public/post/nexusCreate/image-20220112204921432.png","hash":"7ba35c07910d9b2799e625ba2b7b11036652f3d6","modified":1647402256922},{"_id":"public/post/nexusCreate/image-20220112205557025.png","hash":"da96eb5aaf2357e3d5a89dd77d762748b72d38c1","modified":1647402256922},{"_id":"public/post/nexusCreate/image-20220112212243615.png","hash":"b484e6b4a9cfe1f063de17080457e70707f46fed","modified":1647402256922},{"_id":"public/post/nexusCreate/image-20220112214220341.png","hash":"f5d92dc47282b668be4b4e4061f0c69cb254f900","modified":1647402256922},{"_id":"public/post/nexusCreate/image-20220112214506743.png","hash":"62ad6f02e00f67761867c51bbcb4b64a1ed0e2f1","modified":1647402256922},{"_id":"public/post/nexusCreate/image-20220112214717867.png","hash":"dabc261030d2e8d3237fca662109b1ed395e1284","modified":1647402256922},{"_id":"public/post/nexusCreate/image-20220112214637528.png","hash":"0f5ba6e53179e542c5717cb0c63d7251f60ea688","modified":1647402256922},{"_id":"public/post/nexusCreate/image-20220112214820826.png","hash":"966c02c84ac0cfcb9c4d4a35c377f266a92726c4","modified":1647402256922},{"_id":"public/post/nexusCreate/image-20220112215708898.png","hash":"61138282d1e7e9a18dbddb6bfdaae6fb427f4700","modified":1647402256922},{"_id":"public/post/nexusCreate/image-20220112214831857.png","hash":"e71ee4b6f71ebca05168782a2b26511fcc4a0738","modified":1647402256922},{"_id":"public/post/nexusCreate/image-20220112215809631.png","hash":"2e94631128761f962f3beea80fd1177ea90a3cd3","modified":1647402256922},{"_id":"public/post/nexusCreate/image-20220112215951755.png","hash":"bf466e4f5a3724bf3a2c5e8d6d02b83c9cb1b432","modified":1647402256922},{"_id":"public/post/nexusCreate/image-20220112221637473.png","hash":"155b77f021e8bc65e9980105c8486fa789e91bab","modified":1647402256922},{"_id":"public/post/question20220310-1/bg.jpeg","hash":"a11c1466b533dd62d55697b3aa42e9c128103be7","modified":1647402256922},{"_id":"public/post/sublimeText4Purchase/image-20220114155341371.png","hash":"44757f86776c7e43375c9b8655b9c01fca5521f8","modified":1647402256922},{"_id":"public/post/sublimeText4Purchase/image-20220114155558214.png","hash":"035ce7c26f51fadab6eb64ad45a6cd4a42e4a8af","modified":1647402256922},{"_id":"public/images/avatar.jpeg","hash":"96aafacca4dee9d5244a865f97d388b1e2e6da5a","modified":1647402256922},{"_id":"public/post/nexusCreate/image-20220112211546086.png","hash":"d0de4224b0a8d83811956f7f7143d6632e8ccd95","modified":1647402256922},{"_id":"public/post/nexusCreate/image-20220112211948810.png","hash":"e71015033a0d78d97af65ecbae655c6ba2c4e7bf","modified":1647402256922},{"_id":"public/post/nexusCreate/image-20220112212410144.png","hash":"af039630b66495f82f5735076964e7edee625f38","modified":1647402256922},{"_id":"public/post/nexusCreate/image-20220112220131151.png","hash":"c3ea21681a8c3c6b8678d1cfdddb8cfc016c023b","modified":1647402256922},{"_id":"public/post/nexusCreate/image-20220112220511830.png","hash":"23987ac51f17611935d69a4ad67e185d6800baf1","modified":1647402256922},{"_id":"public/post/nexusCreate/image-20220112220741095.png","hash":"a6eb80658e6691867633869feda9e49aa290865d","modified":1647402256922},{"_id":"public/post/nexusCreate/image-20220112221401367.png","hash":"ba0b1b60a0b7553166311310a158e7a11f35dac1","modified":1647402256922},{"_id":"public/post/nexusCreate/image-20220112221517343.png","hash":"09f13482ac33ce11d6d809c1be26b36da0059414","modified":1647402256922},{"_id":"public/post/nexusCreate/image-20220112221849871.png","hash":"31e9d8fe4f0d50b1157609adb7b73e192361e043","modified":1647402256922},{"_id":"public/post/nexusCreate/image-20220112223312451.png","hash":"682c3c7dad92d974d9cfdb0a87acb80bbbf43818","modified":1647402256922},{"_id":"public/post/nexusCreate/image-20220112224909515.png","hash":"273802e42499373e429f2f66d60ce144b2f21249","modified":1647402256922},{"_id":"public/post/nexusCreate/image-20220112230645860.png","hash":"5f46697b3c40e5aeefb0c473b326c84286070cff","modified":1647402256922},{"_id":"public/post/sublimeText4Purchase/image-20220114155104130.png","hash":"fa188c572dd0901c1dd7db14570321fd874249cc","modified":1647402256922},{"_id":"public/post/sublimeText4Purchase/image-20220114155245648.png","hash":"1b3aa8df2d43f623d8e789e50e2cceddf5cd44e0","modified":1647402256922},{"_id":"public/css/var.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1647402256922},{"_id":"public/js/utils.js","hash":"0b95daada72abb5d64a1e3236049a60120e47cca","modified":1647402256922},{"_id":"public/js/search/algolia.js","hash":"aaa5e44125dcf321866bc2355a73773b11db8c9c","modified":1647402256922},{"_id":"public/css/index.css","hash":"78329d6204bf359fae7088df3cfd355d74fdf34b","modified":1647402256922},{"_id":"public/js/main.js","hash":"04efcbd28b37875cfec88eb87cab7256a9ebb327","modified":1647402256922},{"_id":"public/js/tw_cn.js","hash":"00053ce73210274b3679f42607edef1206eebc68","modified":1647402256922},{"_id":"public/images/alipay.png","hash":"300c66513a784f35174b5db09fe96e49c501cec0","modified":1647402256922},{"_id":"public/images/wechat.png","hash":"1c7c579dca0c8612445acec0d2fc56a07fa73e74","modified":1647402256922},{"_id":"public/post/day20220118/bg.jpeg","hash":"a88c53650ff208c971e622f2dac860784f898969","modified":1647402256922},{"_id":"public/post/day20220120/bg.jpeg","hash":"ef479b44558abc0915d7ea8f30de5d33eba6f565","modified":1647402256922},{"_id":"public/post/sublimeText4Purchase/img.png","hash":"048beb0cb34a7ebb5d85fefd94c6d53f791cc5d5","modified":1647402256922},{"_id":"public/images/bg.jpeg","hash":"c2b5ac45b440a9bcf08951ff4b83eea2c502daea","modified":1647402256922},{"_id":"public/post/day20220119/bg.jpeg","hash":"d849225c11c973e549c1c6706025671495341889","modified":1647402256922},{"_id":"public/post/sublimeText4Purchase/bg.jpeg","hash":"b5ea7fcebc03e8ab5e3008ec7d65c71536ba1b3c","modified":1647402256922},{"_id":"public/post/sublimeText4Purchase/image-20220114153619254.png","hash":"8b0511461b8b0717aec5536339ba0f3692d42024","modified":1647402256922},{"_id":"public/post/day20220121/bg.jpeg","hash":"f4d28cd025fd48cb31a1541b1dc426abe2a208ac","modified":1647402256922},{"_id":"public/post/pyControl/bg.jpeg","hash":"c43f58191b438e23c0b4239cae3783fb7a19f508","modified":1647402256922},{"_id":"public/post/pyListSort/bg.jpeg","hash":"6d4e40b2505465124e359f0a07bf98b661844783","modified":1647402256922},{"_id":"public/post/nexusCreate/image-20220112230213213.png","hash":"ac490f98b757bb557ebfb3b0fc4be1df6e53464c","modified":1647402256922},{"_id":"public/post/jpaCompositePK/bg.jpg","hash":"af3ff6b0eb635ed02714edb5af1c0f6fde48c3f5","modified":1647402256922},{"_id":"public/post/nexusCreate/bg.jpeg","hash":"8bbae5df02ef58fab4c03dabc58765994e6d5d4b","modified":1647402256922},{"_id":"public/post/sublimeText4Purchase/image-20220114154843108.png","hash":"a3b9f1acf5cc2c26651de90fa81c397a07d64437","modified":1647402256922},{"_id":"public/post/sublimeText4Purchase/image-20220114154528250.png","hash":"86088922bd6dc90ae61f5c4e465a0586ee00c259","modified":1647402256922},{"_id":"public/images/gjh.png","hash":"eb8d94df48ebed96df0a5f18dfdb6d62b2c3eac1","modified":1647402256922}],"Category":[{"name":"算法","_id":"cl0t0rrkx00044ctuflszhp7f"},{"name":"力扣","parent":"cl0t0rrkx00044ctuflszhp7f","_id":"cl0t0rrl7000s4ctu8iv3dix6"},{"name":"每日一题","parent":"cl0t0rrl7000s4ctu8iv3dix6","_id":"cl0t0rrll00264ctu4a8fbffk"},{"name":"git","_id":"cl0t0rrls003n4ctu0z8a1mmo"},{"name":"推理","_id":"cl0t0rrlt003y4ctud3gr4bty"},{"name":"java","_id":"cl0t0rrlu00424ctu9n8kbwmk"},{"name":"网站建设","_id":"cl0t0rrlw004k4ctu9bthb44n"},{"name":"nexus","_id":"cl0t0rrlw004t4ctubkce9tyr"},{"name":"python","_id":"cl0t0rrlx00504ctu3zeaa7dq"},{"name":"jpa","parent":"cl0t0rrlu00424ctu9n8kbwmk","_id":"cl0t0rrlz005c4ctu103r1l8f"},{"name":"seata","parent":"cl0t0rrlu00424ctu9n8kbwmk","_id":"cl0t0rrm3005q4ctuc8s87mq1"},{"name":"问题记录","_id":"cl0t0rrm3005u4ctue6h3318v"},{"name":"破解方法","_id":"cl0t0rrm4005y4ctufemp9q4m"}],"Data":[{"_id":"link","data":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.gitee.io/zh-CN/","avatar":"https://element-plus.gitee.io/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"}]}]},{"_id":"valine","data":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"}}],"Page":[{"title":"照片","date":"2021-11-29T14:22:00.000Z","type":"Gallery","_content":"<div class=\"gallery-group-main\">\n{% galleryGroup '壁紙' '收藏的一些壁紙' '/wallpaper' https://i.loli.net/2019/11/10/T7Mu8Aod3egmC4Q.png %}\n{% galleryGroup '背景图' '博客中使用的背景图' '/bg' https://blog.huangge1199.cn/images/bg.jpeg %}\n</div>\n","source":"Gallery/index.md","raw":"---\ntitle: 照片\ndate: 2021-11-29 22:22:00\ntype: \"Gallery\"\n---\n<div class=\"gallery-group-main\">\n{% galleryGroup '壁紙' '收藏的一些壁紙' '/wallpaper' https://i.loli.net/2019/11/10/T7Mu8Aod3egmC4Q.png %}\n{% galleryGroup '背景图' '博客中使用的背景图' '/bg' https://blog.huangge1199.cn/images/bg.jpeg %}\n</div>\n","updated":"2021-12-29T09:26:41.176Z","path":"Gallery/index.html","comments":1,"layout":"page","_id":"cl0t0rrkr00004ctu0dgq2zdk","content":"<div class=\"gallery-group-main\">\n\n  <figure class=\"gallery-group\">\n  <img class=\"gallery-group-img no-lightbox\" src='https://i.loli.net/2019/11/10/T7Mu8Aod3egmC4Q.png' alt=\"Group Image Gallery\">\n  <figcaption>\n  <div class=\"gallery-group-name\">壁紙</div>\n  <p>收藏的一些壁紙</p>\n  <a href='/wallpaper'></a>\n  </figcaption>\n  </figure>\n  \n\n  <figure class=\"gallery-group\">\n  <img class=\"gallery-group-img no-lightbox\" src='https://blog.huangge1199.cn/images/bg.jpeg' alt=\"Group Image Gallery\">\n  <figcaption>\n  <div class=\"gallery-group-name\">背景图</div>\n  <p>博客中使用的背景图</p>\n  <a href='/bg'></a>\n  </figcaption>\n  </figure>\n  \n</div>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.gitee.io/zh-CN/","avatar":"https://element-plus.gitee.io/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"}}},"cover":"https://blog.huangge1199.cn/images/bg.jpeg","excerpt":"","more":"<div class=\"gallery-group-main\">\n\n  <figure class=\"gallery-group\">\n  <img class=\"gallery-group-img no-lightbox\" src='https://i.loli.net/2019/11/10/T7Mu8Aod3egmC4Q.png' alt=\"Group Image Gallery\">\n  <figcaption>\n  <div class=\"gallery-group-name\">壁紙</div>\n  <p>收藏的一些壁紙</p>\n  <a href='/wallpaper'></a>\n  </figcaption>\n  </figure>\n  \n\n  <figure class=\"gallery-group\">\n  <img class=\"gallery-group-img no-lightbox\" src='https://blog.huangge1199.cn/images/bg.jpeg' alt=\"Group Image Gallery\">\n  <figcaption>\n  <div class=\"gallery-group-name\">背景图</div>\n  <p>博客中使用的背景图</p>\n  <a href='/bg'></a>\n  </figcaption>\n  </figure>\n  \n</div>\n"},{"_content":"- class_name: 博客相关\n  link_list:\n    - name: Hexo\n      link: https://hexo.io/zh-tw/\n      avatar: https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg\n      descr: 快速、简单且强大的网站框架\n    - name: Valine\n      link: https://valine.js.org/\n      avatar: https://valine.js.org/images/valine.png\n      descr: 一款快速、简洁且高效的无后端评论系统\n    - name: 百度统计\n      link: https://tongji.baidu.com/\n      avatar: https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690\n      descr: 领先的中文网站分析平台\n    - name: 墨滴编辑器\n      link: https://editor.mdnice.com/\n      avatar: https://mdnice.com/favicon.svg\n      descr: 可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式\n    - name: v-md-editor\n      link: https://ckang1229.gitee.io/vue-markdown-editor/zh/\n      avatar:\n      descr: Vue的一款markdown插件（支持vue2和vue3）\n\n- class_name: 视频学习\n  link_list:\n    - name: 咕泡云课堂\n      link: https://ke.gupaoedu.cn/\n      avatar: https://ke.gupaoedu.cn/favicon.ico\n      descr: 咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播\n    - name: 谷粒学苑\n      link: https://www.gulixueyuan.com/\n      avatar: https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6\n      descr: 谷粒学苑为尚硅谷旗下IT课程在线学习平台\n\n- class_name: 开发工具\n  link_list:\n    - name: jdk\n      link: https://www.oracle.com/java/technologies/downloads/\n      avatar: https://blog.huangge1199.cn/link/jdk.png\n      descr: Java语言的软件开发工具包\n    - name: IDEA\n      link: https://www.jetbrains.com/zh-cn/idea/\n      avatar: https://blog.huangge1199.cn/link/idea.png\n      descr: 功能强大、符合人体工程学的 Java IDE\n    - name: webstorm\n      link: https://www.jetbrains.com/zh-cn/webstorm/\n      avatar: https://blog.huangge1199.cn/link/webstorm.png\n      descr: 一个适用于JavaScript 和相关技术的集成开发环境\n    - name: datagrip\n      link: https://www.jetbrains.com/zh-cn/datagrip/\n      avatar: https://blog.huangge1199.cn/link/datagrip.png\n      descr: 由JetBrains 开发的数据库和SQL 跨平台IDE\n    - name: pyCharm\n      link: https://www.jetbrains.com/zh-cn/pycharm/\n      avatar: https://blog.huangge1199.cn/link/pycharm.png\n      descr: JetBrains为专业开发者提供的Python IDE\n    - name: xshell\n      link: https://www.xshell.com/zh/xshell/\n      avatar: https://blog.huangge1199.cn/link/xshell.png\n      descr: 业界最强大的SSH客户机\n    - name: winscp\n      link: https://winscp.net/eng/index.php\n      avatar: https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990\n      descr: 一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端\n    - name: Another Redis Desktop Manager\n      link: https://github.com/qishibo/AnotherRedisDesktopManager\n      avatar: https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png\n      descr: 更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值\n    - name: JD-GUI\n      link: http://java-decompiler.github.io/\n      avatar: https://blog.huangge1199.cn/link/jdgui.png\n      descr: 一款功能十分强大的JAVA反编译工具\n\n- class_name: 后端开发\n  link_list:\n    - name: sa-token\n      link: https://sa-token.dev33.cn/\n      avatar: https://sa-token.dev33.cn/doc/logo.png\n      descr: 一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！\n    - name: sentinel\n      link: https://sentinelguard.io/\n      avatar: https://sentinelguard.io/img/sentinel.ico\n      descr: 面向分布式服务架构的高可用流量控制组件\n    - name: dubbo\n      link: https://dubbo.apache.org/\n      avatar: https://dubbo.apache.org/favicons/favicon.ico\n      descr: 一款高性能、轻量级的开源服务框架\n    - name: nacos\n      link: https://nacos.io/\n      avatar: https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png\n      descr: 一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台\n    - name: nginx\n      link: https://nginx.org/\n      avatar: https://blog.huangge1199.cn/link/nginx.png\n      descr: 反向代理服务器\n    - name: zookeeper\n      link: https://zookeeper.apache.org/\n      avatar: https://zookeeper.apache.org/images/zookeeper_small.gif\n      descr: 为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册\n    - name: kafka\n      link: https://kafka.apache.org/\n      avatar: https://blog.huangge1199.cn/link/kafka.png\n      descr: 一种分布式的，基于发布 / 订阅的消息系统\n    - name: rabbitmq\n      link: https://www.rabbitmq.com/\n      avatar: https://blog.huangge1199.cn/link/rabbitmq.png\n      descr: 消息队列\n    - name: rocketmq\n      link: https://rocketmq.apache.org/\n      avatar: https://rocketmq.apache.org/assets/images/rmq-logo.png\n      descr: 消息队列\n    - name: justauth\n      link: https://justauth.wiki/\n      avatar: https://justauth.wiki/logo.png\n      descr: 开箱即用的整合第三方登录的开源组件\n    - name: XXL-JOB\n      link: https://www.xuxueli.com/xxl-job/\n      avatar: https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg\n      descr: 分布式任务调度平台\n    - name: MQTT\n      link: https://www.emqx.com/zh/mqtt\n      avatar: https://www.emqx.com/favicon.ico\n      descr: MQTT - 轻量级的物联网消息传输协议\n\n- class_name: 前端开发\n  link_list:\n    - name: vue\n      link: https://cn.vuejs.org/\n      avatar: https://cn.vuejs.org/images/logo.svg\n      descr: 是一套用于构建用户界面的渐进式框架\n    - name: element\n      link: https://element.eleme.cn/#/zh-CN\n      avatar: https://element.eleme.cn/favicon.ico\n      descr: 一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库\n    - name: Element Plus\n      link: https://element-plus.gitee.io/zh-CN/\n      avatar: https://element-plus.gitee.io/images/element-plus-logo-small.svg\n      descr: 一个 Vue 3 UI 框架 | Element Plus\n    - name: vant\n      link: https://youzan.github.io/vant-weapp/#/home\n      avatar: https://img.yzcdn.cn/vant/logo.png\n      descr: 轻量、可靠的小程序 UI 组件库\n    - name: nuxt.js\n      link: https://nuxtjs.org/\n      avatar: https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png\n      descr: 轻量、可靠的小程序 UI 组件库\n    - name: echarts\n      link: https://echarts.apache.org/\n      avatar: https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1\n      descr: 轻量、可靠的小程序 UI 组件库\n    - name: jQuery UI\n      link: https://jui.org/\n      avatar: https://blog.huangge1199.cn/link/jui.png\n      descr: 简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)\n    - name: mavonEditor\n      link: http://www.mavoneditor.com/\n      avatar:\n      descr: Vue的一款markdown插件\n\n- class_name: 辅助工具\n  link_list:\n    - name: YAPI\n      link: http://yapi.smart-xwork.cn/\n      avatar: https://blog.huangge1199.cn/link/yapi.png\n      descr: 高效、易用、功能强大的API管理平台\n    - name: 恒星播放器\n      link: https://www.stellarplayer.com/\n      avatar: https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png\n      descr: 一款纯粹专注的播放器\n","source":" _data/link.yml","raw":"- class_name: 博客相关\n  link_list:\n    - name: Hexo\n      link: https://hexo.io/zh-tw/\n      avatar: https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg\n      descr: 快速、简单且强大的网站框架\n    - name: Valine\n      link: https://valine.js.org/\n      avatar: https://valine.js.org/images/valine.png\n      descr: 一款快速、简洁且高效的无后端评论系统\n    - name: 百度统计\n      link: https://tongji.baidu.com/\n      avatar: https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690\n      descr: 领先的中文网站分析平台\n    - name: 墨滴编辑器\n      link: https://editor.mdnice.com/\n      avatar: https://mdnice.com/favicon.svg\n      descr: 可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式\n    - name: v-md-editor\n      link: https://ckang1229.gitee.io/vue-markdown-editor/zh/\n      avatar:\n      descr: Vue的一款markdown插件（支持vue2和vue3）\n\n- class_name: 视频学习\n  link_list:\n    - name: 咕泡云课堂\n      link: https://ke.gupaoedu.cn/\n      avatar: https://ke.gupaoedu.cn/favicon.ico\n      descr: 咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播\n    - name: 谷粒学苑\n      link: https://www.gulixueyuan.com/\n      avatar: https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6\n      descr: 谷粒学苑为尚硅谷旗下IT课程在线学习平台\n\n- class_name: 开发工具\n  link_list:\n    - name: jdk\n      link: https://www.oracle.com/java/technologies/downloads/\n      avatar: https://blog.huangge1199.cn/link/jdk.png\n      descr: Java语言的软件开发工具包\n    - name: IDEA\n      link: https://www.jetbrains.com/zh-cn/idea/\n      avatar: https://blog.huangge1199.cn/link/idea.png\n      descr: 功能强大、符合人体工程学的 Java IDE\n    - name: webstorm\n      link: https://www.jetbrains.com/zh-cn/webstorm/\n      avatar: https://blog.huangge1199.cn/link/webstorm.png\n      descr: 一个适用于JavaScript 和相关技术的集成开发环境\n    - name: datagrip\n      link: https://www.jetbrains.com/zh-cn/datagrip/\n      avatar: https://blog.huangge1199.cn/link/datagrip.png\n      descr: 由JetBrains 开发的数据库和SQL 跨平台IDE\n    - name: pyCharm\n      link: https://www.jetbrains.com/zh-cn/pycharm/\n      avatar: https://blog.huangge1199.cn/link/pycharm.png\n      descr: JetBrains为专业开发者提供的Python IDE\n    - name: xshell\n      link: https://www.xshell.com/zh/xshell/\n      avatar: https://blog.huangge1199.cn/link/xshell.png\n      descr: 业界最强大的SSH客户机\n    - name: winscp\n      link: https://winscp.net/eng/index.php\n      avatar: https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990\n      descr: 一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端\n    - name: Another Redis Desktop Manager\n      link: https://github.com/qishibo/AnotherRedisDesktopManager\n      avatar: https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png\n      descr: 更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值\n    - name: JD-GUI\n      link: http://java-decompiler.github.io/\n      avatar: https://blog.huangge1199.cn/link/jdgui.png\n      descr: 一款功能十分强大的JAVA反编译工具\n\n- class_name: 后端开发\n  link_list:\n    - name: sa-token\n      link: https://sa-token.dev33.cn/\n      avatar: https://sa-token.dev33.cn/doc/logo.png\n      descr: 一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！\n    - name: sentinel\n      link: https://sentinelguard.io/\n      avatar: https://sentinelguard.io/img/sentinel.ico\n      descr: 面向分布式服务架构的高可用流量控制组件\n    - name: dubbo\n      link: https://dubbo.apache.org/\n      avatar: https://dubbo.apache.org/favicons/favicon.ico\n      descr: 一款高性能、轻量级的开源服务框架\n    - name: nacos\n      link: https://nacos.io/\n      avatar: https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png\n      descr: 一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台\n    - name: nginx\n      link: https://nginx.org/\n      avatar: https://blog.huangge1199.cn/link/nginx.png\n      descr: 反向代理服务器\n    - name: zookeeper\n      link: https://zookeeper.apache.org/\n      avatar: https://zookeeper.apache.org/images/zookeeper_small.gif\n      descr: 为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册\n    - name: kafka\n      link: https://kafka.apache.org/\n      avatar: https://blog.huangge1199.cn/link/kafka.png\n      descr: 一种分布式的，基于发布 / 订阅的消息系统\n    - name: rabbitmq\n      link: https://www.rabbitmq.com/\n      avatar: https://blog.huangge1199.cn/link/rabbitmq.png\n      descr: 消息队列\n    - name: rocketmq\n      link: https://rocketmq.apache.org/\n      avatar: https://rocketmq.apache.org/assets/images/rmq-logo.png\n      descr: 消息队列\n    - name: justauth\n      link: https://justauth.wiki/\n      avatar: https://justauth.wiki/logo.png\n      descr: 开箱即用的整合第三方登录的开源组件\n    - name: XXL-JOB\n      link: https://www.xuxueli.com/xxl-job/\n      avatar: https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg\n      descr: 分布式任务调度平台\n    - name: MQTT\n      link: https://www.emqx.com/zh/mqtt\n      avatar: https://www.emqx.com/favicon.ico\n      descr: MQTT - 轻量级的物联网消息传输协议\n\n- class_name: 前端开发\n  link_list:\n    - name: vue\n      link: https://cn.vuejs.org/\n      avatar: https://cn.vuejs.org/images/logo.svg\n      descr: 是一套用于构建用户界面的渐进式框架\n    - name: element\n      link: https://element.eleme.cn/#/zh-CN\n      avatar: https://element.eleme.cn/favicon.ico\n      descr: 一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库\n    - name: Element Plus\n      link: https://element-plus.gitee.io/zh-CN/\n      avatar: https://element-plus.gitee.io/images/element-plus-logo-small.svg\n      descr: 一个 Vue 3 UI 框架 | Element Plus\n    - name: vant\n      link: https://youzan.github.io/vant-weapp/#/home\n      avatar: https://img.yzcdn.cn/vant/logo.png\n      descr: 轻量、可靠的小程序 UI 组件库\n    - name: nuxt.js\n      link: https://nuxtjs.org/\n      avatar: https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png\n      descr: 轻量、可靠的小程序 UI 组件库\n    - name: echarts\n      link: https://echarts.apache.org/\n      avatar: https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1\n      descr: 轻量、可靠的小程序 UI 组件库\n    - name: jQuery UI\n      link: https://jui.org/\n      avatar: https://blog.huangge1199.cn/link/jui.png\n      descr: 简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)\n    - name: mavonEditor\n      link: http://www.mavoneditor.com/\n      avatar:\n      descr: Vue的一款markdown插件\n\n- class_name: 辅助工具\n  link_list:\n    - name: YAPI\n      link: http://yapi.smart-xwork.cn/\n      avatar: https://blog.huangge1199.cn/link/yapi.png\n      descr: 高效、易用、功能强大的API管理平台\n    - name: 恒星播放器\n      link: https://www.stellarplayer.com/\n      avatar: https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png\n      descr: 一款纯粹专注的播放器\n","date":"2022-03-15T09:00:26.224Z","updated":"2022-03-15T09:00:26.224Z","path":" _data/link.json","layout":"false","title":"","comments":1,"_id":"cl0t0rrkw00024ctu519a6nty","content":"[{\"class_name\":\"博客相关\",\"link_list\":[{\"name\":\"Hexo\",\"link\":\"https://hexo.io/zh-tw/\",\"avatar\":\"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg\",\"descr\":\"快速、简单且强大的网站框架\"},{\"name\":\"Valine\",\"link\":\"https://valine.js.org/\",\"avatar\":\"https://valine.js.org/images/valine.png\",\"descr\":\"一款快速、简洁且高效的无后端评论系统\"},{\"name\":\"百度统计\",\"link\":\"https://tongji.baidu.com/\",\"avatar\":\"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690\",\"descr\":\"领先的中文网站分析平台\"},{\"name\":\"墨滴编辑器\",\"link\":\"https://editor.mdnice.com/\",\"avatar\":\"https://mdnice.com/favicon.svg\",\"descr\":\"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式\"},{\"name\":\"v-md-editor\",\"link\":\"https://ckang1229.gitee.io/vue-markdown-editor/zh/\",\"avatar\":null,\"descr\":\"Vue的一款markdown插件（支持vue2和vue3）\"}]},{\"class_name\":\"视频学习\",\"link_list\":[{\"name\":\"咕泡云课堂\",\"link\":\"https://ke.gupaoedu.cn/\",\"avatar\":\"https://ke.gupaoedu.cn/favicon.ico\",\"descr\":\"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播\"},{\"name\":\"谷粒学苑\",\"link\":\"https://www.gulixueyuan.com/\",\"avatar\":\"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6\",\"descr\":\"谷粒学苑为尚硅谷旗下IT课程在线学习平台\"}]},{\"class_name\":\"开发工具\",\"link_list\":[{\"name\":\"jdk\",\"link\":\"https://www.oracle.com/java/technologies/downloads/\",\"avatar\":\"https://blog.huangge1199.cn/link/jdk.png\",\"descr\":\"Java语言的软件开发工具包\"},{\"name\":\"IDEA\",\"link\":\"https://www.jetbrains.com/zh-cn/idea/\",\"avatar\":\"https://blog.huangge1199.cn/link/idea.png\",\"descr\":\"功能强大、符合人体工程学的 Java IDE\"},{\"name\":\"webstorm\",\"link\":\"https://www.jetbrains.com/zh-cn/webstorm/\",\"avatar\":\"https://blog.huangge1199.cn/link/webstorm.png\",\"descr\":\"一个适用于JavaScript 和相关技术的集成开发环境\"},{\"name\":\"datagrip\",\"link\":\"https://www.jetbrains.com/zh-cn/datagrip/\",\"avatar\":\"https://blog.huangge1199.cn/link/datagrip.png\",\"descr\":\"由JetBrains 开发的数据库和SQL 跨平台IDE\"},{\"name\":\"pyCharm\",\"link\":\"https://www.jetbrains.com/zh-cn/pycharm/\",\"avatar\":\"https://blog.huangge1199.cn/link/pycharm.png\",\"descr\":\"JetBrains为专业开发者提供的Python IDE\"},{\"name\":\"xshell\",\"link\":\"https://www.xshell.com/zh/xshell/\",\"avatar\":\"https://blog.huangge1199.cn/link/xshell.png\",\"descr\":\"业界最强大的SSH客户机\"},{\"name\":\"winscp\",\"link\":\"https://winscp.net/eng/index.php\",\"avatar\":\"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990\",\"descr\":\"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端\"},{\"name\":\"Another Redis Desktop Manager\",\"link\":\"https://github.com/qishibo/AnotherRedisDesktopManager\",\"avatar\":\"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png\",\"descr\":\"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值\"},{\"name\":\"JD-GUI\",\"link\":\"http://java-decompiler.github.io/\",\"avatar\":\"https://blog.huangge1199.cn/link/jdgui.png\",\"descr\":\"一款功能十分强大的JAVA反编译工具\"}]},{\"class_name\":\"后端开发\",\"link_list\":[{\"name\":\"sa-token\",\"link\":\"https://sa-token.dev33.cn/\",\"avatar\":\"https://sa-token.dev33.cn/doc/logo.png\",\"descr\":\"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！\"},{\"name\":\"sentinel\",\"link\":\"https://sentinelguard.io/\",\"avatar\":\"https://sentinelguard.io/img/sentinel.ico\",\"descr\":\"面向分布式服务架构的高可用流量控制组件\"},{\"name\":\"dubbo\",\"link\":\"https://dubbo.apache.org/\",\"avatar\":\"https://dubbo.apache.org/favicons/favicon.ico\",\"descr\":\"一款高性能、轻量级的开源服务框架\"},{\"name\":\"nacos\",\"link\":\"https://nacos.io/\",\"avatar\":\"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png\",\"descr\":\"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台\"},{\"name\":\"nginx\",\"link\":\"https://nginx.org/\",\"avatar\":\"https://blog.huangge1199.cn/link/nginx.png\",\"descr\":\"反向代理服务器\"},{\"name\":\"zookeeper\",\"link\":\"https://zookeeper.apache.org/\",\"avatar\":\"https://zookeeper.apache.org/images/zookeeper_small.gif\",\"descr\":\"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册\"},{\"name\":\"kafka\",\"link\":\"https://kafka.apache.org/\",\"avatar\":\"https://blog.huangge1199.cn/link/kafka.png\",\"descr\":\"一种分布式的，基于发布 / 订阅的消息系统\"},{\"name\":\"rabbitmq\",\"link\":\"https://www.rabbitmq.com/\",\"avatar\":\"https://blog.huangge1199.cn/link/rabbitmq.png\",\"descr\":\"消息队列\"},{\"name\":\"rocketmq\",\"link\":\"https://rocketmq.apache.org/\",\"avatar\":\"https://rocketmq.apache.org/assets/images/rmq-logo.png\",\"descr\":\"消息队列\"},{\"name\":\"justauth\",\"link\":\"https://justauth.wiki/\",\"avatar\":\"https://justauth.wiki/logo.png\",\"descr\":\"开箱即用的整合第三方登录的开源组件\"},{\"name\":\"XXL-JOB\",\"link\":\"https://www.xuxueli.com/xxl-job/\",\"avatar\":\"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg\",\"descr\":\"分布式任务调度平台\"},{\"name\":\"MQTT\",\"link\":\"https://www.emqx.com/zh/mqtt\",\"avatar\":\"https://www.emqx.com/favicon.ico\",\"descr\":\"MQTT - 轻量级的物联网消息传输协议\"}]},{\"class_name\":\"前端开发\",\"link_list\":[{\"name\":\"vue\",\"link\":\"https://cn.vuejs.org/\",\"avatar\":\"https://cn.vuejs.org/images/logo.svg\",\"descr\":\"是一套用于构建用户界面的渐进式框架\"},{\"name\":\"element\",\"link\":\"https://element.eleme.cn/#/zh-CN\",\"avatar\":\"https://element.eleme.cn/favicon.ico\",\"descr\":\"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库\"},{\"name\":\"Element Plus\",\"link\":\"https://element-plus.gitee.io/zh-CN/\",\"avatar\":\"https://element-plus.gitee.io/images/element-plus-logo-small.svg\",\"descr\":\"一个 Vue 3 UI 框架 | Element Plus\"},{\"name\":\"vant\",\"link\":\"https://youzan.github.io/vant-weapp/#/home\",\"avatar\":\"https://img.yzcdn.cn/vant/logo.png\",\"descr\":\"轻量、可靠的小程序 UI 组件库\"},{\"name\":\"nuxt.js\",\"link\":\"https://nuxtjs.org/\",\"avatar\":\"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png\",\"descr\":\"轻量、可靠的小程序 UI 组件库\"},{\"name\":\"echarts\",\"link\":\"https://echarts.apache.org/\",\"avatar\":\"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1\",\"descr\":\"轻量、可靠的小程序 UI 组件库\"},{\"name\":\"jQuery UI\",\"link\":\"https://jui.org/\",\"avatar\":\"https://blog.huangge1199.cn/link/jui.png\",\"descr\":\"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)\"},{\"name\":\"mavonEditor\",\"link\":\"http://www.mavoneditor.com/\",\"avatar\":null,\"descr\":\"Vue的一款markdown插件\"}]},{\"class_name\":\"辅助工具\",\"link_list\":[{\"name\":\"YAPI\",\"link\":\"http://yapi.smart-xwork.cn/\",\"avatar\":\"https://blog.huangge1199.cn/link/yapi.png\",\"descr\":\"高效、易用、功能强大的API管理平台\"},{\"name\":\"恒星播放器\",\"link\":\"https://www.stellarplayer.com/\",\"avatar\":\"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png\",\"descr\":\"一款纯粹专注的播放器\"}]}]","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.gitee.io/zh-CN/","avatar":"https://element-plus.gitee.io/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"}}},"cover":"https://file.huangge1199.cn/group1/M00/00/00/CgAYB2HzmTKAcuJeAAKgw-sbfmQ23.jpeg","excerpt":"","more":"[{\"class_name\":\"博客相关\",\"link_list\":[{\"name\":\"Hexo\",\"link\":\"https://hexo.io/zh-tw/\",\"avatar\":\"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg\",\"descr\":\"快速、简单且强大的网站框架\"},{\"name\":\"Valine\",\"link\":\"https://valine.js.org/\",\"avatar\":\"https://valine.js.org/images/valine.png\",\"descr\":\"一款快速、简洁且高效的无后端评论系统\"},{\"name\":\"百度统计\",\"link\":\"https://tongji.baidu.com/\",\"avatar\":\"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690\",\"descr\":\"领先的中文网站分析平台\"},{\"name\":\"墨滴编辑器\",\"link\":\"https://editor.mdnice.com/\",\"avatar\":\"https://mdnice.com/favicon.svg\",\"descr\":\"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式\"},{\"name\":\"v-md-editor\",\"link\":\"https://ckang1229.gitee.io/vue-markdown-editor/zh/\",\"avatar\":null,\"descr\":\"Vue的一款markdown插件（支持vue2和vue3）\"}]},{\"class_name\":\"视频学习\",\"link_list\":[{\"name\":\"咕泡云课堂\",\"link\":\"https://ke.gupaoedu.cn/\",\"avatar\":\"https://ke.gupaoedu.cn/favicon.ico\",\"descr\":\"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播\"},{\"name\":\"谷粒学苑\",\"link\":\"https://www.gulixueyuan.com/\",\"avatar\":\"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6\",\"descr\":\"谷粒学苑为尚硅谷旗下IT课程在线学习平台\"}]},{\"class_name\":\"开发工具\",\"link_list\":[{\"name\":\"jdk\",\"link\":\"https://www.oracle.com/java/technologies/downloads/\",\"avatar\":\"https://blog.huangge1199.cn/link/jdk.png\",\"descr\":\"Java语言的软件开发工具包\"},{\"name\":\"IDEA\",\"link\":\"https://www.jetbrains.com/zh-cn/idea/\",\"avatar\":\"https://blog.huangge1199.cn/link/idea.png\",\"descr\":\"功能强大、符合人体工程学的 Java IDE\"},{\"name\":\"webstorm\",\"link\":\"https://www.jetbrains.com/zh-cn/webstorm/\",\"avatar\":\"https://blog.huangge1199.cn/link/webstorm.png\",\"descr\":\"一个适用于JavaScript 和相关技术的集成开发环境\"},{\"name\":\"datagrip\",\"link\":\"https://www.jetbrains.com/zh-cn/datagrip/\",\"avatar\":\"https://blog.huangge1199.cn/link/datagrip.png\",\"descr\":\"由JetBrains 开发的数据库和SQL 跨平台IDE\"},{\"name\":\"pyCharm\",\"link\":\"https://www.jetbrains.com/zh-cn/pycharm/\",\"avatar\":\"https://blog.huangge1199.cn/link/pycharm.png\",\"descr\":\"JetBrains为专业开发者提供的Python IDE\"},{\"name\":\"xshell\",\"link\":\"https://www.xshell.com/zh/xshell/\",\"avatar\":\"https://blog.huangge1199.cn/link/xshell.png\",\"descr\":\"业界最强大的SSH客户机\"},{\"name\":\"winscp\",\"link\":\"https://winscp.net/eng/index.php\",\"avatar\":\"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990\",\"descr\":\"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端\"},{\"name\":\"Another Redis Desktop Manager\",\"link\":\"https://github.com/qishibo/AnotherRedisDesktopManager\",\"avatar\":\"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png\",\"descr\":\"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值\"},{\"name\":\"JD-GUI\",\"link\":\"http://java-decompiler.github.io/\",\"avatar\":\"https://blog.huangge1199.cn/link/jdgui.png\",\"descr\":\"一款功能十分强大的JAVA反编译工具\"}]},{\"class_name\":\"后端开发\",\"link_list\":[{\"name\":\"sa-token\",\"link\":\"https://sa-token.dev33.cn/\",\"avatar\":\"https://sa-token.dev33.cn/doc/logo.png\",\"descr\":\"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！\"},{\"name\":\"sentinel\",\"link\":\"https://sentinelguard.io/\",\"avatar\":\"https://sentinelguard.io/img/sentinel.ico\",\"descr\":\"面向分布式服务架构的高可用流量控制组件\"},{\"name\":\"dubbo\",\"link\":\"https://dubbo.apache.org/\",\"avatar\":\"https://dubbo.apache.org/favicons/favicon.ico\",\"descr\":\"一款高性能、轻量级的开源服务框架\"},{\"name\":\"nacos\",\"link\":\"https://nacos.io/\",\"avatar\":\"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png\",\"descr\":\"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台\"},{\"name\":\"nginx\",\"link\":\"https://nginx.org/\",\"avatar\":\"https://blog.huangge1199.cn/link/nginx.png\",\"descr\":\"反向代理服务器\"},{\"name\":\"zookeeper\",\"link\":\"https://zookeeper.apache.org/\",\"avatar\":\"https://zookeeper.apache.org/images/zookeeper_small.gif\",\"descr\":\"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册\"},{\"name\":\"kafka\",\"link\":\"https://kafka.apache.org/\",\"avatar\":\"https://blog.huangge1199.cn/link/kafka.png\",\"descr\":\"一种分布式的，基于发布 / 订阅的消息系统\"},{\"name\":\"rabbitmq\",\"link\":\"https://www.rabbitmq.com/\",\"avatar\":\"https://blog.huangge1199.cn/link/rabbitmq.png\",\"descr\":\"消息队列\"},{\"name\":\"rocketmq\",\"link\":\"https://rocketmq.apache.org/\",\"avatar\":\"https://rocketmq.apache.org/assets/images/rmq-logo.png\",\"descr\":\"消息队列\"},{\"name\":\"justauth\",\"link\":\"https://justauth.wiki/\",\"avatar\":\"https://justauth.wiki/logo.png\",\"descr\":\"开箱即用的整合第三方登录的开源组件\"},{\"name\":\"XXL-JOB\",\"link\":\"https://www.xuxueli.com/xxl-job/\",\"avatar\":\"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg\",\"descr\":\"分布式任务调度平台\"},{\"name\":\"MQTT\",\"link\":\"https://www.emqx.com/zh/mqtt\",\"avatar\":\"https://www.emqx.com/favicon.ico\",\"descr\":\"MQTT - 轻量级的物联网消息传输协议\"}]},{\"class_name\":\"前端开发\",\"link_list\":[{\"name\":\"vue\",\"link\":\"https://cn.vuejs.org/\",\"avatar\":\"https://cn.vuejs.org/images/logo.svg\",\"descr\":\"是一套用于构建用户界面的渐进式框架\"},{\"name\":\"element\",\"link\":\"https://element.eleme.cn/#/zh-CN\",\"avatar\":\"https://element.eleme.cn/favicon.ico\",\"descr\":\"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库\"},{\"name\":\"Element Plus\",\"link\":\"https://element-plus.gitee.io/zh-CN/\",\"avatar\":\"https://element-plus.gitee.io/images/element-plus-logo-small.svg\",\"descr\":\"一个 Vue 3 UI 框架 | Element Plus\"},{\"name\":\"vant\",\"link\":\"https://youzan.github.io/vant-weapp/#/home\",\"avatar\":\"https://img.yzcdn.cn/vant/logo.png\",\"descr\":\"轻量、可靠的小程序 UI 组件库\"},{\"name\":\"nuxt.js\",\"link\":\"https://nuxtjs.org/\",\"avatar\":\"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png\",\"descr\":\"轻量、可靠的小程序 UI 组件库\"},{\"name\":\"echarts\",\"link\":\"https://echarts.apache.org/\",\"avatar\":\"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1\",\"descr\":\"轻量、可靠的小程序 UI 组件库\"},{\"name\":\"jQuery UI\",\"link\":\"https://jui.org/\",\"avatar\":\"https://blog.huangge1199.cn/link/jui.png\",\"descr\":\"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)\"},{\"name\":\"mavonEditor\",\"link\":\"http://www.mavoneditor.com/\",\"avatar\":null,\"descr\":\"Vue的一款markdown插件\"}]},{\"class_name\":\"辅助工具\",\"link_list\":[{\"name\":\"YAPI\",\"link\":\"http://yapi.smart-xwork.cn/\",\"avatar\":\"https://blog.huangge1199.cn/link/yapi.png\",\"descr\":\"高效、易用、功能强大的API管理平台\"},{\"name\":\"恒星播放器\",\"link\":\"https://www.stellarplayer.com/\",\"avatar\":\"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png\",\"descr\":\"一款纯粹专注的播放器\"}]}]"},{"title":"背景图","date":"2021-12-29T09:25:02.000Z","_content":"{% gallery %}\n![](https://blog.huangge1199.cn/images/bg.jpeg)\n![](https://blog.huangge1199.cn/post/pyControl/bg.jpeg)\n![](https://blog.huangge1199.cn/post/pyListSort/bg.jpeg)\n![](https://blog.huangge1199.cn/post/jpaCompositePK/bg.jpg)\n![](https://blog.huangge1199.cn/post/nexusCreate/bg.jpeg)\n![](https://blog.huangge1199.cn/post/sublimeText4Purchase/bg.jpeg)\n![](https://blog.huangge1199.cn/post/day20220118/bg.jpeg)\n![](https://blog.huangge1199.cn/post/day20220119/bg.jpeg)\n![](https://blog.huangge1199.cn/post/day20220120/bg.jpeg)\n![](https://blog.huangge1199.cn/post/day20220121/bg.jpeg)\n![](https://blog.huangge1199.cn/post/day20220310/bg.jpeg)\n{% endgallery %}\n","source":"bg/index.md","raw":"---\ntitle: 背景图\ndate: 2021-12-29 17:25:02\n---\n{% gallery %}\n![](https://blog.huangge1199.cn/images/bg.jpeg)\n![](https://blog.huangge1199.cn/post/pyControl/bg.jpeg)\n![](https://blog.huangge1199.cn/post/pyListSort/bg.jpeg)\n![](https://blog.huangge1199.cn/post/jpaCompositePK/bg.jpg)\n![](https://blog.huangge1199.cn/post/nexusCreate/bg.jpeg)\n![](https://blog.huangge1199.cn/post/sublimeText4Purchase/bg.jpeg)\n![](https://blog.huangge1199.cn/post/day20220118/bg.jpeg)\n![](https://blog.huangge1199.cn/post/day20220119/bg.jpeg)\n![](https://blog.huangge1199.cn/post/day20220120/bg.jpeg)\n![](https://blog.huangge1199.cn/post/day20220121/bg.jpeg)\n![](https://blog.huangge1199.cn/post/day20220310/bg.jpeg)\n{% endgallery %}\n","updated":"2022-03-10T02:00:31.907Z","path":"bg/index.html","comments":1,"layout":"page","_id":"cl0t0rrkz00064ctub0l42nx8","content":"<div class=\"fj-gallery\"><p><img src=\"https://blog.huangge1199.cn/images/bg.jpeg\"><br><img src=\"https://blog.huangge1199.cn/post/pyControl/bg.jpeg\"><br><img src=\"https://blog.huangge1199.cn/post/pyListSort/bg.jpeg\"><br><img src=\"https://blog.huangge1199.cn/post/jpaCompositePK/bg.jpg\"><br><img src=\"https://blog.huangge1199.cn/post/nexusCreate/bg.jpeg\"><br><img src=\"https://blog.huangge1199.cn/post/sublimeText4Purchase/bg.jpeg\"><br><img src=\"https://blog.huangge1199.cn/post/day20220118/bg.jpeg\"><br><img src=\"https://blog.huangge1199.cn/post/day20220119/bg.jpeg\"><br><img src=\"https://blog.huangge1199.cn/post/day20220120/bg.jpeg\"><br><img src=\"https://blog.huangge1199.cn/post/day20220121/bg.jpeg\"><br><img src=\"https://blog.huangge1199.cn/post/day20220310/bg.jpeg\"></p>\n          </div>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.gitee.io/zh-CN/","avatar":"https://element-plus.gitee.io/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"}}},"cover":"https://file.huangge1199.cn/group1/M00/00/00/CgAYB2HzmTKAcuJeAAKgw-sbfmQ23.jpeg","excerpt":"","more":"<div class=\"fj-gallery\"><p><img src=\"https://blog.huangge1199.cn/images/bg.jpeg\"><br><img src=\"https://blog.huangge1199.cn/post/pyControl/bg.jpeg\"><br><img src=\"https://blog.huangge1199.cn/post/pyListSort/bg.jpeg\"><br><img src=\"https://blog.huangge1199.cn/post/jpaCompositePK/bg.jpg\"><br><img src=\"https://blog.huangge1199.cn/post/nexusCreate/bg.jpeg\"><br><img src=\"https://blog.huangge1199.cn/post/sublimeText4Purchase/bg.jpeg\"><br><img src=\"https://blog.huangge1199.cn/post/day20220118/bg.jpeg\"><br><img src=\"https://blog.huangge1199.cn/post/day20220119/bg.jpeg\"><br><img src=\"https://blog.huangge1199.cn/post/day20220120/bg.jpeg\"><br><img src=\"https://blog.huangge1199.cn/post/day20220121/bg.jpeg\"><br><img src=\"https://blog.huangge1199.cn/post/day20220310/bg.jpeg\"></p>\n          </div>\n"},{"_content":"{\n  \"tv_doge\": \"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png\",\n  \"tv_亲亲\": \"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png\",\n  \"tv_偷笑\": \"bb690d4107620f1c15cff29509db529a73aee261.png\",\n  \"tv_再见\": \"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png\",\n  \"tv_冷漠\": \"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png\",\n  \"tv_发怒\": \"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png\",\n  \"tv_发财\": \"34db290afd2963723c6eb3c4560667db7253a21a.png\",\n  \"tv_可爱\": \"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png\",\n  \"tv_吐血\": \"09dd16a7aa59b77baa1155d47484409624470c77.png\",\n  \"tv_呆\": \"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png\",\n  \"tv_呕吐\": \"9f996894a39e282ccf5e66856af49483f81870f3.png\",\n  \"tv_困\": \"241ee304e44c0af029adceb294399391e4737ef2.png\",\n  \"tv_坏笑\": \"1f0b87f731a671079842116e0991c91c2c88645a.png\",\n  \"tv_大佬\": \"093c1e2c490161aca397afc45573c877cdead616.png\",\n  \"tv_大哭\": \"23269aeb35f99daee28dda129676f6e9ea87934f.png\",\n  \"tv_委屈\": \"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png\",\n  \"tv_害羞\": \"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png\",\n  \"tv_尴尬\": \"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png\",\n  \"tv_微笑\": \"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png\",\n  \"tv_思考\": \"90cf159733e558137ed20aa04d09964436f618a1.png\",\n  \"tv_惊吓\": \"0d15c7e2ee58e935adc6a7193ee042388adc22af.png\"\n}","source":" _data/valine.json","raw":"{\n  \"tv_doge\": \"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png\",\n  \"tv_亲亲\": \"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png\",\n  \"tv_偷笑\": \"bb690d4107620f1c15cff29509db529a73aee261.png\",\n  \"tv_再见\": \"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png\",\n  \"tv_冷漠\": \"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png\",\n  \"tv_发怒\": \"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png\",\n  \"tv_发财\": \"34db290afd2963723c6eb3c4560667db7253a21a.png\",\n  \"tv_可爱\": \"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png\",\n  \"tv_吐血\": \"09dd16a7aa59b77baa1155d47484409624470c77.png\",\n  \"tv_呆\": \"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png\",\n  \"tv_呕吐\": \"9f996894a39e282ccf5e66856af49483f81870f3.png\",\n  \"tv_困\": \"241ee304e44c0af029adceb294399391e4737ef2.png\",\n  \"tv_坏笑\": \"1f0b87f731a671079842116e0991c91c2c88645a.png\",\n  \"tv_大佬\": \"093c1e2c490161aca397afc45573c877cdead616.png\",\n  \"tv_大哭\": \"23269aeb35f99daee28dda129676f6e9ea87934f.png\",\n  \"tv_委屈\": \"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png\",\n  \"tv_害羞\": \"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png\",\n  \"tv_尴尬\": \"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png\",\n  \"tv_微笑\": \"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png\",\n  \"tv_思考\": \"90cf159733e558137ed20aa04d09964436f618a1.png\",\n  \"tv_惊吓\": \"0d15c7e2ee58e935adc6a7193ee042388adc22af.png\"\n}","date":"2022-01-17T05:44:36.093Z","updated":"2022-01-17T05:44:36.093Z","path":" _data/valine.json","layout":"false","title":"","comments":1,"_id":"cl0t0rrl000084ctu5rug4cfv","content":"{\"tv_doge\":\"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png\",\"tv_亲亲\":\"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png\",\"tv_偷笑\":\"bb690d4107620f1c15cff29509db529a73aee261.png\",\"tv_再见\":\"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png\",\"tv_冷漠\":\"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png\",\"tv_发怒\":\"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png\",\"tv_发财\":\"34db290afd2963723c6eb3c4560667db7253a21a.png\",\"tv_可爱\":\"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png\",\"tv_吐血\":\"09dd16a7aa59b77baa1155d47484409624470c77.png\",\"tv_呆\":\"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png\",\"tv_呕吐\":\"9f996894a39e282ccf5e66856af49483f81870f3.png\",\"tv_困\":\"241ee304e44c0af029adceb294399391e4737ef2.png\",\"tv_坏笑\":\"1f0b87f731a671079842116e0991c91c2c88645a.png\",\"tv_大佬\":\"093c1e2c490161aca397afc45573c877cdead616.png\",\"tv_大哭\":\"23269aeb35f99daee28dda129676f6e9ea87934f.png\",\"tv_委屈\":\"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png\",\"tv_害羞\":\"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png\",\"tv_尴尬\":\"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png\",\"tv_微笑\":\"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png\",\"tv_思考\":\"90cf159733e558137ed20aa04d09964436f618a1.png\",\"tv_惊吓\":\"0d15c7e2ee58e935adc6a7193ee042388adc22af.png\"}","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.gitee.io/zh-CN/","avatar":"https://element-plus.gitee.io/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"}}},"cover":"https://blog.huangge1199.cn/images/bg.jpeg","excerpt":"","more":"{\"tv_doge\":\"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png\",\"tv_亲亲\":\"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png\",\"tv_偷笑\":\"bb690d4107620f1c15cff29509db529a73aee261.png\",\"tv_再见\":\"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png\",\"tv_冷漠\":\"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png\",\"tv_发怒\":\"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png\",\"tv_发财\":\"34db290afd2963723c6eb3c4560667db7253a21a.png\",\"tv_可爱\":\"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png\",\"tv_吐血\":\"09dd16a7aa59b77baa1155d47484409624470c77.png\",\"tv_呆\":\"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png\",\"tv_呕吐\":\"9f996894a39e282ccf5e66856af49483f81870f3.png\",\"tv_困\":\"241ee304e44c0af029adceb294399391e4737ef2.png\",\"tv_坏笑\":\"1f0b87f731a671079842116e0991c91c2c88645a.png\",\"tv_大佬\":\"093c1e2c490161aca397afc45573c877cdead616.png\",\"tv_大哭\":\"23269aeb35f99daee28dda129676f6e9ea87934f.png\",\"tv_委屈\":\"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png\",\"tv_害羞\":\"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png\",\"tv_尴尬\":\"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png\",\"tv_微笑\":\"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png\",\"tv_思考\":\"90cf159733e558137ed20aa04d09964436f618a1.png\",\"tv_惊吓\":\"0d15c7e2ee58e935adc6a7193ee042388adc22af.png\"}"},{"title":"分类","date":"2021-11-29T09:26:10.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2021-11-29 17:26:10\ntype: \"categories\"\ncomments: false\n---\n","updated":"2022-02-11T05:31:54.255Z","path":"categories/index.html","layout":"page","_id":"cl0t0rrl0000a4ctu95mlhecj","content":"","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.gitee.io/zh-CN/","avatar":"https://element-plus.gitee.io/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"}}},"cover":"https://blog.huangge1199.cn/post/nexusCreate/bg.jpeg","excerpt":"","more":""},{"title":"关于","date":"2021-11-29T12:56:03.000Z","_content":"","source":"about/index.md","raw":"---\ntitle: 关于\ndate: 2021-11-29 20:56:03\n---\n","updated":"2021-12-29T01:46:42.563Z","path":"about/index.html","comments":1,"layout":"page","_id":"cl0t0rrl3000f4ctuh0x4fhz4","content":"","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.gitee.io/zh-CN/","avatar":"https://element-plus.gitee.io/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"}}},"cover":"https://blog.huangge1199.cn/post/day20220121/bg.jpeg","excerpt":"","more":""},{"title":"music","date":"2022-03-15T09:49:32.000Z","aplayer":true,"_content":"{% meting \"60198\" \"tencent\" \"playlist\" %}\n\n{% aplayerlist %}\n{\n    \"narrow\": false,\n    \"autoplay\": true,\n    \"mode\": \"random\",\n    \"showlrc\": 3,\n    \"mutex\": true,\n    \"theme\": \"#e6d0b2\",\n    \"preload\": \"metadata\",\n    \"listmaxheight\": \"513px\",\n    \"music\": [\n        {\n            \"title\": \"CoCo\",\n            \"author\": \"Jeff Williams\",\n            \"url\": \"https://i.y.qq.com/v8/playsong.html?songid=256804972#webchat_redirect\",\n        },\n{\n\"title\": \"CoCo\",\n\"author\": \"Jeff Williams\",\n\"url\": \"https://i.y.qq.com/v8/playsong.html?songid=256804972#webchat_redirect\",\n},\n{\n\"title\": \"CoCo\",\n\"author\": \"Jeff Williams\",\n\"url\": \"https://i.y.qq.com/v8/playsong.html?songid=256804972#webchat_redirect\",\n},\n{\n\"title\": \"CoCo\",\n\"author\": \"Jeff Williams\",\n\"url\": \"https://i.y.qq.com/v8/playsong.html?songid=256804972#webchat_redirect\",\n}\n    ]\n}\n{% endaplayerlist %}\n","source":"music/index.md","raw":"---\ntitle: music\ndate: 2022-03-15 17:49:32\naplayer: true\n---\n{% meting \"60198\" \"tencent\" \"playlist\" %}\n\n{% aplayerlist %}\n{\n    \"narrow\": false,\n    \"autoplay\": true,\n    \"mode\": \"random\",\n    \"showlrc\": 3,\n    \"mutex\": true,\n    \"theme\": \"#e6d0b2\",\n    \"preload\": \"metadata\",\n    \"listmaxheight\": \"513px\",\n    \"music\": [\n        {\n            \"title\": \"CoCo\",\n            \"author\": \"Jeff Williams\",\n            \"url\": \"https://i.y.qq.com/v8/playsong.html?songid=256804972#webchat_redirect\",\n        },\n{\n\"title\": \"CoCo\",\n\"author\": \"Jeff Williams\",\n\"url\": \"https://i.y.qq.com/v8/playsong.html?songid=256804972#webchat_redirect\",\n},\n{\n\"title\": \"CoCo\",\n\"author\": \"Jeff Williams\",\n\"url\": \"https://i.y.qq.com/v8/playsong.html?songid=256804972#webchat_redirect\",\n},\n{\n\"title\": \"CoCo\",\n\"author\": \"Jeff Williams\",\n\"url\": \"https://i.y.qq.com/v8/playsong.html?songid=256804972#webchat_redirect\",\n}\n    ]\n}\n{% endaplayerlist %}\n","updated":"2022-03-16T03:51:03.988Z","path":"music/index.html","_id":"cl0t0rrl4000i4ctuekazbz75","comments":1,"layout":"page","content":"\n    <div id=\"aplayer-CkecoWVJ\" class=\"aplayer aplayer-tag-marker meting-tag-marker\"\n         data-id=\"60198\" data-server=\"tencent\" data-type=\"playlist\" data-mode=\"circulation\" data-autoplay=\"false\" data-mutex=\"true\" data-listmaxheight=\"340px\" data-preload=\"auto\" data-theme=\"#ad7a86\"\n    ></div>\n\n\n\t\t\t<script>\n\t\t\t\tconsole.error(\"SyntaxError: Unexpected token } in JSON at position 378\");\n\t\t\t</script>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.gitee.io/zh-CN/","avatar":"https://element-plus.gitee.io/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"}}},"cover":"https://blog.huangge1199.cn/post/day20220120/bg.jpeg","excerpt":"","more":"\n    <div id=\"aplayer-CkecoWVJ\" class=\"aplayer aplayer-tag-marker meting-tag-marker\"\n         data-id=\"60198\" data-server=\"tencent\" data-type=\"playlist\" data-mode=\"circulation\" data-autoplay=\"false\" data-mutex=\"true\" data-listmaxheight=\"340px\" data-preload=\"auto\" data-theme=\"#ad7a86\"\n    ></div>\n\n\n\t\t\t<script>\n\t\t\t\tconsole.error(\"SyntaxError: Unexpected token } in JSON at position 378\");\n\t\t\t</script>\n"},{"title":"网址大全","date":"2021-11-29T09:27:00.000Z","type":"link","comments":0,"_content":"","source":"link/index.md","raw":"---\ntitle: 网址大全\ndate: 2021-11-29 17:27:00\ntype: \"link\"\ncomments: false\n---\n","updated":"2022-02-11T05:31:54.258Z","path":"link/index.html","layout":"page","_id":"cl0t0rrl6000n4ctuefag7hd3","content":"","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.gitee.io/zh-CN/","avatar":"https://element-plus.gitee.io/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"}}},"cover":"https://blog.huangge1199.cn/post/pyListSort/bg.jpeg","excerpt":"","more":""},{"title":"标签","date":"2021-11-29T09:24:09.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2021-11-29 17:24:09\ntype: \"tags\"\ncomments: false\n---\n","updated":"2022-02-11T05:31:54.263Z","path":"tags/index.html","layout":"page","_id":"cl0t0rrl6000q4ctufl1z751e","content":"","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.gitee.io/zh-CN/","avatar":"https://element-plus.gitee.io/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"}}},"cover":"https://blog.huangge1199.cn/post/pyControl/bg.jpeg","excerpt":"","more":""},{"_content":"window.addEventListener('load', () => {\n  let loadFlag = false\n  const openSearch = () => {\n    const bodyStyle = document.body.style\n    bodyStyle.width = '100%'\n    bodyStyle.overflow = 'hidden'\n    btf.animateIn(document.getElementById('search-mask'), 'to_show 0.5s')\n    btf.animateIn(document.querySelector('#local-search .search-dialog'), 'titleScale 0.5s')\n    setTimeout(() => { document.querySelector('#local-search-input input').focus() }, 100)\n    if (!loadFlag) {\n      search(GLOBAL_CONFIG.localSearch.path)\n      loadFlag = true\n    }\n    // shortcut: ESC\n    document.addEventListener('keydown', function f (event) {\n      if (event.code === 'Escape') {\n        closeSearch()\n        document.removeEventListener('keydown', f)\n      }\n    })\n  }\n\n  const closeSearch = () => {\n    const bodyStyle = document.body.style\n    bodyStyle.width = ''\n    bodyStyle.overflow = ''\n    btf.animateOut(document.querySelector('#local-search .search-dialog'), 'search_close .5s')\n    btf.animateOut(document.getElementById('search-mask'), 'to_hide 0.5s')\n  }\n\n  // click function\n  const searchClickFn = () => {\n    document.querySelector('#search-button > .search').addEventListener('click', openSearch)\n    document.getElementById('search-mask').addEventListener('click', closeSearch)\n    document.querySelector('#local-search .search-close-button').addEventListener('click', closeSearch)\n  }\n\n  searchClickFn()\n\n  // pjax\n  window.addEventListener('pjax:complete', function () {\n    getComputedStyle(document.querySelector('#local-search .search-dialog')).display === 'block' && closeSearch()\n    searchClickFn()\n  })\n\n  async function search (path) {\n    let datas = []\n    const typeF = path.split('.')[1]\n    const response = await fetch(GLOBAL_CONFIG.root + path)\n    if (typeF === 'json') {\n      datas = await response.json()\n    } else if (typeF === 'xml') {\n      const res = await response.text()\n      const t = await new window.DOMParser().parseFromString(res, 'text/xml')\n      const a = await t\n      datas = [...a.querySelectorAll('entry')].map(function (item) {\n        return {\n          title: item.querySelector('title').textContent,\n          content: item.querySelector('content').textContent,\n          url: item.querySelector('url').textContent\n        }\n      })\n    }\n    if (response.ok) {\n      const $loadDataItem = document.getElementById('loading-database')\n      $loadDataItem.nextElementSibling.style.display = 'block'\n      $loadDataItem.remove()\n    }\n\n    const $input = document.querySelector('#local-search-input input')\n    const $resultContent = document.getElementById('local-search-results')\n    const $loadingStatus = document.getElementById('loading-status')\n    $input.addEventListener('input', function () {\n      const keywords = this.value.trim().toLowerCase().split(/[\\s]+/)\n      if (keywords[0] !== '') $loadingStatus.innerHTML = '<i class=\"fas fa-spinner fa-pulse\"></i>'\n\n      $resultContent.innerHTML = ''\n      let str = '<div class=\"search-result-list\">'\n      if (this.value.trim().length <= 0) return\n      let count = 0\n      // perform local searching\n      datas.forEach(function (data) {\n        let isMatch = true\n        if (!data.title || data.title.trim() === '') {\n          data.title = ''\n        }\n        let dataTitle = data.title.trim().toLowerCase()\n        const dataContent = data.content ? data.content.trim().replace(/<[^>]+>/g, '').toLowerCase() : ''\n        // const dataUrl = data.url.startsWith('/') ? data.url : GLOBAL_CONFIG.root + data.url\n        const dataUrl = data.url.trim().replace('//', '/')\n        console.log(data.url)\n        let indexTitle = -1\n        let indexContent = -1\n        let firstOccur = -1\n        // only match artiles with not empty titles and contents\n        if (dataTitle !== '' || dataContent !== '') {\n          keywords.forEach(function (keyword, i) {\n            indexTitle = dataTitle.indexOf(keyword)\n            indexContent = dataContent.indexOf(keyword)\n            if (indexTitle < 0 && indexContent < 0) {\n              isMatch = false\n            } else {\n              if (indexContent < 0) {\n                indexContent = 0\n              }\n              if (i === 0) {\n                firstOccur = indexContent\n              }\n            }\n          })\n        } else {\n          isMatch = false\n        }\n\n        // show search results\n        if (isMatch) {\n          const content = data.content.trim().replace(/<[^>]+>/g, '')\n          if (firstOccur >= 0) {\n            // cut out 130 characters\n            // let start = firstOccur - 30 < 0 ? 0 : firstOccur - 30\n            // let end = firstOccur + 50 > content.length ? content.length : firstOccur + 50\n            let start = firstOccur - 30\n            let end = firstOccur + 100\n\n            if (start < 0) {\n              start = 0\n            }\n\n            if (start === 0) {\n              end = 100\n            }\n\n            if (end > content.length) {\n              end = content.length\n            }\n\n            let matchContent = content.substring(start, end)\n\n            // highlight all keywords\n            keywords.forEach(function (keyword) {\n              const regS = new RegExp(keyword, 'gi')\n              matchContent = matchContent.replace(regS, '<span class=\"search-keyword\">' + keyword + '</span>')\n              dataTitle = dataTitle.replace(regS, '<span class=\"search-keyword\">' + keyword + '</span>')\n            })\n\n            str += '<div class=\"local-search__hit-item\"><a href=\"' + dataUrl + '\" class=\"search-result-title\">' + dataTitle + '</a>'\n            count += 1\n\n            if (dataContent !== '') {\n              str += '<p class=\"search-result\">' + matchContent + '...</p>'\n            }\n          }\n          str += '</div>'\n        }\n      })\n      if (count === 0) {\n        str += '<div id=\"local-search__hits-empty\">' + GLOBAL_CONFIG.localSearch.languages.hits_empty.replace(/\\$\\{query}/, this.value.trim()) +\n          '</div>'\n      }\n      str += '</div>'\n      $resultContent.innerHTML = str\n      if (keywords[0] !== '') $loadingStatus.innerHTML = ''\n      window.pjax && window.pjax.refresh($resultContent)\n    })\n  }\n})\n","source":"js/search/local-search.js","raw":"window.addEventListener('load', () => {\n  let loadFlag = false\n  const openSearch = () => {\n    const bodyStyle = document.body.style\n    bodyStyle.width = '100%'\n    bodyStyle.overflow = 'hidden'\n    btf.animateIn(document.getElementById('search-mask'), 'to_show 0.5s')\n    btf.animateIn(document.querySelector('#local-search .search-dialog'), 'titleScale 0.5s')\n    setTimeout(() => { document.querySelector('#local-search-input input').focus() }, 100)\n    if (!loadFlag) {\n      search(GLOBAL_CONFIG.localSearch.path)\n      loadFlag = true\n    }\n    // shortcut: ESC\n    document.addEventListener('keydown', function f (event) {\n      if (event.code === 'Escape') {\n        closeSearch()\n        document.removeEventListener('keydown', f)\n      }\n    })\n  }\n\n  const closeSearch = () => {\n    const bodyStyle = document.body.style\n    bodyStyle.width = ''\n    bodyStyle.overflow = ''\n    btf.animateOut(document.querySelector('#local-search .search-dialog'), 'search_close .5s')\n    btf.animateOut(document.getElementById('search-mask'), 'to_hide 0.5s')\n  }\n\n  // click function\n  const searchClickFn = () => {\n    document.querySelector('#search-button > .search').addEventListener('click', openSearch)\n    document.getElementById('search-mask').addEventListener('click', closeSearch)\n    document.querySelector('#local-search .search-close-button').addEventListener('click', closeSearch)\n  }\n\n  searchClickFn()\n\n  // pjax\n  window.addEventListener('pjax:complete', function () {\n    getComputedStyle(document.querySelector('#local-search .search-dialog')).display === 'block' && closeSearch()\n    searchClickFn()\n  })\n\n  async function search (path) {\n    let datas = []\n    const typeF = path.split('.')[1]\n    const response = await fetch(GLOBAL_CONFIG.root + path)\n    if (typeF === 'json') {\n      datas = await response.json()\n    } else if (typeF === 'xml') {\n      const res = await response.text()\n      const t = await new window.DOMParser().parseFromString(res, 'text/xml')\n      const a = await t\n      datas = [...a.querySelectorAll('entry')].map(function (item) {\n        return {\n          title: item.querySelector('title').textContent,\n          content: item.querySelector('content').textContent,\n          url: item.querySelector('url').textContent\n        }\n      })\n    }\n    if (response.ok) {\n      const $loadDataItem = document.getElementById('loading-database')\n      $loadDataItem.nextElementSibling.style.display = 'block'\n      $loadDataItem.remove()\n    }\n\n    const $input = document.querySelector('#local-search-input input')\n    const $resultContent = document.getElementById('local-search-results')\n    const $loadingStatus = document.getElementById('loading-status')\n    $input.addEventListener('input', function () {\n      const keywords = this.value.trim().toLowerCase().split(/[\\s]+/)\n      if (keywords[0] !== '') $loadingStatus.innerHTML = '<i class=\"fas fa-spinner fa-pulse\"></i>'\n\n      $resultContent.innerHTML = ''\n      let str = '<div class=\"search-result-list\">'\n      if (this.value.trim().length <= 0) return\n      let count = 0\n      // perform local searching\n      datas.forEach(function (data) {\n        let isMatch = true\n        if (!data.title || data.title.trim() === '') {\n          data.title = ''\n        }\n        let dataTitle = data.title.trim().toLowerCase()\n        const dataContent = data.content ? data.content.trim().replace(/<[^>]+>/g, '').toLowerCase() : ''\n        // const dataUrl = data.url.startsWith('/') ? data.url : GLOBAL_CONFIG.root + data.url\n        const dataUrl = data.url.trim().replace('//', '/')\n        console.log(data.url)\n        let indexTitle = -1\n        let indexContent = -1\n        let firstOccur = -1\n        // only match artiles with not empty titles and contents\n        if (dataTitle !== '' || dataContent !== '') {\n          keywords.forEach(function (keyword, i) {\n            indexTitle = dataTitle.indexOf(keyword)\n            indexContent = dataContent.indexOf(keyword)\n            if (indexTitle < 0 && indexContent < 0) {\n              isMatch = false\n            } else {\n              if (indexContent < 0) {\n                indexContent = 0\n              }\n              if (i === 0) {\n                firstOccur = indexContent\n              }\n            }\n          })\n        } else {\n          isMatch = false\n        }\n\n        // show search results\n        if (isMatch) {\n          const content = data.content.trim().replace(/<[^>]+>/g, '')\n          if (firstOccur >= 0) {\n            // cut out 130 characters\n            // let start = firstOccur - 30 < 0 ? 0 : firstOccur - 30\n            // let end = firstOccur + 50 > content.length ? content.length : firstOccur + 50\n            let start = firstOccur - 30\n            let end = firstOccur + 100\n\n            if (start < 0) {\n              start = 0\n            }\n\n            if (start === 0) {\n              end = 100\n            }\n\n            if (end > content.length) {\n              end = content.length\n            }\n\n            let matchContent = content.substring(start, end)\n\n            // highlight all keywords\n            keywords.forEach(function (keyword) {\n              const regS = new RegExp(keyword, 'gi')\n              matchContent = matchContent.replace(regS, '<span class=\"search-keyword\">' + keyword + '</span>')\n              dataTitle = dataTitle.replace(regS, '<span class=\"search-keyword\">' + keyword + '</span>')\n            })\n\n            str += '<div class=\"local-search__hit-item\"><a href=\"' + dataUrl + '\" class=\"search-result-title\">' + dataTitle + '</a>'\n            count += 1\n\n            if (dataContent !== '') {\n              str += '<p class=\"search-result\">' + matchContent + '...</p>'\n            }\n          }\n          str += '</div>'\n        }\n      })\n      if (count === 0) {\n        str += '<div id=\"local-search__hits-empty\">' + GLOBAL_CONFIG.localSearch.languages.hits_empty.replace(/\\$\\{query}/, this.value.trim()) +\n          '</div>'\n      }\n      str += '</div>'\n      $resultContent.innerHTML = str\n      if (keywords[0] !== '') $loadingStatus.innerHTML = ''\n      window.pjax && window.pjax.refresh($resultContent)\n    })\n  }\n})\n","date":"2022-02-17T02:23:34.225Z","updated":"2022-02-17T02:23:34.225Z","path":"js/search/local-search.js","layout":"false","title":"","comments":1,"_id":"cl0t0rrl7000u4ctu7mr6gr47","content":"window.addEventListener('load', () => {\n  let loadFlag = false\n  const openSearch = () => {\n    const bodyStyle = document.body.style\n    bodyStyle.width = '100%'\n    bodyStyle.overflow = 'hidden'\n    btf.animateIn(document.getElementById('search-mask'), 'to_show 0.5s')\n    btf.animateIn(document.querySelector('#local-search .search-dialog'), 'titleScale 0.5s')\n    setTimeout(() => { document.querySelector('#local-search-input input').focus() }, 100)\n    if (!loadFlag) {\n      search(GLOBAL_CONFIG.localSearch.path)\n      loadFlag = true\n    }\n    // shortcut: ESC\n    document.addEventListener('keydown', function f (event) {\n      if (event.code === 'Escape') {\n        closeSearch()\n        document.removeEventListener('keydown', f)\n      }\n    })\n  }\n\n  const closeSearch = () => {\n    const bodyStyle = document.body.style\n    bodyStyle.width = ''\n    bodyStyle.overflow = ''\n    btf.animateOut(document.querySelector('#local-search .search-dialog'), 'search_close .5s')\n    btf.animateOut(document.getElementById('search-mask'), 'to_hide 0.5s')\n  }\n\n  // click function\n  const searchClickFn = () => {\n    document.querySelector('#search-button > .search').addEventListener('click', openSearch)\n    document.getElementById('search-mask').addEventListener('click', closeSearch)\n    document.querySelector('#local-search .search-close-button').addEventListener('click', closeSearch)\n  }\n\n  searchClickFn()\n\n  // pjax\n  window.addEventListener('pjax:complete', function () {\n    getComputedStyle(document.querySelector('#local-search .search-dialog')).display === 'block' && closeSearch()\n    searchClickFn()\n  })\n\n  async function search (path) {\n    let datas = []\n    const typeF = path.split('.')[1]\n    const response = await fetch(GLOBAL_CONFIG.root + path)\n    if (typeF === 'json') {\n      datas = await response.json()\n    } else if (typeF === 'xml') {\n      const res = await response.text()\n      const t = await new window.DOMParser().parseFromString(res, 'text/xml')\n      const a = await t\n      datas = [...a.querySelectorAll('entry')].map(function (item) {\n        return {\n          title: item.querySelector('title').textContent,\n          content: item.querySelector('content').textContent,\n          url: item.querySelector('url').textContent\n        }\n      })\n    }\n    if (response.ok) {\n      const $loadDataItem = document.getElementById('loading-database')\n      $loadDataItem.nextElementSibling.style.display = 'block'\n      $loadDataItem.remove()\n    }\n\n    const $input = document.querySelector('#local-search-input input')\n    const $resultContent = document.getElementById('local-search-results')\n    const $loadingStatus = document.getElementById('loading-status')\n    $input.addEventListener('input', function () {\n      const keywords = this.value.trim().toLowerCase().split(/[\\s]+/)\n      if (keywords[0] !== '') $loadingStatus.innerHTML = '<i class=\"fas fa-spinner fa-pulse\"></i>'\n\n      $resultContent.innerHTML = ''\n      let str = '<div class=\"search-result-list\">'\n      if (this.value.trim().length <= 0) return\n      let count = 0\n      // perform local searching\n      datas.forEach(function (data) {\n        let isMatch = true\n        if (!data.title || data.title.trim() === '') {\n          data.title = ''\n        }\n        let dataTitle = data.title.trim().toLowerCase()\n        const dataContent = data.content ? data.content.trim().replace(/<[^>]+>/g, '').toLowerCase() : ''\n        // const dataUrl = data.url.startsWith('/') ? data.url : GLOBAL_CONFIG.root + data.url\n        const dataUrl = data.url.trim().replace('//', '/')\n        console.log(data.url)\n        let indexTitle = -1\n        let indexContent = -1\n        let firstOccur = -1\n        // only match artiles with not empty titles and contents\n        if (dataTitle !== '' || dataContent !== '') {\n          keywords.forEach(function (keyword, i) {\n            indexTitle = dataTitle.indexOf(keyword)\n            indexContent = dataContent.indexOf(keyword)\n            if (indexTitle < 0 && indexContent < 0) {\n              isMatch = false\n            } else {\n              if (indexContent < 0) {\n                indexContent = 0\n              }\n              if (i === 0) {\n                firstOccur = indexContent\n              }\n            }\n          })\n        } else {\n          isMatch = false\n        }\n\n        // show search results\n        if (isMatch) {\n          const content = data.content.trim().replace(/<[^>]+>/g, '')\n          if (firstOccur >= 0) {\n            // cut out 130 characters\n            // let start = firstOccur - 30 < 0 ? 0 : firstOccur - 30\n            // let end = firstOccur + 50 > content.length ? content.length : firstOccur + 50\n            let start = firstOccur - 30\n            let end = firstOccur + 100\n\n            if (start < 0) {\n              start = 0\n            }\n\n            if (start === 0) {\n              end = 100\n            }\n\n            if (end > content.length) {\n              end = content.length\n            }\n\n            let matchContent = content.substring(start, end)\n\n            // highlight all keywords\n            keywords.forEach(function (keyword) {\n              const regS = new RegExp(keyword, 'gi')\n              matchContent = matchContent.replace(regS, '<span class=\"search-keyword\">' + keyword + '</span>')\n              dataTitle = dataTitle.replace(regS, '<span class=\"search-keyword\">' + keyword + '</span>')\n            })\n\n            str += '<div class=\"local-search__hit-item\"><a href=\"' + dataUrl + '\" class=\"search-result-title\">' + dataTitle + '</a>'\n            count += 1\n\n            if (dataContent !== '') {\n              str += '<p class=\"search-result\">' + matchContent + '...</p>'\n            }\n          }\n          str += '</div>'\n        }\n      })\n      if (count === 0) {\n        str += '<div id=\"local-search__hits-empty\">' + GLOBAL_CONFIG.localSearch.languages.hits_empty.replace(/\\$\\{query}/, this.value.trim()) +\n          '</div>'\n      }\n      str += '</div>'\n      $resultContent.innerHTML = str\n      if (keywords[0] !== '') $loadingStatus.innerHTML = ''\n      window.pjax && window.pjax.refresh($resultContent)\n    })\n  }\n})\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.gitee.io/zh-CN/","avatar":"https://element-plus.gitee.io/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"}}},"cover":"https://blog.huangge1199.cn/post/day20220121/bg.jpeg","excerpt":"","more":"window.addEventListener('load', () => {\n  let loadFlag = false\n  const openSearch = () => {\n    const bodyStyle = document.body.style\n    bodyStyle.width = '100%'\n    bodyStyle.overflow = 'hidden'\n    btf.animateIn(document.getElementById('search-mask'), 'to_show 0.5s')\n    btf.animateIn(document.querySelector('#local-search .search-dialog'), 'titleScale 0.5s')\n    setTimeout(() => { document.querySelector('#local-search-input input').focus() }, 100)\n    if (!loadFlag) {\n      search(GLOBAL_CONFIG.localSearch.path)\n      loadFlag = true\n    }\n    // shortcut: ESC\n    document.addEventListener('keydown', function f (event) {\n      if (event.code === 'Escape') {\n        closeSearch()\n        document.removeEventListener('keydown', f)\n      }\n    })\n  }\n\n  const closeSearch = () => {\n    const bodyStyle = document.body.style\n    bodyStyle.width = ''\n    bodyStyle.overflow = ''\n    btf.animateOut(document.querySelector('#local-search .search-dialog'), 'search_close .5s')\n    btf.animateOut(document.getElementById('search-mask'), 'to_hide 0.5s')\n  }\n\n  // click function\n  const searchClickFn = () => {\n    document.querySelector('#search-button > .search').addEventListener('click', openSearch)\n    document.getElementById('search-mask').addEventListener('click', closeSearch)\n    document.querySelector('#local-search .search-close-button').addEventListener('click', closeSearch)\n  }\n\n  searchClickFn()\n\n  // pjax\n  window.addEventListener('pjax:complete', function () {\n    getComputedStyle(document.querySelector('#local-search .search-dialog')).display === 'block' && closeSearch()\n    searchClickFn()\n  })\n\n  async function search (path) {\n    let datas = []\n    const typeF = path.split('.')[1]\n    const response = await fetch(GLOBAL_CONFIG.root + path)\n    if (typeF === 'json') {\n      datas = await response.json()\n    } else if (typeF === 'xml') {\n      const res = await response.text()\n      const t = await new window.DOMParser().parseFromString(res, 'text/xml')\n      const a = await t\n      datas = [...a.querySelectorAll('entry')].map(function (item) {\n        return {\n          title: item.querySelector('title').textContent,\n          content: item.querySelector('content').textContent,\n          url: item.querySelector('url').textContent\n        }\n      })\n    }\n    if (response.ok) {\n      const $loadDataItem = document.getElementById('loading-database')\n      $loadDataItem.nextElementSibling.style.display = 'block'\n      $loadDataItem.remove()\n    }\n\n    const $input = document.querySelector('#local-search-input input')\n    const $resultContent = document.getElementById('local-search-results')\n    const $loadingStatus = document.getElementById('loading-status')\n    $input.addEventListener('input', function () {\n      const keywords = this.value.trim().toLowerCase().split(/[\\s]+/)\n      if (keywords[0] !== '') $loadingStatus.innerHTML = '<i class=\"fas fa-spinner fa-pulse\"></i>'\n\n      $resultContent.innerHTML = ''\n      let str = '<div class=\"search-result-list\">'\n      if (this.value.trim().length <= 0) return\n      let count = 0\n      // perform local searching\n      datas.forEach(function (data) {\n        let isMatch = true\n        if (!data.title || data.title.trim() === '') {\n          data.title = ''\n        }\n        let dataTitle = data.title.trim().toLowerCase()\n        const dataContent = data.content ? data.content.trim().replace(/<[^>]+>/g, '').toLowerCase() : ''\n        // const dataUrl = data.url.startsWith('/') ? data.url : GLOBAL_CONFIG.root + data.url\n        const dataUrl = data.url.trim().replace('//', '/')\n        console.log(data.url)\n        let indexTitle = -1\n        let indexContent = -1\n        let firstOccur = -1\n        // only match artiles with not empty titles and contents\n        if (dataTitle !== '' || dataContent !== '') {\n          keywords.forEach(function (keyword, i) {\n            indexTitle = dataTitle.indexOf(keyword)\n            indexContent = dataContent.indexOf(keyword)\n            if (indexTitle < 0 && indexContent < 0) {\n              isMatch = false\n            } else {\n              if (indexContent < 0) {\n                indexContent = 0\n              }\n              if (i === 0) {\n                firstOccur = indexContent\n              }\n            }\n          })\n        } else {\n          isMatch = false\n        }\n\n        // show search results\n        if (isMatch) {\n          const content = data.content.trim().replace(/<[^>]+>/g, '')\n          if (firstOccur >= 0) {\n            // cut out 130 characters\n            // let start = firstOccur - 30 < 0 ? 0 : firstOccur - 30\n            // let end = firstOccur + 50 > content.length ? content.length : firstOccur + 50\n            let start = firstOccur - 30\n            let end = firstOccur + 100\n\n            if (start < 0) {\n              start = 0\n            }\n\n            if (start === 0) {\n              end = 100\n            }\n\n            if (end > content.length) {\n              end = content.length\n            }\n\n            let matchContent = content.substring(start, end)\n\n            // highlight all keywords\n            keywords.forEach(function (keyword) {\n              const regS = new RegExp(keyword, 'gi')\n              matchContent = matchContent.replace(regS, '<span class=\"search-keyword\">' + keyword + '</span>')\n              dataTitle = dataTitle.replace(regS, '<span class=\"search-keyword\">' + keyword + '</span>')\n            })\n\n            str += '<div class=\"local-search__hit-item\"><a href=\"' + dataUrl + '\" class=\"search-result-title\">' + dataTitle + '</a>'\n            count += 1\n\n            if (dataContent !== '') {\n              str += '<p class=\"search-result\">' + matchContent + '...</p>'\n            }\n          }\n          str += '</div>'\n        }\n      })\n      if (count === 0) {\n        str += '<div id=\"local-search__hits-empty\">' + GLOBAL_CONFIG.localSearch.languages.hits_empty.replace(/\\$\\{query}/, this.value.trim()) +\n          '</div>'\n      }\n      str += '</div>'\n      $resultContent.innerHTML = str\n      if (keywords[0] !== '') $loadingStatus.innerHTML = ''\n      window.pjax && window.pjax.refresh($resultContent)\n    })\n  }\n})\n"},{"title":"壁纸","date":"2021-12-09T04:22:02.000Z","_content":"{% gallery %}\n![](https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg)\n![](https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg)\n![](https://i.loli.net/2019/12/25/gEy5Zc1Ai6VuO4N.jpg)\n![](https://i.loli.net/2019/12/25/d6QHbytlSYO4FBG.jpg)\n![](https://i.loli.net/2019/12/25/6nepIJ1xTgufatZ.jpg)\n![](https://i.loli.net/2019/12/25/E7Jvr4eIPwUNmzq.jpg)\n![](https://i.loli.net/2019/12/25/mh19anwBSWIkGlH.jpg)\n![](https://i.loli.net/2019/12/25/2tu9JC8ewpBFagv.jpg)\n{% endgallery %}\n","source":"wallpaper/index.md","raw":"---\ntitle: 壁纸\ndate: 2021-12-09 12:22:02\n---\n{% gallery %}\n![](https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg)\n![](https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg)\n![](https://i.loli.net/2019/12/25/gEy5Zc1Ai6VuO4N.jpg)\n![](https://i.loli.net/2019/12/25/d6QHbytlSYO4FBG.jpg)\n![](https://i.loli.net/2019/12/25/6nepIJ1xTgufatZ.jpg)\n![](https://i.loli.net/2019/12/25/E7Jvr4eIPwUNmzq.jpg)\n![](https://i.loli.net/2019/12/25/mh19anwBSWIkGlH.jpg)\n![](https://i.loli.net/2019/12/25/2tu9JC8ewpBFagv.jpg)\n{% endgallery %}\n","updated":"2022-01-14T01:46:15.572Z","path":"wallpaper/index.html","comments":1,"layout":"page","_id":"cl0t0rrl8000x4ctug291bxmf","content":"<div class=\"fj-gallery\"><p><img src=\"https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg\"><br><img src=\"https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg\"><br><img src=\"https://i.loli.net/2019/12/25/gEy5Zc1Ai6VuO4N.jpg\"><br><img src=\"https://i.loli.net/2019/12/25/d6QHbytlSYO4FBG.jpg\"><br><img src=\"https://i.loli.net/2019/12/25/6nepIJ1xTgufatZ.jpg\"><br><img src=\"https://i.loli.net/2019/12/25/E7Jvr4eIPwUNmzq.jpg\"><br><img src=\"https://i.loli.net/2019/12/25/mh19anwBSWIkGlH.jpg\"><br><img src=\"https://i.loli.net/2019/12/25/2tu9JC8ewpBFagv.jpg\"></p>\n          </div>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.gitee.io/zh-CN/","avatar":"https://element-plus.gitee.io/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"}}},"cover":"https://blog.huangge1199.cn/post/pyListSort/bg.jpeg","excerpt":"","more":"<div class=\"fj-gallery\"><p><img src=\"https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg\"><br><img src=\"https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg\"><br><img src=\"https://i.loli.net/2019/12/25/gEy5Zc1Ai6VuO4N.jpg\"><br><img src=\"https://i.loli.net/2019/12/25/d6QHbytlSYO4FBG.jpg\"><br><img src=\"https://i.loli.net/2019/12/25/6nepIJ1xTgufatZ.jpg\"><br><img src=\"https://i.loli.net/2019/12/25/E7Jvr4eIPwUNmzq.jpg\"><br><img src=\"https://i.loli.net/2019/12/25/mh19anwBSWIkGlH.jpg\"><br><img src=\"https://i.loli.net/2019/12/25/2tu9JC8ewpBFagv.jpg\"></p>\n          </div>\n"}],"Post":[{"title":"力扣219:存在重复元素 II","date":"2022-01-19T03:24:37.000Z","cover":"https://blog.huangge1199.cn/post/day20220119/bg.jpeg","_content":"2022年01月19日 力扣每日一题\n\n# 题目\n\n<p>给你一个整数数组&nbsp;<code>nums</code> 和一个整数&nbsp;<code>k</code> ，判断数组中是否存在两个 <strong>不同的索引</strong><em>&nbsp;</em><code>i</code>&nbsp;和<em>&nbsp;</em><code>j</code> ，满足 <code>nums[i] == nums[j]</code> 且 <code>abs(i - j) &lt;= k</code> 。如果存在，返回 <code>true</code> ；否则，返回 <code>false</code> 。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例&nbsp;1：</strong></p>\n\n<pre>\n<strong>输入：</strong>nums = [1,2,3,1], k<em> </em>= 3\n<strong>输出：</strong>true</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>\n<strong>输入：</strong>nums = [1,0,1,1], k<em> </em>=<em> </em>1\n<strong>输出：</strong>true</pre>\n\n<p><strong>示例 3：</strong></p>\n\n<pre>\n<strong>输入：</strong>nums = [1,2,3,1,2,3], k<em> </em>=<em> </em>2\n<strong>输出：</strong>false</pre>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>-10<sup>9</sup> &lt;= nums[i] &lt;= 10<sup>9</sup></code></li>\n\t<li><code>0 &lt;= k &lt;= 10<sup>5</sup></code></li>\n</ul>\n<div><div>Related Topics</div><div><li>数组</li><li>哈希表</li><li>滑动窗口</li></div></div>\n\n# 个人解法\n\n{% tabs categories%}\n<!-- tab Java -->\n```java\nimport java.util.HashMap;\nimport java.util.Map;\n\nclass Solution {\n    public boolean containsNearbyDuplicate(int[] nums, int k) {\n        if (k <= 0) {\n            return false;\n        }\n        Map<Integer, Integer> map = new HashMap<>();\n        for (int i = 0; i < nums.length; i++) {\n            if (map.containsKey(nums[i]) && i - map.get(nums[i]) <= k) {\n                return true;\n            }\n            map.put(nums[i], i);\n        }\n        return false;\n    }\n}\n```\n<!-- endtab -->\n\n<!-- tab Python3 -->\n```python\nfrom typing import List\n\n\nclass Solution:\n    def containsNearbyDuplicate(self, nums: List[int], k: int) -> bool:\n        map = {}\n        for i, num in enumerate(nums):\n            if num in map and i - map[num] <= k:\n                return True\n            map[num] = i\n        return False\n```\n<!-- endtab -->\n{% endtabs %}","source":"_posts/day20220119.md","raw":"---\ntitle: 力扣219:存在重复元素 II\ndate: 2022-01-19 11:24:37\ntags: [力扣]\ncategories: [算法,力扣,每日一题]\ncover: https://blog.huangge1199.cn/post/day20220119/bg.jpeg\n---\n2022年01月19日 力扣每日一题\n\n# 题目\n\n<p>给你一个整数数组&nbsp;<code>nums</code> 和一个整数&nbsp;<code>k</code> ，判断数组中是否存在两个 <strong>不同的索引</strong><em>&nbsp;</em><code>i</code>&nbsp;和<em>&nbsp;</em><code>j</code> ，满足 <code>nums[i] == nums[j]</code> 且 <code>abs(i - j) &lt;= k</code> 。如果存在，返回 <code>true</code> ；否则，返回 <code>false</code> 。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例&nbsp;1：</strong></p>\n\n<pre>\n<strong>输入：</strong>nums = [1,2,3,1], k<em> </em>= 3\n<strong>输出：</strong>true</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>\n<strong>输入：</strong>nums = [1,0,1,1], k<em> </em>=<em> </em>1\n<strong>输出：</strong>true</pre>\n\n<p><strong>示例 3：</strong></p>\n\n<pre>\n<strong>输入：</strong>nums = [1,2,3,1,2,3], k<em> </em>=<em> </em>2\n<strong>输出：</strong>false</pre>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>-10<sup>9</sup> &lt;= nums[i] &lt;= 10<sup>9</sup></code></li>\n\t<li><code>0 &lt;= k &lt;= 10<sup>5</sup></code></li>\n</ul>\n<div><div>Related Topics</div><div><li>数组</li><li>哈希表</li><li>滑动窗口</li></div></div>\n\n# 个人解法\n\n{% tabs categories%}\n<!-- tab Java -->\n```java\nimport java.util.HashMap;\nimport java.util.Map;\n\nclass Solution {\n    public boolean containsNearbyDuplicate(int[] nums, int k) {\n        if (k <= 0) {\n            return false;\n        }\n        Map<Integer, Integer> map = new HashMap<>();\n        for (int i = 0; i < nums.length; i++) {\n            if (map.containsKey(nums[i]) && i - map.get(nums[i]) <= k) {\n                return true;\n            }\n            map.put(nums[i], i);\n        }\n        return false;\n    }\n}\n```\n<!-- endtab -->\n\n<!-- tab Python3 -->\n```python\nfrom typing import List\n\n\nclass Solution:\n    def containsNearbyDuplicate(self, nums: List[int], k: int) -> bool:\n        map = {}\n        for i, num in enumerate(nums):\n            if num in map and i - map[num] <= k:\n                return True\n            map[num] = i\n        return False\n```\n<!-- endtab -->\n{% endtabs %}","slug":"day20220119","published":1,"updated":"2022-01-19T03:32:46.284Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl0t0rrkt00014ctu8xqk6yj5","content":"<p>2022年01月19日 力扣每日一题</p>\n<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>给你一个整数数组&nbsp;<code>nums</code> 和一个整数&nbsp;<code>k</code> ，判断数组中是否存在两个 <strong>不同的索引</strong><em>&nbsp;</em><code>i</code>&nbsp;和<em>&nbsp;</em><code>j</code> ，满足 <code>nums[i] == nums[j]</code> 且 <code>abs(i - j) &lt;= k</code> 。如果存在，返回 <code>true</code> ；否则，返回 <code>false</code> 。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例&nbsp;1：</strong></p>\n\n<pre>\n<strong>输入：</strong>nums = [1,2,3,1], k<em> </em>= 3\n<strong>输出：</strong>true</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>\n<strong>输入：</strong>nums = [1,0,1,1], k<em> </em>=<em> </em>1\n<strong>输出：</strong>true</pre>\n\n<p><strong>示例 3：</strong></p>\n\n<pre>\n<strong>输入：</strong>nums = [1,2,3,1,2,3], k<em> </em>=<em> </em>2\n<strong>输出：</strong>false</pre>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n    <li><code>1 &lt;= nums.length &lt;= 10<sup>5</sup></code></li>\n    <li><code>-10<sup>9</sup> &lt;= nums[i] &lt;= 10<sup>9</sup></code></li>\n    <li><code>0 &lt;= k &lt;= 10<sup>5</sup></code></li>\n</ul>\n<div><div>Related Topics</div><div><li>数组</li><li>哈希表</li><li>滑动窗口</li></div></div>\n\n<h1 id=\"个人解法\"><a href=\"#个人解法\" class=\"headerlink\" title=\"个人解法\"></a>个人解法</h1><div class=\"tabs\" id=\"categories\"><ul class=\"nav-tabs\"><li class=\"tab active\"><button type=\"button\" data-href=\"#categories-1\">Java</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#categories-2\">Python3</button></li></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"categories-1\"><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">import java.util.HashMap;\nimport java.util.Map;\n\nclass Solution &#123;\n    public boolean containsNearbyDuplicate(int[] nums, int k) &#123;\n        if (k &lt;&#x3D; 0) &#123;\n            return false;\n        &#125;\n        Map&lt;Integer, Integer&gt; map &#x3D; new HashMap&lt;&gt;();\n        for (int i &#x3D; 0; i &lt; nums.length; i++) &#123;\n            if (map.containsKey(nums[i]) &amp;&amp; i - map.get(nums[i]) &lt;&#x3D; k) &#123;\n                return true;\n            &#125;\n            map.put(nums[i], i);\n        &#125;\n        return false;\n    &#125;\n&#125;</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"categories-2\"><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">from typing import List\n\n\nclass Solution:\n    def containsNearbyDuplicate(self, nums: List[int], k: int) -&gt; bool:\n        map &#x3D; &#123;&#125;\n        for i, num in enumerate(nums):\n            if num in map and i - map[num] &lt;&#x3D; k:\n                return True\n            map[num] &#x3D; i\n        return False</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div></div>","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.gitee.io/zh-CN/","avatar":"https://element-plus.gitee.io/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"}}},"excerpt":"","more":"<p>2022年01月19日 力扣每日一题</p>\n<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>给你一个整数数组&nbsp;<code>nums</code> 和一个整数&nbsp;<code>k</code> ，判断数组中是否存在两个 <strong>不同的索引</strong><em>&nbsp;</em><code>i</code>&nbsp;和<em>&nbsp;</em><code>j</code> ，满足 <code>nums[i] == nums[j]</code> 且 <code>abs(i - j) &lt;= k</code> 。如果存在，返回 <code>true</code> ；否则，返回 <code>false</code> 。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例&nbsp;1：</strong></p>\n\n<pre>\n<strong>输入：</strong>nums = [1,2,3,1], k<em> </em>= 3\n<strong>输出：</strong>true</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>\n<strong>输入：</strong>nums = [1,0,1,1], k<em> </em>=<em> </em>1\n<strong>输出：</strong>true</pre>\n\n<p><strong>示例 3：</strong></p>\n\n<pre>\n<strong>输入：</strong>nums = [1,2,3,1,2,3], k<em> </em>=<em> </em>2\n<strong>输出：</strong>false</pre>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n    <li><code>1 &lt;= nums.length &lt;= 10<sup>5</sup></code></li>\n    <li><code>-10<sup>9</sup> &lt;= nums[i] &lt;= 10<sup>9</sup></code></li>\n    <li><code>0 &lt;= k &lt;= 10<sup>5</sup></code></li>\n</ul>\n<div><div>Related Topics</div><div><li>数组</li><li>哈希表</li><li>滑动窗口</li></div></div>\n\n<h1 id=\"个人解法\"><a href=\"#个人解法\" class=\"headerlink\" title=\"个人解法\"></a>个人解法</h1><div class=\"tabs\" id=\"categories\"><ul class=\"nav-tabs\"><li class=\"tab active\"><button type=\"button\" data-href=\"#categories-1\">Java</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#categories-2\">Python3</button></li></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"categories-1\"><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">import java.util.HashMap;\nimport java.util.Map;\n\nclass Solution &#123;\n    public boolean containsNearbyDuplicate(int[] nums, int k) &#123;\n        if (k &lt;&#x3D; 0) &#123;\n            return false;\n        &#125;\n        Map&lt;Integer, Integer&gt; map &#x3D; new HashMap&lt;&gt;();\n        for (int i &#x3D; 0; i &lt; nums.length; i++) &#123;\n            if (map.containsKey(nums[i]) &amp;&amp; i - map.get(nums[i]) &lt;&#x3D; k) &#123;\n                return true;\n            &#125;\n            map.put(nums[i], i);\n        &#125;\n        return false;\n    &#125;\n&#125;</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"categories-2\"><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">from typing import List\n\n\nclass Solution:\n    def containsNearbyDuplicate(self, nums: List[int], k: int) -&gt; bool:\n        map &#x3D; &#123;&#125;\n        for i, num in enumerate(nums):\n            if num in map and i - map[num] &lt;&#x3D; k:\n                return True\n            map[num] &#x3D; i\n        return False</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div></div>"},{"title":"力扣539:最小时间差","date":"2022-01-18T06:26:41.000Z","cover":"https://blog.huangge1199.cn/post/day20220118/bg.jpeg","_content":"2022年01月18日 力扣每日一题\n\n# 题目\n\n<p>给定一个 24 小时制（小时:分钟 <strong>\"HH:MM\"</strong>）的时间列表，找出列表中任意两个时间的最小时间差并以分钟数表示。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入：</strong>timePoints = [\"23:59\",\"00:00\"]\n<strong>输出：</strong>1\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>\n<strong>输入：</strong>timePoints = [\"00:00\",\"23:59\",\"00:00\"]\n<strong>输出：</strong>0\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n   <li><code>2 &lt;= timePoints.length &lt;= 2 * 10<sup>4</sup></code></li>\n   <li><code>timePoints[i]</code> 格式为 <strong>\"HH:MM\"</strong></li>\n</ul>\n<div><div>Related Topics</div><div><li>数组</li><li>数学</li><li>字符串</li><li>排序</li></div></div>\n\n# 个人解法\n\n{% tabs categories%}\n<!-- tab Java -->\n\n```java\nimport java.util.List;\n\nclass Solution {\n    public int findMinDifference(List<String> timePoints) {\n        int[] times = new int[2880];\n        for (String timePoint : timePoints) {\n            String[] strs = timePoint.split(\":\");\n            int time = Integer.parseInt(strs[0]) * 60 + Integer.parseInt(strs[1]);\n            if (times[time] == 1) {\n                return 0;\n            }\n            times[time] = 1;\n            times[time + 1440] = 1;\n        }\n        if (times[0] == 1 && times[1439] == 1) {\n            return 1;\n        }\n        int min = 1440;\n        int bef = 0;\n        for (int i = 1; i < 2880; i++) {\n            if (times[i] == 1) {\n                if (bef > 0) {\n                    min = Math.min(min, i - bef);\n                }\n                if (i > 1439) {\n                    break;\n                }\n                bef = i;\n            }\n        }\n        return min;\n    }\n}\n```\n\n<!-- endtab -->\n\n<!-- tab Python3 -->\n\n```python\nfrom typing import List\n\n\nclass Solution:\n    def findMinDifference(self, timePoints: List[str]) -> int:\n        times = [0] * 2880\n        for timePoint in timePoints:\n            time = int(timePoint[:2]) * 60 + int(timePoint[-2:])\n            if times[time] == 1:\n                return 0\n            times[time] = 1\n            times[time + 1440] = 1\n        result = 1440\n        bef = 0\n        for i in range(2880):\n            if times[i] == 1:\n                if bef > 0:\n                    result = min(result, i - bef)\n                if i > 1439:\n                    break\n                bef = i\n        return result\n```\n\n<!-- endtab -->\n{% endtabs %}\n","source":"_posts/day20220118.md","raw":"---\ntitle: 力扣539:最小时间差 \ndate: 2022-01-18 14:26:41 \ntags: [力扣]\ncategories: [算法,力扣,每日一题]\ncover: https://blog.huangge1199.cn/post/day20220118/bg.jpeg\n---\n2022年01月18日 力扣每日一题\n\n# 题目\n\n<p>给定一个 24 小时制（小时:分钟 <strong>\"HH:MM\"</strong>）的时间列表，找出列表中任意两个时间的最小时间差并以分钟数表示。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入：</strong>timePoints = [\"23:59\",\"00:00\"]\n<strong>输出：</strong>1\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>\n<strong>输入：</strong>timePoints = [\"00:00\",\"23:59\",\"00:00\"]\n<strong>输出：</strong>0\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n   <li><code>2 &lt;= timePoints.length &lt;= 2 * 10<sup>4</sup></code></li>\n   <li><code>timePoints[i]</code> 格式为 <strong>\"HH:MM\"</strong></li>\n</ul>\n<div><div>Related Topics</div><div><li>数组</li><li>数学</li><li>字符串</li><li>排序</li></div></div>\n\n# 个人解法\n\n{% tabs categories%}\n<!-- tab Java -->\n\n```java\nimport java.util.List;\n\nclass Solution {\n    public int findMinDifference(List<String> timePoints) {\n        int[] times = new int[2880];\n        for (String timePoint : timePoints) {\n            String[] strs = timePoint.split(\":\");\n            int time = Integer.parseInt(strs[0]) * 60 + Integer.parseInt(strs[1]);\n            if (times[time] == 1) {\n                return 0;\n            }\n            times[time] = 1;\n            times[time + 1440] = 1;\n        }\n        if (times[0] == 1 && times[1439] == 1) {\n            return 1;\n        }\n        int min = 1440;\n        int bef = 0;\n        for (int i = 1; i < 2880; i++) {\n            if (times[i] == 1) {\n                if (bef > 0) {\n                    min = Math.min(min, i - bef);\n                }\n                if (i > 1439) {\n                    break;\n                }\n                bef = i;\n            }\n        }\n        return min;\n    }\n}\n```\n\n<!-- endtab -->\n\n<!-- tab Python3 -->\n\n```python\nfrom typing import List\n\n\nclass Solution:\n    def findMinDifference(self, timePoints: List[str]) -> int:\n        times = [0] * 2880\n        for timePoint in timePoints:\n            time = int(timePoint[:2]) * 60 + int(timePoint[-2:])\n            if times[time] == 1:\n                return 0\n            times[time] = 1\n            times[time + 1440] = 1\n        result = 1440\n        bef = 0\n        for i in range(2880):\n            if times[i] == 1:\n                if bef > 0:\n                    result = min(result, i - bef)\n                if i > 1439:\n                    break\n                bef = i\n        return result\n```\n\n<!-- endtab -->\n{% endtabs %}\n","slug":"day20220118","published":1,"updated":"2022-01-19T03:32:46.278Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl0t0rrkw00034ctu8wih7f7x","content":"<p>2022年01月18日 力扣每日一题</p>\n<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>给定一个 24 小时制（小时:分钟 <strong>\"HH:MM\"</strong>）的时间列表，找出列表中任意两个时间的最小时间差并以分钟数表示。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入：</strong>timePoints = [\"23:59\",\"00:00\"]\n<strong>输出：</strong>1\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>\n<strong>输入：</strong>timePoints = [\"00:00\",\"23:59\",\"00:00\"]\n<strong>输出：</strong>0\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n   <li><code>2 &lt;= timePoints.length &lt;= 2 * 10<sup>4</sup></code></li>\n   <li><code>timePoints[i]</code> 格式为 <strong>\"HH:MM\"</strong></li>\n</ul>\n<div><div>Related Topics</div><div><li>数组</li><li>数学</li><li>字符串</li><li>排序</li></div></div>\n\n<h1 id=\"个人解法\"><a href=\"#个人解法\" class=\"headerlink\" title=\"个人解法\"></a>个人解法</h1><div class=\"tabs\" id=\"categories\"><ul class=\"nav-tabs\"><li class=\"tab active\"><button type=\"button\" data-href=\"#categories-1\">Java</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#categories-2\">Python3</button></li></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"categories-1\"><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">import java.util.List;\n\nclass Solution &#123;\n    public int findMinDifference(List&lt;String&gt; timePoints) &#123;\n        int[] times &#x3D; new int[2880];\n        for (String timePoint : timePoints) &#123;\n            String[] strs &#x3D; timePoint.split(&quot;:&quot;);\n            int time &#x3D; Integer.parseInt(strs[0]) * 60 + Integer.parseInt(strs[1]);\n            if (times[time] &#x3D;&#x3D; 1) &#123;\n                return 0;\n            &#125;\n            times[time] &#x3D; 1;\n            times[time + 1440] &#x3D; 1;\n        &#125;\n        if (times[0] &#x3D;&#x3D; 1 &amp;&amp; times[1439] &#x3D;&#x3D; 1) &#123;\n            return 1;\n        &#125;\n        int min &#x3D; 1440;\n        int bef &#x3D; 0;\n        for (int i &#x3D; 1; i &lt; 2880; i++) &#123;\n            if (times[i] &#x3D;&#x3D; 1) &#123;\n                if (bef &gt; 0) &#123;\n                    min &#x3D; Math.min(min, i - bef);\n                &#125;\n                if (i &gt; 1439) &#123;\n                    break;\n                &#125;\n                bef &#x3D; i;\n            &#125;\n        &#125;\n        return min;\n    &#125;\n&#125;</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"categories-2\"><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">from typing import List\n\n\nclass Solution:\n    def findMinDifference(self, timePoints: List[str]) -&gt; int:\n        times &#x3D; [0] * 2880\n        for timePoint in timePoints:\n            time &#x3D; int(timePoint[:2]) * 60 + int(timePoint[-2:])\n            if times[time] &#x3D;&#x3D; 1:\n                return 0\n            times[time] &#x3D; 1\n            times[time + 1440] &#x3D; 1\n        result &#x3D; 1440\n        bef &#x3D; 0\n        for i in range(2880):\n            if times[i] &#x3D;&#x3D; 1:\n                if bef &gt; 0:\n                    result &#x3D; min(result, i - bef)\n                if i &gt; 1439:\n                    break\n                bef &#x3D; i\n        return result</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div></div>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.gitee.io/zh-CN/","avatar":"https://element-plus.gitee.io/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"}}},"excerpt":"","more":"<p>2022年01月18日 力扣每日一题</p>\n<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>给定一个 24 小时制（小时:分钟 <strong>\"HH:MM\"</strong>）的时间列表，找出列表中任意两个时间的最小时间差并以分钟数表示。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入：</strong>timePoints = [\"23:59\",\"00:00\"]\n<strong>输出：</strong>1\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>\n<strong>输入：</strong>timePoints = [\"00:00\",\"23:59\",\"00:00\"]\n<strong>输出：</strong>0\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n   <li><code>2 &lt;= timePoints.length &lt;= 2 * 10<sup>4</sup></code></li>\n   <li><code>timePoints[i]</code> 格式为 <strong>\"HH:MM\"</strong></li>\n</ul>\n<div><div>Related Topics</div><div><li>数组</li><li>数学</li><li>字符串</li><li>排序</li></div></div>\n\n<h1 id=\"个人解法\"><a href=\"#个人解法\" class=\"headerlink\" title=\"个人解法\"></a>个人解法</h1><div class=\"tabs\" id=\"categories\"><ul class=\"nav-tabs\"><li class=\"tab active\"><button type=\"button\" data-href=\"#categories-1\">Java</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#categories-2\">Python3</button></li></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"categories-1\"><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">import java.util.List;\n\nclass Solution &#123;\n    public int findMinDifference(List&lt;String&gt; timePoints) &#123;\n        int[] times &#x3D; new int[2880];\n        for (String timePoint : timePoints) &#123;\n            String[] strs &#x3D; timePoint.split(&quot;:&quot;);\n            int time &#x3D; Integer.parseInt(strs[0]) * 60 + Integer.parseInt(strs[1]);\n            if (times[time] &#x3D;&#x3D; 1) &#123;\n                return 0;\n            &#125;\n            times[time] &#x3D; 1;\n            times[time + 1440] &#x3D; 1;\n        &#125;\n        if (times[0] &#x3D;&#x3D; 1 &amp;&amp; times[1439] &#x3D;&#x3D; 1) &#123;\n            return 1;\n        &#125;\n        int min &#x3D; 1440;\n        int bef &#x3D; 0;\n        for (int i &#x3D; 1; i &lt; 2880; i++) &#123;\n            if (times[i] &#x3D;&#x3D; 1) &#123;\n                if (bef &gt; 0) &#123;\n                    min &#x3D; Math.min(min, i - bef);\n                &#125;\n                if (i &gt; 1439) &#123;\n                    break;\n                &#125;\n                bef &#x3D; i;\n            &#125;\n        &#125;\n        return min;\n    &#125;\n&#125;</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"categories-2\"><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">from typing import List\n\n\nclass Solution:\n    def findMinDifference(self, timePoints: List[str]) -&gt; int:\n        times &#x3D; [0] * 2880\n        for timePoint in timePoints:\n            time &#x3D; int(timePoint[:2]) * 60 + int(timePoint[-2:])\n            if times[time] &#x3D;&#x3D; 1:\n                return 0\n            times[time] &#x3D; 1\n            times[time + 1440] &#x3D; 1\n        result &#x3D; 1440\n        bef &#x3D; 0\n        for i in range(2880):\n            if times[i] &#x3D;&#x3D; 1:\n                if bef &gt; 0:\n                    result &#x3D; min(result, i - bef)\n                if i &gt; 1439:\n                    break\n                bef &#x3D; i\n        return result</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div></div>\n"},{"title":"力扣2029:石子游戏 IX","date":"2022-01-20T02:56:54.000Z","cover":"https://blog.huangge1199.cn/post/day20220120/bg.jpeg","_content":"2022年01月20日 力扣每日一题\n\n# 题目\n\n<p>Alice 和 Bob 再次设计了一款新的石子游戏。现有一行 n 个石子，每个石子都有一个关联的数字表示它的价值。给你一个整数数组 <code>stones</code> ，其中 <code>stones[i]</code> 是第 <code>i</code> 个石子的价值。</p>\n\n<p>Alice 和 Bob 轮流进行自己的回合，<strong>Alice</strong> 先手。每一回合，玩家需要从 <code>stones</code>&nbsp;中移除任一石子。</p>\n\n<ul>\n\t<li>如果玩家移除石子后，导致 <strong>所有已移除石子</strong> 的价值&nbsp;<strong>总和</strong> 可以被 3 整除，那么该玩家就 <strong>输掉游戏</strong> 。</li>\n\t<li>如果不满足上一条，且移除后没有任何剩余的石子，那么 Bob 将会直接获胜（即便是在 Alice 的回合）。</li>\n</ul>\n\n<p>假设两位玩家均采用&nbsp;<strong>最佳</strong> 决策。如果 Alice 获胜，返回 <code>true</code> ；如果 Bob 获胜，返回 <code>false</code> 。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入：</strong>stones = [2,1]\n<strong>输出：</strong>true\n<strong>解释：</strong>游戏进行如下：\n- 回合 1：Alice 可以移除任意一个石子。\n- 回合 2：Bob 移除剩下的石子。 \n已移除的石子的值总和为 1 + 2 = 3 且可以被 3 整除。因此，Bob 输，Alice 获胜。\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>\n<strong>输入：</strong>stones = [2]\n<strong>输出：</strong>false\n<strong>解释：</strong>Alice 会移除唯一一个石子，已移除石子的值总和为 2 。 \n由于所有石子都已移除，且值总和无法被 3 整除，Bob 获胜。\n</pre>\n\n<p><strong>示例 3：</strong></p>\n\n<pre>\n<strong>输入：</strong>stones = [5,1,2,4,3]\n<strong>输出：</strong>false\n<strong>解释：</strong>Bob 总会获胜。其中一种可能的游戏进行方式如下：\n- 回合 1：Alice 可以移除值为 1 的第 2 个石子。已移除石子值总和为 1 。\n- 回合 2：Bob 可以移除值为 3 的第 5 个石子。已移除石子值总和为 = 1 + 3 = 4 。\n- 回合 3：Alices 可以移除值为 4 的第 4 个石子。已移除石子值总和为 = 1 + 3 + 4 = 8 。\n- 回合 4：Bob 可以移除值为 2 的第 3 个石子。已移除石子值总和为 = 1 + 3 + 4 + 2 = 10.\n- 回合 5：Alice 可以移除值为 5 的第 1 个石子。已移除石子值总和为 = 1 + 3 + 4 + 2 + 5 = 15.\nAlice 输掉游戏，因为已移除石子值总和（15）可以被 3 整除，Bob 获胜。\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= stones.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= stones[i] &lt;= 10<sup>4</sup></code></li>\n</ul>\n<div><div>Related Topics</div><div><li>贪心</li><li>数组</li><li>数学</li><li>计数</li><li>博弈</li></div></div>\n\n# 个人解法\n\n{% tabs categories%}\n<!-- tab Java -->\n```java\nclass Solution {\n    public boolean stoneGameIX(int[] stones) {\n        int[] counts = new int[3];\n        for (int stone : stones) {\n            counts[stone % 3]++;\n        }\n        return counts[0] % 2 == 0 ? counts[1] > 0 && counts[2] > 0 : Math.abs(counts[1] - counts[2]) > 2;\n    }\n}\n```\n<!-- endtab -->\n\n<!-- tab Python3 -->\n```python\nfrom typing import List\n\n\nclass Solution:\n    def stoneGameIX(self, stones: List[int]) -> bool:\n        counts = [0] * 3\n        for stone in stones:\n            counts[stone % 3] += 1\n        if counts[0] % 2 == 0:\n            return counts[1] > 0 and counts[2] > 0\n        else:\n            return abs(counts[1] - counts[2]) > 2\n```\n<!-- endtab -->\n{% endtabs %}","source":"_posts/day20220120.md","raw":"---\ntitle: 力扣2029:石子游戏 IX\ndate: 2022-01-20 10:56:54\ntags: [力扣]\ncategories: [算法,力扣,每日一题]\ncover: https://blog.huangge1199.cn/post/day20220120/bg.jpeg\n---\n2022年01月20日 力扣每日一题\n\n# 题目\n\n<p>Alice 和 Bob 再次设计了一款新的石子游戏。现有一行 n 个石子，每个石子都有一个关联的数字表示它的价值。给你一个整数数组 <code>stones</code> ，其中 <code>stones[i]</code> 是第 <code>i</code> 个石子的价值。</p>\n\n<p>Alice 和 Bob 轮流进行自己的回合，<strong>Alice</strong> 先手。每一回合，玩家需要从 <code>stones</code>&nbsp;中移除任一石子。</p>\n\n<ul>\n\t<li>如果玩家移除石子后，导致 <strong>所有已移除石子</strong> 的价值&nbsp;<strong>总和</strong> 可以被 3 整除，那么该玩家就 <strong>输掉游戏</strong> 。</li>\n\t<li>如果不满足上一条，且移除后没有任何剩余的石子，那么 Bob 将会直接获胜（即便是在 Alice 的回合）。</li>\n</ul>\n\n<p>假设两位玩家均采用&nbsp;<strong>最佳</strong> 决策。如果 Alice 获胜，返回 <code>true</code> ；如果 Bob 获胜，返回 <code>false</code> 。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入：</strong>stones = [2,1]\n<strong>输出：</strong>true\n<strong>解释：</strong>游戏进行如下：\n- 回合 1：Alice 可以移除任意一个石子。\n- 回合 2：Bob 移除剩下的石子。 \n已移除的石子的值总和为 1 + 2 = 3 且可以被 3 整除。因此，Bob 输，Alice 获胜。\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>\n<strong>输入：</strong>stones = [2]\n<strong>输出：</strong>false\n<strong>解释：</strong>Alice 会移除唯一一个石子，已移除石子的值总和为 2 。 \n由于所有石子都已移除，且值总和无法被 3 整除，Bob 获胜。\n</pre>\n\n<p><strong>示例 3：</strong></p>\n\n<pre>\n<strong>输入：</strong>stones = [5,1,2,4,3]\n<strong>输出：</strong>false\n<strong>解释：</strong>Bob 总会获胜。其中一种可能的游戏进行方式如下：\n- 回合 1：Alice 可以移除值为 1 的第 2 个石子。已移除石子值总和为 1 。\n- 回合 2：Bob 可以移除值为 3 的第 5 个石子。已移除石子值总和为 = 1 + 3 = 4 。\n- 回合 3：Alices 可以移除值为 4 的第 4 个石子。已移除石子值总和为 = 1 + 3 + 4 = 8 。\n- 回合 4：Bob 可以移除值为 2 的第 3 个石子。已移除石子值总和为 = 1 + 3 + 4 + 2 = 10.\n- 回合 5：Alice 可以移除值为 5 的第 1 个石子。已移除石子值总和为 = 1 + 3 + 4 + 2 + 5 = 15.\nAlice 输掉游戏，因为已移除石子值总和（15）可以被 3 整除，Bob 获胜。\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= stones.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= stones[i] &lt;= 10<sup>4</sup></code></li>\n</ul>\n<div><div>Related Topics</div><div><li>贪心</li><li>数组</li><li>数学</li><li>计数</li><li>博弈</li></div></div>\n\n# 个人解法\n\n{% tabs categories%}\n<!-- tab Java -->\n```java\nclass Solution {\n    public boolean stoneGameIX(int[] stones) {\n        int[] counts = new int[3];\n        for (int stone : stones) {\n            counts[stone % 3]++;\n        }\n        return counts[0] % 2 == 0 ? counts[1] > 0 && counts[2] > 0 : Math.abs(counts[1] - counts[2]) > 2;\n    }\n}\n```\n<!-- endtab -->\n\n<!-- tab Python3 -->\n```python\nfrom typing import List\n\n\nclass Solution:\n    def stoneGameIX(self, stones: List[int]) -> bool:\n        counts = [0] * 3\n        for stone in stones:\n            counts[stone % 3] += 1\n        if counts[0] % 2 == 0:\n            return counts[1] > 0 and counts[2] > 0\n        else:\n            return abs(counts[1] - counts[2]) > 2\n```\n<!-- endtab -->\n{% endtabs %}","slug":"day20220120","published":1,"updated":"2022-01-20T05:55:20.726Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl0t0rrkz00074ctu8b0dde73","content":"<p>2022年01月20日 力扣每日一题</p>\n<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>Alice 和 Bob 再次设计了一款新的石子游戏。现有一行 n 个石子，每个石子都有一个关联的数字表示它的价值。给你一个整数数组 <code>stones</code> ，其中 <code>stones[i]</code> 是第 <code>i</code> 个石子的价值。</p>\n\n<p>Alice 和 Bob 轮流进行自己的回合，<strong>Alice</strong> 先手。每一回合，玩家需要从 <code>stones</code>&nbsp;中移除任一石子。</p>\n\n<ul>\n    <li>如果玩家移除石子后，导致 <strong>所有已移除石子</strong> 的价值&nbsp;<strong>总和</strong> 可以被 3 整除，那么该玩家就 <strong>输掉游戏</strong> 。</li>\n    <li>如果不满足上一条，且移除后没有任何剩余的石子，那么 Bob 将会直接获胜（即便是在 Alice 的回合）。</li>\n</ul>\n\n<p>假设两位玩家均采用&nbsp;<strong>最佳</strong> 决策。如果 Alice 获胜，返回 <code>true</code> ；如果 Bob 获胜，返回 <code>false</code> 。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入：</strong>stones = [2,1]\n<strong>输出：</strong>true\n<strong>解释：</strong>游戏进行如下：\n- 回合 1：Alice 可以移除任意一个石子。\n- 回合 2：Bob 移除剩下的石子。 \n已移除的石子的值总和为 1 + 2 = 3 且可以被 3 整除。因此，Bob 输，Alice 获胜。\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>\n<strong>输入：</strong>stones = [2]\n<strong>输出：</strong>false\n<strong>解释：</strong>Alice 会移除唯一一个石子，已移除石子的值总和为 2 。 \n由于所有石子都已移除，且值总和无法被 3 整除，Bob 获胜。\n</pre>\n\n<p><strong>示例 3：</strong></p>\n\n<pre>\n<strong>输入：</strong>stones = [5,1,2,4,3]\n<strong>输出：</strong>false\n<strong>解释：</strong>Bob 总会获胜。其中一种可能的游戏进行方式如下：\n- 回合 1：Alice 可以移除值为 1 的第 2 个石子。已移除石子值总和为 1 。\n- 回合 2：Bob 可以移除值为 3 的第 5 个石子。已移除石子值总和为 = 1 + 3 = 4 。\n- 回合 3：Alices 可以移除值为 4 的第 4 个石子。已移除石子值总和为 = 1 + 3 + 4 = 8 。\n- 回合 4：Bob 可以移除值为 2 的第 3 个石子。已移除石子值总和为 = 1 + 3 + 4 + 2 = 10.\n- 回合 5：Alice 可以移除值为 5 的第 1 个石子。已移除石子值总和为 = 1 + 3 + 4 + 2 + 5 = 15.\nAlice 输掉游戏，因为已移除石子值总和（15）可以被 3 整除，Bob 获胜。\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n    <li><code>1 &lt;= stones.length &lt;= 10<sup>5</sup></code></li>\n    <li><code>1 &lt;= stones[i] &lt;= 10<sup>4</sup></code></li>\n</ul>\n<div><div>Related Topics</div><div><li>贪心</li><li>数组</li><li>数学</li><li>计数</li><li>博弈</li></div></div>\n\n<h1 id=\"个人解法\"><a href=\"#个人解法\" class=\"headerlink\" title=\"个人解法\"></a>个人解法</h1><div class=\"tabs\" id=\"categories\"><ul class=\"nav-tabs\"><li class=\"tab active\"><button type=\"button\" data-href=\"#categories-1\">Java</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#categories-2\">Python3</button></li></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"categories-1\"><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">class Solution &#123;\n    public boolean stoneGameIX(int[] stones) &#123;\n        int[] counts &#x3D; new int[3];\n        for (int stone : stones) &#123;\n            counts[stone % 3]++;\n        &#125;\n        return counts[0] % 2 &#x3D;&#x3D; 0 ? counts[1] &gt; 0 &amp;&amp; counts[2] &gt; 0 : Math.abs(counts[1] - counts[2]) &gt; 2;\n    &#125;\n&#125;</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"categories-2\"><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">from typing import List\n\n\nclass Solution:\n    def stoneGameIX(self, stones: List[int]) -&gt; bool:\n        counts &#x3D; [0] * 3\n        for stone in stones:\n            counts[stone % 3] +&#x3D; 1\n        if counts[0] % 2 &#x3D;&#x3D; 0:\n            return counts[1] &gt; 0 and counts[2] &gt; 0\n        else:\n            return abs(counts[1] - counts[2]) &gt; 2</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div></div>","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.gitee.io/zh-CN/","avatar":"https://element-plus.gitee.io/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"}}},"excerpt":"","more":"<p>2022年01月20日 力扣每日一题</p>\n<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>Alice 和 Bob 再次设计了一款新的石子游戏。现有一行 n 个石子，每个石子都有一个关联的数字表示它的价值。给你一个整数数组 <code>stones</code> ，其中 <code>stones[i]</code> 是第 <code>i</code> 个石子的价值。</p>\n\n<p>Alice 和 Bob 轮流进行自己的回合，<strong>Alice</strong> 先手。每一回合，玩家需要从 <code>stones</code>&nbsp;中移除任一石子。</p>\n\n<ul>\n    <li>如果玩家移除石子后，导致 <strong>所有已移除石子</strong> 的价值&nbsp;<strong>总和</strong> 可以被 3 整除，那么该玩家就 <strong>输掉游戏</strong> 。</li>\n    <li>如果不满足上一条，且移除后没有任何剩余的石子，那么 Bob 将会直接获胜（即便是在 Alice 的回合）。</li>\n</ul>\n\n<p>假设两位玩家均采用&nbsp;<strong>最佳</strong> 决策。如果 Alice 获胜，返回 <code>true</code> ；如果 Bob 获胜，返回 <code>false</code> 。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入：</strong>stones = [2,1]\n<strong>输出：</strong>true\n<strong>解释：</strong>游戏进行如下：\n- 回合 1：Alice 可以移除任意一个石子。\n- 回合 2：Bob 移除剩下的石子。 \n已移除的石子的值总和为 1 + 2 = 3 且可以被 3 整除。因此，Bob 输，Alice 获胜。\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>\n<strong>输入：</strong>stones = [2]\n<strong>输出：</strong>false\n<strong>解释：</strong>Alice 会移除唯一一个石子，已移除石子的值总和为 2 。 \n由于所有石子都已移除，且值总和无法被 3 整除，Bob 获胜。\n</pre>\n\n<p><strong>示例 3：</strong></p>\n\n<pre>\n<strong>输入：</strong>stones = [5,1,2,4,3]\n<strong>输出：</strong>false\n<strong>解释：</strong>Bob 总会获胜。其中一种可能的游戏进行方式如下：\n- 回合 1：Alice 可以移除值为 1 的第 2 个石子。已移除石子值总和为 1 。\n- 回合 2：Bob 可以移除值为 3 的第 5 个石子。已移除石子值总和为 = 1 + 3 = 4 。\n- 回合 3：Alices 可以移除值为 4 的第 4 个石子。已移除石子值总和为 = 1 + 3 + 4 = 8 。\n- 回合 4：Bob 可以移除值为 2 的第 3 个石子。已移除石子值总和为 = 1 + 3 + 4 + 2 = 10.\n- 回合 5：Alice 可以移除值为 5 的第 1 个石子。已移除石子值总和为 = 1 + 3 + 4 + 2 + 5 = 15.\nAlice 输掉游戏，因为已移除石子值总和（15）可以被 3 整除，Bob 获胜。\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n    <li><code>1 &lt;= stones.length &lt;= 10<sup>5</sup></code></li>\n    <li><code>1 &lt;= stones[i] &lt;= 10<sup>4</sup></code></li>\n</ul>\n<div><div>Related Topics</div><div><li>贪心</li><li>数组</li><li>数学</li><li>计数</li><li>博弈</li></div></div>\n\n<h1 id=\"个人解法\"><a href=\"#个人解法\" class=\"headerlink\" title=\"个人解法\"></a>个人解法</h1><div class=\"tabs\" id=\"categories\"><ul class=\"nav-tabs\"><li class=\"tab active\"><button type=\"button\" data-href=\"#categories-1\">Java</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#categories-2\">Python3</button></li></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"categories-1\"><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">class Solution &#123;\n    public boolean stoneGameIX(int[] stones) &#123;\n        int[] counts &#x3D; new int[3];\n        for (int stone : stones) &#123;\n            counts[stone % 3]++;\n        &#125;\n        return counts[0] % 2 &#x3D;&#x3D; 0 ? counts[1] &gt; 0 &amp;&amp; counts[2] &gt; 0 : Math.abs(counts[1] - counts[2]) &gt; 2;\n    &#125;\n&#125;</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"categories-2\"><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">from typing import List\n\n\nclass Solution:\n    def stoneGameIX(self, stones: List[int]) -&gt; bool:\n        counts &#x3D; [0] * 3\n        for stone in stones:\n            counts[stone % 3] +&#x3D; 1\n        if counts[0] % 2 &#x3D;&#x3D; 0:\n            return counts[1] &gt; 0 and counts[2] &gt; 0\n        else:\n            return abs(counts[1] - counts[2]) &gt; 2</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div></div>"},{"title":"力扣1345:跳跃游戏 IV","date":"2022-01-21T08:26:26.000Z","cover":"https://blog.huangge1199.cn/post/day20220121/bg.jpeg","_content":"2022年01月21日 力扣每日一题\n\n# 题目\n\n<p>给你一个整数数组&nbsp;<code>arr</code>&nbsp;，你一开始在数组的第一个元素处（下标为 0）。</p>\n\n<p>每一步，你可以从下标&nbsp;<code>i</code>&nbsp;跳到下标：</p>\n\n<ul>\n\t<li><code>i + 1</code>&nbsp;满足：<code>i + 1 &lt; arr.length</code></li>\n\t<li><code>i - 1</code>&nbsp;满足：<code>i - 1 &gt;= 0</code></li>\n\t<li><code>j</code>&nbsp;满足：<code>arr[i] == arr[j]</code>&nbsp;且&nbsp;<code>i != j</code></li>\n</ul>\n\n<p>请你返回到达数组最后一个元素的下标处所需的&nbsp;<strong>最少操作次数</strong>&nbsp;。</p>\n\n<p>注意：任何时候你都不能跳到数组外面。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入：</strong>arr = [100,-23,-23,404,100,23,23,23,3,404]\n<strong>输出：</strong>3\n<strong>解释：</strong>那你需要跳跃 3 次，下标依次为 0 --&gt; 4 --&gt; 3 --&gt; 9 。下标 9 为数组的最后一个元素的下标。\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入：</strong>arr = [7]\n<strong>输出：</strong>0\n<strong>解释：</strong>一开始就在最后一个元素处，所以你不需要跳跃。\n</pre>\n\n<p><strong>示例 3：</strong></p>\n\n<pre><strong>输入：</strong>arr = [7,6,9,6,9,6,9,7]\n<strong>输出：</strong>1\n<strong>解释：</strong>你可以直接从下标 0 处跳到下标 7 处，也就是数组的最后一个元素处。\n</pre>\n\n<p><strong>示例 4：</strong></p>\n\n<pre><strong>输入：</strong>arr = [6,1,9]\n<strong>输出：</strong>2\n</pre>\n\n<p><strong>示例 5：</strong></p>\n\n<pre><strong>输入：</strong>arr = [11,22,7,7,7,7,7,7,7,22,13]\n<strong>输出：</strong>3\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= arr.length &lt;= 5 * 10^4</code></li>\n\t<li><code>-10^8 &lt;= arr[i] &lt;= 10^8</code></li>\n</ul>\n<div><div>Related Topics</div><div><li>广度优先搜索</li><li>数组</li><li>哈希表</li></div></div>\n\n# 个人解法\n\n{% tabs categories%}\n<!-- tab Java -->\n```java\nimport java.util.*;\n\nclass Solution {\n    public int minJumps(int[] arr) {\n        if (arr.length == 1) {\n            return 0;\n        }\n        boolean[] use = new boolean[arr.length];\n        Map<Integer, List<Integer>> map = new HashMap<>();\n        for (int i = 0; i < arr.length; i++) {\n            map.computeIfAbsent(arr[i], k -> new ArrayList<>\n        }\n        use[0] = true;\n        Queue<Integer> queue = new ArrayDeque<>();\n        queue.add(0);\n        int count = 0;\n        while (!queue.isEmpty()) {\n            int size = queue.size();\n            count++;\n            for (int i = 0; i < size; i++) {\n                int index = queue.poll();\n                if (index - 1 >= 0 && !use[index - 1]) {\n                    queue.add(index - 1);\n                    use[index - 1] = true;\n                }\n                if (index + 1 == arr.length - 1) {\n                    return count;\n                }\n                if (index + 1 >= 0 && !use[index + 1]) {\n                    queue.add(index + 1);\n                    use[index + 1] = true;\n                }\n                if (map.containsKey(arr[index])) {\n                    List<Integer> list = map.get(arr[index])\n                    map.remove(arr[index]);\n                    for (int ind : list) {\n                        if (ind == arr.length - 1) {\n                            return count;\n                        }\n                        if (!use[ind]) {\n                            queue.add(ind);\n                            use[ind] = true;\n                        }\n                    }\n                }\n            }\n        }\n        return 0;\n    }\n}\n```\n<!-- endtab -->\n\n<!-- tab Python3 -->\n```python\nfrom collections import defaultdict, deque\nfrom typing import List\n\n\nclass Solution:\n    def minJumps(self, arr: List[int]) -> int:\n        if len(arr) == 1:\n            return 0\n        map = defaultdict(list)\n        for i, a in enumerate(arr):\n            map[a].append(i)\n        use = set()\n        queue = deque()\n        queue.append(0)\n        use.add(0)\n        count = 0\n        while queue:\n            count += 1\n            for i in range(len(queue)):\n                index = queue.popleft()\n                if index - 1 >= 0 and (index - 1) not in use:\n                    use.add(index - 1)\n                    queue.append(index - 1)\n                if index + 1 == len(arr) - 1:\n                    return count\n                if index + 1 < len(arr) and (index + 1) not in use:\n                    use.add(index + 1)\n                    queue.append(index + 1)\n                v = arr[index]\n                for i in map[v]:\n                    if i == len(arr) - 1:\n                        return count\n                    if i not in use:\n                        use.add(i)\n                        queue.append(i)\n                del map[v]\n```\n<!-- endtab -->\n{% endtabs %}","source":"_posts/day20220121.md","raw":"---\ntitle: 力扣1345:跳跃游戏 IV\ndate: 2022-01-21 16:26:26\ntags: [力扣]\ncategories: [算法,力扣,每日一题]\ncover: https://blog.huangge1199.cn/post/day20220121/bg.jpeg\n---\n2022年01月21日 力扣每日一题\n\n# 题目\n\n<p>给你一个整数数组&nbsp;<code>arr</code>&nbsp;，你一开始在数组的第一个元素处（下标为 0）。</p>\n\n<p>每一步，你可以从下标&nbsp;<code>i</code>&nbsp;跳到下标：</p>\n\n<ul>\n\t<li><code>i + 1</code>&nbsp;满足：<code>i + 1 &lt; arr.length</code></li>\n\t<li><code>i - 1</code>&nbsp;满足：<code>i - 1 &gt;= 0</code></li>\n\t<li><code>j</code>&nbsp;满足：<code>arr[i] == arr[j]</code>&nbsp;且&nbsp;<code>i != j</code></li>\n</ul>\n\n<p>请你返回到达数组最后一个元素的下标处所需的&nbsp;<strong>最少操作次数</strong>&nbsp;。</p>\n\n<p>注意：任何时候你都不能跳到数组外面。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入：</strong>arr = [100,-23,-23,404,100,23,23,23,3,404]\n<strong>输出：</strong>3\n<strong>解释：</strong>那你需要跳跃 3 次，下标依次为 0 --&gt; 4 --&gt; 3 --&gt; 9 。下标 9 为数组的最后一个元素的下标。\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入：</strong>arr = [7]\n<strong>输出：</strong>0\n<strong>解释：</strong>一开始就在最后一个元素处，所以你不需要跳跃。\n</pre>\n\n<p><strong>示例 3：</strong></p>\n\n<pre><strong>输入：</strong>arr = [7,6,9,6,9,6,9,7]\n<strong>输出：</strong>1\n<strong>解释：</strong>你可以直接从下标 0 处跳到下标 7 处，也就是数组的最后一个元素处。\n</pre>\n\n<p><strong>示例 4：</strong></p>\n\n<pre><strong>输入：</strong>arr = [6,1,9]\n<strong>输出：</strong>2\n</pre>\n\n<p><strong>示例 5：</strong></p>\n\n<pre><strong>输入：</strong>arr = [11,22,7,7,7,7,7,7,7,22,13]\n<strong>输出：</strong>3\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= arr.length &lt;= 5 * 10^4</code></li>\n\t<li><code>-10^8 &lt;= arr[i] &lt;= 10^8</code></li>\n</ul>\n<div><div>Related Topics</div><div><li>广度优先搜索</li><li>数组</li><li>哈希表</li></div></div>\n\n# 个人解法\n\n{% tabs categories%}\n<!-- tab Java -->\n```java\nimport java.util.*;\n\nclass Solution {\n    public int minJumps(int[] arr) {\n        if (arr.length == 1) {\n            return 0;\n        }\n        boolean[] use = new boolean[arr.length];\n        Map<Integer, List<Integer>> map = new HashMap<>();\n        for (int i = 0; i < arr.length; i++) {\n            map.computeIfAbsent(arr[i], k -> new ArrayList<>\n        }\n        use[0] = true;\n        Queue<Integer> queue = new ArrayDeque<>();\n        queue.add(0);\n        int count = 0;\n        while (!queue.isEmpty()) {\n            int size = queue.size();\n            count++;\n            for (int i = 0; i < size; i++) {\n                int index = queue.poll();\n                if (index - 1 >= 0 && !use[index - 1]) {\n                    queue.add(index - 1);\n                    use[index - 1] = true;\n                }\n                if (index + 1 == arr.length - 1) {\n                    return count;\n                }\n                if (index + 1 >= 0 && !use[index + 1]) {\n                    queue.add(index + 1);\n                    use[index + 1] = true;\n                }\n                if (map.containsKey(arr[index])) {\n                    List<Integer> list = map.get(arr[index])\n                    map.remove(arr[index]);\n                    for (int ind : list) {\n                        if (ind == arr.length - 1) {\n                            return count;\n                        }\n                        if (!use[ind]) {\n                            queue.add(ind);\n                            use[ind] = true;\n                        }\n                    }\n                }\n            }\n        }\n        return 0;\n    }\n}\n```\n<!-- endtab -->\n\n<!-- tab Python3 -->\n```python\nfrom collections import defaultdict, deque\nfrom typing import List\n\n\nclass Solution:\n    def minJumps(self, arr: List[int]) -> int:\n        if len(arr) == 1:\n            return 0\n        map = defaultdict(list)\n        for i, a in enumerate(arr):\n            map[a].append(i)\n        use = set()\n        queue = deque()\n        queue.append(0)\n        use.add(0)\n        count = 0\n        while queue:\n            count += 1\n            for i in range(len(queue)):\n                index = queue.popleft()\n                if index - 1 >= 0 and (index - 1) not in use:\n                    use.add(index - 1)\n                    queue.append(index - 1)\n                if index + 1 == len(arr) - 1:\n                    return count\n                if index + 1 < len(arr) and (index + 1) not in use:\n                    use.add(index + 1)\n                    queue.append(index + 1)\n                v = arr[index]\n                for i in map[v]:\n                    if i == len(arr) - 1:\n                        return count\n                    if i not in use:\n                        use.add(i)\n                        queue.append(i)\n                del map[v]\n```\n<!-- endtab -->\n{% endtabs %}","slug":"day20220121","published":1,"updated":"2022-01-21T08:33:16.998Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl0t0rrl000094ctub0m4gk0h","content":"<p>2022年01月21日 力扣每日一题</p>\n<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>给你一个整数数组&nbsp;<code>arr</code>&nbsp;，你一开始在数组的第一个元素处（下标为 0）。</p>\n\n<p>每一步，你可以从下标&nbsp;<code>i</code>&nbsp;跳到下标：</p>\n\n<ul>\n    <li><code>i + 1</code>&nbsp;满足：<code>i + 1 &lt; arr.length</code></li>\n    <li><code>i - 1</code>&nbsp;满足：<code>i - 1 &gt;= 0</code></li>\n    <li><code>j</code>&nbsp;满足：<code>arr[i] == arr[j]</code>&nbsp;且&nbsp;<code>i != j</code></li>\n</ul>\n\n<p>请你返回到达数组最后一个元素的下标处所需的&nbsp;<strong>最少操作次数</strong>&nbsp;。</p>\n\n<p>注意：任何时候你都不能跳到数组外面。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入：</strong>arr = [100,-23,-23,404,100,23,23,23,3,404]\n<strong>输出：</strong>3\n<strong>解释：</strong>那你需要跳跃 3 次，下标依次为 0 --&gt; 4 --&gt; 3 --&gt; 9 。下标 9 为数组的最后一个元素的下标。\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入：</strong>arr = [7]\n<strong>输出：</strong>0\n<strong>解释：</strong>一开始就在最后一个元素处，所以你不需要跳跃。\n</pre>\n\n<p><strong>示例 3：</strong></p>\n\n<pre><strong>输入：</strong>arr = [7,6,9,6,9,6,9,7]\n<strong>输出：</strong>1\n<strong>解释：</strong>你可以直接从下标 0 处跳到下标 7 处，也就是数组的最后一个元素处。\n</pre>\n\n<p><strong>示例 4：</strong></p>\n\n<pre><strong>输入：</strong>arr = [6,1,9]\n<strong>输出：</strong>2\n</pre>\n\n<p><strong>示例 5：</strong></p>\n\n<pre><strong>输入：</strong>arr = [11,22,7,7,7,7,7,7,7,22,13]\n<strong>输出：</strong>3\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n    <li><code>1 &lt;= arr.length &lt;= 5 * 10^4</code></li>\n    <li><code>-10^8 &lt;= arr[i] &lt;= 10^8</code></li>\n</ul>\n<div><div>Related Topics</div><div><li>广度优先搜索</li><li>数组</li><li>哈希表</li></div></div>\n\n<h1 id=\"个人解法\"><a href=\"#个人解法\" class=\"headerlink\" title=\"个人解法\"></a>个人解法</h1><div class=\"tabs\" id=\"categories\"><ul class=\"nav-tabs\"><li class=\"tab active\"><button type=\"button\" data-href=\"#categories-1\">Java</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#categories-2\">Python3</button></li></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"categories-1\"><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">import java.util.*;\n\nclass Solution &#123;\n    public int minJumps(int[] arr) &#123;\n        if (arr.length &#x3D;&#x3D; 1) &#123;\n            return 0;\n        &#125;\n        boolean[] use &#x3D; new boolean[arr.length];\n        Map&lt;Integer, List&lt;Integer&gt;&gt; map &#x3D; new HashMap&lt;&gt;();\n        for (int i &#x3D; 0; i &lt; arr.length; i++) &#123;\n            map.computeIfAbsent(arr[i], k -&gt; new ArrayList&lt;&gt;\n        &#125;\n        use[0] &#x3D; true;\n        Queue&lt;Integer&gt; queue &#x3D; new ArrayDeque&lt;&gt;();\n        queue.add(0);\n        int count &#x3D; 0;\n        while (!queue.isEmpty()) &#123;\n            int size &#x3D; queue.size();\n            count++;\n            for (int i &#x3D; 0; i &lt; size; i++) &#123;\n                int index &#x3D; queue.poll();\n                if (index - 1 &gt;&#x3D; 0 &amp;&amp; !use[index - 1]) &#123;\n                    queue.add(index - 1);\n                    use[index - 1] &#x3D; true;\n                &#125;\n                if (index + 1 &#x3D;&#x3D; arr.length - 1) &#123;\n                    return count;\n                &#125;\n                if (index + 1 &gt;&#x3D; 0 &amp;&amp; !use[index + 1]) &#123;\n                    queue.add(index + 1);\n                    use[index + 1] &#x3D; true;\n                &#125;\n                if (map.containsKey(arr[index])) &#123;\n                    List&lt;Integer&gt; list &#x3D; map.get(arr[index])\n                    map.remove(arr[index]);\n                    for (int ind : list) &#123;\n                        if (ind &#x3D;&#x3D; arr.length - 1) &#123;\n                            return count;\n                        &#125;\n                        if (!use[ind]) &#123;\n                            queue.add(ind);\n                            use[ind] &#x3D; true;\n                        &#125;\n                    &#125;\n                &#125;\n            &#125;\n        &#125;\n        return 0;\n    &#125;\n&#125;</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"categories-2\"><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">from collections import defaultdict, deque\nfrom typing import List\n\n\nclass Solution:\n    def minJumps(self, arr: List[int]) -&gt; int:\n        if len(arr) &#x3D;&#x3D; 1:\n            return 0\n        map &#x3D; defaultdict(list)\n        for i, a in enumerate(arr):\n            map[a].append(i)\n        use &#x3D; set()\n        queue &#x3D; deque()\n        queue.append(0)\n        use.add(0)\n        count &#x3D; 0\n        while queue:\n            count +&#x3D; 1\n            for i in range(len(queue)):\n                index &#x3D; queue.popleft()\n                if index - 1 &gt;&#x3D; 0 and (index - 1) not in use:\n                    use.add(index - 1)\n                    queue.append(index - 1)\n                if index + 1 &#x3D;&#x3D; len(arr) - 1:\n                    return count\n                if index + 1 &lt; len(arr) and (index + 1) not in use:\n                    use.add(index + 1)\n                    queue.append(index + 1)\n                v &#x3D; arr[index]\n                for i in map[v]:\n                    if i &#x3D;&#x3D; len(arr) - 1:\n                        return count\n                    if i not in use:\n                        use.add(i)\n                        queue.append(i)\n                del map[v]</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div></div>","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.gitee.io/zh-CN/","avatar":"https://element-plus.gitee.io/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"}}},"excerpt":"","more":"<p>2022年01月21日 力扣每日一题</p>\n<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>给你一个整数数组&nbsp;<code>arr</code>&nbsp;，你一开始在数组的第一个元素处（下标为 0）。</p>\n\n<p>每一步，你可以从下标&nbsp;<code>i</code>&nbsp;跳到下标：</p>\n\n<ul>\n    <li><code>i + 1</code>&nbsp;满足：<code>i + 1 &lt; arr.length</code></li>\n    <li><code>i - 1</code>&nbsp;满足：<code>i - 1 &gt;= 0</code></li>\n    <li><code>j</code>&nbsp;满足：<code>arr[i] == arr[j]</code>&nbsp;且&nbsp;<code>i != j</code></li>\n</ul>\n\n<p>请你返回到达数组最后一个元素的下标处所需的&nbsp;<strong>最少操作次数</strong>&nbsp;。</p>\n\n<p>注意：任何时候你都不能跳到数组外面。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入：</strong>arr = [100,-23,-23,404,100,23,23,23,3,404]\n<strong>输出：</strong>3\n<strong>解释：</strong>那你需要跳跃 3 次，下标依次为 0 --&gt; 4 --&gt; 3 --&gt; 9 。下标 9 为数组的最后一个元素的下标。\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入：</strong>arr = [7]\n<strong>输出：</strong>0\n<strong>解释：</strong>一开始就在最后一个元素处，所以你不需要跳跃。\n</pre>\n\n<p><strong>示例 3：</strong></p>\n\n<pre><strong>输入：</strong>arr = [7,6,9,6,9,6,9,7]\n<strong>输出：</strong>1\n<strong>解释：</strong>你可以直接从下标 0 处跳到下标 7 处，也就是数组的最后一个元素处。\n</pre>\n\n<p><strong>示例 4：</strong></p>\n\n<pre><strong>输入：</strong>arr = [6,1,9]\n<strong>输出：</strong>2\n</pre>\n\n<p><strong>示例 5：</strong></p>\n\n<pre><strong>输入：</strong>arr = [11,22,7,7,7,7,7,7,7,22,13]\n<strong>输出：</strong>3\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n    <li><code>1 &lt;= arr.length &lt;= 5 * 10^4</code></li>\n    <li><code>-10^8 &lt;= arr[i] &lt;= 10^8</code></li>\n</ul>\n<div><div>Related Topics</div><div><li>广度优先搜索</li><li>数组</li><li>哈希表</li></div></div>\n\n<h1 id=\"个人解法\"><a href=\"#个人解法\" class=\"headerlink\" title=\"个人解法\"></a>个人解法</h1><div class=\"tabs\" id=\"categories\"><ul class=\"nav-tabs\"><li class=\"tab active\"><button type=\"button\" data-href=\"#categories-1\">Java</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#categories-2\">Python3</button></li></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"categories-1\"><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">import java.util.*;\n\nclass Solution &#123;\n    public int minJumps(int[] arr) &#123;\n        if (arr.length &#x3D;&#x3D; 1) &#123;\n            return 0;\n        &#125;\n        boolean[] use &#x3D; new boolean[arr.length];\n        Map&lt;Integer, List&lt;Integer&gt;&gt; map &#x3D; new HashMap&lt;&gt;();\n        for (int i &#x3D; 0; i &lt; arr.length; i++) &#123;\n            map.computeIfAbsent(arr[i], k -&gt; new ArrayList&lt;&gt;\n        &#125;\n        use[0] &#x3D; true;\n        Queue&lt;Integer&gt; queue &#x3D; new ArrayDeque&lt;&gt;();\n        queue.add(0);\n        int count &#x3D; 0;\n        while (!queue.isEmpty()) &#123;\n            int size &#x3D; queue.size();\n            count++;\n            for (int i &#x3D; 0; i &lt; size; i++) &#123;\n                int index &#x3D; queue.poll();\n                if (index - 1 &gt;&#x3D; 0 &amp;&amp; !use[index - 1]) &#123;\n                    queue.add(index - 1);\n                    use[index - 1] &#x3D; true;\n                &#125;\n                if (index + 1 &#x3D;&#x3D; arr.length - 1) &#123;\n                    return count;\n                &#125;\n                if (index + 1 &gt;&#x3D; 0 &amp;&amp; !use[index + 1]) &#123;\n                    queue.add(index + 1);\n                    use[index + 1] &#x3D; true;\n                &#125;\n                if (map.containsKey(arr[index])) &#123;\n                    List&lt;Integer&gt; list &#x3D; map.get(arr[index])\n                    map.remove(arr[index]);\n                    for (int ind : list) &#123;\n                        if (ind &#x3D;&#x3D; arr.length - 1) &#123;\n                            return count;\n                        &#125;\n                        if (!use[ind]) &#123;\n                            queue.add(ind);\n                            use[ind] &#x3D; true;\n                        &#125;\n                    &#125;\n                &#125;\n            &#125;\n        &#125;\n        return 0;\n    &#125;\n&#125;</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"categories-2\"><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">from collections import defaultdict, deque\nfrom typing import List\n\n\nclass Solution:\n    def minJumps(self, arr: List[int]) -&gt; int:\n        if len(arr) &#x3D;&#x3D; 1:\n            return 0\n        map &#x3D; defaultdict(list)\n        for i, a in enumerate(arr):\n            map[a].append(i)\n        use &#x3D; set()\n        queue &#x3D; deque()\n        queue.append(0)\n        use.add(0)\n        count &#x3D; 0\n        while queue:\n            count +&#x3D; 1\n            for i in range(len(queue)):\n                index &#x3D; queue.popleft()\n                if index - 1 &gt;&#x3D; 0 and (index - 1) not in use:\n                    use.add(index - 1)\n                    queue.append(index - 1)\n                if index + 1 &#x3D;&#x3D; len(arr) - 1:\n                    return count\n                if index + 1 &lt; len(arr) and (index + 1) not in use:\n                    use.add(index + 1)\n                    queue.append(index + 1)\n                v &#x3D; arr[index]\n                for i in map[v]:\n                    if i &#x3D;&#x3D; len(arr) - 1:\n                        return count\n                    if i not in use:\n                        use.add(i)\n                        queue.append(i)\n                del map[v]</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div></div>"},{"title":"力扣2045:到达目的地的第二短时间","date":"2022-01-24T07:22:58.000Z","_content":"2022年01月24日 力扣每日一题\n\n# 题目\n\n<p>城市用一个 <strong>双向连通</strong> 图表示，图中有 <code>n</code> 个节点，从 <code>1</code> 到 <code>n</code> 编号（包含 <code>1</code> 和 <code>n</code>）。图中的边用一个二维整数数组 <code>edges</code> 表示，其中每个 <code>edges[i] = [u<sub>i</sub>, v<sub>i</sub>]</code>&nbsp;表示一条节点&nbsp;<code>u<sub>i</sub></code> 和节点&nbsp;<code>v<sub>i</sub></code> 之间的双向连通边。每组节点对由 <strong>最多一条</strong> 边连通，顶点不存在连接到自身的边。穿过任意一条边的时间是 <code>time</code>&nbsp;分钟。</p>\n\n<p>每个节点都有一个交通信号灯，每 <code>change</code> 分钟改变一次，从绿色变成红色，再由红色变成绿色，循环往复。所有信号灯都&nbsp;<strong>同时</strong> 改变。你可以在 <strong>任何时候</strong> 进入某个节点，但是 <strong>只能</strong> 在节点&nbsp;<strong>信号灯是绿色时</strong> 才能离开。如果信号灯是&nbsp; <strong>绿色</strong> ，你 <strong>不能</strong> 在节点等待，必须离开。</p>\n\n<p><strong>第二小的值</strong> 是&nbsp;<strong>严格大于</strong> 最小值的所有值中最小的值。</p>\n\n<ul>\n\t<li>例如，<code>[2, 3, 4]</code> 中第二小的值是 <code>3</code> ，而 <code>[2, 2, 4]</code> 中第二小的值是 <code>4</code> 。</li>\n</ul>\n\n<p>给你 <code>n</code>、<code>edges</code>、<code>time</code> 和 <code>change</code> ，返回从节点 <code>1</code> 到节点 <code>n</code> 需要的 <strong>第二短时间</strong> 。</p>\n\n<p><strong>注意：</strong></p>\n\n<ul>\n\t<li>你可以 <strong>任意次</strong> 穿过任意顶点，<strong>包括</strong> <code>1</code> 和 <code>n</code> 。</li>\n\t<li>你可以假设在 <strong>启程时</strong> ，所有信号灯刚刚变成 <strong>绿色</strong> 。</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/09/29/e1.png\" style=\"width: 200px; height: 250px;\" />        <img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/09/29/e2.png\" style=\"width: 200px; height: 250px;\" /></p>\n\n<pre>\n<strong>输入：</strong>n = 5, edges = [[1,2],[1,3],[1,4],[3,4],[4,5]], time = 3, change = 5\n<strong>输出：</strong>13\n<strong>解释：</strong>\n上面的左图展现了给出的城市交通图。\n右图中的蓝色路径是最短时间路径。\n花费的时间是：\n- 从节点 1 开始，总花费时间=0\n- 1 -&gt; 4：3 分钟，总花费时间=3\n- 4 -&gt; 5：3 分钟，总花费时间=6\n因此需要的最小时间是 6 分钟。\n\n右图中的红色路径是第二短时间路径。\n- 从节点 1 开始，总花费时间=0\n- 1 -&gt; 3：3 分钟，总花费时间=3\n- 3 -&gt; 4：3 分钟，总花费时间=6\n- 在节点 4 等待 4 分钟，总花费时间=10\n- 4 -&gt; 5：3 分钟，总花费时间=13\n因此第二短时间是 13 分钟。      \n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/09/29/eg2.png\" style=\"width: 225px; height: 50px;\" /></p>\n\n<pre>\n<strong>输入：</strong>n = 2, edges = [[1,2]], time = 3, change = 2\n<strong>输出：</strong>11\n<strong>解释：</strong>\n最短时间路径是 1 -&gt; 2 ，总花费时间 = 3 分钟\n最短时间路径是 1 -&gt; 2 -&gt; 1 -&gt; 2 ，总花费时间 = 11 分钟</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= n &lt;= 10<sup>4</sup></code></li>\n\t<li><code>n - 1 &lt;= edges.length &lt;= min(2 * 10<sup>4</sup>, n * (n - 1) / 2)</code></li>\n\t<li><code>edges[i].length == 2</code></li>\n\t<li><code>1 &lt;= u<sub>i</sub>, v<sub>i</sub> &lt;= n</code></li>\n\t<li><code>u<sub>i</sub> != v<sub>i</sub></code></li>\n\t<li>不含重复边</li>\n\t<li>每个节点都可以从其他节点直接或者间接到达</li>\n\t<li><code>1 &lt;= time, change &lt;= 10<sup>3</sup></code></li>\n</ul>\n<div><div>Related Topics</div><div><li>广度优先搜索</li><li>图</li><li>最短路</li></div></div>\n\n# 个人解法\n\n{% tabs categories%}\n<!-- tab Java -->\n```java\nimport java.util.*;\n\nclass Solution {\n    public int secondMinimum(int n, int[][] edges, int time, int change) {\n        // 统计所有节点的联通节点，并将其存入map中留着后面使用\n        Map<Integer, List<Integer>> map = new HashMap<>(n);\n        for (int i = 1; i <= n; i++) {\n            map.put(i, new ArrayList<>());\n        }\n        for (int[] edge : edges) {\n            map.get(edge[0]).add(edge[1]);\n            map.get(edge[1]).add(edge[0]);\n        }\n        Queue<Integer> queue = new LinkedList<>();\n        queue.add(1);\n        // 记录节点到达的次数\n        int[] counts = new int[n + 1];\n        // 记录到达节点的时间\n        int free = 0;\n        while (!queue.isEmpty()) {\n            // 红灯情况下加上需要等待的时间\n            if (free % (2 * change) >= change) {\n                free += change - free % change;\n            }\n            free += time;\n            // 同一时间可以到达的节点数量\n            int size = queue.size();\n            // 同一时间节点是否已经到达\n            boolean[] use = new boolean[n + 1];\n            for (int i = 0; i < size; i++) {\n                // 获取该节点接下来可以到达的节点\n                List<Integer> list = map.get(queue.poll());\n                for (int num : list) {\n                    // 同一时间未到达，并且到达该节点的总次数小于2\n                    if (!use[num] && counts[num] < 2) {\n                        queue.add(num);\n                        use[num] = true;\n                        counts[num]++;\n                    }\n                    // 如果是第二次到达最后一个节点，直接返回需要到达的诗句\n                    if (num == n && counts[num] == 2) {\n                        return free;\n                    }\n                }\n            }\n        }\n        return 0;\n    }\n}\n```\n<!-- endtab -->\n\n<!-- tab Python3 -->\n```python\nfrom collections import deque\nfrom typing import List\n\n\nclass Solution:\n    def secondMinimum(self, n: int, edges: List[List[int]], time: int, change: int) -> int:\n        # 统计所有节点的联通节点，并将其存入map中留着后面使用\n        maps = [[0] for _ in range(n + 1)]\n        for edge in edges:\n            maps[edge[0]].append(edge[1])\n            maps[edge[1]].append(edge[0])\n        queue = deque()\n        queue.append(1)\n        # 记录节点到达的次数\n        counts = [0] * (n + 1)\n        # 记录到达节点的时间\n        free = 0\n        while len(queue):\n            # 红灯情况下加上需要等待的时间\n            if free % (2 * change) >= change:\n                free += change - free % change\n            free += time\n            # 同一时间可以到达的节点数量\n            size = len(queue)\n            # 同一时间节点是否已经到达\n            use = [False] * (n + 1)\n            for i in range(size):\n                for num in maps[queue.popleft()]:\n                    # 同一时间未到达，并且到达该节点的总次数小于2\n                    if use[num] is False and counts[num] < 2:\n                        queue.append(num)\n                        use[num] = True\n                        counts[num] += 1\n\n                    # 如果是第二次到达最后一个节点，直接返回需要到达的诗句\n                    if num == n and counts[num] == 2:\n                        return free\n        return 0\n```\n<!-- endtab -->\n{% endtabs %}","source":"_posts/day20220124.md","raw":"---\ntitle: 力扣2045:到达目的地的第二短时间\ndate: 2022-01-24 15:22:58\ntags: [力扣]\ncategories: [算法,力扣,每日一题]\n---\n2022年01月24日 力扣每日一题\n\n# 题目\n\n<p>城市用一个 <strong>双向连通</strong> 图表示，图中有 <code>n</code> 个节点，从 <code>1</code> 到 <code>n</code> 编号（包含 <code>1</code> 和 <code>n</code>）。图中的边用一个二维整数数组 <code>edges</code> 表示，其中每个 <code>edges[i] = [u<sub>i</sub>, v<sub>i</sub>]</code>&nbsp;表示一条节点&nbsp;<code>u<sub>i</sub></code> 和节点&nbsp;<code>v<sub>i</sub></code> 之间的双向连通边。每组节点对由 <strong>最多一条</strong> 边连通，顶点不存在连接到自身的边。穿过任意一条边的时间是 <code>time</code>&nbsp;分钟。</p>\n\n<p>每个节点都有一个交通信号灯，每 <code>change</code> 分钟改变一次，从绿色变成红色，再由红色变成绿色，循环往复。所有信号灯都&nbsp;<strong>同时</strong> 改变。你可以在 <strong>任何时候</strong> 进入某个节点，但是 <strong>只能</strong> 在节点&nbsp;<strong>信号灯是绿色时</strong> 才能离开。如果信号灯是&nbsp; <strong>绿色</strong> ，你 <strong>不能</strong> 在节点等待，必须离开。</p>\n\n<p><strong>第二小的值</strong> 是&nbsp;<strong>严格大于</strong> 最小值的所有值中最小的值。</p>\n\n<ul>\n\t<li>例如，<code>[2, 3, 4]</code> 中第二小的值是 <code>3</code> ，而 <code>[2, 2, 4]</code> 中第二小的值是 <code>4</code> 。</li>\n</ul>\n\n<p>给你 <code>n</code>、<code>edges</code>、<code>time</code> 和 <code>change</code> ，返回从节点 <code>1</code> 到节点 <code>n</code> 需要的 <strong>第二短时间</strong> 。</p>\n\n<p><strong>注意：</strong></p>\n\n<ul>\n\t<li>你可以 <strong>任意次</strong> 穿过任意顶点，<strong>包括</strong> <code>1</code> 和 <code>n</code> 。</li>\n\t<li>你可以假设在 <strong>启程时</strong> ，所有信号灯刚刚变成 <strong>绿色</strong> 。</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/09/29/e1.png\" style=\"width: 200px; height: 250px;\" />        <img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/09/29/e2.png\" style=\"width: 200px; height: 250px;\" /></p>\n\n<pre>\n<strong>输入：</strong>n = 5, edges = [[1,2],[1,3],[1,4],[3,4],[4,5]], time = 3, change = 5\n<strong>输出：</strong>13\n<strong>解释：</strong>\n上面的左图展现了给出的城市交通图。\n右图中的蓝色路径是最短时间路径。\n花费的时间是：\n- 从节点 1 开始，总花费时间=0\n- 1 -&gt; 4：3 分钟，总花费时间=3\n- 4 -&gt; 5：3 分钟，总花费时间=6\n因此需要的最小时间是 6 分钟。\n\n右图中的红色路径是第二短时间路径。\n- 从节点 1 开始，总花费时间=0\n- 1 -&gt; 3：3 分钟，总花费时间=3\n- 3 -&gt; 4：3 分钟，总花费时间=6\n- 在节点 4 等待 4 分钟，总花费时间=10\n- 4 -&gt; 5：3 分钟，总花费时间=13\n因此第二短时间是 13 分钟。      \n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/09/29/eg2.png\" style=\"width: 225px; height: 50px;\" /></p>\n\n<pre>\n<strong>输入：</strong>n = 2, edges = [[1,2]], time = 3, change = 2\n<strong>输出：</strong>11\n<strong>解释：</strong>\n最短时间路径是 1 -&gt; 2 ，总花费时间 = 3 分钟\n最短时间路径是 1 -&gt; 2 -&gt; 1 -&gt; 2 ，总花费时间 = 11 分钟</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= n &lt;= 10<sup>4</sup></code></li>\n\t<li><code>n - 1 &lt;= edges.length &lt;= min(2 * 10<sup>4</sup>, n * (n - 1) / 2)</code></li>\n\t<li><code>edges[i].length == 2</code></li>\n\t<li><code>1 &lt;= u<sub>i</sub>, v<sub>i</sub> &lt;= n</code></li>\n\t<li><code>u<sub>i</sub> != v<sub>i</sub></code></li>\n\t<li>不含重复边</li>\n\t<li>每个节点都可以从其他节点直接或者间接到达</li>\n\t<li><code>1 &lt;= time, change &lt;= 10<sup>3</sup></code></li>\n</ul>\n<div><div>Related Topics</div><div><li>广度优先搜索</li><li>图</li><li>最短路</li></div></div>\n\n# 个人解法\n\n{% tabs categories%}\n<!-- tab Java -->\n```java\nimport java.util.*;\n\nclass Solution {\n    public int secondMinimum(int n, int[][] edges, int time, int change) {\n        // 统计所有节点的联通节点，并将其存入map中留着后面使用\n        Map<Integer, List<Integer>> map = new HashMap<>(n);\n        for (int i = 1; i <= n; i++) {\n            map.put(i, new ArrayList<>());\n        }\n        for (int[] edge : edges) {\n            map.get(edge[0]).add(edge[1]);\n            map.get(edge[1]).add(edge[0]);\n        }\n        Queue<Integer> queue = new LinkedList<>();\n        queue.add(1);\n        // 记录节点到达的次数\n        int[] counts = new int[n + 1];\n        // 记录到达节点的时间\n        int free = 0;\n        while (!queue.isEmpty()) {\n            // 红灯情况下加上需要等待的时间\n            if (free % (2 * change) >= change) {\n                free += change - free % change;\n            }\n            free += time;\n            // 同一时间可以到达的节点数量\n            int size = queue.size();\n            // 同一时间节点是否已经到达\n            boolean[] use = new boolean[n + 1];\n            for (int i = 0; i < size; i++) {\n                // 获取该节点接下来可以到达的节点\n                List<Integer> list = map.get(queue.poll());\n                for (int num : list) {\n                    // 同一时间未到达，并且到达该节点的总次数小于2\n                    if (!use[num] && counts[num] < 2) {\n                        queue.add(num);\n                        use[num] = true;\n                        counts[num]++;\n                    }\n                    // 如果是第二次到达最后一个节点，直接返回需要到达的诗句\n                    if (num == n && counts[num] == 2) {\n                        return free;\n                    }\n                }\n            }\n        }\n        return 0;\n    }\n}\n```\n<!-- endtab -->\n\n<!-- tab Python3 -->\n```python\nfrom collections import deque\nfrom typing import List\n\n\nclass Solution:\n    def secondMinimum(self, n: int, edges: List[List[int]], time: int, change: int) -> int:\n        # 统计所有节点的联通节点，并将其存入map中留着后面使用\n        maps = [[0] for _ in range(n + 1)]\n        for edge in edges:\n            maps[edge[0]].append(edge[1])\n            maps[edge[1]].append(edge[0])\n        queue = deque()\n        queue.append(1)\n        # 记录节点到达的次数\n        counts = [0] * (n + 1)\n        # 记录到达节点的时间\n        free = 0\n        while len(queue):\n            # 红灯情况下加上需要等待的时间\n            if free % (2 * change) >= change:\n                free += change - free % change\n            free += time\n            # 同一时间可以到达的节点数量\n            size = len(queue)\n            # 同一时间节点是否已经到达\n            use = [False] * (n + 1)\n            for i in range(size):\n                for num in maps[queue.popleft()]:\n                    # 同一时间未到达，并且到达该节点的总次数小于2\n                    if use[num] is False and counts[num] < 2:\n                        queue.append(num)\n                        use[num] = True\n                        counts[num] += 1\n\n                    # 如果是第二次到达最后一个节点，直接返回需要到达的诗句\n                    if num == n and counts[num] == 2:\n                        return free\n        return 0\n```\n<!-- endtab -->\n{% endtabs %}","slug":"day20220124","published":1,"updated":"2022-01-24T08:01:34.283Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl0t0rrl1000b4ctubwtj0huw","content":"<p>2022年01月24日 力扣每日一题</p>\n<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>城市用一个 <strong>双向连通</strong> 图表示，图中有 <code>n</code> 个节点，从 <code>1</code> 到 <code>n</code> 编号（包含 <code>1</code> 和 <code>n</code>）。图中的边用一个二维整数数组 <code>edges</code> 表示，其中每个 <code>edges[i] = [u<sub>i</sub>, v<sub>i</sub>]</code>&nbsp;表示一条节点&nbsp;<code>u<sub>i</sub></code> 和节点&nbsp;<code>v<sub>i</sub></code> 之间的双向连通边。每组节点对由 <strong>最多一条</strong> 边连通，顶点不存在连接到自身的边。穿过任意一条边的时间是 <code>time</code>&nbsp;分钟。</p>\n\n<p>每个节点都有一个交通信号灯，每 <code>change</code> 分钟改变一次，从绿色变成红色，再由红色变成绿色，循环往复。所有信号灯都&nbsp;<strong>同时</strong> 改变。你可以在 <strong>任何时候</strong> 进入某个节点，但是 <strong>只能</strong> 在节点&nbsp;<strong>信号灯是绿色时</strong> 才能离开。如果信号灯是&nbsp; <strong>绿色</strong> ，你 <strong>不能</strong> 在节点等待，必须离开。</p>\n\n<p><strong>第二小的值</strong> 是&nbsp;<strong>严格大于</strong> 最小值的所有值中最小的值。</p>\n\n<ul>\n    <li>例如，<code>[2, 3, 4]</code> 中第二小的值是 <code>3</code> ，而 <code>[2, 2, 4]</code> 中第二小的值是 <code>4</code> 。</li>\n</ul>\n\n<p>给你 <code>n</code>、<code>edges</code>、<code>time</code> 和 <code>change</code> ，返回从节点 <code>1</code> 到节点 <code>n</code> 需要的 <strong>第二短时间</strong> 。</p>\n\n<p><strong>注意：</strong></p>\n\n<ul>\n    <li>你可以 <strong>任意次</strong> 穿过任意顶点，<strong>包括</strong> <code>1</code> 和 <code>n</code> 。</li>\n    <li>你可以假设在 <strong>启程时</strong> ，所有信号灯刚刚变成 <strong>绿色</strong> 。</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/09/29/e1.png\" style=\"width: 200px; height: 250px;\" />        <img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/09/29/e2.png\" style=\"width: 200px; height: 250px;\" /></p>\n\n<pre>\n<strong>输入：</strong>n = 5, edges = [[1,2],[1,3],[1,4],[3,4],[4,5]], time = 3, change = 5\n<strong>输出：</strong>13\n<strong>解释：</strong>\n上面的左图展现了给出的城市交通图。\n右图中的蓝色路径是最短时间路径。\n花费的时间是：\n- 从节点 1 开始，总花费时间=0\n- 1 -&gt; 4：3 分钟，总花费时间=3\n- 4 -&gt; 5：3 分钟，总花费时间=6\n因此需要的最小时间是 6 分钟。\n\n右图中的红色路径是第二短时间路径。\n- 从节点 1 开始，总花费时间=0\n- 1 -&gt; 3：3 分钟，总花费时间=3\n- 3 -&gt; 4：3 分钟，总花费时间=6\n- 在节点 4 等待 4 分钟，总花费时间=10\n- 4 -&gt; 5：3 分钟，总花费时间=13\n因此第二短时间是 13 分钟。      \n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/09/29/eg2.png\" style=\"width: 225px; height: 50px;\" /></p>\n\n<pre>\n<strong>输入：</strong>n = 2, edges = [[1,2]], time = 3, change = 2\n<strong>输出：</strong>11\n<strong>解释：</strong>\n最短时间路径是 1 -&gt; 2 ，总花费时间 = 3 分钟\n最短时间路径是 1 -&gt; 2 -&gt; 1 -&gt; 2 ，总花费时间 = 11 分钟</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n    <li><code>2 &lt;= n &lt;= 10<sup>4</sup></code></li>\n    <li><code>n - 1 &lt;= edges.length &lt;= min(2 * 10<sup>4</sup>, n * (n - 1) / 2)</code></li>\n    <li><code>edges[i].length == 2</code></li>\n    <li><code>1 &lt;= u<sub>i</sub>, v<sub>i</sub> &lt;= n</code></li>\n    <li><code>u<sub>i</sub> != v<sub>i</sub></code></li>\n    <li>不含重复边</li>\n    <li>每个节点都可以从其他节点直接或者间接到达</li>\n    <li><code>1 &lt;= time, change &lt;= 10<sup>3</sup></code></li>\n</ul>\n<div><div>Related Topics</div><div><li>广度优先搜索</li><li>图</li><li>最短路</li></div></div>\n\n<h1 id=\"个人解法\"><a href=\"#个人解法\" class=\"headerlink\" title=\"个人解法\"></a>个人解法</h1><div class=\"tabs\" id=\"categories\"><ul class=\"nav-tabs\"><li class=\"tab active\"><button type=\"button\" data-href=\"#categories-1\">Java</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#categories-2\">Python3</button></li></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"categories-1\"><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">import java.util.*;\n\nclass Solution &#123;\n    public int secondMinimum(int n, int[][] edges, int time, int change) &#123;\n        &#x2F;&#x2F; 统计所有节点的联通节点，并将其存入map中留着后面使用\n        Map&lt;Integer, List&lt;Integer&gt;&gt; map &#x3D; new HashMap&lt;&gt;(n);\n        for (int i &#x3D; 1; i &lt;&#x3D; n; i++) &#123;\n            map.put(i, new ArrayList&lt;&gt;());\n        &#125;\n        for (int[] edge : edges) &#123;\n            map.get(edge[0]).add(edge[1]);\n            map.get(edge[1]).add(edge[0]);\n        &#125;\n        Queue&lt;Integer&gt; queue &#x3D; new LinkedList&lt;&gt;();\n        queue.add(1);\n        &#x2F;&#x2F; 记录节点到达的次数\n        int[] counts &#x3D; new int[n + 1];\n        &#x2F;&#x2F; 记录到达节点的时间\n        int free &#x3D; 0;\n        while (!queue.isEmpty()) &#123;\n            &#x2F;&#x2F; 红灯情况下加上需要等待的时间\n            if (free % (2 * change) &gt;&#x3D; change) &#123;\n                free +&#x3D; change - free % change;\n            &#125;\n            free +&#x3D; time;\n            &#x2F;&#x2F; 同一时间可以到达的节点数量\n            int size &#x3D; queue.size();\n            &#x2F;&#x2F; 同一时间节点是否已经到达\n            boolean[] use &#x3D; new boolean[n + 1];\n            for (int i &#x3D; 0; i &lt; size; i++) &#123;\n                &#x2F;&#x2F; 获取该节点接下来可以到达的节点\n                List&lt;Integer&gt; list &#x3D; map.get(queue.poll());\n                for (int num : list) &#123;\n                    &#x2F;&#x2F; 同一时间未到达，并且到达该节点的总次数小于2\n                    if (!use[num] &amp;&amp; counts[num] &lt; 2) &#123;\n                        queue.add(num);\n                        use[num] &#x3D; true;\n                        counts[num]++;\n                    &#125;\n                    &#x2F;&#x2F; 如果是第二次到达最后一个节点，直接返回需要到达的诗句\n                    if (num &#x3D;&#x3D; n &amp;&amp; counts[num] &#x3D;&#x3D; 2) &#123;\n                        return free;\n                    &#125;\n                &#125;\n            &#125;\n        &#125;\n        return 0;\n    &#125;\n&#125;</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"categories-2\"><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">from collections import deque\nfrom typing import List\n\n\nclass Solution:\n    def secondMinimum(self, n: int, edges: List[List[int]], time: int, change: int) -&gt; int:\n        # 统计所有节点的联通节点，并将其存入map中留着后面使用\n        maps &#x3D; [[0] for _ in range(n + 1)]\n        for edge in edges:\n            maps[edge[0]].append(edge[1])\n            maps[edge[1]].append(edge[0])\n        queue &#x3D; deque()\n        queue.append(1)\n        # 记录节点到达的次数\n        counts &#x3D; [0] * (n + 1)\n        # 记录到达节点的时间\n        free &#x3D; 0\n        while len(queue):\n            # 红灯情况下加上需要等待的时间\n            if free % (2 * change) &gt;&#x3D; change:\n                free +&#x3D; change - free % change\n            free +&#x3D; time\n            # 同一时间可以到达的节点数量\n            size &#x3D; len(queue)\n            # 同一时间节点是否已经到达\n            use &#x3D; [False] * (n + 1)\n            for i in range(size):\n                for num in maps[queue.popleft()]:\n                    # 同一时间未到达，并且到达该节点的总次数小于2\n                    if use[num] is False and counts[num] &lt; 2:\n                        queue.append(num)\n                        use[num] &#x3D; True\n                        counts[num] +&#x3D; 1\n\n                    # 如果是第二次到达最后一个节点，直接返回需要到达的诗句\n                    if num &#x3D;&#x3D; n and counts[num] &#x3D;&#x3D; 2:\n                        return free\n        return 0</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div></div>","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.gitee.io/zh-CN/","avatar":"https://element-plus.gitee.io/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"}}},"cover":"https://file.huangge1199.cn/group1/M00/00/00/CgAYB2HzmTKAcuJeAAKgw-sbfmQ23.jpeg","excerpt":"","more":"<p>2022年01月24日 力扣每日一题</p>\n<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>城市用一个 <strong>双向连通</strong> 图表示，图中有 <code>n</code> 个节点，从 <code>1</code> 到 <code>n</code> 编号（包含 <code>1</code> 和 <code>n</code>）。图中的边用一个二维整数数组 <code>edges</code> 表示，其中每个 <code>edges[i] = [u<sub>i</sub>, v<sub>i</sub>]</code>&nbsp;表示一条节点&nbsp;<code>u<sub>i</sub></code> 和节点&nbsp;<code>v<sub>i</sub></code> 之间的双向连通边。每组节点对由 <strong>最多一条</strong> 边连通，顶点不存在连接到自身的边。穿过任意一条边的时间是 <code>time</code>&nbsp;分钟。</p>\n\n<p>每个节点都有一个交通信号灯，每 <code>change</code> 分钟改变一次，从绿色变成红色，再由红色变成绿色，循环往复。所有信号灯都&nbsp;<strong>同时</strong> 改变。你可以在 <strong>任何时候</strong> 进入某个节点，但是 <strong>只能</strong> 在节点&nbsp;<strong>信号灯是绿色时</strong> 才能离开。如果信号灯是&nbsp; <strong>绿色</strong> ，你 <strong>不能</strong> 在节点等待，必须离开。</p>\n\n<p><strong>第二小的值</strong> 是&nbsp;<strong>严格大于</strong> 最小值的所有值中最小的值。</p>\n\n<ul>\n    <li>例如，<code>[2, 3, 4]</code> 中第二小的值是 <code>3</code> ，而 <code>[2, 2, 4]</code> 中第二小的值是 <code>4</code> 。</li>\n</ul>\n\n<p>给你 <code>n</code>、<code>edges</code>、<code>time</code> 和 <code>change</code> ，返回从节点 <code>1</code> 到节点 <code>n</code> 需要的 <strong>第二短时间</strong> 。</p>\n\n<p><strong>注意：</strong></p>\n\n<ul>\n    <li>你可以 <strong>任意次</strong> 穿过任意顶点，<strong>包括</strong> <code>1</code> 和 <code>n</code> 。</li>\n    <li>你可以假设在 <strong>启程时</strong> ，所有信号灯刚刚变成 <strong>绿色</strong> 。</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/09/29/e1.png\" style=\"width: 200px; height: 250px;\" />        <img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/09/29/e2.png\" style=\"width: 200px; height: 250px;\" /></p>\n\n<pre>\n<strong>输入：</strong>n = 5, edges = [[1,2],[1,3],[1,4],[3,4],[4,5]], time = 3, change = 5\n<strong>输出：</strong>13\n<strong>解释：</strong>\n上面的左图展现了给出的城市交通图。\n右图中的蓝色路径是最短时间路径。\n花费的时间是：\n- 从节点 1 开始，总花费时间=0\n- 1 -&gt; 4：3 分钟，总花费时间=3\n- 4 -&gt; 5：3 分钟，总花费时间=6\n因此需要的最小时间是 6 分钟。\n\n右图中的红色路径是第二短时间路径。\n- 从节点 1 开始，总花费时间=0\n- 1 -&gt; 3：3 分钟，总花费时间=3\n- 3 -&gt; 4：3 分钟，总花费时间=6\n- 在节点 4 等待 4 分钟，总花费时间=10\n- 4 -&gt; 5：3 分钟，总花费时间=13\n因此第二短时间是 13 分钟。      \n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/09/29/eg2.png\" style=\"width: 225px; height: 50px;\" /></p>\n\n<pre>\n<strong>输入：</strong>n = 2, edges = [[1,2]], time = 3, change = 2\n<strong>输出：</strong>11\n<strong>解释：</strong>\n最短时间路径是 1 -&gt; 2 ，总花费时间 = 3 分钟\n最短时间路径是 1 -&gt; 2 -&gt; 1 -&gt; 2 ，总花费时间 = 11 分钟</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n    <li><code>2 &lt;= n &lt;= 10<sup>4</sup></code></li>\n    <li><code>n - 1 &lt;= edges.length &lt;= min(2 * 10<sup>4</sup>, n * (n - 1) / 2)</code></li>\n    <li><code>edges[i].length == 2</code></li>\n    <li><code>1 &lt;= u<sub>i</sub>, v<sub>i</sub> &lt;= n</code></li>\n    <li><code>u<sub>i</sub> != v<sub>i</sub></code></li>\n    <li>不含重复边</li>\n    <li>每个节点都可以从其他节点直接或者间接到达</li>\n    <li><code>1 &lt;= time, change &lt;= 10<sup>3</sup></code></li>\n</ul>\n<div><div>Related Topics</div><div><li>广度优先搜索</li><li>图</li><li>最短路</li></div></div>\n\n<h1 id=\"个人解法\"><a href=\"#个人解法\" class=\"headerlink\" title=\"个人解法\"></a>个人解法</h1><div class=\"tabs\" id=\"categories\"><ul class=\"nav-tabs\"><li class=\"tab active\"><button type=\"button\" data-href=\"#categories-1\">Java</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#categories-2\">Python3</button></li></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"categories-1\"><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">import java.util.*;\n\nclass Solution &#123;\n    public int secondMinimum(int n, int[][] edges, int time, int change) &#123;\n        &#x2F;&#x2F; 统计所有节点的联通节点，并将其存入map中留着后面使用\n        Map&lt;Integer, List&lt;Integer&gt;&gt; map &#x3D; new HashMap&lt;&gt;(n);\n        for (int i &#x3D; 1; i &lt;&#x3D; n; i++) &#123;\n            map.put(i, new ArrayList&lt;&gt;());\n        &#125;\n        for (int[] edge : edges) &#123;\n            map.get(edge[0]).add(edge[1]);\n            map.get(edge[1]).add(edge[0]);\n        &#125;\n        Queue&lt;Integer&gt; queue &#x3D; new LinkedList&lt;&gt;();\n        queue.add(1);\n        &#x2F;&#x2F; 记录节点到达的次数\n        int[] counts &#x3D; new int[n + 1];\n        &#x2F;&#x2F; 记录到达节点的时间\n        int free &#x3D; 0;\n        while (!queue.isEmpty()) &#123;\n            &#x2F;&#x2F; 红灯情况下加上需要等待的时间\n            if (free % (2 * change) &gt;&#x3D; change) &#123;\n                free +&#x3D; change - free % change;\n            &#125;\n            free +&#x3D; time;\n            &#x2F;&#x2F; 同一时间可以到达的节点数量\n            int size &#x3D; queue.size();\n            &#x2F;&#x2F; 同一时间节点是否已经到达\n            boolean[] use &#x3D; new boolean[n + 1];\n            for (int i &#x3D; 0; i &lt; size; i++) &#123;\n                &#x2F;&#x2F; 获取该节点接下来可以到达的节点\n                List&lt;Integer&gt; list &#x3D; map.get(queue.poll());\n                for (int num : list) &#123;\n                    &#x2F;&#x2F; 同一时间未到达，并且到达该节点的总次数小于2\n                    if (!use[num] &amp;&amp; counts[num] &lt; 2) &#123;\n                        queue.add(num);\n                        use[num] &#x3D; true;\n                        counts[num]++;\n                    &#125;\n                    &#x2F;&#x2F; 如果是第二次到达最后一个节点，直接返回需要到达的诗句\n                    if (num &#x3D;&#x3D; n &amp;&amp; counts[num] &#x3D;&#x3D; 2) &#123;\n                        return free;\n                    &#125;\n                &#125;\n            &#125;\n        &#125;\n        return 0;\n    &#125;\n&#125;</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"categories-2\"><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">from collections import deque\nfrom typing import List\n\n\nclass Solution:\n    def secondMinimum(self, n: int, edges: List[List[int]], time: int, change: int) -&gt; int:\n        # 统计所有节点的联通节点，并将其存入map中留着后面使用\n        maps &#x3D; [[0] for _ in range(n + 1)]\n        for edge in edges:\n            maps[edge[0]].append(edge[1])\n            maps[edge[1]].append(edge[0])\n        queue &#x3D; deque()\n        queue.append(1)\n        # 记录节点到达的次数\n        counts &#x3D; [0] * (n + 1)\n        # 记录到达节点的时间\n        free &#x3D; 0\n        while len(queue):\n            # 红灯情况下加上需要等待的时间\n            if free % (2 * change) &gt;&#x3D; change:\n                free +&#x3D; change - free % change\n            free +&#x3D; time\n            # 同一时间可以到达的节点数量\n            size &#x3D; len(queue)\n            # 同一时间节点是否已经到达\n            use &#x3D; [False] * (n + 1)\n            for i in range(size):\n                for num in maps[queue.popleft()]:\n                    # 同一时间未到达，并且到达该节点的总次数小于2\n                    if use[num] is False and counts[num] &lt; 2:\n                        queue.append(num)\n                        use[num] &#x3D; True\n                        counts[num] +&#x3D; 1\n\n                    # 如果是第二次到达最后一个节点，直接返回需要到达的诗句\n                    if num &#x3D;&#x3D; n and counts[num] &#x3D;&#x3D; 2:\n                        return free\n        return 0</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div></div>"},{"title":"力扣1219:黄金矿工","date":"2022-02-06T04:37:26.000Z","_content":"2022年02月05日 力扣每日一题\n\n# 题目\n\n<p>你要开发一座金矿，地质勘测学家已经探明了这座金矿中的资源分布，并用大小为&nbsp;<code>m * n</code> 的网格 <code>grid</code> 进行了标注。每个单元格中的整数就表示这一单元格中的黄金数量；如果该单元格是空的，那么就是 <code>0</code>。</p>\n\n<p>为了使收益最大化，矿工需要按以下规则来开采黄金：</p>\n\n<ul>\n\t<li>每当矿工进入一个单元，就会收集该单元格中的所有黄金。</li>\n\t<li>矿工每次可以从当前位置向上下左右四个方向走。</li>\n\t<li>每个单元格只能被开采（进入）一次。</li>\n\t<li><strong>不得开采</strong>（进入）黄金数目为 <code>0</code> 的单元格。</li>\n\t<li>矿工可以从网格中 <strong>任意一个</strong> 有黄金的单元格出发或者是停止。</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入：</strong>grid = [[0,6,0],[5,8,7],[0,9,0]]\n<strong>输出：</strong>24\n<strong>解释：</strong>\n[[0,6,0],\n [5,8,7],\n [0,9,0]]\n一种收集最多黄金的路线是：9 -&gt; 8 -&gt; 7。\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入：</strong>grid = [[1,0,7],[2,0,6],[3,4,5],[0,3,0],[9,0,20]]\n<strong>输出：</strong>28\n<strong>解释：</strong>\n[[1,0,7],\n [2,0,6],\n [3,4,5],\n [0,3,0],\n [9,0,20]]\n一种收集最多黄金的路线是：1 -&gt; 2 -&gt; 3 -&gt; 4 -&gt; 5 -&gt; 6 -&gt; 7。\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= grid.length,&nbsp;grid[i].length &lt;= 15</code></li>\n\t<li><code>0 &lt;= grid[i][j] &lt;= 100</code></li>\n\t<li>最多 <strong>25 </strong>个单元格中有黄金。</li>\n</ul>\n<div><div>Related Topics</div><div><li>数组</li><li>回溯</li><li>矩阵</li></div></div>\n\n# 个人解法\n\n{% tabs categories%}\n<!-- tab Java -->\n```java\nclass Solution {\n    int[] xl = new int[]{1, -1, 0, 0};\n    int[] yl = new int[]{0, 0, 1, -1};\n    public int getMaximumGold(int[][] grid) {\n        int counts = 0;\n        boolean[][] use = new boolean[grid.length][grid[0].length];\n        for (int i = 0; i < grid.length; i++) {\n            for (int j = 0; j < grid[0].length; j++) {\n                use[i][j] = true;\n                counts = Math.max(counts, dfs(i, j, grid, use));\n                use[i][j] = false;\n            }\n        }\n        return counts;\n    }\n    private int dfs(int x, int y, int[][] grid, boolean[][] use) {\n        int counts = grid[x][y];\n        for (int i = 0; i < 4; i++) {\n            int nx = x + xl[i];\n            int ny = y + yl[i];\n            if (nx < 0 || nx >= grid.length || ny < 0 || ny >= grid[0].length || grid[nx][ny] == 0 || use[nx][ny]) {\n                continue;\n            }\n            use[nx][ny] = true;\n            counts = Math.max(counts, grid[x][y] + dfs(nx, ny, grid, use));\n            use[nx][ny] = false;\n        }\n        return counts;\n    }\n}\n```\n<!-- endtab -->\n\n<!-- tab Python3 -->\n```python\nclass Solution:\n    def getMaximumGold(self, grid: List[List[int]]) -> int:\n        def dfs(x: int, y: int) -> int:\n            count = grid[x][y]\n            for nx, ny in ((x - 1, y), (x + 1, y), (x, y - 1), (x, y + 1)):\n                if nx < 0 or nx >= len(grid) or ny < 0 or ny >= len(grid[0]) or grid[nx][ny] == 0 or use[nx][ny]:\n                    continue\n                use[nx][ny] = True\n                count = max(count, grid[x][y] + dfs(nx, ny))\n                use[nx][ny] = False\n            return count\n\n        counts = 0\n        # 这种形式下，给一个元素赋值，对应的所有行相同列都会赋值\n        # use = [[False] * len(grid[0])] * len(grid)\n        use = [[False] * len(grid[0]) for _ in range(len(grid))]\n        for i in range(len(grid)):\n            for j in range(len(grid[0])):\n                if grid[i][j] != 0:\n                    use[i][j] = True\n                    counts = max(counts, dfs(i, j))\n                    use[i][j] = False\n        return counts\n```\n<!-- endtab -->\n{% endtabs %}\n","source":"_posts/day20220205.md","raw":"---\ntitle: 力扣1219:黄金矿工\ndate: 2022-02-06 12:37:26\ntags: [力扣]\ncategories: [算法,力扣,每日一题]\n---\n2022年02月05日 力扣每日一题\n\n# 题目\n\n<p>你要开发一座金矿，地质勘测学家已经探明了这座金矿中的资源分布，并用大小为&nbsp;<code>m * n</code> 的网格 <code>grid</code> 进行了标注。每个单元格中的整数就表示这一单元格中的黄金数量；如果该单元格是空的，那么就是 <code>0</code>。</p>\n\n<p>为了使收益最大化，矿工需要按以下规则来开采黄金：</p>\n\n<ul>\n\t<li>每当矿工进入一个单元，就会收集该单元格中的所有黄金。</li>\n\t<li>矿工每次可以从当前位置向上下左右四个方向走。</li>\n\t<li>每个单元格只能被开采（进入）一次。</li>\n\t<li><strong>不得开采</strong>（进入）黄金数目为 <code>0</code> 的单元格。</li>\n\t<li>矿工可以从网格中 <strong>任意一个</strong> 有黄金的单元格出发或者是停止。</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入：</strong>grid = [[0,6,0],[5,8,7],[0,9,0]]\n<strong>输出：</strong>24\n<strong>解释：</strong>\n[[0,6,0],\n [5,8,7],\n [0,9,0]]\n一种收集最多黄金的路线是：9 -&gt; 8 -&gt; 7。\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入：</strong>grid = [[1,0,7],[2,0,6],[3,4,5],[0,3,0],[9,0,20]]\n<strong>输出：</strong>28\n<strong>解释：</strong>\n[[1,0,7],\n [2,0,6],\n [3,4,5],\n [0,3,0],\n [9,0,20]]\n一种收集最多黄金的路线是：1 -&gt; 2 -&gt; 3 -&gt; 4 -&gt; 5 -&gt; 6 -&gt; 7。\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= grid.length,&nbsp;grid[i].length &lt;= 15</code></li>\n\t<li><code>0 &lt;= grid[i][j] &lt;= 100</code></li>\n\t<li>最多 <strong>25 </strong>个单元格中有黄金。</li>\n</ul>\n<div><div>Related Topics</div><div><li>数组</li><li>回溯</li><li>矩阵</li></div></div>\n\n# 个人解法\n\n{% tabs categories%}\n<!-- tab Java -->\n```java\nclass Solution {\n    int[] xl = new int[]{1, -1, 0, 0};\n    int[] yl = new int[]{0, 0, 1, -1};\n    public int getMaximumGold(int[][] grid) {\n        int counts = 0;\n        boolean[][] use = new boolean[grid.length][grid[0].length];\n        for (int i = 0; i < grid.length; i++) {\n            for (int j = 0; j < grid[0].length; j++) {\n                use[i][j] = true;\n                counts = Math.max(counts, dfs(i, j, grid, use));\n                use[i][j] = false;\n            }\n        }\n        return counts;\n    }\n    private int dfs(int x, int y, int[][] grid, boolean[][] use) {\n        int counts = grid[x][y];\n        for (int i = 0; i < 4; i++) {\n            int nx = x + xl[i];\n            int ny = y + yl[i];\n            if (nx < 0 || nx >= grid.length || ny < 0 || ny >= grid[0].length || grid[nx][ny] == 0 || use[nx][ny]) {\n                continue;\n            }\n            use[nx][ny] = true;\n            counts = Math.max(counts, grid[x][y] + dfs(nx, ny, grid, use));\n            use[nx][ny] = false;\n        }\n        return counts;\n    }\n}\n```\n<!-- endtab -->\n\n<!-- tab Python3 -->\n```python\nclass Solution:\n    def getMaximumGold(self, grid: List[List[int]]) -> int:\n        def dfs(x: int, y: int) -> int:\n            count = grid[x][y]\n            for nx, ny in ((x - 1, y), (x + 1, y), (x, y - 1), (x, y + 1)):\n                if nx < 0 or nx >= len(grid) or ny < 0 or ny >= len(grid[0]) or grid[nx][ny] == 0 or use[nx][ny]:\n                    continue\n                use[nx][ny] = True\n                count = max(count, grid[x][y] + dfs(nx, ny))\n                use[nx][ny] = False\n            return count\n\n        counts = 0\n        # 这种形式下，给一个元素赋值，对应的所有行相同列都会赋值\n        # use = [[False] * len(grid[0])] * len(grid)\n        use = [[False] * len(grid[0]) for _ in range(len(grid))]\n        for i in range(len(grid)):\n            for j in range(len(grid[0])):\n                if grid[i][j] != 0:\n                    use[i][j] = True\n                    counts = max(counts, dfs(i, j))\n                    use[i][j] = False\n        return counts\n```\n<!-- endtab -->\n{% endtabs %}\n","slug":"day20220205","published":1,"updated":"2022-02-11T05:31:54.244Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl0t0rrl3000g4ctuh5v8e83h","content":"<p>2022年02月05日 力扣每日一题</p>\n<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>你要开发一座金矿，地质勘测学家已经探明了这座金矿中的资源分布，并用大小为&nbsp;<code>m * n</code> 的网格 <code>grid</code> 进行了标注。每个单元格中的整数就表示这一单元格中的黄金数量；如果该单元格是空的，那么就是 <code>0</code>。</p>\n\n<p>为了使收益最大化，矿工需要按以下规则来开采黄金：</p>\n\n<ul>\n    <li>每当矿工进入一个单元，就会收集该单元格中的所有黄金。</li>\n    <li>矿工每次可以从当前位置向上下左右四个方向走。</li>\n    <li>每个单元格只能被开采（进入）一次。</li>\n    <li><strong>不得开采</strong>（进入）黄金数目为 <code>0</code> 的单元格。</li>\n    <li>矿工可以从网格中 <strong>任意一个</strong> 有黄金的单元格出发或者是停止。</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入：</strong>grid = [[0,6,0],[5,8,7],[0,9,0]]\n<strong>输出：</strong>24\n<strong>解释：</strong>\n[[0,6,0],\n [5,8,7],\n [0,9,0]]\n一种收集最多黄金的路线是：9 -&gt; 8 -&gt; 7。\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入：</strong>grid = [[1,0,7],[2,0,6],[3,4,5],[0,3,0],[9,0,20]]\n<strong>输出：</strong>28\n<strong>解释：</strong>\n[[1,0,7],\n [2,0,6],\n [3,4,5],\n [0,3,0],\n [9,0,20]]\n一种收集最多黄金的路线是：1 -&gt; 2 -&gt; 3 -&gt; 4 -&gt; 5 -&gt; 6 -&gt; 7。\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n    <li><code>1 &lt;= grid.length,&nbsp;grid[i].length &lt;= 15</code></li>\n    <li><code>0 &lt;= grid[i][j] &lt;= 100</code></li>\n    <li>最多 <strong>25 </strong>个单元格中有黄金。</li>\n</ul>\n<div><div>Related Topics</div><div><li>数组</li><li>回溯</li><li>矩阵</li></div></div>\n\n<h1 id=\"个人解法\"><a href=\"#个人解法\" class=\"headerlink\" title=\"个人解法\"></a>个人解法</h1><div class=\"tabs\" id=\"categories\"><ul class=\"nav-tabs\"><li class=\"tab active\"><button type=\"button\" data-href=\"#categories-1\">Java</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#categories-2\">Python3</button></li></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"categories-1\"><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">class Solution &#123;\n    int[] xl &#x3D; new int[]&#123;1, -1, 0, 0&#125;;\n    int[] yl &#x3D; new int[]&#123;0, 0, 1, -1&#125;;\n    public int getMaximumGold(int[][] grid) &#123;\n        int counts &#x3D; 0;\n        boolean[][] use &#x3D; new boolean[grid.length][grid[0].length];\n        for (int i &#x3D; 0; i &lt; grid.length; i++) &#123;\n            for (int j &#x3D; 0; j &lt; grid[0].length; j++) &#123;\n                use[i][j] &#x3D; true;\n                counts &#x3D; Math.max(counts, dfs(i, j, grid, use));\n                use[i][j] &#x3D; false;\n            &#125;\n        &#125;\n        return counts;\n    &#125;\n    private int dfs(int x, int y, int[][] grid, boolean[][] use) &#123;\n        int counts &#x3D; grid[x][y];\n        for (int i &#x3D; 0; i &lt; 4; i++) &#123;\n            int nx &#x3D; x + xl[i];\n            int ny &#x3D; y + yl[i];\n            if (nx &lt; 0 || nx &gt;&#x3D; grid.length || ny &lt; 0 || ny &gt;&#x3D; grid[0].length || grid[nx][ny] &#x3D;&#x3D; 0 || use[nx][ny]) &#123;\n                continue;\n            &#125;\n            use[nx][ny] &#x3D; true;\n            counts &#x3D; Math.max(counts, grid[x][y] + dfs(nx, ny, grid, use));\n            use[nx][ny] &#x3D; false;\n        &#125;\n        return counts;\n    &#125;\n&#125;</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"categories-2\"><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">class Solution:\n    def getMaximumGold(self, grid: List[List[int]]) -&gt; int:\n        def dfs(x: int, y: int) -&gt; int:\n            count &#x3D; grid[x][y]\n            for nx, ny in ((x - 1, y), (x + 1, y), (x, y - 1), (x, y + 1)):\n                if nx &lt; 0 or nx &gt;&#x3D; len(grid) or ny &lt; 0 or ny &gt;&#x3D; len(grid[0]) or grid[nx][ny] &#x3D;&#x3D; 0 or use[nx][ny]:\n                    continue\n                use[nx][ny] &#x3D; True\n                count &#x3D; max(count, grid[x][y] + dfs(nx, ny))\n                use[nx][ny] &#x3D; False\n            return count\n\n        counts &#x3D; 0\n        # 这种形式下，给一个元素赋值，对应的所有行相同列都会赋值\n        # use &#x3D; [[False] * len(grid[0])] * len(grid)\n        use &#x3D; [[False] * len(grid[0]) for _ in range(len(grid))]\n        for i in range(len(grid)):\n            for j in range(len(grid[0])):\n                if grid[i][j] !&#x3D; 0:\n                    use[i][j] &#x3D; True\n                    counts &#x3D; max(counts, dfs(i, j))\n                    use[i][j] &#x3D; False\n        return counts</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div></div>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.gitee.io/zh-CN/","avatar":"https://element-plus.gitee.io/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"}}},"cover":"https://blog.huangge1199.cn/post/day20220121/bg.jpeg","excerpt":"","more":"<p>2022年02月05日 力扣每日一题</p>\n<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>你要开发一座金矿，地质勘测学家已经探明了这座金矿中的资源分布，并用大小为&nbsp;<code>m * n</code> 的网格 <code>grid</code> 进行了标注。每个单元格中的整数就表示这一单元格中的黄金数量；如果该单元格是空的，那么就是 <code>0</code>。</p>\n\n<p>为了使收益最大化，矿工需要按以下规则来开采黄金：</p>\n\n<ul>\n    <li>每当矿工进入一个单元，就会收集该单元格中的所有黄金。</li>\n    <li>矿工每次可以从当前位置向上下左右四个方向走。</li>\n    <li>每个单元格只能被开采（进入）一次。</li>\n    <li><strong>不得开采</strong>（进入）黄金数目为 <code>0</code> 的单元格。</li>\n    <li>矿工可以从网格中 <strong>任意一个</strong> 有黄金的单元格出发或者是停止。</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入：</strong>grid = [[0,6,0],[5,8,7],[0,9,0]]\n<strong>输出：</strong>24\n<strong>解释：</strong>\n[[0,6,0],\n [5,8,7],\n [0,9,0]]\n一种收集最多黄金的路线是：9 -&gt; 8 -&gt; 7。\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入：</strong>grid = [[1,0,7],[2,0,6],[3,4,5],[0,3,0],[9,0,20]]\n<strong>输出：</strong>28\n<strong>解释：</strong>\n[[1,0,7],\n [2,0,6],\n [3,4,5],\n [0,3,0],\n [9,0,20]]\n一种收集最多黄金的路线是：1 -&gt; 2 -&gt; 3 -&gt; 4 -&gt; 5 -&gt; 6 -&gt; 7。\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n    <li><code>1 &lt;= grid.length,&nbsp;grid[i].length &lt;= 15</code></li>\n    <li><code>0 &lt;= grid[i][j] &lt;= 100</code></li>\n    <li>最多 <strong>25 </strong>个单元格中有黄金。</li>\n</ul>\n<div><div>Related Topics</div><div><li>数组</li><li>回溯</li><li>矩阵</li></div></div>\n\n<h1 id=\"个人解法\"><a href=\"#个人解法\" class=\"headerlink\" title=\"个人解法\"></a>个人解法</h1><div class=\"tabs\" id=\"categories\"><ul class=\"nav-tabs\"><li class=\"tab active\"><button type=\"button\" data-href=\"#categories-1\">Java</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#categories-2\">Python3</button></li></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"categories-1\"><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">class Solution &#123;\n    int[] xl &#x3D; new int[]&#123;1, -1, 0, 0&#125;;\n    int[] yl &#x3D; new int[]&#123;0, 0, 1, -1&#125;;\n    public int getMaximumGold(int[][] grid) &#123;\n        int counts &#x3D; 0;\n        boolean[][] use &#x3D; new boolean[grid.length][grid[0].length];\n        for (int i &#x3D; 0; i &lt; grid.length; i++) &#123;\n            for (int j &#x3D; 0; j &lt; grid[0].length; j++) &#123;\n                use[i][j] &#x3D; true;\n                counts &#x3D; Math.max(counts, dfs(i, j, grid, use));\n                use[i][j] &#x3D; false;\n            &#125;\n        &#125;\n        return counts;\n    &#125;\n    private int dfs(int x, int y, int[][] grid, boolean[][] use) &#123;\n        int counts &#x3D; grid[x][y];\n        for (int i &#x3D; 0; i &lt; 4; i++) &#123;\n            int nx &#x3D; x + xl[i];\n            int ny &#x3D; y + yl[i];\n            if (nx &lt; 0 || nx &gt;&#x3D; grid.length || ny &lt; 0 || ny &gt;&#x3D; grid[0].length || grid[nx][ny] &#x3D;&#x3D; 0 || use[nx][ny]) &#123;\n                continue;\n            &#125;\n            use[nx][ny] &#x3D; true;\n            counts &#x3D; Math.max(counts, grid[x][y] + dfs(nx, ny, grid, use));\n            use[nx][ny] &#x3D; false;\n        &#125;\n        return counts;\n    &#125;\n&#125;</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"categories-2\"><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">class Solution:\n    def getMaximumGold(self, grid: List[List[int]]) -&gt; int:\n        def dfs(x: int, y: int) -&gt; int:\n            count &#x3D; grid[x][y]\n            for nx, ny in ((x - 1, y), (x + 1, y), (x, y - 1), (x, y + 1)):\n                if nx &lt; 0 or nx &gt;&#x3D; len(grid) or ny &lt; 0 or ny &gt;&#x3D; len(grid[0]) or grid[nx][ny] &#x3D;&#x3D; 0 or use[nx][ny]:\n                    continue\n                use[nx][ny] &#x3D; True\n                count &#x3D; max(count, grid[x][y] + dfs(nx, ny))\n                use[nx][ny] &#x3D; False\n            return count\n\n        counts &#x3D; 0\n        # 这种形式下，给一个元素赋值，对应的所有行相同列都会赋值\n        # use &#x3D; [[False] * len(grid[0])] * len(grid)\n        use &#x3D; [[False] * len(grid[0]) for _ in range(len(grid))]\n        for i in range(len(grid)):\n            for j in range(len(grid[0])):\n                if grid[i][j] !&#x3D; 0:\n                    use[i][j] &#x3D; True\n                    counts &#x3D; max(counts, dfs(i, j))\n                    use[i][j] &#x3D; False\n        return counts</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div></div>\n"},{"title":"力扣1725:可以形成最大正方形的矩形数目","date":"2022-02-04T14:50:47.000Z","_content":"2022年02月04日 力扣每日一题\n\n# 题目\n\n<p>给你一个数组 <code>rectangles</code> ，其中 <code>rectangles[i] = [l<sub>i</sub>, w<sub>i</sub>]</code> 表示第 <code>i</code> 个矩形的长度为 <code>l<sub>i</sub></code> 、宽度为 <code>w<sub>i</sub></code> 。</p>\n\n<p>如果存在 <code>k</code> 同时满足 <code>k <= l<sub>i</sub></code> 和 <code>k <= w<sub>i</sub></code> ，就可以将第 <code>i</code> 个矩形切成边长为 <code>k</code> 的正方形。例如，矩形 <code>[4,6]</code> 可以切成边长最大为 <code>4</code> 的正方形。</p>\n\n<p>设 <code>maxLen</code> 为可以从矩形数组 <code>rectangles</code> 切分得到的 <strong>最大正方形</strong> 的边长。</p>\n\n<p>请你统计有多少个矩形能够切出边长为<em> </em><code>maxLen</code> 的正方形，并返回矩形 <strong>数目</strong> 。</p>\n\n<p> </p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入：</strong>rectangles = [[5,8],[3,9],[5,12],[16,5]]\n<strong>输出：</strong>3\n<strong>解释：</strong>能从每个矩形中切出的最大正方形边长分别是 [5,3,5,5] 。\n最大正方形的边长为 5 ，可以由 3 个矩形切分得到。\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>\n<strong>输入：</strong>rectangles = [[2,3],[3,7],[4,3],[3,7]]\n<strong>输出：</strong>3\n</pre>\n\n<p> </p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>1 <= rectangles.length <= 1000</code></li>\n\t<li><code>rectangles[i].length == 2</code></li>\n\t<li><code>1 <= l<sub>i</sub>, w<sub>i</sub> <= 10<sup>9</sup></code></li>\n\t<li><code>l<sub>i</sub> != w<sub>i</sub></code></li>\n</ul>\n<div><div>Related Topics</div><div><li>数组</li></div></div>\n\n# 个人解法\n\n{% tabs categories%}\n<!-- tab Java -->\n```java\nclass Solution {\n    public int countGoodRectangles(int[][] rectangles) {\n        int maxLength = 0;\n        int count = 0;\n        for (int[] rectangle : rectangles) {\n            int temp = Math.min(rectangle[0], rectangle[1]);\n            if (temp == maxLength) {\n                count++;\n            } else if (temp > maxLength) {\n                count = 1;\n                maxLength = temp;\n            }\n        }\n        return count;\n    }\n}\n```\n<!-- endtab -->\n\n<!-- tab Python3 -->\n```python\nfrom typing import List\n\n\nclass Solution:\n    def countGoodRectangles(self, rectangles: List[List[int]]) -> int:\n        maxLength = 0\n        count = 0\n        for rectangle in rectangles:\n            temp = min(rectangle[0], rectangle[1])\n            if temp == maxLength:\n                count = count + 1\n            elif temp > maxLength:\n                count = 1\n                maxLength = temp\n        return count\n```\n<!-- endtab -->\n{% endtabs %}\n","source":"_posts/day20220204.md","raw":"---\ntitle: 力扣1725:可以形成最大正方形的矩形数目 \ndate: 2022-02-04 22:50:47 \ntags: [力扣]\ncategories: [算法,力扣,每日一题]\n---\n2022年02月04日 力扣每日一题\n\n# 题目\n\n<p>给你一个数组 <code>rectangles</code> ，其中 <code>rectangles[i] = [l<sub>i</sub>, w<sub>i</sub>]</code> 表示第 <code>i</code> 个矩形的长度为 <code>l<sub>i</sub></code> 、宽度为 <code>w<sub>i</sub></code> 。</p>\n\n<p>如果存在 <code>k</code> 同时满足 <code>k <= l<sub>i</sub></code> 和 <code>k <= w<sub>i</sub></code> ，就可以将第 <code>i</code> 个矩形切成边长为 <code>k</code> 的正方形。例如，矩形 <code>[4,6]</code> 可以切成边长最大为 <code>4</code> 的正方形。</p>\n\n<p>设 <code>maxLen</code> 为可以从矩形数组 <code>rectangles</code> 切分得到的 <strong>最大正方形</strong> 的边长。</p>\n\n<p>请你统计有多少个矩形能够切出边长为<em> </em><code>maxLen</code> 的正方形，并返回矩形 <strong>数目</strong> 。</p>\n\n<p> </p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入：</strong>rectangles = [[5,8],[3,9],[5,12],[16,5]]\n<strong>输出：</strong>3\n<strong>解释：</strong>能从每个矩形中切出的最大正方形边长分别是 [5,3,5,5] 。\n最大正方形的边长为 5 ，可以由 3 个矩形切分得到。\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>\n<strong>输入：</strong>rectangles = [[2,3],[3,7],[4,3],[3,7]]\n<strong>输出：</strong>3\n</pre>\n\n<p> </p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>1 <= rectangles.length <= 1000</code></li>\n\t<li><code>rectangles[i].length == 2</code></li>\n\t<li><code>1 <= l<sub>i</sub>, w<sub>i</sub> <= 10<sup>9</sup></code></li>\n\t<li><code>l<sub>i</sub> != w<sub>i</sub></code></li>\n</ul>\n<div><div>Related Topics</div><div><li>数组</li></div></div>\n\n# 个人解法\n\n{% tabs categories%}\n<!-- tab Java -->\n```java\nclass Solution {\n    public int countGoodRectangles(int[][] rectangles) {\n        int maxLength = 0;\n        int count = 0;\n        for (int[] rectangle : rectangles) {\n            int temp = Math.min(rectangle[0], rectangle[1]);\n            if (temp == maxLength) {\n                count++;\n            } else if (temp > maxLength) {\n                count = 1;\n                maxLength = temp;\n            }\n        }\n        return count;\n    }\n}\n```\n<!-- endtab -->\n\n<!-- tab Python3 -->\n```python\nfrom typing import List\n\n\nclass Solution:\n    def countGoodRectangles(self, rectangles: List[List[int]]) -> int:\n        maxLength = 0\n        count = 0\n        for rectangle in rectangles:\n            temp = min(rectangle[0], rectangle[1])\n            if temp == maxLength:\n                count = count + 1\n            elif temp > maxLength:\n                count = 1\n                maxLength = temp\n        return count\n```\n<!-- endtab -->\n{% endtabs %}\n","slug":"day20220204","published":1,"updated":"2022-02-11T05:31:54.240Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl0t0rrl4000j4ctu56tff868","content":"<p>2022年02月04日 力扣每日一题</p>\n<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>给你一个数组 <code>rectangles</code> ，其中 <code>rectangles[i] = [l<sub>i</sub>, w<sub>i</sub>]</code> 表示第 <code>i</code> 个矩形的长度为 <code>l<sub>i</sub></code> 、宽度为 <code>w<sub>i</sub></code> 。</p>\n\n<p>如果存在 <code>k</code> 同时满足 <code>k <= l<sub>i</sub></code> 和 <code>k <= w<sub>i</sub></code> ，就可以将第 <code>i</code> 个矩形切成边长为 <code>k</code> 的正方形。例如，矩形 <code>[4,6]</code> 可以切成边长最大为 <code>4</code> 的正方形。</p>\n\n<p>设 <code>maxLen</code> 为可以从矩形数组 <code>rectangles</code> 切分得到的 <strong>最大正方形</strong> 的边长。</p>\n\n<p>请你统计有多少个矩形能够切出边长为<em> </em><code>maxLen</code> 的正方形，并返回矩形 <strong>数目</strong> 。</p>\n\n<p> </p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入：</strong>rectangles = [[5,8],[3,9],[5,12],[16,5]]\n<strong>输出：</strong>3\n<strong>解释：</strong>能从每个矩形中切出的最大正方形边长分别是 [5,3,5,5] 。\n最大正方形的边长为 5 ，可以由 3 个矩形切分得到。\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>\n<strong>输入：</strong>rectangles = [[2,3],[3,7],[4,3],[3,7]]\n<strong>输出：</strong>3\n</pre>\n\n<p> </p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n    <li><code>1 <= rectangles.length <= 1000</code></li>\n    <li><code>rectangles[i].length == 2</code></li>\n    <li><code>1 <= l<sub>i</sub>, w<sub>i</sub> <= 10<sup>9</sup></code></li>\n    <li><code>l<sub>i</sub> != w<sub>i</sub></code></li>\n</ul>\n<div><div>Related Topics</div><div><li>数组</li></div></div>\n\n<h1 id=\"个人解法\"><a href=\"#个人解法\" class=\"headerlink\" title=\"个人解法\"></a>个人解法</h1><div class=\"tabs\" id=\"categories\"><ul class=\"nav-tabs\"><li class=\"tab active\"><button type=\"button\" data-href=\"#categories-1\">Java</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#categories-2\">Python3</button></li></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"categories-1\"><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">class Solution &#123;\n    public int countGoodRectangles(int[][] rectangles) &#123;\n        int maxLength &#x3D; 0;\n        int count &#x3D; 0;\n        for (int[] rectangle : rectangles) &#123;\n            int temp &#x3D; Math.min(rectangle[0], rectangle[1]);\n            if (temp &#x3D;&#x3D; maxLength) &#123;\n                count++;\n            &#125; else if (temp &gt; maxLength) &#123;\n                count &#x3D; 1;\n                maxLength &#x3D; temp;\n            &#125;\n        &#125;\n        return count;\n    &#125;\n&#125;</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"categories-2\"><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">from typing import List\n\n\nclass Solution:\n    def countGoodRectangles(self, rectangles: List[List[int]]) -&gt; int:\n        maxLength &#x3D; 0\n        count &#x3D; 0\n        for rectangle in rectangles:\n            temp &#x3D; min(rectangle[0], rectangle[1])\n            if temp &#x3D;&#x3D; maxLength:\n                count &#x3D; count + 1\n            elif temp &gt; maxLength:\n                count &#x3D; 1\n                maxLength &#x3D; temp\n        return count</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div></div>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.gitee.io/zh-CN/","avatar":"https://element-plus.gitee.io/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"}}},"cover":"https://blog.huangge1199.cn/post/day20220120/bg.jpeg","excerpt":"","more":"<p>2022年02月04日 力扣每日一题</p>\n<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>给你一个数组 <code>rectangles</code> ，其中 <code>rectangles[i] = [l<sub>i</sub>, w<sub>i</sub>]</code> 表示第 <code>i</code> 个矩形的长度为 <code>l<sub>i</sub></code> 、宽度为 <code>w<sub>i</sub></code> 。</p>\n\n<p>如果存在 <code>k</code> 同时满足 <code>k <= l<sub>i</sub></code> 和 <code>k <= w<sub>i</sub></code> ，就可以将第 <code>i</code> 个矩形切成边长为 <code>k</code> 的正方形。例如，矩形 <code>[4,6]</code> 可以切成边长最大为 <code>4</code> 的正方形。</p>\n\n<p>设 <code>maxLen</code> 为可以从矩形数组 <code>rectangles</code> 切分得到的 <strong>最大正方形</strong> 的边长。</p>\n\n<p>请你统计有多少个矩形能够切出边长为<em> </em><code>maxLen</code> 的正方形，并返回矩形 <strong>数目</strong> 。</p>\n\n<p> </p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入：</strong>rectangles = [[5,8],[3,9],[5,12],[16,5]]\n<strong>输出：</strong>3\n<strong>解释：</strong>能从每个矩形中切出的最大正方形边长分别是 [5,3,5,5] 。\n最大正方形的边长为 5 ，可以由 3 个矩形切分得到。\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>\n<strong>输入：</strong>rectangles = [[2,3],[3,7],[4,3],[3,7]]\n<strong>输出：</strong>3\n</pre>\n\n<p> </p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n    <li><code>1 <= rectangles.length <= 1000</code></li>\n    <li><code>rectangles[i].length == 2</code></li>\n    <li><code>1 <= l<sub>i</sub>, w<sub>i</sub> <= 10<sup>9</sup></code></li>\n    <li><code>l<sub>i</sub> != w<sub>i</sub></code></li>\n</ul>\n<div><div>Related Topics</div><div><li>数组</li></div></div>\n\n<h1 id=\"个人解法\"><a href=\"#个人解法\" class=\"headerlink\" title=\"个人解法\"></a>个人解法</h1><div class=\"tabs\" id=\"categories\"><ul class=\"nav-tabs\"><li class=\"tab active\"><button type=\"button\" data-href=\"#categories-1\">Java</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#categories-2\">Python3</button></li></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"categories-1\"><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">class Solution &#123;\n    public int countGoodRectangles(int[][] rectangles) &#123;\n        int maxLength &#x3D; 0;\n        int count &#x3D; 0;\n        for (int[] rectangle : rectangles) &#123;\n            int temp &#x3D; Math.min(rectangle[0], rectangle[1]);\n            if (temp &#x3D;&#x3D; maxLength) &#123;\n                count++;\n            &#125; else if (temp &gt; maxLength) &#123;\n                count &#x3D; 1;\n                maxLength &#x3D; temp;\n            &#125;\n        &#125;\n        return count;\n    &#125;\n&#125;</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"categories-2\"><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">from typing import List\n\n\nclass Solution:\n    def countGoodRectangles(self, rectangles: List[List[int]]) -&gt; int:\n        maxLength &#x3D; 0\n        count &#x3D; 0\n        for rectangle in rectangles:\n            temp &#x3D; min(rectangle[0], rectangle[1])\n            if temp &#x3D;&#x3D; maxLength:\n                count &#x3D; count + 1\n            elif temp &gt; maxLength:\n                count &#x3D; 1\n                maxLength &#x3D; temp\n        return count</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div></div>\n"},{"title":"力扣1688:比赛中的配对次数","date":"2022-01-25T05:57:48.000Z","_content":"2022年01月25日 力扣每日一题\n\n# 题目\n\n<p>给你一个整数 <code>n</code> ，表示比赛中的队伍数。比赛遵循一种独特的赛制：</p>\n\n<ul>\n\t<li>如果当前队伍数是 <strong>偶数</strong> ，那么每支队伍都会与另一支队伍配对。总共进行 <code>n / 2</code> 场比赛，且产生 <code>n / 2</code> 支队伍进入下一轮。</li>\n\t<li>如果当前队伍数为 <strong>奇数</strong> ，那么将会随机轮空并晋级一支队伍，其余的队伍配对。总共进行 <code>(n - 1) / 2</code> 场比赛，且产生 <code>(n - 1) / 2 + 1</code> 支队伍进入下一轮。</li>\n</ul>\n\n<p>返回在比赛中进行的配对次数，直到决出获胜队伍为止。</p>\n\n<p> </p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入：</strong>n = 7\n<strong>输出：</strong>6\n<strong>解释：</strong>比赛详情：\n- 第 1 轮：队伍数 = 7 ，配对次数 = 3 ，4 支队伍晋级。\n- 第 2 轮：队伍数 = 4 ，配对次数 = 2 ，2 支队伍晋级。\n- 第 3 轮：队伍数 = 2 ，配对次数 = 1 ，决出 1 支获胜队伍。\n总配对次数 = 3 + 2 + 1 = 6\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入：</strong>n = 14\n<strong>输出：</strong>13\n<strong>解释：</strong>比赛详情：\n- 第 1 轮：队伍数 = 14 ，配对次数 = 7 ，7 支队伍晋级。\n- 第 2 轮：队伍数 = 7 ，配对次数 = 3 ，4 支队伍晋级。 \n- 第 3 轮：队伍数 = 4 ，配对次数 = 2 ，2 支队伍晋级。\n- 第 4 轮：队伍数 = 2 ，配对次数 = 1 ，决出 1 支获胜队伍。\n总配对次数 = 7 + 3 + 2 + 1 = 13\n</pre>\n\n<p> </p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 200</code></li>\n</ul>\n<div><div>Related Topics</div><div><li>数学</li><li>模拟</li></div></div>\n\n# 个人解法\n\n{% tabs categories%}\n<!-- tab Java -->\n```java\nclass Solution {\n    public int numberOfMatches(int n) {\n        // 总配对次数\n        int sum = 0;\n        while (n > 1) {\n            if (n % 2 == 1) {\n                // 奇数队伍\n                // 配对次数：(n - 1) / 2\n                sum += (n - 1) / 2;\n                // 剩余队伍数：(n - 1) / 2 + 1\n                n = (n - 1) / 2 + 1;\n            } else {\n                // 偶数队伍\n                // 配对次数：n / 2\n                sum += n / 2;\n                // 剩余队伍数：n / 2\n                n /= 2;\n            }\n        }\n        return sum;\n    }\n}\n```\n<!-- endtab -->\n\n<!-- tab Python3 -->\n```python\nclass Solution:\n    def numberOfMatches(self, n: int) -> int:\n        # 总配对次数\n        sums = 0\n        while n > 1:\n            if n % 2 == 1:\n                # 奇数队伍\n                # 配对次数：(n - 1) / 2\n                sums += (n - 1) / 2\n                # 剩余队伍数：(n - 1) / 2 + 1\n                n = (n - 1) / 2 + 1\n            else:\n                # 偶数队伍\n                # 配对次数：n / 2\n                sums += n / 2\n                # 剩余队伍数：n / 2\n                n /= 2\n        return int(sums)\n```\n<!-- endtab -->\n{% endtabs %}","source":"_posts/day20220125.md","raw":"---\ntitle: 力扣1688:比赛中的配对次数\ndate: 2022-01-25 13:57:48\ntags: [力扣]\ncategories: [算法,力扣,每日一题]\n---\n2022年01月25日 力扣每日一题\n\n# 题目\n\n<p>给你一个整数 <code>n</code> ，表示比赛中的队伍数。比赛遵循一种独特的赛制：</p>\n\n<ul>\n\t<li>如果当前队伍数是 <strong>偶数</strong> ，那么每支队伍都会与另一支队伍配对。总共进行 <code>n / 2</code> 场比赛，且产生 <code>n / 2</code> 支队伍进入下一轮。</li>\n\t<li>如果当前队伍数为 <strong>奇数</strong> ，那么将会随机轮空并晋级一支队伍，其余的队伍配对。总共进行 <code>(n - 1) / 2</code> 场比赛，且产生 <code>(n - 1) / 2 + 1</code> 支队伍进入下一轮。</li>\n</ul>\n\n<p>返回在比赛中进行的配对次数，直到决出获胜队伍为止。</p>\n\n<p> </p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入：</strong>n = 7\n<strong>输出：</strong>6\n<strong>解释：</strong>比赛详情：\n- 第 1 轮：队伍数 = 7 ，配对次数 = 3 ，4 支队伍晋级。\n- 第 2 轮：队伍数 = 4 ，配对次数 = 2 ，2 支队伍晋级。\n- 第 3 轮：队伍数 = 2 ，配对次数 = 1 ，决出 1 支获胜队伍。\n总配对次数 = 3 + 2 + 1 = 6\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入：</strong>n = 14\n<strong>输出：</strong>13\n<strong>解释：</strong>比赛详情：\n- 第 1 轮：队伍数 = 14 ，配对次数 = 7 ，7 支队伍晋级。\n- 第 2 轮：队伍数 = 7 ，配对次数 = 3 ，4 支队伍晋级。 \n- 第 3 轮：队伍数 = 4 ，配对次数 = 2 ，2 支队伍晋级。\n- 第 4 轮：队伍数 = 2 ，配对次数 = 1 ，决出 1 支获胜队伍。\n总配对次数 = 7 + 3 + 2 + 1 = 13\n</pre>\n\n<p> </p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 200</code></li>\n</ul>\n<div><div>Related Topics</div><div><li>数学</li><li>模拟</li></div></div>\n\n# 个人解法\n\n{% tabs categories%}\n<!-- tab Java -->\n```java\nclass Solution {\n    public int numberOfMatches(int n) {\n        // 总配对次数\n        int sum = 0;\n        while (n > 1) {\n            if (n % 2 == 1) {\n                // 奇数队伍\n                // 配对次数：(n - 1) / 2\n                sum += (n - 1) / 2;\n                // 剩余队伍数：(n - 1) / 2 + 1\n                n = (n - 1) / 2 + 1;\n            } else {\n                // 偶数队伍\n                // 配对次数：n / 2\n                sum += n / 2;\n                // 剩余队伍数：n / 2\n                n /= 2;\n            }\n        }\n        return sum;\n    }\n}\n```\n<!-- endtab -->\n\n<!-- tab Python3 -->\n```python\nclass Solution:\n    def numberOfMatches(self, n: int) -> int:\n        # 总配对次数\n        sums = 0\n        while n > 1:\n            if n % 2 == 1:\n                # 奇数队伍\n                # 配对次数：(n - 1) / 2\n                sums += (n - 1) / 2\n                # 剩余队伍数：(n - 1) / 2 + 1\n                n = (n - 1) / 2 + 1\n            else:\n                # 偶数队伍\n                # 配对次数：n / 2\n                sums += n / 2\n                # 剩余队伍数：n / 2\n                n /= 2\n        return int(sums)\n```\n<!-- endtab -->\n{% endtabs %}","slug":"day20220125","published":1,"updated":"2022-01-25T06:00:56.342Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl0t0rrl6000o4ctu2czaf8h9","content":"<p>2022年01月25日 力扣每日一题</p>\n<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>给你一个整数 <code>n</code> ，表示比赛中的队伍数。比赛遵循一种独特的赛制：</p>\n\n<ul>\n    <li>如果当前队伍数是 <strong>偶数</strong> ，那么每支队伍都会与另一支队伍配对。总共进行 <code>n / 2</code> 场比赛，且产生 <code>n / 2</code> 支队伍进入下一轮。</li>\n    <li>如果当前队伍数为 <strong>奇数</strong> ，那么将会随机轮空并晋级一支队伍，其余的队伍配对。总共进行 <code>(n - 1) / 2</code> 场比赛，且产生 <code>(n - 1) / 2 + 1</code> 支队伍进入下一轮。</li>\n</ul>\n\n<p>返回在比赛中进行的配对次数，直到决出获胜队伍为止。</p>\n\n<p> </p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入：</strong>n = 7\n<strong>输出：</strong>6\n<strong>解释：</strong>比赛详情：\n- 第 1 轮：队伍数 = 7 ，配对次数 = 3 ，4 支队伍晋级。\n- 第 2 轮：队伍数 = 4 ，配对次数 = 2 ，2 支队伍晋级。\n- 第 3 轮：队伍数 = 2 ，配对次数 = 1 ，决出 1 支获胜队伍。\n总配对次数 = 3 + 2 + 1 = 6\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入：</strong>n = 14\n<strong>输出：</strong>13\n<strong>解释：</strong>比赛详情：\n- 第 1 轮：队伍数 = 14 ，配对次数 = 7 ，7 支队伍晋级。\n- 第 2 轮：队伍数 = 7 ，配对次数 = 3 ，4 支队伍晋级。 \n- 第 3 轮：队伍数 = 4 ，配对次数 = 2 ，2 支队伍晋级。\n- 第 4 轮：队伍数 = 2 ，配对次数 = 1 ，决出 1 支获胜队伍。\n总配对次数 = 7 + 3 + 2 + 1 = 13\n</pre>\n\n<p> </p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n    <li><code>1 &lt;= n &lt;= 200</code></li>\n</ul>\n<div><div>Related Topics</div><div><li>数学</li><li>模拟</li></div></div>\n\n<h1 id=\"个人解法\"><a href=\"#个人解法\" class=\"headerlink\" title=\"个人解法\"></a>个人解法</h1><div class=\"tabs\" id=\"categories\"><ul class=\"nav-tabs\"><li class=\"tab active\"><button type=\"button\" data-href=\"#categories-1\">Java</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#categories-2\">Python3</button></li></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"categories-1\"><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">class Solution &#123;\n    public int numberOfMatches(int n) &#123;\n        &#x2F;&#x2F; 总配对次数\n        int sum &#x3D; 0;\n        while (n &gt; 1) &#123;\n            if (n % 2 &#x3D;&#x3D; 1) &#123;\n                &#x2F;&#x2F; 奇数队伍\n                &#x2F;&#x2F; 配对次数：(n - 1) &#x2F; 2\n                sum +&#x3D; (n - 1) &#x2F; 2;\n                &#x2F;&#x2F; 剩余队伍数：(n - 1) &#x2F; 2 + 1\n                n &#x3D; (n - 1) &#x2F; 2 + 1;\n            &#125; else &#123;\n                &#x2F;&#x2F; 偶数队伍\n                &#x2F;&#x2F; 配对次数：n &#x2F; 2\n                sum +&#x3D; n &#x2F; 2;\n                &#x2F;&#x2F; 剩余队伍数：n &#x2F; 2\n                n &#x2F;&#x3D; 2;\n            &#125;\n        &#125;\n        return sum;\n    &#125;\n&#125;</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"categories-2\"><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">class Solution:\n    def numberOfMatches(self, n: int) -&gt; int:\n        # 总配对次数\n        sums &#x3D; 0\n        while n &gt; 1:\n            if n % 2 &#x3D;&#x3D; 1:\n                # 奇数队伍\n                # 配对次数：(n - 1) &#x2F; 2\n                sums +&#x3D; (n - 1) &#x2F; 2\n                # 剩余队伍数：(n - 1) &#x2F; 2 + 1\n                n &#x3D; (n - 1) &#x2F; 2 + 1\n            else:\n                # 偶数队伍\n                # 配对次数：n &#x2F; 2\n                sums +&#x3D; n &#x2F; 2\n                # 剩余队伍数：n &#x2F; 2\n                n &#x2F;&#x3D; 2\n        return int(sums)</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div></div>","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.gitee.io/zh-CN/","avatar":"https://element-plus.gitee.io/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"}}},"cover":"https://blog.huangge1199.cn/post/day20220119/bg.jpeg","excerpt":"","more":"<p>2022年01月25日 力扣每日一题</p>\n<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>给你一个整数 <code>n</code> ，表示比赛中的队伍数。比赛遵循一种独特的赛制：</p>\n\n<ul>\n    <li>如果当前队伍数是 <strong>偶数</strong> ，那么每支队伍都会与另一支队伍配对。总共进行 <code>n / 2</code> 场比赛，且产生 <code>n / 2</code> 支队伍进入下一轮。</li>\n    <li>如果当前队伍数为 <strong>奇数</strong> ，那么将会随机轮空并晋级一支队伍，其余的队伍配对。总共进行 <code>(n - 1) / 2</code> 场比赛，且产生 <code>(n - 1) / 2 + 1</code> 支队伍进入下一轮。</li>\n</ul>\n\n<p>返回在比赛中进行的配对次数，直到决出获胜队伍为止。</p>\n\n<p> </p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入：</strong>n = 7\n<strong>输出：</strong>6\n<strong>解释：</strong>比赛详情：\n- 第 1 轮：队伍数 = 7 ，配对次数 = 3 ，4 支队伍晋级。\n- 第 2 轮：队伍数 = 4 ，配对次数 = 2 ，2 支队伍晋级。\n- 第 3 轮：队伍数 = 2 ，配对次数 = 1 ，决出 1 支获胜队伍。\n总配对次数 = 3 + 2 + 1 = 6\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入：</strong>n = 14\n<strong>输出：</strong>13\n<strong>解释：</strong>比赛详情：\n- 第 1 轮：队伍数 = 14 ，配对次数 = 7 ，7 支队伍晋级。\n- 第 2 轮：队伍数 = 7 ，配对次数 = 3 ，4 支队伍晋级。 \n- 第 3 轮：队伍数 = 4 ，配对次数 = 2 ，2 支队伍晋级。\n- 第 4 轮：队伍数 = 2 ，配对次数 = 1 ，决出 1 支获胜队伍。\n总配对次数 = 7 + 3 + 2 + 1 = 13\n</pre>\n\n<p> </p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n    <li><code>1 &lt;= n &lt;= 200</code></li>\n</ul>\n<div><div>Related Topics</div><div><li>数学</li><li>模拟</li></div></div>\n\n<h1 id=\"个人解法\"><a href=\"#个人解法\" class=\"headerlink\" title=\"个人解法\"></a>个人解法</h1><div class=\"tabs\" id=\"categories\"><ul class=\"nav-tabs\"><li class=\"tab active\"><button type=\"button\" data-href=\"#categories-1\">Java</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#categories-2\">Python3</button></li></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"categories-1\"><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">class Solution &#123;\n    public int numberOfMatches(int n) &#123;\n        &#x2F;&#x2F; 总配对次数\n        int sum &#x3D; 0;\n        while (n &gt; 1) &#123;\n            if (n % 2 &#x3D;&#x3D; 1) &#123;\n                &#x2F;&#x2F; 奇数队伍\n                &#x2F;&#x2F; 配对次数：(n - 1) &#x2F; 2\n                sum +&#x3D; (n - 1) &#x2F; 2;\n                &#x2F;&#x2F; 剩余队伍数：(n - 1) &#x2F; 2 + 1\n                n &#x3D; (n - 1) &#x2F; 2 + 1;\n            &#125; else &#123;\n                &#x2F;&#x2F; 偶数队伍\n                &#x2F;&#x2F; 配对次数：n &#x2F; 2\n                sum +&#x3D; n &#x2F; 2;\n                &#x2F;&#x2F; 剩余队伍数：n &#x2F; 2\n                n &#x2F;&#x3D; 2;\n            &#125;\n        &#125;\n        return sum;\n    &#125;\n&#125;</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"categories-2\"><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">class Solution:\n    def numberOfMatches(self, n: int) -&gt; int:\n        # 总配对次数\n        sums &#x3D; 0\n        while n &gt; 1:\n            if n % 2 &#x3D;&#x3D; 1:\n                # 奇数队伍\n                # 配对次数：(n - 1) &#x2F; 2\n                sums +&#x3D; (n - 1) &#x2F; 2\n                # 剩余队伍数：(n - 1) &#x2F; 2 + 1\n                n &#x3D; (n - 1) &#x2F; 2 + 1\n            else:\n                # 偶数队伍\n                # 配对次数：n &#x2F; 2\n                sums +&#x3D; n &#x2F; 2\n                # 剩余队伍数：n &#x2F; 2\n                n &#x2F;&#x3D; 2\n        return int(sums)</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div></div>"},{"title":"力扣1984:学生分数的最小差值","date":"2022-02-11T05:35:01.000Z","_content":"2022年02月11日 力扣每日一题\n\n# 题目\n<p>给你一个 <strong>下标从 0 开始</strong> 的整数数组 <code>nums</code> ，其中 <code>nums[i]</code> 表示第 <code>i</code> 名学生的分数。另给你一个整数 <code>k</code> 。</p>\n\n<p>从数组中选出任意 <code>k</code> 名学生的分数，使这 <code>k</code> 个分数间 <strong>最高分</strong> 和 <strong>最低分</strong> 的 <strong>差值</strong> 达到<strong> 最小化</strong> 。</p>\n\n<p>返回可能的 <strong>最小差值</strong> 。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入：</strong>nums = [90], k = 1\n<strong>输出：</strong>0\n<strong>解释：</strong>选出 1 名学生的分数，仅有 1 种方法：\n- [<em><strong>90</strong></em>] 最高分和最低分之间的差值是 90 - 90 = 0\n可能的最小差值是 0\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入：</strong>nums = [9,4,1,7], k = 2\n<strong>输出：</strong>2\n<strong>解释：</strong>选出 2 名学生的分数，有 6 种方法：\n- [<em><strong>9</strong></em>,<em><strong>4</strong></em>,1,7] 最高分和最低分之间的差值是 9 - 4 = 5\n- [<em><strong>9</strong></em>,4,<em><strong>1</strong></em>,7] 最高分和最低分之间的差值是 9 - 1 = 8\n- [<em><strong>9</strong></em>,4,1,<em><strong>7</strong></em>] 最高分和最低分之间的差值是 9 - 7 = 2\n- [9,<em><strong>4</strong></em>,<em><strong>1</strong></em>,7] 最高分和最低分之间的差值是 4 - 1 = 3\n- [9,<em><strong>4</strong></em>,1,<em><strong>7</strong></em>] 最高分和最低分之间的差值是 7 - 4 = 3\n- [9,4,<em><strong>1</strong></em>,<em><strong>7</strong></em>] 最高分和最低分之间的差值是 7 - 1 = 6\n可能的最小差值是 2</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= k &lt;= nums.length &lt;= 1000</code></li>\n\t<li><code>0 &lt;= nums[i] &lt;= 10<sup>5</sup></code></li>\n</ul>\n<div><div>Related Topics</div><div><li>数组</li><li>排序</li><li>滑动窗口</li></div></div>\n\n# 个人解法\n\n排序后，使用滑动窗口\n\n{% tabs categories%}\n<!-- tab Java -->\n```java\nclass Solution {\n    public int minimumDifference(int[] nums, int k) {\n        Arrays.sort(nums);\n        int min = Integer.MAX_VALUE;\n        for (int i = 0; i <= nums.length - k; i++) {\n            min = Math.min(min, nums[i + k - 1] - nums[i]);\n        }\n        return min;\n    }\n}\n```\n<!-- endtab -->\n\n<!-- tab Python3 -->\n```python\nfrom typing import List\n\n\nclass Solution:\n    def minimumDifference(self, nums: List[int], k: int) -> int:\n        if k > 1:\n            num = sorted(nums)\n            return min(num[i + k - 1] - num[i] for i in range(len(num) - k + 1))\n        else:\n            return 0\n```\n<!-- endtab -->\n{% endtabs %}","source":"_posts/day20220211.md","raw":"---\ntitle: 力扣1984:学生分数的最小差值\ndate: 2022-02-11 13:35:01\ntags: [力扣]\ncategories: [算法,力扣,每日一题]\n---\n2022年02月11日 力扣每日一题\n\n# 题目\n<p>给你一个 <strong>下标从 0 开始</strong> 的整数数组 <code>nums</code> ，其中 <code>nums[i]</code> 表示第 <code>i</code> 名学生的分数。另给你一个整数 <code>k</code> 。</p>\n\n<p>从数组中选出任意 <code>k</code> 名学生的分数，使这 <code>k</code> 个分数间 <strong>最高分</strong> 和 <strong>最低分</strong> 的 <strong>差值</strong> 达到<strong> 最小化</strong> 。</p>\n\n<p>返回可能的 <strong>最小差值</strong> 。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入：</strong>nums = [90], k = 1\n<strong>输出：</strong>0\n<strong>解释：</strong>选出 1 名学生的分数，仅有 1 种方法：\n- [<em><strong>90</strong></em>] 最高分和最低分之间的差值是 90 - 90 = 0\n可能的最小差值是 0\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入：</strong>nums = [9,4,1,7], k = 2\n<strong>输出：</strong>2\n<strong>解释：</strong>选出 2 名学生的分数，有 6 种方法：\n- [<em><strong>9</strong></em>,<em><strong>4</strong></em>,1,7] 最高分和最低分之间的差值是 9 - 4 = 5\n- [<em><strong>9</strong></em>,4,<em><strong>1</strong></em>,7] 最高分和最低分之间的差值是 9 - 1 = 8\n- [<em><strong>9</strong></em>,4,1,<em><strong>7</strong></em>] 最高分和最低分之间的差值是 9 - 7 = 2\n- [9,<em><strong>4</strong></em>,<em><strong>1</strong></em>,7] 最高分和最低分之间的差值是 4 - 1 = 3\n- [9,<em><strong>4</strong></em>,1,<em><strong>7</strong></em>] 最高分和最低分之间的差值是 7 - 4 = 3\n- [9,4,<em><strong>1</strong></em>,<em><strong>7</strong></em>] 最高分和最低分之间的差值是 7 - 1 = 6\n可能的最小差值是 2</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= k &lt;= nums.length &lt;= 1000</code></li>\n\t<li><code>0 &lt;= nums[i] &lt;= 10<sup>5</sup></code></li>\n</ul>\n<div><div>Related Topics</div><div><li>数组</li><li>排序</li><li>滑动窗口</li></div></div>\n\n# 个人解法\n\n排序后，使用滑动窗口\n\n{% tabs categories%}\n<!-- tab Java -->\n```java\nclass Solution {\n    public int minimumDifference(int[] nums, int k) {\n        Arrays.sort(nums);\n        int min = Integer.MAX_VALUE;\n        for (int i = 0; i <= nums.length - k; i++) {\n            min = Math.min(min, nums[i + k - 1] - nums[i]);\n        }\n        return min;\n    }\n}\n```\n<!-- endtab -->\n\n<!-- tab Python3 -->\n```python\nfrom typing import List\n\n\nclass Solution:\n    def minimumDifference(self, nums: List[int], k: int) -> int:\n        if k > 1:\n            num = sorted(nums)\n            return min(num[i + k - 1] - num[i] for i in range(len(num) - k + 1))\n        else:\n            return 0\n```\n<!-- endtab -->\n{% endtabs %}","slug":"day20220211","published":1,"updated":"2022-02-11T09:21:01.853Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl0t0rrl7000r4ctuezradzzu","content":"<p>2022年02月11日 力扣每日一题</p>\n<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>给你一个 <strong>下标从 0 开始</strong> 的整数数组 <code>nums</code> ，其中 <code>nums[i]</code> 表示第 <code>i</code> 名学生的分数。另给你一个整数 <code>k</code> 。</p>\n\n<p>从数组中选出任意 <code>k</code> 名学生的分数，使这 <code>k</code> 个分数间 <strong>最高分</strong> 和 <strong>最低分</strong> 的 <strong>差值</strong> 达到<strong> 最小化</strong> 。</p>\n\n<p>返回可能的 <strong>最小差值</strong> 。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入：</strong>nums = [90], k = 1\n<strong>输出：</strong>0\n<strong>解释：</strong>选出 1 名学生的分数，仅有 1 种方法：\n- [<em><strong>90</strong></em>] 最高分和最低分之间的差值是 90 - 90 = 0\n可能的最小差值是 0\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入：</strong>nums = [9,4,1,7], k = 2\n<strong>输出：</strong>2\n<strong>解释：</strong>选出 2 名学生的分数，有 6 种方法：\n- [<em><strong>9</strong></em>,<em><strong>4</strong></em>,1,7] 最高分和最低分之间的差值是 9 - 4 = 5\n- [<em><strong>9</strong></em>,4,<em><strong>1</strong></em>,7] 最高分和最低分之间的差值是 9 - 1 = 8\n- [<em><strong>9</strong></em>,4,1,<em><strong>7</strong></em>] 最高分和最低分之间的差值是 9 - 7 = 2\n- [9,<em><strong>4</strong></em>,<em><strong>1</strong></em>,7] 最高分和最低分之间的差值是 4 - 1 = 3\n- [9,<em><strong>4</strong></em>,1,<em><strong>7</strong></em>] 最高分和最低分之间的差值是 7 - 4 = 3\n- [9,4,<em><strong>1</strong></em>,<em><strong>7</strong></em>] 最高分和最低分之间的差值是 7 - 1 = 6\n可能的最小差值是 2</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n    <li><code>1 &lt;= k &lt;= nums.length &lt;= 1000</code></li>\n    <li><code>0 &lt;= nums[i] &lt;= 10<sup>5</sup></code></li>\n</ul>\n<div><div>Related Topics</div><div><li>数组</li><li>排序</li><li>滑动窗口</li></div></div>\n\n<h1 id=\"个人解法\"><a href=\"#个人解法\" class=\"headerlink\" title=\"个人解法\"></a>个人解法</h1><p>排序后，使用滑动窗口</p>\n<div class=\"tabs\" id=\"categories\"><ul class=\"nav-tabs\"><li class=\"tab active\"><button type=\"button\" data-href=\"#categories-1\">Java</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#categories-2\">Python3</button></li></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"categories-1\"><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">class Solution &#123;\n    public int minimumDifference(int[] nums, int k) &#123;\n        Arrays.sort(nums);\n        int min &#x3D; Integer.MAX_VALUE;\n        for (int i &#x3D; 0; i &lt;&#x3D; nums.length - k; i++) &#123;\n            min &#x3D; Math.min(min, nums[i + k - 1] - nums[i]);\n        &#125;\n        return min;\n    &#125;\n&#125;</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"categories-2\"><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">from typing import List\n\n\nclass Solution:\n    def minimumDifference(self, nums: List[int], k: int) -&gt; int:\n        if k &gt; 1:\n            num &#x3D; sorted(nums)\n            return min(num[i + k - 1] - num[i] for i in range(len(num) - k + 1))\n        else:\n            return 0</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div></div>","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.gitee.io/zh-CN/","avatar":"https://element-plus.gitee.io/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"}}},"cover":"https://blog.huangge1199.cn/post/pyControl/bg.jpeg","excerpt":"","more":"<p>2022年02月11日 力扣每日一题</p>\n<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>给你一个 <strong>下标从 0 开始</strong> 的整数数组 <code>nums</code> ，其中 <code>nums[i]</code> 表示第 <code>i</code> 名学生的分数。另给你一个整数 <code>k</code> 。</p>\n\n<p>从数组中选出任意 <code>k</code> 名学生的分数，使这 <code>k</code> 个分数间 <strong>最高分</strong> 和 <strong>最低分</strong> 的 <strong>差值</strong> 达到<strong> 最小化</strong> 。</p>\n\n<p>返回可能的 <strong>最小差值</strong> 。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入：</strong>nums = [90], k = 1\n<strong>输出：</strong>0\n<strong>解释：</strong>选出 1 名学生的分数，仅有 1 种方法：\n- [<em><strong>90</strong></em>] 最高分和最低分之间的差值是 90 - 90 = 0\n可能的最小差值是 0\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入：</strong>nums = [9,4,1,7], k = 2\n<strong>输出：</strong>2\n<strong>解释：</strong>选出 2 名学生的分数，有 6 种方法：\n- [<em><strong>9</strong></em>,<em><strong>4</strong></em>,1,7] 最高分和最低分之间的差值是 9 - 4 = 5\n- [<em><strong>9</strong></em>,4,<em><strong>1</strong></em>,7] 最高分和最低分之间的差值是 9 - 1 = 8\n- [<em><strong>9</strong></em>,4,1,<em><strong>7</strong></em>] 最高分和最低分之间的差值是 9 - 7 = 2\n- [9,<em><strong>4</strong></em>,<em><strong>1</strong></em>,7] 最高分和最低分之间的差值是 4 - 1 = 3\n- [9,<em><strong>4</strong></em>,1,<em><strong>7</strong></em>] 最高分和最低分之间的差值是 7 - 4 = 3\n- [9,4,<em><strong>1</strong></em>,<em><strong>7</strong></em>] 最高分和最低分之间的差值是 7 - 1 = 6\n可能的最小差值是 2</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n    <li><code>1 &lt;= k &lt;= nums.length &lt;= 1000</code></li>\n    <li><code>0 &lt;= nums[i] &lt;= 10<sup>5</sup></code></li>\n</ul>\n<div><div>Related Topics</div><div><li>数组</li><li>排序</li><li>滑动窗口</li></div></div>\n\n<h1 id=\"个人解法\"><a href=\"#个人解法\" class=\"headerlink\" title=\"个人解法\"></a>个人解法</h1><p>排序后，使用滑动窗口</p>\n<div class=\"tabs\" id=\"categories\"><ul class=\"nav-tabs\"><li class=\"tab active\"><button type=\"button\" data-href=\"#categories-1\">Java</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#categories-2\">Python3</button></li></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"categories-1\"><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">class Solution &#123;\n    public int minimumDifference(int[] nums, int k) &#123;\n        Arrays.sort(nums);\n        int min &#x3D; Integer.MAX_VALUE;\n        for (int i &#x3D; 0; i &lt;&#x3D; nums.length - k; i++) &#123;\n            min &#x3D; Math.min(min, nums[i + k - 1] - nums[i]);\n        &#125;\n        return min;\n    &#125;\n&#125;</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"categories-2\"><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">from typing import List\n\n\nclass Solution:\n    def minimumDifference(self, nums: List[int], k: int) -&gt; int:\n        if k &gt; 1:\n            num &#x3D; sorted(nums)\n            return min(num[i + k - 1] - num[i] for i in range(len(num) - k + 1))\n        else:\n            return 0</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div></div>"},{"title":"力扣1020:飞地的数量","date":"2022-02-12T14:22:26.000Z","_content":"2022年02月12日 力扣每日一题\n\n# 题目\n<p>给你一个大小为 <code>m x n</code> 的二进制矩阵 <code>grid</code> ，其中 <code>0</code> 表示一个海洋单元格、<code>1</code> 表示一个陆地单元格。</p>\n\n<p>一次 <strong>移动</strong> 是指从一个陆地单元格走到另一个相邻（<strong>上、下、左、右</strong>）的陆地单元格或跨过 <code>grid</code> 的边界。</p>\n\n<p>返回网格中<strong> 无法 </strong>在任意次数的移动中离开网格边界的陆地单元格的数量。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/02/18/enclaves1.jpg\" style=\"height: 200px; width: 200px;\" />\n<pre>\n<strong>输入：</strong>grid = [[0,0,0,0],[1,0,1,0],[0,1,1,0],[0,0,0,0]]\n<strong>输出：</strong>3\n<strong>解释：</strong>有三个 1 被 0 包围。一个 1 没有被包围，因为它在边界上。\n</pre>\n\n<p><strong>示例 2：</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/02/18/enclaves2.jpg\" style=\"height: 200px; width: 200px;\" />\n<pre>\n<strong>输入：</strong>grid = [[0,1,1,0],[0,0,1,0],[0,0,1,0],[0,0,0,0]]\n<strong>输出：</strong>0\n<strong>解释：</strong>所有 1 都在边界上或可以到达边界。\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>m == grid.length</code></li>\n\t<li><code>n == grid[i].length</code></li>\n\t<li><code>1 &lt;= m, n &lt;= 500</code></li>\n\t<li><code>grid[i][j]</code> 的值为 <code>0</code> 或 <code>1</code></li>\n</ul>\n<div><div>Related Topics</div><div><li>深度优先搜索</li><li>广度优先搜索</li><li>并查集</li><li>数组</li><li>矩阵</li></div></div>\n\n# 个人解法\n\n解题方法：广度优先算法\n\n这道题是统计无法力扣网络边界的陆地单元格数量，我的思路是反过来统计，用`总陆地数量`-`能离开的陆地数量`\n\n这样的话，我就可以用广度优先算法来进行解决，步骤如下：\n\n1. 将边界的单元格坐标加入到队列，并计数\n2. 依次从队列中取出\n3. 将取出陆地的相邻陆地加入到队列中，并计数\n4. 当队列为空时，遍历数组获取总陆地数，并减去能离开的陆地数量\n\n{% tabs categories%}\n<!-- tab Java -->\n```java\nimport java.util.LinkedList;\nimport java.util.Queue;\n\nclass Solution {\n    public int numEnclaves(int[][] grid) {\n        boolean[][] use = new boolean[grid.length][grid[0].length];\n        Queue<int[]> queue = new LinkedList<>();\n        int xl = grid.length;\n        int yl = grid[0].length;\n        int count = 0;\n        for (int i = 0; i < xl; i++) {\n            if (grid[i][0] == 1) {\n                queue.add(new int[]{i, 0});\n                use[i][0] = true;\n                count++;\n            }\n            if (grid[i][yl - 1] == 1 && !use[i][yl - 1]) {\n                queue.add(new int[]{i, yl - 1});\n                use[i][yl - 1] = true;\n                count++;\n            }\n        }\n        for (int i = 1; i < yl - 1; i++) {\n            if (grid[0][i] == 1 && !use[0][i]) {\n                queue.add(new int[]{0, i});\n                use[0][i] = true;\n                count++;\n            }\n            if (grid[xl - 1][i] == 1 && !use[xl - 1][i]) {\n                queue.add(new int[]{xl - 1, i});\n                use[xl - 1][i] = true;\n                count++;\n            }\n        }\n        int[] xp = new int[]{1, -1, 0, 0};\n        int[] yp = new int[]{0, 0, 1, -1};\n        while (!queue.isEmpty()) {\n            int[] arr = queue.poll();\n            int x = arr[0];\n            int y = arr[1];\n            for (int k = 0; k < 4; k++) {\n                int nx = x + xp[k];\n                int ny = y + yp[k];\n                if (nx >= 0 && nx < grid.length && ny >= 0 && ny < grid[0].length && grid[nx][ny] == 1 && !use[nx][ny]) {\n                    queue.add(new int[]{nx, ny});\n                    use[nx][ny] = true;\n                    count++;\n                }\n            }\n        }\n        int sum = 0;\n        for (int[] ints : grid) {\n            for (int j = 0; j < yl; j++) {\n                if (ints[j] == 1) {\n                    sum++;\n                }\n            }\n        }\n        return sum - count;\n    }\n}\n```\n<!-- endtab -->\n\n<!-- tab Python3 -->\n```python\nfrom collections import deque\nfrom typing import List\n\n\nclass Solution:\n    def numEnclaves(self, grid: List[List[int]]) -> int:\n        use = [[False] * len(grid[0]) for _ in range(len(grid))]\n        queue = deque()\n        xl = len(grid)\n        yl = len(grid[0])\n        count = 0\n        for i in range(xl):\n            if grid[i][0] == 1:\n                queue.append((i, 0))\n                use[i][0] = True\n                count += 1\n            if grid[i][yl - 1] == 1 and not use[i][yl - 1]:\n                queue.append((i, yl - 1))\n                use[i][yl - 1] = True\n                count += 1\n        for i in range(1, yl - 1):\n            if grid[0][i] == 1 and not use[0][i]:\n                queue.append((0, i))\n                use[0][i] = True\n                count += 1\n            if grid[xl - 1][i] == 1 and not use[xl - 1][i]:\n                queue.append((xl - 1, i))\n                use[xl - 1][i] = True\n                count += 1\n        while queue:\n            x, y = queue.pop()\n            for nx, ny in ((x - 1, y), (x + 1, y), (x, y - 1), (x, y + 1)):\n                if nx < 0 or nx >= len(grid) or ny < 0 or ny >= len(grid[0]) or grid[nx][ny] == 0 or use[nx][ny]:\n                    continue\n                queue.append((nx, ny))\n                use[nx][ny] = True\n                count += 1\n        sc = sum([sum(row) for row in grid])\n        return sc - count\n```\n<!-- endtab -->\n{% endtabs %}\n","source":"_posts/day20220212.md","raw":"---\ntitle: 力扣1020:飞地的数量\ndate: 2022-02-12 22:22:26\ntags: [力扣]\ncategories: [算法,力扣,每日一题]\n---\n2022年02月12日 力扣每日一题\n\n# 题目\n<p>给你一个大小为 <code>m x n</code> 的二进制矩阵 <code>grid</code> ，其中 <code>0</code> 表示一个海洋单元格、<code>1</code> 表示一个陆地单元格。</p>\n\n<p>一次 <strong>移动</strong> 是指从一个陆地单元格走到另一个相邻（<strong>上、下、左、右</strong>）的陆地单元格或跨过 <code>grid</code> 的边界。</p>\n\n<p>返回网格中<strong> 无法 </strong>在任意次数的移动中离开网格边界的陆地单元格的数量。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/02/18/enclaves1.jpg\" style=\"height: 200px; width: 200px;\" />\n<pre>\n<strong>输入：</strong>grid = [[0,0,0,0],[1,0,1,0],[0,1,1,0],[0,0,0,0]]\n<strong>输出：</strong>3\n<strong>解释：</strong>有三个 1 被 0 包围。一个 1 没有被包围，因为它在边界上。\n</pre>\n\n<p><strong>示例 2：</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/02/18/enclaves2.jpg\" style=\"height: 200px; width: 200px;\" />\n<pre>\n<strong>输入：</strong>grid = [[0,1,1,0],[0,0,1,0],[0,0,1,0],[0,0,0,0]]\n<strong>输出：</strong>0\n<strong>解释：</strong>所有 1 都在边界上或可以到达边界。\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>m == grid.length</code></li>\n\t<li><code>n == grid[i].length</code></li>\n\t<li><code>1 &lt;= m, n &lt;= 500</code></li>\n\t<li><code>grid[i][j]</code> 的值为 <code>0</code> 或 <code>1</code></li>\n</ul>\n<div><div>Related Topics</div><div><li>深度优先搜索</li><li>广度优先搜索</li><li>并查集</li><li>数组</li><li>矩阵</li></div></div>\n\n# 个人解法\n\n解题方法：广度优先算法\n\n这道题是统计无法力扣网络边界的陆地单元格数量，我的思路是反过来统计，用`总陆地数量`-`能离开的陆地数量`\n\n这样的话，我就可以用广度优先算法来进行解决，步骤如下：\n\n1. 将边界的单元格坐标加入到队列，并计数\n2. 依次从队列中取出\n3. 将取出陆地的相邻陆地加入到队列中，并计数\n4. 当队列为空时，遍历数组获取总陆地数，并减去能离开的陆地数量\n\n{% tabs categories%}\n<!-- tab Java -->\n```java\nimport java.util.LinkedList;\nimport java.util.Queue;\n\nclass Solution {\n    public int numEnclaves(int[][] grid) {\n        boolean[][] use = new boolean[grid.length][grid[0].length];\n        Queue<int[]> queue = new LinkedList<>();\n        int xl = grid.length;\n        int yl = grid[0].length;\n        int count = 0;\n        for (int i = 0; i < xl; i++) {\n            if (grid[i][0] == 1) {\n                queue.add(new int[]{i, 0});\n                use[i][0] = true;\n                count++;\n            }\n            if (grid[i][yl - 1] == 1 && !use[i][yl - 1]) {\n                queue.add(new int[]{i, yl - 1});\n                use[i][yl - 1] = true;\n                count++;\n            }\n        }\n        for (int i = 1; i < yl - 1; i++) {\n            if (grid[0][i] == 1 && !use[0][i]) {\n                queue.add(new int[]{0, i});\n                use[0][i] = true;\n                count++;\n            }\n            if (grid[xl - 1][i] == 1 && !use[xl - 1][i]) {\n                queue.add(new int[]{xl - 1, i});\n                use[xl - 1][i] = true;\n                count++;\n            }\n        }\n        int[] xp = new int[]{1, -1, 0, 0};\n        int[] yp = new int[]{0, 0, 1, -1};\n        while (!queue.isEmpty()) {\n            int[] arr = queue.poll();\n            int x = arr[0];\n            int y = arr[1];\n            for (int k = 0; k < 4; k++) {\n                int nx = x + xp[k];\n                int ny = y + yp[k];\n                if (nx >= 0 && nx < grid.length && ny >= 0 && ny < grid[0].length && grid[nx][ny] == 1 && !use[nx][ny]) {\n                    queue.add(new int[]{nx, ny});\n                    use[nx][ny] = true;\n                    count++;\n                }\n            }\n        }\n        int sum = 0;\n        for (int[] ints : grid) {\n            for (int j = 0; j < yl; j++) {\n                if (ints[j] == 1) {\n                    sum++;\n                }\n            }\n        }\n        return sum - count;\n    }\n}\n```\n<!-- endtab -->\n\n<!-- tab Python3 -->\n```python\nfrom collections import deque\nfrom typing import List\n\n\nclass Solution:\n    def numEnclaves(self, grid: List[List[int]]) -> int:\n        use = [[False] * len(grid[0]) for _ in range(len(grid))]\n        queue = deque()\n        xl = len(grid)\n        yl = len(grid[0])\n        count = 0\n        for i in range(xl):\n            if grid[i][0] == 1:\n                queue.append((i, 0))\n                use[i][0] = True\n                count += 1\n            if grid[i][yl - 1] == 1 and not use[i][yl - 1]:\n                queue.append((i, yl - 1))\n                use[i][yl - 1] = True\n                count += 1\n        for i in range(1, yl - 1):\n            if grid[0][i] == 1 and not use[0][i]:\n                queue.append((0, i))\n                use[0][i] = True\n                count += 1\n            if grid[xl - 1][i] == 1 and not use[xl - 1][i]:\n                queue.append((xl - 1, i))\n                use[xl - 1][i] = True\n                count += 1\n        while queue:\n            x, y = queue.pop()\n            for nx, ny in ((x - 1, y), (x + 1, y), (x, y - 1), (x, y + 1)):\n                if nx < 0 or nx >= len(grid) or ny < 0 or ny >= len(grid[0]) or grid[nx][ny] == 0 or use[nx][ny]:\n                    continue\n                queue.append((nx, ny))\n                use[nx][ny] = True\n                count += 1\n        sc = sum([sum(row) for row in grid])\n        return sc - count\n```\n<!-- endtab -->\n{% endtabs %}\n","slug":"day20220212","published":1,"updated":"2022-02-14T00:36:00.462Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl0t0rrl8000v4ctu0e844823","content":"<p>2022年02月12日 力扣每日一题</p>\n<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>给你一个大小为 <code>m x n</code> 的二进制矩阵 <code>grid</code> ，其中 <code>0</code> 表示一个海洋单元格、<code>1</code> 表示一个陆地单元格。</p>\n\n<p>一次 <strong>移动</strong> 是指从一个陆地单元格走到另一个相邻（<strong>上、下、左、右</strong>）的陆地单元格或跨过 <code>grid</code> 的边界。</p>\n\n<p>返回网格中<strong> 无法 </strong>在任意次数的移动中离开网格边界的陆地单元格的数量。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/02/18/enclaves1.jpg\" style=\"height: 200px; width: 200px;\" />\n<pre>\n<strong>输入：</strong>grid = [[0,0,0,0],[1,0,1,0],[0,1,1,0],[0,0,0,0]]\n<strong>输出：</strong>3\n<strong>解释：</strong>有三个 1 被 0 包围。一个 1 没有被包围，因为它在边界上。\n</pre>\n\n<p><strong>示例 2：</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/02/18/enclaves2.jpg\" style=\"height: 200px; width: 200px;\" />\n<pre>\n<strong>输入：</strong>grid = [[0,1,1,0],[0,0,1,0],[0,0,1,0],[0,0,0,0]]\n<strong>输出：</strong>0\n<strong>解释：</strong>所有 1 都在边界上或可以到达边界。\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n    <li><code>m == grid.length</code></li>\n    <li><code>n == grid[i].length</code></li>\n    <li><code>1 &lt;= m, n &lt;= 500</code></li>\n    <li><code>grid[i][j]</code> 的值为 <code>0</code> 或 <code>1</code></li>\n</ul>\n<div><div>Related Topics</div><div><li>深度优先搜索</li><li>广度优先搜索</li><li>并查集</li><li>数组</li><li>矩阵</li></div></div>\n\n<h1 id=\"个人解法\"><a href=\"#个人解法\" class=\"headerlink\" title=\"个人解法\"></a>个人解法</h1><p>解题方法：广度优先算法</p>\n<p>这道题是统计无法力扣网络边界的陆地单元格数量，我的思路是反过来统计，用<code>总陆地数量</code>-<code>能离开的陆地数量</code></p>\n<p>这样的话，我就可以用广度优先算法来进行解决，步骤如下：</p>\n<ol>\n<li>将边界的单元格坐标加入到队列，并计数</li>\n<li>依次从队列中取出</li>\n<li>将取出陆地的相邻陆地加入到队列中，并计数</li>\n<li>当队列为空时，遍历数组获取总陆地数，并减去能离开的陆地数量</li>\n</ol>\n<div class=\"tabs\" id=\"categories\"><ul class=\"nav-tabs\"><li class=\"tab active\"><button type=\"button\" data-href=\"#categories-1\">Java</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#categories-2\">Python3</button></li></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"categories-1\"><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">import java.util.LinkedList;\nimport java.util.Queue;\n\nclass Solution &#123;\n    public int numEnclaves(int[][] grid) &#123;\n        boolean[][] use &#x3D; new boolean[grid.length][grid[0].length];\n        Queue&lt;int[]&gt; queue &#x3D; new LinkedList&lt;&gt;();\n        int xl &#x3D; grid.length;\n        int yl &#x3D; grid[0].length;\n        int count &#x3D; 0;\n        for (int i &#x3D; 0; i &lt; xl; i++) &#123;\n            if (grid[i][0] &#x3D;&#x3D; 1) &#123;\n                queue.add(new int[]&#123;i, 0&#125;);\n                use[i][0] &#x3D; true;\n                count++;\n            &#125;\n            if (grid[i][yl - 1] &#x3D;&#x3D; 1 &amp;&amp; !use[i][yl - 1]) &#123;\n                queue.add(new int[]&#123;i, yl - 1&#125;);\n                use[i][yl - 1] &#x3D; true;\n                count++;\n            &#125;\n        &#125;\n        for (int i &#x3D; 1; i &lt; yl - 1; i++) &#123;\n            if (grid[0][i] &#x3D;&#x3D; 1 &amp;&amp; !use[0][i]) &#123;\n                queue.add(new int[]&#123;0, i&#125;);\n                use[0][i] &#x3D; true;\n                count++;\n            &#125;\n            if (grid[xl - 1][i] &#x3D;&#x3D; 1 &amp;&amp; !use[xl - 1][i]) &#123;\n                queue.add(new int[]&#123;xl - 1, i&#125;);\n                use[xl - 1][i] &#x3D; true;\n                count++;\n            &#125;\n        &#125;\n        int[] xp &#x3D; new int[]&#123;1, -1, 0, 0&#125;;\n        int[] yp &#x3D; new int[]&#123;0, 0, 1, -1&#125;;\n        while (!queue.isEmpty()) &#123;\n            int[] arr &#x3D; queue.poll();\n            int x &#x3D; arr[0];\n            int y &#x3D; arr[1];\n            for (int k &#x3D; 0; k &lt; 4; k++) &#123;\n                int nx &#x3D; x + xp[k];\n                int ny &#x3D; y + yp[k];\n                if (nx &gt;&#x3D; 0 &amp;&amp; nx &lt; grid.length &amp;&amp; ny &gt;&#x3D; 0 &amp;&amp; ny &lt; grid[0].length &amp;&amp; grid[nx][ny] &#x3D;&#x3D; 1 &amp;&amp; !use[nx][ny]) &#123;\n                    queue.add(new int[]&#123;nx, ny&#125;);\n                    use[nx][ny] &#x3D; true;\n                    count++;\n                &#125;\n            &#125;\n        &#125;\n        int sum &#x3D; 0;\n        for (int[] ints : grid) &#123;\n            for (int j &#x3D; 0; j &lt; yl; j++) &#123;\n                if (ints[j] &#x3D;&#x3D; 1) &#123;\n                    sum++;\n                &#125;\n            &#125;\n        &#125;\n        return sum - count;\n    &#125;\n&#125;</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"categories-2\"><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">from collections import deque\nfrom typing import List\n\n\nclass Solution:\n    def numEnclaves(self, grid: List[List[int]]) -&gt; int:\n        use &#x3D; [[False] * len(grid[0]) for _ in range(len(grid))]\n        queue &#x3D; deque()\n        xl &#x3D; len(grid)\n        yl &#x3D; len(grid[0])\n        count &#x3D; 0\n        for i in range(xl):\n            if grid[i][0] &#x3D;&#x3D; 1:\n                queue.append((i, 0))\n                use[i][0] &#x3D; True\n                count +&#x3D; 1\n            if grid[i][yl - 1] &#x3D;&#x3D; 1 and not use[i][yl - 1]:\n                queue.append((i, yl - 1))\n                use[i][yl - 1] &#x3D; True\n                count +&#x3D; 1\n        for i in range(1, yl - 1):\n            if grid[0][i] &#x3D;&#x3D; 1 and not use[0][i]:\n                queue.append((0, i))\n                use[0][i] &#x3D; True\n                count +&#x3D; 1\n            if grid[xl - 1][i] &#x3D;&#x3D; 1 and not use[xl - 1][i]:\n                queue.append((xl - 1, i))\n                use[xl - 1][i] &#x3D; True\n                count +&#x3D; 1\n        while queue:\n            x, y &#x3D; queue.pop()\n            for nx, ny in ((x - 1, y), (x + 1, y), (x, y - 1), (x, y + 1)):\n                if nx &lt; 0 or nx &gt;&#x3D; len(grid) or ny &lt; 0 or ny &gt;&#x3D; len(grid[0]) or grid[nx][ny] &#x3D;&#x3D; 0 or use[nx][ny]:\n                    continue\n                queue.append((nx, ny))\n                use[nx][ny] &#x3D; True\n                count +&#x3D; 1\n        sc &#x3D; sum([sum(row) for row in grid])\n        return sc - count</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div></div>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.gitee.io/zh-CN/","avatar":"https://element-plus.gitee.io/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"}}},"cover":"https://blog.huangge1199.cn/post/day20220119/bg.jpeg","excerpt":"","more":"<p>2022年02月12日 力扣每日一题</p>\n<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>给你一个大小为 <code>m x n</code> 的二进制矩阵 <code>grid</code> ，其中 <code>0</code> 表示一个海洋单元格、<code>1</code> 表示一个陆地单元格。</p>\n\n<p>一次 <strong>移动</strong> 是指从一个陆地单元格走到另一个相邻（<strong>上、下、左、右</strong>）的陆地单元格或跨过 <code>grid</code> 的边界。</p>\n\n<p>返回网格中<strong> 无法 </strong>在任意次数的移动中离开网格边界的陆地单元格的数量。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/02/18/enclaves1.jpg\" style=\"height: 200px; width: 200px;\" />\n<pre>\n<strong>输入：</strong>grid = [[0,0,0,0],[1,0,1,0],[0,1,1,0],[0,0,0,0]]\n<strong>输出：</strong>3\n<strong>解释：</strong>有三个 1 被 0 包围。一个 1 没有被包围，因为它在边界上。\n</pre>\n\n<p><strong>示例 2：</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/02/18/enclaves2.jpg\" style=\"height: 200px; width: 200px;\" />\n<pre>\n<strong>输入：</strong>grid = [[0,1,1,0],[0,0,1,0],[0,0,1,0],[0,0,0,0]]\n<strong>输出：</strong>0\n<strong>解释：</strong>所有 1 都在边界上或可以到达边界。\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n    <li><code>m == grid.length</code></li>\n    <li><code>n == grid[i].length</code></li>\n    <li><code>1 &lt;= m, n &lt;= 500</code></li>\n    <li><code>grid[i][j]</code> 的值为 <code>0</code> 或 <code>1</code></li>\n</ul>\n<div><div>Related Topics</div><div><li>深度优先搜索</li><li>广度优先搜索</li><li>并查集</li><li>数组</li><li>矩阵</li></div></div>\n\n<h1 id=\"个人解法\"><a href=\"#个人解法\" class=\"headerlink\" title=\"个人解法\"></a>个人解法</h1><p>解题方法：广度优先算法</p>\n<p>这道题是统计无法力扣网络边界的陆地单元格数量，我的思路是反过来统计，用<code>总陆地数量</code>-<code>能离开的陆地数量</code></p>\n<p>这样的话，我就可以用广度优先算法来进行解决，步骤如下：</p>\n<ol>\n<li>将边界的单元格坐标加入到队列，并计数</li>\n<li>依次从队列中取出</li>\n<li>将取出陆地的相邻陆地加入到队列中，并计数</li>\n<li>当队列为空时，遍历数组获取总陆地数，并减去能离开的陆地数量</li>\n</ol>\n<div class=\"tabs\" id=\"categories\"><ul class=\"nav-tabs\"><li class=\"tab active\"><button type=\"button\" data-href=\"#categories-1\">Java</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#categories-2\">Python3</button></li></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"categories-1\"><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">import java.util.LinkedList;\nimport java.util.Queue;\n\nclass Solution &#123;\n    public int numEnclaves(int[][] grid) &#123;\n        boolean[][] use &#x3D; new boolean[grid.length][grid[0].length];\n        Queue&lt;int[]&gt; queue &#x3D; new LinkedList&lt;&gt;();\n        int xl &#x3D; grid.length;\n        int yl &#x3D; grid[0].length;\n        int count &#x3D; 0;\n        for (int i &#x3D; 0; i &lt; xl; i++) &#123;\n            if (grid[i][0] &#x3D;&#x3D; 1) &#123;\n                queue.add(new int[]&#123;i, 0&#125;);\n                use[i][0] &#x3D; true;\n                count++;\n            &#125;\n            if (grid[i][yl - 1] &#x3D;&#x3D; 1 &amp;&amp; !use[i][yl - 1]) &#123;\n                queue.add(new int[]&#123;i, yl - 1&#125;);\n                use[i][yl - 1] &#x3D; true;\n                count++;\n            &#125;\n        &#125;\n        for (int i &#x3D; 1; i &lt; yl - 1; i++) &#123;\n            if (grid[0][i] &#x3D;&#x3D; 1 &amp;&amp; !use[0][i]) &#123;\n                queue.add(new int[]&#123;0, i&#125;);\n                use[0][i] &#x3D; true;\n                count++;\n            &#125;\n            if (grid[xl - 1][i] &#x3D;&#x3D; 1 &amp;&amp; !use[xl - 1][i]) &#123;\n                queue.add(new int[]&#123;xl - 1, i&#125;);\n                use[xl - 1][i] &#x3D; true;\n                count++;\n            &#125;\n        &#125;\n        int[] xp &#x3D; new int[]&#123;1, -1, 0, 0&#125;;\n        int[] yp &#x3D; new int[]&#123;0, 0, 1, -1&#125;;\n        while (!queue.isEmpty()) &#123;\n            int[] arr &#x3D; queue.poll();\n            int x &#x3D; arr[0];\n            int y &#x3D; arr[1];\n            for (int k &#x3D; 0; k &lt; 4; k++) &#123;\n                int nx &#x3D; x + xp[k];\n                int ny &#x3D; y + yp[k];\n                if (nx &gt;&#x3D; 0 &amp;&amp; nx &lt; grid.length &amp;&amp; ny &gt;&#x3D; 0 &amp;&amp; ny &lt; grid[0].length &amp;&amp; grid[nx][ny] &#x3D;&#x3D; 1 &amp;&amp; !use[nx][ny]) &#123;\n                    queue.add(new int[]&#123;nx, ny&#125;);\n                    use[nx][ny] &#x3D; true;\n                    count++;\n                &#125;\n            &#125;\n        &#125;\n        int sum &#x3D; 0;\n        for (int[] ints : grid) &#123;\n            for (int j &#x3D; 0; j &lt; yl; j++) &#123;\n                if (ints[j] &#x3D;&#x3D; 1) &#123;\n                    sum++;\n                &#125;\n            &#125;\n        &#125;\n        return sum - count;\n    &#125;\n&#125;</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"categories-2\"><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">from collections import deque\nfrom typing import List\n\n\nclass Solution:\n    def numEnclaves(self, grid: List[List[int]]) -&gt; int:\n        use &#x3D; [[False] * len(grid[0]) for _ in range(len(grid))]\n        queue &#x3D; deque()\n        xl &#x3D; len(grid)\n        yl &#x3D; len(grid[0])\n        count &#x3D; 0\n        for i in range(xl):\n            if grid[i][0] &#x3D;&#x3D; 1:\n                queue.append((i, 0))\n                use[i][0] &#x3D; True\n                count +&#x3D; 1\n            if grid[i][yl - 1] &#x3D;&#x3D; 1 and not use[i][yl - 1]:\n                queue.append((i, yl - 1))\n                use[i][yl - 1] &#x3D; True\n                count +&#x3D; 1\n        for i in range(1, yl - 1):\n            if grid[0][i] &#x3D;&#x3D; 1 and not use[0][i]:\n                queue.append((0, i))\n                use[0][i] &#x3D; True\n                count +&#x3D; 1\n            if grid[xl - 1][i] &#x3D;&#x3D; 1 and not use[xl - 1][i]:\n                queue.append((xl - 1, i))\n                use[xl - 1][i] &#x3D; True\n                count +&#x3D; 1\n        while queue:\n            x, y &#x3D; queue.pop()\n            for nx, ny in ((x - 1, y), (x + 1, y), (x, y - 1), (x, y + 1)):\n                if nx &lt; 0 or nx &gt;&#x3D; len(grid) or ny &lt; 0 or ny &gt;&#x3D; len(grid[0]) or grid[nx][ny] &#x3D;&#x3D; 0 or use[nx][ny]:\n                    continue\n                queue.append((nx, ny))\n                use[nx][ny] &#x3D; True\n                count +&#x3D; 1\n        sc &#x3D; sum([sum(row) for row in grid])\n        return sc - count</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div></div>\n"},{"title":"力扣1189:“气球” 的最大数量","date":"2022-02-13T14:32:48.000Z","_content":"2022年02月13日 力扣每日一题\n\n# 题目\n<p>给你一个字符串&nbsp;<code>text</code>，你需要使用 <code>text</code> 中的字母来拼凑尽可能多的单词&nbsp;<strong>&quot;balloon&quot;（气球）</strong>。</p>\n\n<p>字符串&nbsp;<code>text</code> 中的每个字母最多只能被使用一次。请你返回最多可以拼凑出多少个单词&nbsp;<strong>&quot;balloon&quot;</strong>。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://blog.huangge1199.cn/post/day20220213/1536_ex1_upd.jpeg\" style=\"height: 35px; width: 154px;\"></strong></p>\n\n<pre><strong>输入：</strong>text = &quot;nlaebolko&quot;\n<strong>输出：</strong>1\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://blog.huangge1199.cn/post/day20220213/1536_ex2_upd.jpeg\" style=\"height: 35px; width: 233px;\"></strong></p>\n\n<pre><strong>输入：</strong>text = &quot;loonbalxballpoon&quot;\n<strong>输出：</strong>2\n</pre>\n\n<p><strong>示例 3：</strong></p>\n\n<pre><strong>输入：</strong>text = &quot;leetcode&quot;\n<strong>输出：</strong>0\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= text.length &lt;= 10^4</code></li>\n\t<li><code>text</code>&nbsp;全部由小写英文字母组成</li>\n</ul>\n<div><div>Related Topics</div><div><li>哈希表</li><li>字符串</li><li>计数</li></div></div>\n\n# 个人解法\n\n一个单词”balloon”分别需要一个'b'、'a'、'n'，以及二个'l'、'o'\n首先我们统计给的单词中每个字母的个数\n然后统计'b'、'a'、'n'数量以及'l'、'o'除以2的最小值\n\n{% tabs categories%}\n<!-- tab Java -->\n```java\nclass Solution {\n    public int maxNumberOfBalloons(String text) {\n        int[] arrs = new int[26];\n        for (char ch : text.toCharArray()) {\n            arrs[ch - 'a']++;\n        }\n        int count = Math.min(arrs[0], arrs[1]);\n        count = Math.min(count, arrs['l' - 'a'] / 2);\n        count = Math.min(count, arrs['o' - 'a'] / 2);\n        count = Math.min(count, arrs['n' - 'a']);\n        return count;\n    }\n}\n```\n<!-- endtab -->\n\n<!-- tab Python3 -->\n```python\nclass Solution:\n    def maxNumberOfBalloons(self, text: str) -> int:\n        return min(cnts[ch] // 2 if ch in \"lo\" else cnts[ch] for ch in \"balon\") if (cnts := Counter(text)) else 0\n```\n<!-- endtab -->\n{% endtabs %}\n","source":"_posts/day20220213.md","raw":"---\ntitle: 力扣1189:“气球” 的最大数量\ndate: 2022-02-13 22:32:48\ntags: [力扣]\ncategories: [算法,力扣,每日一题]\n---\n2022年02月13日 力扣每日一题\n\n# 题目\n<p>给你一个字符串&nbsp;<code>text</code>，你需要使用 <code>text</code> 中的字母来拼凑尽可能多的单词&nbsp;<strong>&quot;balloon&quot;（气球）</strong>。</p>\n\n<p>字符串&nbsp;<code>text</code> 中的每个字母最多只能被使用一次。请你返回最多可以拼凑出多少个单词&nbsp;<strong>&quot;balloon&quot;</strong>。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://blog.huangge1199.cn/post/day20220213/1536_ex1_upd.jpeg\" style=\"height: 35px; width: 154px;\"></strong></p>\n\n<pre><strong>输入：</strong>text = &quot;nlaebolko&quot;\n<strong>输出：</strong>1\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://blog.huangge1199.cn/post/day20220213/1536_ex2_upd.jpeg\" style=\"height: 35px; width: 233px;\"></strong></p>\n\n<pre><strong>输入：</strong>text = &quot;loonbalxballpoon&quot;\n<strong>输出：</strong>2\n</pre>\n\n<p><strong>示例 3：</strong></p>\n\n<pre><strong>输入：</strong>text = &quot;leetcode&quot;\n<strong>输出：</strong>0\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= text.length &lt;= 10^4</code></li>\n\t<li><code>text</code>&nbsp;全部由小写英文字母组成</li>\n</ul>\n<div><div>Related Topics</div><div><li>哈希表</li><li>字符串</li><li>计数</li></div></div>\n\n# 个人解法\n\n一个单词”balloon”分别需要一个'b'、'a'、'n'，以及二个'l'、'o'\n首先我们统计给的单词中每个字母的个数\n然后统计'b'、'a'、'n'数量以及'l'、'o'除以2的最小值\n\n{% tabs categories%}\n<!-- tab Java -->\n```java\nclass Solution {\n    public int maxNumberOfBalloons(String text) {\n        int[] arrs = new int[26];\n        for (char ch : text.toCharArray()) {\n            arrs[ch - 'a']++;\n        }\n        int count = Math.min(arrs[0], arrs[1]);\n        count = Math.min(count, arrs['l' - 'a'] / 2);\n        count = Math.min(count, arrs['o' - 'a'] / 2);\n        count = Math.min(count, arrs['n' - 'a']);\n        return count;\n    }\n}\n```\n<!-- endtab -->\n\n<!-- tab Python3 -->\n```python\nclass Solution:\n    def maxNumberOfBalloons(self, text: str) -> int:\n        return min(cnts[ch] // 2 if ch in \"lo\" else cnts[ch] for ch in \"balon\") if (cnts := Counter(text)) else 0\n```\n<!-- endtab -->\n{% endtabs %}\n","slug":"day20220213","published":1,"updated":"2022-02-14T00:36:00.466Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl0t0rrl8000y4ctu5zh07jk2","content":"<p>2022年02月13日 力扣每日一题</p>\n<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>给你一个字符串&nbsp;<code>text</code>，你需要使用 <code>text</code> 中的字母来拼凑尽可能多的单词&nbsp;<strong>&quot;balloon&quot;（气球）</strong>。</p>\n\n<p>字符串&nbsp;<code>text</code> 中的每个字母最多只能被使用一次。请你返回最多可以拼凑出多少个单词&nbsp;<strong>&quot;balloon&quot;</strong>。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://blog.huangge1199.cn/post/day20220213/1536_ex1_upd.jpeg\" style=\"height: 35px; width: 154px;\"></strong></p>\n\n<pre><strong>输入：</strong>text = &quot;nlaebolko&quot;\n<strong>输出：</strong>1\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://blog.huangge1199.cn/post/day20220213/1536_ex2_upd.jpeg\" style=\"height: 35px; width: 233px;\"></strong></p>\n\n<pre><strong>输入：</strong>text = &quot;loonbalxballpoon&quot;\n<strong>输出：</strong>2\n</pre>\n\n<p><strong>示例 3：</strong></p>\n\n<pre><strong>输入：</strong>text = &quot;leetcode&quot;\n<strong>输出：</strong>0\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n    <li><code>1 &lt;= text.length &lt;= 10^4</code></li>\n    <li><code>text</code>&nbsp;全部由小写英文字母组成</li>\n</ul>\n<div><div>Related Topics</div><div><li>哈希表</li><li>字符串</li><li>计数</li></div></div>\n\n<h1 id=\"个人解法\"><a href=\"#个人解法\" class=\"headerlink\" title=\"个人解法\"></a>个人解法</h1><p>一个单词”balloon”分别需要一个’b’、’a’、’n’，以及二个’l’、’o’<br>首先我们统计给的单词中每个字母的个数<br>然后统计’b’、’a’、’n’数量以及’l’、’o’除以2的最小值</p>\n<div class=\"tabs\" id=\"categories\"><ul class=\"nav-tabs\"><li class=\"tab active\"><button type=\"button\" data-href=\"#categories-1\">Java</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#categories-2\">Python3</button></li></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"categories-1\"><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">class Solution &#123;\n    public int maxNumberOfBalloons(String text) &#123;\n        int[] arrs &#x3D; new int[26];\n        for (char ch : text.toCharArray()) &#123;\n            arrs[ch - &#39;a&#39;]++;\n        &#125;\n        int count &#x3D; Math.min(arrs[0], arrs[1]);\n        count &#x3D; Math.min(count, arrs[&#39;l&#39; - &#39;a&#39;] &#x2F; 2);\n        count &#x3D; Math.min(count, arrs[&#39;o&#39; - &#39;a&#39;] &#x2F; 2);\n        count &#x3D; Math.min(count, arrs[&#39;n&#39; - &#39;a&#39;]);\n        return count;\n    &#125;\n&#125;</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"categories-2\"><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">class Solution:\n    def maxNumberOfBalloons(self, text: str) -&gt; int:\n        return min(cnts[ch] &#x2F;&#x2F; 2 if ch in &quot;lo&quot; else cnts[ch] for ch in &quot;balon&quot;) if (cnts :&#x3D; Counter(text)) else 0</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div></div>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.gitee.io/zh-CN/","avatar":"https://element-plus.gitee.io/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"}}},"cover":"https://blog.huangge1199.cn/post/day20220119/bg.jpeg","excerpt":"","more":"<p>2022年02月13日 力扣每日一题</p>\n<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>给你一个字符串&nbsp;<code>text</code>，你需要使用 <code>text</code> 中的字母来拼凑尽可能多的单词&nbsp;<strong>&quot;balloon&quot;（气球）</strong>。</p>\n\n<p>字符串&nbsp;<code>text</code> 中的每个字母最多只能被使用一次。请你返回最多可以拼凑出多少个单词&nbsp;<strong>&quot;balloon&quot;</strong>。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://blog.huangge1199.cn/post/day20220213/1536_ex1_upd.jpeg\" style=\"height: 35px; width: 154px;\"></strong></p>\n\n<pre><strong>输入：</strong>text = &quot;nlaebolko&quot;\n<strong>输出：</strong>1\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://blog.huangge1199.cn/post/day20220213/1536_ex2_upd.jpeg\" style=\"height: 35px; width: 233px;\"></strong></p>\n\n<pre><strong>输入：</strong>text = &quot;loonbalxballpoon&quot;\n<strong>输出：</strong>2\n</pre>\n\n<p><strong>示例 3：</strong></p>\n\n<pre><strong>输入：</strong>text = &quot;leetcode&quot;\n<strong>输出：</strong>0\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n    <li><code>1 &lt;= text.length &lt;= 10^4</code></li>\n    <li><code>text</code>&nbsp;全部由小写英文字母组成</li>\n</ul>\n<div><div>Related Topics</div><div><li>哈希表</li><li>字符串</li><li>计数</li></div></div>\n\n<h1 id=\"个人解法\"><a href=\"#个人解法\" class=\"headerlink\" title=\"个人解法\"></a>个人解法</h1><p>一个单词”balloon”分别需要一个’b’、’a’、’n’，以及二个’l’、’o’<br>首先我们统计给的单词中每个字母的个数<br>然后统计’b’、’a’、’n’数量以及’l’、’o’除以2的最小值</p>\n<div class=\"tabs\" id=\"categories\"><ul class=\"nav-tabs\"><li class=\"tab active\"><button type=\"button\" data-href=\"#categories-1\">Java</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#categories-2\">Python3</button></li></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"categories-1\"><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">class Solution &#123;\n    public int maxNumberOfBalloons(String text) &#123;\n        int[] arrs &#x3D; new int[26];\n        for (char ch : text.toCharArray()) &#123;\n            arrs[ch - &#39;a&#39;]++;\n        &#125;\n        int count &#x3D; Math.min(arrs[0], arrs[1]);\n        count &#x3D; Math.min(count, arrs[&#39;l&#39; - &#39;a&#39;] &#x2F; 2);\n        count &#x3D; Math.min(count, arrs[&#39;o&#39; - &#39;a&#39;] &#x2F; 2);\n        count &#x3D; Math.min(count, arrs[&#39;n&#39; - &#39;a&#39;]);\n        return count;\n    &#125;\n&#125;</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"categories-2\"><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">class Solution:\n    def maxNumberOfBalloons(self, text: str) -&gt; int:\n        return min(cnts[ch] &#x2F;&#x2F; 2 if ch in &quot;lo&quot; else cnts[ch] for ch in &quot;balon&quot;) if (cnts :&#x3D; Counter(text)) else 0</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div></div>\n"},{"title":"力扣540:有序数组中的单一元素","date":"2022-02-14T01:49:24.000Z","_content":"2022年02月14日 力扣每日一题\n\n# 题目\n<p>给定一个只包含整数的有序数组，每个元素都会出现两次，唯有一个数只会出现一次，找出这个数。</p>\n\n<p> </p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre>\n<strong>输入:</strong> nums = [1,1,2,3,3,4,4,8,8]\n<strong>输出:</strong> 2\n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre>\n<strong>输入:</strong> nums =  [3,3,7,7,10,11,11]\n<strong>输出:</strong> 10\n</pre>\n\n<p> </p>\n\n<p><meta charset=\"UTF-8\" /></p>\n\n<p><strong>提示:</strong></p>\n\n<ul>\n\t<li><code>1 <= nums.length <= 10<sup>5</sup></code></li>\n\t<li><code>0 <= nums[i] <= 10<sup>5</sup></code></li>\n</ul>\n\n<p> </p>\n\n<p><strong>进阶:</strong> 采用的方案可以在 <code>O(log n)</code> 时间复杂度和 <code>O(1)</code> 空间复杂度中运行吗？</p>\n<div><div>Related Topics</div><div><li>数组</li><li>二分查找</li></div></div>\n\n# 个人解法\n\n根据异或的规则，相同为0，不同为1，这样把所有数都异或一遍，结果就是唯一的只出现一次的数\n\n{% tabs categories%}\n<!-- tab Java -->\n```java\npublic int singleNonDuplicate(int[] nums) {\n    int result = nums[0];\n    for (int i = 1; i < nums.length; i++) {\n        result ^= nums[i];\n    }\n    return result;\n}\n```\n<!-- endtab -->\n\n<!-- tab Python3 -->\n```python\nimport operator\nfrom functools import reduce\nfrom typing import List\n\n\nclass Solution:\n    def singleNonDuplicate(self, nums: List[int]) -> int:\n        return reduce(operator.xor, nums)\n```\n<!-- endtab -->\n{% endtabs %}\n","source":"_posts/day20220214.md","raw":"---\ntitle: 力扣540:有序数组中的单一元素\ndate: 2022-02-14 09:49:24\ntags: [力扣]\ncategories: [算法,力扣,每日一题]\n---\n2022年02月14日 力扣每日一题\n\n# 题目\n<p>给定一个只包含整数的有序数组，每个元素都会出现两次，唯有一个数只会出现一次，找出这个数。</p>\n\n<p> </p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre>\n<strong>输入:</strong> nums = [1,1,2,3,3,4,4,8,8]\n<strong>输出:</strong> 2\n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre>\n<strong>输入:</strong> nums =  [3,3,7,7,10,11,11]\n<strong>输出:</strong> 10\n</pre>\n\n<p> </p>\n\n<p><meta charset=\"UTF-8\" /></p>\n\n<p><strong>提示:</strong></p>\n\n<ul>\n\t<li><code>1 <= nums.length <= 10<sup>5</sup></code></li>\n\t<li><code>0 <= nums[i] <= 10<sup>5</sup></code></li>\n</ul>\n\n<p> </p>\n\n<p><strong>进阶:</strong> 采用的方案可以在 <code>O(log n)</code> 时间复杂度和 <code>O(1)</code> 空间复杂度中运行吗？</p>\n<div><div>Related Topics</div><div><li>数组</li><li>二分查找</li></div></div>\n\n# 个人解法\n\n根据异或的规则，相同为0，不同为1，这样把所有数都异或一遍，结果就是唯一的只出现一次的数\n\n{% tabs categories%}\n<!-- tab Java -->\n```java\npublic int singleNonDuplicate(int[] nums) {\n    int result = nums[0];\n    for (int i = 1; i < nums.length; i++) {\n        result ^= nums[i];\n    }\n    return result;\n}\n```\n<!-- endtab -->\n\n<!-- tab Python3 -->\n```python\nimport operator\nfrom functools import reduce\nfrom typing import List\n\n\nclass Solution:\n    def singleNonDuplicate(self, nums: List[int]) -> int:\n        return reduce(operator.xor, nums)\n```\n<!-- endtab -->\n{% endtabs %}\n","slug":"day20220214","published":1,"updated":"2022-02-17T06:53:17.710Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl0t0rrl900114ctuhrwzdzhv","content":"<p>2022年02月14日 力扣每日一题</p>\n<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>给定一个只包含整数的有序数组，每个元素都会出现两次，唯有一个数只会出现一次，找出这个数。</p>\n\n<p> </p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre>\n<strong>输入:</strong> nums = [1,1,2,3,3,4,4,8,8]\n<strong>输出:</strong> 2\n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre>\n<strong>输入:</strong> nums =  [3,3,7,7,10,11,11]\n<strong>输出:</strong> 10\n</pre>\n\n<p> </p>\n\n<p><meta charset=\"UTF-8\" /></p>\n\n<p><strong>提示:</strong></p>\n\n<ul>\n    <li><code>1 <= nums.length <= 10<sup>5</sup></code></li>\n    <li><code>0 <= nums[i] <= 10<sup>5</sup></code></li>\n</ul>\n\n<p> </p>\n\n<p><strong>进阶:</strong> 采用的方案可以在 <code>O(log n)</code> 时间复杂度和 <code>O(1)</code> 空间复杂度中运行吗？</p>\n<div><div>Related Topics</div><div><li>数组</li><li>二分查找</li></div></div>\n\n<h1 id=\"个人解法\"><a href=\"#个人解法\" class=\"headerlink\" title=\"个人解法\"></a>个人解法</h1><p>根据异或的规则，相同为0，不同为1，这样把所有数都异或一遍，结果就是唯一的只出现一次的数</p>\n<div class=\"tabs\" id=\"categories\"><ul class=\"nav-tabs\"><li class=\"tab active\"><button type=\"button\" data-href=\"#categories-1\">Java</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#categories-2\">Python3</button></li></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"categories-1\"><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">public int singleNonDuplicate(int[] nums) &#123;\n    int result &#x3D; nums[0];\n    for (int i &#x3D; 1; i &lt; nums.length; i++) &#123;\n        result ^&#x3D; nums[i];\n    &#125;\n    return result;\n&#125;</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"categories-2\"><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">import operator\nfrom functools import reduce\nfrom typing import List\n\n\nclass Solution:\n    def singleNonDuplicate(self, nums: List[int]) -&gt; int:\n        return reduce(operator.xor, nums)</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div></div>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.gitee.io/zh-CN/","avatar":"https://element-plus.gitee.io/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"}}},"cover":"https://blog.huangge1199.cn/post/sublimeText4Purchase/bg.jpeg","excerpt":"","more":"<p>2022年02月14日 力扣每日一题</p>\n<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>给定一个只包含整数的有序数组，每个元素都会出现两次，唯有一个数只会出现一次，找出这个数。</p>\n\n<p> </p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre>\n<strong>输入:</strong> nums = [1,1,2,3,3,4,4,8,8]\n<strong>输出:</strong> 2\n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre>\n<strong>输入:</strong> nums =  [3,3,7,7,10,11,11]\n<strong>输出:</strong> 10\n</pre>\n\n<p> </p>\n\n<p><meta charset=\"UTF-8\" /></p>\n\n<p><strong>提示:</strong></p>\n\n<ul>\n    <li><code>1 <= nums.length <= 10<sup>5</sup></code></li>\n    <li><code>0 <= nums[i] <= 10<sup>5</sup></code></li>\n</ul>\n\n<p> </p>\n\n<p><strong>进阶:</strong> 采用的方案可以在 <code>O(log n)</code> 时间复杂度和 <code>O(1)</code> 空间复杂度中运行吗？</p>\n<div><div>Related Topics</div><div><li>数组</li><li>二分查找</li></div></div>\n\n<h1 id=\"个人解法\"><a href=\"#个人解法\" class=\"headerlink\" title=\"个人解法\"></a>个人解法</h1><p>根据异或的规则，相同为0，不同为1，这样把所有数都异或一遍，结果就是唯一的只出现一次的数</p>\n<div class=\"tabs\" id=\"categories\"><ul class=\"nav-tabs\"><li class=\"tab active\"><button type=\"button\" data-href=\"#categories-1\">Java</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#categories-2\">Python3</button></li></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"categories-1\"><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">public int singleNonDuplicate(int[] nums) &#123;\n    int result &#x3D; nums[0];\n    for (int i &#x3D; 1; i &lt; nums.length; i++) &#123;\n        result ^&#x3D; nums[i];\n    &#125;\n    return result;\n&#125;</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"categories-2\"><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">import operator\nfrom functools import reduce\nfrom typing import List\n\n\nclass Solution:\n    def singleNonDuplicate(self, nums: List[int]) -&gt; int:\n        return reduce(operator.xor, nums)</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div></div>\n"},{"title":"力扣504:七进制数","date":"2022-03-07T06:15:07.000Z","_content":"2022年02月14日 力扣每日一题\n\n# 题目\n\n<p>给定一个整数 <code>num</code>，将其转化为 <strong>7 进制</strong>，并以字符串形式输出。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre>\n<strong>输入:</strong> num = 100\n<strong>输出:</strong> \"202\"\n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre>\n<strong>输入:</strong> num = -7\n<strong>输出:</strong> \"-10\"\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>-10<sup>7</sup>&nbsp;&lt;= num &lt;= 10<sup>7</sup></code></li>\n</ul>\n<div><div>Related Topics</div><div><li>数学</li></div></div>\n\n# 个人解法\n\n{% tabs categories%}\n<!-- tab Java -->\n```java\nclass Solution {\n    public String convertToBase7(int num) {\n        boolean bl = num < 0;\n        num = Math.abs(num);\n        StringBuilder str = new StringBuilder();\n        while (num >= 7) {\n            str.insert(0, num % 7);\n            num /= 7;\n        }\n        str.insert(0, num);\n        if (bl) {\n            str.insert(0, '-');\n        }\n        return str.toString();\n    }\n}\n```\n<!-- endtab -->\n\n<!-- tab Python3 -->\n```python\nclass Solution:\n    def convertToBase7(self, num: int) -> str:\n        bl = num < 0\n        s = ''\n        num = abs(num)\n        while num >= 7:\n            s = str(num % 7) + s\n            num //= 7\n        s = str(num) + s\n        if bl:\n            s = '-' + s\n        return s\n```\n<!-- endtab -->\n{% endtabs %}\n","source":"_posts/day20220307.md","raw":"---\ntitle: 力扣504:七进制数\ndate: 2022-03-07 14:15:07\ntags: [力扣]\ncategories: [算法,力扣,每日一题]\n---\n2022年02月14日 力扣每日一题\n\n# 题目\n\n<p>给定一个整数 <code>num</code>，将其转化为 <strong>7 进制</strong>，并以字符串形式输出。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre>\n<strong>输入:</strong> num = 100\n<strong>输出:</strong> \"202\"\n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre>\n<strong>输入:</strong> num = -7\n<strong>输出:</strong> \"-10\"\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>-10<sup>7</sup>&nbsp;&lt;= num &lt;= 10<sup>7</sup></code></li>\n</ul>\n<div><div>Related Topics</div><div><li>数学</li></div></div>\n\n# 个人解法\n\n{% tabs categories%}\n<!-- tab Java -->\n```java\nclass Solution {\n    public String convertToBase7(int num) {\n        boolean bl = num < 0;\n        num = Math.abs(num);\n        StringBuilder str = new StringBuilder();\n        while (num >= 7) {\n            str.insert(0, num % 7);\n            num /= 7;\n        }\n        str.insert(0, num);\n        if (bl) {\n            str.insert(0, '-');\n        }\n        return str.toString();\n    }\n}\n```\n<!-- endtab -->\n\n<!-- tab Python3 -->\n```python\nclass Solution:\n    def convertToBase7(self, num: int) -> str:\n        bl = num < 0\n        s = ''\n        num = abs(num)\n        while num >= 7:\n            s = str(num % 7) + s\n            num //= 7\n        s = str(num) + s\n        if bl:\n            s = '-' + s\n        return s\n```\n<!-- endtab -->\n{% endtabs %}\n","slug":"day20220307","published":1,"updated":"2022-03-07T06:20:20.700Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl0t0rrla00134ctu74x38ajy","content":"<p>2022年02月14日 力扣每日一题</p>\n<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>给定一个整数 <code>num</code>，将其转化为 <strong>7 进制</strong>，并以字符串形式输出。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre>\n<strong>输入:</strong> num = 100\n<strong>输出:</strong> \"202\"\n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre>\n<strong>输入:</strong> num = -7\n<strong>输出:</strong> \"-10\"\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n    <li><code>-10<sup>7</sup>&nbsp;&lt;= num &lt;= 10<sup>7</sup></code></li>\n</ul>\n<div><div>Related Topics</div><div><li>数学</li></div></div>\n\n<h1 id=\"个人解法\"><a href=\"#个人解法\" class=\"headerlink\" title=\"个人解法\"></a>个人解法</h1><div class=\"tabs\" id=\"categories\"><ul class=\"nav-tabs\"><li class=\"tab active\"><button type=\"button\" data-href=\"#categories-1\">Java</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#categories-2\">Python3</button></li></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"categories-1\"><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">class Solution &#123;\n    public String convertToBase7(int num) &#123;\n        boolean bl &#x3D; num &lt; 0;\n        num &#x3D; Math.abs(num);\n        StringBuilder str &#x3D; new StringBuilder();\n        while (num &gt;&#x3D; 7) &#123;\n            str.insert(0, num % 7);\n            num &#x2F;&#x3D; 7;\n        &#125;\n        str.insert(0, num);\n        if (bl) &#123;\n            str.insert(0, &#39;-&#39;);\n        &#125;\n        return str.toString();\n    &#125;\n&#125;</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"categories-2\"><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">class Solution:\n    def convertToBase7(self, num: int) -&gt; str:\n        bl &#x3D; num &lt; 0\n        s &#x3D; &#39;&#39;\n        num &#x3D; abs(num)\n        while num &gt;&#x3D; 7:\n            s &#x3D; str(num % 7) + s\n            num &#x2F;&#x2F;&#x3D; 7\n        s &#x3D; str(num) + s\n        if bl:\n            s &#x3D; &#39;-&#39; + s\n        return s</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div></div>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.gitee.io/zh-CN/","avatar":"https://element-plus.gitee.io/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"}}},"cover":"https://blog.huangge1199.cn/post/pyListSort/bg.jpeg","excerpt":"","more":"<p>2022年02月14日 力扣每日一题</p>\n<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>给定一个整数 <code>num</code>，将其转化为 <strong>7 进制</strong>，并以字符串形式输出。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre>\n<strong>输入:</strong> num = 100\n<strong>输出:</strong> \"202\"\n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre>\n<strong>输入:</strong> num = -7\n<strong>输出:</strong> \"-10\"\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n    <li><code>-10<sup>7</sup>&nbsp;&lt;= num &lt;= 10<sup>7</sup></code></li>\n</ul>\n<div><div>Related Topics</div><div><li>数学</li></div></div>\n\n<h1 id=\"个人解法\"><a href=\"#个人解法\" class=\"headerlink\" title=\"个人解法\"></a>个人解法</h1><div class=\"tabs\" id=\"categories\"><ul class=\"nav-tabs\"><li class=\"tab active\"><button type=\"button\" data-href=\"#categories-1\">Java</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#categories-2\">Python3</button></li></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"categories-1\"><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">class Solution &#123;\n    public String convertToBase7(int num) &#123;\n        boolean bl &#x3D; num &lt; 0;\n        num &#x3D; Math.abs(num);\n        StringBuilder str &#x3D; new StringBuilder();\n        while (num &gt;&#x3D; 7) &#123;\n            str.insert(0, num % 7);\n            num &#x2F;&#x3D; 7;\n        &#125;\n        str.insert(0, num);\n        if (bl) &#123;\n            str.insert(0, &#39;-&#39;);\n        &#125;\n        return str.toString();\n    &#125;\n&#125;</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"categories-2\"><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">class Solution:\n    def convertToBase7(self, num: int) -&gt; str:\n        bl &#x3D; num &lt; 0\n        s &#x3D; &#39;&#39;\n        num &#x3D; abs(num)\n        while num &gt;&#x3D; 7:\n            s &#x3D; str(num % 7) + s\n            num &#x2F;&#x2F;&#x3D; 7\n        s &#x3D; str(num) + s\n        if bl:\n            s &#x3D; &#39;-&#39; + s\n        return s</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div></div>\n"},{"title":"力扣798:得分最高的最小轮调","date":"2022-03-09T08:42:38.000Z","_content":"\n2022年03月09日 力扣每日一题\n\n# 题目\n\n<p>给你一个数组 <code>nums</code>，我们可以将它按一个非负整数 <code>k</code> 进行轮调，这样可以使数组变为 <code>[nums[k], nums[k + 1], ... nums[nums.length - 1], nums[0], nums[1], ..., nums[k-1]]</code> 的形式。此后，任何值小于或等于其索引的项都可以记作一分。</p>\n\n<ul>\n    <li>例如，数组为 <code>nums = [2,4,1,3,0]</code>，我们按 <code>k = 2</code> 进行轮调后，它将变成 <code>[1,3,0,2,4]</code>。这将记为 <code>3</code> 分，因为 <code>1 > 0</code> [不计分]、<code>3 > 1</code> [不计分]、<code>0 <= 2</code> [计 1 分]、<code>2 <= 3</code> [计 1 分]，<code>4 <= 4</code> [计 1 分]。</li>\n</ul>\n\n<p>在所有可能的轮调中，返回我们所能得到的最高分数对应的轮调下标 <code>k</code> 。如果有多个答案，返回满足条件的最小的下标 <code>k</code> 。</p>\n\n<p> </p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入：</strong>nums = [2,3,1,4,0]\n<strong>输出：</strong>3\n<strong>解释：</strong>\n下面列出了每个 k 的得分：\nk = 0,  nums = [2,3,1,4,0],    score 2\nk = 1,  nums = [3,1,4,0,2],    score 3\nk = 2,  nums = [1,4,0,2,3],    score 3\nk = 3,  nums = [4,0,2,3,1],    score 4\nk = 4,  nums = [0,2,3,1,4],    score 3\n所以我们应当选择 k = 3，得分最高。</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>\n<strong>输入：</strong>nums = [1,3,0,2,4]\n<strong>输出：</strong>0\n<strong>解释：</strong>\nnums 无论怎么变化总是有 3 分。\n所以我们将选择最小的 k，即 0。\n</pre>\n\n<p> </p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n    <li><code>1 <= nums.length <= 10<sup>5</sup></code></li>\n    <li><code>0 <= nums[i] < nums.length</code></li>\n</ul>\n<div><div>Related Topics</div><div><li>数组</li><li>前缀和</li></div></div>\n\n# 个人解法\n\n思路：\n\n`arrs[k]`代表轮调k次的分数，然后`[left,right]`区间内的值代表能得分的k值，那么，\n\n```java\nleft = i + 1\nright = i - nums[i]\n```\n\n考虑到超出数组范围的问题，因此，修改为\n\n```java\n// size为数组长度\nleft = (i + 1) % size;\nright = (i - nums[i] + size) % size;\n```\n\n接下来，我们要考虑`[left,right]`是否是有效区间\n\n- 如果是在这个区间内得分+1\n\n- 如果不是有效区间，那么区间将拆分成`[0,right]`和`[left,size-1]`两部分，这两部分区间内得分+1\n\n最后我们对数组进行设置，这部分可以使用差分实现\n\n{% tabs categories%}\n\n<!-- tab Java -->\n\n```java\nclass Solution {\n    public int bestRotation(int[] nums) {\n        int size = nums.length;\n        int[] arrs = new int[size + 1];\n        for (int i = 0; i < size; i++) {\n            int left = (i + 1) % size;\n            int right = (i - nums[i] + size) % size;\n            if (left > right) {\n                arrs[0]++;\n                arrs[size]--;\n            }\n            arrs[left]++;\n            arrs[right + 1]--;\n        }\n        for (int i = 1; i < size + 1; i++) {\n            arrs[i] += arrs[i - 1];\n        }\n        int result = 0;\n        for (int i = 1; i < size + 1; i++) {\n            if (arrs[i] > arrs[result]) {\n                result = i;\n            }\n        }\n        return result;\n    }\n}\n```\n\n<!-- endtab -->\n\n<!-- tab Python3 -->\n\n```python\nfrom typing import List\n\n\nclass Solution:\n    def bestRotation(self, nums: List[int]) -> int:\n        size = len(nums)\n        arrs = [0] * (size + 1)\n        for i in range(size):\n            left = (i + 1) % size\n            right = (i - nums[i] + size) % size\n            if left > right:\n                arrs[0] += 1\n                arrs[size] -= 1\n            arrs[left] += 1\n            arrs[right + 1] -= 1\n        for i in range(1, size + 1):\n            arrs[i] += arrs[i - 1]\n        result = 0\n        for i in range(1, size + 1):\n            if arrs[i] > arrs[result]:\n                result = i\n        return result\n```\n\n<!-- endtab -->\n\n{% endtabs %}\n","source":"_posts/day20220309.md","raw":"---\ntitle: 力扣798:得分最高的最小轮调\ndate: 2022-03-09 16:42:38\ntags: [力扣]\ncategories: [算法,力扣,每日一题]\n---\n\n2022年03月09日 力扣每日一题\n\n# 题目\n\n<p>给你一个数组 <code>nums</code>，我们可以将它按一个非负整数 <code>k</code> 进行轮调，这样可以使数组变为 <code>[nums[k], nums[k + 1], ... nums[nums.length - 1], nums[0], nums[1], ..., nums[k-1]]</code> 的形式。此后，任何值小于或等于其索引的项都可以记作一分。</p>\n\n<ul>\n    <li>例如，数组为 <code>nums = [2,4,1,3,0]</code>，我们按 <code>k = 2</code> 进行轮调后，它将变成 <code>[1,3,0,2,4]</code>。这将记为 <code>3</code> 分，因为 <code>1 > 0</code> [不计分]、<code>3 > 1</code> [不计分]、<code>0 <= 2</code> [计 1 分]、<code>2 <= 3</code> [计 1 分]，<code>4 <= 4</code> [计 1 分]。</li>\n</ul>\n\n<p>在所有可能的轮调中，返回我们所能得到的最高分数对应的轮调下标 <code>k</code> 。如果有多个答案，返回满足条件的最小的下标 <code>k</code> 。</p>\n\n<p> </p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入：</strong>nums = [2,3,1,4,0]\n<strong>输出：</strong>3\n<strong>解释：</strong>\n下面列出了每个 k 的得分：\nk = 0,  nums = [2,3,1,4,0],    score 2\nk = 1,  nums = [3,1,4,0,2],    score 3\nk = 2,  nums = [1,4,0,2,3],    score 3\nk = 3,  nums = [4,0,2,3,1],    score 4\nk = 4,  nums = [0,2,3,1,4],    score 3\n所以我们应当选择 k = 3，得分最高。</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>\n<strong>输入：</strong>nums = [1,3,0,2,4]\n<strong>输出：</strong>0\n<strong>解释：</strong>\nnums 无论怎么变化总是有 3 分。\n所以我们将选择最小的 k，即 0。\n</pre>\n\n<p> </p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n    <li><code>1 <= nums.length <= 10<sup>5</sup></code></li>\n    <li><code>0 <= nums[i] < nums.length</code></li>\n</ul>\n<div><div>Related Topics</div><div><li>数组</li><li>前缀和</li></div></div>\n\n# 个人解法\n\n思路：\n\n`arrs[k]`代表轮调k次的分数，然后`[left,right]`区间内的值代表能得分的k值，那么，\n\n```java\nleft = i + 1\nright = i - nums[i]\n```\n\n考虑到超出数组范围的问题，因此，修改为\n\n```java\n// size为数组长度\nleft = (i + 1) % size;\nright = (i - nums[i] + size) % size;\n```\n\n接下来，我们要考虑`[left,right]`是否是有效区间\n\n- 如果是在这个区间内得分+1\n\n- 如果不是有效区间，那么区间将拆分成`[0,right]`和`[left,size-1]`两部分，这两部分区间内得分+1\n\n最后我们对数组进行设置，这部分可以使用差分实现\n\n{% tabs categories%}\n\n<!-- tab Java -->\n\n```java\nclass Solution {\n    public int bestRotation(int[] nums) {\n        int size = nums.length;\n        int[] arrs = new int[size + 1];\n        for (int i = 0; i < size; i++) {\n            int left = (i + 1) % size;\n            int right = (i - nums[i] + size) % size;\n            if (left > right) {\n                arrs[0]++;\n                arrs[size]--;\n            }\n            arrs[left]++;\n            arrs[right + 1]--;\n        }\n        for (int i = 1; i < size + 1; i++) {\n            arrs[i] += arrs[i - 1];\n        }\n        int result = 0;\n        for (int i = 1; i < size + 1; i++) {\n            if (arrs[i] > arrs[result]) {\n                result = i;\n            }\n        }\n        return result;\n    }\n}\n```\n\n<!-- endtab -->\n\n<!-- tab Python3 -->\n\n```python\nfrom typing import List\n\n\nclass Solution:\n    def bestRotation(self, nums: List[int]) -> int:\n        size = len(nums)\n        arrs = [0] * (size + 1)\n        for i in range(size):\n            left = (i + 1) % size\n            right = (i - nums[i] + size) % size\n            if left > right:\n                arrs[0] += 1\n                arrs[size] -= 1\n            arrs[left] += 1\n            arrs[right + 1] -= 1\n        for i in range(1, size + 1):\n            arrs[i] += arrs[i - 1]\n        result = 0\n        for i in range(1, size + 1):\n            if arrs[i] > arrs[result]:\n                result = i\n        return result\n```\n\n<!-- endtab -->\n\n{% endtabs %}\n","slug":"day20220309","published":1,"updated":"2022-03-09T09:31:30.408Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl0t0rrlc00164ctu1k38cmpw","content":"<p>2022年03月09日 力扣每日一题</p>\n<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>给你一个数组 <code>nums</code>，我们可以将它按一个非负整数 <code>k</code> 进行轮调，这样可以使数组变为 <code>[nums[k], nums[k + 1], ... nums[nums.length - 1], nums[0], nums[1], ..., nums[k-1]]</code> 的形式。此后，任何值小于或等于其索引的项都可以记作一分。</p>\n\n<ul>\n    <li>例如，数组为 <code>nums = [2,4,1,3,0]</code>，我们按 <code>k = 2</code> 进行轮调后，它将变成 <code>[1,3,0,2,4]</code>。这将记为 <code>3</code> 分，因为 <code>1 > 0</code> [不计分]、<code>3 > 1</code> [不计分]、<code>0 <= 2</code> [计 1 分]、<code>2 <= 3</code> [计 1 分]，<code>4 <= 4</code> [计 1 分]。</li>\n</ul>\n\n<p>在所有可能的轮调中，返回我们所能得到的最高分数对应的轮调下标 <code>k</code> 。如果有多个答案，返回满足条件的最小的下标 <code>k</code> 。</p>\n\n<p> </p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入：</strong>nums = [2,3,1,4,0]\n<strong>输出：</strong>3\n<strong>解释：</strong>\n下面列出了每个 k 的得分：\nk = 0,  nums = [2,3,1,4,0],    score 2\nk = 1,  nums = [3,1,4,0,2],    score 3\nk = 2,  nums = [1,4,0,2,3],    score 3\nk = 3,  nums = [4,0,2,3,1],    score 4\nk = 4,  nums = [0,2,3,1,4],    score 3\n所以我们应当选择 k = 3，得分最高。</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>\n<strong>输入：</strong>nums = [1,3,0,2,4]\n<strong>输出：</strong>0\n<strong>解释：</strong>\nnums 无论怎么变化总是有 3 分。\n所以我们将选择最小的 k，即 0。\n</pre>\n\n<p> </p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n    <li><code>1 <= nums.length <= 10<sup>5</sup></code></li>\n    <li><code>0 <= nums[i] < nums.length</code></li>\n</ul>\n<div><div>Related Topics</div><div><li>数组</li><li>前缀和</li></div></div>\n\n<h1 id=\"个人解法\"><a href=\"#个人解法\" class=\"headerlink\" title=\"个人解法\"></a>个人解法</h1><p>思路：</p>\n<p><code>arrs[k]</code>代表轮调k次的分数，然后<code>[left,right]</code>区间内的值代表能得分的k值，那么，</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">left &#x3D; i + 1\nright &#x3D; i - nums[i]</code></pre>\n\n<p>考虑到超出数组范围的问题，因此，修改为</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">&#x2F;&#x2F; size为数组长度\nleft &#x3D; (i + 1) % size;\nright &#x3D; (i - nums[i] + size) % size;</code></pre>\n\n<p>接下来，我们要考虑<code>[left,right]</code>是否是有效区间</p>\n<ul>\n<li><p>如果是在这个区间内得分+1</p>\n</li>\n<li><p>如果不是有效区间，那么区间将拆分成<code>[0,right]</code>和<code>[left,size-1]</code>两部分，这两部分区间内得分+1</p>\n</li>\n</ul>\n<p>最后我们对数组进行设置，这部分可以使用差分实现</p>\n<div class=\"tabs\" id=\"categories\"><ul class=\"nav-tabs\"><li class=\"tab active\"><button type=\"button\" data-href=\"#categories-1\">Java</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#categories-2\">Python3</button></li></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"categories-1\"><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">class Solution &#123;\n    public int bestRotation(int[] nums) &#123;\n        int size &#x3D; nums.length;\n        int[] arrs &#x3D; new int[size + 1];\n        for (int i &#x3D; 0; i &lt; size; i++) &#123;\n            int left &#x3D; (i + 1) % size;\n            int right &#x3D; (i - nums[i] + size) % size;\n            if (left &gt; right) &#123;\n                arrs[0]++;\n                arrs[size]--;\n            &#125;\n            arrs[left]++;\n            arrs[right + 1]--;\n        &#125;\n        for (int i &#x3D; 1; i &lt; size + 1; i++) &#123;\n            arrs[i] +&#x3D; arrs[i - 1];\n        &#125;\n        int result &#x3D; 0;\n        for (int i &#x3D; 1; i &lt; size + 1; i++) &#123;\n            if (arrs[i] &gt; arrs[result]) &#123;\n                result &#x3D; i;\n            &#125;\n        &#125;\n        return result;\n    &#125;\n&#125;</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"categories-2\"><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">from typing import List\n\n\nclass Solution:\n    def bestRotation(self, nums: List[int]) -&gt; int:\n        size &#x3D; len(nums)\n        arrs &#x3D; [0] * (size + 1)\n        for i in range(size):\n            left &#x3D; (i + 1) % size\n            right &#x3D; (i - nums[i] + size) % size\n            if left &gt; right:\n                arrs[0] +&#x3D; 1\n                arrs[size] -&#x3D; 1\n            arrs[left] +&#x3D; 1\n            arrs[right + 1] -&#x3D; 1\n        for i in range(1, size + 1):\n            arrs[i] +&#x3D; arrs[i - 1]\n        result &#x3D; 0\n        for i in range(1, size + 1):\n            if arrs[i] &gt; arrs[result]:\n                result &#x3D; i\n        return result</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div></div>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.gitee.io/zh-CN/","avatar":"https://element-plus.gitee.io/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"}}},"cover":"https://blog.huangge1199.cn/post/nexusCreate/bg.jpeg","excerpt":"","more":"<p>2022年03月09日 力扣每日一题</p>\n<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>给你一个数组 <code>nums</code>，我们可以将它按一个非负整数 <code>k</code> 进行轮调，这样可以使数组变为 <code>[nums[k], nums[k + 1], ... nums[nums.length - 1], nums[0], nums[1], ..., nums[k-1]]</code> 的形式。此后，任何值小于或等于其索引的项都可以记作一分。</p>\n\n<ul>\n    <li>例如，数组为 <code>nums = [2,4,1,3,0]</code>，我们按 <code>k = 2</code> 进行轮调后，它将变成 <code>[1,3,0,2,4]</code>。这将记为 <code>3</code> 分，因为 <code>1 > 0</code> [不计分]、<code>3 > 1</code> [不计分]、<code>0 <= 2</code> [计 1 分]、<code>2 <= 3</code> [计 1 分]，<code>4 <= 4</code> [计 1 分]。</li>\n</ul>\n\n<p>在所有可能的轮调中，返回我们所能得到的最高分数对应的轮调下标 <code>k</code> 。如果有多个答案，返回满足条件的最小的下标 <code>k</code> 。</p>\n\n<p> </p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入：</strong>nums = [2,3,1,4,0]\n<strong>输出：</strong>3\n<strong>解释：</strong>\n下面列出了每个 k 的得分：\nk = 0,  nums = [2,3,1,4,0],    score 2\nk = 1,  nums = [3,1,4,0,2],    score 3\nk = 2,  nums = [1,4,0,2,3],    score 3\nk = 3,  nums = [4,0,2,3,1],    score 4\nk = 4,  nums = [0,2,3,1,4],    score 3\n所以我们应当选择 k = 3，得分最高。</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>\n<strong>输入：</strong>nums = [1,3,0,2,4]\n<strong>输出：</strong>0\n<strong>解释：</strong>\nnums 无论怎么变化总是有 3 分。\n所以我们将选择最小的 k，即 0。\n</pre>\n\n<p> </p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n    <li><code>1 <= nums.length <= 10<sup>5</sup></code></li>\n    <li><code>0 <= nums[i] < nums.length</code></li>\n</ul>\n<div><div>Related Topics</div><div><li>数组</li><li>前缀和</li></div></div>\n\n<h1 id=\"个人解法\"><a href=\"#个人解法\" class=\"headerlink\" title=\"个人解法\"></a>个人解法</h1><p>思路：</p>\n<p><code>arrs[k]</code>代表轮调k次的分数，然后<code>[left,right]</code>区间内的值代表能得分的k值，那么，</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">left &#x3D; i + 1\nright &#x3D; i - nums[i]</code></pre>\n\n<p>考虑到超出数组范围的问题，因此，修改为</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">&#x2F;&#x2F; size为数组长度\nleft &#x3D; (i + 1) % size;\nright &#x3D; (i - nums[i] + size) % size;</code></pre>\n\n<p>接下来，我们要考虑<code>[left,right]</code>是否是有效区间</p>\n<ul>\n<li><p>如果是在这个区间内得分+1</p>\n</li>\n<li><p>如果不是有效区间，那么区间将拆分成<code>[0,right]</code>和<code>[left,size-1]</code>两部分，这两部分区间内得分+1</p>\n</li>\n</ul>\n<p>最后我们对数组进行设置，这部分可以使用差分实现</p>\n<div class=\"tabs\" id=\"categories\"><ul class=\"nav-tabs\"><li class=\"tab active\"><button type=\"button\" data-href=\"#categories-1\">Java</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#categories-2\">Python3</button></li></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"categories-1\"><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">class Solution &#123;\n    public int bestRotation(int[] nums) &#123;\n        int size &#x3D; nums.length;\n        int[] arrs &#x3D; new int[size + 1];\n        for (int i &#x3D; 0; i &lt; size; i++) &#123;\n            int left &#x3D; (i + 1) % size;\n            int right &#x3D; (i - nums[i] + size) % size;\n            if (left &gt; right) &#123;\n                arrs[0]++;\n                arrs[size]--;\n            &#125;\n            arrs[left]++;\n            arrs[right + 1]--;\n        &#125;\n        for (int i &#x3D; 1; i &lt; size + 1; i++) &#123;\n            arrs[i] +&#x3D; arrs[i - 1];\n        &#125;\n        int result &#x3D; 0;\n        for (int i &#x3D; 1; i &lt; size + 1; i++) &#123;\n            if (arrs[i] &gt; arrs[result]) &#123;\n                result &#x3D; i;\n            &#125;\n        &#125;\n        return result;\n    &#125;\n&#125;</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"categories-2\"><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">from typing import List\n\n\nclass Solution:\n    def bestRotation(self, nums: List[int]) -&gt; int:\n        size &#x3D; len(nums)\n        arrs &#x3D; [0] * (size + 1)\n        for i in range(size):\n            left &#x3D; (i + 1) % size\n            right &#x3D; (i - nums[i] + size) % size\n            if left &gt; right:\n                arrs[0] +&#x3D; 1\n                arrs[size] -&#x3D; 1\n            arrs[left] +&#x3D; 1\n            arrs[right + 1] -&#x3D; 1\n        for i in range(1, size + 1):\n            arrs[i] +&#x3D; arrs[i - 1]\n        result &#x3D; 0\n        for i in range(1, size + 1):\n            if arrs[i] &gt; arrs[result]:\n                result &#x3D; i\n        return result</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div></div>\n"},{"title":"力扣589:N 叉树的前序遍历","date":"2022-03-10T01:51:36.000Z","cover":"https://blog.huangge1199.cn/post/day20220310/bg.jpeg","_content":"\n2022年03月10日 力扣每日一题\n\n# 题目\n<p>给定一个 n&nbsp;叉树的根节点 <meta charset=\"UTF-8\" />&nbsp;<code>root</code>&nbsp;，返回 <em>其节点值的<strong> 前序遍历</strong></em> 。</p>\n\n<p>n 叉树 在输入中按层序遍历进行序列化表示，每组子节点由空值 <code>null</code> 分隔（请参见示例）。</p>\n\n<p><br />\n<strong>示例 1：</strong></p>\n\n<p><img src=\"https://assets.leetcode.com/uploads/2018/10/12/narytreeexample.png\" style=\"height: 193px; width: 300px;\" /></p>\n\n<pre>\n<strong>输入：</strong>root = [1,null,3,2,4,null,5,6]\n<strong>输出：</strong>[1,3,5,6,2,4]\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/11/08/sample_4_964.png\" style=\"height: 272px; width: 300px;\" /></p>\n\n<pre>\n<strong>输入：</strong>root = [1,null,2,3,4,5,null,null,6,7,null,8,null,9,10,null,null,11,null,12,null,13,null,null,14]\n<strong>输出：</strong>[1,2,3,6,7,11,14,4,8,12,5,9,13,10]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li>节点总数在范围<meta charset=\"UTF-8\" />&nbsp;<code>[0, 10<sup>4</sup>]</code>内</li>\n\t<li><code>0 &lt;= Node.val &lt;= 10<sup>4</sup></code></li>\n\t<li>n 叉树的高度小于或等于 <code>1000</code></li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><strong>进阶：</strong>递归法很简单，你可以使用迭代法完成此题吗?</p>\n<div><div>Related Topics</div><div><li>栈</li><li>树</li><li>深度优先搜索</li></div></div>\n\n# 个人解法\n\n{% tabs categories%}\n\n<!-- tab Java -->\n\n```java\nclass Solution {\n    List<Integer> list = new ArrayList<>();\n    public List<Integer> preorder(Node root) {\n        dfs(root);\n        return list;\n    }\n    void dfs(Node root) {\n        if (root == null) {\n            return;\n        }\n        list.add(root.val);\n        for (Node node : root.children) {\n            dfs(node);\n        }\n    }\n}\n```\n\n<!-- endtab -->\n\n<!-- tab Python3 -->\n\n```python\n\"\"\"\n# Definition for a Node.\nclass Node:\n    def __init__(self, val=None, children=None):\n        self.val = val\n        self.children = children\n\"\"\"\nfrom typing import List\n\n\nclass Solution:\n    def preorder(self, root: 'Node') -> List[int]:\n        result = []\n\n        def dfs(node):\n            if node:\n                result.append(node.val)\n                for child in node.children:\n                    dfs(child)\n\n        dfs(root)\n        return result\n```\n\n<!-- endtab -->\n\n{% endtabs %}\n","source":"_posts/day20220310.md","raw":"---\ntitle: 力扣589:N 叉树的前序遍历\ndate: 2022-03-10 09:51:36\ntags: [力扣]\ncategories: [算法,力扣,每日一题]\ncover: https://blog.huangge1199.cn/post/day20220310/bg.jpeg\n---\n\n2022年03月10日 力扣每日一题\n\n# 题目\n<p>给定一个 n&nbsp;叉树的根节点 <meta charset=\"UTF-8\" />&nbsp;<code>root</code>&nbsp;，返回 <em>其节点值的<strong> 前序遍历</strong></em> 。</p>\n\n<p>n 叉树 在输入中按层序遍历进行序列化表示，每组子节点由空值 <code>null</code> 分隔（请参见示例）。</p>\n\n<p><br />\n<strong>示例 1：</strong></p>\n\n<p><img src=\"https://assets.leetcode.com/uploads/2018/10/12/narytreeexample.png\" style=\"height: 193px; width: 300px;\" /></p>\n\n<pre>\n<strong>输入：</strong>root = [1,null,3,2,4,null,5,6]\n<strong>输出：</strong>[1,3,5,6,2,4]\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/11/08/sample_4_964.png\" style=\"height: 272px; width: 300px;\" /></p>\n\n<pre>\n<strong>输入：</strong>root = [1,null,2,3,4,5,null,null,6,7,null,8,null,9,10,null,null,11,null,12,null,13,null,null,14]\n<strong>输出：</strong>[1,2,3,6,7,11,14,4,8,12,5,9,13,10]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li>节点总数在范围<meta charset=\"UTF-8\" />&nbsp;<code>[0, 10<sup>4</sup>]</code>内</li>\n\t<li><code>0 &lt;= Node.val &lt;= 10<sup>4</sup></code></li>\n\t<li>n 叉树的高度小于或等于 <code>1000</code></li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><strong>进阶：</strong>递归法很简单，你可以使用迭代法完成此题吗?</p>\n<div><div>Related Topics</div><div><li>栈</li><li>树</li><li>深度优先搜索</li></div></div>\n\n# 个人解法\n\n{% tabs categories%}\n\n<!-- tab Java -->\n\n```java\nclass Solution {\n    List<Integer> list = new ArrayList<>();\n    public List<Integer> preorder(Node root) {\n        dfs(root);\n        return list;\n    }\n    void dfs(Node root) {\n        if (root == null) {\n            return;\n        }\n        list.add(root.val);\n        for (Node node : root.children) {\n            dfs(node);\n        }\n    }\n}\n```\n\n<!-- endtab -->\n\n<!-- tab Python3 -->\n\n```python\n\"\"\"\n# Definition for a Node.\nclass Node:\n    def __init__(self, val=None, children=None):\n        self.val = val\n        self.children = children\n\"\"\"\nfrom typing import List\n\n\nclass Solution:\n    def preorder(self, root: 'Node') -> List[int]:\n        result = []\n\n        def dfs(node):\n            if node:\n                result.append(node.val)\n                for child in node.children:\n                    dfs(child)\n\n        dfs(root)\n        return result\n```\n\n<!-- endtab -->\n\n{% endtabs %}\n","slug":"day20220310","published":1,"updated":"2022-03-10T02:25:20.321Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl0t0rrlc00184ctu4if94o8p","content":"<p>2022年03月10日 力扣每日一题</p>\n<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>给定一个 n&nbsp;叉树的根节点 <meta charset=\"UTF-8\" />&nbsp;<code>root</code>&nbsp;，返回 <em>其节点值的<strong> 前序遍历</strong></em> 。</p>\n\n<p>n 叉树 在输入中按层序遍历进行序列化表示，每组子节点由空值 <code>null</code> 分隔（请参见示例）。</p>\n\n<p><br />\n<strong>示例 1：</strong></p>\n\n<p><img src=\"https://assets.leetcode.com/uploads/2018/10/12/narytreeexample.png\" style=\"height: 193px; width: 300px;\" /></p>\n\n<pre>\n<strong>输入：</strong>root = [1,null,3,2,4,null,5,6]\n<strong>输出：</strong>[1,3,5,6,2,4]\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/11/08/sample_4_964.png\" style=\"height: 272px; width: 300px;\" /></p>\n\n<pre>\n<strong>输入：</strong>root = [1,null,2,3,4,5,null,null,6,7,null,8,null,9,10,null,null,11,null,12,null,13,null,null,14]\n<strong>输出：</strong>[1,2,3,6,7,11,14,4,8,12,5,9,13,10]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n    <li>节点总数在范围<meta charset=\"UTF-8\" />&nbsp;<code>[0, 10<sup>4</sup>]</code>内</li>\n    <li><code>0 &lt;= Node.val &lt;= 10<sup>4</sup></code></li>\n    <li>n 叉树的高度小于或等于 <code>1000</code></li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><strong>进阶：</strong>递归法很简单，你可以使用迭代法完成此题吗?</p>\n<div><div>Related Topics</div><div><li>栈</li><li>树</li><li>深度优先搜索</li></div></div>\n\n<h1 id=\"个人解法\"><a href=\"#个人解法\" class=\"headerlink\" title=\"个人解法\"></a>个人解法</h1><div class=\"tabs\" id=\"categories\"><ul class=\"nav-tabs\"><li class=\"tab active\"><button type=\"button\" data-href=\"#categories-1\">Java</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#categories-2\">Python3</button></li></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"categories-1\"><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">class Solution &#123;\n    List&lt;Integer&gt; list &#x3D; new ArrayList&lt;&gt;();\n    public List&lt;Integer&gt; preorder(Node root) &#123;\n        dfs(root);\n        return list;\n    &#125;\n    void dfs(Node root) &#123;\n        if (root &#x3D;&#x3D; null) &#123;\n            return;\n        &#125;\n        list.add(root.val);\n        for (Node node : root.children) &#123;\n            dfs(node);\n        &#125;\n    &#125;\n&#125;</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"categories-2\"><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">&quot;&quot;&quot;\n# Definition for a Node.\nclass Node:\n    def __init__(self, val&#x3D;None, children&#x3D;None):\n        self.val &#x3D; val\n        self.children &#x3D; children\n&quot;&quot;&quot;\nfrom typing import List\n\n\nclass Solution:\n    def preorder(self, root: &#39;Node&#39;) -&gt; List[int]:\n        result &#x3D; []\n\n        def dfs(node):\n            if node:\n                result.append(node.val)\n                for child in node.children:\n                    dfs(child)\n\n        dfs(root)\n        return result</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div></div>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.gitee.io/zh-CN/","avatar":"https://element-plus.gitee.io/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"}}},"excerpt":"","more":"<p>2022年03月10日 力扣每日一题</p>\n<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>给定一个 n&nbsp;叉树的根节点 <meta charset=\"UTF-8\" />&nbsp;<code>root</code>&nbsp;，返回 <em>其节点值的<strong> 前序遍历</strong></em> 。</p>\n\n<p>n 叉树 在输入中按层序遍历进行序列化表示，每组子节点由空值 <code>null</code> 分隔（请参见示例）。</p>\n\n<p><br />\n<strong>示例 1：</strong></p>\n\n<p><img src=\"https://assets.leetcode.com/uploads/2018/10/12/narytreeexample.png\" style=\"height: 193px; width: 300px;\" /></p>\n\n<pre>\n<strong>输入：</strong>root = [1,null,3,2,4,null,5,6]\n<strong>输出：</strong>[1,3,5,6,2,4]\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/11/08/sample_4_964.png\" style=\"height: 272px; width: 300px;\" /></p>\n\n<pre>\n<strong>输入：</strong>root = [1,null,2,3,4,5,null,null,6,7,null,8,null,9,10,null,null,11,null,12,null,13,null,null,14]\n<strong>输出：</strong>[1,2,3,6,7,11,14,4,8,12,5,9,13,10]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n    <li>节点总数在范围<meta charset=\"UTF-8\" />&nbsp;<code>[0, 10<sup>4</sup>]</code>内</li>\n    <li><code>0 &lt;= Node.val &lt;= 10<sup>4</sup></code></li>\n    <li>n 叉树的高度小于或等于 <code>1000</code></li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><strong>进阶：</strong>递归法很简单，你可以使用迭代法完成此题吗?</p>\n<div><div>Related Topics</div><div><li>栈</li><li>树</li><li>深度优先搜索</li></div></div>\n\n<h1 id=\"个人解法\"><a href=\"#个人解法\" class=\"headerlink\" title=\"个人解法\"></a>个人解法</h1><div class=\"tabs\" id=\"categories\"><ul class=\"nav-tabs\"><li class=\"tab active\"><button type=\"button\" data-href=\"#categories-1\">Java</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#categories-2\">Python3</button></li></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"categories-1\"><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">class Solution &#123;\n    List&lt;Integer&gt; list &#x3D; new ArrayList&lt;&gt;();\n    public List&lt;Integer&gt; preorder(Node root) &#123;\n        dfs(root);\n        return list;\n    &#125;\n    void dfs(Node root) &#123;\n        if (root &#x3D;&#x3D; null) &#123;\n            return;\n        &#125;\n        list.add(root.val);\n        for (Node node : root.children) &#123;\n            dfs(node);\n        &#125;\n    &#125;\n&#125;</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"categories-2\"><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">&quot;&quot;&quot;\n# Definition for a Node.\nclass Node:\n    def __init__(self, val&#x3D;None, children&#x3D;None):\n        self.val &#x3D; val\n        self.children &#x3D; children\n&quot;&quot;&quot;\nfrom typing import List\n\n\nclass Solution:\n    def preorder(self, root: &#39;Node&#39;) -&gt; List[int]:\n        result &#x3D; []\n\n        def dfs(node):\n            if node:\n                result.append(node.val)\n                for child in node.children:\n                    dfs(child)\n\n        dfs(root)\n        return result</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div></div>\n"},{"title":"力扣2049:统计最高分的节点数目","date":"2022-03-11T04:05:16.000Z","_content":"\n2022年03月11日 力扣每日一题\n\n# 题目\n\n<p>给你一棵根节点为 <code>0</code> 的 <strong>二叉树</strong> ，它总共有 <code>n</code> 个节点，节点编号为 <code>0</code> 到 <code>n - 1</code> 。同时给你一个下标从 <strong>0</strong> 开始的整数数组 <code>parents</code> 表示这棵树，其中 <code>parents[i]</code> 是节点 <code>i</code> 的父节点。由于节点 <code>0</code> 是根，所以 <code>parents[0] == -1</code> 。</p>\n\n<p>一个子树的 <strong>大小</strong> 为这个子树内节点的数目。每个节点都有一个与之关联的 <strong>分数</strong> 。求出某个节点分数的方法是，将这个节点和与它相连的边全部 <strong>删除</strong> ，剩余部分是若干个 <strong>非空</strong> 子树，这个节点的 <strong>分数</strong> 为所有这些子树 <strong>大小的乘积</strong> 。</p>\n\n<p>请你返回有 <strong>最高得分</strong> 节点的 <strong>数目</strong> 。</p>\n\n<p> </p>\n\n<p><strong>示例 1:</strong></p>\n\n<p><img alt=\"example-1\" src=\"https://assets.leetcode.com/uploads/2021/10/03/example-1.png\" style=\"width: 604px; height: 266px;\"></p>\n\n<pre><b>输入：</b>parents = [-1,2,0,2,0]\n<b>输出：</b>3\n<strong>解释：</strong>\n- 节点 0 的分数为：3 * 1 = 3\n- 节点 1 的分数为：4 = 4\n- 节点 2 的分数为：1 * 1 * 2 = 2\n- 节点 3 的分数为：4 = 4\n- 节点 4 的分数为：4 = 4\n最高得分为 4 ，有三个节点得分为 4 （分别是节点 1，3 和 4 ）。\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<p><img alt=\"example-2\" src=\"https://assets.leetcode.com/uploads/2021/10/03/example-2.png\" style=\"width: 95px; height: 143px;\"></p>\n\n<pre><b>输入：</b>parents = [-1,2,0]\n<b>输出：</b>2\n<strong>解释：</strong>\n- 节点 0 的分数为：2 = 2\n- 节点 1 的分数为：2 = 2\n- 节点 2 的分数为：1 * 1 = 1\n最高分数为 2 ，有两个节点分数为 2 （分别为节点 0 和 1 ）。\n</pre>\n\n<p> </p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n    <li><code>n == parents.length</code></li>\n    <li><code>2 <= n <= 10<sup>5</sup></code></li>\n    <li><code>parents[0] == -1</code></li>\n    <li>对于 <code>i != 0</code> ，有 <code>0 <= parents[i] <= n - 1</code></li>\n    <li><code>parents</code> 表示一棵二叉树。</li>\n</ul>\n<div><div>Related Topics</div><div><li>树</li><li>深度优先搜索</li><li>数组</li><li>二叉树</li></div></div>\n\n# 个人解法\n\n思路：\n\n　　这题是要返回有 <strong>最高得分</strong>节点的 <strong>数目</strong>，那么就要将每一个节点的分数都算一遍，而每一个节点的分数，是由以下几个数的乘积，包括，该节点下左子树中节点的数目、该节点下右子树中节点的数目，以及总节点数-改节点为跟节点的树的节点数。\n\n　　那么，我的解题步骤如下：\n\n1. 我先根据题目给的parents数组分别统计每个节点的直连子节点，将其存放进map中。\n\n2. 根据map运用递归求出每一个节点做为根节点的子树中的节点数，将其存入counts数组中\n\n3. 接下来遍历求每一个节点的分数，并且记入最大得分及节点的数量\n\n下面是java的代码解法：\n\n```java\nclass Solution {\n    // 记录每一个节点作为根节点的子树中节点的数量\n    int[] counts;\n    public int countHighestScoreNodes(int[] parents) {\n        int size = parents.length;\n\n        // 记录每个节点的直接子节点\n        Map<Integer, List<Integer>> map = new HashMap<>();\n        for (int i = 0; i < size; i++) {\n            map.put(i, new ArrayList<>());\n        }\n        for (int i = 1; i < size; i++) {\n            map.get(parents[i]).add(i);\n        }\n\n        // 记录每个子节点为根节点的树中节点数\n        counts = new int[size];\n        for (int i = 0; i < size; i++) {\n            if (counts[i] > 0) {\n                continue;\n            }\n            counts[i] = dfs(map.get(i), map);\n        }\n\n        // 遍历计算每个节点的得分并统计结果\n        long mul = 1;\n        for (int num : map.get(0)) {\n            mul *= counts[num];\n        }\n        int count = 1;\n        for (int i = 1; i < size; i++) {\n            long temp = 1;\n            for (int num : map.get(i)) {\n                temp *= counts[num];\n            }\n            temp *= (size - counts[i]);\n            if (temp > mul) {\n                mul = temp;\n                count = 1;\n            } else if (temp == mul) {\n                count++;\n            }\n        }\n        return count;\n    }\n    /**\n     * 计算每个节点为根节点的树中节点数\n     */\n    private int dfs(List<Integer> list, Map<Integer, List<Integer>> map) {\n        if (list.size() == 0) {\n            return 1;\n        }\n        int count = 1;\n        for (int i : list) {\n            if (counts[i] > 0) {\n                count += counts[i];\n            } else {\n                count += dfs(map.get(i), map);\n            }\n        }\n        return count;\n    }\n}\n```\n","source":"_posts/day20220311.md","raw":"---\ntitle: 力扣2049:统计最高分的节点数目\ndate: 2022-03-11 12:05:16\ntags: [力扣]\ncategories: [算法,力扣,每日一题]\n---\n\n2022年03月11日 力扣每日一题\n\n# 题目\n\n<p>给你一棵根节点为 <code>0</code> 的 <strong>二叉树</strong> ，它总共有 <code>n</code> 个节点，节点编号为 <code>0</code> 到 <code>n - 1</code> 。同时给你一个下标从 <strong>0</strong> 开始的整数数组 <code>parents</code> 表示这棵树，其中 <code>parents[i]</code> 是节点 <code>i</code> 的父节点。由于节点 <code>0</code> 是根，所以 <code>parents[0] == -1</code> 。</p>\n\n<p>一个子树的 <strong>大小</strong> 为这个子树内节点的数目。每个节点都有一个与之关联的 <strong>分数</strong> 。求出某个节点分数的方法是，将这个节点和与它相连的边全部 <strong>删除</strong> ，剩余部分是若干个 <strong>非空</strong> 子树，这个节点的 <strong>分数</strong> 为所有这些子树 <strong>大小的乘积</strong> 。</p>\n\n<p>请你返回有 <strong>最高得分</strong> 节点的 <strong>数目</strong> 。</p>\n\n<p> </p>\n\n<p><strong>示例 1:</strong></p>\n\n<p><img alt=\"example-1\" src=\"https://assets.leetcode.com/uploads/2021/10/03/example-1.png\" style=\"width: 604px; height: 266px;\"></p>\n\n<pre><b>输入：</b>parents = [-1,2,0,2,0]\n<b>输出：</b>3\n<strong>解释：</strong>\n- 节点 0 的分数为：3 * 1 = 3\n- 节点 1 的分数为：4 = 4\n- 节点 2 的分数为：1 * 1 * 2 = 2\n- 节点 3 的分数为：4 = 4\n- 节点 4 的分数为：4 = 4\n最高得分为 4 ，有三个节点得分为 4 （分别是节点 1，3 和 4 ）。\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<p><img alt=\"example-2\" src=\"https://assets.leetcode.com/uploads/2021/10/03/example-2.png\" style=\"width: 95px; height: 143px;\"></p>\n\n<pre><b>输入：</b>parents = [-1,2,0]\n<b>输出：</b>2\n<strong>解释：</strong>\n- 节点 0 的分数为：2 = 2\n- 节点 1 的分数为：2 = 2\n- 节点 2 的分数为：1 * 1 = 1\n最高分数为 2 ，有两个节点分数为 2 （分别为节点 0 和 1 ）。\n</pre>\n\n<p> </p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n    <li><code>n == parents.length</code></li>\n    <li><code>2 <= n <= 10<sup>5</sup></code></li>\n    <li><code>parents[0] == -1</code></li>\n    <li>对于 <code>i != 0</code> ，有 <code>0 <= parents[i] <= n - 1</code></li>\n    <li><code>parents</code> 表示一棵二叉树。</li>\n</ul>\n<div><div>Related Topics</div><div><li>树</li><li>深度优先搜索</li><li>数组</li><li>二叉树</li></div></div>\n\n# 个人解法\n\n思路：\n\n　　这题是要返回有 <strong>最高得分</strong>节点的 <strong>数目</strong>，那么就要将每一个节点的分数都算一遍，而每一个节点的分数，是由以下几个数的乘积，包括，该节点下左子树中节点的数目、该节点下右子树中节点的数目，以及总节点数-改节点为跟节点的树的节点数。\n\n　　那么，我的解题步骤如下：\n\n1. 我先根据题目给的parents数组分别统计每个节点的直连子节点，将其存放进map中。\n\n2. 根据map运用递归求出每一个节点做为根节点的子树中的节点数，将其存入counts数组中\n\n3. 接下来遍历求每一个节点的分数，并且记入最大得分及节点的数量\n\n下面是java的代码解法：\n\n```java\nclass Solution {\n    // 记录每一个节点作为根节点的子树中节点的数量\n    int[] counts;\n    public int countHighestScoreNodes(int[] parents) {\n        int size = parents.length;\n\n        // 记录每个节点的直接子节点\n        Map<Integer, List<Integer>> map = new HashMap<>();\n        for (int i = 0; i < size; i++) {\n            map.put(i, new ArrayList<>());\n        }\n        for (int i = 1; i < size; i++) {\n            map.get(parents[i]).add(i);\n        }\n\n        // 记录每个子节点为根节点的树中节点数\n        counts = new int[size];\n        for (int i = 0; i < size; i++) {\n            if (counts[i] > 0) {\n                continue;\n            }\n            counts[i] = dfs(map.get(i), map);\n        }\n\n        // 遍历计算每个节点的得分并统计结果\n        long mul = 1;\n        for (int num : map.get(0)) {\n            mul *= counts[num];\n        }\n        int count = 1;\n        for (int i = 1; i < size; i++) {\n            long temp = 1;\n            for (int num : map.get(i)) {\n                temp *= counts[num];\n            }\n            temp *= (size - counts[i]);\n            if (temp > mul) {\n                mul = temp;\n                count = 1;\n            } else if (temp == mul) {\n                count++;\n            }\n        }\n        return count;\n    }\n    /**\n     * 计算每个节点为根节点的树中节点数\n     */\n    private int dfs(List<Integer> list, Map<Integer, List<Integer>> map) {\n        if (list.size() == 0) {\n            return 1;\n        }\n        int count = 1;\n        for (int i : list) {\n            if (counts[i] > 0) {\n                count += counts[i];\n            } else {\n                count += dfs(map.get(i), map);\n            }\n        }\n        return count;\n    }\n}\n```\n","slug":"day20220311","published":1,"updated":"2022-03-11T05:43:38.395Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl0t0rrld001b4ctu5tra3zvl","content":"<p>2022年03月11日 力扣每日一题</p>\n<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>给你一棵根节点为 <code>0</code> 的 <strong>二叉树</strong> ，它总共有 <code>n</code> 个节点，节点编号为 <code>0</code> 到 <code>n - 1</code> 。同时给你一个下标从 <strong>0</strong> 开始的整数数组 <code>parents</code> 表示这棵树，其中 <code>parents[i]</code> 是节点 <code>i</code> 的父节点。由于节点 <code>0</code> 是根，所以 <code>parents[0] == -1</code> 。</p>\n\n<p>一个子树的 <strong>大小</strong> 为这个子树内节点的数目。每个节点都有一个与之关联的 <strong>分数</strong> 。求出某个节点分数的方法是，将这个节点和与它相连的边全部 <strong>删除</strong> ，剩余部分是若干个 <strong>非空</strong> 子树，这个节点的 <strong>分数</strong> 为所有这些子树 <strong>大小的乘积</strong> 。</p>\n\n<p>请你返回有 <strong>最高得分</strong> 节点的 <strong>数目</strong> 。</p>\n\n<p> </p>\n\n<p><strong>示例 1:</strong></p>\n\n<p><img alt=\"example-1\" src=\"https://assets.leetcode.com/uploads/2021/10/03/example-1.png\" style=\"width: 604px; height: 266px;\"></p>\n\n<pre><b>输入：</b>parents = [-1,2,0,2,0]\n<b>输出：</b>3\n<strong>解释：</strong>\n- 节点 0 的分数为：3 * 1 = 3\n- 节点 1 的分数为：4 = 4\n- 节点 2 的分数为：1 * 1 * 2 = 2\n- 节点 3 的分数为：4 = 4\n- 节点 4 的分数为：4 = 4\n最高得分为 4 ，有三个节点得分为 4 （分别是节点 1，3 和 4 ）。\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<p><img alt=\"example-2\" src=\"https://assets.leetcode.com/uploads/2021/10/03/example-2.png\" style=\"width: 95px; height: 143px;\"></p>\n\n<pre><b>输入：</b>parents = [-1,2,0]\n<b>输出：</b>2\n<strong>解释：</strong>\n- 节点 0 的分数为：2 = 2\n- 节点 1 的分数为：2 = 2\n- 节点 2 的分数为：1 * 1 = 1\n最高分数为 2 ，有两个节点分数为 2 （分别为节点 0 和 1 ）。\n</pre>\n\n<p> </p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n    <li><code>n == parents.length</code></li>\n    <li><code>2 <= n <= 10<sup>5</sup></code></li>\n    <li><code>parents[0] == -1</code></li>\n    <li>对于 <code>i != 0</code> ，有 <code>0 <= parents[i] <= n - 1</code></li>\n    <li><code>parents</code> 表示一棵二叉树。</li>\n</ul>\n<div><div>Related Topics</div><div><li>树</li><li>深度优先搜索</li><li>数组</li><li>二叉树</li></div></div>\n\n<h1 id=\"个人解法\"><a href=\"#个人解法\" class=\"headerlink\" title=\"个人解法\"></a>个人解法</h1><p>思路：</p>\n<p>　　这题是要返回有 <strong>最高得分</strong>节点的 <strong>数目</strong>，那么就要将每一个节点的分数都算一遍，而每一个节点的分数，是由以下几个数的乘积，包括，该节点下左子树中节点的数目、该节点下右子树中节点的数目，以及总节点数-改节点为跟节点的树的节点数。</p>\n<p>　　那么，我的解题步骤如下：</p>\n<ol>\n<li><p>我先根据题目给的parents数组分别统计每个节点的直连子节点，将其存放进map中。</p>\n</li>\n<li><p>根据map运用递归求出每一个节点做为根节点的子树中的节点数，将其存入counts数组中</p>\n</li>\n<li><p>接下来遍历求每一个节点的分数，并且记入最大得分及节点的数量</p>\n</li>\n</ol>\n<p>下面是java的代码解法：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">class Solution &#123;\n    &#x2F;&#x2F; 记录每一个节点作为根节点的子树中节点的数量\n    int[] counts;\n    public int countHighestScoreNodes(int[] parents) &#123;\n        int size &#x3D; parents.length;\n\n        &#x2F;&#x2F; 记录每个节点的直接子节点\n        Map&lt;Integer, List&lt;Integer&gt;&gt; map &#x3D; new HashMap&lt;&gt;();\n        for (int i &#x3D; 0; i &lt; size; i++) &#123;\n            map.put(i, new ArrayList&lt;&gt;());\n        &#125;\n        for (int i &#x3D; 1; i &lt; size; i++) &#123;\n            map.get(parents[i]).add(i);\n        &#125;\n\n        &#x2F;&#x2F; 记录每个子节点为根节点的树中节点数\n        counts &#x3D; new int[size];\n        for (int i &#x3D; 0; i &lt; size; i++) &#123;\n            if (counts[i] &gt; 0) &#123;\n                continue;\n            &#125;\n            counts[i] &#x3D; dfs(map.get(i), map);\n        &#125;\n\n        &#x2F;&#x2F; 遍历计算每个节点的得分并统计结果\n        long mul &#x3D; 1;\n        for (int num : map.get(0)) &#123;\n            mul *&#x3D; counts[num];\n        &#125;\n        int count &#x3D; 1;\n        for (int i &#x3D; 1; i &lt; size; i++) &#123;\n            long temp &#x3D; 1;\n            for (int num : map.get(i)) &#123;\n                temp *&#x3D; counts[num];\n            &#125;\n            temp *&#x3D; (size - counts[i]);\n            if (temp &gt; mul) &#123;\n                mul &#x3D; temp;\n                count &#x3D; 1;\n            &#125; else if (temp &#x3D;&#x3D; mul) &#123;\n                count++;\n            &#125;\n        &#125;\n        return count;\n    &#125;\n    &#x2F;**\n     * 计算每个节点为根节点的树中节点数\n     *&#x2F;\n    private int dfs(List&lt;Integer&gt; list, Map&lt;Integer, List&lt;Integer&gt;&gt; map) &#123;\n        if (list.size() &#x3D;&#x3D; 0) &#123;\n            return 1;\n        &#125;\n        int count &#x3D; 1;\n        for (int i : list) &#123;\n            if (counts[i] &gt; 0) &#123;\n                count +&#x3D; counts[i];\n            &#125; else &#123;\n                count +&#x3D; dfs(map.get(i), map);\n            &#125;\n        &#125;\n        return count;\n    &#125;\n&#125;</code></pre>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.gitee.io/zh-CN/","avatar":"https://element-plus.gitee.io/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"}}},"cover":"https://blog.huangge1199.cn/post/day20220120/bg.jpeg","excerpt":"","more":"<p>2022年03月11日 力扣每日一题</p>\n<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>给你一棵根节点为 <code>0</code> 的 <strong>二叉树</strong> ，它总共有 <code>n</code> 个节点，节点编号为 <code>0</code> 到 <code>n - 1</code> 。同时给你一个下标从 <strong>0</strong> 开始的整数数组 <code>parents</code> 表示这棵树，其中 <code>parents[i]</code> 是节点 <code>i</code> 的父节点。由于节点 <code>0</code> 是根，所以 <code>parents[0] == -1</code> 。</p>\n\n<p>一个子树的 <strong>大小</strong> 为这个子树内节点的数目。每个节点都有一个与之关联的 <strong>分数</strong> 。求出某个节点分数的方法是，将这个节点和与它相连的边全部 <strong>删除</strong> ，剩余部分是若干个 <strong>非空</strong> 子树，这个节点的 <strong>分数</strong> 为所有这些子树 <strong>大小的乘积</strong> 。</p>\n\n<p>请你返回有 <strong>最高得分</strong> 节点的 <strong>数目</strong> 。</p>\n\n<p> </p>\n\n<p><strong>示例 1:</strong></p>\n\n<p><img alt=\"example-1\" src=\"https://assets.leetcode.com/uploads/2021/10/03/example-1.png\" style=\"width: 604px; height: 266px;\"></p>\n\n<pre><b>输入：</b>parents = [-1,2,0,2,0]\n<b>输出：</b>3\n<strong>解释：</strong>\n- 节点 0 的分数为：3 * 1 = 3\n- 节点 1 的分数为：4 = 4\n- 节点 2 的分数为：1 * 1 * 2 = 2\n- 节点 3 的分数为：4 = 4\n- 节点 4 的分数为：4 = 4\n最高得分为 4 ，有三个节点得分为 4 （分别是节点 1，3 和 4 ）。\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<p><img alt=\"example-2\" src=\"https://assets.leetcode.com/uploads/2021/10/03/example-2.png\" style=\"width: 95px; height: 143px;\"></p>\n\n<pre><b>输入：</b>parents = [-1,2,0]\n<b>输出：</b>2\n<strong>解释：</strong>\n- 节点 0 的分数为：2 = 2\n- 节点 1 的分数为：2 = 2\n- 节点 2 的分数为：1 * 1 = 1\n最高分数为 2 ，有两个节点分数为 2 （分别为节点 0 和 1 ）。\n</pre>\n\n<p> </p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n    <li><code>n == parents.length</code></li>\n    <li><code>2 <= n <= 10<sup>5</sup></code></li>\n    <li><code>parents[0] == -1</code></li>\n    <li>对于 <code>i != 0</code> ，有 <code>0 <= parents[i] <= n - 1</code></li>\n    <li><code>parents</code> 表示一棵二叉树。</li>\n</ul>\n<div><div>Related Topics</div><div><li>树</li><li>深度优先搜索</li><li>数组</li><li>二叉树</li></div></div>\n\n<h1 id=\"个人解法\"><a href=\"#个人解法\" class=\"headerlink\" title=\"个人解法\"></a>个人解法</h1><p>思路：</p>\n<p>　　这题是要返回有 <strong>最高得分</strong>节点的 <strong>数目</strong>，那么就要将每一个节点的分数都算一遍，而每一个节点的分数，是由以下几个数的乘积，包括，该节点下左子树中节点的数目、该节点下右子树中节点的数目，以及总节点数-改节点为跟节点的树的节点数。</p>\n<p>　　那么，我的解题步骤如下：</p>\n<ol>\n<li><p>我先根据题目给的parents数组分别统计每个节点的直连子节点，将其存放进map中。</p>\n</li>\n<li><p>根据map运用递归求出每一个节点做为根节点的子树中的节点数，将其存入counts数组中</p>\n</li>\n<li><p>接下来遍历求每一个节点的分数，并且记入最大得分及节点的数量</p>\n</li>\n</ol>\n<p>下面是java的代码解法：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">class Solution &#123;\n    &#x2F;&#x2F; 记录每一个节点作为根节点的子树中节点的数量\n    int[] counts;\n    public int countHighestScoreNodes(int[] parents) &#123;\n        int size &#x3D; parents.length;\n\n        &#x2F;&#x2F; 记录每个节点的直接子节点\n        Map&lt;Integer, List&lt;Integer&gt;&gt; map &#x3D; new HashMap&lt;&gt;();\n        for (int i &#x3D; 0; i &lt; size; i++) &#123;\n            map.put(i, new ArrayList&lt;&gt;());\n        &#125;\n        for (int i &#x3D; 1; i &lt; size; i++) &#123;\n            map.get(parents[i]).add(i);\n        &#125;\n\n        &#x2F;&#x2F; 记录每个子节点为根节点的树中节点数\n        counts &#x3D; new int[size];\n        for (int i &#x3D; 0; i &lt; size; i++) &#123;\n            if (counts[i] &gt; 0) &#123;\n                continue;\n            &#125;\n            counts[i] &#x3D; dfs(map.get(i), map);\n        &#125;\n\n        &#x2F;&#x2F; 遍历计算每个节点的得分并统计结果\n        long mul &#x3D; 1;\n        for (int num : map.get(0)) &#123;\n            mul *&#x3D; counts[num];\n        &#125;\n        int count &#x3D; 1;\n        for (int i &#x3D; 1; i &lt; size; i++) &#123;\n            long temp &#x3D; 1;\n            for (int num : map.get(i)) &#123;\n                temp *&#x3D; counts[num];\n            &#125;\n            temp *&#x3D; (size - counts[i]);\n            if (temp &gt; mul) &#123;\n                mul &#x3D; temp;\n                count &#x3D; 1;\n            &#125; else if (temp &#x3D;&#x3D; mul) &#123;\n                count++;\n            &#125;\n        &#125;\n        return count;\n    &#125;\n    &#x2F;**\n     * 计算每个节点为根节点的树中节点数\n     *&#x2F;\n    private int dfs(List&lt;Integer&gt; list, Map&lt;Integer, List&lt;Integer&gt;&gt; map) &#123;\n        if (list.size() &#x3D;&#x3D; 0) &#123;\n            return 1;\n        &#125;\n        int count &#x3D; 1;\n        for (int i : list) &#123;\n            if (counts[i] &gt; 0) &#123;\n                count +&#x3D; counts[i];\n            &#125; else &#123;\n                count +&#x3D; dfs(map.get(i), map);\n            &#125;\n        &#125;\n        return count;\n    &#125;\n&#125;</code></pre>\n"},{"title":"代码提交到多个git仓库","date":"2022-02-11T09:34:25.000Z","_content":"\n现在我们都习惯于把自己的代码放到远程仓库中，毫无疑问GitHub是首选，但由于国内的网络等各种原因，会导致我们连接不上，这时候我们会考虑放到自建的代码管理仓库或者是gitee上面。\n\n我们还不想放弃GitHub，那么我们就要考虑将代码提交到多个仓库中。\n\n比如，我分别在GitHub和gitee上都有格子的仓库：\n\n- https://github.com/huangge1199/my-blog.git\n- https://gitee.com/huangge1199_admin/my-blog.git\n\n那么，我可以通过以下命令来进行添加仓库：\n\n先添加第一个GitHub的仓库地址：\n```\ngit remote add origin https://github.com/huangge1199/my-blog.git\n```\n\n再添加gitee的仓库地址\n```\ngit remote set-url --add origin https://gitee.com/huangge1199_admin/my-blog.git\n```\n这样的话我们push时，就会将代码同时推送到两个仓库了。\n\n当然不想用命令的形式操作，也可以直接修改项目目录下隐藏目录.git中的config文件，在[remote \"origin\"]中添加多个仓库地址就可以了，参考如下：\n\n```\n[remote \"origin\"]\n\turl = https://gitee.com/huangge1199_admin/my-blog.git\n\tfetch = +refs/heads/*:refs/remotes/origin/*\n\turl = https://github.com/huangge1199/my-blog.git\n```\n\n\n\n","source":"_posts/gitPushMoreRepo.md","raw":"---\ntitle: 代码提交到多个git仓库\ndate: 2022-02-11 17:34:25\ntags: [git]\ncategories: [git]\n---\n\n现在我们都习惯于把自己的代码放到远程仓库中，毫无疑问GitHub是首选，但由于国内的网络等各种原因，会导致我们连接不上，这时候我们会考虑放到自建的代码管理仓库或者是gitee上面。\n\n我们还不想放弃GitHub，那么我们就要考虑将代码提交到多个仓库中。\n\n比如，我分别在GitHub和gitee上都有格子的仓库：\n\n- https://github.com/huangge1199/my-blog.git\n- https://gitee.com/huangge1199_admin/my-blog.git\n\n那么，我可以通过以下命令来进行添加仓库：\n\n先添加第一个GitHub的仓库地址：\n```\ngit remote add origin https://github.com/huangge1199/my-blog.git\n```\n\n再添加gitee的仓库地址\n```\ngit remote set-url --add origin https://gitee.com/huangge1199_admin/my-blog.git\n```\n这样的话我们push时，就会将代码同时推送到两个仓库了。\n\n当然不想用命令的形式操作，也可以直接修改项目目录下隐藏目录.git中的config文件，在[remote \"origin\"]中添加多个仓库地址就可以了，参考如下：\n\n```\n[remote \"origin\"]\n\turl = https://gitee.com/huangge1199_admin/my-blog.git\n\tfetch = +refs/heads/*:refs/remotes/origin/*\n\turl = https://github.com/huangge1199/my-blog.git\n```\n\n\n\n","slug":"gitPushMoreRepo","published":1,"updated":"2022-02-11T09:48:05.636Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl0t0rrle001d4ctuhpgm9hgz","content":"<p>现在我们都习惯于把自己的代码放到远程仓库中，毫无疑问GitHub是首选，但由于国内的网络等各种原因，会导致我们连接不上，这时候我们会考虑放到自建的代码管理仓库或者是gitee上面。</p>\n<p>我们还不想放弃GitHub，那么我们就要考虑将代码提交到多个仓库中。</p>\n<p>比如，我分别在GitHub和gitee上都有格子的仓库：</p>\n<ul>\n<li><a href=\"https://github.com/huangge1199/my-blog.git\">https://github.com/huangge1199/my-blog.git</a></li>\n<li><a href=\"https://gitee.com/huangge1199_admin/my-blog.git\">https://gitee.com/huangge1199_admin/my-blog.git</a></li>\n</ul>\n<p>那么，我可以通过以下命令来进行添加仓库：</p>\n<p>先添加第一个GitHub的仓库地址：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">git remote add origin https:&#x2F;&#x2F;github.com&#x2F;huangge1199&#x2F;my-blog.git</code></pre>\n\n<p>再添加gitee的仓库地址</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">git remote set-url --add origin https:&#x2F;&#x2F;gitee.com&#x2F;huangge1199_admin&#x2F;my-blog.git</code></pre>\n<p>这样的话我们push时，就会将代码同时推送到两个仓库了。</p>\n<p>当然不想用命令的形式操作，也可以直接修改项目目录下隐藏目录.git中的config文件，在[remote “origin”]中添加多个仓库地址就可以了，参考如下：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">[remote &quot;origin&quot;]\n\turl &#x3D; https:&#x2F;&#x2F;gitee.com&#x2F;huangge1199_admin&#x2F;my-blog.git\n\tfetch &#x3D; +refs&#x2F;heads&#x2F;*:refs&#x2F;remotes&#x2F;origin&#x2F;*\n\turl &#x3D; https:&#x2F;&#x2F;github.com&#x2F;huangge1199&#x2F;my-blog.git</code></pre>\n\n\n\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.gitee.io/zh-CN/","avatar":"https://element-plus.gitee.io/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"}}},"cover":"https://blog.huangge1199.cn/post/pyControl/bg.jpeg","excerpt":"","more":"<p>现在我们都习惯于把自己的代码放到远程仓库中，毫无疑问GitHub是首选，但由于国内的网络等各种原因，会导致我们连接不上，这时候我们会考虑放到自建的代码管理仓库或者是gitee上面。</p>\n<p>我们还不想放弃GitHub，那么我们就要考虑将代码提交到多个仓库中。</p>\n<p>比如，我分别在GitHub和gitee上都有格子的仓库：</p>\n<ul>\n<li><a href=\"https://github.com/huangge1199/my-blog.git\">https://github.com/huangge1199/my-blog.git</a></li>\n<li><a href=\"https://gitee.com/huangge1199_admin/my-blog.git\">https://gitee.com/huangge1199_admin/my-blog.git</a></li>\n</ul>\n<p>那么，我可以通过以下命令来进行添加仓库：</p>\n<p>先添加第一个GitHub的仓库地址：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">git remote add origin https:&#x2F;&#x2F;github.com&#x2F;huangge1199&#x2F;my-blog.git</code></pre>\n\n<p>再添加gitee的仓库地址</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">git remote set-url --add origin https:&#x2F;&#x2F;gitee.com&#x2F;huangge1199_admin&#x2F;my-blog.git</code></pre>\n<p>这样的话我们push时，就会将代码同时推送到两个仓库了。</p>\n<p>当然不想用命令的形式操作，也可以直接修改项目目录下隐藏目录.git中的config文件，在[remote “origin”]中添加多个仓库地址就可以了，参考如下：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">[remote &quot;origin&quot;]\n\turl &#x3D; https:&#x2F;&#x2F;gitee.com&#x2F;huangge1199_admin&#x2F;my-blog.git\n\tfetch &#x3D; +refs&#x2F;heads&#x2F;*:refs&#x2F;remotes&#x2F;origin&#x2F;*\n\turl &#x3D; https:&#x2F;&#x2F;github.com&#x2F;huangge1199&#x2F;my-blog.git</code></pre>\n\n\n\n"},{"title":"Hello World","date":"2021-12-01T11:04:06.000Z","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\ndate: 2021-12-01 19:04:06\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"updated":"2021-12-29T09:01:04.298Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl0t0rrle001g4ctuh9jlfp81","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo new &quot;My New Post&quot;</code></pre>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo server</code></pre>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo generate</code></pre>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo deploy</code></pre>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.gitee.io/zh-CN/","avatar":"https://element-plus.gitee.io/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"}}},"cover":"https://blog.huangge1199.cn/post/pyListSort/bg.jpeg","excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo new &quot;My New Post&quot;</code></pre>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo server</code></pre>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo generate</code></pre>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo deploy</code></pre>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"},{"title":"推理界的3月4号","date":"2022-03-04T03:28:18.000Z","_content":"\n今天是3月4日，在推理界，历史的今天有如下事件：\n\n- 程小青（中国）出席纪念白居易诞辰诗会65周年\n\n- 妹尾韶夫（日本）诞辰130周年\n\n- 詹姆斯·艾尔罗伊（美国）诞辰74周年\n\n- 黑川博行（日本）诞辰73周年\n\n- 半村良（日本）逝世20周年\n\n# 程小青\n\n　　程小青（1893—1976）【原名程青心，又名程辉斋】\n\n　　籍贯：江苏吴县人。\n\n　　身平介绍：少年家贫，曾在钟表店当学徒，自学外语和热爱看书，他18岁时开始从事文学写作，先是与周瘦鹃合作翻译柯南·道尔作品，后来创作《霍桑探案》，一举成名。\n\n　　据史料介绍，程小青在21岁时发表的《灯光人影》，被《新闻报》举行的征文大赛选中，他小说中的侦探原名霍森，因排字工人误排，于是便成了霍桑。《霍桑探案》发表之后，程小青不断收到读者大量来信。是读者的鼓励，促使程小青先后写出了《江南燕》、《珠项圈》、《黄浦江中》、《八十四》、《轮下血》、《裹棉刀》、《恐怖的话剧》、《雨夜枪声》、《白衣怪》、《催命符》、《索命钱》、《新婚劫》、《活尸》、《逃犯》、《血手印》、《黑地牢》、《无头案》等30余部侦探小说。著名报人郑逸梅曾称赞他：“毕生精力，尽瘁于此，也就成为侦探小说的巨擘。”\n\n　　程小青的创作，据另一位著名报人范烟桥称“模仿了柯南道尔的写法”，但他又塑造了“中国的福尔摩斯”。为了达到这一目的，程小青作为函授生，受业于美国大学函授科，进修犯罪心理学与侦探学的学习，他从理论上学习西欧侦探理论，在实践中又把中国旧社会发生的案例加以改造。他在谈到创作时，多次谈到自己如何设计侦探小说的名字，怎样取材与裁剪，怎样构思开头与结尾，他把美国作家韦尔斯的专著《侦探小说技艺论》和美国心理学家聂克逊博士的专著《著作人应知的心理学》作为教科书。在小说中，程小青设计了霍桑与包朗一对搭档，类似福尔摩斯与华生医生，但在案件的取材上，程小青着重描写旧中国社会弊病引发的凶杀案，注重人物的心理分析，把凶杀与现实生活的投影结合起来，因此形成了自己的特点与风格。\n\n# 妹尾韶夫\n\n　　妹尾韶夫（1892年3月4日－1962年4月19日），日本翻译家、侦探小说作家。出生于冈山县津山市。\n\n　　早稻田大学英文系毕业后，1922年为“新青年”等杂志翻译英美侦探小说，其中多数是阿加莎·克里斯蒂的作品。1925年以后以妹尾安艺夫名义创作，发表了30到40个短篇小说。\n\n　　在“新青年”担当每月评论的胡铁梅、“宝石”杂志每月评论者小原俊一，据说都是妹尾的笔名。\n\n　　1962年因脑溢血去世，终年70岁。\n\n# 詹姆斯·艾尔罗伊\n\n　　詹姆斯·艾尔罗伊 （詹姆斯·艾尔罗瓦） James Ellroy（1948年3月4日美国加州洛杉矶-）\n\n　　类型：硬汉；警察程序；私人侦探；倒叙\n\n　　主要系列：\n\n- “洛依·霍普金斯”三部曲Lloyd Hopkins trilogy, 1984-1986\n- 洛杉矶四部曲L.A. quartet, 1987-1992\n- American Underworld trilogy/Underworld USA trilogy, 1995-\n\n　　艾尔罗伊本名李·厄尔·艾尔罗伊（Lee Earle Ellroy）。父亲阿曼德·艾尔罗伊（Armand Ellroy）是反犹太主义者，副业是会计师，母亲杰尼瓦·奥德丽·“简”·希利克·艾尔罗伊（Geneva Odelia “Jean” Hilliker Ellroy）是注册护士。艾尔罗伊的父母于1940年结婚，1954年离婚。艾尔罗伊被判给母亲，接着搬到了埃尔蒙特市。据艾尔罗伊回忆，母亲经常在周六晚上酗酒。1958年6月22日发生了一件对于艾尔罗伊一生影响深远的事情，那天他的母亲被人谋杀。之后，艾尔罗伊和父亲一起居住。十一岁生日，父亲送给他一本洛杉矶警察局历史的书籍，他仔细阅读了这本书，立志将来当一名作家。艾尔罗伊是一个有强迫症的读者，他常常去图书馆借书，还从书店里偷犯罪小说。\n\n　　艾尔罗伊进入犹太费尔法克斯高中（Jewish Fairfax High School），1965年校方知道他父亲的纳粹观点之后将他开除。接着他进入美国陆军，但是很快认识到自己不是当兵的材料。他假装口吃，于是很快退伍。他回家之后不久父亲去世了。\n\n　　那段时间，艾尔罗伊就住在街上，靠着入店行窃和入室盗窃为生。他喝酒，有时候还嗑药，占据着无人的房子。1965年到1977年间，艾尔罗伊因为醉酒、偷窃和非法入室而多次被捕。最后被判入狱八个月。刑满释放之后，他做过一些低等的工作，诸如散发传单，递送邮件，色情书店出纳等等。他继续喝酒，滥用鼻用吸入器。因为患上肺炎和妄想症，艾尔罗伊被送去治疗，1975年治愈。接着他找了一些稳定的工作，比如高尔夫和乡村俱乐部的球童，参加戒酒互助协会（Alcoholics Anonymous）之后他开始创作小说。\n\n　　艾尔罗伊的第一部长篇小说《布朗的安魂曲》（Brown's Requiem）是一部半自传性质的犯罪小说，风格类似雷蒙德·钱德勒，小说的主人公弗里兹·布朗（Fritz Brown）曾经是一名警官，他戒酒之后变成了一名私人侦探。第二部《秘密行事》（Clandestine，1982）讲述了一名前警官追踪杀害以前爱人的凶手的故事，获得埃德加奖提名。\n\n　　此后，艾尔罗伊的创作速度保持稳健。他先是发表了“洛依·霍普金斯”三部曲，包括《染血之夜》（Blood on the Moon，1984）、《因起此夜》（Because the Night，1984）、《自殺坡》（Suicide Hill，1986）。1984年他辞去球童，全职写作。他又发表了“洛杉矶四部曲”，包括《黑色大丽花》（The Black Dahlia，1987）、《无处藏身》（The Big Nowhere，1988）、《洛杉矶的秘密》（L.A. Confidential，1990）、《白色爵士舞》（White Jazz，1992）。因此在国内和国际上获得了声誉。《无处藏身》或的1990年侦探小说奖（Prix Mystere Award）。《洛杉矶的秘密》被改编成电影，获得奥斯卡奖提名。2006年《黑色大丽花》被搬上大银幕。\n\n　　1993年到2004年间，艾尔罗伊在《GQ》杂志上发表了小说和非小说。这些作品结集为《好莱坞夜曲》（Hollywood Nocturnes，1994）、《犯罪之波：来自洛杉矶地下社会的报道和小说》（Crime Wave: Reportage and Fiction from the Underside of L.A.，1999）和《危险的步调》（Breakneck Pace，2000）。\n\n　　艾尔罗伊结过两次婚，第一任妻子是玛丽·多赫尔蒂（Mary Doherty），第二任是海伦·诺德（Helen Knode），均离婚。2005年他从康涅狄格州纽卡纳安搬到洛杉矶。（ellry）\n\n# 黑川博行\n\n　　黑川博行（1949年3月4日－），日本小说家。出生于爱媛县。京都市立艺术大学美术学系雕刻科毕业。妻子是日本画家黑川雅子。\n\n　　毕业后在高中担任美术教师，1984年以《第二次告别》（二度のお别れ）获三得利推理大奖佳作。1986年《猫眼宝石》（キャッツアイころがった）获第4届三得利推理大奖。1996年《伯爵计划》（カウント·プラン）获第49届日本推理作家协会奖（短篇部门）。\n\n　　获得直木奖候补的作品有《伯爵计划》（カウント·プラン）、《疫病神》、《文福茶釜》、《国境》、《恶果》等。\n\n　　他还是由船越荣一郎主演的电视连续剧《刑事吉永诚一·泪的事件簿》的原作。\n\n# 半村良\n\n　　半村良（1933年10月27日－2002年3月4日），日本小说家。本名清野平太郎。出生于东京府（现东京都），在东京都立两国高中毕业后，先后做过酒吧侍者等多种职业，在广告公司任职期间与广播公司等建立了密切的关系，后开始这方面的工作。\n\n　　1962年短篇小说《收获》（収穫）获得第2届早川科幻小说大赛（ハヤカワ·SFコンテスト）第三名，正式成为作家，上世纪六十年代在《SF杂志》（SFマガジン）上发表若干个短篇小说后，突然不再发表作品，据说和当时《SF杂志》总编辑福岛正实关系不佳，后转入自由创作。\n\n　　1971年出版《石之血脉》（石の血脈）开创了浪漫传奇小说流派，这种风格对后世很多作家产生了影响。\n\n　　1975年《雨やどり》获得直木奖。\n","source":"_posts/mystery0304.md","raw":"---\ntitle: 推理界的3月4号\ndate: 2022-03-04 11:28:18\ntags: 推理界的今天\ncategories: 推理\n---\n\n今天是3月4日，在推理界，历史的今天有如下事件：\n\n- 程小青（中国）出席纪念白居易诞辰诗会65周年\n\n- 妹尾韶夫（日本）诞辰130周年\n\n- 詹姆斯·艾尔罗伊（美国）诞辰74周年\n\n- 黑川博行（日本）诞辰73周年\n\n- 半村良（日本）逝世20周年\n\n# 程小青\n\n　　程小青（1893—1976）【原名程青心，又名程辉斋】\n\n　　籍贯：江苏吴县人。\n\n　　身平介绍：少年家贫，曾在钟表店当学徒，自学外语和热爱看书，他18岁时开始从事文学写作，先是与周瘦鹃合作翻译柯南·道尔作品，后来创作《霍桑探案》，一举成名。\n\n　　据史料介绍，程小青在21岁时发表的《灯光人影》，被《新闻报》举行的征文大赛选中，他小说中的侦探原名霍森，因排字工人误排，于是便成了霍桑。《霍桑探案》发表之后，程小青不断收到读者大量来信。是读者的鼓励，促使程小青先后写出了《江南燕》、《珠项圈》、《黄浦江中》、《八十四》、《轮下血》、《裹棉刀》、《恐怖的话剧》、《雨夜枪声》、《白衣怪》、《催命符》、《索命钱》、《新婚劫》、《活尸》、《逃犯》、《血手印》、《黑地牢》、《无头案》等30余部侦探小说。著名报人郑逸梅曾称赞他：“毕生精力，尽瘁于此，也就成为侦探小说的巨擘。”\n\n　　程小青的创作，据另一位著名报人范烟桥称“模仿了柯南道尔的写法”，但他又塑造了“中国的福尔摩斯”。为了达到这一目的，程小青作为函授生，受业于美国大学函授科，进修犯罪心理学与侦探学的学习，他从理论上学习西欧侦探理论，在实践中又把中国旧社会发生的案例加以改造。他在谈到创作时，多次谈到自己如何设计侦探小说的名字，怎样取材与裁剪，怎样构思开头与结尾，他把美国作家韦尔斯的专著《侦探小说技艺论》和美国心理学家聂克逊博士的专著《著作人应知的心理学》作为教科书。在小说中，程小青设计了霍桑与包朗一对搭档，类似福尔摩斯与华生医生，但在案件的取材上，程小青着重描写旧中国社会弊病引发的凶杀案，注重人物的心理分析，把凶杀与现实生活的投影结合起来，因此形成了自己的特点与风格。\n\n# 妹尾韶夫\n\n　　妹尾韶夫（1892年3月4日－1962年4月19日），日本翻译家、侦探小说作家。出生于冈山县津山市。\n\n　　早稻田大学英文系毕业后，1922年为“新青年”等杂志翻译英美侦探小说，其中多数是阿加莎·克里斯蒂的作品。1925年以后以妹尾安艺夫名义创作，发表了30到40个短篇小说。\n\n　　在“新青年”担当每月评论的胡铁梅、“宝石”杂志每月评论者小原俊一，据说都是妹尾的笔名。\n\n　　1962年因脑溢血去世，终年70岁。\n\n# 詹姆斯·艾尔罗伊\n\n　　詹姆斯·艾尔罗伊 （詹姆斯·艾尔罗瓦） James Ellroy（1948年3月4日美国加州洛杉矶-）\n\n　　类型：硬汉；警察程序；私人侦探；倒叙\n\n　　主要系列：\n\n- “洛依·霍普金斯”三部曲Lloyd Hopkins trilogy, 1984-1986\n- 洛杉矶四部曲L.A. quartet, 1987-1992\n- American Underworld trilogy/Underworld USA trilogy, 1995-\n\n　　艾尔罗伊本名李·厄尔·艾尔罗伊（Lee Earle Ellroy）。父亲阿曼德·艾尔罗伊（Armand Ellroy）是反犹太主义者，副业是会计师，母亲杰尼瓦·奥德丽·“简”·希利克·艾尔罗伊（Geneva Odelia “Jean” Hilliker Ellroy）是注册护士。艾尔罗伊的父母于1940年结婚，1954年离婚。艾尔罗伊被判给母亲，接着搬到了埃尔蒙特市。据艾尔罗伊回忆，母亲经常在周六晚上酗酒。1958年6月22日发生了一件对于艾尔罗伊一生影响深远的事情，那天他的母亲被人谋杀。之后，艾尔罗伊和父亲一起居住。十一岁生日，父亲送给他一本洛杉矶警察局历史的书籍，他仔细阅读了这本书，立志将来当一名作家。艾尔罗伊是一个有强迫症的读者，他常常去图书馆借书，还从书店里偷犯罪小说。\n\n　　艾尔罗伊进入犹太费尔法克斯高中（Jewish Fairfax High School），1965年校方知道他父亲的纳粹观点之后将他开除。接着他进入美国陆军，但是很快认识到自己不是当兵的材料。他假装口吃，于是很快退伍。他回家之后不久父亲去世了。\n\n　　那段时间，艾尔罗伊就住在街上，靠着入店行窃和入室盗窃为生。他喝酒，有时候还嗑药，占据着无人的房子。1965年到1977年间，艾尔罗伊因为醉酒、偷窃和非法入室而多次被捕。最后被判入狱八个月。刑满释放之后，他做过一些低等的工作，诸如散发传单，递送邮件，色情书店出纳等等。他继续喝酒，滥用鼻用吸入器。因为患上肺炎和妄想症，艾尔罗伊被送去治疗，1975年治愈。接着他找了一些稳定的工作，比如高尔夫和乡村俱乐部的球童，参加戒酒互助协会（Alcoholics Anonymous）之后他开始创作小说。\n\n　　艾尔罗伊的第一部长篇小说《布朗的安魂曲》（Brown's Requiem）是一部半自传性质的犯罪小说，风格类似雷蒙德·钱德勒，小说的主人公弗里兹·布朗（Fritz Brown）曾经是一名警官，他戒酒之后变成了一名私人侦探。第二部《秘密行事》（Clandestine，1982）讲述了一名前警官追踪杀害以前爱人的凶手的故事，获得埃德加奖提名。\n\n　　此后，艾尔罗伊的创作速度保持稳健。他先是发表了“洛依·霍普金斯”三部曲，包括《染血之夜》（Blood on the Moon，1984）、《因起此夜》（Because the Night，1984）、《自殺坡》（Suicide Hill，1986）。1984年他辞去球童，全职写作。他又发表了“洛杉矶四部曲”，包括《黑色大丽花》（The Black Dahlia，1987）、《无处藏身》（The Big Nowhere，1988）、《洛杉矶的秘密》（L.A. Confidential，1990）、《白色爵士舞》（White Jazz，1992）。因此在国内和国际上获得了声誉。《无处藏身》或的1990年侦探小说奖（Prix Mystere Award）。《洛杉矶的秘密》被改编成电影，获得奥斯卡奖提名。2006年《黑色大丽花》被搬上大银幕。\n\n　　1993年到2004年间，艾尔罗伊在《GQ》杂志上发表了小说和非小说。这些作品结集为《好莱坞夜曲》（Hollywood Nocturnes，1994）、《犯罪之波：来自洛杉矶地下社会的报道和小说》（Crime Wave: Reportage and Fiction from the Underside of L.A.，1999）和《危险的步调》（Breakneck Pace，2000）。\n\n　　艾尔罗伊结过两次婚，第一任妻子是玛丽·多赫尔蒂（Mary Doherty），第二任是海伦·诺德（Helen Knode），均离婚。2005年他从康涅狄格州纽卡纳安搬到洛杉矶。（ellry）\n\n# 黑川博行\n\n　　黑川博行（1949年3月4日－），日本小说家。出生于爱媛县。京都市立艺术大学美术学系雕刻科毕业。妻子是日本画家黑川雅子。\n\n　　毕业后在高中担任美术教师，1984年以《第二次告别》（二度のお别れ）获三得利推理大奖佳作。1986年《猫眼宝石》（キャッツアイころがった）获第4届三得利推理大奖。1996年《伯爵计划》（カウント·プラン）获第49届日本推理作家协会奖（短篇部门）。\n\n　　获得直木奖候补的作品有《伯爵计划》（カウント·プラン）、《疫病神》、《文福茶釜》、《国境》、《恶果》等。\n\n　　他还是由船越荣一郎主演的电视连续剧《刑事吉永诚一·泪的事件簿》的原作。\n\n# 半村良\n\n　　半村良（1933年10月27日－2002年3月4日），日本小说家。本名清野平太郎。出生于东京府（现东京都），在东京都立两国高中毕业后，先后做过酒吧侍者等多种职业，在广告公司任职期间与广播公司等建立了密切的关系，后开始这方面的工作。\n\n　　1962年短篇小说《收获》（収穫）获得第2届早川科幻小说大赛（ハヤカワ·SFコンテスト）第三名，正式成为作家，上世纪六十年代在《SF杂志》（SFマガジン）上发表若干个短篇小说后，突然不再发表作品，据说和当时《SF杂志》总编辑福岛正实关系不佳，后转入自由创作。\n\n　　1971年出版《石之血脉》（石の血脈）开创了浪漫传奇小说流派，这种风格对后世很多作家产生了影响。\n\n　　1975年《雨やどり》获得直木奖。\n","slug":"mystery0304","published":1,"updated":"2022-03-07T01:52:45.798Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl0t0rrlf001j4ctu65u9a49c","content":"<p>今天是3月4日，在推理界，历史的今天有如下事件：</p>\n<ul>\n<li><p>程小青（中国）出席纪念白居易诞辰诗会65周年</p>\n</li>\n<li><p>妹尾韶夫（日本）诞辰130周年</p>\n</li>\n<li><p>詹姆斯·艾尔罗伊（美国）诞辰74周年</p>\n</li>\n<li><p>黑川博行（日本）诞辰73周年</p>\n</li>\n<li><p>半村良（日本）逝世20周年</p>\n</li>\n</ul>\n<h1 id=\"程小青\"><a href=\"#程小青\" class=\"headerlink\" title=\"程小青\"></a>程小青</h1><p>　　程小青（1893—1976）【原名程青心，又名程辉斋】</p>\n<p>　　籍贯：江苏吴县人。</p>\n<p>　　身平介绍：少年家贫，曾在钟表店当学徒，自学外语和热爱看书，他18岁时开始从事文学写作，先是与周瘦鹃合作翻译柯南·道尔作品，后来创作《霍桑探案》，一举成名。</p>\n<p>　　据史料介绍，程小青在21岁时发表的《灯光人影》，被《新闻报》举行的征文大赛选中，他小说中的侦探原名霍森，因排字工人误排，于是便成了霍桑。《霍桑探案》发表之后，程小青不断收到读者大量来信。是读者的鼓励，促使程小青先后写出了《江南燕》、《珠项圈》、《黄浦江中》、《八十四》、《轮下血》、《裹棉刀》、《恐怖的话剧》、《雨夜枪声》、《白衣怪》、《催命符》、《索命钱》、《新婚劫》、《活尸》、《逃犯》、《血手印》、《黑地牢》、《无头案》等30余部侦探小说。著名报人郑逸梅曾称赞他：“毕生精力，尽瘁于此，也就成为侦探小说的巨擘。”</p>\n<p>　　程小青的创作，据另一位著名报人范烟桥称“模仿了柯南道尔的写法”，但他又塑造了“中国的福尔摩斯”。为了达到这一目的，程小青作为函授生，受业于美国大学函授科，进修犯罪心理学与侦探学的学习，他从理论上学习西欧侦探理论，在实践中又把中国旧社会发生的案例加以改造。他在谈到创作时，多次谈到自己如何设计侦探小说的名字，怎样取材与裁剪，怎样构思开头与结尾，他把美国作家韦尔斯的专著《侦探小说技艺论》和美国心理学家聂克逊博士的专著《著作人应知的心理学》作为教科书。在小说中，程小青设计了霍桑与包朗一对搭档，类似福尔摩斯与华生医生，但在案件的取材上，程小青着重描写旧中国社会弊病引发的凶杀案，注重人物的心理分析，把凶杀与现实生活的投影结合起来，因此形成了自己的特点与风格。</p>\n<h1 id=\"妹尾韶夫\"><a href=\"#妹尾韶夫\" class=\"headerlink\" title=\"妹尾韶夫\"></a>妹尾韶夫</h1><p>　　妹尾韶夫（1892年3月4日－1962年4月19日），日本翻译家、侦探小说作家。出生于冈山县津山市。</p>\n<p>　　早稻田大学英文系毕业后，1922年为“新青年”等杂志翻译英美侦探小说，其中多数是阿加莎·克里斯蒂的作品。1925年以后以妹尾安艺夫名义创作，发表了30到40个短篇小说。</p>\n<p>　　在“新青年”担当每月评论的胡铁梅、“宝石”杂志每月评论者小原俊一，据说都是妹尾的笔名。</p>\n<p>　　1962年因脑溢血去世，终年70岁。</p>\n<h1 id=\"詹姆斯·艾尔罗伊\"><a href=\"#詹姆斯·艾尔罗伊\" class=\"headerlink\" title=\"詹姆斯·艾尔罗伊\"></a>詹姆斯·艾尔罗伊</h1><p>　　詹姆斯·艾尔罗伊 （詹姆斯·艾尔罗瓦） James Ellroy（1948年3月4日美国加州洛杉矶-）</p>\n<p>　　类型：硬汉；警察程序；私人侦探；倒叙</p>\n<p>　　主要系列：</p>\n<ul>\n<li>“洛依·霍普金斯”三部曲Lloyd Hopkins trilogy, 1984-1986</li>\n<li>洛杉矶四部曲L.A. quartet, 1987-1992</li>\n<li>American Underworld trilogy&#x2F;Underworld USA trilogy, 1995-</li>\n</ul>\n<p>　　艾尔罗伊本名李·厄尔·艾尔罗伊（Lee Earle Ellroy）。父亲阿曼德·艾尔罗伊（Armand Ellroy）是反犹太主义者，副业是会计师，母亲杰尼瓦·奥德丽·“简”·希利克·艾尔罗伊（Geneva Odelia “Jean” Hilliker Ellroy）是注册护士。艾尔罗伊的父母于1940年结婚，1954年离婚。艾尔罗伊被判给母亲，接着搬到了埃尔蒙特市。据艾尔罗伊回忆，母亲经常在周六晚上酗酒。1958年6月22日发生了一件对于艾尔罗伊一生影响深远的事情，那天他的母亲被人谋杀。之后，艾尔罗伊和父亲一起居住。十一岁生日，父亲送给他一本洛杉矶警察局历史的书籍，他仔细阅读了这本书，立志将来当一名作家。艾尔罗伊是一个有强迫症的读者，他常常去图书馆借书，还从书店里偷犯罪小说。</p>\n<p>　　艾尔罗伊进入犹太费尔法克斯高中（Jewish Fairfax High School），1965年校方知道他父亲的纳粹观点之后将他开除。接着他进入美国陆军，但是很快认识到自己不是当兵的材料。他假装口吃，于是很快退伍。他回家之后不久父亲去世了。</p>\n<p>　　那段时间，艾尔罗伊就住在街上，靠着入店行窃和入室盗窃为生。他喝酒，有时候还嗑药，占据着无人的房子。1965年到1977年间，艾尔罗伊因为醉酒、偷窃和非法入室而多次被捕。最后被判入狱八个月。刑满释放之后，他做过一些低等的工作，诸如散发传单，递送邮件，色情书店出纳等等。他继续喝酒，滥用鼻用吸入器。因为患上肺炎和妄想症，艾尔罗伊被送去治疗，1975年治愈。接着他找了一些稳定的工作，比如高尔夫和乡村俱乐部的球童，参加戒酒互助协会（Alcoholics Anonymous）之后他开始创作小说。</p>\n<p>　　艾尔罗伊的第一部长篇小说《布朗的安魂曲》（Brown’s Requiem）是一部半自传性质的犯罪小说，风格类似雷蒙德·钱德勒，小说的主人公弗里兹·布朗（Fritz Brown）曾经是一名警官，他戒酒之后变成了一名私人侦探。第二部《秘密行事》（Clandestine，1982）讲述了一名前警官追踪杀害以前爱人的凶手的故事，获得埃德加奖提名。</p>\n<p>　　此后，艾尔罗伊的创作速度保持稳健。他先是发表了“洛依·霍普金斯”三部曲，包括《染血之夜》（Blood on the Moon，1984）、《因起此夜》（Because the Night，1984）、《自殺坡》（Suicide Hill，1986）。1984年他辞去球童，全职写作。他又发表了“洛杉矶四部曲”，包括《黑色大丽花》（The Black Dahlia，1987）、《无处藏身》（The Big Nowhere，1988）、《洛杉矶的秘密》（L.A. Confidential，1990）、《白色爵士舞》（White Jazz，1992）。因此在国内和国际上获得了声誉。《无处藏身》或的1990年侦探小说奖（Prix Mystere Award）。《洛杉矶的秘密》被改编成电影，获得奥斯卡奖提名。2006年《黑色大丽花》被搬上大银幕。</p>\n<p>　　1993年到2004年间，艾尔罗伊在《GQ》杂志上发表了小说和非小说。这些作品结集为《好莱坞夜曲》（Hollywood Nocturnes，1994）、《犯罪之波：来自洛杉矶地下社会的报道和小说》（Crime Wave: Reportage and Fiction from the Underside of L.A.，1999）和《危险的步调》（Breakneck Pace，2000）。</p>\n<p>　　艾尔罗伊结过两次婚，第一任妻子是玛丽·多赫尔蒂（Mary Doherty），第二任是海伦·诺德（Helen Knode），均离婚。2005年他从康涅狄格州纽卡纳安搬到洛杉矶。（ellry）</p>\n<h1 id=\"黑川博行\"><a href=\"#黑川博行\" class=\"headerlink\" title=\"黑川博行\"></a>黑川博行</h1><p>　　黑川博行（1949年3月4日－），日本小说家。出生于爱媛县。京都市立艺术大学美术学系雕刻科毕业。妻子是日本画家黑川雅子。</p>\n<p>　　毕业后在高中担任美术教师，1984年以《第二次告别》（二度のお别れ）获三得利推理大奖佳作。1986年《猫眼宝石》（キャッツアイころがった）获第4届三得利推理大奖。1996年《伯爵计划》（カウント·プラン）获第49届日本推理作家协会奖（短篇部门）。</p>\n<p>　　获得直木奖候补的作品有《伯爵计划》（カウント·プラン）、《疫病神》、《文福茶釜》、《国境》、《恶果》等。</p>\n<p>　　他还是由船越荣一郎主演的电视连续剧《刑事吉永诚一·泪的事件簿》的原作。</p>\n<h1 id=\"半村良\"><a href=\"#半村良\" class=\"headerlink\" title=\"半村良\"></a>半村良</h1><p>　　半村良（1933年10月27日－2002年3月4日），日本小说家。本名清野平太郎。出生于东京府（现东京都），在东京都立两国高中毕业后，先后做过酒吧侍者等多种职业，在广告公司任职期间与广播公司等建立了密切的关系，后开始这方面的工作。</p>\n<p>　　1962年短篇小说《收获》（収穫）获得第2届早川科幻小说大赛（ハヤカワ·SFコンテスト）第三名，正式成为作家，上世纪六十年代在《SF杂志》（SFマガジン）上发表若干个短篇小说后，突然不再发表作品，据说和当时《SF杂志》总编辑福岛正实关系不佳，后转入自由创作。</p>\n<p>　　1971年出版《石之血脉》（石の血脈）开创了浪漫传奇小说流派，这种风格对后世很多作家产生了影响。</p>\n<p>　　1975年《雨やどり》获得直木奖。</p>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.gitee.io/zh-CN/","avatar":"https://element-plus.gitee.io/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"}}},"cover":"https://blog.huangge1199.cn/post/jpaCompositePK/bg.jpg","excerpt":"","more":"<p>今天是3月4日，在推理界，历史的今天有如下事件：</p>\n<ul>\n<li><p>程小青（中国）出席纪念白居易诞辰诗会65周年</p>\n</li>\n<li><p>妹尾韶夫（日本）诞辰130周年</p>\n</li>\n<li><p>詹姆斯·艾尔罗伊（美国）诞辰74周年</p>\n</li>\n<li><p>黑川博行（日本）诞辰73周年</p>\n</li>\n<li><p>半村良（日本）逝世20周年</p>\n</li>\n</ul>\n<h1 id=\"程小青\"><a href=\"#程小青\" class=\"headerlink\" title=\"程小青\"></a>程小青</h1><p>　　程小青（1893—1976）【原名程青心，又名程辉斋】</p>\n<p>　　籍贯：江苏吴县人。</p>\n<p>　　身平介绍：少年家贫，曾在钟表店当学徒，自学外语和热爱看书，他18岁时开始从事文学写作，先是与周瘦鹃合作翻译柯南·道尔作品，后来创作《霍桑探案》，一举成名。</p>\n<p>　　据史料介绍，程小青在21岁时发表的《灯光人影》，被《新闻报》举行的征文大赛选中，他小说中的侦探原名霍森，因排字工人误排，于是便成了霍桑。《霍桑探案》发表之后，程小青不断收到读者大量来信。是读者的鼓励，促使程小青先后写出了《江南燕》、《珠项圈》、《黄浦江中》、《八十四》、《轮下血》、《裹棉刀》、《恐怖的话剧》、《雨夜枪声》、《白衣怪》、《催命符》、《索命钱》、《新婚劫》、《活尸》、《逃犯》、《血手印》、《黑地牢》、《无头案》等30余部侦探小说。著名报人郑逸梅曾称赞他：“毕生精力，尽瘁于此，也就成为侦探小说的巨擘。”</p>\n<p>　　程小青的创作，据另一位著名报人范烟桥称“模仿了柯南道尔的写法”，但他又塑造了“中国的福尔摩斯”。为了达到这一目的，程小青作为函授生，受业于美国大学函授科，进修犯罪心理学与侦探学的学习，他从理论上学习西欧侦探理论，在实践中又把中国旧社会发生的案例加以改造。他在谈到创作时，多次谈到自己如何设计侦探小说的名字，怎样取材与裁剪，怎样构思开头与结尾，他把美国作家韦尔斯的专著《侦探小说技艺论》和美国心理学家聂克逊博士的专著《著作人应知的心理学》作为教科书。在小说中，程小青设计了霍桑与包朗一对搭档，类似福尔摩斯与华生医生，但在案件的取材上，程小青着重描写旧中国社会弊病引发的凶杀案，注重人物的心理分析，把凶杀与现实生活的投影结合起来，因此形成了自己的特点与风格。</p>\n<h1 id=\"妹尾韶夫\"><a href=\"#妹尾韶夫\" class=\"headerlink\" title=\"妹尾韶夫\"></a>妹尾韶夫</h1><p>　　妹尾韶夫（1892年3月4日－1962年4月19日），日本翻译家、侦探小说作家。出生于冈山县津山市。</p>\n<p>　　早稻田大学英文系毕业后，1922年为“新青年”等杂志翻译英美侦探小说，其中多数是阿加莎·克里斯蒂的作品。1925年以后以妹尾安艺夫名义创作，发表了30到40个短篇小说。</p>\n<p>　　在“新青年”担当每月评论的胡铁梅、“宝石”杂志每月评论者小原俊一，据说都是妹尾的笔名。</p>\n<p>　　1962年因脑溢血去世，终年70岁。</p>\n<h1 id=\"詹姆斯·艾尔罗伊\"><a href=\"#詹姆斯·艾尔罗伊\" class=\"headerlink\" title=\"詹姆斯·艾尔罗伊\"></a>詹姆斯·艾尔罗伊</h1><p>　　詹姆斯·艾尔罗伊 （詹姆斯·艾尔罗瓦） James Ellroy（1948年3月4日美国加州洛杉矶-）</p>\n<p>　　类型：硬汉；警察程序；私人侦探；倒叙</p>\n<p>　　主要系列：</p>\n<ul>\n<li>“洛依·霍普金斯”三部曲Lloyd Hopkins trilogy, 1984-1986</li>\n<li>洛杉矶四部曲L.A. quartet, 1987-1992</li>\n<li>American Underworld trilogy&#x2F;Underworld USA trilogy, 1995-</li>\n</ul>\n<p>　　艾尔罗伊本名李·厄尔·艾尔罗伊（Lee Earle Ellroy）。父亲阿曼德·艾尔罗伊（Armand Ellroy）是反犹太主义者，副业是会计师，母亲杰尼瓦·奥德丽·“简”·希利克·艾尔罗伊（Geneva Odelia “Jean” Hilliker Ellroy）是注册护士。艾尔罗伊的父母于1940年结婚，1954年离婚。艾尔罗伊被判给母亲，接着搬到了埃尔蒙特市。据艾尔罗伊回忆，母亲经常在周六晚上酗酒。1958年6月22日发生了一件对于艾尔罗伊一生影响深远的事情，那天他的母亲被人谋杀。之后，艾尔罗伊和父亲一起居住。十一岁生日，父亲送给他一本洛杉矶警察局历史的书籍，他仔细阅读了这本书，立志将来当一名作家。艾尔罗伊是一个有强迫症的读者，他常常去图书馆借书，还从书店里偷犯罪小说。</p>\n<p>　　艾尔罗伊进入犹太费尔法克斯高中（Jewish Fairfax High School），1965年校方知道他父亲的纳粹观点之后将他开除。接着他进入美国陆军，但是很快认识到自己不是当兵的材料。他假装口吃，于是很快退伍。他回家之后不久父亲去世了。</p>\n<p>　　那段时间，艾尔罗伊就住在街上，靠着入店行窃和入室盗窃为生。他喝酒，有时候还嗑药，占据着无人的房子。1965年到1977年间，艾尔罗伊因为醉酒、偷窃和非法入室而多次被捕。最后被判入狱八个月。刑满释放之后，他做过一些低等的工作，诸如散发传单，递送邮件，色情书店出纳等等。他继续喝酒，滥用鼻用吸入器。因为患上肺炎和妄想症，艾尔罗伊被送去治疗，1975年治愈。接着他找了一些稳定的工作，比如高尔夫和乡村俱乐部的球童，参加戒酒互助协会（Alcoholics Anonymous）之后他开始创作小说。</p>\n<p>　　艾尔罗伊的第一部长篇小说《布朗的安魂曲》（Brown’s Requiem）是一部半自传性质的犯罪小说，风格类似雷蒙德·钱德勒，小说的主人公弗里兹·布朗（Fritz Brown）曾经是一名警官，他戒酒之后变成了一名私人侦探。第二部《秘密行事》（Clandestine，1982）讲述了一名前警官追踪杀害以前爱人的凶手的故事，获得埃德加奖提名。</p>\n<p>　　此后，艾尔罗伊的创作速度保持稳健。他先是发表了“洛依·霍普金斯”三部曲，包括《染血之夜》（Blood on the Moon，1984）、《因起此夜》（Because the Night，1984）、《自殺坡》（Suicide Hill，1986）。1984年他辞去球童，全职写作。他又发表了“洛杉矶四部曲”，包括《黑色大丽花》（The Black Dahlia，1987）、《无处藏身》（The Big Nowhere，1988）、《洛杉矶的秘密》（L.A. Confidential，1990）、《白色爵士舞》（White Jazz，1992）。因此在国内和国际上获得了声誉。《无处藏身》或的1990年侦探小说奖（Prix Mystere Award）。《洛杉矶的秘密》被改编成电影，获得奥斯卡奖提名。2006年《黑色大丽花》被搬上大银幕。</p>\n<p>　　1993年到2004年间，艾尔罗伊在《GQ》杂志上发表了小说和非小说。这些作品结集为《好莱坞夜曲》（Hollywood Nocturnes，1994）、《犯罪之波：来自洛杉矶地下社会的报道和小说》（Crime Wave: Reportage and Fiction from the Underside of L.A.，1999）和《危险的步调》（Breakneck Pace，2000）。</p>\n<p>　　艾尔罗伊结过两次婚，第一任妻子是玛丽·多赫尔蒂（Mary Doherty），第二任是海伦·诺德（Helen Knode），均离婚。2005年他从康涅狄格州纽卡纳安搬到洛杉矶。（ellry）</p>\n<h1 id=\"黑川博行\"><a href=\"#黑川博行\" class=\"headerlink\" title=\"黑川博行\"></a>黑川博行</h1><p>　　黑川博行（1949年3月4日－），日本小说家。出生于爱媛县。京都市立艺术大学美术学系雕刻科毕业。妻子是日本画家黑川雅子。</p>\n<p>　　毕业后在高中担任美术教师，1984年以《第二次告别》（二度のお别れ）获三得利推理大奖佳作。1986年《猫眼宝石》（キャッツアイころがった）获第4届三得利推理大奖。1996年《伯爵计划》（カウント·プラン）获第49届日本推理作家协会奖（短篇部门）。</p>\n<p>　　获得直木奖候补的作品有《伯爵计划》（カウント·プラン）、《疫病神》、《文福茶釜》、《国境》、《恶果》等。</p>\n<p>　　他还是由船越荣一郎主演的电视连续剧《刑事吉永诚一·泪的事件簿》的原作。</p>\n<h1 id=\"半村良\"><a href=\"#半村良\" class=\"headerlink\" title=\"半村良\"></a>半村良</h1><p>　　半村良（1933年10月27日－2002年3月4日），日本小说家。本名清野平太郎。出生于东京府（现东京都），在东京都立两国高中毕业后，先后做过酒吧侍者等多种职业，在广告公司任职期间与广播公司等建立了密切的关系，后开始这方面的工作。</p>\n<p>　　1962年短篇小说《收获》（収穫）获得第2届早川科幻小说大赛（ハヤカワ·SFコンテスト）第三名，正式成为作家，上世纪六十年代在《SF杂志》（SFマガジン）上发表若干个短篇小说后，突然不再发表作品，据说和当时《SF杂志》总编辑福岛正实关系不佳，后转入自由创作。</p>\n<p>　　1971年出版《石之血脉》（石の血脈）开创了浪漫传奇小说流派，这种风格对后世很多作家产生了影响。</p>\n<p>　　1975年《雨やどり》获得直木奖。</p>\n"},{"title":"JPA复合主键使用","date":"2022-01-05T07:14:53.000Z","cover":"https://blog.huangge1199.cn/post/jpaCompositePK/bg.jpg","_content":"\n# 1、建立带有复合主键的表User\n\n该表使用 `username`+`phone` 做为复合组件\n\n```sql\ncreate table user\n(\n    username varchar(50) not null,\n    phone     varchar(11) not null,\n    email     varchar(20) default '',\n    address   varchar(50) default '',\n    primary key (username, phone)\n) default charset = utf8\n```\n\n# 2、java中建立复合主键的实体类\n\n```java\n\nimport lombok.Data;\nimport javax.persistence.*;\nimport java.io.Serializable;\n \n@Data\n@Entity\npublic class UserKey implements Serializable {\n    private String username;\n    private String phone;\n}\n```\n\n# 3、建立表的实体类\n\n在实体类上面使用 @IdClass 注解指定复合主键。同时，需要在 name 和 phone 字段上面使用 @Id 注解标记为主键\n\n```java\nimport lombok.Data;\nimport javax.persistence.*;\n \n@Data\n@Entity\n@Table(name = \"user\")\n@IdClass(value = UserKey.class)\npublic class User {\n    @Id\n    @Column(nullable = false)\n    private String username;\n \n    @Id\n    @Column(nullable = false)\n    private String phone;\n \n    @Column\n    private String email;\n \n    @Column\n    private String address;\n}\n```\n\n","source":"_posts/jpaCompositePK.md","raw":"---\ntitle: JPA复合主键使用\ndate: 2022-01-05 15:14:53\ntags: [java,jpa]\ncategories: [java,jpa]\ncover: https://blog.huangge1199.cn/post/jpaCompositePK/bg.jpg\n---\n\n# 1、建立带有复合主键的表User\n\n该表使用 `username`+`phone` 做为复合组件\n\n```sql\ncreate table user\n(\n    username varchar(50) not null,\n    phone     varchar(11) not null,\n    email     varchar(20) default '',\n    address   varchar(50) default '',\n    primary key (username, phone)\n) default charset = utf8\n```\n\n# 2、java中建立复合主键的实体类\n\n```java\n\nimport lombok.Data;\nimport javax.persistence.*;\nimport java.io.Serializable;\n \n@Data\n@Entity\npublic class UserKey implements Serializable {\n    private String username;\n    private String phone;\n}\n```\n\n# 3、建立表的实体类\n\n在实体类上面使用 @IdClass 注解指定复合主键。同时，需要在 name 和 phone 字段上面使用 @Id 注解标记为主键\n\n```java\nimport lombok.Data;\nimport javax.persistence.*;\n \n@Data\n@Entity\n@Table(name = \"user\")\n@IdClass(value = UserKey.class)\npublic class User {\n    @Id\n    @Column(nullable = false)\n    private String username;\n \n    @Id\n    @Column(nullable = false)\n    private String phone;\n \n    @Column\n    private String email;\n \n    @Column\n    private String address;\n}\n```\n\n","slug":"jpaCompositePK","published":1,"updated":"2022-01-18T06:33:17.017Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl0t0rrlg001m4ctudedt7v5d","content":"<h1 id=\"1、建立带有复合主键的表User\"><a href=\"#1、建立带有复合主键的表User\" class=\"headerlink\" title=\"1、建立带有复合主键的表User\"></a>1、建立带有复合主键的表User</h1><p>该表使用 <code>username</code>+<code>phone</code> 做为复合组件</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">create table user\n(\n    username varchar(50) not null,\n    phone     varchar(11) not null,\n    email     varchar(20) default &#39;&#39;,\n    address   varchar(50) default &#39;&#39;,\n    primary key (username, phone)\n) default charset &#x3D; utf8</code></pre>\n\n<h1 id=\"2、java中建立复合主键的实体类\"><a href=\"#2、java中建立复合主键的实体类\" class=\"headerlink\" title=\"2、java中建立复合主键的实体类\"></a>2、java中建立复合主键的实体类</h1><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">\nimport lombok.Data;\nimport javax.persistence.*;\nimport java.io.Serializable;\n \n@Data\n@Entity\npublic class UserKey implements Serializable &#123;\n    private String username;\n    private String phone;\n&#125;</code></pre>\n\n<h1 id=\"3、建立表的实体类\"><a href=\"#3、建立表的实体类\" class=\"headerlink\" title=\"3、建立表的实体类\"></a>3、建立表的实体类</h1><p>在实体类上面使用 @IdClass 注解指定复合主键。同时，需要在 name 和 phone 字段上面使用 @Id 注解标记为主键</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">import lombok.Data;\nimport javax.persistence.*;\n \n@Data\n@Entity\n@Table(name &#x3D; &quot;user&quot;)\n@IdClass(value &#x3D; UserKey.class)\npublic class User &#123;\n    @Id\n    @Column(nullable &#x3D; false)\n    private String username;\n \n    @Id\n    @Column(nullable &#x3D; false)\n    private String phone;\n \n    @Column\n    private String email;\n \n    @Column\n    private String address;\n&#125;</code></pre>\n\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.gitee.io/zh-CN/","avatar":"https://element-plus.gitee.io/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"}}},"excerpt":"","more":"<h1 id=\"1、建立带有复合主键的表User\"><a href=\"#1、建立带有复合主键的表User\" class=\"headerlink\" title=\"1、建立带有复合主键的表User\"></a>1、建立带有复合主键的表User</h1><p>该表使用 <code>username</code>+<code>phone</code> 做为复合组件</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">create table user\n(\n    username varchar(50) not null,\n    phone     varchar(11) not null,\n    email     varchar(20) default &#39;&#39;,\n    address   varchar(50) default &#39;&#39;,\n    primary key (username, phone)\n) default charset &#x3D; utf8</code></pre>\n\n<h1 id=\"2、java中建立复合主键的实体类\"><a href=\"#2、java中建立复合主键的实体类\" class=\"headerlink\" title=\"2、java中建立复合主键的实体类\"></a>2、java中建立复合主键的实体类</h1><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">\nimport lombok.Data;\nimport javax.persistence.*;\nimport java.io.Serializable;\n \n@Data\n@Entity\npublic class UserKey implements Serializable &#123;\n    private String username;\n    private String phone;\n&#125;</code></pre>\n\n<h1 id=\"3、建立表的实体类\"><a href=\"#3、建立表的实体类\" class=\"headerlink\" title=\"3、建立表的实体类\"></a>3、建立表的实体类</h1><p>在实体类上面使用 @IdClass 注解指定复合主键。同时，需要在 name 和 phone 字段上面使用 @Id 注解标记为主键</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">import lombok.Data;\nimport javax.persistence.*;\n \n@Data\n@Entity\n@Table(name &#x3D; &quot;user&quot;)\n@IdClass(value &#x3D; UserKey.class)\npublic class User &#123;\n    @Id\n    @Column(nullable &#x3D; false)\n    private String username;\n \n    @Id\n    @Column(nullable &#x3D; false)\n    private String phone;\n \n    @Column\n    private String email;\n \n    @Column\n    private String address;\n&#125;</code></pre>\n\n"},{"title":"推理界的3月7号","date":"2022-03-07T01:21:47.000Z","_content":"\n今天是3月7日，在推理界，历史的今天有如下事件：\n\n- 仁木悦子（日本）诞辰94周年\n\n- 种村直树（日本）诞辰86周年\n\n- 佐飞通俊（日本）诞辰62周年\n\n- 贾德森·菲利普斯（美国）逝世33周年\n\n# 仁木悦子\n\n　　日本名女推理小说作家。\n\n　　仁木悦子的经历尤其令人注目：1928年生于东京，原名大井三重子、她幼年无忧无虑，但四岁那年患结核性胸椎骨疽病，以致下肢瘫痪，半身不遂。七岁那年父亲去世，不久，母亲也亡故。疾病缠身的仁木悦子幸亏有哥哥大井羲光照顾，他每天教她读书。第二次世界大战爆发，16岁的仁木悦子由哥哥背着来到富山乡下居住。她只读到小学三年级，但却看了不少书，并从18岁起开始写作。她先练习写童话，发表在《儿童俱乐部》和《母亲之友》杂志上，她的30多篇童话小说还结集出版。后来她又成了“克里斯蒂小说迷”，并写出推理小说《猫知道》。这部小说的主角是一对兄妹侦探，哥哥雄太郎是植物系大学生，妹妹悦子是音乐系学生，这对兄妹通过一只猫的经历，侦破了一起谋杀案。作品中渗入作者与她哥哥的影子，推理手法十分细腻，许多伏线埋在紧张的情节之中，把粗心的读者引人迷途，在作品中可见女作家的风格。故事的进展采用侦探的助手叙述的方式，叙述者仁木悦子与作者同名的形式在日本就是由仁木悦子创下的成功先例。之后在日本，作者与作品同名的作品不少。\n\n　　以仁木兄妹为侦探，作者之后继续撰写了《林中之家》、《有刺之树》、《黑色的飘带》等三部长篇和《黄色的花》等若干短篇。 \n\n　　仁木悦子幼时卧病在床，玩伴就是猫，所以她一直喜欢猫，不但让猫在《猫知道》里扮演重要的角色，她所出版的许多推理小说的封面，也都请画家画描，晚年时还主编了一本以“猫”为主题的小说集。她家中的猫则是女佣外出时，从外面捡回来的遭人遗弃的小猫。\n\n　　《猫知道》写于1957年，参加了江户川乱步侦探小说奖的评选。经过评委投票，《猫知道》在96篇征文作品中名列第一，并获第三届江户川乱步奖。\n\n　　由于评委都不认识作者，当仁木悦子由她哥哥大井羲光和亲友抬着参加颁奖仪式时，全场引起了轰动。人们意想不到，一个半身不遂、不能走动的女性竟有如此聪颖的智慧与坚韧的毅力，她赢得了热烈的掌声。在闪光灯中，第一次见到仁木悦子的江户川乱步亲自给她发奖、奖品是一人座“福尔摩斯座像”，还有五万日元的奖金。评委木木高太郎则发表了一段讲话：“《呼啸山庄》在英国文学史上占有不朽的地位；女作家艾米莉·勃朗蒂病魔缠身，能写出这样的杰作。仁木悦子君也是有病在身，相信她也能写出与勃朗蒂媲美的好书。”29岁的仁术悦子激动得热泪盈眶，她是20多年来第一次离开家门。事后她回忆道：“我走进豪华的会场大厅，看见闪闪发光的水晶吊灯，以为自己走进了童话王国。”\n\n　　仁木悦子获奖后，《猫知道》印数剧增。15万册一销而空，后来又拍成电影。丰厚的稿酬收入改善了仁木悦子艰难的处境，她住医院进行了5 次手术，终于能在家中行走，并坐着轮椅车上街观光。一位翻译家同她结了婚，婚后两人和谐美满。仁木悦子不仅成为丈夫的助手，而且又先后写出了7 部长篇推理小说，《林中小屋》（1959 年）、《杀人线路图》（1960年）、《有刺的树》（1961年）、《黑色缎带》（1962年）、《两张底片》（1964年）、《枯叶色的街》（1966年）、《冰冷的街道》（1973年）。有5 部小说仍以兄妹侦探为主角。《两张底片》则是以一对夫妇联手破案。《枯叶色的街》是个贫穷的青年与书店女职员被卷进凶案，成为破案主角。这些推理小说都得到了读者的好评。\n\n　　1980年的<赤的猫>获得第三十四届日本推理作家协会短篇赏。仁木悦子最后于1986年因肾病逝世，享年58岁。\n\n　　《猫知道》被日本评论家誉为推理小说史上的“第二次浪潮”。在同一年，松本清张也发表了推理名篇《点与线》。这两部小说一扫日本侦探小说中阴森诡秘的文风，替而代之清新简朴的风格。仁木悦子以女性细腻的文笔，写出了社会推理小说，尽管她身患重疾、但她的小说却给人乐观健康的感受。她注重细节的挖掘，留给读者深刻的印象。继仁木悦子之后，许多推理小说家都自觉地摆脱“变格派”的风格，推重社会推理小说的写实手法。从这一点上说，仁木悦子对日本推理小说的发展有着重要的贡献。\n\n# 种村直树\n\n　　种村直树（1936年3月7日－），日本作家、随笔家、评论家。\n\n　　1973年开始创作，从事与铁路有关的创作，发表过很多铁路相关的报告文学、时评、游记、推理小说。\n\n　　出生于滋贺县大津市。滋贺县立大津东高中（现滋贺县立膳所高中）、京都大学法学系毕业。\n\n　　1972年在每日新闻当记者。在此期间掌握了丰富的铁道知识和创作能力，在当时“铁路杂志”总编辑竹岛纪元的鼓动下，执笔创作了《列车追迹》并开始连载。成为自由撰稿人之后，成为“社会派”推理小说的主要创作作家之一。\n\n　　代表作《铁道旅行术》、《日本国有铁道最后的事件》、《“青春18车票”之旅》等。\n\n# 佐飞通俊\n　　佐飞通俊（1960年3月7日－），日本作家、文艺评论家。\n\n　　出身于福井县。中央大学文学系哲学科毕业，在新闻社工作。1991年《静音系统》（静かなるシステム）（刊登于“群像”1991年6月号）获第34届群像新人文学奖（评论部门）优秀作品。\n\n　　2006年开始创作小说，2月出版《孤独通告》（円環の孤独，讲谈社小说），同年8月出版《爱因斯坦游戏》（アインシュタイン·ゲーム，讲谈社小说），2007年4月又推出“宴の果て　死は独裁者に”（讲谈社小说）。\n\n# 贾德森·菲利普斯\n\n　　贾德森·菲利普斯，全名贾德森·潘特寇斯特·菲利普斯（Judson Pentecost Philips，1903年8月10号- 1989年3月7日），美国侦探小说作家，他以休·潘特寇斯特、菲利普·欧文的笔名和他的本名发表了100多部侦探小说，上世纪30年代他还写了为数众多的体育运动类小说。\n\n　　他出生在美国马萨诸塞州诺斯菲尔德，1925年从哥伦比亚大学毕业。\n\n　　20世纪的20年代到30年代，菲利普斯开始为“纸浆”杂志撰写短篇小说，他还同时撰写剧本和一家报纸的专栏。1950年，他进入沙龙剧场负责剧本写作和宣传。\n\n　　1973年，他获得美国侦探作家协会（MWA）颁发的最高荣誉奖项——大师奖。\n\n　　1989年，菲利普斯因肺气肿引起并发症，在康涅狄格州迦南去世，享年85岁。他留下妻子诺玛·伯顿·菲利普斯、三个儿子（大卫、约翰、丹尼尔）和一个女儿（卡罗琳·诺伍德）。\n","source":"_posts/mystery0307.md","raw":"---\ntitle: 推理界的3月7号\ndate: 2022-03-07 09:21:47\ntags: 推理界的今天\ncategories: 推理\n---\n\n今天是3月7日，在推理界，历史的今天有如下事件：\n\n- 仁木悦子（日本）诞辰94周年\n\n- 种村直树（日本）诞辰86周年\n\n- 佐飞通俊（日本）诞辰62周年\n\n- 贾德森·菲利普斯（美国）逝世33周年\n\n# 仁木悦子\n\n　　日本名女推理小说作家。\n\n　　仁木悦子的经历尤其令人注目：1928年生于东京，原名大井三重子、她幼年无忧无虑，但四岁那年患结核性胸椎骨疽病，以致下肢瘫痪，半身不遂。七岁那年父亲去世，不久，母亲也亡故。疾病缠身的仁木悦子幸亏有哥哥大井羲光照顾，他每天教她读书。第二次世界大战爆发，16岁的仁木悦子由哥哥背着来到富山乡下居住。她只读到小学三年级，但却看了不少书，并从18岁起开始写作。她先练习写童话，发表在《儿童俱乐部》和《母亲之友》杂志上，她的30多篇童话小说还结集出版。后来她又成了“克里斯蒂小说迷”，并写出推理小说《猫知道》。这部小说的主角是一对兄妹侦探，哥哥雄太郎是植物系大学生，妹妹悦子是音乐系学生，这对兄妹通过一只猫的经历，侦破了一起谋杀案。作品中渗入作者与她哥哥的影子，推理手法十分细腻，许多伏线埋在紧张的情节之中，把粗心的读者引人迷途，在作品中可见女作家的风格。故事的进展采用侦探的助手叙述的方式，叙述者仁木悦子与作者同名的形式在日本就是由仁木悦子创下的成功先例。之后在日本，作者与作品同名的作品不少。\n\n　　以仁木兄妹为侦探，作者之后继续撰写了《林中之家》、《有刺之树》、《黑色的飘带》等三部长篇和《黄色的花》等若干短篇。 \n\n　　仁木悦子幼时卧病在床，玩伴就是猫，所以她一直喜欢猫，不但让猫在《猫知道》里扮演重要的角色，她所出版的许多推理小说的封面，也都请画家画描，晚年时还主编了一本以“猫”为主题的小说集。她家中的猫则是女佣外出时，从外面捡回来的遭人遗弃的小猫。\n\n　　《猫知道》写于1957年，参加了江户川乱步侦探小说奖的评选。经过评委投票，《猫知道》在96篇征文作品中名列第一，并获第三届江户川乱步奖。\n\n　　由于评委都不认识作者，当仁木悦子由她哥哥大井羲光和亲友抬着参加颁奖仪式时，全场引起了轰动。人们意想不到，一个半身不遂、不能走动的女性竟有如此聪颖的智慧与坚韧的毅力，她赢得了热烈的掌声。在闪光灯中，第一次见到仁木悦子的江户川乱步亲自给她发奖、奖品是一人座“福尔摩斯座像”，还有五万日元的奖金。评委木木高太郎则发表了一段讲话：“《呼啸山庄》在英国文学史上占有不朽的地位；女作家艾米莉·勃朗蒂病魔缠身，能写出这样的杰作。仁木悦子君也是有病在身，相信她也能写出与勃朗蒂媲美的好书。”29岁的仁术悦子激动得热泪盈眶，她是20多年来第一次离开家门。事后她回忆道：“我走进豪华的会场大厅，看见闪闪发光的水晶吊灯，以为自己走进了童话王国。”\n\n　　仁木悦子获奖后，《猫知道》印数剧增。15万册一销而空，后来又拍成电影。丰厚的稿酬收入改善了仁木悦子艰难的处境，她住医院进行了5 次手术，终于能在家中行走，并坐着轮椅车上街观光。一位翻译家同她结了婚，婚后两人和谐美满。仁木悦子不仅成为丈夫的助手，而且又先后写出了7 部长篇推理小说，《林中小屋》（1959 年）、《杀人线路图》（1960年）、《有刺的树》（1961年）、《黑色缎带》（1962年）、《两张底片》（1964年）、《枯叶色的街》（1966年）、《冰冷的街道》（1973年）。有5 部小说仍以兄妹侦探为主角。《两张底片》则是以一对夫妇联手破案。《枯叶色的街》是个贫穷的青年与书店女职员被卷进凶案，成为破案主角。这些推理小说都得到了读者的好评。\n\n　　1980年的<赤的猫>获得第三十四届日本推理作家协会短篇赏。仁木悦子最后于1986年因肾病逝世，享年58岁。\n\n　　《猫知道》被日本评论家誉为推理小说史上的“第二次浪潮”。在同一年，松本清张也发表了推理名篇《点与线》。这两部小说一扫日本侦探小说中阴森诡秘的文风，替而代之清新简朴的风格。仁木悦子以女性细腻的文笔，写出了社会推理小说，尽管她身患重疾、但她的小说却给人乐观健康的感受。她注重细节的挖掘，留给读者深刻的印象。继仁木悦子之后，许多推理小说家都自觉地摆脱“变格派”的风格，推重社会推理小说的写实手法。从这一点上说，仁木悦子对日本推理小说的发展有着重要的贡献。\n\n# 种村直树\n\n　　种村直树（1936年3月7日－），日本作家、随笔家、评论家。\n\n　　1973年开始创作，从事与铁路有关的创作，发表过很多铁路相关的报告文学、时评、游记、推理小说。\n\n　　出生于滋贺县大津市。滋贺县立大津东高中（现滋贺县立膳所高中）、京都大学法学系毕业。\n\n　　1972年在每日新闻当记者。在此期间掌握了丰富的铁道知识和创作能力，在当时“铁路杂志”总编辑竹岛纪元的鼓动下，执笔创作了《列车追迹》并开始连载。成为自由撰稿人之后，成为“社会派”推理小说的主要创作作家之一。\n\n　　代表作《铁道旅行术》、《日本国有铁道最后的事件》、《“青春18车票”之旅》等。\n\n# 佐飞通俊\n　　佐飞通俊（1960年3月7日－），日本作家、文艺评论家。\n\n　　出身于福井县。中央大学文学系哲学科毕业，在新闻社工作。1991年《静音系统》（静かなるシステム）（刊登于“群像”1991年6月号）获第34届群像新人文学奖（评论部门）优秀作品。\n\n　　2006年开始创作小说，2月出版《孤独通告》（円環の孤独，讲谈社小说），同年8月出版《爱因斯坦游戏》（アインシュタイン·ゲーム，讲谈社小说），2007年4月又推出“宴の果て　死は独裁者に”（讲谈社小说）。\n\n# 贾德森·菲利普斯\n\n　　贾德森·菲利普斯，全名贾德森·潘特寇斯特·菲利普斯（Judson Pentecost Philips，1903年8月10号- 1989年3月7日），美国侦探小说作家，他以休·潘特寇斯特、菲利普·欧文的笔名和他的本名发表了100多部侦探小说，上世纪30年代他还写了为数众多的体育运动类小说。\n\n　　他出生在美国马萨诸塞州诺斯菲尔德，1925年从哥伦比亚大学毕业。\n\n　　20世纪的20年代到30年代，菲利普斯开始为“纸浆”杂志撰写短篇小说，他还同时撰写剧本和一家报纸的专栏。1950年，他进入沙龙剧场负责剧本写作和宣传。\n\n　　1973年，他获得美国侦探作家协会（MWA）颁发的最高荣誉奖项——大师奖。\n\n　　1989年，菲利普斯因肺气肿引起并发症，在康涅狄格州迦南去世，享年85岁。他留下妻子诺玛·伯顿·菲利普斯、三个儿子（大卫、约翰、丹尼尔）和一个女儿（卡罗琳·诺伍德）。\n","slug":"mystery0307","published":1,"updated":"2022-03-07T01:54:08.895Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl0t0rrlh001o4ctud30i6lfg","content":"<p>今天是3月7日，在推理界，历史的今天有如下事件：</p>\n<ul>\n<li><p>仁木悦子（日本）诞辰94周年</p>\n</li>\n<li><p>种村直树（日本）诞辰86周年</p>\n</li>\n<li><p>佐飞通俊（日本）诞辰62周年</p>\n</li>\n<li><p>贾德森·菲利普斯（美国）逝世33周年</p>\n</li>\n</ul>\n<h1 id=\"仁木悦子\"><a href=\"#仁木悦子\" class=\"headerlink\" title=\"仁木悦子\"></a>仁木悦子</h1><p>　　日本名女推理小说作家。</p>\n<p>　　仁木悦子的经历尤其令人注目：1928年生于东京，原名大井三重子、她幼年无忧无虑，但四岁那年患结核性胸椎骨疽病，以致下肢瘫痪，半身不遂。七岁那年父亲去世，不久，母亲也亡故。疾病缠身的仁木悦子幸亏有哥哥大井羲光照顾，他每天教她读书。第二次世界大战爆发，16岁的仁木悦子由哥哥背着来到富山乡下居住。她只读到小学三年级，但却看了不少书，并从18岁起开始写作。她先练习写童话，发表在《儿童俱乐部》和《母亲之友》杂志上，她的30多篇童话小说还结集出版。后来她又成了“克里斯蒂小说迷”，并写出推理小说《猫知道》。这部小说的主角是一对兄妹侦探，哥哥雄太郎是植物系大学生，妹妹悦子是音乐系学生，这对兄妹通过一只猫的经历，侦破了一起谋杀案。作品中渗入作者与她哥哥的影子，推理手法十分细腻，许多伏线埋在紧张的情节之中，把粗心的读者引人迷途，在作品中可见女作家的风格。故事的进展采用侦探的助手叙述的方式，叙述者仁木悦子与作者同名的形式在日本就是由仁木悦子创下的成功先例。之后在日本，作者与作品同名的作品不少。</p>\n<p>　　以仁木兄妹为侦探，作者之后继续撰写了《林中之家》、《有刺之树》、《黑色的飘带》等三部长篇和《黄色的花》等若干短篇。 </p>\n<p>　　仁木悦子幼时卧病在床，玩伴就是猫，所以她一直喜欢猫，不但让猫在《猫知道》里扮演重要的角色，她所出版的许多推理小说的封面，也都请画家画描，晚年时还主编了一本以“猫”为主题的小说集。她家中的猫则是女佣外出时，从外面捡回来的遭人遗弃的小猫。</p>\n<p>　　《猫知道》写于1957年，参加了江户川乱步侦探小说奖的评选。经过评委投票，《猫知道》在96篇征文作品中名列第一，并获第三届江户川乱步奖。</p>\n<p>　　由于评委都不认识作者，当仁木悦子由她哥哥大井羲光和亲友抬着参加颁奖仪式时，全场引起了轰动。人们意想不到，一个半身不遂、不能走动的女性竟有如此聪颖的智慧与坚韧的毅力，她赢得了热烈的掌声。在闪光灯中，第一次见到仁木悦子的江户川乱步亲自给她发奖、奖品是一人座“福尔摩斯座像”，还有五万日元的奖金。评委木木高太郎则发表了一段讲话：“《呼啸山庄》在英国文学史上占有不朽的地位；女作家艾米莉·勃朗蒂病魔缠身，能写出这样的杰作。仁木悦子君也是有病在身，相信她也能写出与勃朗蒂媲美的好书。”29岁的仁术悦子激动得热泪盈眶，她是20多年来第一次离开家门。事后她回忆道：“我走进豪华的会场大厅，看见闪闪发光的水晶吊灯，以为自己走进了童话王国。”</p>\n<p>　　仁木悦子获奖后，《猫知道》印数剧增。15万册一销而空，后来又拍成电影。丰厚的稿酬收入改善了仁木悦子艰难的处境，她住医院进行了5 次手术，终于能在家中行走，并坐着轮椅车上街观光。一位翻译家同她结了婚，婚后两人和谐美满。仁木悦子不仅成为丈夫的助手，而且又先后写出了7 部长篇推理小说，《林中小屋》（1959 年）、《杀人线路图》（1960年）、《有刺的树》（1961年）、《黑色缎带》（1962年）、《两张底片》（1964年）、《枯叶色的街》（1966年）、《冰冷的街道》（1973年）。有5 部小说仍以兄妹侦探为主角。《两张底片》则是以一对夫妇联手破案。《枯叶色的街》是个贫穷的青年与书店女职员被卷进凶案，成为破案主角。这些推理小说都得到了读者的好评。</p>\n<p>　　1980年的&lt;赤的猫&gt;获得第三十四届日本推理作家协会短篇赏。仁木悦子最后于1986年因肾病逝世，享年58岁。</p>\n<p>　　《猫知道》被日本评论家誉为推理小说史上的“第二次浪潮”。在同一年，松本清张也发表了推理名篇《点与线》。这两部小说一扫日本侦探小说中阴森诡秘的文风，替而代之清新简朴的风格。仁木悦子以女性细腻的文笔，写出了社会推理小说，尽管她身患重疾、但她的小说却给人乐观健康的感受。她注重细节的挖掘，留给读者深刻的印象。继仁木悦子之后，许多推理小说家都自觉地摆脱“变格派”的风格，推重社会推理小说的写实手法。从这一点上说，仁木悦子对日本推理小说的发展有着重要的贡献。</p>\n<h1 id=\"种村直树\"><a href=\"#种村直树\" class=\"headerlink\" title=\"种村直树\"></a>种村直树</h1><p>　　种村直树（1936年3月7日－），日本作家、随笔家、评论家。</p>\n<p>　　1973年开始创作，从事与铁路有关的创作，发表过很多铁路相关的报告文学、时评、游记、推理小说。</p>\n<p>　　出生于滋贺县大津市。滋贺县立大津东高中（现滋贺县立膳所高中）、京都大学法学系毕业。</p>\n<p>　　1972年在每日新闻当记者。在此期间掌握了丰富的铁道知识和创作能力，在当时“铁路杂志”总编辑竹岛纪元的鼓动下，执笔创作了《列车追迹》并开始连载。成为自由撰稿人之后，成为“社会派”推理小说的主要创作作家之一。</p>\n<p>　　代表作《铁道旅行术》、《日本国有铁道最后的事件》、《“青春18车票”之旅》等。</p>\n<h1 id=\"佐飞通俊\"><a href=\"#佐飞通俊\" class=\"headerlink\" title=\"佐飞通俊\"></a>佐飞通俊</h1><p>　　佐飞通俊（1960年3月7日－），日本作家、文艺评论家。</p>\n<p>　　出身于福井县。中央大学文学系哲学科毕业，在新闻社工作。1991年《静音系统》（静かなるシステム）（刊登于“群像”1991年6月号）获第34届群像新人文学奖（评论部门）优秀作品。</p>\n<p>　　2006年开始创作小说，2月出版《孤独通告》（円環の孤独，讲谈社小说），同年8月出版《爱因斯坦游戏》（アインシュタイン·ゲーム，讲谈社小说），2007年4月又推出“宴の果て　死は独裁者に”（讲谈社小说）。</p>\n<h1 id=\"贾德森·菲利普斯\"><a href=\"#贾德森·菲利普斯\" class=\"headerlink\" title=\"贾德森·菲利普斯\"></a>贾德森·菲利普斯</h1><p>　　贾德森·菲利普斯，全名贾德森·潘特寇斯特·菲利普斯（Judson Pentecost Philips，1903年8月10号- 1989年3月7日），美国侦探小说作家，他以休·潘特寇斯特、菲利普·欧文的笔名和他的本名发表了100多部侦探小说，上世纪30年代他还写了为数众多的体育运动类小说。</p>\n<p>　　他出生在美国马萨诸塞州诺斯菲尔德，1925年从哥伦比亚大学毕业。</p>\n<p>　　20世纪的20年代到30年代，菲利普斯开始为“纸浆”杂志撰写短篇小说，他还同时撰写剧本和一家报纸的专栏。1950年，他进入沙龙剧场负责剧本写作和宣传。</p>\n<p>　　1973年，他获得美国侦探作家协会（MWA）颁发的最高荣誉奖项——大师奖。</p>\n<p>　　1989年，菲利普斯因肺气肿引起并发症，在康涅狄格州迦南去世，享年85岁。他留下妻子诺玛·伯顿·菲利普斯、三个儿子（大卫、约翰、丹尼尔）和一个女儿（卡罗琳·诺伍德）。</p>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.gitee.io/zh-CN/","avatar":"https://element-plus.gitee.io/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"}}},"cover":"https://blog.huangge1199.cn/post/pyListSort/bg.jpeg","excerpt":"","more":"<p>今天是3月7日，在推理界，历史的今天有如下事件：</p>\n<ul>\n<li><p>仁木悦子（日本）诞辰94周年</p>\n</li>\n<li><p>种村直树（日本）诞辰86周年</p>\n</li>\n<li><p>佐飞通俊（日本）诞辰62周年</p>\n</li>\n<li><p>贾德森·菲利普斯（美国）逝世33周年</p>\n</li>\n</ul>\n<h1 id=\"仁木悦子\"><a href=\"#仁木悦子\" class=\"headerlink\" title=\"仁木悦子\"></a>仁木悦子</h1><p>　　日本名女推理小说作家。</p>\n<p>　　仁木悦子的经历尤其令人注目：1928年生于东京，原名大井三重子、她幼年无忧无虑，但四岁那年患结核性胸椎骨疽病，以致下肢瘫痪，半身不遂。七岁那年父亲去世，不久，母亲也亡故。疾病缠身的仁木悦子幸亏有哥哥大井羲光照顾，他每天教她读书。第二次世界大战爆发，16岁的仁木悦子由哥哥背着来到富山乡下居住。她只读到小学三年级，但却看了不少书，并从18岁起开始写作。她先练习写童话，发表在《儿童俱乐部》和《母亲之友》杂志上，她的30多篇童话小说还结集出版。后来她又成了“克里斯蒂小说迷”，并写出推理小说《猫知道》。这部小说的主角是一对兄妹侦探，哥哥雄太郎是植物系大学生，妹妹悦子是音乐系学生，这对兄妹通过一只猫的经历，侦破了一起谋杀案。作品中渗入作者与她哥哥的影子，推理手法十分细腻，许多伏线埋在紧张的情节之中，把粗心的读者引人迷途，在作品中可见女作家的风格。故事的进展采用侦探的助手叙述的方式，叙述者仁木悦子与作者同名的形式在日本就是由仁木悦子创下的成功先例。之后在日本，作者与作品同名的作品不少。</p>\n<p>　　以仁木兄妹为侦探，作者之后继续撰写了《林中之家》、《有刺之树》、《黑色的飘带》等三部长篇和《黄色的花》等若干短篇。 </p>\n<p>　　仁木悦子幼时卧病在床，玩伴就是猫，所以她一直喜欢猫，不但让猫在《猫知道》里扮演重要的角色，她所出版的许多推理小说的封面，也都请画家画描，晚年时还主编了一本以“猫”为主题的小说集。她家中的猫则是女佣外出时，从外面捡回来的遭人遗弃的小猫。</p>\n<p>　　《猫知道》写于1957年，参加了江户川乱步侦探小说奖的评选。经过评委投票，《猫知道》在96篇征文作品中名列第一，并获第三届江户川乱步奖。</p>\n<p>　　由于评委都不认识作者，当仁木悦子由她哥哥大井羲光和亲友抬着参加颁奖仪式时，全场引起了轰动。人们意想不到，一个半身不遂、不能走动的女性竟有如此聪颖的智慧与坚韧的毅力，她赢得了热烈的掌声。在闪光灯中，第一次见到仁木悦子的江户川乱步亲自给她发奖、奖品是一人座“福尔摩斯座像”，还有五万日元的奖金。评委木木高太郎则发表了一段讲话：“《呼啸山庄》在英国文学史上占有不朽的地位；女作家艾米莉·勃朗蒂病魔缠身，能写出这样的杰作。仁木悦子君也是有病在身，相信她也能写出与勃朗蒂媲美的好书。”29岁的仁术悦子激动得热泪盈眶，她是20多年来第一次离开家门。事后她回忆道：“我走进豪华的会场大厅，看见闪闪发光的水晶吊灯，以为自己走进了童话王国。”</p>\n<p>　　仁木悦子获奖后，《猫知道》印数剧增。15万册一销而空，后来又拍成电影。丰厚的稿酬收入改善了仁木悦子艰难的处境，她住医院进行了5 次手术，终于能在家中行走，并坐着轮椅车上街观光。一位翻译家同她结了婚，婚后两人和谐美满。仁木悦子不仅成为丈夫的助手，而且又先后写出了7 部长篇推理小说，《林中小屋》（1959 年）、《杀人线路图》（1960年）、《有刺的树》（1961年）、《黑色缎带》（1962年）、《两张底片》（1964年）、《枯叶色的街》（1966年）、《冰冷的街道》（1973年）。有5 部小说仍以兄妹侦探为主角。《两张底片》则是以一对夫妇联手破案。《枯叶色的街》是个贫穷的青年与书店女职员被卷进凶案，成为破案主角。这些推理小说都得到了读者的好评。</p>\n<p>　　1980年的&lt;赤的猫&gt;获得第三十四届日本推理作家协会短篇赏。仁木悦子最后于1986年因肾病逝世，享年58岁。</p>\n<p>　　《猫知道》被日本评论家誉为推理小说史上的“第二次浪潮”。在同一年，松本清张也发表了推理名篇《点与线》。这两部小说一扫日本侦探小说中阴森诡秘的文风，替而代之清新简朴的风格。仁木悦子以女性细腻的文笔，写出了社会推理小说，尽管她身患重疾、但她的小说却给人乐观健康的感受。她注重细节的挖掘，留给读者深刻的印象。继仁木悦子之后，许多推理小说家都自觉地摆脱“变格派”的风格，推重社会推理小说的写实手法。从这一点上说，仁木悦子对日本推理小说的发展有着重要的贡献。</p>\n<h1 id=\"种村直树\"><a href=\"#种村直树\" class=\"headerlink\" title=\"种村直树\"></a>种村直树</h1><p>　　种村直树（1936年3月7日－），日本作家、随笔家、评论家。</p>\n<p>　　1973年开始创作，从事与铁路有关的创作，发表过很多铁路相关的报告文学、时评、游记、推理小说。</p>\n<p>　　出生于滋贺县大津市。滋贺县立大津东高中（现滋贺县立膳所高中）、京都大学法学系毕业。</p>\n<p>　　1972年在每日新闻当记者。在此期间掌握了丰富的铁道知识和创作能力，在当时“铁路杂志”总编辑竹岛纪元的鼓动下，执笔创作了《列车追迹》并开始连载。成为自由撰稿人之后，成为“社会派”推理小说的主要创作作家之一。</p>\n<p>　　代表作《铁道旅行术》、《日本国有铁道最后的事件》、《“青春18车票”之旅》等。</p>\n<h1 id=\"佐飞通俊\"><a href=\"#佐飞通俊\" class=\"headerlink\" title=\"佐飞通俊\"></a>佐飞通俊</h1><p>　　佐飞通俊（1960年3月7日－），日本作家、文艺评论家。</p>\n<p>　　出身于福井县。中央大学文学系哲学科毕业，在新闻社工作。1991年《静音系统》（静かなるシステム）（刊登于“群像”1991年6月号）获第34届群像新人文学奖（评论部门）优秀作品。</p>\n<p>　　2006年开始创作小说，2月出版《孤独通告》（円環の孤独，讲谈社小说），同年8月出版《爱因斯坦游戏》（アインシュタイン·ゲーム，讲谈社小说），2007年4月又推出“宴の果て　死は独裁者に”（讲谈社小说）。</p>\n<h1 id=\"贾德森·菲利普斯\"><a href=\"#贾德森·菲利普斯\" class=\"headerlink\" title=\"贾德森·菲利普斯\"></a>贾德森·菲利普斯</h1><p>　　贾德森·菲利普斯，全名贾德森·潘特寇斯特·菲利普斯（Judson Pentecost Philips，1903年8月10号- 1989年3月7日），美国侦探小说作家，他以休·潘特寇斯特、菲利普·欧文的笔名和他的本名发表了100多部侦探小说，上世纪30年代他还写了为数众多的体育运动类小说。</p>\n<p>　　他出生在美国马萨诸塞州诺斯菲尔德，1925年从哥伦比亚大学毕业。</p>\n<p>　　20世纪的20年代到30年代，菲利普斯开始为“纸浆”杂志撰写短篇小说，他还同时撰写剧本和一家报纸的专栏。1950年，他进入沙龙剧场负责剧本写作和宣传。</p>\n<p>　　1973年，他获得美国侦探作家协会（MWA）颁发的最高荣誉奖项——大师奖。</p>\n<p>　　1989年，菲利普斯因肺气肿引起并发症，在康涅狄格州迦南去世，享年85岁。他留下妻子诺玛·伯顿·菲利普斯、三个儿子（大卫、约翰、丹尼尔）和一个女儿（卡罗琳·诺伍德）。</p>\n"},{"title":"推理界的3月5号","date":"2022-03-05T02:45:18.000Z","_content":"\n今天是3月5日，在推理界，历史的今天有如下事件：\n\n- 水谷准（日本）诞辰118周年\n\n- 《广益丛报》（中国）第六十五号刊载署名“冷血（陈景韩）戏作”《歇洛克来游上海第一案》117周年\n\n- 谷克二（日本）诞辰81周年\n\n# 水谷准\n\n　　水谷准（1904年3月5日－2001年3月20日），日本小说家、推理作家、翻译家、编辑。\n\n　　出生于北海道函馆市。旧制函馆中学（现北海道函馆中部高中）中途退学后，进入东京早稻田高中读书。读书期间，1922年以《好敌手》参加“新青年”的有奖征稿第一等入选。早稻田大学文学部法国文学系毕业。1929年接替“新青年”总编辑的职务。1938年一度离职，1939年到1945年再次担任“新青年”的总编辑。\n\n　　1952年《决斗》（ある決闘）获第5届侦探作家俱乐部奖短篇奖。\n\n　　二战之后较多创作与高尔夫球有关的作品。\n\n# 谷克二\n\n　　谷克二（1941年3月5日－），日本小说家，被称为“狩猎冒险小说之王（狩猎冒险小说第一人者）”。出生于宫崎县延冈市。本名谷正胜。\n\n　　1963年毕业于早稻田大学商学系。在德国大众汽车公司工作过，之后去了英国，在伦敦大学主修历史经济学。回国后，开始创作生涯。\n\n　　1974年，凭借处女作《追うもの》获得第1届野性时代新人奖。1978年又以《狙击者》获得第5届角川小说奖。他的作品《サバンナ》（又译作《西班牙的短暂夏天》）以及《越境线》先后获得直木奖候补作。\n","source":"_posts/mystery0305.md","raw":"---\ntitle: 推理界的3月5号\ndate: 2022-03-05 10:45:18\ntags: 推理界的今天\ncategories: 推理\n---\n\n今天是3月5日，在推理界，历史的今天有如下事件：\n\n- 水谷准（日本）诞辰118周年\n\n- 《广益丛报》（中国）第六十五号刊载署名“冷血（陈景韩）戏作”《歇洛克来游上海第一案》117周年\n\n- 谷克二（日本）诞辰81周年\n\n# 水谷准\n\n　　水谷准（1904年3月5日－2001年3月20日），日本小说家、推理作家、翻译家、编辑。\n\n　　出生于北海道函馆市。旧制函馆中学（现北海道函馆中部高中）中途退学后，进入东京早稻田高中读书。读书期间，1922年以《好敌手》参加“新青年”的有奖征稿第一等入选。早稻田大学文学部法国文学系毕业。1929年接替“新青年”总编辑的职务。1938年一度离职，1939年到1945年再次担任“新青年”的总编辑。\n\n　　1952年《决斗》（ある決闘）获第5届侦探作家俱乐部奖短篇奖。\n\n　　二战之后较多创作与高尔夫球有关的作品。\n\n# 谷克二\n\n　　谷克二（1941年3月5日－），日本小说家，被称为“狩猎冒险小说之王（狩猎冒险小说第一人者）”。出生于宫崎县延冈市。本名谷正胜。\n\n　　1963年毕业于早稻田大学商学系。在德国大众汽车公司工作过，之后去了英国，在伦敦大学主修历史经济学。回国后，开始创作生涯。\n\n　　1974年，凭借处女作《追うもの》获得第1届野性时代新人奖。1978年又以《狙击者》获得第5届角川小说奖。他的作品《サバンナ》（又译作《西班牙的短暂夏天》）以及《越境线》先后获得直木奖候补作。\n","slug":"mystery0305","published":1,"updated":"2022-03-07T01:52:45.787Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl0t0rrlh001s4ctuc2crglxe","content":"<p>今天是3月5日，在推理界，历史的今天有如下事件：</p>\n<ul>\n<li><p>水谷准（日本）诞辰118周年</p>\n</li>\n<li><p>《广益丛报》（中国）第六十五号刊载署名“冷血（陈景韩）戏作”《歇洛克来游上海第一案》117周年</p>\n</li>\n<li><p>谷克二（日本）诞辰81周年</p>\n</li>\n</ul>\n<h1 id=\"水谷准\"><a href=\"#水谷准\" class=\"headerlink\" title=\"水谷准\"></a>水谷准</h1><p>　　水谷准（1904年3月5日－2001年3月20日），日本小说家、推理作家、翻译家、编辑。</p>\n<p>　　出生于北海道函馆市。旧制函馆中学（现北海道函馆中部高中）中途退学后，进入东京早稻田高中读书。读书期间，1922年以《好敌手》参加“新青年”的有奖征稿第一等入选。早稻田大学文学部法国文学系毕业。1929年接替“新青年”总编辑的职务。1938年一度离职，1939年到1945年再次担任“新青年”的总编辑。</p>\n<p>　　1952年《决斗》（ある決闘）获第5届侦探作家俱乐部奖短篇奖。</p>\n<p>　　二战之后较多创作与高尔夫球有关的作品。</p>\n<h1 id=\"谷克二\"><a href=\"#谷克二\" class=\"headerlink\" title=\"谷克二\"></a>谷克二</h1><p>　　谷克二（1941年3月5日－），日本小说家，被称为“狩猎冒险小说之王（狩猎冒险小说第一人者）”。出生于宫崎县延冈市。本名谷正胜。</p>\n<p>　　1963年毕业于早稻田大学商学系。在德国大众汽车公司工作过，之后去了英国，在伦敦大学主修历史经济学。回国后，开始创作生涯。</p>\n<p>　　1974年，凭借处女作《追うもの》获得第1届野性时代新人奖。1978年又以《狙击者》获得第5届角川小说奖。他的作品《サバンナ》（又译作《西班牙的短暂夏天》）以及《越境线》先后获得直木奖候补作。</p>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.gitee.io/zh-CN/","avatar":"https://element-plus.gitee.io/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"}}},"cover":"https://blog.huangge1199.cn/post/day20220121/bg.jpeg","excerpt":"","more":"<p>今天是3月5日，在推理界，历史的今天有如下事件：</p>\n<ul>\n<li><p>水谷准（日本）诞辰118周年</p>\n</li>\n<li><p>《广益丛报》（中国）第六十五号刊载署名“冷血（陈景韩）戏作”《歇洛克来游上海第一案》117周年</p>\n</li>\n<li><p>谷克二（日本）诞辰81周年</p>\n</li>\n</ul>\n<h1 id=\"水谷准\"><a href=\"#水谷准\" class=\"headerlink\" title=\"水谷准\"></a>水谷准</h1><p>　　水谷准（1904年3月5日－2001年3月20日），日本小说家、推理作家、翻译家、编辑。</p>\n<p>　　出生于北海道函馆市。旧制函馆中学（现北海道函馆中部高中）中途退学后，进入东京早稻田高中读书。读书期间，1922年以《好敌手》参加“新青年”的有奖征稿第一等入选。早稻田大学文学部法国文学系毕业。1929年接替“新青年”总编辑的职务。1938年一度离职，1939年到1945年再次担任“新青年”的总编辑。</p>\n<p>　　1952年《决斗》（ある決闘）获第5届侦探作家俱乐部奖短篇奖。</p>\n<p>　　二战之后较多创作与高尔夫球有关的作品。</p>\n<h1 id=\"谷克二\"><a href=\"#谷克二\" class=\"headerlink\" title=\"谷克二\"></a>谷克二</h1><p>　　谷克二（1941年3月5日－），日本小说家，被称为“狩猎冒险小说之王（狩猎冒险小说第一人者）”。出生于宫崎县延冈市。本名谷正胜。</p>\n<p>　　1963年毕业于早稻田大学商学系。在德国大众汽车公司工作过，之后去了英国，在伦敦大学主修历史经济学。回国后，开始创作生涯。</p>\n<p>　　1974年，凭借处女作《追うもの》获得第1届野性时代新人奖。1978年又以《狙击者》获得第5届角川小说奖。他的作品《サバンナ》（又译作《西班牙的短暂夏天》）以及《越境线》先后获得直木奖候补作。</p>\n"},{"title":"推理界的3月10号","date":"2022-03-10T02:40:38.000Z","_content":"\n今天是3月10日，在推理界，历史的今天有如下事件：\n\n- 古处诚二（日本）诞辰52周年\n\n# 古处诚二\n　　1970年出生于褔冈县、并曾经参与航空自卫队长达六年的古处诚二，2000年以自卫队基地为舞台的推理小说《Unknown》获得第十四回梅菲斯特奖，其后同年再发表以地震灾难为主题的《少年们的密室》、及于翌年(2001)再以自卫队组织为主题创作了《未完成》，接着更以战争为题材发表其他类型的非推理小说。2005年以《七月七日》入选直木奖候选\n","source":"_posts/mystery0310.md","raw":"---\ntitle: 推理界的3月10号\ndate: 2022-03-10 10:40:38\ntags: 推理界的今天\ncategories: 推理\n---\n\n今天是3月10日，在推理界，历史的今天有如下事件：\n\n- 古处诚二（日本）诞辰52周年\n\n# 古处诚二\n　　1970年出生于褔冈县、并曾经参与航空自卫队长达六年的古处诚二，2000年以自卫队基地为舞台的推理小说《Unknown》获得第十四回梅菲斯特奖，其后同年再发表以地震灾难为主题的《少年们的密室》、及于翌年(2001)再以自卫队组织为主题创作了《未完成》，接着更以战争为题材发表其他类型的非推理小说。2005年以《七月七日》入选直木奖候选\n","slug":"mystery0310","published":1,"updated":"2022-03-11T06:35:05.665Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl0t0rrli001t4ctu3jo4273i","content":"<p>今天是3月10日，在推理界，历史的今天有如下事件：</p>\n<ul>\n<li>古处诚二（日本）诞辰52周年</li>\n</ul>\n<h1 id=\"古处诚二\"><a href=\"#古处诚二\" class=\"headerlink\" title=\"古处诚二\"></a>古处诚二</h1><p>　　1970年出生于褔冈县、并曾经参与航空自卫队长达六年的古处诚二，2000年以自卫队基地为舞台的推理小说《Unknown》获得第十四回梅菲斯特奖，其后同年再发表以地震灾难为主题的《少年们的密室》、及于翌年(2001)再以自卫队组织为主题创作了《未完成》，接着更以战争为题材发表其他类型的非推理小说。2005年以《七月七日》入选直木奖候选</p>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.gitee.io/zh-CN/","avatar":"https://element-plus.gitee.io/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"}}},"cover":"https://file.huangge1199.cn/group1/M00/00/00/CgAYB2HzmTKAcuJeAAKgw-sbfmQ23.jpeg","excerpt":"","more":"<p>今天是3月10日，在推理界，历史的今天有如下事件：</p>\n<ul>\n<li>古处诚二（日本）诞辰52周年</li>\n</ul>\n<h1 id=\"古处诚二\"><a href=\"#古处诚二\" class=\"headerlink\" title=\"古处诚二\"></a>古处诚二</h1><p>　　1970年出生于褔冈县、并曾经参与航空自卫队长达六年的古处诚二，2000年以自卫队基地为舞台的推理小说《Unknown》获得第十四回梅菲斯特奖，其后同年再发表以地震灾难为主题的《少年们的密室》、及于翌年(2001)再以自卫队组织为主题创作了《未完成》，接着更以战争为题材发表其他类型的非推理小说。2005年以《七月七日》入选直木奖候选</p>\n"},{"title":"个人网站加入到搜索引擎中","date":"2022-02-08T10:26:58.000Z","_content":"一般来说，搜索引擎中是不会收入你个人网站的，你可以试试用谷歌或者百度等其他搜索引擎看看，能不能收到你个人网站的相关页面？\n如果搜索不到，你可以申请加入搜索引擎，这个是免费的，下面提供一些搜索引擎的提交地址：\n\n- 谷歌博客搜索收录入口:\n  http://www.google.com/addurl/\n- 百度收录入口:\n  http://www.baidu.com/search/url_submit.html\n- 必应Bing收录入口:\n  https://www.bing.com/toolbox/submit-site-url\n- 360搜索引擎登录入口：\n  http://info.so.360.cn/site_submit.html\n- 搜狗提交入口:\n  http://www.sogou.com/feedback/urlfeedback.php\n\n目前，我所知道的就只有，如果你有其他搜索引擎的提交地址，可以在评论区中留下搜索引擎名称和地址，万分感谢！\n\n","source":"_posts/putWebsiteToSearchEngine.md","raw":"---\ntitle: 个人网站加入到搜索引擎中\ndate: 2022-02-08 18:26:58\ntags: 搜索引擎\ncategories: [网站建设]\n---\n一般来说，搜索引擎中是不会收入你个人网站的，你可以试试用谷歌或者百度等其他搜索引擎看看，能不能收到你个人网站的相关页面？\n如果搜索不到，你可以申请加入搜索引擎，这个是免费的，下面提供一些搜索引擎的提交地址：\n\n- 谷歌博客搜索收录入口:\n  http://www.google.com/addurl/\n- 百度收录入口:\n  http://www.baidu.com/search/url_submit.html\n- 必应Bing收录入口:\n  https://www.bing.com/toolbox/submit-site-url\n- 360搜索引擎登录入口：\n  http://info.so.360.cn/site_submit.html\n- 搜狗提交入口:\n  http://www.sogou.com/feedback/urlfeedback.php\n\n目前，我所知道的就只有，如果你有其他搜索引擎的提交地址，可以在评论区中留下搜索引擎名称和地址，万分感谢！\n\n","slug":"putWebsiteToSearchEngine","published":1,"updated":"2022-02-11T09:54:30.130Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl0t0rrlj001x4ctu39yneonr","content":"<p>一般来说，搜索引擎中是不会收入你个人网站的，你可以试试用谷歌或者百度等其他搜索引擎看看，能不能收到你个人网站的相关页面？<br>如果搜索不到，你可以申请加入搜索引擎，这个是免费的，下面提供一些搜索引擎的提交地址：</p>\n<ul>\n<li>谷歌博客搜索收录入口:<br><a href=\"http://www.google.com/addurl/\">http://www.google.com/addurl/</a></li>\n<li>百度收录入口:<br><a href=\"http://www.baidu.com/search/url_submit.html\">http://www.baidu.com/search/url_submit.html</a></li>\n<li>必应Bing收录入口:<br><a href=\"https://www.bing.com/toolbox/submit-site-url\">https://www.bing.com/toolbox/submit-site-url</a></li>\n<li>360搜索引擎登录入口：<br><a href=\"http://info.so.360.cn/site_submit.html\">http://info.so.360.cn/site_submit.html</a></li>\n<li>搜狗提交入口:<br><a href=\"http://www.sogou.com/feedback/urlfeedback.php\">http://www.sogou.com/feedback/urlfeedback.php</a></li>\n</ul>\n<p>目前，我所知道的就只有，如果你有其他搜索引擎的提交地址，可以在评论区中留下搜索引擎名称和地址，万分感谢！</p>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.gitee.io/zh-CN/","avatar":"https://element-plus.gitee.io/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"}}},"cover":"https://blog.huangge1199.cn/post/jpaCompositePK/bg.jpg","excerpt":"","more":"<p>一般来说，搜索引擎中是不会收入你个人网站的，你可以试试用谷歌或者百度等其他搜索引擎看看，能不能收到你个人网站的相关页面？<br>如果搜索不到，你可以申请加入搜索引擎，这个是免费的，下面提供一些搜索引擎的提交地址：</p>\n<ul>\n<li>谷歌博客搜索收录入口:<br><a href=\"http://www.google.com/addurl/\">http://www.google.com/addurl/</a></li>\n<li>百度收录入口:<br><a href=\"http://www.baidu.com/search/url_submit.html\">http://www.baidu.com/search/url_submit.html</a></li>\n<li>必应Bing收录入口:<br><a href=\"https://www.bing.com/toolbox/submit-site-url\">https://www.bing.com/toolbox/submit-site-url</a></li>\n<li>360搜索引擎登录入口：<br><a href=\"http://info.so.360.cn/site_submit.html\">http://info.so.360.cn/site_submit.html</a></li>\n<li>搜狗提交入口:<br><a href=\"http://www.sogou.com/feedback/urlfeedback.php\">http://www.sogou.com/feedback/urlfeedback.php</a></li>\n</ul>\n<p>目前，我所知道的就只有，如果你有其他搜索引擎的提交地址，可以在评论区中留下搜索引擎名称和地址，万分感谢！</p>\n"},{"title":"推理界的3月11号","date":"2022-03-11T06:33:56.000Z","_content":"今天是3月11日，在推理界，今天在历史上的意义：\n\n- 《东方杂志》（中国）第一期开始连载连载《毒美人》118周年\n- 小说林社（中国）出版《福尔摩斯再生案》第一册118周年\n- 克里斯蒂安娜·布兰德（英国）诞辰115周年\n- 梦野久作（日本）逝世86周年\n- 厄尔·斯坦利·加德纳（美国）逝世52周年\n- 弗瑞德里克·布朗（美国）逝世50周年\n\n# 克里斯蒂安娜·布兰德\n　　克里斯蒂安娜·布兰德（Christianna Brand，1907.3.11－1988.12.17），英国侦探小说作家，儿童文学作家。\n\n　　克里斯蒂安娜·布兰德1907年出生于马来亚，原名为玛丽·克里斯蒂安娜·刘易斯（Mary Christianna Lewis），早年在印度生活。她从事过很多工作，包括模特、舞蹈演员、店员和家庭教师。\n\n　　1941年，她创作了第一本以查尔斯·沃斯为主角的侦探小说《高跟鞋之死》（Death in High Heels），当时她还只是一个销售员。同年，她笔下的英国著名探长考克瑞尔在《晕头转向》（Heads You Lose）一书中初次登场，之后考克瑞尔先后七次出现在布兰德的作品中，考克瑞尔探长是她塑造最成功的侦探形象，以他为主角的侦探小说《绿色危机》（Green for Danger）也是布兰德最有名的小说。这部作品描写的是二次大战中一所医院中发生的故事，一名邮递员被送往手术室，不料却因麻醉过度而死。考克瑞尔探长亲自赶来调查，却不料护士长玛丽恩·贝茨也惨遭杀害……《绿色危机》自1944年出版之后，至今仍不断再版。1946年，《绿色危机》被Eagle－Lion公司拍成电影，由阿拉斯泰尔·希姆饰演探长，获得巨大成功。\n\n　　由于《绿色危机》的成功，1946年，克里斯蒂安娜·布兰德加入了英国侦探作家俱乐部，自此她的创作生涯一发不可收拾，接连发表了多部小说。\n\n　　上世纪50年代末开始，克里斯蒂安娜·布兰德开始专注于撰写各种不同类型的作品和短篇小说。她曾获得三次埃德加奖提名：短篇小说《杯中的毒药》（Poison in the Cup）（1969年2月，《埃勒里·奎因神秘杂志》）、《Twist for Twist》（1967年5月，《埃勒里·奎因神秘杂志》）以及一个有关苏格兰谋杀案的《天堂知道谁》（Heaven Knows Who）（1960年）。\n\n　　1972到1973年间，克里斯蒂安娜·布兰德以其杰出的成就，被推选为英国犯罪作家协会主席。\n\n　　克里斯蒂安娜·布兰德曾经使用过的笔名还有玛丽·安·阿希、安娜贝尔·琼斯、玛丽·罗兰和查娜·汤姆森。她的作品被称为“黄金时代最后的侦探小说”，克里斯蒂安娜·布兰德的作品善于在活泼、幽默的情节以及吸引人的诡计中寻求平衡，她在1988年去世，享年81岁。\n\n\n# 梦野久作\n　　日本著名幻想文学作家、变格派推理大师。\n\n　　本名杉山直树，后改名杉山泰道。\n\n　　曾用笔名有海若蓝平、香俱土三鸟、土原耕作、萌圆、杉山萌圆、沙门萌圆、萌圆山人、萌圆生、萌圆泰道、朴平、白木朴平、三鸟山人、香椎村人、青杉居士、外人某氏、钝骨生、TS生、T生等。\n\n　　一九二六年，梦野久作在《妖鼓》投稿前，曾拿给父亲过目，父亲看过后说“就像梦野久作所写的小说\"。 所谓“梦野久作”是博多地区的方言，意指精神恍惚、成天做白日梦的人。曾有数十个笔名的他自此以后便固定使用了这四个字为其笔名。\n\n　　梦野久作有“妖怪作家”之称，其所属的“变格派”讲究人性的怪奇、丑恶、战栗心理的唯美面，使得推理小说充满了文学艺术气息。其代表作《脑髓地狱》（1935年）被称为日本推理小说的四大奇书之一。\n\n## 生平年表\n　　一八八九年一月四日生于九州福冈市。父亲杉山茂丸是右派教父、玄洋社头目头山满的盟友。直树出生後就由祖父母养育。\n\n　　一八九一年开始学习四书诵读。亲生母亲与父亲离婚另嫁高桥家。\n\n　　一八九二年开始学习能乐。熟读四书，遂有神童之称。\n\n　　一八九五年，进入小学就读，身体虚弱瘦小，多由祖父教授学习。求知欲旺盛，具有绘画方面的天赋。\n\n　　一八九九年，大名寻常小学毕业。进入高等小学就学。\n\n　　一九零二年三月二十日，祖父因中风并发肺炎去世。\n\n　　一九零三年三月，高等小学毕业，四月进入福冈县立中学修猷馆就读。\n\n　　一九零八年三月福冈县立修猷馆中学毕业，十二月一日，以一年志愿兵身份入近卫步兵第一连队，在部队中担任小队长，颇受士兵们的信赖。\n\n　　一九一零年，退伍之后，进入中央大学附属补习班，准备入学考。\n　　\n　　一九一一年，进入庆应大学文科系就读。\n\n　　一九一二年，同父异母之弟五郎去世。二月二十六日，奉命成为陆军步兵少尉。十一月八日，继祖母去世。\n\n　　一九一三年，因为弟弟的猝死，父亲遂令其从庆应大学休学。三月时，依父亲之命前往福冈县糟屋郡香椎村唐原经营果园。\n\n　　一九一五年，于东京本乡的喜福寺剃发为僧。将直树改名为泰道。\n\n　　一九一六年，以行脚僧身份从京都走到吉野山。\n\n　　一九一七年被父亲叫回农园，还俗，继承杉山家业。从本年起，在父亲所组织的右派团体台华社机关杂志《黑白》发表有关谣曲与时事的评论之外，还撰写小说。这段期间使用的笔名有沙门萌圆、杉山萌圆、萌圆泰道等。\n\n　　一九一八年二月二十五日，与镰田昌一的女儿阿仓结婚。连载《冀望日本青年》等。\n\n　　一九一九年，长男龙丸出生。成为九州岛日报记者，开始于家庭专栏发表童话至一九二六年。\n\n　　一九二零年，三十一岁，在父亲所投资之九州日报社当社会新闻记者，一九二二年在该报家庭版陆续发表童谣，所使用的笔名有梅若蓝平、香具上三鸟、上原耕作、三鸟山人等。并以萌圆泰道之笔名，将《吴井娘次》改名为《蜡人偶》连载。\n\n　　一九二一年，移居福冈市荒户町。次男铁儿出生。\n\n　　一九二二年，以杉山萌圆为笔名出版《白发小僧》长篇童话集。\n\n　　一九二三年，九月因关东大地震，以九州岛日报社震灾特派记者身份发表《火烧后细见记》与《东京震灾素描》。\n\n　　一九二四年，辞去九州岛日报社的工作，十月，以杉山泰道名义之《侏儒》，应徵博文馆的推理小说征选活动，获得佳作奖（没出版）。\n\n　　一九二五年四月，再度任职九州日报社。三男参绿出生。\n\n　　一九二六年是梦野久作生涯的转换年，正月开始撰写《脑髓地狱》初稿《狂人的解放治疗》，五月辞去报社工作，十月以初次使用梦野久作之笔名，《新青年》之侦探小说徵文之《妖鼓》，入选二等奖（没有一等奖），由此篇被公认之迟来的处女作，梦野久作登上推理文坛。其笔名是取自福冈博多地区的方言，指精神恍惚，经常寻找梦幻的人。\n\n　　一九二七年二月，停止创作《狂人的解放治疗》初稿，创作短篇连载《乡村事件》。\n\n　　一九二八年，陆续发表《人脸》、《死后之恋》、《瓶装地狱》等。\n\n　　一九二九年，出版《梦野久作集》。陆续发表《押绘的奇迹》、《铁锤》、《飞翔于空中的洋伞》。\n\n　　一九三零年五月，奉命担任妻子老家的福冈市黑门邮局局长。陆续发表《复仇》、《童贞》。\n\n　　一九三一年，陆续发表《椰果》、《犬神博士》、《自白心理》等。\n\n　　一九三二年，出版《押绘的奇迹》。陆续发表《斜坑》、《幽灵与推进机》、《狂气地狱》。\n\n　　一九三三年，一月出版《暗黑公使》，四月出版《冰涯》，五月出版《瓶装地狱》，陆续发表《不冒烟的烟囱》、《爆弹太平记》、《白菊》等。\n\n　　一九三四年，八月辞去黑门邮局局长一职。陆续发表《名君臣之》、《山羊胡编辑长》、《难船小僧》、《杀人直播》、《木魂》、《少女地狱》等。\n\n　　一九三五年，一月出版《脑髓地狱》。三月出版《梅津只园翁传》。七月十九日，父亲茂丸因脑溢血猝死于曲町自宅（享年七十二岁）。十月，借帮父亲举行葬礼之便，携妻子至日本各地旅行。十二月，出版《近世快人传》。陆续发表《微笑哑女》、《超人胡夜博士》、《二重心脏》。\n\n　　一九三六年，二月上京整理父亲遗物，遭遇“二二六\"事件。陆续发表《人肉香肠》、《恶魔祈祷书》。三月出版《少女地狱》，十一日与访客谈话中猝死于东京（死因不详），得年四十七岁。\n\n　　梦野久作有“妖怪作家”之称，其所属的“变格派”讲究人性的怪奇、丑恶、战栗心理的唯美面，使得推理小说充满了文学艺术气息。其代表作《脑髓地狱》（1935年）被称为日本推理小说的四大奇书之一。\n\n# 厄尔·斯坦利·加德纳\nErle Stanley Gardner（1889年7月17日美国马萨诸塞州马尔登-1970年3月11日加州Temecula）\n\n其他署名:\n- yle Corning\n- A. A. Fair\n- Charles M. Green\n- Grant Holiday\n- Carleton Kendrake\n- Charles J. Kenny\n- Robert Parr\n- Dane Rigley\n- Arthur Mann Sellers\n- harles M. Stanton\n- Les Tillray\n\n类型：\n- 大侦探\n- 私人侦探\n- 硬汉\n- 法庭\n\n主要系列：\n- 佩里·梅森Perry Mason, 1933-1973\n- Doug Selby, D.A., 1937-1949\n- Bertha Cool and Donald Lam, 1939-1970\n\n　　加德纳是查尔斯·华尔特人·加德纳（Charles Walter Gardner）和格蕾丝·阿德尔玛·加德纳（Grace Adelma Gardner）之子。他的父亲是一位工程师，因为工作需要到处出差，他将全家搬到西海岸，在加德纳十岁的时候先是搬到了俄勒冈州，1902年又搬到加州奥维尔（Oroville）。加德纳对加州十分喜欢，虽然成年之后他游历四方，但是他还是将加州作为自己的家，并且作为自己笔下人物的背景。\n\n　　加德纳个性独立，勤奋，有想象力，二十一岁时他成为了一名律师，但是他没有进入法律学校而是在律师事务所自学以及担任律师助手，最后通过律师考试。他在洛杉矶西北部的文图拉县开业，很快他因为精明、足智多谋而赢得了声誉，他帮助很多看似不可能打赢官司的委托人获胜。\n\n　　加德纳喜欢户外活动，比如打猎，钓鱼、射箭，他成为作家之前他试过许多不同的生意，三十四岁的时候，他将自己的第一篇小说卖给了一家廉价杂志。他并不是一位有天赋的作家，但是他通过研究那些成功作家的作品以及编辑的意见而进步神速。二三十年代，他为廉价杂志创作了大量短篇小说，并且塑造了一大堆人物。1933年，他出版了第一部长篇小说，主角便是日后著名律师侦探佩里·梅森。那时，他创作速度惊人，每三天便能完成一部一万单词的中篇小说，以至于他无法依靠打自己要而使用口述机，因此他雇请了几位秘书，轮班根据他的口述完成稿件。\n\n　　二次大战之后，加德纳的名声让他的创作数量减少了，因为他涉足其他的事务，包括“最高上诉法院”（Court of Last Resort），这是加德纳和他人创立的一家组织，主要是为了增加美国法律的公正性，还有佩里·梅森系列电视片。\n\n　　1912年，加德纳与纳塔利·塔伯特（Natalie Talbert）结婚，1913年他们生下女儿纳塔利·格蕾丝·加德纳（Natalie Grace Gardner）。1935年，两人分居，不过他们还是朋友，也并未离婚。加德纳一直赡养他的妻子，直到1968年妻子去世。同年，加德纳与他长期以来的秘书艾格尼斯·简·贝斯尔（Agnes Jean Bethell）结婚，贝斯尔被认为是梅森的秘书德拉·斯特里特（Della Street）的原型。1962年，他获得美国侦探作家协会（MWA）大师奖。1970年，加德纳因为癌症去世。\n# 弗瑞德里克·布朗\n　　弗瑞德里克·布朗：Fredric Brown（1906年10月29日美国俄亥俄州辛辛那提-1972年3月11日亚利桑那州图森）\n\n　　类型：私人侦探；硬汉\n\n　　主要系列：Ed and Am Hunter, 1947-1963\n\n　　布朗十多岁的时候父母相继去世，不得不自谋生路。二十年代，他进入汉诺威学院（Hanover College）和辛辛那提大学（Cincinnati University）学习。他于1929年结婚，并且搬到威斯康星州密尔沃基，在那里他为几家出版社担任校对，直到在《密尔沃基期刊》（Milwaukee Journal）找到一份固定的工作。他呆在这家杂志一直到1947年，接着搬到纽约，在一家廉价杂志集团担任编辑。\n\n　　1938年，布朗发表了第一篇小说《镍币之月》（The Moon for a Nickel），刊登在《斯崔特和史密斯侦探小说杂志》（Street and Smith's Detective Story Magazine）。从那时开始，布朗成为廉价杂志的固定投稿者，在不同类型的杂志上发表，包括《一角侦探》（Dime Mystery）、《星球故事》（Planet Stories）、《怪异故事》（Weird Tales）。他在廉价小说读者中拥有一大堆拥趸。\n\n　　布朗第一次普遍的成功是因为发表了第一部长篇小说《传说中的高级夜总会》（The Fabulous Clipjoint，1947），这部作品的主角是一对叔侄组合艾德和阿姆·亨特（Ed and Am Hunter）。他还因此赢得了1984年的埃德加奖。布朗的的经济状况得到改善，他搬到纽约成为一名高级编辑。同时他和第一任妻子海伦（Helen）离婚。\n\n　　他接下来的侦探小说也非常成功，包括《死亡套环》（The Dead Ringer，1948）、《尖叫的米米》（The Screaming Mimi，1949）。1949年末，他遇到了伊丽莎白·查利尔（Elizabeth Charlier），二人结婚后搬到新墨西哥州的陶斯。廉价小说集团倒闭之后，布朗成为了一名受欢迎的犯罪小说家。随着电视在娱乐业中所占的份量越来越重，布朗也将他的小说改编为电视片。\n\n　　布朗的身体一直不好，而且他偶尔酗酒对身体健康更是无益。因为呼吸疾病，布朗和妻子在1954年搬到亚利桑那州图森。尽管他为一些报酬很高的杂志写作，诸如《花花公子》（Playboy），但是他已经在走下坡。他的最后一部长篇小说《墨菲太太的内衣裤》（Mrs. Murphy’s Underpants，1963）已经不是水准之作。他还写了一些短篇小说，但是他全职写作的时代已经过去。1972年，布朗因为肺气肿去世。(ellry)\n\n","source":"_posts/mystery0311.md","raw":"---\ntitle: 推理界的3月11号\ndate: 2022-03-11 14:33:56\ntags: 推理界的今天\ncategories: 推理\n---\n今天是3月11日，在推理界，今天在历史上的意义：\n\n- 《东方杂志》（中国）第一期开始连载连载《毒美人》118周年\n- 小说林社（中国）出版《福尔摩斯再生案》第一册118周年\n- 克里斯蒂安娜·布兰德（英国）诞辰115周年\n- 梦野久作（日本）逝世86周年\n- 厄尔·斯坦利·加德纳（美国）逝世52周年\n- 弗瑞德里克·布朗（美国）逝世50周年\n\n# 克里斯蒂安娜·布兰德\n　　克里斯蒂安娜·布兰德（Christianna Brand，1907.3.11－1988.12.17），英国侦探小说作家，儿童文学作家。\n\n　　克里斯蒂安娜·布兰德1907年出生于马来亚，原名为玛丽·克里斯蒂安娜·刘易斯（Mary Christianna Lewis），早年在印度生活。她从事过很多工作，包括模特、舞蹈演员、店员和家庭教师。\n\n　　1941年，她创作了第一本以查尔斯·沃斯为主角的侦探小说《高跟鞋之死》（Death in High Heels），当时她还只是一个销售员。同年，她笔下的英国著名探长考克瑞尔在《晕头转向》（Heads You Lose）一书中初次登场，之后考克瑞尔先后七次出现在布兰德的作品中，考克瑞尔探长是她塑造最成功的侦探形象，以他为主角的侦探小说《绿色危机》（Green for Danger）也是布兰德最有名的小说。这部作品描写的是二次大战中一所医院中发生的故事，一名邮递员被送往手术室，不料却因麻醉过度而死。考克瑞尔探长亲自赶来调查，却不料护士长玛丽恩·贝茨也惨遭杀害……《绿色危机》自1944年出版之后，至今仍不断再版。1946年，《绿色危机》被Eagle－Lion公司拍成电影，由阿拉斯泰尔·希姆饰演探长，获得巨大成功。\n\n　　由于《绿色危机》的成功，1946年，克里斯蒂安娜·布兰德加入了英国侦探作家俱乐部，自此她的创作生涯一发不可收拾，接连发表了多部小说。\n\n　　上世纪50年代末开始，克里斯蒂安娜·布兰德开始专注于撰写各种不同类型的作品和短篇小说。她曾获得三次埃德加奖提名：短篇小说《杯中的毒药》（Poison in the Cup）（1969年2月，《埃勒里·奎因神秘杂志》）、《Twist for Twist》（1967年5月，《埃勒里·奎因神秘杂志》）以及一个有关苏格兰谋杀案的《天堂知道谁》（Heaven Knows Who）（1960年）。\n\n　　1972到1973年间，克里斯蒂安娜·布兰德以其杰出的成就，被推选为英国犯罪作家协会主席。\n\n　　克里斯蒂安娜·布兰德曾经使用过的笔名还有玛丽·安·阿希、安娜贝尔·琼斯、玛丽·罗兰和查娜·汤姆森。她的作品被称为“黄金时代最后的侦探小说”，克里斯蒂安娜·布兰德的作品善于在活泼、幽默的情节以及吸引人的诡计中寻求平衡，她在1988年去世，享年81岁。\n\n\n# 梦野久作\n　　日本著名幻想文学作家、变格派推理大师。\n\n　　本名杉山直树，后改名杉山泰道。\n\n　　曾用笔名有海若蓝平、香俱土三鸟、土原耕作、萌圆、杉山萌圆、沙门萌圆、萌圆山人、萌圆生、萌圆泰道、朴平、白木朴平、三鸟山人、香椎村人、青杉居士、外人某氏、钝骨生、TS生、T生等。\n\n　　一九二六年，梦野久作在《妖鼓》投稿前，曾拿给父亲过目，父亲看过后说“就像梦野久作所写的小说\"。 所谓“梦野久作”是博多地区的方言，意指精神恍惚、成天做白日梦的人。曾有数十个笔名的他自此以后便固定使用了这四个字为其笔名。\n\n　　梦野久作有“妖怪作家”之称，其所属的“变格派”讲究人性的怪奇、丑恶、战栗心理的唯美面，使得推理小说充满了文学艺术气息。其代表作《脑髓地狱》（1935年）被称为日本推理小说的四大奇书之一。\n\n## 生平年表\n　　一八八九年一月四日生于九州福冈市。父亲杉山茂丸是右派教父、玄洋社头目头山满的盟友。直树出生後就由祖父母养育。\n\n　　一八九一年开始学习四书诵读。亲生母亲与父亲离婚另嫁高桥家。\n\n　　一八九二年开始学习能乐。熟读四书，遂有神童之称。\n\n　　一八九五年，进入小学就读，身体虚弱瘦小，多由祖父教授学习。求知欲旺盛，具有绘画方面的天赋。\n\n　　一八九九年，大名寻常小学毕业。进入高等小学就学。\n\n　　一九零二年三月二十日，祖父因中风并发肺炎去世。\n\n　　一九零三年三月，高等小学毕业，四月进入福冈县立中学修猷馆就读。\n\n　　一九零八年三月福冈县立修猷馆中学毕业，十二月一日，以一年志愿兵身份入近卫步兵第一连队，在部队中担任小队长，颇受士兵们的信赖。\n\n　　一九一零年，退伍之后，进入中央大学附属补习班，准备入学考。\n　　\n　　一九一一年，进入庆应大学文科系就读。\n\n　　一九一二年，同父异母之弟五郎去世。二月二十六日，奉命成为陆军步兵少尉。十一月八日，继祖母去世。\n\n　　一九一三年，因为弟弟的猝死，父亲遂令其从庆应大学休学。三月时，依父亲之命前往福冈县糟屋郡香椎村唐原经营果园。\n\n　　一九一五年，于东京本乡的喜福寺剃发为僧。将直树改名为泰道。\n\n　　一九一六年，以行脚僧身份从京都走到吉野山。\n\n　　一九一七年被父亲叫回农园，还俗，继承杉山家业。从本年起，在父亲所组织的右派团体台华社机关杂志《黑白》发表有关谣曲与时事的评论之外，还撰写小说。这段期间使用的笔名有沙门萌圆、杉山萌圆、萌圆泰道等。\n\n　　一九一八年二月二十五日，与镰田昌一的女儿阿仓结婚。连载《冀望日本青年》等。\n\n　　一九一九年，长男龙丸出生。成为九州岛日报记者，开始于家庭专栏发表童话至一九二六年。\n\n　　一九二零年，三十一岁，在父亲所投资之九州日报社当社会新闻记者，一九二二年在该报家庭版陆续发表童谣，所使用的笔名有梅若蓝平、香具上三鸟、上原耕作、三鸟山人等。并以萌圆泰道之笔名，将《吴井娘次》改名为《蜡人偶》连载。\n\n　　一九二一年，移居福冈市荒户町。次男铁儿出生。\n\n　　一九二二年，以杉山萌圆为笔名出版《白发小僧》长篇童话集。\n\n　　一九二三年，九月因关东大地震，以九州岛日报社震灾特派记者身份发表《火烧后细见记》与《东京震灾素描》。\n\n　　一九二四年，辞去九州岛日报社的工作，十月，以杉山泰道名义之《侏儒》，应徵博文馆的推理小说征选活动，获得佳作奖（没出版）。\n\n　　一九二五年四月，再度任职九州日报社。三男参绿出生。\n\n　　一九二六年是梦野久作生涯的转换年，正月开始撰写《脑髓地狱》初稿《狂人的解放治疗》，五月辞去报社工作，十月以初次使用梦野久作之笔名，《新青年》之侦探小说徵文之《妖鼓》，入选二等奖（没有一等奖），由此篇被公认之迟来的处女作，梦野久作登上推理文坛。其笔名是取自福冈博多地区的方言，指精神恍惚，经常寻找梦幻的人。\n\n　　一九二七年二月，停止创作《狂人的解放治疗》初稿，创作短篇连载《乡村事件》。\n\n　　一九二八年，陆续发表《人脸》、《死后之恋》、《瓶装地狱》等。\n\n　　一九二九年，出版《梦野久作集》。陆续发表《押绘的奇迹》、《铁锤》、《飞翔于空中的洋伞》。\n\n　　一九三零年五月，奉命担任妻子老家的福冈市黑门邮局局长。陆续发表《复仇》、《童贞》。\n\n　　一九三一年，陆续发表《椰果》、《犬神博士》、《自白心理》等。\n\n　　一九三二年，出版《押绘的奇迹》。陆续发表《斜坑》、《幽灵与推进机》、《狂气地狱》。\n\n　　一九三三年，一月出版《暗黑公使》，四月出版《冰涯》，五月出版《瓶装地狱》，陆续发表《不冒烟的烟囱》、《爆弹太平记》、《白菊》等。\n\n　　一九三四年，八月辞去黑门邮局局长一职。陆续发表《名君臣之》、《山羊胡编辑长》、《难船小僧》、《杀人直播》、《木魂》、《少女地狱》等。\n\n　　一九三五年，一月出版《脑髓地狱》。三月出版《梅津只园翁传》。七月十九日，父亲茂丸因脑溢血猝死于曲町自宅（享年七十二岁）。十月，借帮父亲举行葬礼之便，携妻子至日本各地旅行。十二月，出版《近世快人传》。陆续发表《微笑哑女》、《超人胡夜博士》、《二重心脏》。\n\n　　一九三六年，二月上京整理父亲遗物，遭遇“二二六\"事件。陆续发表《人肉香肠》、《恶魔祈祷书》。三月出版《少女地狱》，十一日与访客谈话中猝死于东京（死因不详），得年四十七岁。\n\n　　梦野久作有“妖怪作家”之称，其所属的“变格派”讲究人性的怪奇、丑恶、战栗心理的唯美面，使得推理小说充满了文学艺术气息。其代表作《脑髓地狱》（1935年）被称为日本推理小说的四大奇书之一。\n\n# 厄尔·斯坦利·加德纳\nErle Stanley Gardner（1889年7月17日美国马萨诸塞州马尔登-1970年3月11日加州Temecula）\n\n其他署名:\n- yle Corning\n- A. A. Fair\n- Charles M. Green\n- Grant Holiday\n- Carleton Kendrake\n- Charles J. Kenny\n- Robert Parr\n- Dane Rigley\n- Arthur Mann Sellers\n- harles M. Stanton\n- Les Tillray\n\n类型：\n- 大侦探\n- 私人侦探\n- 硬汉\n- 法庭\n\n主要系列：\n- 佩里·梅森Perry Mason, 1933-1973\n- Doug Selby, D.A., 1937-1949\n- Bertha Cool and Donald Lam, 1939-1970\n\n　　加德纳是查尔斯·华尔特人·加德纳（Charles Walter Gardner）和格蕾丝·阿德尔玛·加德纳（Grace Adelma Gardner）之子。他的父亲是一位工程师，因为工作需要到处出差，他将全家搬到西海岸，在加德纳十岁的时候先是搬到了俄勒冈州，1902年又搬到加州奥维尔（Oroville）。加德纳对加州十分喜欢，虽然成年之后他游历四方，但是他还是将加州作为自己的家，并且作为自己笔下人物的背景。\n\n　　加德纳个性独立，勤奋，有想象力，二十一岁时他成为了一名律师，但是他没有进入法律学校而是在律师事务所自学以及担任律师助手，最后通过律师考试。他在洛杉矶西北部的文图拉县开业，很快他因为精明、足智多谋而赢得了声誉，他帮助很多看似不可能打赢官司的委托人获胜。\n\n　　加德纳喜欢户外活动，比如打猎，钓鱼、射箭，他成为作家之前他试过许多不同的生意，三十四岁的时候，他将自己的第一篇小说卖给了一家廉价杂志。他并不是一位有天赋的作家，但是他通过研究那些成功作家的作品以及编辑的意见而进步神速。二三十年代，他为廉价杂志创作了大量短篇小说，并且塑造了一大堆人物。1933年，他出版了第一部长篇小说，主角便是日后著名律师侦探佩里·梅森。那时，他创作速度惊人，每三天便能完成一部一万单词的中篇小说，以至于他无法依靠打自己要而使用口述机，因此他雇请了几位秘书，轮班根据他的口述完成稿件。\n\n　　二次大战之后，加德纳的名声让他的创作数量减少了，因为他涉足其他的事务，包括“最高上诉法院”（Court of Last Resort），这是加德纳和他人创立的一家组织，主要是为了增加美国法律的公正性，还有佩里·梅森系列电视片。\n\n　　1912年，加德纳与纳塔利·塔伯特（Natalie Talbert）结婚，1913年他们生下女儿纳塔利·格蕾丝·加德纳（Natalie Grace Gardner）。1935年，两人分居，不过他们还是朋友，也并未离婚。加德纳一直赡养他的妻子，直到1968年妻子去世。同年，加德纳与他长期以来的秘书艾格尼斯·简·贝斯尔（Agnes Jean Bethell）结婚，贝斯尔被认为是梅森的秘书德拉·斯特里特（Della Street）的原型。1962年，他获得美国侦探作家协会（MWA）大师奖。1970年，加德纳因为癌症去世。\n# 弗瑞德里克·布朗\n　　弗瑞德里克·布朗：Fredric Brown（1906年10月29日美国俄亥俄州辛辛那提-1972年3月11日亚利桑那州图森）\n\n　　类型：私人侦探；硬汉\n\n　　主要系列：Ed and Am Hunter, 1947-1963\n\n　　布朗十多岁的时候父母相继去世，不得不自谋生路。二十年代，他进入汉诺威学院（Hanover College）和辛辛那提大学（Cincinnati University）学习。他于1929年结婚，并且搬到威斯康星州密尔沃基，在那里他为几家出版社担任校对，直到在《密尔沃基期刊》（Milwaukee Journal）找到一份固定的工作。他呆在这家杂志一直到1947年，接着搬到纽约，在一家廉价杂志集团担任编辑。\n\n　　1938年，布朗发表了第一篇小说《镍币之月》（The Moon for a Nickel），刊登在《斯崔特和史密斯侦探小说杂志》（Street and Smith's Detective Story Magazine）。从那时开始，布朗成为廉价杂志的固定投稿者，在不同类型的杂志上发表，包括《一角侦探》（Dime Mystery）、《星球故事》（Planet Stories）、《怪异故事》（Weird Tales）。他在廉价小说读者中拥有一大堆拥趸。\n\n　　布朗第一次普遍的成功是因为发表了第一部长篇小说《传说中的高级夜总会》（The Fabulous Clipjoint，1947），这部作品的主角是一对叔侄组合艾德和阿姆·亨特（Ed and Am Hunter）。他还因此赢得了1984年的埃德加奖。布朗的的经济状况得到改善，他搬到纽约成为一名高级编辑。同时他和第一任妻子海伦（Helen）离婚。\n\n　　他接下来的侦探小说也非常成功，包括《死亡套环》（The Dead Ringer，1948）、《尖叫的米米》（The Screaming Mimi，1949）。1949年末，他遇到了伊丽莎白·查利尔（Elizabeth Charlier），二人结婚后搬到新墨西哥州的陶斯。廉价小说集团倒闭之后，布朗成为了一名受欢迎的犯罪小说家。随着电视在娱乐业中所占的份量越来越重，布朗也将他的小说改编为电视片。\n\n　　布朗的身体一直不好，而且他偶尔酗酒对身体健康更是无益。因为呼吸疾病，布朗和妻子在1954年搬到亚利桑那州图森。尽管他为一些报酬很高的杂志写作，诸如《花花公子》（Playboy），但是他已经在走下坡。他的最后一部长篇小说《墨菲太太的内衣裤》（Mrs. Murphy’s Underpants，1963）已经不是水准之作。他还写了一些短篇小说，但是他全职写作的时代已经过去。1972年，布朗因为肺气肿去世。(ellry)\n\n","slug":"mystery0311","published":1,"updated":"2022-03-11T09:00:47.523Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl0t0rrlj001z4ctugy5egsut","content":"<p>今天是3月11日，在推理界，今天在历史上的意义：</p>\n<ul>\n<li>《东方杂志》（中国）第一期开始连载连载《毒美人》118周年</li>\n<li>小说林社（中国）出版《福尔摩斯再生案》第一册118周年</li>\n<li>克里斯蒂安娜·布兰德（英国）诞辰115周年</li>\n<li>梦野久作（日本）逝世86周年</li>\n<li>厄尔·斯坦利·加德纳（美国）逝世52周年</li>\n<li>弗瑞德里克·布朗（美国）逝世50周年</li>\n</ul>\n<h1 id=\"克里斯蒂安娜·布兰德\"><a href=\"#克里斯蒂安娜·布兰德\" class=\"headerlink\" title=\"克里斯蒂安娜·布兰德\"></a>克里斯蒂安娜·布兰德</h1><p>　　克里斯蒂安娜·布兰德（Christianna Brand，1907.3.11－1988.12.17），英国侦探小说作家，儿童文学作家。</p>\n<p>　　克里斯蒂安娜·布兰德1907年出生于马来亚，原名为玛丽·克里斯蒂安娜·刘易斯（Mary Christianna Lewis），早年在印度生活。她从事过很多工作，包括模特、舞蹈演员、店员和家庭教师。</p>\n<p>　　1941年，她创作了第一本以查尔斯·沃斯为主角的侦探小说《高跟鞋之死》（Death in High Heels），当时她还只是一个销售员。同年，她笔下的英国著名探长考克瑞尔在《晕头转向》（Heads You Lose）一书中初次登场，之后考克瑞尔先后七次出现在布兰德的作品中，考克瑞尔探长是她塑造最成功的侦探形象，以他为主角的侦探小说《绿色危机》（Green for Danger）也是布兰德最有名的小说。这部作品描写的是二次大战中一所医院中发生的故事，一名邮递员被送往手术室，不料却因麻醉过度而死。考克瑞尔探长亲自赶来调查，却不料护士长玛丽恩·贝茨也惨遭杀害……《绿色危机》自1944年出版之后，至今仍不断再版。1946年，《绿色危机》被Eagle－Lion公司拍成电影，由阿拉斯泰尔·希姆饰演探长，获得巨大成功。</p>\n<p>　　由于《绿色危机》的成功，1946年，克里斯蒂安娜·布兰德加入了英国侦探作家俱乐部，自此她的创作生涯一发不可收拾，接连发表了多部小说。</p>\n<p>　　上世纪50年代末开始，克里斯蒂安娜·布兰德开始专注于撰写各种不同类型的作品和短篇小说。她曾获得三次埃德加奖提名：短篇小说《杯中的毒药》（Poison in the Cup）（1969年2月，《埃勒里·奎因神秘杂志》）、《Twist for Twist》（1967年5月，《埃勒里·奎因神秘杂志》）以及一个有关苏格兰谋杀案的《天堂知道谁》（Heaven Knows Who）（1960年）。</p>\n<p>　　1972到1973年间，克里斯蒂安娜·布兰德以其杰出的成就，被推选为英国犯罪作家协会主席。</p>\n<p>　　克里斯蒂安娜·布兰德曾经使用过的笔名还有玛丽·安·阿希、安娜贝尔·琼斯、玛丽·罗兰和查娜·汤姆森。她的作品被称为“黄金时代最后的侦探小说”，克里斯蒂安娜·布兰德的作品善于在活泼、幽默的情节以及吸引人的诡计中寻求平衡，她在1988年去世，享年81岁。</p>\n<h1 id=\"梦野久作\"><a href=\"#梦野久作\" class=\"headerlink\" title=\"梦野久作\"></a>梦野久作</h1><p>　　日本著名幻想文学作家、变格派推理大师。</p>\n<p>　　本名杉山直树，后改名杉山泰道。</p>\n<p>　　曾用笔名有海若蓝平、香俱土三鸟、土原耕作、萌圆、杉山萌圆、沙门萌圆、萌圆山人、萌圆生、萌圆泰道、朴平、白木朴平、三鸟山人、香椎村人、青杉居士、外人某氏、钝骨生、TS生、T生等。</p>\n<p>　　一九二六年，梦野久作在《妖鼓》投稿前，曾拿给父亲过目，父亲看过后说“就像梦野久作所写的小说”。 所谓“梦野久作”是博多地区的方言，意指精神恍惚、成天做白日梦的人。曾有数十个笔名的他自此以后便固定使用了这四个字为其笔名。</p>\n<p>　　梦野久作有“妖怪作家”之称，其所属的“变格派”讲究人性的怪奇、丑恶、战栗心理的唯美面，使得推理小说充满了文学艺术气息。其代表作《脑髓地狱》（1935年）被称为日本推理小说的四大奇书之一。</p>\n<h2 id=\"生平年表\"><a href=\"#生平年表\" class=\"headerlink\" title=\"生平年表\"></a>生平年表</h2><p>　　一八八九年一月四日生于九州福冈市。父亲杉山茂丸是右派教父、玄洋社头目头山满的盟友。直树出生後就由祖父母养育。</p>\n<p>　　一八九一年开始学习四书诵读。亲生母亲与父亲离婚另嫁高桥家。</p>\n<p>　　一八九二年开始学习能乐。熟读四书，遂有神童之称。</p>\n<p>　　一八九五年，进入小学就读，身体虚弱瘦小，多由祖父教授学习。求知欲旺盛，具有绘画方面的天赋。</p>\n<p>　　一八九九年，大名寻常小学毕业。进入高等小学就学。</p>\n<p>　　一九零二年三月二十日，祖父因中风并发肺炎去世。</p>\n<p>　　一九零三年三月，高等小学毕业，四月进入福冈县立中学修猷馆就读。</p>\n<p>　　一九零八年三月福冈县立修猷馆中学毕业，十二月一日，以一年志愿兵身份入近卫步兵第一连队，在部队中担任小队长，颇受士兵们的信赖。</p>\n<p>　　一九一零年，退伍之后，进入中央大学附属补习班，准备入学考。<br>　　<br>　　一九一一年，进入庆应大学文科系就读。</p>\n<p>　　一九一二年，同父异母之弟五郎去世。二月二十六日，奉命成为陆军步兵少尉。十一月八日，继祖母去世。</p>\n<p>　　一九一三年，因为弟弟的猝死，父亲遂令其从庆应大学休学。三月时，依父亲之命前往福冈县糟屋郡香椎村唐原经营果园。</p>\n<p>　　一九一五年，于东京本乡的喜福寺剃发为僧。将直树改名为泰道。</p>\n<p>　　一九一六年，以行脚僧身份从京都走到吉野山。</p>\n<p>　　一九一七年被父亲叫回农园，还俗，继承杉山家业。从本年起，在父亲所组织的右派团体台华社机关杂志《黑白》发表有关谣曲与时事的评论之外，还撰写小说。这段期间使用的笔名有沙门萌圆、杉山萌圆、萌圆泰道等。</p>\n<p>　　一九一八年二月二十五日，与镰田昌一的女儿阿仓结婚。连载《冀望日本青年》等。</p>\n<p>　　一九一九年，长男龙丸出生。成为九州岛日报记者，开始于家庭专栏发表童话至一九二六年。</p>\n<p>　　一九二零年，三十一岁，在父亲所投资之九州日报社当社会新闻记者，一九二二年在该报家庭版陆续发表童谣，所使用的笔名有梅若蓝平、香具上三鸟、上原耕作、三鸟山人等。并以萌圆泰道之笔名，将《吴井娘次》改名为《蜡人偶》连载。</p>\n<p>　　一九二一年，移居福冈市荒户町。次男铁儿出生。</p>\n<p>　　一九二二年，以杉山萌圆为笔名出版《白发小僧》长篇童话集。</p>\n<p>　　一九二三年，九月因关东大地震，以九州岛日报社震灾特派记者身份发表《火烧后细见记》与《东京震灾素描》。</p>\n<p>　　一九二四年，辞去九州岛日报社的工作，十月，以杉山泰道名义之《侏儒》，应徵博文馆的推理小说征选活动，获得佳作奖（没出版）。</p>\n<p>　　一九二五年四月，再度任职九州日报社。三男参绿出生。</p>\n<p>　　一九二六年是梦野久作生涯的转换年，正月开始撰写《脑髓地狱》初稿《狂人的解放治疗》，五月辞去报社工作，十月以初次使用梦野久作之笔名，《新青年》之侦探小说徵文之《妖鼓》，入选二等奖（没有一等奖），由此篇被公认之迟来的处女作，梦野久作登上推理文坛。其笔名是取自福冈博多地区的方言，指精神恍惚，经常寻找梦幻的人。</p>\n<p>　　一九二七年二月，停止创作《狂人的解放治疗》初稿，创作短篇连载《乡村事件》。</p>\n<p>　　一九二八年，陆续发表《人脸》、《死后之恋》、《瓶装地狱》等。</p>\n<p>　　一九二九年，出版《梦野久作集》。陆续发表《押绘的奇迹》、《铁锤》、《飞翔于空中的洋伞》。</p>\n<p>　　一九三零年五月，奉命担任妻子老家的福冈市黑门邮局局长。陆续发表《复仇》、《童贞》。</p>\n<p>　　一九三一年，陆续发表《椰果》、《犬神博士》、《自白心理》等。</p>\n<p>　　一九三二年，出版《押绘的奇迹》。陆续发表《斜坑》、《幽灵与推进机》、《狂气地狱》。</p>\n<p>　　一九三三年，一月出版《暗黑公使》，四月出版《冰涯》，五月出版《瓶装地狱》，陆续发表《不冒烟的烟囱》、《爆弹太平记》、《白菊》等。</p>\n<p>　　一九三四年，八月辞去黑门邮局局长一职。陆续发表《名君臣之》、《山羊胡编辑长》、《难船小僧》、《杀人直播》、《木魂》、《少女地狱》等。</p>\n<p>　　一九三五年，一月出版《脑髓地狱》。三月出版《梅津只园翁传》。七月十九日，父亲茂丸因脑溢血猝死于曲町自宅（享年七十二岁）。十月，借帮父亲举行葬礼之便，携妻子至日本各地旅行。十二月，出版《近世快人传》。陆续发表《微笑哑女》、《超人胡夜博士》、《二重心脏》。</p>\n<p>　　一九三六年，二月上京整理父亲遗物，遭遇“二二六”事件。陆续发表《人肉香肠》、《恶魔祈祷书》。三月出版《少女地狱》，十一日与访客谈话中猝死于东京（死因不详），得年四十七岁。</p>\n<p>　　梦野久作有“妖怪作家”之称，其所属的“变格派”讲究人性的怪奇、丑恶、战栗心理的唯美面，使得推理小说充满了文学艺术气息。其代表作《脑髓地狱》（1935年）被称为日本推理小说的四大奇书之一。</p>\n<h1 id=\"厄尔·斯坦利·加德纳\"><a href=\"#厄尔·斯坦利·加德纳\" class=\"headerlink\" title=\"厄尔·斯坦利·加德纳\"></a>厄尔·斯坦利·加德纳</h1><p>Erle Stanley Gardner（1889年7月17日美国马萨诸塞州马尔登-1970年3月11日加州Temecula）</p>\n<p>其他署名:</p>\n<ul>\n<li>yle Corning</li>\n<li>A. A. Fair</li>\n<li>Charles M. Green</li>\n<li>Grant Holiday</li>\n<li>Carleton Kendrake</li>\n<li>Charles J. Kenny</li>\n<li>Robert Parr</li>\n<li>Dane Rigley</li>\n<li>Arthur Mann Sellers</li>\n<li>harles M. Stanton</li>\n<li>Les Tillray</li>\n</ul>\n<p>类型：</p>\n<ul>\n<li>大侦探</li>\n<li>私人侦探</li>\n<li>硬汉</li>\n<li>法庭</li>\n</ul>\n<p>主要系列：</p>\n<ul>\n<li>佩里·梅森Perry Mason, 1933-1973</li>\n<li>Doug Selby, D.A., 1937-1949</li>\n<li>Bertha Cool and Donald Lam, 1939-1970</li>\n</ul>\n<p>　　加德纳是查尔斯·华尔特人·加德纳（Charles Walter Gardner）和格蕾丝·阿德尔玛·加德纳（Grace Adelma Gardner）之子。他的父亲是一位工程师，因为工作需要到处出差，他将全家搬到西海岸，在加德纳十岁的时候先是搬到了俄勒冈州，1902年又搬到加州奥维尔（Oroville）。加德纳对加州十分喜欢，虽然成年之后他游历四方，但是他还是将加州作为自己的家，并且作为自己笔下人物的背景。</p>\n<p>　　加德纳个性独立，勤奋，有想象力，二十一岁时他成为了一名律师，但是他没有进入法律学校而是在律师事务所自学以及担任律师助手，最后通过律师考试。他在洛杉矶西北部的文图拉县开业，很快他因为精明、足智多谋而赢得了声誉，他帮助很多看似不可能打赢官司的委托人获胜。</p>\n<p>　　加德纳喜欢户外活动，比如打猎，钓鱼、射箭，他成为作家之前他试过许多不同的生意，三十四岁的时候，他将自己的第一篇小说卖给了一家廉价杂志。他并不是一位有天赋的作家，但是他通过研究那些成功作家的作品以及编辑的意见而进步神速。二三十年代，他为廉价杂志创作了大量短篇小说，并且塑造了一大堆人物。1933年，他出版了第一部长篇小说，主角便是日后著名律师侦探佩里·梅森。那时，他创作速度惊人，每三天便能完成一部一万单词的中篇小说，以至于他无法依靠打自己要而使用口述机，因此他雇请了几位秘书，轮班根据他的口述完成稿件。</p>\n<p>　　二次大战之后，加德纳的名声让他的创作数量减少了，因为他涉足其他的事务，包括“最高上诉法院”（Court of Last Resort），这是加德纳和他人创立的一家组织，主要是为了增加美国法律的公正性，还有佩里·梅森系列电视片。</p>\n<p>　　1912年，加德纳与纳塔利·塔伯特（Natalie Talbert）结婚，1913年他们生下女儿纳塔利·格蕾丝·加德纳（Natalie Grace Gardner）。1935年，两人分居，不过他们还是朋友，也并未离婚。加德纳一直赡养他的妻子，直到1968年妻子去世。同年，加德纳与他长期以来的秘书艾格尼斯·简·贝斯尔（Agnes Jean Bethell）结婚，贝斯尔被认为是梅森的秘书德拉·斯特里特（Della Street）的原型。1962年，他获得美国侦探作家协会（MWA）大师奖。1970年，加德纳因为癌症去世。</p>\n<h1 id=\"弗瑞德里克·布朗\"><a href=\"#弗瑞德里克·布朗\" class=\"headerlink\" title=\"弗瑞德里克·布朗\"></a>弗瑞德里克·布朗</h1><p>　　弗瑞德里克·布朗：Fredric Brown（1906年10月29日美国俄亥俄州辛辛那提-1972年3月11日亚利桑那州图森）</p>\n<p>　　类型：私人侦探；硬汉</p>\n<p>　　主要系列：Ed and Am Hunter, 1947-1963</p>\n<p>　　布朗十多岁的时候父母相继去世，不得不自谋生路。二十年代，他进入汉诺威学院（Hanover College）和辛辛那提大学（Cincinnati University）学习。他于1929年结婚，并且搬到威斯康星州密尔沃基，在那里他为几家出版社担任校对，直到在《密尔沃基期刊》（Milwaukee Journal）找到一份固定的工作。他呆在这家杂志一直到1947年，接着搬到纽约，在一家廉价杂志集团担任编辑。</p>\n<p>　　1938年，布朗发表了第一篇小说《镍币之月》（The Moon for a Nickel），刊登在《斯崔特和史密斯侦探小说杂志》（Street and Smith’s Detective Story Magazine）。从那时开始，布朗成为廉价杂志的固定投稿者，在不同类型的杂志上发表，包括《一角侦探》（Dime Mystery）、《星球故事》（Planet Stories）、《怪异故事》（Weird Tales）。他在廉价小说读者中拥有一大堆拥趸。</p>\n<p>　　布朗第一次普遍的成功是因为发表了第一部长篇小说《传说中的高级夜总会》（The Fabulous Clipjoint，1947），这部作品的主角是一对叔侄组合艾德和阿姆·亨特（Ed and Am Hunter）。他还因此赢得了1984年的埃德加奖。布朗的的经济状况得到改善，他搬到纽约成为一名高级编辑。同时他和第一任妻子海伦（Helen）离婚。</p>\n<p>　　他接下来的侦探小说也非常成功，包括《死亡套环》（The Dead Ringer，1948）、《尖叫的米米》（The Screaming Mimi，1949）。1949年末，他遇到了伊丽莎白·查利尔（Elizabeth Charlier），二人结婚后搬到新墨西哥州的陶斯。廉价小说集团倒闭之后，布朗成为了一名受欢迎的犯罪小说家。随着电视在娱乐业中所占的份量越来越重，布朗也将他的小说改编为电视片。</p>\n<p>　　布朗的身体一直不好，而且他偶尔酗酒对身体健康更是无益。因为呼吸疾病，布朗和妻子在1954年搬到亚利桑那州图森。尽管他为一些报酬很高的杂志写作，诸如《花花公子》（Playboy），但是他已经在走下坡。他的最后一部长篇小说《墨菲太太的内衣裤》（Mrs. Murphy’s Underpants，1963）已经不是水准之作。他还写了一些短篇小说，但是他全职写作的时代已经过去。1972年，布朗因为肺气肿去世。(ellry)</p>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.gitee.io/zh-CN/","avatar":"https://element-plus.gitee.io/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"}}},"cover":"https://file.huangge1199.cn/group1/M00/00/00/CgAYB2HzmTKAcuJeAAKgw-sbfmQ23.jpeg","excerpt":"","more":"<p>今天是3月11日，在推理界，今天在历史上的意义：</p>\n<ul>\n<li>《东方杂志》（中国）第一期开始连载连载《毒美人》118周年</li>\n<li>小说林社（中国）出版《福尔摩斯再生案》第一册118周年</li>\n<li>克里斯蒂安娜·布兰德（英国）诞辰115周年</li>\n<li>梦野久作（日本）逝世86周年</li>\n<li>厄尔·斯坦利·加德纳（美国）逝世52周年</li>\n<li>弗瑞德里克·布朗（美国）逝世50周年</li>\n</ul>\n<h1 id=\"克里斯蒂安娜·布兰德\"><a href=\"#克里斯蒂安娜·布兰德\" class=\"headerlink\" title=\"克里斯蒂安娜·布兰德\"></a>克里斯蒂安娜·布兰德</h1><p>　　克里斯蒂安娜·布兰德（Christianna Brand，1907.3.11－1988.12.17），英国侦探小说作家，儿童文学作家。</p>\n<p>　　克里斯蒂安娜·布兰德1907年出生于马来亚，原名为玛丽·克里斯蒂安娜·刘易斯（Mary Christianna Lewis），早年在印度生活。她从事过很多工作，包括模特、舞蹈演员、店员和家庭教师。</p>\n<p>　　1941年，她创作了第一本以查尔斯·沃斯为主角的侦探小说《高跟鞋之死》（Death in High Heels），当时她还只是一个销售员。同年，她笔下的英国著名探长考克瑞尔在《晕头转向》（Heads You Lose）一书中初次登场，之后考克瑞尔先后七次出现在布兰德的作品中，考克瑞尔探长是她塑造最成功的侦探形象，以他为主角的侦探小说《绿色危机》（Green for Danger）也是布兰德最有名的小说。这部作品描写的是二次大战中一所医院中发生的故事，一名邮递员被送往手术室，不料却因麻醉过度而死。考克瑞尔探长亲自赶来调查，却不料护士长玛丽恩·贝茨也惨遭杀害……《绿色危机》自1944年出版之后，至今仍不断再版。1946年，《绿色危机》被Eagle－Lion公司拍成电影，由阿拉斯泰尔·希姆饰演探长，获得巨大成功。</p>\n<p>　　由于《绿色危机》的成功，1946年，克里斯蒂安娜·布兰德加入了英国侦探作家俱乐部，自此她的创作生涯一发不可收拾，接连发表了多部小说。</p>\n<p>　　上世纪50年代末开始，克里斯蒂安娜·布兰德开始专注于撰写各种不同类型的作品和短篇小说。她曾获得三次埃德加奖提名：短篇小说《杯中的毒药》（Poison in the Cup）（1969年2月，《埃勒里·奎因神秘杂志》）、《Twist for Twist》（1967年5月，《埃勒里·奎因神秘杂志》）以及一个有关苏格兰谋杀案的《天堂知道谁》（Heaven Knows Who）（1960年）。</p>\n<p>　　1972到1973年间，克里斯蒂安娜·布兰德以其杰出的成就，被推选为英国犯罪作家协会主席。</p>\n<p>　　克里斯蒂安娜·布兰德曾经使用过的笔名还有玛丽·安·阿希、安娜贝尔·琼斯、玛丽·罗兰和查娜·汤姆森。她的作品被称为“黄金时代最后的侦探小说”，克里斯蒂安娜·布兰德的作品善于在活泼、幽默的情节以及吸引人的诡计中寻求平衡，她在1988年去世，享年81岁。</p>\n<h1 id=\"梦野久作\"><a href=\"#梦野久作\" class=\"headerlink\" title=\"梦野久作\"></a>梦野久作</h1><p>　　日本著名幻想文学作家、变格派推理大师。</p>\n<p>　　本名杉山直树，后改名杉山泰道。</p>\n<p>　　曾用笔名有海若蓝平、香俱土三鸟、土原耕作、萌圆、杉山萌圆、沙门萌圆、萌圆山人、萌圆生、萌圆泰道、朴平、白木朴平、三鸟山人、香椎村人、青杉居士、外人某氏、钝骨生、TS生、T生等。</p>\n<p>　　一九二六年，梦野久作在《妖鼓》投稿前，曾拿给父亲过目，父亲看过后说“就像梦野久作所写的小说”。 所谓“梦野久作”是博多地区的方言，意指精神恍惚、成天做白日梦的人。曾有数十个笔名的他自此以后便固定使用了这四个字为其笔名。</p>\n<p>　　梦野久作有“妖怪作家”之称，其所属的“变格派”讲究人性的怪奇、丑恶、战栗心理的唯美面，使得推理小说充满了文学艺术气息。其代表作《脑髓地狱》（1935年）被称为日本推理小说的四大奇书之一。</p>\n<h2 id=\"生平年表\"><a href=\"#生平年表\" class=\"headerlink\" title=\"生平年表\"></a>生平年表</h2><p>　　一八八九年一月四日生于九州福冈市。父亲杉山茂丸是右派教父、玄洋社头目头山满的盟友。直树出生後就由祖父母养育。</p>\n<p>　　一八九一年开始学习四书诵读。亲生母亲与父亲离婚另嫁高桥家。</p>\n<p>　　一八九二年开始学习能乐。熟读四书，遂有神童之称。</p>\n<p>　　一八九五年，进入小学就读，身体虚弱瘦小，多由祖父教授学习。求知欲旺盛，具有绘画方面的天赋。</p>\n<p>　　一八九九年，大名寻常小学毕业。进入高等小学就学。</p>\n<p>　　一九零二年三月二十日，祖父因中风并发肺炎去世。</p>\n<p>　　一九零三年三月，高等小学毕业，四月进入福冈县立中学修猷馆就读。</p>\n<p>　　一九零八年三月福冈县立修猷馆中学毕业，十二月一日，以一年志愿兵身份入近卫步兵第一连队，在部队中担任小队长，颇受士兵们的信赖。</p>\n<p>　　一九一零年，退伍之后，进入中央大学附属补习班，准备入学考。<br>　　<br>　　一九一一年，进入庆应大学文科系就读。</p>\n<p>　　一九一二年，同父异母之弟五郎去世。二月二十六日，奉命成为陆军步兵少尉。十一月八日，继祖母去世。</p>\n<p>　　一九一三年，因为弟弟的猝死，父亲遂令其从庆应大学休学。三月时，依父亲之命前往福冈县糟屋郡香椎村唐原经营果园。</p>\n<p>　　一九一五年，于东京本乡的喜福寺剃发为僧。将直树改名为泰道。</p>\n<p>　　一九一六年，以行脚僧身份从京都走到吉野山。</p>\n<p>　　一九一七年被父亲叫回农园，还俗，继承杉山家业。从本年起，在父亲所组织的右派团体台华社机关杂志《黑白》发表有关谣曲与时事的评论之外，还撰写小说。这段期间使用的笔名有沙门萌圆、杉山萌圆、萌圆泰道等。</p>\n<p>　　一九一八年二月二十五日，与镰田昌一的女儿阿仓结婚。连载《冀望日本青年》等。</p>\n<p>　　一九一九年，长男龙丸出生。成为九州岛日报记者，开始于家庭专栏发表童话至一九二六年。</p>\n<p>　　一九二零年，三十一岁，在父亲所投资之九州日报社当社会新闻记者，一九二二年在该报家庭版陆续发表童谣，所使用的笔名有梅若蓝平、香具上三鸟、上原耕作、三鸟山人等。并以萌圆泰道之笔名，将《吴井娘次》改名为《蜡人偶》连载。</p>\n<p>　　一九二一年，移居福冈市荒户町。次男铁儿出生。</p>\n<p>　　一九二二年，以杉山萌圆为笔名出版《白发小僧》长篇童话集。</p>\n<p>　　一九二三年，九月因关东大地震，以九州岛日报社震灾特派记者身份发表《火烧后细见记》与《东京震灾素描》。</p>\n<p>　　一九二四年，辞去九州岛日报社的工作，十月，以杉山泰道名义之《侏儒》，应徵博文馆的推理小说征选活动，获得佳作奖（没出版）。</p>\n<p>　　一九二五年四月，再度任职九州日报社。三男参绿出生。</p>\n<p>　　一九二六年是梦野久作生涯的转换年，正月开始撰写《脑髓地狱》初稿《狂人的解放治疗》，五月辞去报社工作，十月以初次使用梦野久作之笔名，《新青年》之侦探小说徵文之《妖鼓》，入选二等奖（没有一等奖），由此篇被公认之迟来的处女作，梦野久作登上推理文坛。其笔名是取自福冈博多地区的方言，指精神恍惚，经常寻找梦幻的人。</p>\n<p>　　一九二七年二月，停止创作《狂人的解放治疗》初稿，创作短篇连载《乡村事件》。</p>\n<p>　　一九二八年，陆续发表《人脸》、《死后之恋》、《瓶装地狱》等。</p>\n<p>　　一九二九年，出版《梦野久作集》。陆续发表《押绘的奇迹》、《铁锤》、《飞翔于空中的洋伞》。</p>\n<p>　　一九三零年五月，奉命担任妻子老家的福冈市黑门邮局局长。陆续发表《复仇》、《童贞》。</p>\n<p>　　一九三一年，陆续发表《椰果》、《犬神博士》、《自白心理》等。</p>\n<p>　　一九三二年，出版《押绘的奇迹》。陆续发表《斜坑》、《幽灵与推进机》、《狂气地狱》。</p>\n<p>　　一九三三年，一月出版《暗黑公使》，四月出版《冰涯》，五月出版《瓶装地狱》，陆续发表《不冒烟的烟囱》、《爆弹太平记》、《白菊》等。</p>\n<p>　　一九三四年，八月辞去黑门邮局局长一职。陆续发表《名君臣之》、《山羊胡编辑长》、《难船小僧》、《杀人直播》、《木魂》、《少女地狱》等。</p>\n<p>　　一九三五年，一月出版《脑髓地狱》。三月出版《梅津只园翁传》。七月十九日，父亲茂丸因脑溢血猝死于曲町自宅（享年七十二岁）。十月，借帮父亲举行葬礼之便，携妻子至日本各地旅行。十二月，出版《近世快人传》。陆续发表《微笑哑女》、《超人胡夜博士》、《二重心脏》。</p>\n<p>　　一九三六年，二月上京整理父亲遗物，遭遇“二二六”事件。陆续发表《人肉香肠》、《恶魔祈祷书》。三月出版《少女地狱》，十一日与访客谈话中猝死于东京（死因不详），得年四十七岁。</p>\n<p>　　梦野久作有“妖怪作家”之称，其所属的“变格派”讲究人性的怪奇、丑恶、战栗心理的唯美面，使得推理小说充满了文学艺术气息。其代表作《脑髓地狱》（1935年）被称为日本推理小说的四大奇书之一。</p>\n<h1 id=\"厄尔·斯坦利·加德纳\"><a href=\"#厄尔·斯坦利·加德纳\" class=\"headerlink\" title=\"厄尔·斯坦利·加德纳\"></a>厄尔·斯坦利·加德纳</h1><p>Erle Stanley Gardner（1889年7月17日美国马萨诸塞州马尔登-1970年3月11日加州Temecula）</p>\n<p>其他署名:</p>\n<ul>\n<li>yle Corning</li>\n<li>A. A. Fair</li>\n<li>Charles M. Green</li>\n<li>Grant Holiday</li>\n<li>Carleton Kendrake</li>\n<li>Charles J. Kenny</li>\n<li>Robert Parr</li>\n<li>Dane Rigley</li>\n<li>Arthur Mann Sellers</li>\n<li>harles M. Stanton</li>\n<li>Les Tillray</li>\n</ul>\n<p>类型：</p>\n<ul>\n<li>大侦探</li>\n<li>私人侦探</li>\n<li>硬汉</li>\n<li>法庭</li>\n</ul>\n<p>主要系列：</p>\n<ul>\n<li>佩里·梅森Perry Mason, 1933-1973</li>\n<li>Doug Selby, D.A., 1937-1949</li>\n<li>Bertha Cool and Donald Lam, 1939-1970</li>\n</ul>\n<p>　　加德纳是查尔斯·华尔特人·加德纳（Charles Walter Gardner）和格蕾丝·阿德尔玛·加德纳（Grace Adelma Gardner）之子。他的父亲是一位工程师，因为工作需要到处出差，他将全家搬到西海岸，在加德纳十岁的时候先是搬到了俄勒冈州，1902年又搬到加州奥维尔（Oroville）。加德纳对加州十分喜欢，虽然成年之后他游历四方，但是他还是将加州作为自己的家，并且作为自己笔下人物的背景。</p>\n<p>　　加德纳个性独立，勤奋，有想象力，二十一岁时他成为了一名律师，但是他没有进入法律学校而是在律师事务所自学以及担任律师助手，最后通过律师考试。他在洛杉矶西北部的文图拉县开业，很快他因为精明、足智多谋而赢得了声誉，他帮助很多看似不可能打赢官司的委托人获胜。</p>\n<p>　　加德纳喜欢户外活动，比如打猎，钓鱼、射箭，他成为作家之前他试过许多不同的生意，三十四岁的时候，他将自己的第一篇小说卖给了一家廉价杂志。他并不是一位有天赋的作家，但是他通过研究那些成功作家的作品以及编辑的意见而进步神速。二三十年代，他为廉价杂志创作了大量短篇小说，并且塑造了一大堆人物。1933年，他出版了第一部长篇小说，主角便是日后著名律师侦探佩里·梅森。那时，他创作速度惊人，每三天便能完成一部一万单词的中篇小说，以至于他无法依靠打自己要而使用口述机，因此他雇请了几位秘书，轮班根据他的口述完成稿件。</p>\n<p>　　二次大战之后，加德纳的名声让他的创作数量减少了，因为他涉足其他的事务，包括“最高上诉法院”（Court of Last Resort），这是加德纳和他人创立的一家组织，主要是为了增加美国法律的公正性，还有佩里·梅森系列电视片。</p>\n<p>　　1912年，加德纳与纳塔利·塔伯特（Natalie Talbert）结婚，1913年他们生下女儿纳塔利·格蕾丝·加德纳（Natalie Grace Gardner）。1935年，两人分居，不过他们还是朋友，也并未离婚。加德纳一直赡养他的妻子，直到1968年妻子去世。同年，加德纳与他长期以来的秘书艾格尼斯·简·贝斯尔（Agnes Jean Bethell）结婚，贝斯尔被认为是梅森的秘书德拉·斯特里特（Della Street）的原型。1962年，他获得美国侦探作家协会（MWA）大师奖。1970年，加德纳因为癌症去世。</p>\n<h1 id=\"弗瑞德里克·布朗\"><a href=\"#弗瑞德里克·布朗\" class=\"headerlink\" title=\"弗瑞德里克·布朗\"></a>弗瑞德里克·布朗</h1><p>　　弗瑞德里克·布朗：Fredric Brown（1906年10月29日美国俄亥俄州辛辛那提-1972年3月11日亚利桑那州图森）</p>\n<p>　　类型：私人侦探；硬汉</p>\n<p>　　主要系列：Ed and Am Hunter, 1947-1963</p>\n<p>　　布朗十多岁的时候父母相继去世，不得不自谋生路。二十年代，他进入汉诺威学院（Hanover College）和辛辛那提大学（Cincinnati University）学习。他于1929年结婚，并且搬到威斯康星州密尔沃基，在那里他为几家出版社担任校对，直到在《密尔沃基期刊》（Milwaukee Journal）找到一份固定的工作。他呆在这家杂志一直到1947年，接着搬到纽约，在一家廉价杂志集团担任编辑。</p>\n<p>　　1938年，布朗发表了第一篇小说《镍币之月》（The Moon for a Nickel），刊登在《斯崔特和史密斯侦探小说杂志》（Street and Smith’s Detective Story Magazine）。从那时开始，布朗成为廉价杂志的固定投稿者，在不同类型的杂志上发表，包括《一角侦探》（Dime Mystery）、《星球故事》（Planet Stories）、《怪异故事》（Weird Tales）。他在廉价小说读者中拥有一大堆拥趸。</p>\n<p>　　布朗第一次普遍的成功是因为发表了第一部长篇小说《传说中的高级夜总会》（The Fabulous Clipjoint，1947），这部作品的主角是一对叔侄组合艾德和阿姆·亨特（Ed and Am Hunter）。他还因此赢得了1984年的埃德加奖。布朗的的经济状况得到改善，他搬到纽约成为一名高级编辑。同时他和第一任妻子海伦（Helen）离婚。</p>\n<p>　　他接下来的侦探小说也非常成功，包括《死亡套环》（The Dead Ringer，1948）、《尖叫的米米》（The Screaming Mimi，1949）。1949年末，他遇到了伊丽莎白·查利尔（Elizabeth Charlier），二人结婚后搬到新墨西哥州的陶斯。廉价小说集团倒闭之后，布朗成为了一名受欢迎的犯罪小说家。随着电视在娱乐业中所占的份量越来越重，布朗也将他的小说改编为电视片。</p>\n<p>　　布朗的身体一直不好，而且他偶尔酗酒对身体健康更是无益。因为呼吸疾病，布朗和妻子在1954年搬到亚利桑那州图森。尽管他为一些报酬很高的杂志写作，诸如《花花公子》（Playboy），但是他已经在走下坡。他的最后一部长篇小说《墨菲太太的内衣裤》（Mrs. Murphy’s Underpants，1963）已经不是水准之作。他还写了一些短篇小说，但是他全职写作的时代已经过去。1972年，布朗因为肺气肿去世。(ellry)</p>\n"},{"title":"用nexus部署maven私服","date":"2022-01-12T11:52:40.000Z","cover":"https://blog.huangge1199.cn/post/nexusCreate/bg.jpeg","_content":"# nexus 服务部署\n\n由于本人习惯问题，本次继续用docker部署\n\n## 查找docker镜像\n通过https://hub.docker.com/ 网站查找，选用了官方的sonatype/nexus3\n\n## 拉取镜像\n\n```sh\ndocker pull sonatype/nexus3\n```\n\n![image-20220112202513617](https://blog.huangge1199.cn/post/nexusCreate/image-20220112202513617.png)\n\n## 创建宿主机挂载目录并编写docker-compose.yml\n\n执行命令：\n\n```sh\nvi docker-compose.yml\nmkdir nexus-data\n```\n\ndocker-compose.yml内容：\n\n```sh\nversion: '3'\nservices:\n    nexus3:\n        container_name: nexus3\n        image: sonatype/nexus3:latest\n        environment:\n            - TZ=Asia/Shanghai\n        volumes: \n            - ./nexus-data:/var/nexus-data\n        ports: \n            - 8081:8081\n        restart: always\n```\n\n![image-20220112203927784](https://blog.huangge1199.cn/post/nexusCreate/image-20220112203927784.png)\n\n## 启动容器\n\n```sh\ndocker-compose up -d\n```\n\n![image-20220112204407509](https://blog.huangge1199.cn/post/nexusCreate/image-20220112204407509.png)\n\n## 浏览器验证\n\n浏览器中输入http://IP:8081/，出现下面的页面启动完成\n\n![image-20220112204921432](https://blog.huangge1199.cn/post/nexusCreate/image-20220112204921432.png)\n\n# Nexus 服务的配置\n\n## 浏览器中点击右上角的登录\n\n![image-20220112205557025](https://blog.huangge1199.cn/post/nexusCreate/image-20220112205557025.png)\n\n##  登录\n\n首次登录会提示密码保存在**/nexus-data/admin.password**（位置可能会变，看提示）\n\n![image-20220112214506743](https://blog.huangge1199.cn/post/nexusCreate/image-20220112214506743.png)\n\n由于这个目录我们的docker并没有引出来，所以我们要去docker容器内查看\n\n```sh\ndocker exec -it nexus3 /bin/bash\ncat /nexus-data/admin.password\n```\n\n这地方注意下，cat后不会换行，注意看下密码，用户名是admin，文件中存的就是密码\n\n![image-20220112214220341](https://blog.huangge1199.cn/post/nexusCreate/image-20220112214220341.png)\n\n## 设置密码\n\n登录后：\n\n![image-20220112214637528](https://blog.huangge1199.cn/post/nexusCreate/image-20220112214637528.png)\n\n点击next设置新密码\n\n![image-20220112214717867](https://blog.huangge1199.cn/post/nexusCreate/image-20220112214717867.png)\n\n![image-20220112214820826](https://blog.huangge1199.cn/post/nexusCreate/image-20220112214820826.png)\n\n![image-20220112214831857](https://blog.huangge1199.cn/post/nexusCreate/image-20220112214831857.png)\n\n## 增加阿里云公共仓库\n\n由于默认的里面没有阿里云仓库，用maven的仓库速度慢，所以增加一个阿里云仓库\n\n![image-20220112215708898](https://blog.huangge1199.cn/post/nexusCreate/image-20220112215708898.png)\n\n![image-20220112215809631](https://blog.huangge1199.cn/post/nexusCreate/image-20220112215809631.png)\n\n![image-20220112215951755](https://blog.huangge1199.cn/post/nexusCreate/image-20220112215951755.png)\n\n![image-20220112220131151](https://blog.huangge1199.cn/post/nexusCreate/image-20220112220131151.png)\n\n接下来填写信息：name这个随意填，为了方便记忆我填写的aliyun-public-proxy，下面的配置阿里云地址https://maven.aliyun.com/repository/public，两个填好后点击最下方的Create repository\n\n![image-20220112220511830](https://blog.huangge1199.cn/post/nexusCreate/image-20220112220511830.png)\n\n![image-20220112220741095](https://blog.huangge1199.cn/post/nexusCreate/image-20220112220741095.png)\n\n## 统一私服\n\n- 编辑**maven-public**\n\n![image-20220112221401367](https://blog.huangge1199.cn/post/nexusCreate/image-20220112221401367.png)\n\n- 将刚刚的aliyun-public-proxy放入 **group** 中，并调整优先级，然后保存\n\n![image-20220112221517343](https://blog.huangge1199.cn/post/nexusCreate/image-20220112221517343.png)\n\n![image-20220112221637473](https://blog.huangge1199.cn/post/nexusCreate/image-20220112221637473.png)\n\n## 查看私服地址\n\n回到上一个页面，点击copy，弹出来的地址就是私服地址\n\n![image-20220112221849871](https://blog.huangge1199.cn/post/nexusCreate/image-20220112221849871.png)\n\n# 使用私服\n\n注：maven地址：E:\\maven\\apache-maven-3.6.3\n\n## maven中setting.xml 文件配置\n\n- 下载依赖\n\n  找到mirrors位置，并将其标签内容修改如下\n\n  ```xml\n  <mirrors>\n    <!-- mirror\n     | Specifies a repository mirror site to use instead of a given repository. The repository that\n     | this mirror serves has an ID that matches the mirrorOf element of this mirror. IDs are used\n     | for inheritance and direct lookup purposes, and must be unique across the set of mirrors.\n     |\n    <mirror>\n      <id>mirrorId</id>\n      <mirrorOf>repositoryId</mirrorOf>\n      <name>Human Readable Name for this Mirror.</name>\n      <url>http://my.repository.com/repo/path</url>\n    </mirror>\n     -->\n  \t<mirror>\n      <!--该镜像的唯一标识符。id用来区分不同的mirror元素。 -->\n      <id>maven-public</id>\n      <!--镜像名称 -->\n      <name>maven-public</name>\n      <!--*指的是访问任何仓库都使用我们的私服-->\n      <mirrorOf>*</mirrorOf>\n      <!--该镜像的URL。构建系统会优先考虑使用该URL，而非使用默认的服务器URL。 -->\n      <url>http://192.168.1.187:8081/repository/maven-public/</url>     \n    </mirror>\n  </mirrors>\n  ```\n\n- 发布依赖\n\n  找到servers位置，并将其标签内容修改如下\n\n  ```xml\n  <servers>\n    <!-- server\n     | Specifies the authentication information to use when connecting to a particular server, identified by\n     | a unique name within the system (referred to by the 'id' attribute below).\n     |\n     | NOTE: You should either specify username/password OR privateKey/passphrase, since these pairings are\n     |       used together.\n     |\n    <server>\n      <id>deploymentRepo</id>\n      <username>repouser</username>\n      <password>repopwd</password>\n    </server>\n    -->\n    <!-- Another sample, using keys to authenticate.\n    <server>\n      <id>siteServer</id>\n      <privateKey>/path/to/private/key</privateKey>\n      <passphrase>optional; leave empty if not used.</passphrase>\n    </server>\n    -->\n    <server>\n        <id>releases</id>\n        <username>admin</username>\n        <password>123456</password>\n    </server>\n    <server>\n        <id>snapshots</id>\n        <username>admin</username>\n        <password>123456</password>\n    </server>\n  </servers>\n  ```\n\n## 新建maven项目\n\n我这边建了一个Springboot项目\n\n![image-20220112223312451](https://blog.huangge1199.cn/post/nexusCreate/image-20220112223312451.png)\n\n设置maven路径\n\n![image-20220112224909515](https://blog.huangge1199.cn/post/nexusCreate/image-20220112224909515.png)\n\n## 发布依赖\n\n1. 项目pom中添加 **distributionManagement** 节点\n\n   ```xml\n   <distributionManagement>\n       <repository>\n           <id>releases</id>\n           <name>Releases</name>\n           <url>http://192.168.1.187:8081/repository/maven-releases/</url>\n       </repository>\n       <snapshotRepository>\n           <id>snapshots</id>\n           <name>Snapshot</name>\n           <url>http://192.168.1.187:8081/repository/maven-snapshots/</url>\n       </snapshotRepository>\n   </distributionManagement>\n   ```\n\n   注：**repository** 里的 **id** 需要和上一步里的 **server id** 名称保持一致。\n\n2. 执行 **mvn deploy** 命令发布：\n\n   ![image-20220112230213213](https://blog.huangge1199.cn/post/nexusCreate/image-20220112230213213.png)\n\n3. 查看网页，是否部署成功\n\n   注：\n\n   - 若项目版本号末尾带有 **-SNAPSHOT**，则会发布到 **snapshots** 快照版本仓库\n   - 若项目版本号末尾带有 **-RELEASES** 或什么都不带，则会发布到 **releases** 正式版本仓库\n\n   ![image-20220112230645860](https://blog.huangge1199.cn/post/nexusCreate/image-20220112230645860.png)\n","source":"_posts/nexusCreate.md","raw":"---\ntitle: 用nexus部署maven私服\ndate: 2022-01-12 19:52:40\ntags: [maven,nexus]\ncategories: nexus\ncover: https://blog.huangge1199.cn/post/nexusCreate/bg.jpeg\n---\n# nexus 服务部署\n\n由于本人习惯问题，本次继续用docker部署\n\n## 查找docker镜像\n通过https://hub.docker.com/ 网站查找，选用了官方的sonatype/nexus3\n\n## 拉取镜像\n\n```sh\ndocker pull sonatype/nexus3\n```\n\n![image-20220112202513617](https://blog.huangge1199.cn/post/nexusCreate/image-20220112202513617.png)\n\n## 创建宿主机挂载目录并编写docker-compose.yml\n\n执行命令：\n\n```sh\nvi docker-compose.yml\nmkdir nexus-data\n```\n\ndocker-compose.yml内容：\n\n```sh\nversion: '3'\nservices:\n    nexus3:\n        container_name: nexus3\n        image: sonatype/nexus3:latest\n        environment:\n            - TZ=Asia/Shanghai\n        volumes: \n            - ./nexus-data:/var/nexus-data\n        ports: \n            - 8081:8081\n        restart: always\n```\n\n![image-20220112203927784](https://blog.huangge1199.cn/post/nexusCreate/image-20220112203927784.png)\n\n## 启动容器\n\n```sh\ndocker-compose up -d\n```\n\n![image-20220112204407509](https://blog.huangge1199.cn/post/nexusCreate/image-20220112204407509.png)\n\n## 浏览器验证\n\n浏览器中输入http://IP:8081/，出现下面的页面启动完成\n\n![image-20220112204921432](https://blog.huangge1199.cn/post/nexusCreate/image-20220112204921432.png)\n\n# Nexus 服务的配置\n\n## 浏览器中点击右上角的登录\n\n![image-20220112205557025](https://blog.huangge1199.cn/post/nexusCreate/image-20220112205557025.png)\n\n##  登录\n\n首次登录会提示密码保存在**/nexus-data/admin.password**（位置可能会变，看提示）\n\n![image-20220112214506743](https://blog.huangge1199.cn/post/nexusCreate/image-20220112214506743.png)\n\n由于这个目录我们的docker并没有引出来，所以我们要去docker容器内查看\n\n```sh\ndocker exec -it nexus3 /bin/bash\ncat /nexus-data/admin.password\n```\n\n这地方注意下，cat后不会换行，注意看下密码，用户名是admin，文件中存的就是密码\n\n![image-20220112214220341](https://blog.huangge1199.cn/post/nexusCreate/image-20220112214220341.png)\n\n## 设置密码\n\n登录后：\n\n![image-20220112214637528](https://blog.huangge1199.cn/post/nexusCreate/image-20220112214637528.png)\n\n点击next设置新密码\n\n![image-20220112214717867](https://blog.huangge1199.cn/post/nexusCreate/image-20220112214717867.png)\n\n![image-20220112214820826](https://blog.huangge1199.cn/post/nexusCreate/image-20220112214820826.png)\n\n![image-20220112214831857](https://blog.huangge1199.cn/post/nexusCreate/image-20220112214831857.png)\n\n## 增加阿里云公共仓库\n\n由于默认的里面没有阿里云仓库，用maven的仓库速度慢，所以增加一个阿里云仓库\n\n![image-20220112215708898](https://blog.huangge1199.cn/post/nexusCreate/image-20220112215708898.png)\n\n![image-20220112215809631](https://blog.huangge1199.cn/post/nexusCreate/image-20220112215809631.png)\n\n![image-20220112215951755](https://blog.huangge1199.cn/post/nexusCreate/image-20220112215951755.png)\n\n![image-20220112220131151](https://blog.huangge1199.cn/post/nexusCreate/image-20220112220131151.png)\n\n接下来填写信息：name这个随意填，为了方便记忆我填写的aliyun-public-proxy，下面的配置阿里云地址https://maven.aliyun.com/repository/public，两个填好后点击最下方的Create repository\n\n![image-20220112220511830](https://blog.huangge1199.cn/post/nexusCreate/image-20220112220511830.png)\n\n![image-20220112220741095](https://blog.huangge1199.cn/post/nexusCreate/image-20220112220741095.png)\n\n## 统一私服\n\n- 编辑**maven-public**\n\n![image-20220112221401367](https://blog.huangge1199.cn/post/nexusCreate/image-20220112221401367.png)\n\n- 将刚刚的aliyun-public-proxy放入 **group** 中，并调整优先级，然后保存\n\n![image-20220112221517343](https://blog.huangge1199.cn/post/nexusCreate/image-20220112221517343.png)\n\n![image-20220112221637473](https://blog.huangge1199.cn/post/nexusCreate/image-20220112221637473.png)\n\n## 查看私服地址\n\n回到上一个页面，点击copy，弹出来的地址就是私服地址\n\n![image-20220112221849871](https://blog.huangge1199.cn/post/nexusCreate/image-20220112221849871.png)\n\n# 使用私服\n\n注：maven地址：E:\\maven\\apache-maven-3.6.3\n\n## maven中setting.xml 文件配置\n\n- 下载依赖\n\n  找到mirrors位置，并将其标签内容修改如下\n\n  ```xml\n  <mirrors>\n    <!-- mirror\n     | Specifies a repository mirror site to use instead of a given repository. The repository that\n     | this mirror serves has an ID that matches the mirrorOf element of this mirror. IDs are used\n     | for inheritance and direct lookup purposes, and must be unique across the set of mirrors.\n     |\n    <mirror>\n      <id>mirrorId</id>\n      <mirrorOf>repositoryId</mirrorOf>\n      <name>Human Readable Name for this Mirror.</name>\n      <url>http://my.repository.com/repo/path</url>\n    </mirror>\n     -->\n  \t<mirror>\n      <!--该镜像的唯一标识符。id用来区分不同的mirror元素。 -->\n      <id>maven-public</id>\n      <!--镜像名称 -->\n      <name>maven-public</name>\n      <!--*指的是访问任何仓库都使用我们的私服-->\n      <mirrorOf>*</mirrorOf>\n      <!--该镜像的URL。构建系统会优先考虑使用该URL，而非使用默认的服务器URL。 -->\n      <url>http://192.168.1.187:8081/repository/maven-public/</url>     \n    </mirror>\n  </mirrors>\n  ```\n\n- 发布依赖\n\n  找到servers位置，并将其标签内容修改如下\n\n  ```xml\n  <servers>\n    <!-- server\n     | Specifies the authentication information to use when connecting to a particular server, identified by\n     | a unique name within the system (referred to by the 'id' attribute below).\n     |\n     | NOTE: You should either specify username/password OR privateKey/passphrase, since these pairings are\n     |       used together.\n     |\n    <server>\n      <id>deploymentRepo</id>\n      <username>repouser</username>\n      <password>repopwd</password>\n    </server>\n    -->\n    <!-- Another sample, using keys to authenticate.\n    <server>\n      <id>siteServer</id>\n      <privateKey>/path/to/private/key</privateKey>\n      <passphrase>optional; leave empty if not used.</passphrase>\n    </server>\n    -->\n    <server>\n        <id>releases</id>\n        <username>admin</username>\n        <password>123456</password>\n    </server>\n    <server>\n        <id>snapshots</id>\n        <username>admin</username>\n        <password>123456</password>\n    </server>\n  </servers>\n  ```\n\n## 新建maven项目\n\n我这边建了一个Springboot项目\n\n![image-20220112223312451](https://blog.huangge1199.cn/post/nexusCreate/image-20220112223312451.png)\n\n设置maven路径\n\n![image-20220112224909515](https://blog.huangge1199.cn/post/nexusCreate/image-20220112224909515.png)\n\n## 发布依赖\n\n1. 项目pom中添加 **distributionManagement** 节点\n\n   ```xml\n   <distributionManagement>\n       <repository>\n           <id>releases</id>\n           <name>Releases</name>\n           <url>http://192.168.1.187:8081/repository/maven-releases/</url>\n       </repository>\n       <snapshotRepository>\n           <id>snapshots</id>\n           <name>Snapshot</name>\n           <url>http://192.168.1.187:8081/repository/maven-snapshots/</url>\n       </snapshotRepository>\n   </distributionManagement>\n   ```\n\n   注：**repository** 里的 **id** 需要和上一步里的 **server id** 名称保持一致。\n\n2. 执行 **mvn deploy** 命令发布：\n\n   ![image-20220112230213213](https://blog.huangge1199.cn/post/nexusCreate/image-20220112230213213.png)\n\n3. 查看网页，是否部署成功\n\n   注：\n\n   - 若项目版本号末尾带有 **-SNAPSHOT**，则会发布到 **snapshots** 快照版本仓库\n   - 若项目版本号末尾带有 **-RELEASES** 或什么都不带，则会发布到 **releases** 正式版本仓库\n\n   ![image-20220112230645860](https://blog.huangge1199.cn/post/nexusCreate/image-20220112230645860.png)\n","slug":"nexusCreate","published":1,"updated":"2022-01-14T01:46:15.319Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl0t0rrlk00234ctu9qnm8zrq","content":"<h1 id=\"nexus-服务部署\"><a href=\"#nexus-服务部署\" class=\"headerlink\" title=\"nexus 服务部署\"></a>nexus 服务部署</h1><p>由于本人习惯问题，本次继续用docker部署</p>\n<h2 id=\"查找docker镜像\"><a href=\"#查找docker镜像\" class=\"headerlink\" title=\"查找docker镜像\"></a>查找docker镜像</h2><p>通过<a href=\"https://hub.docker.com/\">https://hub.docker.com/</a> 网站查找，选用了官方的sonatype&#x2F;nexus3</p>\n<h2 id=\"拉取镜像\"><a href=\"#拉取镜像\" class=\"headerlink\" title=\"拉取镜像\"></a>拉取镜像</h2><pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">docker pull sonatype&#x2F;nexus3</code></pre>\n\n<p><img src=\"https://blog.huangge1199.cn/post/nexusCreate/image-20220112202513617.png\" alt=\"image-20220112202513617\"></p>\n<h2 id=\"创建宿主机挂载目录并编写docker-compose-yml\"><a href=\"#创建宿主机挂载目录并编写docker-compose-yml\" class=\"headerlink\" title=\"创建宿主机挂载目录并编写docker-compose.yml\"></a>创建宿主机挂载目录并编写docker-compose.yml</h2><p>执行命令：</p>\n<pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">vi docker-compose.yml\nmkdir nexus-data</code></pre>\n\n<p>docker-compose.yml内容：</p>\n<pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">version: &#39;3&#39;\nservices:\n    nexus3:\n        container_name: nexus3\n        image: sonatype&#x2F;nexus3:latest\n        environment:\n            - TZ&#x3D;Asia&#x2F;Shanghai\n        volumes: \n            - .&#x2F;nexus-data:&#x2F;var&#x2F;nexus-data\n        ports: \n            - 8081:8081\n        restart: always</code></pre>\n\n<p><img src=\"https://blog.huangge1199.cn/post/nexusCreate/image-20220112203927784.png\" alt=\"image-20220112203927784\"></p>\n<h2 id=\"启动容器\"><a href=\"#启动容器\" class=\"headerlink\" title=\"启动容器\"></a>启动容器</h2><pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">docker-compose up -d</code></pre>\n\n<p><img src=\"https://blog.huangge1199.cn/post/nexusCreate/image-20220112204407509.png\" alt=\"image-20220112204407509\"></p>\n<h2 id=\"浏览器验证\"><a href=\"#浏览器验证\" class=\"headerlink\" title=\"浏览器验证\"></a>浏览器验证</h2><p>浏览器中输入<a href=\"http://ip:8081/%EF%BC%8C%E5%87%BA%E7%8E%B0%E4%B8%8B%E9%9D%A2%E7%9A%84%E9%A1%B5%E9%9D%A2%E5%90%AF%E5%8A%A8%E5%AE%8C%E6%88%90\">http://IP:8081/，出现下面的页面启动完成</a></p>\n<p><img src=\"https://blog.huangge1199.cn/post/nexusCreate/image-20220112204921432.png\" alt=\"image-20220112204921432\"></p>\n<h1 id=\"Nexus-服务的配置\"><a href=\"#Nexus-服务的配置\" class=\"headerlink\" title=\"Nexus 服务的配置\"></a>Nexus 服务的配置</h1><h2 id=\"浏览器中点击右上角的登录\"><a href=\"#浏览器中点击右上角的登录\" class=\"headerlink\" title=\"浏览器中点击右上角的登录\"></a>浏览器中点击右上角的登录</h2><p><img src=\"https://blog.huangge1199.cn/post/nexusCreate/image-20220112205557025.png\" alt=\"image-20220112205557025\"></p>\n<h2 id=\"登录\"><a href=\"#登录\" class=\"headerlink\" title=\"登录\"></a>登录</h2><p>首次登录会提示密码保存在**&#x2F;nexus-data&#x2F;admin.password**（位置可能会变，看提示）</p>\n<p><img src=\"https://blog.huangge1199.cn/post/nexusCreate/image-20220112214506743.png\" alt=\"image-20220112214506743\"></p>\n<p>由于这个目录我们的docker并没有引出来，所以我们要去docker容器内查看</p>\n<pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">docker exec -it nexus3 &#x2F;bin&#x2F;bash\ncat &#x2F;nexus-data&#x2F;admin.password</code></pre>\n\n<p>这地方注意下，cat后不会换行，注意看下密码，用户名是admin，文件中存的就是密码</p>\n<p><img src=\"https://blog.huangge1199.cn/post/nexusCreate/image-20220112214220341.png\" alt=\"image-20220112214220341\"></p>\n<h2 id=\"设置密码\"><a href=\"#设置密码\" class=\"headerlink\" title=\"设置密码\"></a>设置密码</h2><p>登录后：</p>\n<p><img src=\"https://blog.huangge1199.cn/post/nexusCreate/image-20220112214637528.png\" alt=\"image-20220112214637528\"></p>\n<p>点击next设置新密码</p>\n<p><img src=\"https://blog.huangge1199.cn/post/nexusCreate/image-20220112214717867.png\" alt=\"image-20220112214717867\"></p>\n<p><img src=\"https://blog.huangge1199.cn/post/nexusCreate/image-20220112214820826.png\" alt=\"image-20220112214820826\"></p>\n<p><img src=\"https://blog.huangge1199.cn/post/nexusCreate/image-20220112214831857.png\" alt=\"image-20220112214831857\"></p>\n<h2 id=\"增加阿里云公共仓库\"><a href=\"#增加阿里云公共仓库\" class=\"headerlink\" title=\"增加阿里云公共仓库\"></a>增加阿里云公共仓库</h2><p>由于默认的里面没有阿里云仓库，用maven的仓库速度慢，所以增加一个阿里云仓库</p>\n<p><img src=\"https://blog.huangge1199.cn/post/nexusCreate/image-20220112215708898.png\" alt=\"image-20220112215708898\"></p>\n<p><img src=\"https://blog.huangge1199.cn/post/nexusCreate/image-20220112215809631.png\" alt=\"image-20220112215809631\"></p>\n<p><img src=\"https://blog.huangge1199.cn/post/nexusCreate/image-20220112215951755.png\" alt=\"image-20220112215951755\"></p>\n<p><img src=\"https://blog.huangge1199.cn/post/nexusCreate/image-20220112220131151.png\" alt=\"image-20220112220131151\"></p>\n<p>接下来填写信息：name这个随意填，为了方便记忆我填写的aliyun-public-proxy，下面的配置阿里云地址<a href=\"https://maven.aliyun.com/repository/public%EF%BC%8C%E4%B8%A4%E4%B8%AA%E5%A1%AB%E5%A5%BD%E5%90%8E%E7%82%B9%E5%87%BB%E6%9C%80%E4%B8%8B%E6%96%B9%E7%9A%84Create\">https://maven.aliyun.com/repository/public，两个填好后点击最下方的Create</a> repository</p>\n<p><img src=\"https://blog.huangge1199.cn/post/nexusCreate/image-20220112220511830.png\" alt=\"image-20220112220511830\"></p>\n<p><img src=\"https://blog.huangge1199.cn/post/nexusCreate/image-20220112220741095.png\" alt=\"image-20220112220741095\"></p>\n<h2 id=\"统一私服\"><a href=\"#统一私服\" class=\"headerlink\" title=\"统一私服\"></a>统一私服</h2><ul>\n<li>编辑<strong>maven-public</strong></li>\n</ul>\n<p><img src=\"https://blog.huangge1199.cn/post/nexusCreate/image-20220112221401367.png\" alt=\"image-20220112221401367\"></p>\n<ul>\n<li>将刚刚的aliyun-public-proxy放入 <strong>group</strong> 中，并调整优先级，然后保存</li>\n</ul>\n<p><img src=\"https://blog.huangge1199.cn/post/nexusCreate/image-20220112221517343.png\" alt=\"image-20220112221517343\"></p>\n<p><img src=\"https://blog.huangge1199.cn/post/nexusCreate/image-20220112221637473.png\" alt=\"image-20220112221637473\"></p>\n<h2 id=\"查看私服地址\"><a href=\"#查看私服地址\" class=\"headerlink\" title=\"查看私服地址\"></a>查看私服地址</h2><p>回到上一个页面，点击copy，弹出来的地址就是私服地址</p>\n<p><img src=\"https://blog.huangge1199.cn/post/nexusCreate/image-20220112221849871.png\" alt=\"image-20220112221849871\"></p>\n<h1 id=\"使用私服\"><a href=\"#使用私服\" class=\"headerlink\" title=\"使用私服\"></a>使用私服</h1><p>注：maven地址：E:\\maven\\apache-maven-3.6.3</p>\n<h2 id=\"maven中setting-xml-文件配置\"><a href=\"#maven中setting-xml-文件配置\" class=\"headerlink\" title=\"maven中setting.xml 文件配置\"></a>maven中setting.xml 文件配置</h2><ul>\n<li><p>下载依赖</p>\n<p>找到mirrors位置，并将其标签内容修改如下</p>\n<pre class=\"line-numbers language-xml\" data-language=\"xml\"><code class=\"language-xml\">&lt;mirrors&gt;\n  &lt;!-- mirror\n   | Specifies a repository mirror site to use instead of a given repository. The repository that\n   | this mirror serves has an ID that matches the mirrorOf element of this mirror. IDs are used\n   | for inheritance and direct lookup purposes, and must be unique across the set of mirrors.\n   |\n  &lt;mirror&gt;\n    &lt;id&gt;mirrorId&lt;&#x2F;id&gt;\n    &lt;mirrorOf&gt;repositoryId&lt;&#x2F;mirrorOf&gt;\n    &lt;name&gt;Human Readable Name for this Mirror.&lt;&#x2F;name&gt;\n    &lt;url&gt;http:&#x2F;&#x2F;my.repository.com&#x2F;repo&#x2F;path&lt;&#x2F;url&gt;\n  &lt;&#x2F;mirror&gt;\n   --&gt;\n\t&lt;mirror&gt;\n    &lt;!--该镜像的唯一标识符。id用来区分不同的mirror元素。 --&gt;\n    &lt;id&gt;maven-public&lt;&#x2F;id&gt;\n    &lt;!--镜像名称 --&gt;\n    &lt;name&gt;maven-public&lt;&#x2F;name&gt;\n    &lt;!--*指的是访问任何仓库都使用我们的私服--&gt;\n    &lt;mirrorOf&gt;*&lt;&#x2F;mirrorOf&gt;\n    &lt;!--该镜像的URL。构建系统会优先考虑使用该URL，而非使用默认的服务器URL。 --&gt;\n    &lt;url&gt;http:&#x2F;&#x2F;192.168.1.187:8081&#x2F;repository&#x2F;maven-public&#x2F;&lt;&#x2F;url&gt;     \n  &lt;&#x2F;mirror&gt;\n&lt;&#x2F;mirrors&gt;</code></pre>\n</li>\n<li><p>发布依赖</p>\n<p>找到servers位置，并将其标签内容修改如下</p>\n<pre class=\"line-numbers language-xml\" data-language=\"xml\"><code class=\"language-xml\">&lt;servers&gt;\n  &lt;!-- server\n   | Specifies the authentication information to use when connecting to a particular server, identified by\n   | a unique name within the system (referred to by the &#39;id&#39; attribute below).\n   |\n   | NOTE: You should either specify username&#x2F;password OR privateKey&#x2F;passphrase, since these pairings are\n   |       used together.\n   |\n  &lt;server&gt;\n    &lt;id&gt;deploymentRepo&lt;&#x2F;id&gt;\n    &lt;username&gt;repouser&lt;&#x2F;username&gt;\n    &lt;password&gt;repopwd&lt;&#x2F;password&gt;\n  &lt;&#x2F;server&gt;\n  --&gt;\n  &lt;!-- Another sample, using keys to authenticate.\n  &lt;server&gt;\n    &lt;id&gt;siteServer&lt;&#x2F;id&gt;\n    &lt;privateKey&gt;&#x2F;path&#x2F;to&#x2F;private&#x2F;key&lt;&#x2F;privateKey&gt;\n    &lt;passphrase&gt;optional; leave empty if not used.&lt;&#x2F;passphrase&gt;\n  &lt;&#x2F;server&gt;\n  --&gt;\n  &lt;server&gt;\n      &lt;id&gt;releases&lt;&#x2F;id&gt;\n      &lt;username&gt;admin&lt;&#x2F;username&gt;\n      &lt;password&gt;123456&lt;&#x2F;password&gt;\n  &lt;&#x2F;server&gt;\n  &lt;server&gt;\n      &lt;id&gt;snapshots&lt;&#x2F;id&gt;\n      &lt;username&gt;admin&lt;&#x2F;username&gt;\n      &lt;password&gt;123456&lt;&#x2F;password&gt;\n  &lt;&#x2F;server&gt;\n&lt;&#x2F;servers&gt;</code></pre></li>\n</ul>\n<h2 id=\"新建maven项目\"><a href=\"#新建maven项目\" class=\"headerlink\" title=\"新建maven项目\"></a>新建maven项目</h2><p>我这边建了一个Springboot项目</p>\n<p><img src=\"https://blog.huangge1199.cn/post/nexusCreate/image-20220112223312451.png\" alt=\"image-20220112223312451\"></p>\n<p>设置maven路径</p>\n<p><img src=\"https://blog.huangge1199.cn/post/nexusCreate/image-20220112224909515.png\" alt=\"image-20220112224909515\"></p>\n<h2 id=\"发布依赖\"><a href=\"#发布依赖\" class=\"headerlink\" title=\"发布依赖\"></a>发布依赖</h2><ol>\n<li><p>项目pom中添加 <strong>distributionManagement</strong> 节点</p>\n<pre class=\"line-numbers language-xml\" data-language=\"xml\"><code class=\"language-xml\">&lt;distributionManagement&gt;\n    &lt;repository&gt;\n        &lt;id&gt;releases&lt;&#x2F;id&gt;\n        &lt;name&gt;Releases&lt;&#x2F;name&gt;\n        &lt;url&gt;http:&#x2F;&#x2F;192.168.1.187:8081&#x2F;repository&#x2F;maven-releases&#x2F;&lt;&#x2F;url&gt;\n    &lt;&#x2F;repository&gt;\n    &lt;snapshotRepository&gt;\n        &lt;id&gt;snapshots&lt;&#x2F;id&gt;\n        &lt;name&gt;Snapshot&lt;&#x2F;name&gt;\n        &lt;url&gt;http:&#x2F;&#x2F;192.168.1.187:8081&#x2F;repository&#x2F;maven-snapshots&#x2F;&lt;&#x2F;url&gt;\n    &lt;&#x2F;snapshotRepository&gt;\n&lt;&#x2F;distributionManagement&gt;</code></pre>\n\n<p>注：<strong>repository</strong> 里的 <strong>id</strong> 需要和上一步里的 <strong>server id</strong> 名称保持一致。</p>\n</li>\n<li><p>执行 <strong>mvn deploy</strong> 命令发布：</p>\n<p><img src=\"https://blog.huangge1199.cn/post/nexusCreate/image-20220112230213213.png\" alt=\"image-20220112230213213\"></p>\n</li>\n<li><p>查看网页，是否部署成功</p>\n<p>注：</p>\n<ul>\n<li>若项目版本号末尾带有 <strong>-SNAPSHOT</strong>，则会发布到 <strong>snapshots</strong> 快照版本仓库</li>\n<li>若项目版本号末尾带有 <strong>-RELEASES</strong> 或什么都不带，则会发布到 <strong>releases</strong> 正式版本仓库</li>\n</ul>\n<p><img src=\"https://blog.huangge1199.cn/post/nexusCreate/image-20220112230645860.png\" alt=\"image-20220112230645860\"></p>\n</li>\n</ol>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.gitee.io/zh-CN/","avatar":"https://element-plus.gitee.io/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"}}},"excerpt":"","more":"<h1 id=\"nexus-服务部署\"><a href=\"#nexus-服务部署\" class=\"headerlink\" title=\"nexus 服务部署\"></a>nexus 服务部署</h1><p>由于本人习惯问题，本次继续用docker部署</p>\n<h2 id=\"查找docker镜像\"><a href=\"#查找docker镜像\" class=\"headerlink\" title=\"查找docker镜像\"></a>查找docker镜像</h2><p>通过<a href=\"https://hub.docker.com/\">https://hub.docker.com/</a> 网站查找，选用了官方的sonatype&#x2F;nexus3</p>\n<h2 id=\"拉取镜像\"><a href=\"#拉取镜像\" class=\"headerlink\" title=\"拉取镜像\"></a>拉取镜像</h2><pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">docker pull sonatype&#x2F;nexus3</code></pre>\n\n<p><img src=\"https://blog.huangge1199.cn/post/nexusCreate/image-20220112202513617.png\" alt=\"image-20220112202513617\"></p>\n<h2 id=\"创建宿主机挂载目录并编写docker-compose-yml\"><a href=\"#创建宿主机挂载目录并编写docker-compose-yml\" class=\"headerlink\" title=\"创建宿主机挂载目录并编写docker-compose.yml\"></a>创建宿主机挂载目录并编写docker-compose.yml</h2><p>执行命令：</p>\n<pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">vi docker-compose.yml\nmkdir nexus-data</code></pre>\n\n<p>docker-compose.yml内容：</p>\n<pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">version: &#39;3&#39;\nservices:\n    nexus3:\n        container_name: nexus3\n        image: sonatype&#x2F;nexus3:latest\n        environment:\n            - TZ&#x3D;Asia&#x2F;Shanghai\n        volumes: \n            - .&#x2F;nexus-data:&#x2F;var&#x2F;nexus-data\n        ports: \n            - 8081:8081\n        restart: always</code></pre>\n\n<p><img src=\"https://blog.huangge1199.cn/post/nexusCreate/image-20220112203927784.png\" alt=\"image-20220112203927784\"></p>\n<h2 id=\"启动容器\"><a href=\"#启动容器\" class=\"headerlink\" title=\"启动容器\"></a>启动容器</h2><pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">docker-compose up -d</code></pre>\n\n<p><img src=\"https://blog.huangge1199.cn/post/nexusCreate/image-20220112204407509.png\" alt=\"image-20220112204407509\"></p>\n<h2 id=\"浏览器验证\"><a href=\"#浏览器验证\" class=\"headerlink\" title=\"浏览器验证\"></a>浏览器验证</h2><p>浏览器中输入<a href=\"http://ip:8081/%EF%BC%8C%E5%87%BA%E7%8E%B0%E4%B8%8B%E9%9D%A2%E7%9A%84%E9%A1%B5%E9%9D%A2%E5%90%AF%E5%8A%A8%E5%AE%8C%E6%88%90\">http://IP:8081/，出现下面的页面启动完成</a></p>\n<p><img src=\"https://blog.huangge1199.cn/post/nexusCreate/image-20220112204921432.png\" alt=\"image-20220112204921432\"></p>\n<h1 id=\"Nexus-服务的配置\"><a href=\"#Nexus-服务的配置\" class=\"headerlink\" title=\"Nexus 服务的配置\"></a>Nexus 服务的配置</h1><h2 id=\"浏览器中点击右上角的登录\"><a href=\"#浏览器中点击右上角的登录\" class=\"headerlink\" title=\"浏览器中点击右上角的登录\"></a>浏览器中点击右上角的登录</h2><p><img src=\"https://blog.huangge1199.cn/post/nexusCreate/image-20220112205557025.png\" alt=\"image-20220112205557025\"></p>\n<h2 id=\"登录\"><a href=\"#登录\" class=\"headerlink\" title=\"登录\"></a>登录</h2><p>首次登录会提示密码保存在**&#x2F;nexus-data&#x2F;admin.password**（位置可能会变，看提示）</p>\n<p><img src=\"https://blog.huangge1199.cn/post/nexusCreate/image-20220112214506743.png\" alt=\"image-20220112214506743\"></p>\n<p>由于这个目录我们的docker并没有引出来，所以我们要去docker容器内查看</p>\n<pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">docker exec -it nexus3 &#x2F;bin&#x2F;bash\ncat &#x2F;nexus-data&#x2F;admin.password</code></pre>\n\n<p>这地方注意下，cat后不会换行，注意看下密码，用户名是admin，文件中存的就是密码</p>\n<p><img src=\"https://blog.huangge1199.cn/post/nexusCreate/image-20220112214220341.png\" alt=\"image-20220112214220341\"></p>\n<h2 id=\"设置密码\"><a href=\"#设置密码\" class=\"headerlink\" title=\"设置密码\"></a>设置密码</h2><p>登录后：</p>\n<p><img src=\"https://blog.huangge1199.cn/post/nexusCreate/image-20220112214637528.png\" alt=\"image-20220112214637528\"></p>\n<p>点击next设置新密码</p>\n<p><img src=\"https://blog.huangge1199.cn/post/nexusCreate/image-20220112214717867.png\" alt=\"image-20220112214717867\"></p>\n<p><img src=\"https://blog.huangge1199.cn/post/nexusCreate/image-20220112214820826.png\" alt=\"image-20220112214820826\"></p>\n<p><img src=\"https://blog.huangge1199.cn/post/nexusCreate/image-20220112214831857.png\" alt=\"image-20220112214831857\"></p>\n<h2 id=\"增加阿里云公共仓库\"><a href=\"#增加阿里云公共仓库\" class=\"headerlink\" title=\"增加阿里云公共仓库\"></a>增加阿里云公共仓库</h2><p>由于默认的里面没有阿里云仓库，用maven的仓库速度慢，所以增加一个阿里云仓库</p>\n<p><img src=\"https://blog.huangge1199.cn/post/nexusCreate/image-20220112215708898.png\" alt=\"image-20220112215708898\"></p>\n<p><img src=\"https://blog.huangge1199.cn/post/nexusCreate/image-20220112215809631.png\" alt=\"image-20220112215809631\"></p>\n<p><img src=\"https://blog.huangge1199.cn/post/nexusCreate/image-20220112215951755.png\" alt=\"image-20220112215951755\"></p>\n<p><img src=\"https://blog.huangge1199.cn/post/nexusCreate/image-20220112220131151.png\" alt=\"image-20220112220131151\"></p>\n<p>接下来填写信息：name这个随意填，为了方便记忆我填写的aliyun-public-proxy，下面的配置阿里云地址<a href=\"https://maven.aliyun.com/repository/public%EF%BC%8C%E4%B8%A4%E4%B8%AA%E5%A1%AB%E5%A5%BD%E5%90%8E%E7%82%B9%E5%87%BB%E6%9C%80%E4%B8%8B%E6%96%B9%E7%9A%84Create\">https://maven.aliyun.com/repository/public，两个填好后点击最下方的Create</a> repository</p>\n<p><img src=\"https://blog.huangge1199.cn/post/nexusCreate/image-20220112220511830.png\" alt=\"image-20220112220511830\"></p>\n<p><img src=\"https://blog.huangge1199.cn/post/nexusCreate/image-20220112220741095.png\" alt=\"image-20220112220741095\"></p>\n<h2 id=\"统一私服\"><a href=\"#统一私服\" class=\"headerlink\" title=\"统一私服\"></a>统一私服</h2><ul>\n<li>编辑<strong>maven-public</strong></li>\n</ul>\n<p><img src=\"https://blog.huangge1199.cn/post/nexusCreate/image-20220112221401367.png\" alt=\"image-20220112221401367\"></p>\n<ul>\n<li>将刚刚的aliyun-public-proxy放入 <strong>group</strong> 中，并调整优先级，然后保存</li>\n</ul>\n<p><img src=\"https://blog.huangge1199.cn/post/nexusCreate/image-20220112221517343.png\" alt=\"image-20220112221517343\"></p>\n<p><img src=\"https://blog.huangge1199.cn/post/nexusCreate/image-20220112221637473.png\" alt=\"image-20220112221637473\"></p>\n<h2 id=\"查看私服地址\"><a href=\"#查看私服地址\" class=\"headerlink\" title=\"查看私服地址\"></a>查看私服地址</h2><p>回到上一个页面，点击copy，弹出来的地址就是私服地址</p>\n<p><img src=\"https://blog.huangge1199.cn/post/nexusCreate/image-20220112221849871.png\" alt=\"image-20220112221849871\"></p>\n<h1 id=\"使用私服\"><a href=\"#使用私服\" class=\"headerlink\" title=\"使用私服\"></a>使用私服</h1><p>注：maven地址：E:\\maven\\apache-maven-3.6.3</p>\n<h2 id=\"maven中setting-xml-文件配置\"><a href=\"#maven中setting-xml-文件配置\" class=\"headerlink\" title=\"maven中setting.xml 文件配置\"></a>maven中setting.xml 文件配置</h2><ul>\n<li><p>下载依赖</p>\n<p>找到mirrors位置，并将其标签内容修改如下</p>\n<pre class=\"line-numbers language-xml\" data-language=\"xml\"><code class=\"language-xml\">&lt;mirrors&gt;\n  &lt;!-- mirror\n   | Specifies a repository mirror site to use instead of a given repository. The repository that\n   | this mirror serves has an ID that matches the mirrorOf element of this mirror. IDs are used\n   | for inheritance and direct lookup purposes, and must be unique across the set of mirrors.\n   |\n  &lt;mirror&gt;\n    &lt;id&gt;mirrorId&lt;&#x2F;id&gt;\n    &lt;mirrorOf&gt;repositoryId&lt;&#x2F;mirrorOf&gt;\n    &lt;name&gt;Human Readable Name for this Mirror.&lt;&#x2F;name&gt;\n    &lt;url&gt;http:&#x2F;&#x2F;my.repository.com&#x2F;repo&#x2F;path&lt;&#x2F;url&gt;\n  &lt;&#x2F;mirror&gt;\n   --&gt;\n\t&lt;mirror&gt;\n    &lt;!--该镜像的唯一标识符。id用来区分不同的mirror元素。 --&gt;\n    &lt;id&gt;maven-public&lt;&#x2F;id&gt;\n    &lt;!--镜像名称 --&gt;\n    &lt;name&gt;maven-public&lt;&#x2F;name&gt;\n    &lt;!--*指的是访问任何仓库都使用我们的私服--&gt;\n    &lt;mirrorOf&gt;*&lt;&#x2F;mirrorOf&gt;\n    &lt;!--该镜像的URL。构建系统会优先考虑使用该URL，而非使用默认的服务器URL。 --&gt;\n    &lt;url&gt;http:&#x2F;&#x2F;192.168.1.187:8081&#x2F;repository&#x2F;maven-public&#x2F;&lt;&#x2F;url&gt;     \n  &lt;&#x2F;mirror&gt;\n&lt;&#x2F;mirrors&gt;</code></pre>\n</li>\n<li><p>发布依赖</p>\n<p>找到servers位置，并将其标签内容修改如下</p>\n<pre class=\"line-numbers language-xml\" data-language=\"xml\"><code class=\"language-xml\">&lt;servers&gt;\n  &lt;!-- server\n   | Specifies the authentication information to use when connecting to a particular server, identified by\n   | a unique name within the system (referred to by the &#39;id&#39; attribute below).\n   |\n   | NOTE: You should either specify username&#x2F;password OR privateKey&#x2F;passphrase, since these pairings are\n   |       used together.\n   |\n  &lt;server&gt;\n    &lt;id&gt;deploymentRepo&lt;&#x2F;id&gt;\n    &lt;username&gt;repouser&lt;&#x2F;username&gt;\n    &lt;password&gt;repopwd&lt;&#x2F;password&gt;\n  &lt;&#x2F;server&gt;\n  --&gt;\n  &lt;!-- Another sample, using keys to authenticate.\n  &lt;server&gt;\n    &lt;id&gt;siteServer&lt;&#x2F;id&gt;\n    &lt;privateKey&gt;&#x2F;path&#x2F;to&#x2F;private&#x2F;key&lt;&#x2F;privateKey&gt;\n    &lt;passphrase&gt;optional; leave empty if not used.&lt;&#x2F;passphrase&gt;\n  &lt;&#x2F;server&gt;\n  --&gt;\n  &lt;server&gt;\n      &lt;id&gt;releases&lt;&#x2F;id&gt;\n      &lt;username&gt;admin&lt;&#x2F;username&gt;\n      &lt;password&gt;123456&lt;&#x2F;password&gt;\n  &lt;&#x2F;server&gt;\n  &lt;server&gt;\n      &lt;id&gt;snapshots&lt;&#x2F;id&gt;\n      &lt;username&gt;admin&lt;&#x2F;username&gt;\n      &lt;password&gt;123456&lt;&#x2F;password&gt;\n  &lt;&#x2F;server&gt;\n&lt;&#x2F;servers&gt;</code></pre></li>\n</ul>\n<h2 id=\"新建maven项目\"><a href=\"#新建maven项目\" class=\"headerlink\" title=\"新建maven项目\"></a>新建maven项目</h2><p>我这边建了一个Springboot项目</p>\n<p><img src=\"https://blog.huangge1199.cn/post/nexusCreate/image-20220112223312451.png\" alt=\"image-20220112223312451\"></p>\n<p>设置maven路径</p>\n<p><img src=\"https://blog.huangge1199.cn/post/nexusCreate/image-20220112224909515.png\" alt=\"image-20220112224909515\"></p>\n<h2 id=\"发布依赖\"><a href=\"#发布依赖\" class=\"headerlink\" title=\"发布依赖\"></a>发布依赖</h2><ol>\n<li><p>项目pom中添加 <strong>distributionManagement</strong> 节点</p>\n<pre class=\"line-numbers language-xml\" data-language=\"xml\"><code class=\"language-xml\">&lt;distributionManagement&gt;\n    &lt;repository&gt;\n        &lt;id&gt;releases&lt;&#x2F;id&gt;\n        &lt;name&gt;Releases&lt;&#x2F;name&gt;\n        &lt;url&gt;http:&#x2F;&#x2F;192.168.1.187:8081&#x2F;repository&#x2F;maven-releases&#x2F;&lt;&#x2F;url&gt;\n    &lt;&#x2F;repository&gt;\n    &lt;snapshotRepository&gt;\n        &lt;id&gt;snapshots&lt;&#x2F;id&gt;\n        &lt;name&gt;Snapshot&lt;&#x2F;name&gt;\n        &lt;url&gt;http:&#x2F;&#x2F;192.168.1.187:8081&#x2F;repository&#x2F;maven-snapshots&#x2F;&lt;&#x2F;url&gt;\n    &lt;&#x2F;snapshotRepository&gt;\n&lt;&#x2F;distributionManagement&gt;</code></pre>\n\n<p>注：<strong>repository</strong> 里的 <strong>id</strong> 需要和上一步里的 <strong>server id</strong> 名称保持一致。</p>\n</li>\n<li><p>执行 <strong>mvn deploy</strong> 命令发布：</p>\n<p><img src=\"https://blog.huangge1199.cn/post/nexusCreate/image-20220112230213213.png\" alt=\"image-20220112230213213\"></p>\n</li>\n<li><p>查看网页，是否部署成功</p>\n<p>注：</p>\n<ul>\n<li>若项目版本号末尾带有 <strong>-SNAPSHOT</strong>，则会发布到 <strong>snapshots</strong> 快照版本仓库</li>\n<li>若项目版本号末尾带有 <strong>-RELEASES</strong> 或什么都不带，则会发布到 <strong>releases</strong> 正式版本仓库</li>\n</ul>\n<p><img src=\"https://blog.huangge1199.cn/post/nexusCreate/image-20220112230645860.png\" alt=\"image-20220112230645860\"></p>\n</li>\n</ol>\n"},{"title":"python3学习笔记--条件控制用法整理","date":"2021-12-29T08:04:06.000Z","cover":"https://blog.huangge1199.cn/post/pyControl/bg.jpeg","_content":"\n# if\n\n```python\nif_stmt ::=  \"if\" assignment_expression \":\" suite\n             (\"elif\" assignment_expression \":\" suite)*\n             [\"else\" \":\" suite]\n```\n\n用法：\n\n```python\nif EXPRESSION1:\n    SUITE1\nelif EXPRESSION2:\n    SUITE2\nelse:\n    SUITE\n```\n\n常用的操作符：\n\n- \"<\"：小于\n- \"<=\"：小于等于\n- \">\"：大于\n- \">=\"：大于等于\n- \"==\"：等于\n- \"!=\"：不等于\n- \"and\"：并且\n- \"or\"：或者\n\n# with\n\n```python\nwith_stmt          ::=  \"with\" ( \"(\" with_stmt_contents \",\"? \")\" | with_stmt_contents ) \":\" suite\nwith_stmt_contents ::=  with_item (\",\" with_item)*\nwith_item          ::=  expression [\"as\" target]\n```\n\n用法：\n\n```python\nwith EXPRESSION as TARGET:\n    SUITE\n或者\nwith A() as a, B() as b:\n    SUITE\n或者\nwith A() as a:\n    with B() as b:\n        SUITE\n或者\nwith (\n    A() as a,\n    B() as b,\n):\n    SUITE\n```\n\n# match（3.10新特性）\n\n```python\nmatch_stmt   ::=  'match' subject_expr \":\" NEWLINE INDENT case_block+ DEDENT\nsubject_expr ::=  star_named_expression \",\" star_named_expressions?\n                  | named_expression\ncase_block   ::=  'case' patterns [guard] \":\" block\n```\n\n用法：\n\n```python\nmatch variable: #这里的variable是需要判断的内容\n    case [\"quit\"]: \n        statement_block_1 # 对应案例的执行代码，当variable=\"quit\"时执行statement_block_1\n    case [\"go\", direction]: \n        statement_block_2\n    case [\"drop\", *objects]: \n        statement_block_3\n    ... # 其他的case语句\n    case _: #如果上面的case语句没有命中，则执行这个代码块，类似于Switch的default\n        statement_block_default\n```\n\n","source":"_posts/pyControl.md","raw":"---\ntitle: python3学习笔记--条件控制用法整理\ndate: 2021-12-29 16:04:06\ntags: [学习笔记,python]\ncategories: python\ncover: https://blog.huangge1199.cn/post/pyControl/bg.jpeg\n---\n\n# if\n\n```python\nif_stmt ::=  \"if\" assignment_expression \":\" suite\n             (\"elif\" assignment_expression \":\" suite)*\n             [\"else\" \":\" suite]\n```\n\n用法：\n\n```python\nif EXPRESSION1:\n    SUITE1\nelif EXPRESSION2:\n    SUITE2\nelse:\n    SUITE\n```\n\n常用的操作符：\n\n- \"<\"：小于\n- \"<=\"：小于等于\n- \">\"：大于\n- \">=\"：大于等于\n- \"==\"：等于\n- \"!=\"：不等于\n- \"and\"：并且\n- \"or\"：或者\n\n# with\n\n```python\nwith_stmt          ::=  \"with\" ( \"(\" with_stmt_contents \",\"? \")\" | with_stmt_contents ) \":\" suite\nwith_stmt_contents ::=  with_item (\",\" with_item)*\nwith_item          ::=  expression [\"as\" target]\n```\n\n用法：\n\n```python\nwith EXPRESSION as TARGET:\n    SUITE\n或者\nwith A() as a, B() as b:\n    SUITE\n或者\nwith A() as a:\n    with B() as b:\n        SUITE\n或者\nwith (\n    A() as a,\n    B() as b,\n):\n    SUITE\n```\n\n# match（3.10新特性）\n\n```python\nmatch_stmt   ::=  'match' subject_expr \":\" NEWLINE INDENT case_block+ DEDENT\nsubject_expr ::=  star_named_expression \",\" star_named_expressions?\n                  | named_expression\ncase_block   ::=  'case' patterns [guard] \":\" block\n```\n\n用法：\n\n```python\nmatch variable: #这里的variable是需要判断的内容\n    case [\"quit\"]: \n        statement_block_1 # 对应案例的执行代码，当variable=\"quit\"时执行statement_block_1\n    case [\"go\", direction]: \n        statement_block_2\n    case [\"drop\", *objects]: \n        statement_block_3\n    ... # 其他的case语句\n    case _: #如果上面的case语句没有命中，则执行这个代码块，类似于Switch的default\n        statement_block_default\n```\n\n","slug":"pyControl","published":1,"updated":"2022-01-14T01:46:15.552Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl0t0rrlk00254ctuda4k3y9l","content":"<h1 id=\"if\"><a href=\"#if\" class=\"headerlink\" title=\"if\"></a>if</h1><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">if_stmt ::&#x3D;  &quot;if&quot; assignment_expression &quot;:&quot; suite\n             (&quot;elif&quot; assignment_expression &quot;:&quot; suite)*\n             [&quot;else&quot; &quot;:&quot; suite]</code></pre>\n\n<p>用法：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">if EXPRESSION1:\n    SUITE1\nelif EXPRESSION2:\n    SUITE2\nelse:\n    SUITE</code></pre>\n\n<p>常用的操作符：</p>\n<ul>\n<li>“&lt;”：小于</li>\n<li>“&lt;&#x3D;”：小于等于</li>\n<li>“&gt;”：大于</li>\n<li>“&gt;&#x3D;”：大于等于</li>\n<li>“&#x3D;&#x3D;”：等于</li>\n<li>“!&#x3D;”：不等于</li>\n<li>“and”：并且</li>\n<li>“or”：或者</li>\n</ul>\n<h1 id=\"with\"><a href=\"#with\" class=\"headerlink\" title=\"with\"></a>with</h1><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">with_stmt          ::&#x3D;  &quot;with&quot; ( &quot;(&quot; with_stmt_contents &quot;,&quot;? &quot;)&quot; | with_stmt_contents ) &quot;:&quot; suite\nwith_stmt_contents ::&#x3D;  with_item (&quot;,&quot; with_item)*\nwith_item          ::&#x3D;  expression [&quot;as&quot; target]</code></pre>\n\n<p>用法：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">with EXPRESSION as TARGET:\n    SUITE\n或者\nwith A() as a, B() as b:\n    SUITE\n或者\nwith A() as a:\n    with B() as b:\n        SUITE\n或者\nwith (\n    A() as a,\n    B() as b,\n):\n    SUITE</code></pre>\n\n<h1 id=\"match（3-10新特性）\"><a href=\"#match（3-10新特性）\" class=\"headerlink\" title=\"match（3.10新特性）\"></a>match（3.10新特性）</h1><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">match_stmt   ::&#x3D;  &#39;match&#39; subject_expr &quot;:&quot; NEWLINE INDENT case_block+ DEDENT\nsubject_expr ::&#x3D;  star_named_expression &quot;,&quot; star_named_expressions?\n                  | named_expression\ncase_block   ::&#x3D;  &#39;case&#39; patterns [guard] &quot;:&quot; block</code></pre>\n\n<p>用法：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">match variable: #这里的variable是需要判断的内容\n    case [&quot;quit&quot;]: \n        statement_block_1 # 对应案例的执行代码，当variable&#x3D;&quot;quit&quot;时执行statement_block_1\n    case [&quot;go&quot;, direction]: \n        statement_block_2\n    case [&quot;drop&quot;, *objects]: \n        statement_block_3\n    ... # 其他的case语句\n    case _: #如果上面的case语句没有命中，则执行这个代码块，类似于Switch的default\n        statement_block_default</code></pre>\n\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.gitee.io/zh-CN/","avatar":"https://element-plus.gitee.io/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"}}},"excerpt":"","more":"<h1 id=\"if\"><a href=\"#if\" class=\"headerlink\" title=\"if\"></a>if</h1><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">if_stmt ::&#x3D;  &quot;if&quot; assignment_expression &quot;:&quot; suite\n             (&quot;elif&quot; assignment_expression &quot;:&quot; suite)*\n             [&quot;else&quot; &quot;:&quot; suite]</code></pre>\n\n<p>用法：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">if EXPRESSION1:\n    SUITE1\nelif EXPRESSION2:\n    SUITE2\nelse:\n    SUITE</code></pre>\n\n<p>常用的操作符：</p>\n<ul>\n<li>“&lt;”：小于</li>\n<li>“&lt;&#x3D;”：小于等于</li>\n<li>“&gt;”：大于</li>\n<li>“&gt;&#x3D;”：大于等于</li>\n<li>“&#x3D;&#x3D;”：等于</li>\n<li>“!&#x3D;”：不等于</li>\n<li>“and”：并且</li>\n<li>“or”：或者</li>\n</ul>\n<h1 id=\"with\"><a href=\"#with\" class=\"headerlink\" title=\"with\"></a>with</h1><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">with_stmt          ::&#x3D;  &quot;with&quot; ( &quot;(&quot; with_stmt_contents &quot;,&quot;? &quot;)&quot; | with_stmt_contents ) &quot;:&quot; suite\nwith_stmt_contents ::&#x3D;  with_item (&quot;,&quot; with_item)*\nwith_item          ::&#x3D;  expression [&quot;as&quot; target]</code></pre>\n\n<p>用法：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">with EXPRESSION as TARGET:\n    SUITE\n或者\nwith A() as a, B() as b:\n    SUITE\n或者\nwith A() as a:\n    with B() as b:\n        SUITE\n或者\nwith (\n    A() as a,\n    B() as b,\n):\n    SUITE</code></pre>\n\n<h1 id=\"match（3-10新特性）\"><a href=\"#match（3-10新特性）\" class=\"headerlink\" title=\"match（3.10新特性）\"></a>match（3.10新特性）</h1><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">match_stmt   ::&#x3D;  &#39;match&#39; subject_expr &quot;:&quot; NEWLINE INDENT case_block+ DEDENT\nsubject_expr ::&#x3D;  star_named_expression &quot;,&quot; star_named_expressions?\n                  | named_expression\ncase_block   ::&#x3D;  &#39;case&#39; patterns [guard] &quot;:&quot; block</code></pre>\n\n<p>用法：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">match variable: #这里的variable是需要判断的内容\n    case [&quot;quit&quot;]: \n        statement_block_1 # 对应案例的执行代码，当variable&#x3D;&quot;quit&quot;时执行statement_block_1\n    case [&quot;go&quot;, direction]: \n        statement_block_2\n    case [&quot;drop&quot;, *objects]: \n        statement_block_3\n    ... # 其他的case语句\n    case _: #如果上面的case语句没有命中，则执行这个代码块，类似于Switch的default\n        statement_block_default</code></pre>\n\n"},{"title":"python3学习笔记--两种排序方法","date":"2021-12-29T02:20:17.000Z","cover":"https://blog.huangge1199.cn/post/pyListSort/bg.jpeg","_content":"# 列表排序方法\n\n- sort()：仅对list对象进行排序，会改变list自身的顺序，没有返回值，即**原地排序**\n- sorted()：对所有可迭代对象进行排序，返回排序后的新对象，原对象保持不变；\n\n# sort()\n\nlist.sort(key=None, reverse=False)\n\n- **key**：设置排序方法，或指定list中用于排序的元素；\n- **reverse**：升降序排列，默认为升序排列；\n\n例子：\n\n```python\nnums = [2, 3, 5, 1, 6]\nnums.sort()\nprint(nums)  # [1, 2, 3, 5, 6]\nnums.sort(key=None, reverse=True)\nprint(nums)  # [6, 5, 3, 2, 1]\n    \nstudents = [('john', 'C', 15), ('jane', 'A', 12), ('dave', 'B', 10)]\nstudents.sort(key=lambda x: x[2])  # 按照列表中第三个元素排序\nprint(students)  # [('dave', 'B', 10), ('jane', 'A', 12), ('john', 'C', 15)]\n```\n\n# sorted()\n\nsorted(iterable [, key[, reverse]])\n\n- **key** ：设置排序方法，或指定迭代对象中，用于排序的元素；\n- **reverse** ：升降序排列，默认为升序排列；\n\n例子：\n\n```python\nnums = [2, 3, 5, 1, 6]\nnewNums = sorted(nums)\nprint(nums)  # [2, 3, 5, 1, 6]\nprint(newNums)  # [1, 2, 3, 5, 6]\nstudents = [('john', 'C', 15), ('jane', 'A', 12), ('dave', 'B', 10)]\nnewStudents = sorted(students, key=lambda x: x[1])\nprint(students)  # [('john', 'C', 15), ('jane', 'A', 12), ('dave', 'B', 10)]\nprint(newStudents)  # [('jane', 'A', 12), ('dave', 'B', 10), ('john', 'C', 15)]\n```\n<script src=\"https://readmore.openwrite.cn/js/readmore.js\" type=\"text/javascript\"></script>\n<script>\n    const btw = new BTWPlugin();\n    btw.init({\n        id: 'article-container',\n        blogId: '28702-1640918923546-365',\n        name: '龙儿之家',\n        qrcode: 'https://blog.huangge1199.cn/images/WeaselLong.jpg',\n        keyword: 'more',\n    });\n</script>\n","source":"_posts/pyListSort.md","raw":"---\ntitle: python3学习笔记--两种排序方法\ndate: 2021-12-29 10:20:17\ntags: [学习笔记,python]\ncategories: python\ncover: https://blog.huangge1199.cn/post/pyListSort/bg.jpeg\n---\n# 列表排序方法\n\n- sort()：仅对list对象进行排序，会改变list自身的顺序，没有返回值，即**原地排序**\n- sorted()：对所有可迭代对象进行排序，返回排序后的新对象，原对象保持不变；\n\n# sort()\n\nlist.sort(key=None, reverse=False)\n\n- **key**：设置排序方法，或指定list中用于排序的元素；\n- **reverse**：升降序排列，默认为升序排列；\n\n例子：\n\n```python\nnums = [2, 3, 5, 1, 6]\nnums.sort()\nprint(nums)  # [1, 2, 3, 5, 6]\nnums.sort(key=None, reverse=True)\nprint(nums)  # [6, 5, 3, 2, 1]\n    \nstudents = [('john', 'C', 15), ('jane', 'A', 12), ('dave', 'B', 10)]\nstudents.sort(key=lambda x: x[2])  # 按照列表中第三个元素排序\nprint(students)  # [('dave', 'B', 10), ('jane', 'A', 12), ('john', 'C', 15)]\n```\n\n# sorted()\n\nsorted(iterable [, key[, reverse]])\n\n- **key** ：设置排序方法，或指定迭代对象中，用于排序的元素；\n- **reverse** ：升降序排列，默认为升序排列；\n\n例子：\n\n```python\nnums = [2, 3, 5, 1, 6]\nnewNums = sorted(nums)\nprint(nums)  # [2, 3, 5, 1, 6]\nprint(newNums)  # [1, 2, 3, 5, 6]\nstudents = [('john', 'C', 15), ('jane', 'A', 12), ('dave', 'B', 10)]\nnewStudents = sorted(students, key=lambda x: x[1])\nprint(students)  # [('john', 'C', 15), ('jane', 'A', 12), ('dave', 'B', 10)]\nprint(newStudents)  # [('jane', 'A', 12), ('dave', 'B', 10), ('john', 'C', 15)]\n```\n<script src=\"https://readmore.openwrite.cn/js/readmore.js\" type=\"text/javascript\"></script>\n<script>\n    const btw = new BTWPlugin();\n    btw.init({\n        id: 'article-container',\n        blogId: '28702-1640918923546-365',\n        name: '龙儿之家',\n        qrcode: 'https://blog.huangge1199.cn/images/WeaselLong.jpg',\n        keyword: 'more',\n    });\n</script>\n","slug":"pyListSort","published":1,"updated":"2022-01-14T01:46:15.558Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl0t0rrll00284ctudg151pj9","content":"<h1 id=\"列表排序方法\"><a href=\"#列表排序方法\" class=\"headerlink\" title=\"列表排序方法\"></a>列表排序方法</h1><ul>\n<li>sort()：仅对list对象进行排序，会改变list自身的顺序，没有返回值，即<strong>原地排序</strong></li>\n<li>sorted()：对所有可迭代对象进行排序，返回排序后的新对象，原对象保持不变；</li>\n</ul>\n<h1 id=\"sort\"><a href=\"#sort\" class=\"headerlink\" title=\"sort()\"></a>sort()</h1><p>list.sort(key&#x3D;None, reverse&#x3D;False)</p>\n<ul>\n<li><strong>key</strong>：设置排序方法，或指定list中用于排序的元素；</li>\n<li><strong>reverse</strong>：升降序排列，默认为升序排列；</li>\n</ul>\n<p>例子：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">nums &#x3D; [2, 3, 5, 1, 6]\nnums.sort()\nprint(nums)  # [1, 2, 3, 5, 6]\nnums.sort(key&#x3D;None, reverse&#x3D;True)\nprint(nums)  # [6, 5, 3, 2, 1]\n    \nstudents &#x3D; [(&#39;john&#39;, &#39;C&#39;, 15), (&#39;jane&#39;, &#39;A&#39;, 12), (&#39;dave&#39;, &#39;B&#39;, 10)]\nstudents.sort(key&#x3D;lambda x: x[2])  # 按照列表中第三个元素排序\nprint(students)  # [(&#39;dave&#39;, &#39;B&#39;, 10), (&#39;jane&#39;, &#39;A&#39;, 12), (&#39;john&#39;, &#39;C&#39;, 15)]</code></pre>\n\n<h1 id=\"sorted\"><a href=\"#sorted\" class=\"headerlink\" title=\"sorted()\"></a>sorted()</h1><p>sorted(iterable [, key[, reverse]])</p>\n<ul>\n<li><strong>key</strong> ：设置排序方法，或指定迭代对象中，用于排序的元素；</li>\n<li><strong>reverse</strong> ：升降序排列，默认为升序排列；</li>\n</ul>\n<p>例子：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">nums &#x3D; [2, 3, 5, 1, 6]\nnewNums &#x3D; sorted(nums)\nprint(nums)  # [2, 3, 5, 1, 6]\nprint(newNums)  # [1, 2, 3, 5, 6]\nstudents &#x3D; [(&#39;john&#39;, &#39;C&#39;, 15), (&#39;jane&#39;, &#39;A&#39;, 12), (&#39;dave&#39;, &#39;B&#39;, 10)]\nnewStudents &#x3D; sorted(students, key&#x3D;lambda x: x[1])\nprint(students)  # [(&#39;john&#39;, &#39;C&#39;, 15), (&#39;jane&#39;, &#39;A&#39;, 12), (&#39;dave&#39;, &#39;B&#39;, 10)]\nprint(newStudents)  # [(&#39;jane&#39;, &#39;A&#39;, 12), (&#39;dave&#39;, &#39;B&#39;, 10), (&#39;john&#39;, &#39;C&#39;, 15)]</code></pre>\n<script src=\"https://readmore.openwrite.cn/js/readmore.js\" type=\"text/javascript\"></script>\n<script>\n    const btw = new BTWPlugin();\n    btw.init({\n        id: 'article-container',\n        blogId: '28702-1640918923546-365',\n        name: '龙儿之家',\n        qrcode: 'https://blog.huangge1199.cn/images/WeaselLong.jpg',\n        keyword: 'more',\n    });\n</script>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.gitee.io/zh-CN/","avatar":"https://element-plus.gitee.io/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"}}},"excerpt":"","more":"<h1 id=\"列表排序方法\"><a href=\"#列表排序方法\" class=\"headerlink\" title=\"列表排序方法\"></a>列表排序方法</h1><ul>\n<li>sort()：仅对list对象进行排序，会改变list自身的顺序，没有返回值，即<strong>原地排序</strong></li>\n<li>sorted()：对所有可迭代对象进行排序，返回排序后的新对象，原对象保持不变；</li>\n</ul>\n<h1 id=\"sort\"><a href=\"#sort\" class=\"headerlink\" title=\"sort()\"></a>sort()</h1><p>list.sort(key&#x3D;None, reverse&#x3D;False)</p>\n<ul>\n<li><strong>key</strong>：设置排序方法，或指定list中用于排序的元素；</li>\n<li><strong>reverse</strong>：升降序排列，默认为升序排列；</li>\n</ul>\n<p>例子：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">nums &#x3D; [2, 3, 5, 1, 6]\nnums.sort()\nprint(nums)  # [1, 2, 3, 5, 6]\nnums.sort(key&#x3D;None, reverse&#x3D;True)\nprint(nums)  # [6, 5, 3, 2, 1]\n    \nstudents &#x3D; [(&#39;john&#39;, &#39;C&#39;, 15), (&#39;jane&#39;, &#39;A&#39;, 12), (&#39;dave&#39;, &#39;B&#39;, 10)]\nstudents.sort(key&#x3D;lambda x: x[2])  # 按照列表中第三个元素排序\nprint(students)  # [(&#39;dave&#39;, &#39;B&#39;, 10), (&#39;jane&#39;, &#39;A&#39;, 12), (&#39;john&#39;, &#39;C&#39;, 15)]</code></pre>\n\n<h1 id=\"sorted\"><a href=\"#sorted\" class=\"headerlink\" title=\"sorted()\"></a>sorted()</h1><p>sorted(iterable [, key[, reverse]])</p>\n<ul>\n<li><strong>key</strong> ：设置排序方法，或指定迭代对象中，用于排序的元素；</li>\n<li><strong>reverse</strong> ：升降序排列，默认为升序排列；</li>\n</ul>\n<p>例子：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">nums &#x3D; [2, 3, 5, 1, 6]\nnewNums &#x3D; sorted(nums)\nprint(nums)  # [2, 3, 5, 1, 6]\nprint(newNums)  # [1, 2, 3, 5, 6]\nstudents &#x3D; [(&#39;john&#39;, &#39;C&#39;, 15), (&#39;jane&#39;, &#39;A&#39;, 12), (&#39;dave&#39;, &#39;B&#39;, 10)]\nnewStudents &#x3D; sorted(students, key&#x3D;lambda x: x[1])\nprint(students)  # [(&#39;john&#39;, &#39;C&#39;, 15), (&#39;jane&#39;, &#39;A&#39;, 12), (&#39;dave&#39;, &#39;B&#39;, 10)]\nprint(newStudents)  # [(&#39;jane&#39;, &#39;A&#39;, 12), (&#39;dave&#39;, &#39;B&#39;, 10), (&#39;john&#39;, &#39;C&#39;, 15)]</code></pre>\n<script src=\"https://readmore.openwrite.cn/js/readmore.js\" type=\"text/javascript\"></script>\n<script>\n    const btw = new BTWPlugin();\n    btw.init({\n        id: 'article-container',\n        blogId: '28702-1640918923546-365',\n        name: '龙儿之家',\n        qrcode: 'https://blog.huangge1199.cn/images/WeaselLong.jpg',\n        keyword: 'more',\n    });\n</script>\n"},{"title":"python3学习笔记--列表切片","date":"2022-03-01T01:47:34.000Z","_content":"\n列表切片（**List slices**）提供了从列表中检索值的更高级的方法。\n\n> 列表名[num1 : num2 : num3]\n> \n> 从索引num1到num2（不包括num2）间隔为num3的元素\n> \n> num1或num2为负值代表从末尾开始算起的\n> \n> num3为负值代表切片进行逆序截取\n\n以下为具体说明\n\n# 基本用法\n\n用两个以冒号分隔的整数索引列表。\n\n列表切片返回一个包含索引之间旧列表中所有值的新列表。\n\n例如：\n\n```python\nsquares = [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]\nprint(squares[2:6])\nprint(squares[3:8])\nprint(squares[0:1])\n```\n\n结果：\n\n```python\n[4, 9, 16, 25]\n[9, 16, 25, 36, 49]\n[0]\n```\n\n> 和Range参数一样，在一个 slice 中提供的第一个索引被包含在结果中，但是第二个索引没有。\n\n# 省略一个数字\n\n如果省略了切片中的第一个数字，则将从列表第一个元素开始。  \n\n如果第二个数字被省略，则认为是到列表结束。  \n\n例如：\n\n```python\nsquares = [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]\nprint(squares[:7])\nprint(squares[7:])\n```\n\n结果：\n\n```python\n[0, 1, 4, 9, 16, 25, 36]\n[49, 64, 81]\n```\n\n> 切片也可以用在元组上\n\n# 带间隔的切片\n\n列表切片还可以有第三个数字，表示间隔。\n\n例如：\n\n```python\nsquares = [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]\nprint(squares[::2])\nprint(squares[2:8:3])\n```\n\n结果：\n\n```python\n[0, 4, 16, 36, 64]\n[4, 25]\n```\n\n> [2：8：3] 包含从索引2到8间隔3的元素。\n\n# 带负值\n\n负值也可用于列表切片（和正常列表索引）。当切片（或普通索引）中的第一个和第二个值使用负值时，它们将从列表的末尾算起。\n\n例如：\n\n```python\nsquares = [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]\nprint(squares[1:-1])\nprint(squares[-3:-1])\nprint(squares[::-1])\n```\n\n结果：\n\n```python\n[1, 4, 9, 16, 25, 36, 49, 64]\n[49, 64]\n[81, 64, 49, 36, 25, 16, 9, 4, 1, 0]\n```\n\n> 如果切片第三个数值使用负值，则切片进行逆序截取。  \n> 使用[::-1]作为切片是反转列表的常用方法。\n","source":"_posts/pyListSlice.md","raw":"---\ntitle: python3学习笔记--列表切片\ndate: 2022-03-01 09:47:34\ntags: [学习笔记,python]\ncategories: python\n---\n\n列表切片（**List slices**）提供了从列表中检索值的更高级的方法。\n\n> 列表名[num1 : num2 : num3]\n> \n> 从索引num1到num2（不包括num2）间隔为num3的元素\n> \n> num1或num2为负值代表从末尾开始算起的\n> \n> num3为负值代表切片进行逆序截取\n\n以下为具体说明\n\n# 基本用法\n\n用两个以冒号分隔的整数索引列表。\n\n列表切片返回一个包含索引之间旧列表中所有值的新列表。\n\n例如：\n\n```python\nsquares = [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]\nprint(squares[2:6])\nprint(squares[3:8])\nprint(squares[0:1])\n```\n\n结果：\n\n```python\n[4, 9, 16, 25]\n[9, 16, 25, 36, 49]\n[0]\n```\n\n> 和Range参数一样，在一个 slice 中提供的第一个索引被包含在结果中，但是第二个索引没有。\n\n# 省略一个数字\n\n如果省略了切片中的第一个数字，则将从列表第一个元素开始。  \n\n如果第二个数字被省略，则认为是到列表结束。  \n\n例如：\n\n```python\nsquares = [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]\nprint(squares[:7])\nprint(squares[7:])\n```\n\n结果：\n\n```python\n[0, 1, 4, 9, 16, 25, 36]\n[49, 64, 81]\n```\n\n> 切片也可以用在元组上\n\n# 带间隔的切片\n\n列表切片还可以有第三个数字，表示间隔。\n\n例如：\n\n```python\nsquares = [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]\nprint(squares[::2])\nprint(squares[2:8:3])\n```\n\n结果：\n\n```python\n[0, 4, 16, 36, 64]\n[4, 25]\n```\n\n> [2：8：3] 包含从索引2到8间隔3的元素。\n\n# 带负值\n\n负值也可用于列表切片（和正常列表索引）。当切片（或普通索引）中的第一个和第二个值使用负值时，它们将从列表的末尾算起。\n\n例如：\n\n```python\nsquares = [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]\nprint(squares[1:-1])\nprint(squares[-3:-1])\nprint(squares[::-1])\n```\n\n结果：\n\n```python\n[1, 4, 9, 16, 25, 36, 49, 64]\n[49, 64]\n[81, 64, 49, 36, 25, 16, 9, 4, 1, 0]\n```\n\n> 如果切片第三个数值使用负值，则切片进行逆序截取。  \n> 使用[::-1]作为切片是反转列表的常用方法。\n","slug":"pyListSlice","published":1,"updated":"2022-03-01T02:10:47.932Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl0t0rrlm002a4ctudy43cs0i","content":"<p>列表切片（<strong>List slices</strong>）提供了从列表中检索值的更高级的方法。</p>\n<blockquote>\n<p>列表名[num1 : num2 : num3]</p>\n<p>从索引num1到num2（不包括num2）间隔为num3的元素</p>\n<p>num1或num2为负值代表从末尾开始算起的</p>\n<p>num3为负值代表切片进行逆序截取</p>\n</blockquote>\n<p>以下为具体说明</p>\n<h1 id=\"基本用法\"><a href=\"#基本用法\" class=\"headerlink\" title=\"基本用法\"></a>基本用法</h1><p>用两个以冒号分隔的整数索引列表。</p>\n<p>列表切片返回一个包含索引之间旧列表中所有值的新列表。</p>\n<p>例如：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">squares &#x3D; [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]\nprint(squares[2:6])\nprint(squares[3:8])\nprint(squares[0:1])</code></pre>\n\n<p>结果：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">[4, 9, 16, 25]\n[9, 16, 25, 36, 49]\n[0]</code></pre>\n\n<blockquote>\n<p>和Range参数一样，在一个 slice 中提供的第一个索引被包含在结果中，但是第二个索引没有。</p>\n</blockquote>\n<h1 id=\"省略一个数字\"><a href=\"#省略一个数字\" class=\"headerlink\" title=\"省略一个数字\"></a>省略一个数字</h1><p>如果省略了切片中的第一个数字，则将从列表第一个元素开始。  </p>\n<p>如果第二个数字被省略，则认为是到列表结束。  </p>\n<p>例如：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">squares &#x3D; [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]\nprint(squares[:7])\nprint(squares[7:])</code></pre>\n\n<p>结果：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">[0, 1, 4, 9, 16, 25, 36]\n[49, 64, 81]</code></pre>\n\n<blockquote>\n<p>切片也可以用在元组上</p>\n</blockquote>\n<h1 id=\"带间隔的切片\"><a href=\"#带间隔的切片\" class=\"headerlink\" title=\"带间隔的切片\"></a>带间隔的切片</h1><p>列表切片还可以有第三个数字，表示间隔。</p>\n<p>例如：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">squares &#x3D; [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]\nprint(squares[::2])\nprint(squares[2:8:3])</code></pre>\n\n<p>结果：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">[0, 4, 16, 36, 64]\n[4, 25]</code></pre>\n\n<blockquote>\n<p>[2：8：3] 包含从索引2到8间隔3的元素。</p>\n</blockquote>\n<h1 id=\"带负值\"><a href=\"#带负值\" class=\"headerlink\" title=\"带负值\"></a>带负值</h1><p>负值也可用于列表切片（和正常列表索引）。当切片（或普通索引）中的第一个和第二个值使用负值时，它们将从列表的末尾算起。</p>\n<p>例如：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">squares &#x3D; [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]\nprint(squares[1:-1])\nprint(squares[-3:-1])\nprint(squares[::-1])</code></pre>\n\n<p>结果：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">[1, 4, 9, 16, 25, 36, 49, 64]\n[49, 64]\n[81, 64, 49, 36, 25, 16, 9, 4, 1, 0]</code></pre>\n\n<blockquote>\n<p>如果切片第三个数值使用负值，则切片进行逆序截取。<br>使用[::-1]作为切片是反转列表的常用方法。</p>\n</blockquote>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.gitee.io/zh-CN/","avatar":"https://element-plus.gitee.io/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"}}},"cover":"https://blog.huangge1199.cn/images/bg.jpeg","excerpt":"","more":"<p>列表切片（<strong>List slices</strong>）提供了从列表中检索值的更高级的方法。</p>\n<blockquote>\n<p>列表名[num1 : num2 : num3]</p>\n<p>从索引num1到num2（不包括num2）间隔为num3的元素</p>\n<p>num1或num2为负值代表从末尾开始算起的</p>\n<p>num3为负值代表切片进行逆序截取</p>\n</blockquote>\n<p>以下为具体说明</p>\n<h1 id=\"基本用法\"><a href=\"#基本用法\" class=\"headerlink\" title=\"基本用法\"></a>基本用法</h1><p>用两个以冒号分隔的整数索引列表。</p>\n<p>列表切片返回一个包含索引之间旧列表中所有值的新列表。</p>\n<p>例如：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">squares &#x3D; [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]\nprint(squares[2:6])\nprint(squares[3:8])\nprint(squares[0:1])</code></pre>\n\n<p>结果：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">[4, 9, 16, 25]\n[9, 16, 25, 36, 49]\n[0]</code></pre>\n\n<blockquote>\n<p>和Range参数一样，在一个 slice 中提供的第一个索引被包含在结果中，但是第二个索引没有。</p>\n</blockquote>\n<h1 id=\"省略一个数字\"><a href=\"#省略一个数字\" class=\"headerlink\" title=\"省略一个数字\"></a>省略一个数字</h1><p>如果省略了切片中的第一个数字，则将从列表第一个元素开始。  </p>\n<p>如果第二个数字被省略，则认为是到列表结束。  </p>\n<p>例如：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">squares &#x3D; [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]\nprint(squares[:7])\nprint(squares[7:])</code></pre>\n\n<p>结果：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">[0, 1, 4, 9, 16, 25, 36]\n[49, 64, 81]</code></pre>\n\n<blockquote>\n<p>切片也可以用在元组上</p>\n</blockquote>\n<h1 id=\"带间隔的切片\"><a href=\"#带间隔的切片\" class=\"headerlink\" title=\"带间隔的切片\"></a>带间隔的切片</h1><p>列表切片还可以有第三个数字，表示间隔。</p>\n<p>例如：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">squares &#x3D; [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]\nprint(squares[::2])\nprint(squares[2:8:3])</code></pre>\n\n<p>结果：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">[0, 4, 16, 36, 64]\n[4, 25]</code></pre>\n\n<blockquote>\n<p>[2：8：3] 包含从索引2到8间隔3的元素。</p>\n</blockquote>\n<h1 id=\"带负值\"><a href=\"#带负值\" class=\"headerlink\" title=\"带负值\"></a>带负值</h1><p>负值也可用于列表切片（和正常列表索引）。当切片（或普通索引）中的第一个和第二个值使用负值时，它们将从列表的末尾算起。</p>\n<p>例如：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">squares &#x3D; [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]\nprint(squares[1:-1])\nprint(squares[-3:-1])\nprint(squares[::-1])</code></pre>\n\n<p>结果：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">[1, 4, 9, 16, 25, 36, 49, 64]\n[49, 64]\n[81, 64, 49, 36, 25, 16, 9, 4, 1, 0]</code></pre>\n\n<blockquote>\n<p>如果切片第三个数值使用负值，则切片进行逆序截取。<br>使用[::-1]作为切片是反转列表的常用方法。</p>\n</blockquote>\n"},{"title":"python3学习笔记--集合、元组、字典、列表对比","date":"2022-03-03T13:55:20.000Z","_content":"\n# 数据结构\n\nPython支持以下数据结构：列表，字典，元组，集合。\n\n**何时使用字典：**\n\n- 当您需要键：值对之间的逻辑关联时。\n\n- 当您需要基于自定义密钥快速查找数据时。\n\n- 当你的数据不断修改时。请记住，字典是可变的。\n\n**何时使用其他类型：**\n\n- 如果您有一些不需要随机访问的数据集合，请使用列表。当你需要一个简单的，可迭代的频繁修改的集合可以使用列表。\n\n- 如果你需要元素的唯一性，使用集合。\n\n- 当数据无法更改时使用元组。\n\n> 很多时候，元组与字典结合使用，例如元组可能代表一个关键字，因为它是不可变的。\n\n# 1、列表\n\n使用**方括号**创建\n\n```python\nwords = [\"Hello\", \"world\", \"!\"]\n```\n\n>使用空的方括号创建空列表\n>\n>可以通过索引来访问\n>\n>大多数情况下，列表中的最后一项不会带逗号。然而，在最后一项放置一个逗号是完全有效的，在某些情况下是鼓励的。 \n>\n>列表的索引是从0开始的，而不是从1开始的\n\n# 2、集合\n\n使用**花括号**或 **set** 函数创建\n\n```python\nnum_set = {1, 2, 3, 4, 5}\nword_set = set([\"spam\", \"eggs\", \"sausage\"])\n```\n\n> 要创建一个空集，必须使用 set()，如 {} 是创建一个空字典。\n> \n> 集合是**无序**的，这意味着他们不能被索引。\n> \n> 集合不能包含重复的元素。\n> \n> 由于存储的方式，检查一个项目是否是一个集合的一部分比检查是不是列表的一部分**更快**。  \n> \n> 集合使用 **add** 添加元素 。  \n> \n> **remove** 方法从集合中删除特定的元素; **pop** 删除随机的元素。\n\n#  3、元组\n\n元组 使用**圆括号**创建 ，也可以在没有**圆括号**的情况下创建\n\n```python\nwords = (\"spam\", \"eggs\", \"sausages\",)\nmy_tuple = \"one\", \"two\", \"three\"\n```\n\n> 使用空括号对创建空元组。\n>\n> 元组比列表快，但是元组不能改变。 \n>\n> 可以使用索引访问元组中的值。\n\n# 4、字典\n\n字典是用于将任意键映射到值的数据结构\n\n```python\nages = {\"Dave\": 24, \"Mary\": 42, \"John\": 58}\n```\n\n> 空字典被定义为{}。\n>\n> 字典 中的每个元素都由一个 键:值 对来表示。 \n>\n> 使用 **字典[\"键名\"]** 可以获取对应的值。\n\n\n\n","source":"_posts/pyMulCom.md","raw":"---\ntitle: python3学习笔记--集合、元组、字典、列表对比\ndate: 2022-03-03 21:55:20\ntags: [学习笔记,python]\ncategories: python\n---\n\n# 数据结构\n\nPython支持以下数据结构：列表，字典，元组，集合。\n\n**何时使用字典：**\n\n- 当您需要键：值对之间的逻辑关联时。\n\n- 当您需要基于自定义密钥快速查找数据时。\n\n- 当你的数据不断修改时。请记住，字典是可变的。\n\n**何时使用其他类型：**\n\n- 如果您有一些不需要随机访问的数据集合，请使用列表。当你需要一个简单的，可迭代的频繁修改的集合可以使用列表。\n\n- 如果你需要元素的唯一性，使用集合。\n\n- 当数据无法更改时使用元组。\n\n> 很多时候，元组与字典结合使用，例如元组可能代表一个关键字，因为它是不可变的。\n\n# 1、列表\n\n使用**方括号**创建\n\n```python\nwords = [\"Hello\", \"world\", \"!\"]\n```\n\n>使用空的方括号创建空列表\n>\n>可以通过索引来访问\n>\n>大多数情况下，列表中的最后一项不会带逗号。然而，在最后一项放置一个逗号是完全有效的，在某些情况下是鼓励的。 \n>\n>列表的索引是从0开始的，而不是从1开始的\n\n# 2、集合\n\n使用**花括号**或 **set** 函数创建\n\n```python\nnum_set = {1, 2, 3, 4, 5}\nword_set = set([\"spam\", \"eggs\", \"sausage\"])\n```\n\n> 要创建一个空集，必须使用 set()，如 {} 是创建一个空字典。\n> \n> 集合是**无序**的，这意味着他们不能被索引。\n> \n> 集合不能包含重复的元素。\n> \n> 由于存储的方式，检查一个项目是否是一个集合的一部分比检查是不是列表的一部分**更快**。  \n> \n> 集合使用 **add** 添加元素 。  \n> \n> **remove** 方法从集合中删除特定的元素; **pop** 删除随机的元素。\n\n#  3、元组\n\n元组 使用**圆括号**创建 ，也可以在没有**圆括号**的情况下创建\n\n```python\nwords = (\"spam\", \"eggs\", \"sausages\",)\nmy_tuple = \"one\", \"two\", \"three\"\n```\n\n> 使用空括号对创建空元组。\n>\n> 元组比列表快，但是元组不能改变。 \n>\n> 可以使用索引访问元组中的值。\n\n# 4、字典\n\n字典是用于将任意键映射到值的数据结构\n\n```python\nages = {\"Dave\": 24, \"Mary\": 42, \"John\": 58}\n```\n\n> 空字典被定义为{}。\n>\n> 字典 中的每个元素都由一个 键:值 对来表示。 \n>\n> 使用 **字典[\"键名\"]** 可以获取对应的值。\n\n\n\n","slug":"pyMulCom","published":1,"updated":"2022-03-04T02:35:48.465Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl0t0rrlm002e4ctuaexu3lk6","content":"<h1 id=\"数据结构\"><a href=\"#数据结构\" class=\"headerlink\" title=\"数据结构\"></a>数据结构</h1><p>Python支持以下数据结构：列表，字典，元组，集合。</p>\n<p><strong>何时使用字典：</strong></p>\n<ul>\n<li><p>当您需要键：值对之间的逻辑关联时。</p>\n</li>\n<li><p>当您需要基于自定义密钥快速查找数据时。</p>\n</li>\n<li><p>当你的数据不断修改时。请记住，字典是可变的。</p>\n</li>\n</ul>\n<p><strong>何时使用其他类型：</strong></p>\n<ul>\n<li><p>如果您有一些不需要随机访问的数据集合，请使用列表。当你需要一个简单的，可迭代的频繁修改的集合可以使用列表。</p>\n</li>\n<li><p>如果你需要元素的唯一性，使用集合。</p>\n</li>\n<li><p>当数据无法更改时使用元组。</p>\n</li>\n</ul>\n<blockquote>\n<p>很多时候，元组与字典结合使用，例如元组可能代表一个关键字，因为它是不可变的。</p>\n</blockquote>\n<h1 id=\"1、列表\"><a href=\"#1、列表\" class=\"headerlink\" title=\"1、列表\"></a>1、列表</h1><p>使用<strong>方括号</strong>创建</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">words &#x3D; [&quot;Hello&quot;, &quot;world&quot;, &quot;!&quot;]</code></pre>\n\n<blockquote>\n<p>使用空的方括号创建空列表</p>\n<p>可以通过索引来访问</p>\n<p>大多数情况下，列表中的最后一项不会带逗号。然而，在最后一项放置一个逗号是完全有效的，在某些情况下是鼓励的。 </p>\n<p>列表的索引是从0开始的，而不是从1开始的</p>\n</blockquote>\n<h1 id=\"2、集合\"><a href=\"#2、集合\" class=\"headerlink\" title=\"2、集合\"></a>2、集合</h1><p>使用<strong>花括号</strong>或 <strong>set</strong> 函数创建</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">num_set &#x3D; &#123;1, 2, 3, 4, 5&#125;\nword_set &#x3D; set([&quot;spam&quot;, &quot;eggs&quot;, &quot;sausage&quot;])</code></pre>\n\n<blockquote>\n<p>要创建一个空集，必须使用 set()，如 {} 是创建一个空字典。</p>\n<p>集合是<strong>无序</strong>的，这意味着他们不能被索引。</p>\n<p>集合不能包含重复的元素。</p>\n<p>由于存储的方式，检查一个项目是否是一个集合的一部分比检查是不是列表的一部分<strong>更快</strong>。  </p>\n<p>集合使用 <strong>add</strong> 添加元素 。  </p>\n<p><strong>remove</strong> 方法从集合中删除特定的元素; <strong>pop</strong> 删除随机的元素。</p>\n</blockquote>\n<h1 id=\"3、元组\"><a href=\"#3、元组\" class=\"headerlink\" title=\"3、元组\"></a>3、元组</h1><p>元组 使用<strong>圆括号</strong>创建 ，也可以在没有<strong>圆括号</strong>的情况下创建</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">words &#x3D; (&quot;spam&quot;, &quot;eggs&quot;, &quot;sausages&quot;,)\nmy_tuple &#x3D; &quot;one&quot;, &quot;two&quot;, &quot;three&quot;</code></pre>\n\n<blockquote>\n<p>使用空括号对创建空元组。</p>\n<p>元组比列表快，但是元组不能改变。 </p>\n<p>可以使用索引访问元组中的值。</p>\n</blockquote>\n<h1 id=\"4、字典\"><a href=\"#4、字典\" class=\"headerlink\" title=\"4、字典\"></a>4、字典</h1><p>字典是用于将任意键映射到值的数据结构</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">ages &#x3D; &#123;&quot;Dave&quot;: 24, &quot;Mary&quot;: 42, &quot;John&quot;: 58&#125;</code></pre>\n\n<blockquote>\n<p>空字典被定义为{}。</p>\n<p>字典 中的每个元素都由一个 键:值 对来表示。 </p>\n<p>使用 <strong>字典[“键名”]</strong> 可以获取对应的值。</p>\n</blockquote>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.gitee.io/zh-CN/","avatar":"https://element-plus.gitee.io/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"}}},"cover":"https://file.huangge1199.cn/group1/M00/00/00/CgAYB2HzmTKAcuJeAAKgw-sbfmQ23.jpeg","excerpt":"","more":"<h1 id=\"数据结构\"><a href=\"#数据结构\" class=\"headerlink\" title=\"数据结构\"></a>数据结构</h1><p>Python支持以下数据结构：列表，字典，元组，集合。</p>\n<p><strong>何时使用字典：</strong></p>\n<ul>\n<li><p>当您需要键：值对之间的逻辑关联时。</p>\n</li>\n<li><p>当您需要基于自定义密钥快速查找数据时。</p>\n</li>\n<li><p>当你的数据不断修改时。请记住，字典是可变的。</p>\n</li>\n</ul>\n<p><strong>何时使用其他类型：</strong></p>\n<ul>\n<li><p>如果您有一些不需要随机访问的数据集合，请使用列表。当你需要一个简单的，可迭代的频繁修改的集合可以使用列表。</p>\n</li>\n<li><p>如果你需要元素的唯一性，使用集合。</p>\n</li>\n<li><p>当数据无法更改时使用元组。</p>\n</li>\n</ul>\n<blockquote>\n<p>很多时候，元组与字典结合使用，例如元组可能代表一个关键字，因为它是不可变的。</p>\n</blockquote>\n<h1 id=\"1、列表\"><a href=\"#1、列表\" class=\"headerlink\" title=\"1、列表\"></a>1、列表</h1><p>使用<strong>方括号</strong>创建</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">words &#x3D; [&quot;Hello&quot;, &quot;world&quot;, &quot;!&quot;]</code></pre>\n\n<blockquote>\n<p>使用空的方括号创建空列表</p>\n<p>可以通过索引来访问</p>\n<p>大多数情况下，列表中的最后一项不会带逗号。然而，在最后一项放置一个逗号是完全有效的，在某些情况下是鼓励的。 </p>\n<p>列表的索引是从0开始的，而不是从1开始的</p>\n</blockquote>\n<h1 id=\"2、集合\"><a href=\"#2、集合\" class=\"headerlink\" title=\"2、集合\"></a>2、集合</h1><p>使用<strong>花括号</strong>或 <strong>set</strong> 函数创建</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">num_set &#x3D; &#123;1, 2, 3, 4, 5&#125;\nword_set &#x3D; set([&quot;spam&quot;, &quot;eggs&quot;, &quot;sausage&quot;])</code></pre>\n\n<blockquote>\n<p>要创建一个空集，必须使用 set()，如 {} 是创建一个空字典。</p>\n<p>集合是<strong>无序</strong>的，这意味着他们不能被索引。</p>\n<p>集合不能包含重复的元素。</p>\n<p>由于存储的方式，检查一个项目是否是一个集合的一部分比检查是不是列表的一部分<strong>更快</strong>。  </p>\n<p>集合使用 <strong>add</strong> 添加元素 。  </p>\n<p><strong>remove</strong> 方法从集合中删除特定的元素; <strong>pop</strong> 删除随机的元素。</p>\n</blockquote>\n<h1 id=\"3、元组\"><a href=\"#3、元组\" class=\"headerlink\" title=\"3、元组\"></a>3、元组</h1><p>元组 使用<strong>圆括号</strong>创建 ，也可以在没有<strong>圆括号</strong>的情况下创建</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">words &#x3D; (&quot;spam&quot;, &quot;eggs&quot;, &quot;sausages&quot;,)\nmy_tuple &#x3D; &quot;one&quot;, &quot;two&quot;, &quot;three&quot;</code></pre>\n\n<blockquote>\n<p>使用空括号对创建空元组。</p>\n<p>元组比列表快，但是元组不能改变。 </p>\n<p>可以使用索引访问元组中的值。</p>\n</blockquote>\n<h1 id=\"4、字典\"><a href=\"#4、字典\" class=\"headerlink\" title=\"4、字典\"></a>4、字典</h1><p>字典是用于将任意键映射到值的数据结构</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">ages &#x3D; &#123;&quot;Dave&quot;: 24, &quot;Mary&quot;: 42, &quot;John&quot;: 58&#125;</code></pre>\n\n<blockquote>\n<p>空字典被定义为{}。</p>\n<p>字典 中的每个元素都由一个 键:值 对来表示。 </p>\n<p>使用 <strong>字典[“键名”]</strong> 可以获取对应的值。</p>\n</blockquote>\n"},{"title":"python3学习笔记--常用的函数","date":"2022-03-01T01:02:19.000Z","_content":"\n{% note info no-icon %}\n本篇博客内容为学习整理笔记，学习地址为：\nhttps://www.w3cschool.cn/minicourse/play/python3course?cp=427&gid=0\n{% endnote %}\n\n# 字符串函数\n\n## 1、join\n\n以另一个字符串作为分隔符连接字符串列表。\n\n例如：\n\n```python\nprint(\", \".join([\"spam\", \"eggs\", \"ham\"]))\n# 打印 \"spam, eggs, ham\"\n```\n\n## 2、replace\n\n用另一个替换字符串中的一个子字符串。\n\n例如：\n\n```python\nprint(\"Hello ME\".replace(\"ME\", \"world\"))\n# 打印 \"Hello world\"\n```\n\n## 3、startswith\n\n确定是否在字符串的开始处有一个子字符串。\n\n例如：\n\n```python\nprint(\"This is a sentence.\".startswith(\"This\"))\n# 打印 \"True\"\n```\n\n## 4、endswith\n\n确定是否在字符串的结尾处有一个子字符串。\n\n例如：\n\n```python\nprint(\"This is a sentence.\".endswith(\"sentence.\"))\n# 打印 \"True\"\n```\n\n## 5、lower\n\n将字符串全部转为小写。\n\n例如：\n\n```python\nprint(\"AN ALL CAPS SENTENCE\".lower())\n# 打印  \"an all caps sentence\"\n```\n\n## 6、upper\n\n将字符串全部转为大写。\n\n例如：\n\n```python\nprint(\"This is a sentence.\".upper())\n# 打印 \"THIS IS A SENTENCE.\"\n```\n\n## 7、split\n\n把一个字符串转换成一个列表。\n\n例如：\n\n```python\nprint(\"spam, eggs, ham\".split(\", \"))\n# 打印  \"['spam', 'eggs', 'ham']\"\n```\n\n# 数字函数\n\n## 1、max\n\n查找某些数字或列表的最大值。\n\n例如：\n\n```python\nprint(max([1, 2, 9, 2, 4, 7, 8]))\n# 打印 9\n```\n\n## 2、min\n\n查找某些数字或列表的最小值。\n\n例如：\n\n```python\nprint(min(1, 6, 3, 4, 0, 7, 1))\n# 打印 0\n```\n\n## 3、abs\n\n将数字转成绝对值（该数字与0的距离）。\n\n例如：\n\n```python\nprint(abs(-93))\nprint(abs(22))\n# 打印 93\n```\n\n## 4、round\n\n要将数字四舍五入到一定的小数位数。\n\n## 5、sum\n\n计算一个列表数字的总和。\n\n例如：\n\n```python\nprint(sum([1, 2, 3, 4, 5, 6]))\n# 打印 21\n```\n\n# 列表函数\n\n## 1、all\n\n列表中所有值均为 True 时，结果为 True，否则结果为 False。\n\n例如：\n\n```python\nnums = [55, 44, 33, 22, 11]\n\nif all([i > 5 for i in nums]):\n    print(\"All larger than 5\")\n\n# 打印 All larger than 5\n```\n\n## 2、any\n\n列表中只要有一个为 True，结果为 True，反之结果为 False。\n\n例如：\n\n```python\nnums = [55, 44, 33, 22, 11]\n\nif any([i % 2 == 0 for i in nums]):\n   print(\"At least one is even\")\n\n# 打印 At least one is even5\n```\n\n## 3、enumerate\n\n用来同时迭代列表的键和值。\n\n例如：\n\n```python\nnums = [55, 44, 33, 22, 11]\n\nfor v in enumerate(nums):\n   print(v)\n\n# 打印\n# (0, 55)\n# (1, 44)\n# (2, 33)\n# (3, 22)\n# (4, 11)\n```\n","source":"_posts/pyUsefulFun.md","raw":"---\ntitle: python3学习笔记--常用的函数\ndate: 2022-03-01 09:02:19\ntags: [学习笔记,python]\ncategories: python\n---\n\n{% note info no-icon %}\n本篇博客内容为学习整理笔记，学习地址为：\nhttps://www.w3cschool.cn/minicourse/play/python3course?cp=427&gid=0\n{% endnote %}\n\n# 字符串函数\n\n## 1、join\n\n以另一个字符串作为分隔符连接字符串列表。\n\n例如：\n\n```python\nprint(\", \".join([\"spam\", \"eggs\", \"ham\"]))\n# 打印 \"spam, eggs, ham\"\n```\n\n## 2、replace\n\n用另一个替换字符串中的一个子字符串。\n\n例如：\n\n```python\nprint(\"Hello ME\".replace(\"ME\", \"world\"))\n# 打印 \"Hello world\"\n```\n\n## 3、startswith\n\n确定是否在字符串的开始处有一个子字符串。\n\n例如：\n\n```python\nprint(\"This is a sentence.\".startswith(\"This\"))\n# 打印 \"True\"\n```\n\n## 4、endswith\n\n确定是否在字符串的结尾处有一个子字符串。\n\n例如：\n\n```python\nprint(\"This is a sentence.\".endswith(\"sentence.\"))\n# 打印 \"True\"\n```\n\n## 5、lower\n\n将字符串全部转为小写。\n\n例如：\n\n```python\nprint(\"AN ALL CAPS SENTENCE\".lower())\n# 打印  \"an all caps sentence\"\n```\n\n## 6、upper\n\n将字符串全部转为大写。\n\n例如：\n\n```python\nprint(\"This is a sentence.\".upper())\n# 打印 \"THIS IS A SENTENCE.\"\n```\n\n## 7、split\n\n把一个字符串转换成一个列表。\n\n例如：\n\n```python\nprint(\"spam, eggs, ham\".split(\", \"))\n# 打印  \"['spam', 'eggs', 'ham']\"\n```\n\n# 数字函数\n\n## 1、max\n\n查找某些数字或列表的最大值。\n\n例如：\n\n```python\nprint(max([1, 2, 9, 2, 4, 7, 8]))\n# 打印 9\n```\n\n## 2、min\n\n查找某些数字或列表的最小值。\n\n例如：\n\n```python\nprint(min(1, 6, 3, 4, 0, 7, 1))\n# 打印 0\n```\n\n## 3、abs\n\n将数字转成绝对值（该数字与0的距离）。\n\n例如：\n\n```python\nprint(abs(-93))\nprint(abs(22))\n# 打印 93\n```\n\n## 4、round\n\n要将数字四舍五入到一定的小数位数。\n\n## 5、sum\n\n计算一个列表数字的总和。\n\n例如：\n\n```python\nprint(sum([1, 2, 3, 4, 5, 6]))\n# 打印 21\n```\n\n# 列表函数\n\n## 1、all\n\n列表中所有值均为 True 时，结果为 True，否则结果为 False。\n\n例如：\n\n```python\nnums = [55, 44, 33, 22, 11]\n\nif all([i > 5 for i in nums]):\n    print(\"All larger than 5\")\n\n# 打印 All larger than 5\n```\n\n## 2、any\n\n列表中只要有一个为 True，结果为 True，反之结果为 False。\n\n例如：\n\n```python\nnums = [55, 44, 33, 22, 11]\n\nif any([i % 2 == 0 for i in nums]):\n   print(\"At least one is even\")\n\n# 打印 At least one is even5\n```\n\n## 3、enumerate\n\n用来同时迭代列表的键和值。\n\n例如：\n\n```python\nnums = [55, 44, 33, 22, 11]\n\nfor v in enumerate(nums):\n   print(v)\n\n# 打印\n# (0, 55)\n# (1, 44)\n# (2, 33)\n# (3, 22)\n# (4, 11)\n```\n","slug":"pyUsefulFun","published":1,"updated":"2022-03-01T02:11:28.761Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl0t0rrm1005j4ctu01vl10f1","content":"<div class=\"note info no-icon flat\"><p>本篇博客内容为学习整理笔记，学习地址为：<br><a href=\"https://www.w3cschool.cn/minicourse/play/python3course?cp=427&amp;gid=0\">https://www.w3cschool.cn/minicourse/play/python3course?cp=427&amp;gid=0</a></p>\n</div>\n\n<h1 id=\"字符串函数\"><a href=\"#字符串函数\" class=\"headerlink\" title=\"字符串函数\"></a>字符串函数</h1><h2 id=\"1、join\"><a href=\"#1、join\" class=\"headerlink\" title=\"1、join\"></a>1、join</h2><p>以另一个字符串作为分隔符连接字符串列表。</p>\n<p>例如：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">print(&quot;, &quot;.join([&quot;spam&quot;, &quot;eggs&quot;, &quot;ham&quot;]))\n# 打印 &quot;spam, eggs, ham&quot;</code></pre>\n\n<h2 id=\"2、replace\"><a href=\"#2、replace\" class=\"headerlink\" title=\"2、replace\"></a>2、replace</h2><p>用另一个替换字符串中的一个子字符串。</p>\n<p>例如：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">print(&quot;Hello ME&quot;.replace(&quot;ME&quot;, &quot;world&quot;))\n# 打印 &quot;Hello world&quot;</code></pre>\n\n<h2 id=\"3、startswith\"><a href=\"#3、startswith\" class=\"headerlink\" title=\"3、startswith\"></a>3、startswith</h2><p>确定是否在字符串的开始处有一个子字符串。</p>\n<p>例如：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">print(&quot;This is a sentence.&quot;.startswith(&quot;This&quot;))\n# 打印 &quot;True&quot;</code></pre>\n\n<h2 id=\"4、endswith\"><a href=\"#4、endswith\" class=\"headerlink\" title=\"4、endswith\"></a>4、endswith</h2><p>确定是否在字符串的结尾处有一个子字符串。</p>\n<p>例如：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">print(&quot;This is a sentence.&quot;.endswith(&quot;sentence.&quot;))\n# 打印 &quot;True&quot;</code></pre>\n\n<h2 id=\"5、lower\"><a href=\"#5、lower\" class=\"headerlink\" title=\"5、lower\"></a>5、lower</h2><p>将字符串全部转为小写。</p>\n<p>例如：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">print(&quot;AN ALL CAPS SENTENCE&quot;.lower())\n# 打印  &quot;an all caps sentence&quot;</code></pre>\n\n<h2 id=\"6、upper\"><a href=\"#6、upper\" class=\"headerlink\" title=\"6、upper\"></a>6、upper</h2><p>将字符串全部转为大写。</p>\n<p>例如：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">print(&quot;This is a sentence.&quot;.upper())\n# 打印 &quot;THIS IS A SENTENCE.&quot;</code></pre>\n\n<h2 id=\"7、split\"><a href=\"#7、split\" class=\"headerlink\" title=\"7、split\"></a>7、split</h2><p>把一个字符串转换成一个列表。</p>\n<p>例如：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">print(&quot;spam, eggs, ham&quot;.split(&quot;, &quot;))\n# 打印  &quot;[&#39;spam&#39;, &#39;eggs&#39;, &#39;ham&#39;]&quot;</code></pre>\n\n<h1 id=\"数字函数\"><a href=\"#数字函数\" class=\"headerlink\" title=\"数字函数\"></a>数字函数</h1><h2 id=\"1、max\"><a href=\"#1、max\" class=\"headerlink\" title=\"1、max\"></a>1、max</h2><p>查找某些数字或列表的最大值。</p>\n<p>例如：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">print(max([1, 2, 9, 2, 4, 7, 8]))\n# 打印 9</code></pre>\n\n<h2 id=\"2、min\"><a href=\"#2、min\" class=\"headerlink\" title=\"2、min\"></a>2、min</h2><p>查找某些数字或列表的最小值。</p>\n<p>例如：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">print(min(1, 6, 3, 4, 0, 7, 1))\n# 打印 0</code></pre>\n\n<h2 id=\"3、abs\"><a href=\"#3、abs\" class=\"headerlink\" title=\"3、abs\"></a>3、abs</h2><p>将数字转成绝对值（该数字与0的距离）。</p>\n<p>例如：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">print(abs(-93))\nprint(abs(22))\n# 打印 93</code></pre>\n\n<h2 id=\"4、round\"><a href=\"#4、round\" class=\"headerlink\" title=\"4、round\"></a>4、round</h2><p>要将数字四舍五入到一定的小数位数。</p>\n<h2 id=\"5、sum\"><a href=\"#5、sum\" class=\"headerlink\" title=\"5、sum\"></a>5、sum</h2><p>计算一个列表数字的总和。</p>\n<p>例如：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">print(sum([1, 2, 3, 4, 5, 6]))\n# 打印 21</code></pre>\n\n<h1 id=\"列表函数\"><a href=\"#列表函数\" class=\"headerlink\" title=\"列表函数\"></a>列表函数</h1><h2 id=\"1、all\"><a href=\"#1、all\" class=\"headerlink\" title=\"1、all\"></a>1、all</h2><p>列表中所有值均为 True 时，结果为 True，否则结果为 False。</p>\n<p>例如：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">nums &#x3D; [55, 44, 33, 22, 11]\n\nif all([i &gt; 5 for i in nums]):\n    print(&quot;All larger than 5&quot;)\n\n# 打印 All larger than 5</code></pre>\n\n<h2 id=\"2、any\"><a href=\"#2、any\" class=\"headerlink\" title=\"2、any\"></a>2、any</h2><p>列表中只要有一个为 True，结果为 True，反之结果为 False。</p>\n<p>例如：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">nums &#x3D; [55, 44, 33, 22, 11]\n\nif any([i % 2 &#x3D;&#x3D; 0 for i in nums]):\n   print(&quot;At least one is even&quot;)\n\n# 打印 At least one is even5</code></pre>\n\n<h2 id=\"3、enumerate\"><a href=\"#3、enumerate\" class=\"headerlink\" title=\"3、enumerate\"></a>3、enumerate</h2><p>用来同时迭代列表的键和值。</p>\n<p>例如：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">nums &#x3D; [55, 44, 33, 22, 11]\n\nfor v in enumerate(nums):\n   print(v)\n\n# 打印\n# (0, 55)\n# (1, 44)\n# (2, 33)\n# (3, 22)\n# (4, 11)</code></pre>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.gitee.io/zh-CN/","avatar":"https://element-plus.gitee.io/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"}}},"cover":"https://blog.huangge1199.cn/post/nexusCreate/bg.jpeg","excerpt":"","more":"<div class=\"note info no-icon flat\"><p>本篇博客内容为学习整理笔记，学习地址为：<br><a href=\"https://www.w3cschool.cn/minicourse/play/python3course?cp=427&amp;gid=0\">https://www.w3cschool.cn/minicourse/play/python3course?cp=427&amp;gid=0</a></p>\n</div>\n\n<h1 id=\"字符串函数\"><a href=\"#字符串函数\" class=\"headerlink\" title=\"字符串函数\"></a>字符串函数</h1><h2 id=\"1、join\"><a href=\"#1、join\" class=\"headerlink\" title=\"1、join\"></a>1、join</h2><p>以另一个字符串作为分隔符连接字符串列表。</p>\n<p>例如：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">print(&quot;, &quot;.join([&quot;spam&quot;, &quot;eggs&quot;, &quot;ham&quot;]))\n# 打印 &quot;spam, eggs, ham&quot;</code></pre>\n\n<h2 id=\"2、replace\"><a href=\"#2、replace\" class=\"headerlink\" title=\"2、replace\"></a>2、replace</h2><p>用另一个替换字符串中的一个子字符串。</p>\n<p>例如：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">print(&quot;Hello ME&quot;.replace(&quot;ME&quot;, &quot;world&quot;))\n# 打印 &quot;Hello world&quot;</code></pre>\n\n<h2 id=\"3、startswith\"><a href=\"#3、startswith\" class=\"headerlink\" title=\"3、startswith\"></a>3、startswith</h2><p>确定是否在字符串的开始处有一个子字符串。</p>\n<p>例如：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">print(&quot;This is a sentence.&quot;.startswith(&quot;This&quot;))\n# 打印 &quot;True&quot;</code></pre>\n\n<h2 id=\"4、endswith\"><a href=\"#4、endswith\" class=\"headerlink\" title=\"4、endswith\"></a>4、endswith</h2><p>确定是否在字符串的结尾处有一个子字符串。</p>\n<p>例如：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">print(&quot;This is a sentence.&quot;.endswith(&quot;sentence.&quot;))\n# 打印 &quot;True&quot;</code></pre>\n\n<h2 id=\"5、lower\"><a href=\"#5、lower\" class=\"headerlink\" title=\"5、lower\"></a>5、lower</h2><p>将字符串全部转为小写。</p>\n<p>例如：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">print(&quot;AN ALL CAPS SENTENCE&quot;.lower())\n# 打印  &quot;an all caps sentence&quot;</code></pre>\n\n<h2 id=\"6、upper\"><a href=\"#6、upper\" class=\"headerlink\" title=\"6、upper\"></a>6、upper</h2><p>将字符串全部转为大写。</p>\n<p>例如：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">print(&quot;This is a sentence.&quot;.upper())\n# 打印 &quot;THIS IS A SENTENCE.&quot;</code></pre>\n\n<h2 id=\"7、split\"><a href=\"#7、split\" class=\"headerlink\" title=\"7、split\"></a>7、split</h2><p>把一个字符串转换成一个列表。</p>\n<p>例如：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">print(&quot;spam, eggs, ham&quot;.split(&quot;, &quot;))\n# 打印  &quot;[&#39;spam&#39;, &#39;eggs&#39;, &#39;ham&#39;]&quot;</code></pre>\n\n<h1 id=\"数字函数\"><a href=\"#数字函数\" class=\"headerlink\" title=\"数字函数\"></a>数字函数</h1><h2 id=\"1、max\"><a href=\"#1、max\" class=\"headerlink\" title=\"1、max\"></a>1、max</h2><p>查找某些数字或列表的最大值。</p>\n<p>例如：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">print(max([1, 2, 9, 2, 4, 7, 8]))\n# 打印 9</code></pre>\n\n<h2 id=\"2、min\"><a href=\"#2、min\" class=\"headerlink\" title=\"2、min\"></a>2、min</h2><p>查找某些数字或列表的最小值。</p>\n<p>例如：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">print(min(1, 6, 3, 4, 0, 7, 1))\n# 打印 0</code></pre>\n\n<h2 id=\"3、abs\"><a href=\"#3、abs\" class=\"headerlink\" title=\"3、abs\"></a>3、abs</h2><p>将数字转成绝对值（该数字与0的距离）。</p>\n<p>例如：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">print(abs(-93))\nprint(abs(22))\n# 打印 93</code></pre>\n\n<h2 id=\"4、round\"><a href=\"#4、round\" class=\"headerlink\" title=\"4、round\"></a>4、round</h2><p>要将数字四舍五入到一定的小数位数。</p>\n<h2 id=\"5、sum\"><a href=\"#5、sum\" class=\"headerlink\" title=\"5、sum\"></a>5、sum</h2><p>计算一个列表数字的总和。</p>\n<p>例如：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">print(sum([1, 2, 3, 4, 5, 6]))\n# 打印 21</code></pre>\n\n<h1 id=\"列表函数\"><a href=\"#列表函数\" class=\"headerlink\" title=\"列表函数\"></a>列表函数</h1><h2 id=\"1、all\"><a href=\"#1、all\" class=\"headerlink\" title=\"1、all\"></a>1、all</h2><p>列表中所有值均为 True 时，结果为 True，否则结果为 False。</p>\n<p>例如：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">nums &#x3D; [55, 44, 33, 22, 11]\n\nif all([i &gt; 5 for i in nums]):\n    print(&quot;All larger than 5&quot;)\n\n# 打印 All larger than 5</code></pre>\n\n<h2 id=\"2、any\"><a href=\"#2、any\" class=\"headerlink\" title=\"2、any\"></a>2、any</h2><p>列表中只要有一个为 True，结果为 True，反之结果为 False。</p>\n<p>例如：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">nums &#x3D; [55, 44, 33, 22, 11]\n\nif any([i % 2 &#x3D;&#x3D; 0 for i in nums]):\n   print(&quot;At least one is even&quot;)\n\n# 打印 At least one is even5</code></pre>\n\n<h2 id=\"3、enumerate\"><a href=\"#3、enumerate\" class=\"headerlink\" title=\"3、enumerate\"></a>3、enumerate</h2><p>用来同时迭代列表的键和值。</p>\n<p>例如：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">nums &#x3D; [55, 44, 33, 22, 11]\n\nfor v in enumerate(nums):\n   print(v)\n\n# 打印\n# (0, 55)\n# (1, 44)\n# (2, 33)\n# (3, 22)\n# (4, 11)</code></pre>\n"},{"title":"seata1.4.1服务端部署及应用","date":"2022-02-02T01:37:59.000Z","_content":"# seata1.4.1服务端部署及应用\n\nspringcloud-nacos-seata\n\n**分布式事务组件seata的使用demo，AT模式，集成nacos、springboot、springcloud、mybatis-plus、feign，数据库采用mysql**\n\ndemo中使用的相关版本号，具体请看代码。如果搭建个人demo不成功，验证是否是由版本导致，由于目前这几个项目更新比较频繁，版本稍有变化便会出现许多奇怪问题\n\n* seata 1.4.1\n* spring-cloud-alibaba-seata 2.2.0.RELEASE\n* spring-cloud-starter-alibaba-nacos-discovery  2.1.1.RELEASE\n* springboot 2.1.10.RELEASE\n* springcloud Greenwich.SR4\n\n----------\n\n# 1. 服务端配置\n\nseata-server为release版本1.4.1，采用docker部署方式\n\nhttps://github.com/seata/seata/releases/tag/v1.4.1)\n\n## 1.1 docker拉取镜像\n\n```shell\ndocker pull seataio/seata-server:1.4.1\n```\n\n## 1.2 启动临时容器\n\n```shell\ndocker run --rm --name seata-server -d -p 8091:8091 seataio/seata-server:1.4.1\n```\n\n![](https://file.huangge1199.cn/group1/M00/00/00/CgAYB2H54oaAImNHAAAUub2sTS4448.png)\n\n## 1.3 将配置文件拷贝出来\n\n```shell\ndocker cp d5cd81d60189:/seata-server/resources/ ./conf/\n```\n\n![](https://file.huangge1199.cn/group1/M00/00/00/CgAYB2H54uCAAGPGAAALD6FSnY8866.png)\n\n## 1.4 修改conf/registry.conf文件\n\n修改文件，用nacos做注册中心和配置中心\n\n```shell\nvi ./conf/registry.conf\n```\n\n原始内容：\n\n```java\nregistry {\n  # file 、nacos 、eureka、redis、zk、consul、etcd3、sofa\n  type = \"file\"\n  loadBalance = \"RandomLoadBalance\"\n  loadBalanceVirtualNodes = 10\n\n  nacos {\n    application = \"seata-server\"\n    serverAddr = \"127.0.0.1:8848\"\n    group = \"SEATA_GROUP\"\n    namespace = \"\"\n    cluster = \"default\"\n    username = \"\"\n    password = \"\"\n  }\n  eureka {\n    serviceUrl = \"http://localhost:8761/eureka\"\n    application = \"default\"\n    weight = \"1\"\n  }\n  redis {\n    serverAddr = \"localhost:6379\"\n    db = 0\n    password = \"\"\n    cluster = \"default\"\n    timeout = 0\n  }\n  zk {\n    cluster = \"default\"\n    serverAddr = \"127.0.0.1:2181\"\n    sessionTimeout = 6000\n    connectTimeout = 2000\n    username = \"\"\n    password = \"\"\n  }\n  consul {\n    cluster = \"default\"\n    serverAddr = \"127.0.0.1:8500\"\n  }\n  etcd3 {\n    cluster = \"default\"\n    serverAddr = \"http://localhost:2379\"\n  }\n  sofa {\n    serverAddr = \"127.0.0.1:9603\"\n    application = \"default\"\n    region = \"DEFAULT_ZONE\"\n    datacenter = \"DefaultDataCenter\"\n    cluster = \"default\"\n    group = \"SEATA_GROUP\"\n    addressWaitTime = \"3000\"\n  }\n  file {\n    name = \"file.conf\"\n  }\n}\n\nconfig {\n  # file、nacos 、apollo、zk、consul、etcd3\n  type = \"file\"\n\n  nacos {\n    serverAddr = \"127.0.0.1:8848\"\n    namespace = \"\"\n    group = \"SEATA_GROUP\"\n    username = \"\"\n    password = \"\"\n  }\n  consul {\n    serverAddr = \"127.0.0.1:8500\"\n  }\n  apollo {\n    appId = \"seata-server\"\n    apolloMeta = \"http://192.168.1.204:8801\"\n    namespace = \"application\"\n    apolloAccesskeySecret = \"\"\n  }\n  zk {\n    serverAddr = \"127.0.0.1:2181\"\n    sessionTimeout = 6000\n    connectTimeout = 2000\n    username = \"\"\n    password = \"\"\n  }\n  etcd3 {\n    serverAddr = \"http://localhost:2379\"\n  }\n  file {\n    name = \"file.conf\"\n  }\n}\n\n```\n\n修改后的内容：\n\n```java\nregistry {\n  # file 、nacos 、eureka、redis、zk、consul、etcd3、sofa\n  type = \"nacos\" # 改为nacos\n  loadBalance = \"RandomLoadBalance\"\n  loadBalanceVirtualNodes = 10\n\n  nacos {\n    application = \"seata-server\"\n    serverAddr = \"IP:端口\" # 改为nacos实际的IP:端口\n    group = \"SEATA_GROUP\"\n    namespace = \"\"\n    cluster = \"default\"\n    username = \"nacos\" # 改为nacos的账号\n    password = \"nacos\" # 改为nacos的密码\n  }\n  eureka {\n    serviceUrl = \"http://localhost:8761/eureka\"\n    application = \"default\"\n    weight = \"1\"\n  }\n  redis {\n    serverAddr = \"localhost:6379\"\n    db = 0\n    password = \"\"\n    cluster = \"default\"\n    timeout = 0\n  }\n  zk {\n    cluster = \"default\"\n    serverAddr = \"127.0.0.1:2181\"\n    sessionTimeout = 6000\n    connectTimeout = 2000\n    username = \"\"\n    password = \"\"\n  }\n  consul {\n    cluster = \"default\"\n    serverAddr = \"127.0.0.1:8500\"\n  }\n  etcd3 {\n    cluster = \"default\"\n    serverAddr = \"http://localhost:2379\"\n  }\n  sofa {\n    serverAddr = \"127.0.0.1:9603\"\n    application = \"default\"\n    region = \"DEFAULT_ZONE\"\n    datacenter = \"DefaultDataCenter\"\n    cluster = \"default\"\n    group = \"SEATA_GROUP\"\n    addressWaitTime = \"3000\"\n  }\n  file {\n    name = \"file.conf\"\n  }\n}\n\nconfig {\n  # file、nacos 、apollo、zk、consul、etcd3\n  type = \"nacos\" # 改为nacos\n\n  nacos {\n    serverAddr = \"IP:端口\" # 改为nacos实际的IP:端口\n    namespace = \"\"\n    group = \"SEATA_GROUP\"\n    username = \"nacos\" # 改为nacos的账号\n    password = \"nacos\" # 改为nacos的密码\n  }\n  consul {\n    serverAddr = \"127.0.0.1:8500\"\n  }\n  apollo {\n    appId = \"seata-server\"\n    apolloMeta = \"http://192.168.1.204:8801\"\n    namespace = \"application\"\n    apolloAccesskeySecret = \"\"\n  }\n  zk {\n    serverAddr = \"127.0.0.1:2181\"\n    sessionTimeout = 6000\n    connectTimeout = 2000\n    username = \"\"\n    password = \"\"\n  }\n  etcd3 {\n    serverAddr = \"http://localhost:2379\"\n  }\n  file {\n    name = \"file.conf\"\n  }\n}\n\n```\n\n## 1.5 执行SQL语句\n\nseata配置使用db事务日志存储方式\n\nSQL文件下载地址：[seata/script/server/db at develop · seata/seata (github.com)](https://github.com/seata/seata/tree/develop/script/server/db)\n\n## 1.6 创建config.txt并修改\n\nconfig.txt文件地址：[seata/config.txt at develop · seata/seata (github.com)](https://github.com/seata/seata/blob/develop/script/config-center/config.txt)\n\nconfig.txt原件：\n\n```properties\ntransport.type=TCP\ntransport.server=NIO\ntransport.heartbeat=true\ntransport.enableClientBatchSendRequest=true\ntransport.threadFactory.bossThreadPrefix=NettyBoss\ntransport.threadFactory.workerThreadPrefix=NettyServerNIOWorker\ntransport.threadFactory.serverExecutorThreadPrefix=NettyServerBizHandler\ntransport.threadFactory.shareBossWorker=false\ntransport.threadFactory.clientSelectorThreadPrefix=NettyClientSelector\ntransport.threadFactory.clientSelectorThreadSize=1\ntransport.threadFactory.clientWorkerThreadPrefix=NettyClientWorkerThread\ntransport.threadFactory.bossThreadSize=1\ntransport.threadFactory.workerThreadSize=default\ntransport.shutdown.wait=3\nservice.vgroupMapping.my_test_tx_group=default\nservice.default.grouplist=127.0.0.1:8091\nservice.enableDegrade=false\nservice.disableGlobalTransaction=false\nclient.rm.asyncCommitBufferLimit=10000\nclient.rm.lock.retryInterval=10\nclient.rm.lock.retryTimes=30\nclient.rm.lock.retryPolicyBranchRollbackOnConflict=true\nclient.rm.reportRetryCount=5\nclient.rm.tableMetaCheckEnable=false\nclient.rm.tableMetaCheckerInterval=60000\nclient.rm.sqlParserType=druid\nclient.rm.reportSuccessEnable=false\nclient.rm.sagaBranchRegisterEnable=false\nclient.rm.tccActionInterceptorOrder=-2147482648\nclient.tm.commitRetryCount=5\nclient.tm.rollbackRetryCount=5\nclient.tm.defaultGlobalTransactionTimeout=60000\nclient.tm.degradeCheck=false\nclient.tm.degradeCheckAllowTimes=10\nclient.tm.degradeCheckPeriod=2000\nclient.tm.interceptorOrder=-2147482648\nstore.mode=file\nstore.lock.mode=file\nstore.session.mode=file\nstore.publicKey=\nstore.file.dir=file_store/data\nstore.file.maxBranchSessionSize=16384\nstore.file.maxGlobalSessionSize=512\nstore.file.fileWriteBufferCacheSize=16384\nstore.file.flushDiskMode=async\nstore.file.sessionReloadReadSize=100\nstore.db.datasource=druid\nstore.db.dbType=mysql\nstore.db.driverClassName=com.mysql.jdbc.Driver\nstore.db.url=jdbc:mysql://127.0.0.1:3306/seata?useUnicode=true&rewriteBatchedStatements=true\nstore.db.user=username\nstore.db.password=password\nstore.db.minConn=5\nstore.db.maxConn=30\nstore.db.globalTable=global_table\nstore.db.branchTable=branch_table\nstore.db.queryLimit=100\nstore.db.lockTable=lock_table\nstore.db.maxWait=5000\nstore.redis.mode=single\nstore.redis.single.host=127.0.0.1\nstore.redis.single.port=6379\nstore.redis.sentinel.masterName=\nstore.redis.sentinel.sentinelHosts=\nstore.redis.maxConn=10\nstore.redis.minConn=1\nstore.redis.maxTotal=100\nstore.redis.database=0\nstore.redis.password=\nstore.redis.queryLimit=100\nserver.recovery.committingRetryPeriod=1000\nserver.recovery.asynCommittingRetryPeriod=1000\nserver.recovery.rollbackingRetryPeriod=1000\nserver.recovery.timeoutRetryPeriod=1000\nserver.maxCommitRetryTimeout=-1\nserver.maxRollbackRetryTimeout=-1\nserver.rollbackRetryTimeoutUnlockEnable=false\nserver.distributedLockExpireTime=10000\nclient.undo.dataValidation=true\nclient.undo.logSerialization=jackson\nclient.undo.onlyCareUpdateColumns=true\nserver.undo.logSaveDays=7\nserver.undo.logDeletePeriod=86400000\nclient.undo.logTable=undo_log\nclient.undo.compress.enable=true\nclient.undo.compress.type=zip\nclient.undo.compress.threshold=64k\nlog.exceptionRate=100\ntransport.serialization=seata\ntransport.compressor=none\nmetrics.enabled=false\nmetrics.registryType=compact\nmetrics.exporterList=prometheus\nmetrics.exporterPrometheusPort=9898\n```\n\n这里根据自己需求做调整，我这里的配置如下：\n\n```properties\nservice.vgroupMapping.order-service-group=default\nservice.vgroupMapping.storage-service-group=default\nservice.enableDegrade=false\nservice.disableGlobalTransaction=false\nstore.mode=db\nstore.db.datasource=druid\nstore.db.dbType=mysql\n#store.db.driverClassName=com.mysql.jdbc.Driver 这个是mysql8以下的驱动\nstore.db.driverClassName=com.mysql.cj.jdbc.Driver #这个是mysql8的驱动\nstore.db.url=jdbc:mysql://192.168.0.1:3306/seata?useUnicode=true #这个是mysql的连接信息\nstore.db.user=root #这个是mysql的用户名\nstore.db.password=123456 #这个是mysql的密码\nstore.db.minConn=5\nstore.db.maxConn=30\nstore.db.globalTable=global_table\nstore.db.branchTable=branch_table\nstore.db.queryLimit=100\nstore.db.lockTable=lock_table\nstore.db.maxWait=5000\n```\n\n\n\n## 1.7 创建nacos-config.sh\n\n在conf中\n\nnacos-config.sh获取地址：[seata/script/config-center/nacos at develop · seata/seata (github.com)](https://github.com/seata/seata/tree/develop/script/config-center/nacos)\n\n## 1.8 上传seata配置信息到nacos\n\n先确认目录结构正确\n\n![](https://file.huangge1199.cn/group1/M00/00/00/CgAYB2H54zyAYKwlAAAi_TSko4g044.png)\n\n```sh\n./nacos-config.sh -h docker所在机器IP -p 8848 -g SEATA_GROUP  -u nacos -w nacos\n```\n\n\n\n#### 1.2.2 修改conf/nacos-config.txt 配置\n\nservice.vgroup_mapping.${your-service-gruop}=default，中间的${your-service-gruop}为自己定义的服务组名称，服务中的application.properties文件里配置服务组名称。\n\ndemo中有两个服务，分别是storage-service和order-service，所以配置如下\n\n~~~properties\nservice.vgroup_mapping.storage-service-group=defaultservice.vgroup_mapping.order-service-group=default\n~~~\n\n** 注意这里,高版本中应该是vgroupMapping 同时后面的如: order-service-group  不能定义为 order_service_group**\n\n\n#### 1.3 启动seata-server\n\n**分两步，如下**\n\n~~~shell\n# 初始化seata 的nacos配置cd confsh nacos-config.sh 192.168.21.89# 启动seata-servercd binsh seata-server.sh -p 8091 -m file\n~~~\n\n----------\n\n# 2. 应用配置\n\n### 2.1 数据库初始化\n\n~~~SQL\n-- 创建 order库、业务表、undo_log表create database seata_order;use seata_order;DROP TABLE IF EXISTS `order_tbl`;CREATE TABLE `order_tbl` (  `id` int(11) NOT NULL AUTO_INCREMENT,  `user_id` varchar(255) DEFAULT NULL,  `commodity_code` varchar(255) DEFAULT NULL,  `count` int(11) DEFAULT 0,  `money` int(11) DEFAULT 0,  PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8;CREATE TABLE `undo_log`(  `id`            BIGINT(20)   NOT NULL AUTO_INCREMENT,  `branch_id`     BIGINT(20)   NOT NULL,  `xid`           VARCHAR(100) NOT NULL,  `context`       VARCHAR(128) NOT NULL,  `rollback_info` LONGBLOB     NOT NULL,  `log_status`    INT(11)      NOT NULL,  `log_created`   DATETIME     NOT NULL,  `log_modified`  DATETIME     NOT NULL,  `ext`           VARCHAR(100) DEFAULT NULL,  PRIMARY KEY (`id`),  UNIQUE KEY `ux_undo_log` (`xid`, `branch_id`)) ENGINE = InnoDB  AUTO_INCREMENT = 1  DEFAULT CHARSET = utf8;-- 创建 storage库、业务表、undo_log表create database seata_storage;use seata_storage;DROP TABLE IF EXISTS `storage_tbl`;CREATE TABLE `storage_tbl` (  `id` int(11) NOT NULL AUTO_INCREMENT,  `commodity_code` varchar(255) DEFAULT NULL,  `count` int(11) DEFAULT 0,  PRIMARY KEY (`id`),  UNIQUE KEY (`commodity_code`)) ENGINE=InnoDB DEFAULT CHARSET=utf8;CREATE TABLE `undo_log`(  `id`            BIGINT(20)   NOT NULL AUTO_INCREMENT,  `branch_id`     BIGINT(20)   NOT NULL,  `xid`           VARCHAR(100) NOT NULL,  `context`       VARCHAR(128) NOT NULL,  `rollback_info` LONGBLOB     NOT NULL,  `log_status`    INT(11)      NOT NULL,  `log_created`   DATETIME     NOT NULL,  `log_modified`  DATETIME     NOT NULL,  `ext`           VARCHAR(100) DEFAULT NULL,  PRIMARY KEY (`id`),  UNIQUE KEY `ux_undo_log` (`xid`, `branch_id`)) ENGINE = InnoDB  AUTO_INCREMENT = 1  DEFAULT CHARSET = utf8;-- 初始化库存模拟数据INSERT INTO seata_storage.storage_tbl (id, commodity_code, count) VALUES (1, 'product-1', 9999999);INSERT INTO seata_storage.storage_tbl (id, commodity_code, count) VALUES (2, 'product-2', 0);\n~~~\n\n### 2.2 应用配置\n\n见代码\n\n几个重要的配置\n\n1. 每个应用的resource里需要配置一个registry.conf ，demo中与seata-server里的配置相同\n2. application.propeties 的各个配置项，注意spring.cloud.alibaba.seata.tx-service-group 是服务组名称，与nacos-config.txt 配置的service.vgroup_mapping.${your-service-gruop}具有对应关系\n\n----------\n\n# 3. 测试\n\n1. 分布式事务成功，模拟正常下单、扣库存\n\n   localhost:9091/order/placeOrder/commit\n\n2. 分布式事务失败，模拟下单成功、扣库存失败，最终同时回滚\n\n   localhost:9091/order/placeOrder/rollback \n\n\n\n\n\n","source":"_posts/seata141demo.md","raw":"---\ntitle: seata1.4.1服务端部署及应用\ndate: 2022-02-02 09:37:59\ntags: [java,seata]\ncategories: [java,seata]\n---\n# seata1.4.1服务端部署及应用\n\nspringcloud-nacos-seata\n\n**分布式事务组件seata的使用demo，AT模式，集成nacos、springboot、springcloud、mybatis-plus、feign，数据库采用mysql**\n\ndemo中使用的相关版本号，具体请看代码。如果搭建个人demo不成功，验证是否是由版本导致，由于目前这几个项目更新比较频繁，版本稍有变化便会出现许多奇怪问题\n\n* seata 1.4.1\n* spring-cloud-alibaba-seata 2.2.0.RELEASE\n* spring-cloud-starter-alibaba-nacos-discovery  2.1.1.RELEASE\n* springboot 2.1.10.RELEASE\n* springcloud Greenwich.SR4\n\n----------\n\n# 1. 服务端配置\n\nseata-server为release版本1.4.1，采用docker部署方式\n\nhttps://github.com/seata/seata/releases/tag/v1.4.1)\n\n## 1.1 docker拉取镜像\n\n```shell\ndocker pull seataio/seata-server:1.4.1\n```\n\n## 1.2 启动临时容器\n\n```shell\ndocker run --rm --name seata-server -d -p 8091:8091 seataio/seata-server:1.4.1\n```\n\n![](https://file.huangge1199.cn/group1/M00/00/00/CgAYB2H54oaAImNHAAAUub2sTS4448.png)\n\n## 1.3 将配置文件拷贝出来\n\n```shell\ndocker cp d5cd81d60189:/seata-server/resources/ ./conf/\n```\n\n![](https://file.huangge1199.cn/group1/M00/00/00/CgAYB2H54uCAAGPGAAALD6FSnY8866.png)\n\n## 1.4 修改conf/registry.conf文件\n\n修改文件，用nacos做注册中心和配置中心\n\n```shell\nvi ./conf/registry.conf\n```\n\n原始内容：\n\n```java\nregistry {\n  # file 、nacos 、eureka、redis、zk、consul、etcd3、sofa\n  type = \"file\"\n  loadBalance = \"RandomLoadBalance\"\n  loadBalanceVirtualNodes = 10\n\n  nacos {\n    application = \"seata-server\"\n    serverAddr = \"127.0.0.1:8848\"\n    group = \"SEATA_GROUP\"\n    namespace = \"\"\n    cluster = \"default\"\n    username = \"\"\n    password = \"\"\n  }\n  eureka {\n    serviceUrl = \"http://localhost:8761/eureka\"\n    application = \"default\"\n    weight = \"1\"\n  }\n  redis {\n    serverAddr = \"localhost:6379\"\n    db = 0\n    password = \"\"\n    cluster = \"default\"\n    timeout = 0\n  }\n  zk {\n    cluster = \"default\"\n    serverAddr = \"127.0.0.1:2181\"\n    sessionTimeout = 6000\n    connectTimeout = 2000\n    username = \"\"\n    password = \"\"\n  }\n  consul {\n    cluster = \"default\"\n    serverAddr = \"127.0.0.1:8500\"\n  }\n  etcd3 {\n    cluster = \"default\"\n    serverAddr = \"http://localhost:2379\"\n  }\n  sofa {\n    serverAddr = \"127.0.0.1:9603\"\n    application = \"default\"\n    region = \"DEFAULT_ZONE\"\n    datacenter = \"DefaultDataCenter\"\n    cluster = \"default\"\n    group = \"SEATA_GROUP\"\n    addressWaitTime = \"3000\"\n  }\n  file {\n    name = \"file.conf\"\n  }\n}\n\nconfig {\n  # file、nacos 、apollo、zk、consul、etcd3\n  type = \"file\"\n\n  nacos {\n    serverAddr = \"127.0.0.1:8848\"\n    namespace = \"\"\n    group = \"SEATA_GROUP\"\n    username = \"\"\n    password = \"\"\n  }\n  consul {\n    serverAddr = \"127.0.0.1:8500\"\n  }\n  apollo {\n    appId = \"seata-server\"\n    apolloMeta = \"http://192.168.1.204:8801\"\n    namespace = \"application\"\n    apolloAccesskeySecret = \"\"\n  }\n  zk {\n    serverAddr = \"127.0.0.1:2181\"\n    sessionTimeout = 6000\n    connectTimeout = 2000\n    username = \"\"\n    password = \"\"\n  }\n  etcd3 {\n    serverAddr = \"http://localhost:2379\"\n  }\n  file {\n    name = \"file.conf\"\n  }\n}\n\n```\n\n修改后的内容：\n\n```java\nregistry {\n  # file 、nacos 、eureka、redis、zk、consul、etcd3、sofa\n  type = \"nacos\" # 改为nacos\n  loadBalance = \"RandomLoadBalance\"\n  loadBalanceVirtualNodes = 10\n\n  nacos {\n    application = \"seata-server\"\n    serverAddr = \"IP:端口\" # 改为nacos实际的IP:端口\n    group = \"SEATA_GROUP\"\n    namespace = \"\"\n    cluster = \"default\"\n    username = \"nacos\" # 改为nacos的账号\n    password = \"nacos\" # 改为nacos的密码\n  }\n  eureka {\n    serviceUrl = \"http://localhost:8761/eureka\"\n    application = \"default\"\n    weight = \"1\"\n  }\n  redis {\n    serverAddr = \"localhost:6379\"\n    db = 0\n    password = \"\"\n    cluster = \"default\"\n    timeout = 0\n  }\n  zk {\n    cluster = \"default\"\n    serverAddr = \"127.0.0.1:2181\"\n    sessionTimeout = 6000\n    connectTimeout = 2000\n    username = \"\"\n    password = \"\"\n  }\n  consul {\n    cluster = \"default\"\n    serverAddr = \"127.0.0.1:8500\"\n  }\n  etcd3 {\n    cluster = \"default\"\n    serverAddr = \"http://localhost:2379\"\n  }\n  sofa {\n    serverAddr = \"127.0.0.1:9603\"\n    application = \"default\"\n    region = \"DEFAULT_ZONE\"\n    datacenter = \"DefaultDataCenter\"\n    cluster = \"default\"\n    group = \"SEATA_GROUP\"\n    addressWaitTime = \"3000\"\n  }\n  file {\n    name = \"file.conf\"\n  }\n}\n\nconfig {\n  # file、nacos 、apollo、zk、consul、etcd3\n  type = \"nacos\" # 改为nacos\n\n  nacos {\n    serverAddr = \"IP:端口\" # 改为nacos实际的IP:端口\n    namespace = \"\"\n    group = \"SEATA_GROUP\"\n    username = \"nacos\" # 改为nacos的账号\n    password = \"nacos\" # 改为nacos的密码\n  }\n  consul {\n    serverAddr = \"127.0.0.1:8500\"\n  }\n  apollo {\n    appId = \"seata-server\"\n    apolloMeta = \"http://192.168.1.204:8801\"\n    namespace = \"application\"\n    apolloAccesskeySecret = \"\"\n  }\n  zk {\n    serverAddr = \"127.0.0.1:2181\"\n    sessionTimeout = 6000\n    connectTimeout = 2000\n    username = \"\"\n    password = \"\"\n  }\n  etcd3 {\n    serverAddr = \"http://localhost:2379\"\n  }\n  file {\n    name = \"file.conf\"\n  }\n}\n\n```\n\n## 1.5 执行SQL语句\n\nseata配置使用db事务日志存储方式\n\nSQL文件下载地址：[seata/script/server/db at develop · seata/seata (github.com)](https://github.com/seata/seata/tree/develop/script/server/db)\n\n## 1.6 创建config.txt并修改\n\nconfig.txt文件地址：[seata/config.txt at develop · seata/seata (github.com)](https://github.com/seata/seata/blob/develop/script/config-center/config.txt)\n\nconfig.txt原件：\n\n```properties\ntransport.type=TCP\ntransport.server=NIO\ntransport.heartbeat=true\ntransport.enableClientBatchSendRequest=true\ntransport.threadFactory.bossThreadPrefix=NettyBoss\ntransport.threadFactory.workerThreadPrefix=NettyServerNIOWorker\ntransport.threadFactory.serverExecutorThreadPrefix=NettyServerBizHandler\ntransport.threadFactory.shareBossWorker=false\ntransport.threadFactory.clientSelectorThreadPrefix=NettyClientSelector\ntransport.threadFactory.clientSelectorThreadSize=1\ntransport.threadFactory.clientWorkerThreadPrefix=NettyClientWorkerThread\ntransport.threadFactory.bossThreadSize=1\ntransport.threadFactory.workerThreadSize=default\ntransport.shutdown.wait=3\nservice.vgroupMapping.my_test_tx_group=default\nservice.default.grouplist=127.0.0.1:8091\nservice.enableDegrade=false\nservice.disableGlobalTransaction=false\nclient.rm.asyncCommitBufferLimit=10000\nclient.rm.lock.retryInterval=10\nclient.rm.lock.retryTimes=30\nclient.rm.lock.retryPolicyBranchRollbackOnConflict=true\nclient.rm.reportRetryCount=5\nclient.rm.tableMetaCheckEnable=false\nclient.rm.tableMetaCheckerInterval=60000\nclient.rm.sqlParserType=druid\nclient.rm.reportSuccessEnable=false\nclient.rm.sagaBranchRegisterEnable=false\nclient.rm.tccActionInterceptorOrder=-2147482648\nclient.tm.commitRetryCount=5\nclient.tm.rollbackRetryCount=5\nclient.tm.defaultGlobalTransactionTimeout=60000\nclient.tm.degradeCheck=false\nclient.tm.degradeCheckAllowTimes=10\nclient.tm.degradeCheckPeriod=2000\nclient.tm.interceptorOrder=-2147482648\nstore.mode=file\nstore.lock.mode=file\nstore.session.mode=file\nstore.publicKey=\nstore.file.dir=file_store/data\nstore.file.maxBranchSessionSize=16384\nstore.file.maxGlobalSessionSize=512\nstore.file.fileWriteBufferCacheSize=16384\nstore.file.flushDiskMode=async\nstore.file.sessionReloadReadSize=100\nstore.db.datasource=druid\nstore.db.dbType=mysql\nstore.db.driverClassName=com.mysql.jdbc.Driver\nstore.db.url=jdbc:mysql://127.0.0.1:3306/seata?useUnicode=true&rewriteBatchedStatements=true\nstore.db.user=username\nstore.db.password=password\nstore.db.minConn=5\nstore.db.maxConn=30\nstore.db.globalTable=global_table\nstore.db.branchTable=branch_table\nstore.db.queryLimit=100\nstore.db.lockTable=lock_table\nstore.db.maxWait=5000\nstore.redis.mode=single\nstore.redis.single.host=127.0.0.1\nstore.redis.single.port=6379\nstore.redis.sentinel.masterName=\nstore.redis.sentinel.sentinelHosts=\nstore.redis.maxConn=10\nstore.redis.minConn=1\nstore.redis.maxTotal=100\nstore.redis.database=0\nstore.redis.password=\nstore.redis.queryLimit=100\nserver.recovery.committingRetryPeriod=1000\nserver.recovery.asynCommittingRetryPeriod=1000\nserver.recovery.rollbackingRetryPeriod=1000\nserver.recovery.timeoutRetryPeriod=1000\nserver.maxCommitRetryTimeout=-1\nserver.maxRollbackRetryTimeout=-1\nserver.rollbackRetryTimeoutUnlockEnable=false\nserver.distributedLockExpireTime=10000\nclient.undo.dataValidation=true\nclient.undo.logSerialization=jackson\nclient.undo.onlyCareUpdateColumns=true\nserver.undo.logSaveDays=7\nserver.undo.logDeletePeriod=86400000\nclient.undo.logTable=undo_log\nclient.undo.compress.enable=true\nclient.undo.compress.type=zip\nclient.undo.compress.threshold=64k\nlog.exceptionRate=100\ntransport.serialization=seata\ntransport.compressor=none\nmetrics.enabled=false\nmetrics.registryType=compact\nmetrics.exporterList=prometheus\nmetrics.exporterPrometheusPort=9898\n```\n\n这里根据自己需求做调整，我这里的配置如下：\n\n```properties\nservice.vgroupMapping.order-service-group=default\nservice.vgroupMapping.storage-service-group=default\nservice.enableDegrade=false\nservice.disableGlobalTransaction=false\nstore.mode=db\nstore.db.datasource=druid\nstore.db.dbType=mysql\n#store.db.driverClassName=com.mysql.jdbc.Driver 这个是mysql8以下的驱动\nstore.db.driverClassName=com.mysql.cj.jdbc.Driver #这个是mysql8的驱动\nstore.db.url=jdbc:mysql://192.168.0.1:3306/seata?useUnicode=true #这个是mysql的连接信息\nstore.db.user=root #这个是mysql的用户名\nstore.db.password=123456 #这个是mysql的密码\nstore.db.minConn=5\nstore.db.maxConn=30\nstore.db.globalTable=global_table\nstore.db.branchTable=branch_table\nstore.db.queryLimit=100\nstore.db.lockTable=lock_table\nstore.db.maxWait=5000\n```\n\n\n\n## 1.7 创建nacos-config.sh\n\n在conf中\n\nnacos-config.sh获取地址：[seata/script/config-center/nacos at develop · seata/seata (github.com)](https://github.com/seata/seata/tree/develop/script/config-center/nacos)\n\n## 1.8 上传seata配置信息到nacos\n\n先确认目录结构正确\n\n![](https://file.huangge1199.cn/group1/M00/00/00/CgAYB2H54zyAYKwlAAAi_TSko4g044.png)\n\n```sh\n./nacos-config.sh -h docker所在机器IP -p 8848 -g SEATA_GROUP  -u nacos -w nacos\n```\n\n\n\n#### 1.2.2 修改conf/nacos-config.txt 配置\n\nservice.vgroup_mapping.${your-service-gruop}=default，中间的${your-service-gruop}为自己定义的服务组名称，服务中的application.properties文件里配置服务组名称。\n\ndemo中有两个服务，分别是storage-service和order-service，所以配置如下\n\n~~~properties\nservice.vgroup_mapping.storage-service-group=defaultservice.vgroup_mapping.order-service-group=default\n~~~\n\n** 注意这里,高版本中应该是vgroupMapping 同时后面的如: order-service-group  不能定义为 order_service_group**\n\n\n#### 1.3 启动seata-server\n\n**分两步，如下**\n\n~~~shell\n# 初始化seata 的nacos配置cd confsh nacos-config.sh 192.168.21.89# 启动seata-servercd binsh seata-server.sh -p 8091 -m file\n~~~\n\n----------\n\n# 2. 应用配置\n\n### 2.1 数据库初始化\n\n~~~SQL\n-- 创建 order库、业务表、undo_log表create database seata_order;use seata_order;DROP TABLE IF EXISTS `order_tbl`;CREATE TABLE `order_tbl` (  `id` int(11) NOT NULL AUTO_INCREMENT,  `user_id` varchar(255) DEFAULT NULL,  `commodity_code` varchar(255) DEFAULT NULL,  `count` int(11) DEFAULT 0,  `money` int(11) DEFAULT 0,  PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8;CREATE TABLE `undo_log`(  `id`            BIGINT(20)   NOT NULL AUTO_INCREMENT,  `branch_id`     BIGINT(20)   NOT NULL,  `xid`           VARCHAR(100) NOT NULL,  `context`       VARCHAR(128) NOT NULL,  `rollback_info` LONGBLOB     NOT NULL,  `log_status`    INT(11)      NOT NULL,  `log_created`   DATETIME     NOT NULL,  `log_modified`  DATETIME     NOT NULL,  `ext`           VARCHAR(100) DEFAULT NULL,  PRIMARY KEY (`id`),  UNIQUE KEY `ux_undo_log` (`xid`, `branch_id`)) ENGINE = InnoDB  AUTO_INCREMENT = 1  DEFAULT CHARSET = utf8;-- 创建 storage库、业务表、undo_log表create database seata_storage;use seata_storage;DROP TABLE IF EXISTS `storage_tbl`;CREATE TABLE `storage_tbl` (  `id` int(11) NOT NULL AUTO_INCREMENT,  `commodity_code` varchar(255) DEFAULT NULL,  `count` int(11) DEFAULT 0,  PRIMARY KEY (`id`),  UNIQUE KEY (`commodity_code`)) ENGINE=InnoDB DEFAULT CHARSET=utf8;CREATE TABLE `undo_log`(  `id`            BIGINT(20)   NOT NULL AUTO_INCREMENT,  `branch_id`     BIGINT(20)   NOT NULL,  `xid`           VARCHAR(100) NOT NULL,  `context`       VARCHAR(128) NOT NULL,  `rollback_info` LONGBLOB     NOT NULL,  `log_status`    INT(11)      NOT NULL,  `log_created`   DATETIME     NOT NULL,  `log_modified`  DATETIME     NOT NULL,  `ext`           VARCHAR(100) DEFAULT NULL,  PRIMARY KEY (`id`),  UNIQUE KEY `ux_undo_log` (`xid`, `branch_id`)) ENGINE = InnoDB  AUTO_INCREMENT = 1  DEFAULT CHARSET = utf8;-- 初始化库存模拟数据INSERT INTO seata_storage.storage_tbl (id, commodity_code, count) VALUES (1, 'product-1', 9999999);INSERT INTO seata_storage.storage_tbl (id, commodity_code, count) VALUES (2, 'product-2', 0);\n~~~\n\n### 2.2 应用配置\n\n见代码\n\n几个重要的配置\n\n1. 每个应用的resource里需要配置一个registry.conf ，demo中与seata-server里的配置相同\n2. application.propeties 的各个配置项，注意spring.cloud.alibaba.seata.tx-service-group 是服务组名称，与nacos-config.txt 配置的service.vgroup_mapping.${your-service-gruop}具有对应关系\n\n----------\n\n# 3. 测试\n\n1. 分布式事务成功，模拟正常下单、扣库存\n\n   localhost:9091/order/placeOrder/commit\n\n2. 分布式事务失败，模拟下单成功、扣库存失败，最终同时回滚\n\n   localhost:9091/order/placeOrder/rollback \n\n\n\n\n\n","slug":"seata141demo","published":1,"updated":"2022-02-11T05:31:54.252Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl0t0rrm1005k4ctueuph5ih8","content":"<h1 id=\"seata1-4-1服务端部署及应用\"><a href=\"#seata1-4-1服务端部署及应用\" class=\"headerlink\" title=\"seata1.4.1服务端部署及应用\"></a>seata1.4.1服务端部署及应用</h1><p>springcloud-nacos-seata</p>\n<p><strong>分布式事务组件seata的使用demo，AT模式，集成nacos、springboot、springcloud、mybatis-plus、feign，数据库采用mysql</strong></p>\n<p>demo中使用的相关版本号，具体请看代码。如果搭建个人demo不成功，验证是否是由版本导致，由于目前这几个项目更新比较频繁，版本稍有变化便会出现许多奇怪问题</p>\n<ul>\n<li>seata 1.4.1</li>\n<li>spring-cloud-alibaba-seata 2.2.0.RELEASE</li>\n<li>spring-cloud-starter-alibaba-nacos-discovery  2.1.1.RELEASE</li>\n<li>springboot 2.1.10.RELEASE</li>\n<li>springcloud Greenwich.SR4</li>\n</ul>\n<hr>\n<h1 id=\"1-服务端配置\"><a href=\"#1-服务端配置\" class=\"headerlink\" title=\"1. 服务端配置\"></a>1. 服务端配置</h1><p>seata-server为release版本1.4.1，采用docker部署方式</p>\n<p><a href=\"https://github.com/seata/seata/releases/tag/v1.4.1\">https://github.com/seata/seata/releases/tag/v1.4.1</a>)</p>\n<h2 id=\"1-1-docker拉取镜像\"><a href=\"#1-1-docker拉取镜像\" class=\"headerlink\" title=\"1.1 docker拉取镜像\"></a>1.1 docker拉取镜像</h2><pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">docker pull seataio&#x2F;seata-server:1.4.1</code></pre>\n\n<h2 id=\"1-2-启动临时容器\"><a href=\"#1-2-启动临时容器\" class=\"headerlink\" title=\"1.2 启动临时容器\"></a>1.2 启动临时容器</h2><pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">docker run --rm --name seata-server -d -p 8091:8091 seataio&#x2F;seata-server:1.4.1</code></pre>\n\n<p><img src=\"https://file.huangge1199.cn/group1/M00/00/00/CgAYB2H54oaAImNHAAAUub2sTS4448.png\"></p>\n<h2 id=\"1-3-将配置文件拷贝出来\"><a href=\"#1-3-将配置文件拷贝出来\" class=\"headerlink\" title=\"1.3 将配置文件拷贝出来\"></a>1.3 将配置文件拷贝出来</h2><pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">docker cp d5cd81d60189:&#x2F;seata-server&#x2F;resources&#x2F; .&#x2F;conf&#x2F;</code></pre>\n\n<p><img src=\"https://file.huangge1199.cn/group1/M00/00/00/CgAYB2H54uCAAGPGAAALD6FSnY8866.png\"></p>\n<h2 id=\"1-4-修改conf-x2F-registry-conf文件\"><a href=\"#1-4-修改conf-x2F-registry-conf文件\" class=\"headerlink\" title=\"1.4 修改conf&#x2F;registry.conf文件\"></a>1.4 修改conf&#x2F;registry.conf文件</h2><p>修改文件，用nacos做注册中心和配置中心</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">vi .&#x2F;conf&#x2F;registry.conf</code></pre>\n\n<p>原始内容：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">registry &#123;\n  # file 、nacos 、eureka、redis、zk、consul、etcd3、sofa\n  type &#x3D; &quot;file&quot;\n  loadBalance &#x3D; &quot;RandomLoadBalance&quot;\n  loadBalanceVirtualNodes &#x3D; 10\n\n  nacos &#123;\n    application &#x3D; &quot;seata-server&quot;\n    serverAddr &#x3D; &quot;127.0.0.1:8848&quot;\n    group &#x3D; &quot;SEATA_GROUP&quot;\n    namespace &#x3D; &quot;&quot;\n    cluster &#x3D; &quot;default&quot;\n    username &#x3D; &quot;&quot;\n    password &#x3D; &quot;&quot;\n  &#125;\n  eureka &#123;\n    serviceUrl &#x3D; &quot;http:&#x2F;&#x2F;localhost:8761&#x2F;eureka&quot;\n    application &#x3D; &quot;default&quot;\n    weight &#x3D; &quot;1&quot;\n  &#125;\n  redis &#123;\n    serverAddr &#x3D; &quot;localhost:6379&quot;\n    db &#x3D; 0\n    password &#x3D; &quot;&quot;\n    cluster &#x3D; &quot;default&quot;\n    timeout &#x3D; 0\n  &#125;\n  zk &#123;\n    cluster &#x3D; &quot;default&quot;\n    serverAddr &#x3D; &quot;127.0.0.1:2181&quot;\n    sessionTimeout &#x3D; 6000\n    connectTimeout &#x3D; 2000\n    username &#x3D; &quot;&quot;\n    password &#x3D; &quot;&quot;\n  &#125;\n  consul &#123;\n    cluster &#x3D; &quot;default&quot;\n    serverAddr &#x3D; &quot;127.0.0.1:8500&quot;\n  &#125;\n  etcd3 &#123;\n    cluster &#x3D; &quot;default&quot;\n    serverAddr &#x3D; &quot;http:&#x2F;&#x2F;localhost:2379&quot;\n  &#125;\n  sofa &#123;\n    serverAddr &#x3D; &quot;127.0.0.1:9603&quot;\n    application &#x3D; &quot;default&quot;\n    region &#x3D; &quot;DEFAULT_ZONE&quot;\n    datacenter &#x3D; &quot;DefaultDataCenter&quot;\n    cluster &#x3D; &quot;default&quot;\n    group &#x3D; &quot;SEATA_GROUP&quot;\n    addressWaitTime &#x3D; &quot;3000&quot;\n  &#125;\n  file &#123;\n    name &#x3D; &quot;file.conf&quot;\n  &#125;\n&#125;\n\nconfig &#123;\n  # file、nacos 、apollo、zk、consul、etcd3\n  type &#x3D; &quot;file&quot;\n\n  nacos &#123;\n    serverAddr &#x3D; &quot;127.0.0.1:8848&quot;\n    namespace &#x3D; &quot;&quot;\n    group &#x3D; &quot;SEATA_GROUP&quot;\n    username &#x3D; &quot;&quot;\n    password &#x3D; &quot;&quot;\n  &#125;\n  consul &#123;\n    serverAddr &#x3D; &quot;127.0.0.1:8500&quot;\n  &#125;\n  apollo &#123;\n    appId &#x3D; &quot;seata-server&quot;\n    apolloMeta &#x3D; &quot;http:&#x2F;&#x2F;192.168.1.204:8801&quot;\n    namespace &#x3D; &quot;application&quot;\n    apolloAccesskeySecret &#x3D; &quot;&quot;\n  &#125;\n  zk &#123;\n    serverAddr &#x3D; &quot;127.0.0.1:2181&quot;\n    sessionTimeout &#x3D; 6000\n    connectTimeout &#x3D; 2000\n    username &#x3D; &quot;&quot;\n    password &#x3D; &quot;&quot;\n  &#125;\n  etcd3 &#123;\n    serverAddr &#x3D; &quot;http:&#x2F;&#x2F;localhost:2379&quot;\n  &#125;\n  file &#123;\n    name &#x3D; &quot;file.conf&quot;\n  &#125;\n&#125;\n</code></pre>\n\n<p>修改后的内容：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">registry &#123;\n  # file 、nacos 、eureka、redis、zk、consul、etcd3、sofa\n  type &#x3D; &quot;nacos&quot; # 改为nacos\n  loadBalance &#x3D; &quot;RandomLoadBalance&quot;\n  loadBalanceVirtualNodes &#x3D; 10\n\n  nacos &#123;\n    application &#x3D; &quot;seata-server&quot;\n    serverAddr &#x3D; &quot;IP:端口&quot; # 改为nacos实际的IP:端口\n    group &#x3D; &quot;SEATA_GROUP&quot;\n    namespace &#x3D; &quot;&quot;\n    cluster &#x3D; &quot;default&quot;\n    username &#x3D; &quot;nacos&quot; # 改为nacos的账号\n    password &#x3D; &quot;nacos&quot; # 改为nacos的密码\n  &#125;\n  eureka &#123;\n    serviceUrl &#x3D; &quot;http:&#x2F;&#x2F;localhost:8761&#x2F;eureka&quot;\n    application &#x3D; &quot;default&quot;\n    weight &#x3D; &quot;1&quot;\n  &#125;\n  redis &#123;\n    serverAddr &#x3D; &quot;localhost:6379&quot;\n    db &#x3D; 0\n    password &#x3D; &quot;&quot;\n    cluster &#x3D; &quot;default&quot;\n    timeout &#x3D; 0\n  &#125;\n  zk &#123;\n    cluster &#x3D; &quot;default&quot;\n    serverAddr &#x3D; &quot;127.0.0.1:2181&quot;\n    sessionTimeout &#x3D; 6000\n    connectTimeout &#x3D; 2000\n    username &#x3D; &quot;&quot;\n    password &#x3D; &quot;&quot;\n  &#125;\n  consul &#123;\n    cluster &#x3D; &quot;default&quot;\n    serverAddr &#x3D; &quot;127.0.0.1:8500&quot;\n  &#125;\n  etcd3 &#123;\n    cluster &#x3D; &quot;default&quot;\n    serverAddr &#x3D; &quot;http:&#x2F;&#x2F;localhost:2379&quot;\n  &#125;\n  sofa &#123;\n    serverAddr &#x3D; &quot;127.0.0.1:9603&quot;\n    application &#x3D; &quot;default&quot;\n    region &#x3D; &quot;DEFAULT_ZONE&quot;\n    datacenter &#x3D; &quot;DefaultDataCenter&quot;\n    cluster &#x3D; &quot;default&quot;\n    group &#x3D; &quot;SEATA_GROUP&quot;\n    addressWaitTime &#x3D; &quot;3000&quot;\n  &#125;\n  file &#123;\n    name &#x3D; &quot;file.conf&quot;\n  &#125;\n&#125;\n\nconfig &#123;\n  # file、nacos 、apollo、zk、consul、etcd3\n  type &#x3D; &quot;nacos&quot; # 改为nacos\n\n  nacos &#123;\n    serverAddr &#x3D; &quot;IP:端口&quot; # 改为nacos实际的IP:端口\n    namespace &#x3D; &quot;&quot;\n    group &#x3D; &quot;SEATA_GROUP&quot;\n    username &#x3D; &quot;nacos&quot; # 改为nacos的账号\n    password &#x3D; &quot;nacos&quot; # 改为nacos的密码\n  &#125;\n  consul &#123;\n    serverAddr &#x3D; &quot;127.0.0.1:8500&quot;\n  &#125;\n  apollo &#123;\n    appId &#x3D; &quot;seata-server&quot;\n    apolloMeta &#x3D; &quot;http:&#x2F;&#x2F;192.168.1.204:8801&quot;\n    namespace &#x3D; &quot;application&quot;\n    apolloAccesskeySecret &#x3D; &quot;&quot;\n  &#125;\n  zk &#123;\n    serverAddr &#x3D; &quot;127.0.0.1:2181&quot;\n    sessionTimeout &#x3D; 6000\n    connectTimeout &#x3D; 2000\n    username &#x3D; &quot;&quot;\n    password &#x3D; &quot;&quot;\n  &#125;\n  etcd3 &#123;\n    serverAddr &#x3D; &quot;http:&#x2F;&#x2F;localhost:2379&quot;\n  &#125;\n  file &#123;\n    name &#x3D; &quot;file.conf&quot;\n  &#125;\n&#125;\n</code></pre>\n\n<h2 id=\"1-5-执行SQL语句\"><a href=\"#1-5-执行SQL语句\" class=\"headerlink\" title=\"1.5 执行SQL语句\"></a>1.5 执行SQL语句</h2><p>seata配置使用db事务日志存储方式</p>\n<p>SQL文件下载地址：<a href=\"https://github.com/seata/seata/tree/develop/script/server/db\">seata&#x2F;script&#x2F;server&#x2F;db at develop · seata&#x2F;seata (github.com)</a></p>\n<h2 id=\"1-6-创建config-txt并修改\"><a href=\"#1-6-创建config-txt并修改\" class=\"headerlink\" title=\"1.6 创建config.txt并修改\"></a>1.6 创建config.txt并修改</h2><p>config.txt文件地址：<a href=\"https://github.com/seata/seata/blob/develop/script/config-center/config.txt\">seata&#x2F;config.txt at develop · seata&#x2F;seata (github.com)</a></p>\n<p>config.txt原件：</p>\n<pre class=\"line-numbers language-properties\" data-language=\"properties\"><code class=\"language-properties\">transport.type&#x3D;TCP\ntransport.server&#x3D;NIO\ntransport.heartbeat&#x3D;true\ntransport.enableClientBatchSendRequest&#x3D;true\ntransport.threadFactory.bossThreadPrefix&#x3D;NettyBoss\ntransport.threadFactory.workerThreadPrefix&#x3D;NettyServerNIOWorker\ntransport.threadFactory.serverExecutorThreadPrefix&#x3D;NettyServerBizHandler\ntransport.threadFactory.shareBossWorker&#x3D;false\ntransport.threadFactory.clientSelectorThreadPrefix&#x3D;NettyClientSelector\ntransport.threadFactory.clientSelectorThreadSize&#x3D;1\ntransport.threadFactory.clientWorkerThreadPrefix&#x3D;NettyClientWorkerThread\ntransport.threadFactory.bossThreadSize&#x3D;1\ntransport.threadFactory.workerThreadSize&#x3D;default\ntransport.shutdown.wait&#x3D;3\nservice.vgroupMapping.my_test_tx_group&#x3D;default\nservice.default.grouplist&#x3D;127.0.0.1:8091\nservice.enableDegrade&#x3D;false\nservice.disableGlobalTransaction&#x3D;false\nclient.rm.asyncCommitBufferLimit&#x3D;10000\nclient.rm.lock.retryInterval&#x3D;10\nclient.rm.lock.retryTimes&#x3D;30\nclient.rm.lock.retryPolicyBranchRollbackOnConflict&#x3D;true\nclient.rm.reportRetryCount&#x3D;5\nclient.rm.tableMetaCheckEnable&#x3D;false\nclient.rm.tableMetaCheckerInterval&#x3D;60000\nclient.rm.sqlParserType&#x3D;druid\nclient.rm.reportSuccessEnable&#x3D;false\nclient.rm.sagaBranchRegisterEnable&#x3D;false\nclient.rm.tccActionInterceptorOrder&#x3D;-2147482648\nclient.tm.commitRetryCount&#x3D;5\nclient.tm.rollbackRetryCount&#x3D;5\nclient.tm.defaultGlobalTransactionTimeout&#x3D;60000\nclient.tm.degradeCheck&#x3D;false\nclient.tm.degradeCheckAllowTimes&#x3D;10\nclient.tm.degradeCheckPeriod&#x3D;2000\nclient.tm.interceptorOrder&#x3D;-2147482648\nstore.mode&#x3D;file\nstore.lock.mode&#x3D;file\nstore.session.mode&#x3D;file\nstore.publicKey&#x3D;\nstore.file.dir&#x3D;file_store&#x2F;data\nstore.file.maxBranchSessionSize&#x3D;16384\nstore.file.maxGlobalSessionSize&#x3D;512\nstore.file.fileWriteBufferCacheSize&#x3D;16384\nstore.file.flushDiskMode&#x3D;async\nstore.file.sessionReloadReadSize&#x3D;100\nstore.db.datasource&#x3D;druid\nstore.db.dbType&#x3D;mysql\nstore.db.driverClassName&#x3D;com.mysql.jdbc.Driver\nstore.db.url&#x3D;jdbc:mysql:&#x2F;&#x2F;127.0.0.1:3306&#x2F;seata?useUnicode&#x3D;true&amp;rewriteBatchedStatements&#x3D;true\nstore.db.user&#x3D;username\nstore.db.password&#x3D;password\nstore.db.minConn&#x3D;5\nstore.db.maxConn&#x3D;30\nstore.db.globalTable&#x3D;global_table\nstore.db.branchTable&#x3D;branch_table\nstore.db.queryLimit&#x3D;100\nstore.db.lockTable&#x3D;lock_table\nstore.db.maxWait&#x3D;5000\nstore.redis.mode&#x3D;single\nstore.redis.single.host&#x3D;127.0.0.1\nstore.redis.single.port&#x3D;6379\nstore.redis.sentinel.masterName&#x3D;\nstore.redis.sentinel.sentinelHosts&#x3D;\nstore.redis.maxConn&#x3D;10\nstore.redis.minConn&#x3D;1\nstore.redis.maxTotal&#x3D;100\nstore.redis.database&#x3D;0\nstore.redis.password&#x3D;\nstore.redis.queryLimit&#x3D;100\nserver.recovery.committingRetryPeriod&#x3D;1000\nserver.recovery.asynCommittingRetryPeriod&#x3D;1000\nserver.recovery.rollbackingRetryPeriod&#x3D;1000\nserver.recovery.timeoutRetryPeriod&#x3D;1000\nserver.maxCommitRetryTimeout&#x3D;-1\nserver.maxRollbackRetryTimeout&#x3D;-1\nserver.rollbackRetryTimeoutUnlockEnable&#x3D;false\nserver.distributedLockExpireTime&#x3D;10000\nclient.undo.dataValidation&#x3D;true\nclient.undo.logSerialization&#x3D;jackson\nclient.undo.onlyCareUpdateColumns&#x3D;true\nserver.undo.logSaveDays&#x3D;7\nserver.undo.logDeletePeriod&#x3D;86400000\nclient.undo.logTable&#x3D;undo_log\nclient.undo.compress.enable&#x3D;true\nclient.undo.compress.type&#x3D;zip\nclient.undo.compress.threshold&#x3D;64k\nlog.exceptionRate&#x3D;100\ntransport.serialization&#x3D;seata\ntransport.compressor&#x3D;none\nmetrics.enabled&#x3D;false\nmetrics.registryType&#x3D;compact\nmetrics.exporterList&#x3D;prometheus\nmetrics.exporterPrometheusPort&#x3D;9898</code></pre>\n\n<p>这里根据自己需求做调整，我这里的配置如下：</p>\n<pre class=\"line-numbers language-properties\" data-language=\"properties\"><code class=\"language-properties\">service.vgroupMapping.order-service-group&#x3D;default\nservice.vgroupMapping.storage-service-group&#x3D;default\nservice.enableDegrade&#x3D;false\nservice.disableGlobalTransaction&#x3D;false\nstore.mode&#x3D;db\nstore.db.datasource&#x3D;druid\nstore.db.dbType&#x3D;mysql\n#store.db.driverClassName&#x3D;com.mysql.jdbc.Driver 这个是mysql8以下的驱动\nstore.db.driverClassName&#x3D;com.mysql.cj.jdbc.Driver #这个是mysql8的驱动\nstore.db.url&#x3D;jdbc:mysql:&#x2F;&#x2F;192.168.0.1:3306&#x2F;seata?useUnicode&#x3D;true #这个是mysql的连接信息\nstore.db.user&#x3D;root #这个是mysql的用户名\nstore.db.password&#x3D;123456 #这个是mysql的密码\nstore.db.minConn&#x3D;5\nstore.db.maxConn&#x3D;30\nstore.db.globalTable&#x3D;global_table\nstore.db.branchTable&#x3D;branch_table\nstore.db.queryLimit&#x3D;100\nstore.db.lockTable&#x3D;lock_table\nstore.db.maxWait&#x3D;5000</code></pre>\n\n\n\n<h2 id=\"1-7-创建nacos-config-sh\"><a href=\"#1-7-创建nacos-config-sh\" class=\"headerlink\" title=\"1.7 创建nacos-config.sh\"></a>1.7 创建nacos-config.sh</h2><p>在conf中</p>\n<p>nacos-config.sh获取地址：<a href=\"https://github.com/seata/seata/tree/develop/script/config-center/nacos\">seata&#x2F;script&#x2F;config-center&#x2F;nacos at develop · seata&#x2F;seata (github.com)</a></p>\n<h2 id=\"1-8-上传seata配置信息到nacos\"><a href=\"#1-8-上传seata配置信息到nacos\" class=\"headerlink\" title=\"1.8 上传seata配置信息到nacos\"></a>1.8 上传seata配置信息到nacos</h2><p>先确认目录结构正确</p>\n<p><img src=\"https://file.huangge1199.cn/group1/M00/00/00/CgAYB2H54zyAYKwlAAAi_TSko4g044.png\"></p>\n<pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">.&#x2F;nacos-config.sh -h docker所在机器IP -p 8848 -g SEATA_GROUP  -u nacos -w nacos</code></pre>\n\n\n\n<h4 id=\"1-2-2-修改conf-x2F-nacos-config-txt-配置\"><a href=\"#1-2-2-修改conf-x2F-nacos-config-txt-配置\" class=\"headerlink\" title=\"1.2.2 修改conf&#x2F;nacos-config.txt 配置\"></a>1.2.2 修改conf&#x2F;nacos-config.txt 配置</h4><p>service.vgroup_mapping.${your-service-gruop}&#x3D;default，中间的${your-service-gruop}为自己定义的服务组名称，服务中的application.properties文件里配置服务组名称。</p>\n<p>demo中有两个服务，分别是storage-service和order-service，所以配置如下</p>\n<pre class=\"line-numbers language-properties\" data-language=\"properties\"><code class=\"language-properties\">service.vgroup_mapping.storage-service-group&#x3D;defaultservice.vgroup_mapping.order-service-group&#x3D;default</code></pre>\n\n<p>** 注意这里,高版本中应该是vgroupMapping 同时后面的如: order-service-group  不能定义为 order_service_group**</p>\n<h4 id=\"1-3-启动seata-server\"><a href=\"#1-3-启动seata-server\" class=\"headerlink\" title=\"1.3 启动seata-server\"></a>1.3 启动seata-server</h4><p><strong>分两步，如下</strong></p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\"># 初始化seata 的nacos配置cd confsh nacos-config.sh 192.168.21.89# 启动seata-servercd binsh seata-server.sh -p 8091 -m file</code></pre>\n\n<hr>\n<h1 id=\"2-应用配置\"><a href=\"#2-应用配置\" class=\"headerlink\" title=\"2. 应用配置\"></a>2. 应用配置</h1><h3 id=\"2-1-数据库初始化\"><a href=\"#2-1-数据库初始化\" class=\"headerlink\" title=\"2.1 数据库初始化\"></a>2.1 数据库初始化</h3><pre class=\"line-numbers language-SQL\" data-language=\"SQL\"><code class=\"language-SQL\">-- 创建 order库、业务表、undo_log表create database seata_order;use seata_order;DROP TABLE IF EXISTS &#96;order_tbl&#96;;CREATE TABLE &#96;order_tbl&#96; (  &#96;id&#96; int(11) NOT NULL AUTO_INCREMENT,  &#96;user_id&#96; varchar(255) DEFAULT NULL,  &#96;commodity_code&#96; varchar(255) DEFAULT NULL,  &#96;count&#96; int(11) DEFAULT 0,  &#96;money&#96; int(11) DEFAULT 0,  PRIMARY KEY (&#96;id&#96;)) ENGINE&#x3D;InnoDB DEFAULT CHARSET&#x3D;utf8;CREATE TABLE &#96;undo_log&#96;(  &#96;id&#96;            BIGINT(20)   NOT NULL AUTO_INCREMENT,  &#96;branch_id&#96;     BIGINT(20)   NOT NULL,  &#96;xid&#96;           VARCHAR(100) NOT NULL,  &#96;context&#96;       VARCHAR(128) NOT NULL,  &#96;rollback_info&#96; LONGBLOB     NOT NULL,  &#96;log_status&#96;    INT(11)      NOT NULL,  &#96;log_created&#96;   DATETIME     NOT NULL,  &#96;log_modified&#96;  DATETIME     NOT NULL,  &#96;ext&#96;           VARCHAR(100) DEFAULT NULL,  PRIMARY KEY (&#96;id&#96;),  UNIQUE KEY &#96;ux_undo_log&#96; (&#96;xid&#96;, &#96;branch_id&#96;)) ENGINE &#x3D; InnoDB  AUTO_INCREMENT &#x3D; 1  DEFAULT CHARSET &#x3D; utf8;-- 创建 storage库、业务表、undo_log表create database seata_storage;use seata_storage;DROP TABLE IF EXISTS &#96;storage_tbl&#96;;CREATE TABLE &#96;storage_tbl&#96; (  &#96;id&#96; int(11) NOT NULL AUTO_INCREMENT,  &#96;commodity_code&#96; varchar(255) DEFAULT NULL,  &#96;count&#96; int(11) DEFAULT 0,  PRIMARY KEY (&#96;id&#96;),  UNIQUE KEY (&#96;commodity_code&#96;)) ENGINE&#x3D;InnoDB DEFAULT CHARSET&#x3D;utf8;CREATE TABLE &#96;undo_log&#96;(  &#96;id&#96;            BIGINT(20)   NOT NULL AUTO_INCREMENT,  &#96;branch_id&#96;     BIGINT(20)   NOT NULL,  &#96;xid&#96;           VARCHAR(100) NOT NULL,  &#96;context&#96;       VARCHAR(128) NOT NULL,  &#96;rollback_info&#96; LONGBLOB     NOT NULL,  &#96;log_status&#96;    INT(11)      NOT NULL,  &#96;log_created&#96;   DATETIME     NOT NULL,  &#96;log_modified&#96;  DATETIME     NOT NULL,  &#96;ext&#96;           VARCHAR(100) DEFAULT NULL,  PRIMARY KEY (&#96;id&#96;),  UNIQUE KEY &#96;ux_undo_log&#96; (&#96;xid&#96;, &#96;branch_id&#96;)) ENGINE &#x3D; InnoDB  AUTO_INCREMENT &#x3D; 1  DEFAULT CHARSET &#x3D; utf8;-- 初始化库存模拟数据INSERT INTO seata_storage.storage_tbl (id, commodity_code, count) VALUES (1, &#39;product-1&#39;, 9999999);INSERT INTO seata_storage.storage_tbl (id, commodity_code, count) VALUES (2, &#39;product-2&#39;, 0);</code></pre>\n\n<h3 id=\"2-2-应用配置\"><a href=\"#2-2-应用配置\" class=\"headerlink\" title=\"2.2 应用配置\"></a>2.2 应用配置</h3><p>见代码</p>\n<p>几个重要的配置</p>\n<ol>\n<li>每个应用的resource里需要配置一个registry.conf ，demo中与seata-server里的配置相同</li>\n<li>application.propeties 的各个配置项，注意spring.cloud.alibaba.seata.tx-service-group 是服务组名称，与nacos-config.txt 配置的service.vgroup_mapping.${your-service-gruop}具有对应关系</li>\n</ol>\n<hr>\n<h1 id=\"3-测试\"><a href=\"#3-测试\" class=\"headerlink\" title=\"3. 测试\"></a>3. 测试</h1><ol>\n<li><p>分布式事务成功，模拟正常下单、扣库存</p>\n<p>localhost:9091&#x2F;order&#x2F;placeOrder&#x2F;commit</p>\n</li>\n<li><p>分布式事务失败，模拟下单成功、扣库存失败，最终同时回滚</p>\n<p>localhost:9091&#x2F;order&#x2F;placeOrder&#x2F;rollback</p>\n</li>\n</ol>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.gitee.io/zh-CN/","avatar":"https://element-plus.gitee.io/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"}}},"cover":"https://blog.huangge1199.cn/images/bg.jpeg","excerpt":"","more":"<h1 id=\"seata1-4-1服务端部署及应用\"><a href=\"#seata1-4-1服务端部署及应用\" class=\"headerlink\" title=\"seata1.4.1服务端部署及应用\"></a>seata1.4.1服务端部署及应用</h1><p>springcloud-nacos-seata</p>\n<p><strong>分布式事务组件seata的使用demo，AT模式，集成nacos、springboot、springcloud、mybatis-plus、feign，数据库采用mysql</strong></p>\n<p>demo中使用的相关版本号，具体请看代码。如果搭建个人demo不成功，验证是否是由版本导致，由于目前这几个项目更新比较频繁，版本稍有变化便会出现许多奇怪问题</p>\n<ul>\n<li>seata 1.4.1</li>\n<li>spring-cloud-alibaba-seata 2.2.0.RELEASE</li>\n<li>spring-cloud-starter-alibaba-nacos-discovery  2.1.1.RELEASE</li>\n<li>springboot 2.1.10.RELEASE</li>\n<li>springcloud Greenwich.SR4</li>\n</ul>\n<hr>\n<h1 id=\"1-服务端配置\"><a href=\"#1-服务端配置\" class=\"headerlink\" title=\"1. 服务端配置\"></a>1. 服务端配置</h1><p>seata-server为release版本1.4.1，采用docker部署方式</p>\n<p><a href=\"https://github.com/seata/seata/releases/tag/v1.4.1\">https://github.com/seata/seata/releases/tag/v1.4.1</a>)</p>\n<h2 id=\"1-1-docker拉取镜像\"><a href=\"#1-1-docker拉取镜像\" class=\"headerlink\" title=\"1.1 docker拉取镜像\"></a>1.1 docker拉取镜像</h2><pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">docker pull seataio&#x2F;seata-server:1.4.1</code></pre>\n\n<h2 id=\"1-2-启动临时容器\"><a href=\"#1-2-启动临时容器\" class=\"headerlink\" title=\"1.2 启动临时容器\"></a>1.2 启动临时容器</h2><pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">docker run --rm --name seata-server -d -p 8091:8091 seataio&#x2F;seata-server:1.4.1</code></pre>\n\n<p><img src=\"https://file.huangge1199.cn/group1/M00/00/00/CgAYB2H54oaAImNHAAAUub2sTS4448.png\"></p>\n<h2 id=\"1-3-将配置文件拷贝出来\"><a href=\"#1-3-将配置文件拷贝出来\" class=\"headerlink\" title=\"1.3 将配置文件拷贝出来\"></a>1.3 将配置文件拷贝出来</h2><pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">docker cp d5cd81d60189:&#x2F;seata-server&#x2F;resources&#x2F; .&#x2F;conf&#x2F;</code></pre>\n\n<p><img src=\"https://file.huangge1199.cn/group1/M00/00/00/CgAYB2H54uCAAGPGAAALD6FSnY8866.png\"></p>\n<h2 id=\"1-4-修改conf-x2F-registry-conf文件\"><a href=\"#1-4-修改conf-x2F-registry-conf文件\" class=\"headerlink\" title=\"1.4 修改conf&#x2F;registry.conf文件\"></a>1.4 修改conf&#x2F;registry.conf文件</h2><p>修改文件，用nacos做注册中心和配置中心</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">vi .&#x2F;conf&#x2F;registry.conf</code></pre>\n\n<p>原始内容：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">registry &#123;\n  # file 、nacos 、eureka、redis、zk、consul、etcd3、sofa\n  type &#x3D; &quot;file&quot;\n  loadBalance &#x3D; &quot;RandomLoadBalance&quot;\n  loadBalanceVirtualNodes &#x3D; 10\n\n  nacos &#123;\n    application &#x3D; &quot;seata-server&quot;\n    serverAddr &#x3D; &quot;127.0.0.1:8848&quot;\n    group &#x3D; &quot;SEATA_GROUP&quot;\n    namespace &#x3D; &quot;&quot;\n    cluster &#x3D; &quot;default&quot;\n    username &#x3D; &quot;&quot;\n    password &#x3D; &quot;&quot;\n  &#125;\n  eureka &#123;\n    serviceUrl &#x3D; &quot;http:&#x2F;&#x2F;localhost:8761&#x2F;eureka&quot;\n    application &#x3D; &quot;default&quot;\n    weight &#x3D; &quot;1&quot;\n  &#125;\n  redis &#123;\n    serverAddr &#x3D; &quot;localhost:6379&quot;\n    db &#x3D; 0\n    password &#x3D; &quot;&quot;\n    cluster &#x3D; &quot;default&quot;\n    timeout &#x3D; 0\n  &#125;\n  zk &#123;\n    cluster &#x3D; &quot;default&quot;\n    serverAddr &#x3D; &quot;127.0.0.1:2181&quot;\n    sessionTimeout &#x3D; 6000\n    connectTimeout &#x3D; 2000\n    username &#x3D; &quot;&quot;\n    password &#x3D; &quot;&quot;\n  &#125;\n  consul &#123;\n    cluster &#x3D; &quot;default&quot;\n    serverAddr &#x3D; &quot;127.0.0.1:8500&quot;\n  &#125;\n  etcd3 &#123;\n    cluster &#x3D; &quot;default&quot;\n    serverAddr &#x3D; &quot;http:&#x2F;&#x2F;localhost:2379&quot;\n  &#125;\n  sofa &#123;\n    serverAddr &#x3D; &quot;127.0.0.1:9603&quot;\n    application &#x3D; &quot;default&quot;\n    region &#x3D; &quot;DEFAULT_ZONE&quot;\n    datacenter &#x3D; &quot;DefaultDataCenter&quot;\n    cluster &#x3D; &quot;default&quot;\n    group &#x3D; &quot;SEATA_GROUP&quot;\n    addressWaitTime &#x3D; &quot;3000&quot;\n  &#125;\n  file &#123;\n    name &#x3D; &quot;file.conf&quot;\n  &#125;\n&#125;\n\nconfig &#123;\n  # file、nacos 、apollo、zk、consul、etcd3\n  type &#x3D; &quot;file&quot;\n\n  nacos &#123;\n    serverAddr &#x3D; &quot;127.0.0.1:8848&quot;\n    namespace &#x3D; &quot;&quot;\n    group &#x3D; &quot;SEATA_GROUP&quot;\n    username &#x3D; &quot;&quot;\n    password &#x3D; &quot;&quot;\n  &#125;\n  consul &#123;\n    serverAddr &#x3D; &quot;127.0.0.1:8500&quot;\n  &#125;\n  apollo &#123;\n    appId &#x3D; &quot;seata-server&quot;\n    apolloMeta &#x3D; &quot;http:&#x2F;&#x2F;192.168.1.204:8801&quot;\n    namespace &#x3D; &quot;application&quot;\n    apolloAccesskeySecret &#x3D; &quot;&quot;\n  &#125;\n  zk &#123;\n    serverAddr &#x3D; &quot;127.0.0.1:2181&quot;\n    sessionTimeout &#x3D; 6000\n    connectTimeout &#x3D; 2000\n    username &#x3D; &quot;&quot;\n    password &#x3D; &quot;&quot;\n  &#125;\n  etcd3 &#123;\n    serverAddr &#x3D; &quot;http:&#x2F;&#x2F;localhost:2379&quot;\n  &#125;\n  file &#123;\n    name &#x3D; &quot;file.conf&quot;\n  &#125;\n&#125;\n</code></pre>\n\n<p>修改后的内容：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">registry &#123;\n  # file 、nacos 、eureka、redis、zk、consul、etcd3、sofa\n  type &#x3D; &quot;nacos&quot; # 改为nacos\n  loadBalance &#x3D; &quot;RandomLoadBalance&quot;\n  loadBalanceVirtualNodes &#x3D; 10\n\n  nacos &#123;\n    application &#x3D; &quot;seata-server&quot;\n    serverAddr &#x3D; &quot;IP:端口&quot; # 改为nacos实际的IP:端口\n    group &#x3D; &quot;SEATA_GROUP&quot;\n    namespace &#x3D; &quot;&quot;\n    cluster &#x3D; &quot;default&quot;\n    username &#x3D; &quot;nacos&quot; # 改为nacos的账号\n    password &#x3D; &quot;nacos&quot; # 改为nacos的密码\n  &#125;\n  eureka &#123;\n    serviceUrl &#x3D; &quot;http:&#x2F;&#x2F;localhost:8761&#x2F;eureka&quot;\n    application &#x3D; &quot;default&quot;\n    weight &#x3D; &quot;1&quot;\n  &#125;\n  redis &#123;\n    serverAddr &#x3D; &quot;localhost:6379&quot;\n    db &#x3D; 0\n    password &#x3D; &quot;&quot;\n    cluster &#x3D; &quot;default&quot;\n    timeout &#x3D; 0\n  &#125;\n  zk &#123;\n    cluster &#x3D; &quot;default&quot;\n    serverAddr &#x3D; &quot;127.0.0.1:2181&quot;\n    sessionTimeout &#x3D; 6000\n    connectTimeout &#x3D; 2000\n    username &#x3D; &quot;&quot;\n    password &#x3D; &quot;&quot;\n  &#125;\n  consul &#123;\n    cluster &#x3D; &quot;default&quot;\n    serverAddr &#x3D; &quot;127.0.0.1:8500&quot;\n  &#125;\n  etcd3 &#123;\n    cluster &#x3D; &quot;default&quot;\n    serverAddr &#x3D; &quot;http:&#x2F;&#x2F;localhost:2379&quot;\n  &#125;\n  sofa &#123;\n    serverAddr &#x3D; &quot;127.0.0.1:9603&quot;\n    application &#x3D; &quot;default&quot;\n    region &#x3D; &quot;DEFAULT_ZONE&quot;\n    datacenter &#x3D; &quot;DefaultDataCenter&quot;\n    cluster &#x3D; &quot;default&quot;\n    group &#x3D; &quot;SEATA_GROUP&quot;\n    addressWaitTime &#x3D; &quot;3000&quot;\n  &#125;\n  file &#123;\n    name &#x3D; &quot;file.conf&quot;\n  &#125;\n&#125;\n\nconfig &#123;\n  # file、nacos 、apollo、zk、consul、etcd3\n  type &#x3D; &quot;nacos&quot; # 改为nacos\n\n  nacos &#123;\n    serverAddr &#x3D; &quot;IP:端口&quot; # 改为nacos实际的IP:端口\n    namespace &#x3D; &quot;&quot;\n    group &#x3D; &quot;SEATA_GROUP&quot;\n    username &#x3D; &quot;nacos&quot; # 改为nacos的账号\n    password &#x3D; &quot;nacos&quot; # 改为nacos的密码\n  &#125;\n  consul &#123;\n    serverAddr &#x3D; &quot;127.0.0.1:8500&quot;\n  &#125;\n  apollo &#123;\n    appId &#x3D; &quot;seata-server&quot;\n    apolloMeta &#x3D; &quot;http:&#x2F;&#x2F;192.168.1.204:8801&quot;\n    namespace &#x3D; &quot;application&quot;\n    apolloAccesskeySecret &#x3D; &quot;&quot;\n  &#125;\n  zk &#123;\n    serverAddr &#x3D; &quot;127.0.0.1:2181&quot;\n    sessionTimeout &#x3D; 6000\n    connectTimeout &#x3D; 2000\n    username &#x3D; &quot;&quot;\n    password &#x3D; &quot;&quot;\n  &#125;\n  etcd3 &#123;\n    serverAddr &#x3D; &quot;http:&#x2F;&#x2F;localhost:2379&quot;\n  &#125;\n  file &#123;\n    name &#x3D; &quot;file.conf&quot;\n  &#125;\n&#125;\n</code></pre>\n\n<h2 id=\"1-5-执行SQL语句\"><a href=\"#1-5-执行SQL语句\" class=\"headerlink\" title=\"1.5 执行SQL语句\"></a>1.5 执行SQL语句</h2><p>seata配置使用db事务日志存储方式</p>\n<p>SQL文件下载地址：<a href=\"https://github.com/seata/seata/tree/develop/script/server/db\">seata&#x2F;script&#x2F;server&#x2F;db at develop · seata&#x2F;seata (github.com)</a></p>\n<h2 id=\"1-6-创建config-txt并修改\"><a href=\"#1-6-创建config-txt并修改\" class=\"headerlink\" title=\"1.6 创建config.txt并修改\"></a>1.6 创建config.txt并修改</h2><p>config.txt文件地址：<a href=\"https://github.com/seata/seata/blob/develop/script/config-center/config.txt\">seata&#x2F;config.txt at develop · seata&#x2F;seata (github.com)</a></p>\n<p>config.txt原件：</p>\n<pre class=\"line-numbers language-properties\" data-language=\"properties\"><code class=\"language-properties\">transport.type&#x3D;TCP\ntransport.server&#x3D;NIO\ntransport.heartbeat&#x3D;true\ntransport.enableClientBatchSendRequest&#x3D;true\ntransport.threadFactory.bossThreadPrefix&#x3D;NettyBoss\ntransport.threadFactory.workerThreadPrefix&#x3D;NettyServerNIOWorker\ntransport.threadFactory.serverExecutorThreadPrefix&#x3D;NettyServerBizHandler\ntransport.threadFactory.shareBossWorker&#x3D;false\ntransport.threadFactory.clientSelectorThreadPrefix&#x3D;NettyClientSelector\ntransport.threadFactory.clientSelectorThreadSize&#x3D;1\ntransport.threadFactory.clientWorkerThreadPrefix&#x3D;NettyClientWorkerThread\ntransport.threadFactory.bossThreadSize&#x3D;1\ntransport.threadFactory.workerThreadSize&#x3D;default\ntransport.shutdown.wait&#x3D;3\nservice.vgroupMapping.my_test_tx_group&#x3D;default\nservice.default.grouplist&#x3D;127.0.0.1:8091\nservice.enableDegrade&#x3D;false\nservice.disableGlobalTransaction&#x3D;false\nclient.rm.asyncCommitBufferLimit&#x3D;10000\nclient.rm.lock.retryInterval&#x3D;10\nclient.rm.lock.retryTimes&#x3D;30\nclient.rm.lock.retryPolicyBranchRollbackOnConflict&#x3D;true\nclient.rm.reportRetryCount&#x3D;5\nclient.rm.tableMetaCheckEnable&#x3D;false\nclient.rm.tableMetaCheckerInterval&#x3D;60000\nclient.rm.sqlParserType&#x3D;druid\nclient.rm.reportSuccessEnable&#x3D;false\nclient.rm.sagaBranchRegisterEnable&#x3D;false\nclient.rm.tccActionInterceptorOrder&#x3D;-2147482648\nclient.tm.commitRetryCount&#x3D;5\nclient.tm.rollbackRetryCount&#x3D;5\nclient.tm.defaultGlobalTransactionTimeout&#x3D;60000\nclient.tm.degradeCheck&#x3D;false\nclient.tm.degradeCheckAllowTimes&#x3D;10\nclient.tm.degradeCheckPeriod&#x3D;2000\nclient.tm.interceptorOrder&#x3D;-2147482648\nstore.mode&#x3D;file\nstore.lock.mode&#x3D;file\nstore.session.mode&#x3D;file\nstore.publicKey&#x3D;\nstore.file.dir&#x3D;file_store&#x2F;data\nstore.file.maxBranchSessionSize&#x3D;16384\nstore.file.maxGlobalSessionSize&#x3D;512\nstore.file.fileWriteBufferCacheSize&#x3D;16384\nstore.file.flushDiskMode&#x3D;async\nstore.file.sessionReloadReadSize&#x3D;100\nstore.db.datasource&#x3D;druid\nstore.db.dbType&#x3D;mysql\nstore.db.driverClassName&#x3D;com.mysql.jdbc.Driver\nstore.db.url&#x3D;jdbc:mysql:&#x2F;&#x2F;127.0.0.1:3306&#x2F;seata?useUnicode&#x3D;true&amp;rewriteBatchedStatements&#x3D;true\nstore.db.user&#x3D;username\nstore.db.password&#x3D;password\nstore.db.minConn&#x3D;5\nstore.db.maxConn&#x3D;30\nstore.db.globalTable&#x3D;global_table\nstore.db.branchTable&#x3D;branch_table\nstore.db.queryLimit&#x3D;100\nstore.db.lockTable&#x3D;lock_table\nstore.db.maxWait&#x3D;5000\nstore.redis.mode&#x3D;single\nstore.redis.single.host&#x3D;127.0.0.1\nstore.redis.single.port&#x3D;6379\nstore.redis.sentinel.masterName&#x3D;\nstore.redis.sentinel.sentinelHosts&#x3D;\nstore.redis.maxConn&#x3D;10\nstore.redis.minConn&#x3D;1\nstore.redis.maxTotal&#x3D;100\nstore.redis.database&#x3D;0\nstore.redis.password&#x3D;\nstore.redis.queryLimit&#x3D;100\nserver.recovery.committingRetryPeriod&#x3D;1000\nserver.recovery.asynCommittingRetryPeriod&#x3D;1000\nserver.recovery.rollbackingRetryPeriod&#x3D;1000\nserver.recovery.timeoutRetryPeriod&#x3D;1000\nserver.maxCommitRetryTimeout&#x3D;-1\nserver.maxRollbackRetryTimeout&#x3D;-1\nserver.rollbackRetryTimeoutUnlockEnable&#x3D;false\nserver.distributedLockExpireTime&#x3D;10000\nclient.undo.dataValidation&#x3D;true\nclient.undo.logSerialization&#x3D;jackson\nclient.undo.onlyCareUpdateColumns&#x3D;true\nserver.undo.logSaveDays&#x3D;7\nserver.undo.logDeletePeriod&#x3D;86400000\nclient.undo.logTable&#x3D;undo_log\nclient.undo.compress.enable&#x3D;true\nclient.undo.compress.type&#x3D;zip\nclient.undo.compress.threshold&#x3D;64k\nlog.exceptionRate&#x3D;100\ntransport.serialization&#x3D;seata\ntransport.compressor&#x3D;none\nmetrics.enabled&#x3D;false\nmetrics.registryType&#x3D;compact\nmetrics.exporterList&#x3D;prometheus\nmetrics.exporterPrometheusPort&#x3D;9898</code></pre>\n\n<p>这里根据自己需求做调整，我这里的配置如下：</p>\n<pre class=\"line-numbers language-properties\" data-language=\"properties\"><code class=\"language-properties\">service.vgroupMapping.order-service-group&#x3D;default\nservice.vgroupMapping.storage-service-group&#x3D;default\nservice.enableDegrade&#x3D;false\nservice.disableGlobalTransaction&#x3D;false\nstore.mode&#x3D;db\nstore.db.datasource&#x3D;druid\nstore.db.dbType&#x3D;mysql\n#store.db.driverClassName&#x3D;com.mysql.jdbc.Driver 这个是mysql8以下的驱动\nstore.db.driverClassName&#x3D;com.mysql.cj.jdbc.Driver #这个是mysql8的驱动\nstore.db.url&#x3D;jdbc:mysql:&#x2F;&#x2F;192.168.0.1:3306&#x2F;seata?useUnicode&#x3D;true #这个是mysql的连接信息\nstore.db.user&#x3D;root #这个是mysql的用户名\nstore.db.password&#x3D;123456 #这个是mysql的密码\nstore.db.minConn&#x3D;5\nstore.db.maxConn&#x3D;30\nstore.db.globalTable&#x3D;global_table\nstore.db.branchTable&#x3D;branch_table\nstore.db.queryLimit&#x3D;100\nstore.db.lockTable&#x3D;lock_table\nstore.db.maxWait&#x3D;5000</code></pre>\n\n\n\n<h2 id=\"1-7-创建nacos-config-sh\"><a href=\"#1-7-创建nacos-config-sh\" class=\"headerlink\" title=\"1.7 创建nacos-config.sh\"></a>1.7 创建nacos-config.sh</h2><p>在conf中</p>\n<p>nacos-config.sh获取地址：<a href=\"https://github.com/seata/seata/tree/develop/script/config-center/nacos\">seata&#x2F;script&#x2F;config-center&#x2F;nacos at develop · seata&#x2F;seata (github.com)</a></p>\n<h2 id=\"1-8-上传seata配置信息到nacos\"><a href=\"#1-8-上传seata配置信息到nacos\" class=\"headerlink\" title=\"1.8 上传seata配置信息到nacos\"></a>1.8 上传seata配置信息到nacos</h2><p>先确认目录结构正确</p>\n<p><img src=\"https://file.huangge1199.cn/group1/M00/00/00/CgAYB2H54zyAYKwlAAAi_TSko4g044.png\"></p>\n<pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">.&#x2F;nacos-config.sh -h docker所在机器IP -p 8848 -g SEATA_GROUP  -u nacos -w nacos</code></pre>\n\n\n\n<h4 id=\"1-2-2-修改conf-x2F-nacos-config-txt-配置\"><a href=\"#1-2-2-修改conf-x2F-nacos-config-txt-配置\" class=\"headerlink\" title=\"1.2.2 修改conf&#x2F;nacos-config.txt 配置\"></a>1.2.2 修改conf&#x2F;nacos-config.txt 配置</h4><p>service.vgroup_mapping.${your-service-gruop}&#x3D;default，中间的${your-service-gruop}为自己定义的服务组名称，服务中的application.properties文件里配置服务组名称。</p>\n<p>demo中有两个服务，分别是storage-service和order-service，所以配置如下</p>\n<pre class=\"line-numbers language-properties\" data-language=\"properties\"><code class=\"language-properties\">service.vgroup_mapping.storage-service-group&#x3D;defaultservice.vgroup_mapping.order-service-group&#x3D;default</code></pre>\n\n<p>** 注意这里,高版本中应该是vgroupMapping 同时后面的如: order-service-group  不能定义为 order_service_group**</p>\n<h4 id=\"1-3-启动seata-server\"><a href=\"#1-3-启动seata-server\" class=\"headerlink\" title=\"1.3 启动seata-server\"></a>1.3 启动seata-server</h4><p><strong>分两步，如下</strong></p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\"># 初始化seata 的nacos配置cd confsh nacos-config.sh 192.168.21.89# 启动seata-servercd binsh seata-server.sh -p 8091 -m file</code></pre>\n\n<hr>\n<h1 id=\"2-应用配置\"><a href=\"#2-应用配置\" class=\"headerlink\" title=\"2. 应用配置\"></a>2. 应用配置</h1><h3 id=\"2-1-数据库初始化\"><a href=\"#2-1-数据库初始化\" class=\"headerlink\" title=\"2.1 数据库初始化\"></a>2.1 数据库初始化</h3><pre class=\"line-numbers language-SQL\" data-language=\"SQL\"><code class=\"language-SQL\">-- 创建 order库、业务表、undo_log表create database seata_order;use seata_order;DROP TABLE IF EXISTS &#96;order_tbl&#96;;CREATE TABLE &#96;order_tbl&#96; (  &#96;id&#96; int(11) NOT NULL AUTO_INCREMENT,  &#96;user_id&#96; varchar(255) DEFAULT NULL,  &#96;commodity_code&#96; varchar(255) DEFAULT NULL,  &#96;count&#96; int(11) DEFAULT 0,  &#96;money&#96; int(11) DEFAULT 0,  PRIMARY KEY (&#96;id&#96;)) ENGINE&#x3D;InnoDB DEFAULT CHARSET&#x3D;utf8;CREATE TABLE &#96;undo_log&#96;(  &#96;id&#96;            BIGINT(20)   NOT NULL AUTO_INCREMENT,  &#96;branch_id&#96;     BIGINT(20)   NOT NULL,  &#96;xid&#96;           VARCHAR(100) NOT NULL,  &#96;context&#96;       VARCHAR(128) NOT NULL,  &#96;rollback_info&#96; LONGBLOB     NOT NULL,  &#96;log_status&#96;    INT(11)      NOT NULL,  &#96;log_created&#96;   DATETIME     NOT NULL,  &#96;log_modified&#96;  DATETIME     NOT NULL,  &#96;ext&#96;           VARCHAR(100) DEFAULT NULL,  PRIMARY KEY (&#96;id&#96;),  UNIQUE KEY &#96;ux_undo_log&#96; (&#96;xid&#96;, &#96;branch_id&#96;)) ENGINE &#x3D; InnoDB  AUTO_INCREMENT &#x3D; 1  DEFAULT CHARSET &#x3D; utf8;-- 创建 storage库、业务表、undo_log表create database seata_storage;use seata_storage;DROP TABLE IF EXISTS &#96;storage_tbl&#96;;CREATE TABLE &#96;storage_tbl&#96; (  &#96;id&#96; int(11) NOT NULL AUTO_INCREMENT,  &#96;commodity_code&#96; varchar(255) DEFAULT NULL,  &#96;count&#96; int(11) DEFAULT 0,  PRIMARY KEY (&#96;id&#96;),  UNIQUE KEY (&#96;commodity_code&#96;)) ENGINE&#x3D;InnoDB DEFAULT CHARSET&#x3D;utf8;CREATE TABLE &#96;undo_log&#96;(  &#96;id&#96;            BIGINT(20)   NOT NULL AUTO_INCREMENT,  &#96;branch_id&#96;     BIGINT(20)   NOT NULL,  &#96;xid&#96;           VARCHAR(100) NOT NULL,  &#96;context&#96;       VARCHAR(128) NOT NULL,  &#96;rollback_info&#96; LONGBLOB     NOT NULL,  &#96;log_status&#96;    INT(11)      NOT NULL,  &#96;log_created&#96;   DATETIME     NOT NULL,  &#96;log_modified&#96;  DATETIME     NOT NULL,  &#96;ext&#96;           VARCHAR(100) DEFAULT NULL,  PRIMARY KEY (&#96;id&#96;),  UNIQUE KEY &#96;ux_undo_log&#96; (&#96;xid&#96;, &#96;branch_id&#96;)) ENGINE &#x3D; InnoDB  AUTO_INCREMENT &#x3D; 1  DEFAULT CHARSET &#x3D; utf8;-- 初始化库存模拟数据INSERT INTO seata_storage.storage_tbl (id, commodity_code, count) VALUES (1, &#39;product-1&#39;, 9999999);INSERT INTO seata_storage.storage_tbl (id, commodity_code, count) VALUES (2, &#39;product-2&#39;, 0);</code></pre>\n\n<h3 id=\"2-2-应用配置\"><a href=\"#2-2-应用配置\" class=\"headerlink\" title=\"2.2 应用配置\"></a>2.2 应用配置</h3><p>见代码</p>\n<p>几个重要的配置</p>\n<ol>\n<li>每个应用的resource里需要配置一个registry.conf ，demo中与seata-server里的配置相同</li>\n<li>application.propeties 的各个配置项，注意spring.cloud.alibaba.seata.tx-service-group 是服务组名称，与nacos-config.txt 配置的service.vgroup_mapping.${your-service-gruop}具有对应关系</li>\n</ol>\n<hr>\n<h1 id=\"3-测试\"><a href=\"#3-测试\" class=\"headerlink\" title=\"3. 测试\"></a>3. 测试</h1><ol>\n<li><p>分布式事务成功，模拟正常下单、扣库存</p>\n<p>localhost:9091&#x2F;order&#x2F;placeOrder&#x2F;commit</p>\n</li>\n<li><p>分布式事务失败，模拟下单成功、扣库存失败，最终同时回滚</p>\n<p>localhost:9091&#x2F;order&#x2F;placeOrder&#x2F;rollback</p>\n</li>\n</ol>\n"},{"title":"maven打jar包时本地依赖包未在其中？","date":"2022-03-10T06:18:41.000Z","cover":"https://blog.huangge1199.cn/post/question20220310-1/bg.jpeg","_content":"今天，运行jar包时，报错了，报的内容是不存在某一个依赖包中的类，经过一番排查，发现这个类是下面这种形式依赖的\n```xml\n<dependency>\n\t<groupId>com.oracle</groupId>\n\t<artifactId>ojdbc6</artifactId>\n\t<version>11.2.0.4</version>\n\t<scope>system</scope>\n\t<systemPath>D:/work/ojdbc6-11.2.0.4.jar</systemPath>\n</dependency>\n```\n针对依赖包是在本地的这种情况，需要在pom中添加includeSystemScope=true，参考如下：\n```xml\n<build>\n\t<plugins>\n\t\t<plugin>\n\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t<artifactId>spring-boot-maven-plugin</artifactId>\n\t\t\t<version>2.1.7.RELEASE</version>\n\t\t\t<configuration>\n\t\t\t\t<includeSystemScope>true</includeSystemScope>\n\t\t\t</configuration>\n\t\t</plugin>\n\t</plugins>\n</build>\n```\n","source":"_posts/question20220310-1.md","raw":"---\ntitle: maven打jar包时本地依赖包未在其中？\ndate: 2022-03-10 14:18:41\ntags: maven\ncategories: 问题记录\ncover: https://blog.huangge1199.cn/post/question20220310-1/bg.jpeg\n---\n今天，运行jar包时，报错了，报的内容是不存在某一个依赖包中的类，经过一番排查，发现这个类是下面这种形式依赖的\n```xml\n<dependency>\n\t<groupId>com.oracle</groupId>\n\t<artifactId>ojdbc6</artifactId>\n\t<version>11.2.0.4</version>\n\t<scope>system</scope>\n\t<systemPath>D:/work/ojdbc6-11.2.0.4.jar</systemPath>\n</dependency>\n```\n针对依赖包是在本地的这种情况，需要在pom中添加includeSystemScope=true，参考如下：\n```xml\n<build>\n\t<plugins>\n\t\t<plugin>\n\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t<artifactId>spring-boot-maven-plugin</artifactId>\n\t\t\t<version>2.1.7.RELEASE</version>\n\t\t\t<configuration>\n\t\t\t\t<includeSystemScope>true</includeSystemScope>\n\t\t\t</configuration>\n\t\t</plugin>\n\t</plugins>\n</build>\n```\n","slug":"question20220310-1","published":1,"updated":"2022-03-10T07:35:44.035Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl0t0rrm2005m4ctuc0p1cn55","content":"<p>今天，运行jar包时，报错了，报的内容是不存在某一个依赖包中的类，经过一番排查，发现这个类是下面这种形式依赖的</p>\n<pre class=\"line-numbers language-xml\" data-language=\"xml\"><code class=\"language-xml\">&lt;dependency&gt;\n\t&lt;groupId&gt;com.oracle&lt;&#x2F;groupId&gt;\n\t&lt;artifactId&gt;ojdbc6&lt;&#x2F;artifactId&gt;\n\t&lt;version&gt;11.2.0.4&lt;&#x2F;version&gt;\n\t&lt;scope&gt;system&lt;&#x2F;scope&gt;\n\t&lt;systemPath&gt;D:&#x2F;work&#x2F;ojdbc6-11.2.0.4.jar&lt;&#x2F;systemPath&gt;\n&lt;&#x2F;dependency&gt;</code></pre>\n<p>针对依赖包是在本地的这种情况，需要在pom中添加includeSystemScope&#x3D;true，参考如下：</p>\n<pre class=\"line-numbers language-xml\" data-language=\"xml\"><code class=\"language-xml\">&lt;build&gt;\n\t&lt;plugins&gt;\n\t\t&lt;plugin&gt;\n\t\t\t&lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;\n\t\t\t&lt;artifactId&gt;spring-boot-maven-plugin&lt;&#x2F;artifactId&gt;\n\t\t\t&lt;version&gt;2.1.7.RELEASE&lt;&#x2F;version&gt;\n\t\t\t&lt;configuration&gt;\n\t\t\t\t&lt;includeSystemScope&gt;true&lt;&#x2F;includeSystemScope&gt;\n\t\t\t&lt;&#x2F;configuration&gt;\n\t\t&lt;&#x2F;plugin&gt;\n\t&lt;&#x2F;plugins&gt;\n&lt;&#x2F;build&gt;</code></pre>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.gitee.io/zh-CN/","avatar":"https://element-plus.gitee.io/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"}}},"excerpt":"","more":"<p>今天，运行jar包时，报错了，报的内容是不存在某一个依赖包中的类，经过一番排查，发现这个类是下面这种形式依赖的</p>\n<pre class=\"line-numbers language-xml\" data-language=\"xml\"><code class=\"language-xml\">&lt;dependency&gt;\n\t&lt;groupId&gt;com.oracle&lt;&#x2F;groupId&gt;\n\t&lt;artifactId&gt;ojdbc6&lt;&#x2F;artifactId&gt;\n\t&lt;version&gt;11.2.0.4&lt;&#x2F;version&gt;\n\t&lt;scope&gt;system&lt;&#x2F;scope&gt;\n\t&lt;systemPath&gt;D:&#x2F;work&#x2F;ojdbc6-11.2.0.4.jar&lt;&#x2F;systemPath&gt;\n&lt;&#x2F;dependency&gt;</code></pre>\n<p>针对依赖包是在本地的这种情况，需要在pom中添加includeSystemScope&#x3D;true，参考如下：</p>\n<pre class=\"line-numbers language-xml\" data-language=\"xml\"><code class=\"language-xml\">&lt;build&gt;\n\t&lt;plugins&gt;\n\t\t&lt;plugin&gt;\n\t\t\t&lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;\n\t\t\t&lt;artifactId&gt;spring-boot-maven-plugin&lt;&#x2F;artifactId&gt;\n\t\t\t&lt;version&gt;2.1.7.RELEASE&lt;&#x2F;version&gt;\n\t\t\t&lt;configuration&gt;\n\t\t\t\t&lt;includeSystemScope&gt;true&lt;&#x2F;includeSystemScope&gt;\n\t\t\t&lt;&#x2F;configuration&gt;\n\t\t&lt;&#x2F;plugin&gt;\n\t&lt;&#x2F;plugins&gt;\n&lt;&#x2F;build&gt;</code></pre>\n"},{"title":"Sublime Text 4 破解","date":"2022-01-14T07:24:18.000Z","cover":"https://blog.huangge1199.cn/post/sublimeText4Purchase/bg.jpeg","_content":"\n# 下载地址\nhttps://www.sublimetext.com/download\n# 激活方法\n## 打开在线十六进制编辑器\n\n地址：[hexed](https://hexed.it/)\n\n![image-20220114153619254](https://blog.huangge1199.cn/post/sublimeText4Purchase/image-20220114153619254.png)\n\n## 打开``sublime_text.exe``文件\n![img.png](https://blog.huangge1199.cn/post/sublimeText4Purchase/img.png)\n\n## 替换\n\n根据版本不同替换不同：\n\n- X64版本\n\n  `4157415656575553B828210000` 替换为 `33C0FEC0C3575553B828210000`\n\n- X86版本\n  `55535756B8AC200000` 替换为 `33C0FEC0C3AC200000`\n\n按住`Ctrl+F`，我这边是64位电脑，在搜索中输入`4157415656575553B828210000` ，在替换为输入`33C0FEC0C3AC200000`，如果替换为无法输入，记得将替换为上一行的启用替换勾选上，然后先查找一下，接下来再点击替换\n\n![image-20220114154528250](https://blog.huangge1199.cn/post/sublimeText4Purchase/image-20220114154528250.png)\n\n## 替换后点击另存为，替换掉原来的文件，保存\n\n![image-20220114154843108](https://blog.huangge1199.cn/post/sublimeText4Purchase/image-20220114154843108.png)\n\n## 输入激活码激活\n\n- 打开应用\n\n- 依次点击Help->Enter License\n\n  ![image-20220114155104130](https://blog.huangge1199.cn/post/sublimeText4Purchase/image-20220114155104130.png)\n\n- 在弹出的窗口输入激活码\n\n  激活码如下：\n\n  ```tex\n  ----- BEGIN LICENSE -----\n  RUYO.net\n  Unlimited User License\n  EA7E-81044230\n  0C0CD4A8 CAA317D9 CCABD1AC 434C984C\n  7E4A0B13 77893C3E DD0A5BA1 B2EB721C\n  4BAAB4C4 9B96437D 14EB743E 7DB55D9C\n  7CA26EE2 67C3B4EC 29B2C65A 88D90C59\n  CB6CCBA5 7DE6177B C02C2826 8C9A21B0\n  6AB1A5B6 20B09EA2 01C979BD 29670B19\n  92DC6D90 6E365849 4AB84739 5B4C3EA1\n  048CC1D0 9748ED54 CAC9D585 90CAD815\n  ------ END LICENSE ------\n  ```\n\n  ![image-20220114155245648](https://blog.huangge1199.cn/post/sublimeText4Purchase/image-20220114155245648.png)\n\n- 点击下方的Use License\n\n  ![image-20220114155341371](https://blog.huangge1199.cn/post/sublimeText4Purchase/image-20220114155341371.png)\n\n- 确认\n\n  依次点击Help->About Sublime Text\n\n  ![image-20220114155558214](https://blog.huangge1199.cn/post/sublimeText4Purchase/image-20220114155558214.png)","source":"_posts/sublimeText4Purchase.md","raw":"---\ntitle: Sublime Text 4 破解\ndate: 2022-01-14 15:24:18\ncategories: 破解方法\ntags: 破解\ncover: https://blog.huangge1199.cn/post/sublimeText4Purchase/bg.jpeg\n---\n\n# 下载地址\nhttps://www.sublimetext.com/download\n# 激活方法\n## 打开在线十六进制编辑器\n\n地址：[hexed](https://hexed.it/)\n\n![image-20220114153619254](https://blog.huangge1199.cn/post/sublimeText4Purchase/image-20220114153619254.png)\n\n## 打开``sublime_text.exe``文件\n![img.png](https://blog.huangge1199.cn/post/sublimeText4Purchase/img.png)\n\n## 替换\n\n根据版本不同替换不同：\n\n- X64版本\n\n  `4157415656575553B828210000` 替换为 `33C0FEC0C3575553B828210000`\n\n- X86版本\n  `55535756B8AC200000` 替换为 `33C0FEC0C3AC200000`\n\n按住`Ctrl+F`，我这边是64位电脑，在搜索中输入`4157415656575553B828210000` ，在替换为输入`33C0FEC0C3AC200000`，如果替换为无法输入，记得将替换为上一行的启用替换勾选上，然后先查找一下，接下来再点击替换\n\n![image-20220114154528250](https://blog.huangge1199.cn/post/sublimeText4Purchase/image-20220114154528250.png)\n\n## 替换后点击另存为，替换掉原来的文件，保存\n\n![image-20220114154843108](https://blog.huangge1199.cn/post/sublimeText4Purchase/image-20220114154843108.png)\n\n## 输入激活码激活\n\n- 打开应用\n\n- 依次点击Help->Enter License\n\n  ![image-20220114155104130](https://blog.huangge1199.cn/post/sublimeText4Purchase/image-20220114155104130.png)\n\n- 在弹出的窗口输入激活码\n\n  激活码如下：\n\n  ```tex\n  ----- BEGIN LICENSE -----\n  RUYO.net\n  Unlimited User License\n  EA7E-81044230\n  0C0CD4A8 CAA317D9 CCABD1AC 434C984C\n  7E4A0B13 77893C3E DD0A5BA1 B2EB721C\n  4BAAB4C4 9B96437D 14EB743E 7DB55D9C\n  7CA26EE2 67C3B4EC 29B2C65A 88D90C59\n  CB6CCBA5 7DE6177B C02C2826 8C9A21B0\n  6AB1A5B6 20B09EA2 01C979BD 29670B19\n  92DC6D90 6E365849 4AB84739 5B4C3EA1\n  048CC1D0 9748ED54 CAC9D585 90CAD815\n  ------ END LICENSE ------\n  ```\n\n  ![image-20220114155245648](https://blog.huangge1199.cn/post/sublimeText4Purchase/image-20220114155245648.png)\n\n- 点击下方的Use License\n\n  ![image-20220114155341371](https://blog.huangge1199.cn/post/sublimeText4Purchase/image-20220114155341371.png)\n\n- 确认\n\n  依次点击Help->About Sublime Text\n\n  ![image-20220114155558214](https://blog.huangge1199.cn/post/sublimeText4Purchase/image-20220114155558214.png)","slug":"sublimeText4Purchase","published":1,"updated":"2022-01-17T01:30:02.009Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl0t0rrm2005p4ctu8zym23ys","content":"<h1 id=\"下载地址\"><a href=\"#下载地址\" class=\"headerlink\" title=\"下载地址\"></a>下载地址</h1><p><a href=\"https://www.sublimetext.com/download\">https://www.sublimetext.com/download</a></p>\n<h1 id=\"激活方法\"><a href=\"#激活方法\" class=\"headerlink\" title=\"激活方法\"></a>激活方法</h1><h2 id=\"打开在线十六进制编辑器\"><a href=\"#打开在线十六进制编辑器\" class=\"headerlink\" title=\"打开在线十六进制编辑器\"></a>打开在线十六进制编辑器</h2><p>地址：<a href=\"https://hexed.it/\">hexed</a></p>\n<p><img src=\"https://blog.huangge1199.cn/post/sublimeText4Purchase/image-20220114153619254.png\" alt=\"image-20220114153619254\"></p>\n<h2 id=\"打开sublime-text-exe文件\"><a href=\"#打开sublime-text-exe文件\" class=\"headerlink\" title=\"打开sublime_text.exe文件\"></a>打开<code>sublime_text.exe</code>文件</h2><p><img src=\"https://blog.huangge1199.cn/post/sublimeText4Purchase/img.png\" alt=\"img.png\"></p>\n<h2 id=\"替换\"><a href=\"#替换\" class=\"headerlink\" title=\"替换\"></a>替换</h2><p>根据版本不同替换不同：</p>\n<ul>\n<li><p>X64版本</p>\n<p><code>4157415656575553B828210000</code> 替换为 <code>33C0FEC0C3575553B828210000</code></p>\n</li>\n<li><p>X86版本<br><code>55535756B8AC200000</code> 替换为 <code>33C0FEC0C3AC200000</code></p>\n</li>\n</ul>\n<p>按住<code>Ctrl+F</code>，我这边是64位电脑，在搜索中输入<code>4157415656575553B828210000</code> ，在替换为输入<code>33C0FEC0C3AC200000</code>，如果替换为无法输入，记得将替换为上一行的启用替换勾选上，然后先查找一下，接下来再点击替换</p>\n<p><img src=\"https://blog.huangge1199.cn/post/sublimeText4Purchase/image-20220114154528250.png\" alt=\"image-20220114154528250\"></p>\n<h2 id=\"替换后点击另存为，替换掉原来的文件，保存\"><a href=\"#替换后点击另存为，替换掉原来的文件，保存\" class=\"headerlink\" title=\"替换后点击另存为，替换掉原来的文件，保存\"></a>替换后点击另存为，替换掉原来的文件，保存</h2><p><img src=\"https://blog.huangge1199.cn/post/sublimeText4Purchase/image-20220114154843108.png\" alt=\"image-20220114154843108\"></p>\n<h2 id=\"输入激活码激活\"><a href=\"#输入激活码激活\" class=\"headerlink\" title=\"输入激活码激活\"></a>输入激活码激活</h2><ul>\n<li><p>打开应用</p>\n</li>\n<li><p>依次点击Help-&gt;Enter License</p>\n<p><img src=\"https://blog.huangge1199.cn/post/sublimeText4Purchase/image-20220114155104130.png\" alt=\"image-20220114155104130\"></p>\n</li>\n<li><p>在弹出的窗口输入激活码</p>\n<p>激活码如下：</p>\n<pre class=\"line-numbers language-tex\" data-language=\"tex\"><code class=\"language-tex\">----- BEGIN LICENSE -----\nRUYO.net\nUnlimited User License\nEA7E-81044230\n0C0CD4A8 CAA317D9 CCABD1AC 434C984C\n7E4A0B13 77893C3E DD0A5BA1 B2EB721C\n4BAAB4C4 9B96437D 14EB743E 7DB55D9C\n7CA26EE2 67C3B4EC 29B2C65A 88D90C59\nCB6CCBA5 7DE6177B C02C2826 8C9A21B0\n6AB1A5B6 20B09EA2 01C979BD 29670B19\n92DC6D90 6E365849 4AB84739 5B4C3EA1\n048CC1D0 9748ED54 CAC9D585 90CAD815\n------ END LICENSE ------</code></pre>\n\n<p><img src=\"https://blog.huangge1199.cn/post/sublimeText4Purchase/image-20220114155245648.png\" alt=\"image-20220114155245648\"></p>\n</li>\n<li><p>点击下方的Use License</p>\n<p><img src=\"https://blog.huangge1199.cn/post/sublimeText4Purchase/image-20220114155341371.png\" alt=\"image-20220114155341371\"></p>\n</li>\n<li><p>确认</p>\n<p>依次点击Help-&gt;About Sublime Text</p>\n<p><img src=\"https://blog.huangge1199.cn/post/sublimeText4Purchase/image-20220114155558214.png\" alt=\"image-20220114155558214\"></p>\n</li>\n</ul>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.gitee.io/zh-CN/","avatar":"https://element-plus.gitee.io/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"}}},"excerpt":"","more":"<h1 id=\"下载地址\"><a href=\"#下载地址\" class=\"headerlink\" title=\"下载地址\"></a>下载地址</h1><p><a href=\"https://www.sublimetext.com/download\">https://www.sublimetext.com/download</a></p>\n<h1 id=\"激活方法\"><a href=\"#激活方法\" class=\"headerlink\" title=\"激活方法\"></a>激活方法</h1><h2 id=\"打开在线十六进制编辑器\"><a href=\"#打开在线十六进制编辑器\" class=\"headerlink\" title=\"打开在线十六进制编辑器\"></a>打开在线十六进制编辑器</h2><p>地址：<a href=\"https://hexed.it/\">hexed</a></p>\n<p><img src=\"https://blog.huangge1199.cn/post/sublimeText4Purchase/image-20220114153619254.png\" alt=\"image-20220114153619254\"></p>\n<h2 id=\"打开sublime-text-exe文件\"><a href=\"#打开sublime-text-exe文件\" class=\"headerlink\" title=\"打开sublime_text.exe文件\"></a>打开<code>sublime_text.exe</code>文件</h2><p><img src=\"https://blog.huangge1199.cn/post/sublimeText4Purchase/img.png\" alt=\"img.png\"></p>\n<h2 id=\"替换\"><a href=\"#替换\" class=\"headerlink\" title=\"替换\"></a>替换</h2><p>根据版本不同替换不同：</p>\n<ul>\n<li><p>X64版本</p>\n<p><code>4157415656575553B828210000</code> 替换为 <code>33C0FEC0C3575553B828210000</code></p>\n</li>\n<li><p>X86版本<br><code>55535756B8AC200000</code> 替换为 <code>33C0FEC0C3AC200000</code></p>\n</li>\n</ul>\n<p>按住<code>Ctrl+F</code>，我这边是64位电脑，在搜索中输入<code>4157415656575553B828210000</code> ，在替换为输入<code>33C0FEC0C3AC200000</code>，如果替换为无法输入，记得将替换为上一行的启用替换勾选上，然后先查找一下，接下来再点击替换</p>\n<p><img src=\"https://blog.huangge1199.cn/post/sublimeText4Purchase/image-20220114154528250.png\" alt=\"image-20220114154528250\"></p>\n<h2 id=\"替换后点击另存为，替换掉原来的文件，保存\"><a href=\"#替换后点击另存为，替换掉原来的文件，保存\" class=\"headerlink\" title=\"替换后点击另存为，替换掉原来的文件，保存\"></a>替换后点击另存为，替换掉原来的文件，保存</h2><p><img src=\"https://blog.huangge1199.cn/post/sublimeText4Purchase/image-20220114154843108.png\" alt=\"image-20220114154843108\"></p>\n<h2 id=\"输入激活码激活\"><a href=\"#输入激活码激活\" class=\"headerlink\" title=\"输入激活码激活\"></a>输入激活码激活</h2><ul>\n<li><p>打开应用</p>\n</li>\n<li><p>依次点击Help-&gt;Enter License</p>\n<p><img src=\"https://blog.huangge1199.cn/post/sublimeText4Purchase/image-20220114155104130.png\" alt=\"image-20220114155104130\"></p>\n</li>\n<li><p>在弹出的窗口输入激活码</p>\n<p>激活码如下：</p>\n<pre class=\"line-numbers language-tex\" data-language=\"tex\"><code class=\"language-tex\">----- BEGIN LICENSE -----\nRUYO.net\nUnlimited User License\nEA7E-81044230\n0C0CD4A8 CAA317D9 CCABD1AC 434C984C\n7E4A0B13 77893C3E DD0A5BA1 B2EB721C\n4BAAB4C4 9B96437D 14EB743E 7DB55D9C\n7CA26EE2 67C3B4EC 29B2C65A 88D90C59\nCB6CCBA5 7DE6177B C02C2826 8C9A21B0\n6AB1A5B6 20B09EA2 01C979BD 29670B19\n92DC6D90 6E365849 4AB84739 5B4C3EA1\n048CC1D0 9748ED54 CAC9D585 90CAD815\n------ END LICENSE ------</code></pre>\n\n<p><img src=\"https://blog.huangge1199.cn/post/sublimeText4Purchase/image-20220114155245648.png\" alt=\"image-20220114155245648\"></p>\n</li>\n<li><p>点击下方的Use License</p>\n<p><img src=\"https://blog.huangge1199.cn/post/sublimeText4Purchase/image-20220114155341371.png\" alt=\"image-20220114155341371\"></p>\n</li>\n<li><p>确认</p>\n<p>依次点击Help-&gt;About Sublime Text</p>\n<p><img src=\"https://blog.huangge1199.cn/post/sublimeText4Purchase/image-20220114155558214.png\" alt=\"image-20220114155558214\"></p>\n</li>\n</ul>\n"}],"PostAsset":[{"_id":"source/_posts/day20220119/bg.jpeg","slug":"bg.jpeg","post":"cl0t0rrkt00014ctu8xqk6yj5","modified":0,"renderable":0},{"_id":"source/_posts/day20220121/bg.jpeg","slug":"bg.jpeg","post":"cl0t0rrl000094ctub0m4gk0h","modified":0,"renderable":0},{"_id":"source/_posts/day20220118/bg.jpeg","slug":"bg.jpeg","post":"cl0t0rrkw00034ctu8wih7f7x","modified":0,"renderable":0},{"_id":"source/_posts/day20220120/bg.jpeg","slug":"bg.jpeg","post":"cl0t0rrkz00074ctu8b0dde73","modified":0,"renderable":0},{"_id":"source/_posts/day20220213/1536_ex1_upd.jpeg","slug":"1536_ex1_upd.jpeg","post":"cl0t0rrl8000y4ctu5zh07jk2","modified":0,"renderable":0},{"_id":"source/_posts/day20220213/1536_ex2_upd.jpeg","slug":"1536_ex2_upd.jpeg","post":"cl0t0rrl8000y4ctu5zh07jk2","modified":0,"renderable":0},{"_id":"source/_posts/day20220310/bg.jpeg","slug":"bg.jpeg","post":"cl0t0rrlc00184ctu4if94o8p","modified":0,"renderable":0},{"_id":"source/_posts/jpaCompositePK/bg.jpg","slug":"bg.jpg","post":"cl0t0rrlg001m4ctudedt7v5d","modified":0,"renderable":0},{"_id":"source/_posts/nexusCreate/1A658347.png","slug":"1A658347.png","post":"cl0t0rrlk00234ctu9qnm8zrq","modified":0,"renderable":0},{"_id":"source/_posts/nexusCreate/bg.jpeg","slug":"bg.jpeg","post":"cl0t0rrlk00234ctu9qnm8zrq","modified":0,"renderable":0},{"_id":"source/_posts/nexusCreate/image-20220112202513617.png","slug":"image-20220112202513617.png","post":"cl0t0rrlk00234ctu9qnm8zrq","modified":0,"renderable":0},{"_id":"source/_posts/nexusCreate/image-20220112203927784.png","slug":"image-20220112203927784.png","post":"cl0t0rrlk00234ctu9qnm8zrq","modified":0,"renderable":0},{"_id":"source/_posts/nexusCreate/image-20220112204407509.png","slug":"image-20220112204407509.png","post":"cl0t0rrlk00234ctu9qnm8zrq","modified":0,"renderable":0},{"_id":"source/_posts/nexusCreate/image-20220112204921432.png","slug":"image-20220112204921432.png","post":"cl0t0rrlk00234ctu9qnm8zrq","modified":0,"renderable":0},{"_id":"source/_posts/nexusCreate/image-20220112205557025.png","slug":"image-20220112205557025.png","post":"cl0t0rrlk00234ctu9qnm8zrq","modified":0,"renderable":0},{"_id":"source/_posts/nexusCreate/image-20220112211546086.png","slug":"image-20220112211546086.png","post":"cl0t0rrlk00234ctu9qnm8zrq","modified":0,"renderable":0},{"_id":"source/_posts/nexusCreate/image-20220112211948810.png","slug":"image-20220112211948810.png","post":"cl0t0rrlk00234ctu9qnm8zrq","modified":0,"renderable":0},{"_id":"source/_posts/nexusCreate/image-20220112212243615.png","slug":"image-20220112212243615.png","post":"cl0t0rrlk00234ctu9qnm8zrq","modified":0,"renderable":0},{"_id":"source/_posts/nexusCreate/image-20220112212410144.png","slug":"image-20220112212410144.png","post":"cl0t0rrlk00234ctu9qnm8zrq","modified":0,"renderable":0},{"_id":"source/_posts/nexusCreate/image-20220112214220341.png","slug":"image-20220112214220341.png","post":"cl0t0rrlk00234ctu9qnm8zrq","modified":0,"renderable":0},{"_id":"source/_posts/nexusCreate/image-20220112214506743.png","slug":"image-20220112214506743.png","post":"cl0t0rrlk00234ctu9qnm8zrq","modified":0,"renderable":0},{"_id":"source/_posts/nexusCreate/image-20220112214637528.png","slug":"image-20220112214637528.png","post":"cl0t0rrlk00234ctu9qnm8zrq","modified":0,"renderable":0},{"_id":"source/_posts/nexusCreate/image-20220112214717867.png","slug":"image-20220112214717867.png","post":"cl0t0rrlk00234ctu9qnm8zrq","modified":0,"renderable":0},{"_id":"source/_posts/nexusCreate/image-20220112214820826.png","slug":"image-20220112214820826.png","post":"cl0t0rrlk00234ctu9qnm8zrq","modified":0,"renderable":0},{"_id":"source/_posts/nexusCreate/image-20220112214831857.png","slug":"image-20220112214831857.png","post":"cl0t0rrlk00234ctu9qnm8zrq","modified":0,"renderable":0},{"_id":"source/_posts/nexusCreate/image-20220112215708898.png","slug":"image-20220112215708898.png","post":"cl0t0rrlk00234ctu9qnm8zrq","modified":0,"renderable":0},{"_id":"source/_posts/nexusCreate/image-20220112215809631.png","slug":"image-20220112215809631.png","post":"cl0t0rrlk00234ctu9qnm8zrq","modified":0,"renderable":0},{"_id":"source/_posts/nexusCreate/image-20220112215951755.png","slug":"image-20220112215951755.png","post":"cl0t0rrlk00234ctu9qnm8zrq","modified":0,"renderable":0},{"_id":"source/_posts/nexusCreate/image-20220112220131151.png","slug":"image-20220112220131151.png","post":"cl0t0rrlk00234ctu9qnm8zrq","modified":0,"renderable":0},{"_id":"source/_posts/nexusCreate/image-20220112220511830.png","slug":"image-20220112220511830.png","post":"cl0t0rrlk00234ctu9qnm8zrq","modified":0,"renderable":0},{"_id":"source/_posts/nexusCreate/image-20220112220741095.png","slug":"image-20220112220741095.png","post":"cl0t0rrlk00234ctu9qnm8zrq","modified":0,"renderable":0},{"_id":"source/_posts/nexusCreate/image-20220112221401367.png","slug":"image-20220112221401367.png","post":"cl0t0rrlk00234ctu9qnm8zrq","modified":0,"renderable":0},{"_id":"source/_posts/nexusCreate/image-20220112221517343.png","slug":"image-20220112221517343.png","post":"cl0t0rrlk00234ctu9qnm8zrq","modified":0,"renderable":0},{"_id":"source/_posts/nexusCreate/image-20220112221637473.png","slug":"image-20220112221637473.png","post":"cl0t0rrlk00234ctu9qnm8zrq","modified":0,"renderable":0},{"_id":"source/_posts/nexusCreate/image-20220112221849871.png","slug":"image-20220112221849871.png","post":"cl0t0rrlk00234ctu9qnm8zrq","modified":0,"renderable":0},{"_id":"source/_posts/nexusCreate/image-20220112223312451.png","slug":"image-20220112223312451.png","post":"cl0t0rrlk00234ctu9qnm8zrq","modified":0,"renderable":0},{"_id":"source/_posts/nexusCreate/image-20220112224909515.png","slug":"image-20220112224909515.png","post":"cl0t0rrlk00234ctu9qnm8zrq","modified":0,"renderable":0},{"_id":"source/_posts/nexusCreate/image-20220112230213213.png","slug":"image-20220112230213213.png","post":"cl0t0rrlk00234ctu9qnm8zrq","modified":0,"renderable":0},{"_id":"source/_posts/nexusCreate/image-20220112230645860.png","slug":"image-20220112230645860.png","post":"cl0t0rrlk00234ctu9qnm8zrq","modified":0,"renderable":0},{"_id":"source/_posts/pyControl/bg.jpeg","slug":"bg.jpeg","post":"cl0t0rrlk00254ctuda4k3y9l","modified":0,"renderable":0},{"_id":"source/_posts/pyListSort/bg.jpeg","slug":"bg.jpeg","post":"cl0t0rrll00284ctudg151pj9","modified":0,"renderable":0},{"_id":"source/_posts/question20220310-1/bg.jpeg","slug":"bg.jpeg","post":"cl0t0rrm2005m4ctuc0p1cn55","modified":0,"renderable":0},{"_id":"source/_posts/sublimeText4Purchase/bg.jpeg","slug":"bg.jpeg","post":"cl0t0rrm2005p4ctu8zym23ys","modified":0,"renderable":0},{"_id":"source/_posts/sublimeText4Purchase/image-20220114153619254.png","slug":"image-20220114153619254.png","post":"cl0t0rrm2005p4ctu8zym23ys","modified":0,"renderable":0},{"_id":"source/_posts/sublimeText4Purchase/image-20220114154528250.png","slug":"image-20220114154528250.png","post":"cl0t0rrm2005p4ctu8zym23ys","modified":0,"renderable":0},{"_id":"source/_posts/sublimeText4Purchase/image-20220114154843108.png","slug":"image-20220114154843108.png","post":"cl0t0rrm2005p4ctu8zym23ys","modified":0,"renderable":0},{"_id":"source/_posts/sublimeText4Purchase/image-20220114155104130.png","slug":"image-20220114155104130.png","post":"cl0t0rrm2005p4ctu8zym23ys","modified":0,"renderable":0},{"_id":"source/_posts/sublimeText4Purchase/image-20220114155245648.png","slug":"image-20220114155245648.png","post":"cl0t0rrm2005p4ctu8zym23ys","modified":0,"renderable":0},{"_id":"source/_posts/sublimeText4Purchase/image-20220114155341371.png","slug":"image-20220114155341371.png","post":"cl0t0rrm2005p4ctu8zym23ys","modified":0,"renderable":0},{"_id":"source/_posts/sublimeText4Purchase/image-20220114155558214.png","slug":"image-20220114155558214.png","post":"cl0t0rrm2005p4ctu8zym23ys","modified":0,"renderable":0},{"_id":"source/_posts/sublimeText4Purchase/img.png","slug":"img.png","post":"cl0t0rrm2005p4ctu8zym23ys","modified":0,"renderable":0}],"PostCategory":[{"post_id":"cl0t0rrl8000v4ctu0e844823","category_id":"cl0t0rrkx00044ctuflszhp7f","_id":"cl0t0rrln002h4ctu0qhldz3j"},{"post_id":"cl0t0rrl8000v4ctu0e844823","category_id":"cl0t0rrl7000s4ctu8iv3dix6","_id":"cl0t0rrln002j4ctu4kai6y4a"},{"post_id":"cl0t0rrl8000v4ctu0e844823","category_id":"cl0t0rrll00264ctu4a8fbffk","_id":"cl0t0rrln002m4ctuf3n222z4"},{"post_id":"cl0t0rrl000094ctub0m4gk0h","category_id":"cl0t0rrkx00044ctuflszhp7f","_id":"cl0t0rrlo002o4ctufx1z2jlm"},{"post_id":"cl0t0rrl000094ctub0m4gk0h","category_id":"cl0t0rrl7000s4ctu8iv3dix6","_id":"cl0t0rrlo002q4ctufzjud79h"},{"post_id":"cl0t0rrl000094ctub0m4gk0h","category_id":"cl0t0rrll00264ctu4a8fbffk","_id":"cl0t0rrlo002s4ctu0reafito"},{"post_id":"cl0t0rrl8000y4ctu5zh07jk2","category_id":"cl0t0rrkx00044ctuflszhp7f","_id":"cl0t0rrlo002v4ctu14x77ve3"},{"post_id":"cl0t0rrl8000y4ctu5zh07jk2","category_id":"cl0t0rrl7000s4ctu8iv3dix6","_id":"cl0t0rrlo002x4ctufmk3h1j8"},{"post_id":"cl0t0rrl8000y4ctu5zh07jk2","category_id":"cl0t0rrll00264ctu4a8fbffk","_id":"cl0t0rrlp00304ctug17j5jck"},{"post_id":"cl0t0rrl900114ctuhrwzdzhv","category_id":"cl0t0rrkx00044ctuflszhp7f","_id":"cl0t0rrlp00314ctuam6zhpy7"},{"post_id":"cl0t0rrl900114ctuhrwzdzhv","category_id":"cl0t0rrl7000s4ctu8iv3dix6","_id":"cl0t0rrlq00344ctu1c014p06"},{"post_id":"cl0t0rrl900114ctuhrwzdzhv","category_id":"cl0t0rrll00264ctu4a8fbffk","_id":"cl0t0rrlq00364ctugjl2g3e8"},{"post_id":"cl0t0rrkt00014ctu8xqk6yj5","category_id":"cl0t0rrkx00044ctuflszhp7f","_id":"cl0t0rrlq003a4ctu2g09dh5u"},{"post_id":"cl0t0rrkt00014ctu8xqk6yj5","category_id":"cl0t0rrl7000s4ctu8iv3dix6","_id":"cl0t0rrlq003b4ctuhngyc83c"},{"post_id":"cl0t0rrkt00014ctu8xqk6yj5","category_id":"cl0t0rrll00264ctu4a8fbffk","_id":"cl0t0rrlr003e4ctu10ba2u8c"},{"post_id":"cl0t0rrla00134ctu74x38ajy","category_id":"cl0t0rrkx00044ctuflszhp7f","_id":"cl0t0rrlr003g4ctu2m4nbl3b"},{"post_id":"cl0t0rrla00134ctu74x38ajy","category_id":"cl0t0rrl7000s4ctu8iv3dix6","_id":"cl0t0rrlr003k4ctu53tv3svg"},{"post_id":"cl0t0rrla00134ctu74x38ajy","category_id":"cl0t0rrll00264ctu4a8fbffk","_id":"cl0t0rrls003l4ctueruy84ig"},{"post_id":"cl0t0rrlc00164ctu1k38cmpw","category_id":"cl0t0rrkx00044ctuflszhp7f","_id":"cl0t0rrls003o4ctue8fa1yol"},{"post_id":"cl0t0rrlc00164ctu1k38cmpw","category_id":"cl0t0rrl7000s4ctu8iv3dix6","_id":"cl0t0rrls003q4ctua0fhgmsh"},{"post_id":"cl0t0rrlc00164ctu1k38cmpw","category_id":"cl0t0rrll00264ctu4a8fbffk","_id":"cl0t0rrls003t4ctuh5tv5ci8"},{"post_id":"cl0t0rrl1000b4ctubwtj0huw","category_id":"cl0t0rrkx00044ctuflszhp7f","_id":"cl0t0rrlt003v4ctu4i259t1e"},{"post_id":"cl0t0rrl1000b4ctubwtj0huw","category_id":"cl0t0rrl7000s4ctu8iv3dix6","_id":"cl0t0rrlt003w4ctudu7zd4ca"},{"post_id":"cl0t0rrl1000b4ctubwtj0huw","category_id":"cl0t0rrll00264ctu4a8fbffk","_id":"cl0t0rrlu003z4ctucw5b52wl"},{"post_id":"cl0t0rrlc00184ctu4if94o8p","category_id":"cl0t0rrkx00044ctuflszhp7f","_id":"cl0t0rrlu00414ctu2cqmd5tq"},{"post_id":"cl0t0rrlc00184ctu4if94o8p","category_id":"cl0t0rrl7000s4ctu8iv3dix6","_id":"cl0t0rrlu00434ctu7nvv5v5n"},{"post_id":"cl0t0rrlc00184ctu4if94o8p","category_id":"cl0t0rrll00264ctu4a8fbffk","_id":"cl0t0rrlu00444ctu2zqca9ev"},{"post_id":"cl0t0rrld001b4ctu5tra3zvl","category_id":"cl0t0rrkx00044ctuflszhp7f","_id":"cl0t0rrlu00464ctug533973v"},{"post_id":"cl0t0rrld001b4ctu5tra3zvl","category_id":"cl0t0rrl7000s4ctu8iv3dix6","_id":"cl0t0rrlu00474ctu6ah138kl"},{"post_id":"cl0t0rrld001b4ctu5tra3zvl","category_id":"cl0t0rrll00264ctu4a8fbffk","_id":"cl0t0rrlv00494ctu4mmk24ry"},{"post_id":"cl0t0rrl3000g4ctuh5v8e83h","category_id":"cl0t0rrkx00044ctuflszhp7f","_id":"cl0t0rrlv004a4ctu17e7etko"},{"post_id":"cl0t0rrl3000g4ctuh5v8e83h","category_id":"cl0t0rrl7000s4ctu8iv3dix6","_id":"cl0t0rrlv004c4ctu67a1d33e"},{"post_id":"cl0t0rrl3000g4ctuh5v8e83h","category_id":"cl0t0rrll00264ctu4a8fbffk","_id":"cl0t0rrlv004d4ctu3p5y82x7"},{"post_id":"cl0t0rrle001d4ctuhpgm9hgz","category_id":"cl0t0rrls003n4ctu0z8a1mmo","_id":"cl0t0rrlv004f4ctu22qk10ec"},{"post_id":"cl0t0rrkw00034ctu8wih7f7x","category_id":"cl0t0rrkx00044ctuflszhp7f","_id":"cl0t0rrlv004g4ctu6lv6gh8s"},{"post_id":"cl0t0rrkw00034ctu8wih7f7x","category_id":"cl0t0rrl7000s4ctu8iv3dix6","_id":"cl0t0rrlv004i4ctugf1v10l8"},{"post_id":"cl0t0rrkw00034ctu8wih7f7x","category_id":"cl0t0rrll00264ctu4a8fbffk","_id":"cl0t0rrlw004j4ctubyh94wsr"},{"post_id":"cl0t0rrlf001j4ctu65u9a49c","category_id":"cl0t0rrlt003y4ctud3gr4bty","_id":"cl0t0rrlw004l4ctufvv0fgi0"},{"post_id":"cl0t0rrl4000j4ctu56tff868","category_id":"cl0t0rrkx00044ctuflszhp7f","_id":"cl0t0rrlw004m4ctu167t3wxq"},{"post_id":"cl0t0rrl4000j4ctu56tff868","category_id":"cl0t0rrl7000s4ctu8iv3dix6","_id":"cl0t0rrlw004o4ctu6awd9db0"},{"post_id":"cl0t0rrl4000j4ctu56tff868","category_id":"cl0t0rrll00264ctu4a8fbffk","_id":"cl0t0rrlw004p4ctugihydxpl"},{"post_id":"cl0t0rrlh001o4ctud30i6lfg","category_id":"cl0t0rrlt003y4ctud3gr4bty","_id":"cl0t0rrlw004r4ctubccce8j5"},{"post_id":"cl0t0rrlh001s4ctuc2crglxe","category_id":"cl0t0rrlt003y4ctud3gr4bty","_id":"cl0t0rrlw004s4ctu0x94fgyy"},{"post_id":"cl0t0rrl6000o4ctu2czaf8h9","category_id":"cl0t0rrkx00044ctuflszhp7f","_id":"cl0t0rrlx004u4ctu0lbfel4h"},{"post_id":"cl0t0rrl6000o4ctu2czaf8h9","category_id":"cl0t0rrl7000s4ctu8iv3dix6","_id":"cl0t0rrlx004v4ctu6ko1076a"},{"post_id":"cl0t0rrl6000o4ctu2czaf8h9","category_id":"cl0t0rrll00264ctu4a8fbffk","_id":"cl0t0rrlx004w4ctug4nt9tfs"},{"post_id":"cl0t0rrli001t4ctu3jo4273i","category_id":"cl0t0rrlt003y4ctud3gr4bty","_id":"cl0t0rrlx004y4ctu5p882kfp"},{"post_id":"cl0t0rrlj001x4ctu39yneonr","category_id":"cl0t0rrlw004k4ctu9bthb44n","_id":"cl0t0rrlx004z4ctucqzq64xe"},{"post_id":"cl0t0rrkz00074ctu8b0dde73","category_id":"cl0t0rrkx00044ctuflszhp7f","_id":"cl0t0rrlx00514ctugu8a9fo7"},{"post_id":"cl0t0rrkz00074ctu8b0dde73","category_id":"cl0t0rrl7000s4ctu8iv3dix6","_id":"cl0t0rrlx00524ctufpy58n9d"},{"post_id":"cl0t0rrkz00074ctu8b0dde73","category_id":"cl0t0rrll00264ctu4a8fbffk","_id":"cl0t0rrly00544ctu9n1yhale"},{"post_id":"cl0t0rrlj001z4ctugy5egsut","category_id":"cl0t0rrlt003y4ctud3gr4bty","_id":"cl0t0rrly00554ctuf1n5fiql"},{"post_id":"cl0t0rrlk00234ctu9qnm8zrq","category_id":"cl0t0rrlw004t4ctubkce9tyr","_id":"cl0t0rrly00574ctu6g6ocsm1"},{"post_id":"cl0t0rrl7000r4ctuezradzzu","category_id":"cl0t0rrkx00044ctuflszhp7f","_id":"cl0t0rrly00584ctuh4yrgd1x"},{"post_id":"cl0t0rrl7000r4ctuezradzzu","category_id":"cl0t0rrl7000s4ctu8iv3dix6","_id":"cl0t0rrly005a4ctu6ks6agn3"},{"post_id":"cl0t0rrl7000r4ctuezradzzu","category_id":"cl0t0rrll00264ctu4a8fbffk","_id":"cl0t0rrly005b4ctu3m7i7mxz"},{"post_id":"cl0t0rrlk00254ctuda4k3y9l","category_id":"cl0t0rrlx00504ctu3zeaa7dq","_id":"cl0t0rrlz005d4ctu4b4s51z0"},{"post_id":"cl0t0rrll00284ctudg151pj9","category_id":"cl0t0rrlx00504ctu3zeaa7dq","_id":"cl0t0rrlz005e4ctugqdq6x17"},{"post_id":"cl0t0rrlm002a4ctudy43cs0i","category_id":"cl0t0rrlx00504ctu3zeaa7dq","_id":"cl0t0rrlz005f4ctucajv082l"},{"post_id":"cl0t0rrlm002e4ctuaexu3lk6","category_id":"cl0t0rrlx00504ctu3zeaa7dq","_id":"cl0t0rrlz005g4ctubjkl09gb"},{"post_id":"cl0t0rrlg001m4ctudedt7v5d","category_id":"cl0t0rrlu00424ctu9n8kbwmk","_id":"cl0t0rrlz005h4ctu4osraoub"},{"post_id":"cl0t0rrlg001m4ctudedt7v5d","category_id":"cl0t0rrlz005c4ctu103r1l8f","_id":"cl0t0rrlz005i4ctuev8hfoy6"},{"post_id":"cl0t0rrm1005j4ctu01vl10f1","category_id":"cl0t0rrlx00504ctu3zeaa7dq","_id":"cl0t0rrm3005r4ctudwlze29v"},{"post_id":"cl0t0rrm1005k4ctueuph5ih8","category_id":"cl0t0rrlu00424ctu9n8kbwmk","_id":"cl0t0rrm4005x4ctu2qow4f06"},{"post_id":"cl0t0rrm1005k4ctueuph5ih8","category_id":"cl0t0rrm3005q4ctuc8s87mq1","_id":"cl0t0rrm400604ctuadpuf6zz"},{"post_id":"cl0t0rrm2005m4ctuc0p1cn55","category_id":"cl0t0rrm3005u4ctue6h3318v","_id":"cl0t0rrm400614ctuc1498u7q"},{"post_id":"cl0t0rrm2005p4ctu8zym23ys","category_id":"cl0t0rrm4005y4ctufemp9q4m","_id":"cl0t0rrm400624ctu24yihuih"}],"PostTag":[{"post_id":"cl0t0rrl000094ctub0m4gk0h","tag_id":"cl0t0rrky00054ctu918uhd65","_id":"cl0t0rrl3000e4ctu6zlg3jk2"},{"post_id":"cl0t0rrkt00014ctu8xqk6yj5","tag_id":"cl0t0rrky00054ctu918uhd65","_id":"cl0t0rrl4000h4ctu6qx04qed"},{"post_id":"cl0t0rrl1000b4ctubwtj0huw","tag_id":"cl0t0rrky00054ctu918uhd65","_id":"cl0t0rrl5000m4ctu69prew46"},{"post_id":"cl0t0rrl3000g4ctuh5v8e83h","tag_id":"cl0t0rrky00054ctu918uhd65","_id":"cl0t0rrl6000p4ctug8i4fiab"},{"post_id":"cl0t0rrkw00034ctu8wih7f7x","tag_id":"cl0t0rrky00054ctu918uhd65","_id":"cl0t0rrl7000t4ctu01xc8jip"},{"post_id":"cl0t0rrl4000j4ctu56tff868","tag_id":"cl0t0rrky00054ctu918uhd65","_id":"cl0t0rrl8000w4ctu4ts42otb"},{"post_id":"cl0t0rrl6000o4ctu2czaf8h9","tag_id":"cl0t0rrky00054ctu918uhd65","_id":"cl0t0rrl900104ctufki66nyg"},{"post_id":"cl0t0rrkz00074ctu8b0dde73","tag_id":"cl0t0rrky00054ctu918uhd65","_id":"cl0t0rrla00124ctu5tomfpzu"},{"post_id":"cl0t0rrl7000r4ctuezradzzu","tag_id":"cl0t0rrky00054ctu918uhd65","_id":"cl0t0rrlc00154ctu1zrv1g3p"},{"post_id":"cl0t0rrl8000v4ctu0e844823","tag_id":"cl0t0rrky00054ctu918uhd65","_id":"cl0t0rrlc00174ctu9juwbz7p"},{"post_id":"cl0t0rrl8000y4ctu5zh07jk2","tag_id":"cl0t0rrky00054ctu918uhd65","_id":"cl0t0rrld001a4ctu86gy5fjr"},{"post_id":"cl0t0rrl900114ctuhrwzdzhv","tag_id":"cl0t0rrky00054ctu918uhd65","_id":"cl0t0rrle001c4ctuhfksasr1"},{"post_id":"cl0t0rrla00134ctu74x38ajy","tag_id":"cl0t0rrky00054ctu918uhd65","_id":"cl0t0rrle001f4ctu84c76pl5"},{"post_id":"cl0t0rrlc00164ctu1k38cmpw","tag_id":"cl0t0rrky00054ctu918uhd65","_id":"cl0t0rrlf001i4ctugj1ohk0q"},{"post_id":"cl0t0rrlc00184ctu4if94o8p","tag_id":"cl0t0rrky00054ctu918uhd65","_id":"cl0t0rrlg001l4ctu7sac8hyg"},{"post_id":"cl0t0rrld001b4ctu5tra3zvl","tag_id":"cl0t0rrky00054ctu918uhd65","_id":"cl0t0rrlh001n4ctu3tzm2pnz"},{"post_id":"cl0t0rrle001d4ctuhpgm9hgz","tag_id":"cl0t0rrlf001h4ctu342l5njn","_id":"cl0t0rrlh001r4ctu08s3cs64"},{"post_id":"cl0t0rrlh001s4ctuc2crglxe","tag_id":"cl0t0rrlh001p4ctu3nws6naw","_id":"cl0t0rrlj001w4ctub35fh35f"},{"post_id":"cl0t0rrlf001j4ctu65u9a49c","tag_id":"cl0t0rrlh001p4ctu3nws6naw","_id":"cl0t0rrlj001y4ctuejyc17gs"},{"post_id":"cl0t0rrli001t4ctu3jo4273i","tag_id":"cl0t0rrlh001p4ctu3nws6naw","_id":"cl0t0rrlk00224ctubc13cs0q"},{"post_id":"cl0t0rrlj001z4ctugy5egsut","tag_id":"cl0t0rrlh001p4ctu3nws6naw","_id":"cl0t0rrlk00244ctuf96d0xwe"},{"post_id":"cl0t0rrlg001m4ctudedt7v5d","tag_id":"cl0t0rrli001u4ctu9ktqhnid","_id":"cl0t0rrlm00294ctu69cce06l"},{"post_id":"cl0t0rrlg001m4ctudedt7v5d","tag_id":"cl0t0rrlk00214ctu8etz0v7x","_id":"cl0t0rrlm002b4ctu5q3xa3cc"},{"post_id":"cl0t0rrlh001o4ctud30i6lfg","tag_id":"cl0t0rrlh001p4ctu3nws6naw","_id":"cl0t0rrln002f4ctue4nqd7f3"},{"post_id":"cl0t0rrlj001x4ctu39yneonr","tag_id":"cl0t0rrlm002d4ctucow4djds","_id":"cl0t0rrln002k4ctu2w8gc5ws"},{"post_id":"cl0t0rrlk00234ctu9qnm8zrq","tag_id":"cl0t0rrln002i4ctu6krj0cf9","_id":"cl0t0rrlo002t4ctu0ahcc5ti"},{"post_id":"cl0t0rrlk00234ctu9qnm8zrq","tag_id":"cl0t0rrlo002n4ctu9lwqb0vy","_id":"cl0t0rrlo002w4ctu525i6bfc"},{"post_id":"cl0t0rrlk00254ctuda4k3y9l","tag_id":"cl0t0rrlo002r4ctu6vpx2fev","_id":"cl0t0rrlq00354ctu9ybhejpy"},{"post_id":"cl0t0rrlk00254ctuda4k3y9l","tag_id":"cl0t0rrlp002y4ctu5bxmfpab","_id":"cl0t0rrlq00374ctubko6gxq5"},{"post_id":"cl0t0rrll00284ctudg151pj9","tag_id":"cl0t0rrlo002r4ctu6vpx2fev","_id":"cl0t0rrlr003f4ctubo18daor"},{"post_id":"cl0t0rrll00284ctudg151pj9","tag_id":"cl0t0rrlp002y4ctu5bxmfpab","_id":"cl0t0rrlr003h4ctuc4z1fdk9"},{"post_id":"cl0t0rrlm002a4ctudy43cs0i","tag_id":"cl0t0rrlo002r4ctu6vpx2fev","_id":"cl0t0rrls003p4ctu0ike1cby"},{"post_id":"cl0t0rrlm002a4ctudy43cs0i","tag_id":"cl0t0rrlp002y4ctu5bxmfpab","_id":"cl0t0rrls003r4ctu0u4ma0jy"},{"post_id":"cl0t0rrlm002e4ctuaexu3lk6","tag_id":"cl0t0rrlo002r4ctu6vpx2fev","_id":"cl0t0rrlt003x4ctubgiffogg"},{"post_id":"cl0t0rrlm002e4ctuaexu3lk6","tag_id":"cl0t0rrlp002y4ctu5bxmfpab","_id":"cl0t0rrlu00404ctu2p6b5810"},{"post_id":"cl0t0rrm1005j4ctu01vl10f1","tag_id":"cl0t0rrlo002r4ctu6vpx2fev","_id":"cl0t0rrm2005l4ctu1aosaoz8"},{"post_id":"cl0t0rrm1005j4ctu01vl10f1","tag_id":"cl0t0rrlp002y4ctu5bxmfpab","_id":"cl0t0rrm2005o4ctud3sffcgn"},{"post_id":"cl0t0rrm2005m4ctuc0p1cn55","tag_id":"cl0t0rrln002i4ctu6krj0cf9","_id":"cl0t0rrm3005s4ctu3hf39bqd"},{"post_id":"cl0t0rrm1005k4ctueuph5ih8","tag_id":"cl0t0rrli001u4ctu9ktqhnid","_id":"cl0t0rrm3005v4ctud73jacg2"},{"post_id":"cl0t0rrm1005k4ctueuph5ih8","tag_id":"cl0t0rrm2005n4ctu4l7b56ds","_id":"cl0t0rrm4005w4ctugq8s2wj0"},{"post_id":"cl0t0rrm2005p4ctu8zym23ys","tag_id":"cl0t0rrm3005t4ctubz441s7b","_id":"cl0t0rrm4005z4ctub2cbey5u"}],"Tag":[{"name":"力扣","_id":"cl0t0rrky00054ctu918uhd65"},{"name":"git","_id":"cl0t0rrlf001h4ctu342l5njn"},{"name":"推理界的今天","_id":"cl0t0rrlh001p4ctu3nws6naw"},{"name":"java","_id":"cl0t0rrli001u4ctu9ktqhnid"},{"name":"jpa","_id":"cl0t0rrlk00214ctu8etz0v7x"},{"name":"搜索引擎","_id":"cl0t0rrlm002d4ctucow4djds"},{"name":"maven","_id":"cl0t0rrln002i4ctu6krj0cf9"},{"name":"nexus","_id":"cl0t0rrlo002n4ctu9lwqb0vy"},{"name":"学习笔记","_id":"cl0t0rrlo002r4ctu6vpx2fev"},{"name":"python","_id":"cl0t0rrlp002y4ctu5bxmfpab"},{"name":"seata","_id":"cl0t0rrm2005n4ctu4l7b56ds"},{"name":"破解","_id":"cl0t0rrm3005t4ctubz441s7b"}]}}