{"meta":{"version":1,"warehouse":"4.0.1"},"models":{"Asset":[{"_id":"node_modules/hexo-theme-butterfly/source/css/index.styl","path":"css/index.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/css/var.styl","path":"css/var.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/img/404.jpg","path":"img/404.jpg","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/img/favicon.png","path":"img/favicon.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/img/friend_404.gif","path":"img/friend_404.gif","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/js/tw_cn.js","path":"js/tw_cn.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/js/search/algolia.js","path":"js/search/algolia.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/js/search/local-search.js","path":"js/search/local-search.js","modified":0,"renderable":1},{"_id":"source/images/WeaselLong.jpg","path":"images/WeaselLong.jpg","modified":0,"renderable":0},{"_id":"source/images/alipay.png","path":"images/alipay.png","modified":0,"renderable":0},{"_id":"source/images/android-chrome-144x144.png","path":"images/android-chrome-144x144.png","modified":0,"renderable":0},{"_id":"source/images/android-chrome-192x192.png","path":"images/android-chrome-192x192.png","modified":0,"renderable":0},{"_id":"source/images/android-chrome-256x256.png","path":"images/android-chrome-256x256.png","modified":0,"renderable":0},{"_id":"source/images/android-chrome-36x36.png","path":"images/android-chrome-36x36.png","modified":0,"renderable":0},{"_id":"source/images/android-chrome-48x48.png","path":"images/android-chrome-48x48.png","modified":0,"renderable":0},{"_id":"source/images/android-chrome-72x72.png","path":"images/android-chrome-72x72.png","modified":0,"renderable":0},{"_id":"source/images/android-chrome-96x96.png","path":"images/android-chrome-96x96.png","modified":0,"renderable":0},{"_id":"source/images/apple-touch-icon.png","path":"images/apple-touch-icon.png","modified":0,"renderable":0},{"_id":"source/images/avatar.jpeg","path":"images/avatar.jpeg","modified":0,"renderable":0},{"_id":"source/images/bg.jpeg","path":"images/bg.jpeg","modified":0,"renderable":0},{"_id":"source/images/browserconfig.xml","path":"images/browserconfig.xml","modified":0,"renderable":0},{"_id":"source/images/butterfly.svg","path":"images/butterfly.svg","modified":0,"renderable":0},{"_id":"source/images/favicon-16x16.png","path":"images/favicon-16x16.png","modified":0,"renderable":0},{"_id":"source/images/favicon-32x32.png","path":"images/favicon-32x32.png","modified":0,"renderable":0},{"_id":"source/images/favicon.ico","path":"images/favicon.ico","modified":0,"renderable":0},{"_id":"source/images/gjh.png","path":"images/gjh.png","modified":0,"renderable":0},{"_id":"source/images/hero.svg","path":"images/hero.svg","modified":0,"renderable":0},{"_id":"source/images/icp.svg","path":"images/icp.svg","modified":0,"renderable":0},{"_id":"source/images/logo.png","path":"images/logo.png","modified":0,"renderable":0},{"_id":"source/images/micp.svg","path":"images/micp.svg","modified":0,"renderable":0},{"_id":"source/images/mstile-150x150.png","path":"images/mstile-150x150.png","modified":0,"renderable":0},{"_id":"source/images/safari-pinned-tab.svg","path":"images/safari-pinned-tab.svg","modified":0,"renderable":0},{"_id":"source/images/site.webmanifest","path":"images/site.webmanifest","modified":0,"renderable":0},{"_id":"source/images/wechat.png","path":"images/wechat.png","modified":0,"renderable":0},{"_id":"source/link/datagrip.png","path":"link/datagrip.png","modified":0,"renderable":0},{"_id":"source/link/AnotherRedisDesktopManager.png","path":"link/AnotherRedisDesktopManager.png","modified":0,"renderable":0},{"_id":"source/link/idea.png","path":"link/idea.png","modified":0,"renderable":0},{"_id":"source/link/jdgui.png","path":"link/jdgui.png","modified":0,"renderable":0},{"_id":"source/link/jdk.png","path":"link/jdk.png","modified":0,"renderable":0},{"_id":"source/link/jui.png","path":"link/jui.png","modified":0,"renderable":0},{"_id":"source/link/kafka.png","path":"link/kafka.png","modified":0,"renderable":0},{"_id":"source/link/nginx.png","path":"link/nginx.png","modified":0,"renderable":0},{"_id":"source/link/powerjob.ico","path":"link/powerjob.ico","modified":0,"renderable":0},{"_id":"source/link/pycharm.png","path":"link/pycharm.png","modified":0,"renderable":0},{"_id":"source/link/rabbitmq.png","path":"link/rabbitmq.png","modified":0,"renderable":0},{"_id":"source/link/xshell.png","path":"link/xshell.png","modified":0,"renderable":0},{"_id":"source/link/webstorm.png","path":"link/webstorm.png","modified":0,"renderable":0},{"_id":"source/link/yapi.png","path":"link/yapi.png","modified":0,"renderable":0},{"_id":"source/live2d-widget/LICENSE","path":"live2d-widget/LICENSE","modified":0,"renderable":0},{"_id":"source/live2d-widget/assets/screenshot-1.png","path":"live2d-widget/assets/screenshot-1.png","modified":0,"renderable":0},{"_id":"source/live2d-widget/assets/screenshot-2.png","path":"live2d-widget/assets/screenshot-2.png","modified":0,"renderable":0},{"_id":"source/live2d-widget/assets/screenshot-3.png","path":"live2d-widget/assets/screenshot-3.png","modified":0,"renderable":0}],"Cache":[{"_id":"source/Gallery/index.md","hash":"86b18c3af1d372c972b4364f362c8a49d498ee0f","modified":1654236055553},{"_id":"source/ _data/valine.json","hash":"52bb706269a96ff66ca790e328d675e4b009ffbe","modified":1654236055553},{"_id":"source/ _data/widget.yml","hash":"c91c391ebce194680e76243efbf40db66665ca95","modified":1654236055553},{"_id":"source/ _data/link.yml","hash":"2682f6e56f8b13a86b3174b356eac658cfe56542","modified":1654236055553},{"_id":"source/about/index.md","hash":"5b5589439b3ae2fce8d9326ba1f5a86f3da38f74","modified":1654236055613},{"_id":"source/bg/index.md","hash":"2c876170ea4b821da0023ad92e90e31b891f1f44","modified":1654236055613},{"_id":"source/categories/index.md","hash":"f9eaf896e6ec98ab4f5dfda8bcf6b444112f9394","modified":1654236055613},{"_id":"source/_posts/builder.md","hash":"b82ea51607a02bcb804bd95e4da35313d67097b3","modified":1654236055557},{"_id":"source/_posts/check-if-there-is-a-valid-parentheses-string-path.md","hash":"7b53722face893461882cec3e84386f91031b00e","modified":1654236055557},{"_id":"source/_posts/autowiredWaring.md","hash":"2ccec5275a11be09c812347487e12bb7ae09a934","modified":1654236055557},{"_id":"source/_posts/count-integers-in-intervals.md","hash":"9d9e83f585f313dd659db2fa6331d3a91b8e8112","modified":1654236055557},{"_id":"source/_posts/count-nodes-equal-to-average-of-subtree.md","hash":"85d87ae7acd9a22f11d1f1ebe9ec5dfb079a61d4","modified":1654236055557},{"_id":"source/_posts/darwin.md","hash":"bd74da64b3c6f2fda200fc7513c602b927733815","modified":1654236055557},{"_id":"source/_posts/count-number-of-texts.md","hash":"68234b3f31a95f75c72712534030517c734701a3","modified":1654236055557},{"_id":"source/_posts/createMyImage.md","hash":"6a118e772fcd087382243f8fddcea43d37f9bb0f","modified":1654529537011},{"_id":"source/_posts/day20220118.md","hash":"19c22001e63e352cf7b5409b8befeff561a6ccf8","modified":1654236055557},{"_id":"source/_posts/day20220119.md","hash":"e1e9e6ede9a1a685c7d6660fb074750d206425d5","modified":1654236055557},{"_id":"source/_posts/day20220121.md","hash":"df1d5e6c1699ad5b6fd9498f05294ba5922b703c","modified":1654236055561},{"_id":"source/_posts/day20220204.md","hash":"0875a0946e2ad165077d0b60db021d5e56c5d3b6","modified":1654236055561},{"_id":"source/_posts/day20220125.md","hash":"9e8408fe8e47bdfa0612b1f7102f047db515667e","modified":1654236055561},{"_id":"source/_posts/day20220211.md","hash":"d2707e17137060a64dc080f423a5e6866d32d58c","modified":1654236055561},{"_id":"source/_posts/day20220205.md","hash":"09d88adfb1d9da4a5ea0afd1048bde8762aecd3d","modified":1654236055561},{"_id":"source/_posts/day20220124.md","hash":"56b7919899a528e567911a1a19892f1b6230b959","modified":1654236055561},{"_id":"source/_posts/day20220213.md","hash":"faebfb29189ab18e976fa7c74040ff45d92a8f36","modified":1654236055561},{"_id":"source/_posts/day20220212.md","hash":"91f4353abd26178235904f5ef4ea5b651e90dea1","modified":1654236055561},{"_id":"source/_posts/day20220307.md","hash":"9715c38b9b43932f42f580d3aa2c42faefd28db6","modified":1654236055561},{"_id":"source/_posts/day20220214.md","hash":"7deeb18198707461ccc7aff9d904e5f9691b3899","modified":1654236055561},{"_id":"source/_posts/day20220309.md","hash":"de17ee01d9508cd21416bf15b7d8a6bc3e6bc246","modified":1654236055561},{"_id":"source/_posts/day20220310.md","hash":"5e6a120ac3f5b5c55691803e54442575efb42022","modified":1654236055561},{"_id":"source/_posts/day20220312.md","hash":"71f73590446f970fe813d0ba99f032c766ac867b","modified":1654236055561},{"_id":"source/_posts/day20220311.md","hash":"09bc2d665a87791a93a8a99f8a0bc7c92e7270e6","modified":1654236055561},{"_id":"source/_posts/day20220411.md","hash":"da2e49cf750b05c8e1f5348eb4faea0d42ca8391","modified":1654236055561},{"_id":"source/_posts/designPattern.md","hash":"1923ad397a22c4c68350d962dfc4979b67bb74cd","modified":1654236055561},{"_id":"source/_posts/dockerComposeInstall.md","hash":"f039f8db455f2f7da49472b6056447a01d345e24","modified":1654236055561},{"_id":"source/_posts/day20220523.md","hash":"82b6e071a177b9d241e95599c684174d6f92070b","modified":1654236055561},{"_id":"source/_posts/find-resultant-array-after-removing-anagrams.md","hash":"69a2e8bb0c23efac0672ed9cf60d6eda520b94a4","modified":1654236055561},{"_id":"source/_posts/gitPushMoreRepo.md","hash":"478d07da497d637362ac2ede6f98354bd03fdcbb","modified":1654236055561},{"_id":"source/_posts/hello-world.md","hash":"2cb6dca29179246c9f679fe6f7bb36d7af3f90ab","modified":1654236055561},{"_id":"source/_posts/dockerInstall.md","hash":"30ea6bb3f804722dec5df4405c6a1d2f9d13a693","modified":1654236055561},{"_id":"source/_posts/iMySQLByDC.md","hash":"bee3b007df913b821d30efd7ced1996ec648bae6","modified":1654236055561},{"_id":"source/_posts/iNginxByDC.md","hash":"1dd44bfc8287902f989db804bc15cdd18281fdf1","modified":1654236055565},{"_id":"source/_posts/inGitByOsDeepin.md","hash":"560d7e7830e79b2f373f402495761e0eb5252cfd","modified":1654529586188},{"_id":"source/_posts/inHexoByOsDeepin.md","hash":"492fa94f84e1ad0e3ef98f09846e009f9b01a7f5","modified":1654529537031},{"_id":"source/_posts/inJdkByOsDeepin.md","hash":"d02b9a7837eb611d47ed2986a0b1f65cbf6e12cb","modified":1654529536987},{"_id":"source/_posts/inK8sByKubeadm.md","hash":"23ccaadd56f1f4293661c24950f5c27133f32162","modified":1654529537007},{"_id":"source/_posts/inMavenByOsDeepin.md","hash":"c2765b251f5a5d373b8cc0351a7563056d45d5b2","modified":1654529537023},{"_id":"source/_posts/inNodejsByOsDeepin.md","hash":"2d7d38e5b6603ce58e0df3226c3e9532ac85155a","modified":1654529537027},{"_id":"source/_posts/inReacherByDC.md","hash":"8c3a9baeba8a9c42785863a799f1c13b43f49666","modified":1654236055569},{"_id":"source/_posts/inRKE.md","hash":"66146ed5e6a033fa3ff91629cfd698b9264c5c02","modified":1654236055569},{"_id":"source/_posts/day20220120.md","hash":"6d087af5b7a3cc7f35e70068c3db82c09bd59aee","modified":1654236055557},{"_id":"source/_posts/largest-3-same-digit-number-in-string.md","hash":"f46e8ac79518e23b6d6d673d74bb2a0ba36c2aef","modified":1654236055573},{"_id":"source/_posts/influxdbInstall.md","hash":"c8e0f4107fe44410088f44acada3b1a52f82b184","modified":1654236055569},{"_id":"source/_posts/inVueByOsDeepin.md","hash":"7bf6e588d462447b731f1fa72ccc62013b62f973","modified":1654529537019},{"_id":"source/_posts/largest-combination-with-bitwise-and-greater-than-zero.md","hash":"cf26b8078788aaf8837ec4d57287c4152b7d6e21","modified":1654236055573},{"_id":"source/_posts/maximum-consecutive-floors-without-special-floors.md","hash":"01a32851b4ac0455432691b1f439a30b89d29959","modified":1654236055573},{"_id":"source/_posts/leetcode204.md","hash":"5f7cb25994a5ed1d5109bf4692c7df040183acb2","modified":1654236055573},{"_id":"source/_posts/jpaCompositePK.md","hash":"d68ddfe833836e3872ea6a55153d387c69fa9dff","modified":1654236055573},{"_id":"source/_posts/mystery0310.md","hash":"21c544d9d09d0ae703f201ebffe5c633a6368ab8","modified":1654236055573},{"_id":"source/_posts/mystery0305.md","hash":"36b098c8c87aeb37cbba4e827bf941cc7fe2ecef","modified":1654236055573},{"_id":"source/_posts/mystery0304.md","hash":"936c9f0faf898e9ac8f14a84b3c68b8643d8416a","modified":1654236055573},{"_id":"source/_posts/mystery0307.md","hash":"983353ab0f793a705ec4a1840f53643098099eb0","modified":1654236055573},{"_id":"source/_posts/phpDeploy.md","hash":"f4e2be35cf6a6533f3cc5fde4d1349ef5aae2314","modified":1654236055601},{"_id":"source/_posts/nexusCreate.md","hash":"dc589d48b6afbfc98304a42efe482d35c628ac30","modified":1654236055573},{"_id":"source/_posts/putWebsiteToSearchEngine.md","hash":"146544d87a3ef5cdad017405e3f2c2e8b3155867","modified":1654236055605},{"_id":"source/_posts/prototype.md","hash":"4bbc9caffb176c21a3040f1f90be6ed6ee81476d","modified":1654236055605},{"_id":"source/_posts/mystery0311.md","hash":"2c996b53e6efe0cffc65f99f65eaac232ff3e9af","modified":1654236055573},{"_id":"source/_posts/pyControl.md","hash":"2f2244c9ecd3cc3d07fbcf900dd2064b395ecbf4","modified":1654236055605},{"_id":"source/_posts/pyListSlice.md","hash":"9f2754cb25457abf37e5a1241b29591449f9b03c","modified":1654236055605},{"_id":"source/_posts/pyListSort.md","hash":"5d85d1764f6af25516c0fab83832e2578940e937","modified":1654236055605},{"_id":"source/_posts/pyMulCom.md","hash":"efe97bd4e0dae5cf33ef9c87bca78f83749cd9d1","modified":1654236055605},{"_id":"source/_posts/pyUsefulFun.md","hash":"242d1a21e0bd614a6ad63f57d2a350443545efdd","modified":1654236055605},{"_id":"source/_posts/question20220310-1.md","hash":"1a4998bac11fa38835e7d03c58209e81a04b541c","modified":1654236055605},{"_id":"source/_posts/repeatedSubstringPattern.md","hash":"b51f323456e2896a6c67e4daa03b6ebaa4389a37","modified":1654236055605},{"_id":"source/_posts/sublimeText4Purchase.md","hash":"154e749c54ecdcf3aa1ce75db04b12e26a674c83","modified":1654236055605},{"_id":"source/_posts/singleton.md","hash":"82087025362717fc47cedef4307ba03bd36564bc","modified":1654236055605},{"_id":"source/_posts/weekly-contest-292.md","hash":"8366ed83b0ac34b60f1ce0a9639b905125f6f9dc","modified":1654236055613},{"_id":"source/_posts/seata141demo.md","hash":"4ecf3e37e62dfe42d1444371a8d19487998797fd","modified":1654236055605},{"_id":"source/_posts/weekly-contest-293.md","hash":"63d401d9298c04ad4833927bcb0b178707870e65","modified":1654236055613},{"_id":"source/images/android-chrome-144x144.png","hash":"62564a3643cfa6fb273c8a024157012628168491","modified":1654236055613},{"_id":"source/images/android-chrome-192x192.png","hash":"b3674eb9fb05d38a3ff7b7adefdd92a79a9df00b","modified":1654236055613},{"_id":"source/images/android-chrome-36x36.png","hash":"0c38c2be1c7520f338a539cf71007e82597cb7c3","modified":1654236055613},{"_id":"source/images/android-chrome-48x48.png","hash":"cac966f3e18b09b2bdfba2ec1711e9a4e2956c8f","modified":1654236055613},{"_id":"source/images/android-chrome-72x72.png","hash":"fec1b740aeac629386583acd03c86e427465db97","modified":1654236055613},{"_id":"source/images/android-chrome-256x256.png","hash":"0626670a4de7915a99c5bcacbf212624bd4912c3","modified":1654236055613},{"_id":"source/images/android-chrome-96x96.png","hash":"44217f9196beda75680510396d62e3f46570de05","modified":1654236055613},{"_id":"source/images/WeaselLong.jpg","hash":"fab9fb7f21bf0317822e797f180cdca70465c2d4","modified":1654236055613},{"_id":"source/images/apple-touch-icon.png","hash":"2db1d9700cc4d39c9faa2e79a6a3e640a45509b0","modified":1654236055613},{"_id":"source/images/browserconfig.xml","hash":"98e5d423ebe8a3123a04e68d538c99d553258bd0","modified":1654236055613},{"_id":"source/images/favicon-16x16.png","hash":"ca564106af55069071884527b6185db58bf96dd3","modified":1654236055613},{"_id":"source/images/butterfly.svg","hash":"1fb7b2e5a48fb663429a32ce4bbcbb2a5ef7c0fe","modified":1654236055613},{"_id":"source/images/favicon-32x32.png","hash":"47b3855b48e2778c6dbf89f1101803f5991f4b43","modified":1654236055613},{"_id":"source/images/favicon.ico","hash":"4884f2459ca00339c373face66f1420ccbbc1379","modified":1654236055613},{"_id":"source/images/hero.svg","hash":"ad099d62bd58260d278a63882e6e162b6fdad910","modified":1654236055621},{"_id":"source/images/icp.svg","hash":"fa31510b45b3821fce80b8e148baff0bc39fe378","modified":1654236055621},{"_id":"source/images/logo.png","hash":"fbe28f905637f2bca7fe7e9ed99da71e4a79d3ae","modified":1654236055621},{"_id":"source/images/micp.svg","hash":"f1a8784f427e81150d634a0b30c248d93f7bfe4e","modified":1654236055621},{"_id":"source/images/safari-pinned-tab.svg","hash":"eae9b0a9ce7c5ce9b7c067132db956f90f199fa6","modified":1654236055621},{"_id":"source/images/mstile-150x150.png","hash":"addaf10e4bdb9216fc1cf980733d8a9712f9eab8","modified":1654236055621},{"_id":"source/images/site.webmanifest","hash":"146356a690b43afee9207b256ddd45c6a07a3eaf","modified":1654236055621},{"_id":"source/link/AnotherRedisDesktopManager.png","hash":"f5d4a37281a521e453578a5efb26fdb759118e07","modified":1654236055621},{"_id":"source/link/datagrip.png","hash":"aa317c6d8e0a85b6bca31517ecbbd50db6746e6a","modified":1654236055621},{"_id":"source/link/index.md","hash":"7fd1d21e05f2f11eb0f7a55e455214f24c872522","modified":1654236055621},{"_id":"source/link/idea.png","hash":"6c89f00d2862f89837a1b432429b027914774743","modified":1654236055621},{"_id":"source/link/jui.png","hash":"38e01ae04f2aa135f7794f53227b15883942e5c7","modified":1654236055621},{"_id":"source/link/jdgui.png","hash":"fc2837240b55a63fa7a4d9163559be7d64bc702a","modified":1654236055621},{"_id":"source/link/kafka.png","hash":"74ae6f9aa0843be5cd83e87141ca298dc65dd158","modified":1654236055621},{"_id":"source/link/jdk.png","hash":"1157487ecfd838bd52c0185aa41d491c4d8e2ded","modified":1654236055621},{"_id":"source/link/pycharm.png","hash":"5ac649e6bf8cde216db8c36b4d4eba7f999f666c","modified":1654236055621},{"_id":"source/link/rabbitmq.png","hash":"590e3739240026e0ba88bf70ffe21474e9cf7f20","modified":1654236055621},{"_id":"source/link/nginx.png","hash":"ade7f203ca7daebb5c102ca94d72fb95ca3fa015","modified":1654236055621},{"_id":"source/link/xshell.png","hash":"2921bd09d9e10264cdf23565ce88a1321dffbcda","modified":1654236055621},{"_id":"source/link/yapi.png","hash":"ffb2431afae088e6d03d550791da2389f5720b92","modified":1654236055621},{"_id":"source/link/webstorm.png","hash":"cb07d5812778c779914a0480f1693a95d9c19ae9","modified":1654236055621},{"_id":"source/live2d-widget/autoload.js","hash":"c4367c9e25dbb7a6c51d9b77dfc1b51e5606cc40","modified":1654236055625},{"_id":"source/live2d-widget/README.md","hash":"200713c49e5e3b612fe39e9910adfcca1e0e4152","modified":1654236055621},{"_id":"source/live2d-widget/waifu-tips.js","hash":"84d0ba117235bd629dc81466be854359d5edab04","modified":1654236055633},{"_id":"source/live2d-widget/LICENSE","hash":"31a3d460bb3c7d98845187c716a30db81c44b615","modified":1654236055621},{"_id":"source/live2d-widget/waifu_left.css","hash":"a85e7b609aaf2492c1227055a045a041ebc08276","modified":1654236055633},{"_id":"source/music/index.md","hash":"b7ebddd20d3def7d54dedb637c58ed2da4200e6e","modified":1654236055633},{"_id":"source/live2d-widget/waifu-tips.json","hash":"d6ecd841506099c1e41b3f1eaba5cae687179f8e","modified":1654236055633},{"_id":"source/steamgames/index.md","hash":"829382578c0bfcd0f490729f096834b0e0998734","modified":1654236055633},{"_id":"source/live2d-widget/waifu_right.css","hash":"78d5a9d7c9f0290a8e539bf6c702135090a90467","modified":1654236055633},{"_id":"source/tags/index.md","hash":"c831b94b6b6abc32e23615b96d885e289c505dcc","modified":1654236055633},{"_id":"source/wallpaper/index.md","hash":"fc81436a37e3773e189cdb304b6715f709938196","modified":1654236055633},{"_id":"source/_posts/createMyImage/2022-05-31-16-21-41-image.png","hash":"4ae41d952b69cd06bb94075e348b232b352c26ef","modified":1654236055557},{"_id":"source/_posts/createMyImage/2022-05-31-16-28-07-image.png","hash":"5251230a62f05321124b80634d79bc7bceacaabb","modified":1654236055557},{"_id":"source/_posts/createMyImage/2022-05-31-16-29-22-image.png","hash":"d470647e355cfe9ca384945572ab6530e628f137","modified":1654236055557},{"_id":"source/_posts/createMyImage/2022-05-31-17-08-23-image.png","hash":"be1f8ae1a0a1db0d6d4a294fac7e1cc787450dc1","modified":1654236055557},{"_id":"source/_posts/autowiredWaring/2022-03-28-11-30-49-1648438205(1).png","hash":"0c217381d7098337edf9754f311bd209f1884cf5","modified":1654236055557},{"_id":"source/_posts/createMyImage/2022-05-31-16-32-54-image.png","hash":"d570f121fefc2932e7a06890904d3c4377b51b0d","modified":1654236055557},{"_id":"source/_posts/createMyImage/2022-05-31-17-12-17-image.png","hash":"8e304520c099f92eaf08deb1ac0c73d7522b3c6b","modified":1654236055557},{"_id":"source/_posts/createMyImage/2022-05-31-17-11-22-image.png","hash":"864c3da1ce3160dfd190be3d1134a78ebaec203c","modified":1654236055557},{"_id":"source/_posts/createMyImage/2022-05-31-17-22-07-image.png","hash":"1cf5824e8d5cf0ac2ffb8e7f75d66e7c64d80f7e","modified":1654236055557},{"_id":"source/_posts/createMyImage/2022-05-31-17-30-38-image.png","hash":"ed3b2fcb53772766681e360f74d1dfc61d48cd7b","modified":1654236055557},{"_id":"source/_posts/createMyImage/2022-06-01-08-37-12-image.png","hash":"e34ff1534a0d2660d7ec76bb9afd3617c898c069","modified":1654236055557},{"_id":"source/_posts/createMyImage/2022-06-01-08-42-46-image.png","hash":"7908d63e2b60cdadf776d5e1793b0f06f8b92651","modified":1654236055557},{"_id":"source/_posts/createMyImage/2022-06-01-08-39-28-image.png","hash":"3457a3a5060aaaffcbbd27a6f2269abd64c703e0","modified":1654236055557},{"_id":"source/_posts/day20220213/1536_ex1_upd.jpeg","hash":"de9d9cf87a5014da884edef0f4a3a567a16d4cbd","modified":1654236055561},{"_id":"source/_posts/day20220213/1536_ex2_upd.jpeg","hash":"b819f149e17daafe0cc271a5d6cb355b5d234416","modified":1654236055561},{"_id":"source/_posts/day20220310/bg.jpeg","hash":"24bb7768d31db65487b9cd5ba01e3d31eda6617f","modified":1654236055561},{"_id":"source/_posts/dockerComposeInstall/2022-04-21-00-44-14-image.png","hash":"ba1fd6c9737bfac243dc38e32ee2f3d2c2e142d1","modified":1654236055561},{"_id":"source/_posts/dockerComposeInstall/2022-04-21-00-40-56-image.png","hash":"0d47afecc00cbb600888a11e124645b460770d75","modified":1654236055561},{"_id":"source/_posts/dockerInstall/2022-04-20-23-50-06-image.png","hash":"f40c4d19cd1f7036cbc144b3b177d2bc648be327","modified":1654236055561},{"_id":"source/_posts/dockerInstall/2022-04-20-23-44-07-image.png","hash":"b3e99f51d525ec902524f75af38df44447a7bd18","modified":1654236055561},{"_id":"source/_posts/dockerInstall/2022-04-21-00-22-21-image.png","hash":"314a5a66250e0678029ca9f55a66bbc71dd49431","modified":1654236055561},{"_id":"source/_posts/dockerInstall/2022-04-21-00-05-16-image.png","hash":"56ed90def0ade353fef50236d0fd407f45d65c21","modified":1654236055561},{"_id":"source/_posts/dockerInstall/2022-04-21-00-00-59-image.png","hash":"24d575e05211c2f466faa89267cc57d4ebcf8ed4","modified":1654236055561},{"_id":"source/_posts/dockerInstall/2022-04-21-00-22-43-image.png","hash":"37d95518c4839850b8d1d2bb6dc02043081cc288","modified":1654236055561},{"_id":"source/_posts/iMySQLByDC/2022-04-24-16-30-32-image.png","hash":"f798b153bb7e364626dc8912566de22e743b9e7e","modified":1654236055561},{"_id":"source/_posts/iMySQLByDC/2022-04-24-16-20-33-image.png","hash":"f890b45fe46040dda344b08749da1be566d29ab3","modified":1654236055561},{"_id":"source/_posts/iMySQLByDC/img.png","hash":"a154e003401e3ac917e32d1731824c6c4ab326bd","modified":1654236055565},{"_id":"source/_posts/iMySQLByDC/2022-04-24-16-34-24-image.png","hash":"874ad4dbd651a6859fb7b94684f94f5f1b514949","modified":1654236055561},{"_id":"source/_posts/iNginxByDC/2022-04-21-01-03-03-image.png","hash":"565af23266ba46ee19135b091c55ea5638cb0bdf","modified":1654236055565},{"_id":"source/_posts/iNginxByDC/2022-04-21-00-47-51-image.png","hash":"a81f7fa160f1a2e82ceaa114c5b26170013715b4","modified":1654236055565},{"_id":"source/_posts/iNginxByDC/2022-04-21-20-12-55-image.png","hash":"e42497217ad3fc292988dd95907731fe23b31aaa","modified":1654236055565},{"_id":"source/_posts/iNginxByDC/2022-04-21-19-59-02-image.png","hash":"e15ded843f6567e23641d791fdd52b623e5f3bed","modified":1654236055565},{"_id":"source/_posts/iNginxByDC/2022-04-24-15-34-45-image.png","hash":"5440401e663dd9cb5166fbe0d8688cc4ea0b8ed9","modified":1654236055565},{"_id":"source/_posts/iRedisByDC/2022-04-24-17-04-13-image.png","hash":"eb9dcf263aeec8efe82433dcfa08cb17a1929664","modified":1654236055565},{"_id":"source/_posts/iRedisByDC/2022-04-24-17-10-52-image.png","hash":"0d0e7785f877e326a85e078360fafae5a7b99471","modified":1654236055565},{"_id":"source/_posts/iNginxByDC/2022-04-21-20-43-55-image.png","hash":"4b5363fba98028ab0549615a5be0d5a762896666","modified":1654236055565},{"_id":"source/_posts/iRedisByDC/2022-04-24-16-57-51-image.png","hash":"774965d764291398c0a9d5c94aae5fa82dfb76f2","modified":1654236055565},{"_id":"source/_posts/inGitByOsDeepin/image-20220603103959058.png","hash":"17444b7368166b703a6f56b4ab7936803737e35e","modified":1654223999072},{"_id":"source/_posts/inGitByOsDeepin/image-20220603104225094.png","hash":"7a1672ef94bb682a5ce985f5afcb3713c987bc24","modified":1654224145088},{"_id":"source/_posts/inGitByOsDeepin/image-20220603104335664.png","hash":"6abb43bf927d0f8c2b24464594b5d4763dda3bae","modified":1654224215661},{"_id":"source/_posts/inHexoByOsDeepin/image-20220603141423311.png","hash":"9313f2359a88faab58652338f08d650f19919571","modified":1654236863311},{"_id":"source/_posts/inGitByOsDeepin/image-20220603104447770.png","hash":"696ad12aca317a524c6a7f5547499e76dfec0090","modified":1654224287771},{"_id":"source/_posts/inHexoByOsDeepin/image-20220603141527169.png","hash":"a913b625788822260e46c270c77acd5c41e0e816","modified":1654236927173},{"_id":"source/_posts/inJdkByOsDeepin/image-20220603021925685.png","hash":"712a9cf5a1fc6cd0a76781f320388e9cf081cc0c","modified":1654193965683},{"_id":"source/_posts/inJdkByOsDeepin/image-20220603020439325.png","hash":"790b43ea9372085ab2c553827f3df9e3e053ff5a","modified":1654193394410},{"_id":"source/_posts/inJdkByOsDeepin/image-20220603022022217.png","hash":"09abce0843001799cf50e7e27f86871a64cf040f","modified":1654194022215},{"_id":"source/_posts/inHexoByOsDeepin/image-20220603141613298.png","hash":"8545edca992dde1f01e964315ecc95b06f992db4","modified":1654236973302},{"_id":"source/_posts/inMavenByOsDeepin/image-20220603121153205.png","hash":"ca51154c33ba40c78077cf674f9b79f7b276f0a0","modified":1654229513200},{"_id":"source/_posts/inMavenByOsDeepin/image-20220603121051155.png","hash":"4a128ccb94f4e110701dfab7d6007a7ebaa37ab5","modified":1654229451154},{"_id":"source/_posts/inMavenByOsDeepin/image-20220603121458972.png","hash":"f4ef4eeee85ae0e72b5c3fd2543a9efd24adbc3a","modified":1654229698974},{"_id":"source/_posts/inMavenByOsDeepin/image-20220603122200505.png","hash":"4273fea22013bac46f0ed9ea7c1b60510830903c","modified":1654230120508},{"_id":"source/_posts/inMavenByOsDeepin/image-20220603122859128.png","hash":"1a0c7050801b36f6f63ee1da19b41f04570b7ec1","modified":1654230539146},{"_id":"source/_posts/inNodejsByOsDeepin/image-20220603113034176.png","hash":"f6fc00a8c92fdfd68610cefc2dfb50b6e682ae10","modified":1654227034172},{"_id":"source/_posts/inNodejsByOsDeepin/image-20220603112153367.png","hash":"d01452cfa394a860ca34b8873c00cbd71bf167c6","modified":1654226513370},{"_id":"source/_posts/inNodejsByOsDeepin/image-20220603112904096.png","hash":"08f3926bb92bcc5578fb69324c4896973d6f423d","modified":1654226944098},{"_id":"source/_posts/inNodejsByOsDeepin/image-20220603113454241.png","hash":"be715aea9d83ee0a3478f759c7b7ac7cc8031b0a","modified":1654227294269},{"_id":"source/_posts/inRKE/2022-05-04-17-23-24-image.png","hash":"6d504a297ee975da828d2510cc8890dce079f257","modified":1654236055569},{"_id":"source/_posts/inRKE/2022-05-04-17-33-11-image.png","hash":"faeabb0c336f114f6c98eb4123fc366613e71825","modified":1654236055569},{"_id":"source/_posts/inRKE/2022-05-04-17-38-29-image.png","hash":"e4a2902c21e75741d875241d065b8cfca3bb7c1e","modified":1654236055569},{"_id":"source/_posts/inRKE/2022-05-04-17-40-07-image.png","hash":"028e09f9e4334af553203e01717c686dff71d903","modified":1654236055569},{"_id":"source/_posts/inRKE/2022-05-04-17-27-23-image.png","hash":"f80cec0f0beeb880b48d16d4a376246fe3242c0b","modified":1654236055569},{"_id":"source/_posts/inRKE/2022-05-04-19-41-19-image.png","hash":"da40b70305fa081879110c78b2e573d173c20992","modified":1654236055569},{"_id":"source/_posts/inRKE/2022-05-04-20-50-13-image.png","hash":"958a664b5deff895b845744b6e834d4baaebdfce","modified":1654236055569},{"_id":"source/_posts/inRKE/2022-05-04-19-48-18-image.png","hash":"85d4fb2055ad0d2f98b764a29c5a744eeca9521c","modified":1654236055569},{"_id":"source/_posts/inVueByOsDeepin/image-20220603114219499.png","hash":"640ddf8c50c322fd1421d26e153f26fef7b7c1ea","modified":1654227739498},{"_id":"source/_posts/influxdbInstall/2022-03-12-18-41-44-image.png","hash":"be41061f6ecf06d4d95850cdd3062e831f566a89","modified":1654236055569},{"_id":"source/_posts/inVueByOsDeepin/image-20220603114616673.png","hash":"24ec44631948a9c73628890531c57e97a9fce692","modified":1654227976669},{"_id":"source/_posts/influxdbInstall/2022-03-12-18-42-25-image.png","hash":"408a578434ebe6970cebd6e69070f82b44c1193e","modified":1654236055569},{"_id":"source/_posts/inVueByOsDeepin/image-20220603114513508.png","hash":"01e1bdd13f1a8e8e123a78936d7ccd2fe4344503","modified":1654227913511},{"_id":"source/_posts/influxdbInstall/2022-03-12-18-52-39-image.png","hash":"5718dac0bc8948fa4ae9e25778ca98c7f0d5ffbb","modified":1654236055569},{"_id":"source/_posts/influxdbInstall/2022-03-12-18-28-41-image.png","hash":"3fa1dbce09fd207d6aa4cd9f86fd8aa9fb99c4ff","modified":1654236055569},{"_id":"source/_posts/influxdbInstall/2022-03-12-18-54-58-image.png","hash":"c0e0e6cc812a7b63e0d01a39c798c52127d22fb5","modified":1654236055573},{"_id":"source/_posts/nexusCreate/1A658347.png","hash":"928311dbf17bb72a8c1a4f9714e7791fc5ffe65c","modified":1654236055593},{"_id":"source/_posts/influxdbInstall/2022-03-12-18-56-23-image.png","hash":"7f86b02b8ec66065bd21f291d6a38613cca15c43","modified":1654236055573},{"_id":"source/_posts/nexusCreate/image-20220112202513617.png","hash":"03541f6127dcc4d03b8f2b7aa9a45b6e7ee69558","modified":1654236055593},{"_id":"source/_posts/nexusCreate/image-20220112203927784.png","hash":"c8ecb9d0600f00dae3f2e6230c81fc2775ea10ae","modified":1654236055593},{"_id":"source/_posts/nexusCreate/image-20220112204407509.png","hash":"ebf83c4522609999971402b982bdf86967ca6adf","modified":1654236055593},{"_id":"source/_posts/nexusCreate/image-20220112212243615.png","hash":"b484e6b4a9cfe1f063de17080457e70707f46fed","modified":1654236055593},{"_id":"source/_posts/nexusCreate/image-20220112204921432.png","hash":"7ba35c07910d9b2799e625ba2b7b11036652f3d6","modified":1654236055593},{"_id":"source/_posts/nexusCreate/image-20220112214220341.png","hash":"f5d92dc47282b668be4b4e4061f0c69cb254f900","modified":1654236055593},{"_id":"source/_posts/nexusCreate/image-20220112214506743.png","hash":"62ad6f02e00f67761867c51bbcb4b64a1ed0e2f1","modified":1654236055593},{"_id":"source/_posts/nexusCreate/image-20220112214637528.png","hash":"0f5ba6e53179e542c5717cb0c63d7251f60ea688","modified":1654236055593},{"_id":"source/_posts/nexusCreate/image-20220112214820826.png","hash":"966c02c84ac0cfcb9c4d4a35c377f266a92726c4","modified":1654236055593},{"_id":"source/_posts/nexusCreate/image-20220112214717867.png","hash":"dabc261030d2e8d3237fca662109b1ed395e1284","modified":1654236055593},{"_id":"source/_posts/nexusCreate/image-20220112214831857.png","hash":"e71ee4b6f71ebca05168782a2b26511fcc4a0738","modified":1654236055593},{"_id":"source/_posts/nexusCreate/image-20220112215951755.png","hash":"bf466e4f5a3724bf3a2c5e8d6d02b83c9cb1b432","modified":1654236055597},{"_id":"source/_posts/nexusCreate/image-20220112215708898.png","hash":"61138282d1e7e9a18dbddb6bfdaae6fb427f4700","modified":1654236055593},{"_id":"source/_posts/nexusCreate/image-20220112215809631.png","hash":"2e94631128761f962f3beea80fd1177ea90a3cd3","modified":1654236055593},{"_id":"source/_posts/nexusCreate/image-20220112205557025.png","hash":"da96eb5aaf2357e3d5a89dd77d762748b72d38c1","modified":1654236055593},{"_id":"source/_posts/nexusCreate/image-20220112221637473.png","hash":"155b77f021e8bc65e9980105c8486fa789e91bab","modified":1654236055597},{"_id":"source/_posts/phpDeploy/2022-04-30-16-52-00-image.png","hash":"78f00da2b952b0676b5b1d6c3250194fec1d44c8","modified":1654236055601},{"_id":"source/_posts/question20220310-1/bg.jpeg","hash":"a11c1466b533dd62d55697b3aa42e9c128103be7","modified":1654236055605},{"_id":"source/_posts/sublimeText4Purchase/image-20220114155558214.png","hash":"035ce7c26f51fadab6eb64ad45a6cd4a42e4a8af","modified":1654236055609},{"_id":"source/_posts/sublimeText4Purchase/image-20220114155341371.png","hash":"44757f86776c7e43375c9b8655b9c01fca5521f8","modified":1654236055609},{"_id":"source/js/search/local-search.js","hash":"5a4feab1f4fb5a2613aff49af7454593140eb303","modified":1654236055621},{"_id":"source/live2d-widget/assets/screenshot-1.png","hash":"4bd4d97a1fcaa5deb3cea1c0a102a895a15af32f","modified":1654236055621},{"_id":"source/live2d-widget/demo/demo.html","hash":"2617b8aa4c4728d38a8f062465304e5433056abc","modified":1654236055625},{"_id":"source/live2d-widget/demo/login.html","hash":"2a4dfd350157cf8d2317f6c5cbda296fb61e705a","modified":1654236055625},{"_id":"source/_posts/iRedisByDC.md","hash":"4ab41bdbe5bccbc42556fc8962cd1650e76bda79","modified":1654236055565},{"_id":"source/images/avatar.jpeg","hash":"96aafacca4dee9d5244a865f97d388b1e2e6da5a","modified":1654236055613},{"_id":"source/link/powerjob.ico","hash":"ebf4481f14c87634ca4b2ef2e5de303a46f60af3","modified":1654236055621},{"_id":"source/_posts/createMyImage/2022-06-01-08-38-34-image.png","hash":"86b3d69c847c49e7908563039854a83d61ab6b5b","modified":1654236055557},{"_id":"source/_posts/dockerInstall/2022-04-20-23-47-39-image.png","hash":"fb3321aa7660367f9cf41058b598ff510ed059c5","modified":1654236055561},{"_id":"source/_posts/iNginxByDC/2022-04-21-00-46-47-image.png","hash":"87837ae00e5fcccb0e374366793ccec8991b264e","modified":1654236055565},{"_id":"source/_posts/iRedisByDC/2022-04-24-17-12-56-image.png","hash":"55aac90a9870e185db2014f9f43c13f08cec54bb","modified":1654236055565},{"_id":"source/_posts/iRedisByDC/2022-04-24-17-14-15-image.png","hash":"79d3880cd3bfb22ef3d7d494798cdb2e29374201","modified":1654236055569},{"_id":"source/_posts/inJdkByOsDeepin/image-20220603015920009.png","hash":"864aa68fc1e26033cdf4de3ccbb3abd4ede6a19a","modified":1654192965831},{"_id":"source/_posts/inMavenByOsDeepin/image-20220603115702494.png","hash":"784560068a7f29dd02457d92e5677025a38253d3","modified":1654228622509},{"_id":"source/_posts/inMavenByOsDeepin/image-20220603120000596.png","hash":"1e749457cd64d21581e3aaa34b2ea55471ea7249","modified":1654228800608},{"_id":"source/_posts/inMavenByOsDeepin/image-20220603120156243.png","hash":"4b92f66bd42df8ab20347b338be879825946fae4","modified":1654228916251},{"_id":"source/_posts/inMavenByOsDeepin/image-20220603120347751.png","hash":"37686d8df1452bbfe4da9b8fc0125cd124f84d74","modified":1654229027761},{"_id":"source/_posts/inNodejsByOsDeepin/image-20220603110634896.png","hash":"2aeb954b5dde22f0c1d9cebaaaa91fd97f381e79","modified":1654225594918},{"_id":"source/_posts/inNodejsByOsDeepin/image-20220603111656347.png","hash":"48bc5f36ac962832c478d854841d1e2026143651","modified":1654226216352},{"_id":"source/_posts/inNodejsByOsDeepin/image-20220603112001543.png","hash":"7a4deca5ffd18d6981417ea266e5d76d92a6c3be","modified":1654226401552},{"_id":"source/_posts/inRKE/2022-05-04-17-46-31-image.png","hash":"3547f32f4ed6362d37df5f8d5a15f009d85f1e3c","modified":1654236055569},{"_id":"source/_posts/inRKE/2022-05-04-19-47-43-image.png","hash":"527230ce3ecd6cb907f078f2b6be21b9d8996323","modified":1654236055569},{"_id":"source/_posts/inRKE/2022-05-04-20-50-57-image.png","hash":"8b1a84bab9115a7d0cd045ef187e5d5dda6e7a37","modified":1654236055569},{"_id":"source/_posts/nexusCreate/image-20220112211546086.png","hash":"d0de4224b0a8d83811956f7f7143d6632e8ccd95","modified":1654236055593},{"_id":"source/_posts/nexusCreate/image-20220112211948810.png","hash":"e71015033a0d78d97af65ecbae655c6ba2c4e7bf","modified":1654236055593},{"_id":"source/_posts/nexusCreate/image-20220112212410144.png","hash":"af039630b66495f82f5735076964e7edee625f38","modified":1654236055593},{"_id":"source/_posts/nexusCreate/image-20220112220511830.png","hash":"23987ac51f17611935d69a4ad67e185d6800baf1","modified":1654236055597},{"_id":"source/_posts/nexusCreate/image-20220112220131151.png","hash":"c3ea21681a8c3c6b8678d1cfdddb8cfc016c023b","modified":1654236055597},{"_id":"source/_posts/nexusCreate/image-20220112220741095.png","hash":"a6eb80658e6691867633869feda9e49aa290865d","modified":1654236055597},{"_id":"source/_posts/nexusCreate/image-20220112221517343.png","hash":"09f13482ac33ce11d6d809c1be26b36da0059414","modified":1654236055597},{"_id":"source/_posts/nexusCreate/image-20220112221849871.png","hash":"31e9d8fe4f0d50b1157609adb7b73e192361e043","modified":1654236055597},{"_id":"source/_posts/nexusCreate/image-20220112223312451.png","hash":"682c3c7dad92d974d9cfdb0a87acb80bbbf43818","modified":1654236055597},{"_id":"source/_posts/nexusCreate/image-20220112221401367.png","hash":"ba0b1b60a0b7553166311310a158e7a11f35dac1","modified":1654236055597},{"_id":"source/_posts/nexusCreate/image-20220112230645860.png","hash":"5f46697b3c40e5aeefb0c473b326c84286070cff","modified":1654236055601},{"_id":"source/_posts/nexusCreate/image-20220112224909515.png","hash":"273802e42499373e429f2f66d60ce144b2f21249","modified":1654236055597},{"_id":"source/_posts/phpDeploy/2022-04-30-16-54-56-image.png","hash":"7256e69e5f893b0c0663bd993404d4b654777e41","modified":1654236055601},{"_id":"source/_posts/phpDeploy/2022-04-30-20-12-36-image.png","hash":"7c97b99497fe1ee57e269b8b8690b00de14664be","modified":1654236055601},{"_id":"source/_posts/phpDeploy/2022-04-30-20-14-03-image.png","hash":"101a65d97dc8c4fb09965349204a0019089cee11","modified":1654236055601},{"_id":"source/_posts/phpDeploy/2022-04-30-20-20-22-image.png","hash":"ea68545541589c830ac567b0218311373cd6a268","modified":1654236055601},{"_id":"source/_posts/phpDeploy/2022-04-30-20-32-37-image.png","hash":"b23f67afff54284ae43532a4b5ede11bce6db494","modified":1654236055601},{"_id":"source/_posts/phpDeploy/2022-04-30-20-42-16-image.png","hash":"29d208d6dc4f4db8409cab4897301787d29ee29c","modified":1654236055605},{"_id":"source/_posts/phpDeploy/2022-04-30-20-44-58-image.png","hash":"1e95e69771e42ebe97950ac7daf5c22c209319c6","modified":1654236055605},{"_id":"source/_posts/sublimeText4Purchase/image-20220114155104130.png","hash":"fa188c572dd0901c1dd7db14570321fd874249cc","modified":1654236055609},{"_id":"source/_posts/sublimeText4Purchase/image-20220114155245648.png","hash":"1b3aa8df2d43f623d8e789e50e2cceddf5cd44e0","modified":1654236055609},{"_id":"source/images/alipay.png","hash":"300c66513a784f35174b5db09fe96e49c501cec0","modified":1654236055613},{"_id":"source/images/wechat.png","hash":"1c7c579dca0c8612445acec0d2fc56a07fa73e74","modified":1654236055621},{"_id":"source/live2d-widget/live2d.min.js","hash":"94383fb61de815c3f806ae3f11026bbcfe384082","modified":1654236055633},{"_id":"source/_posts/day20220118/bg.jpeg","hash":"a88c53650ff208c971e622f2dac860784f898969","modified":1654236055557},{"_id":"source/_posts/day20220120/bg.jpeg","hash":"ef479b44558abc0915d7ea8f30de5d33eba6f565","modified":1654236055561},{"_id":"source/_posts/dockerComposeInstall/2022-04-21-00-36-46-image.png","hash":"2d57174da3c40ffa87f0cd7e30b7d41bc3ea8fa6","modified":1654236055561},{"_id":"source/_posts/iMySQLByDC/2022-04-24-16-45-29-image.png","hash":"107266fff785918a0aff977594db78a41a09aa6b","modified":1654236055565},{"_id":"source/_posts/inGitByOsDeepin/image-20220603103757605.png","hash":"1b52de802e6bf4c92aa4571aa98e30d8e37e785b","modified":1654223877635},{"_id":"source/_posts/inVueByOsDeepin/image-20220603114033774.png","hash":"eb2fd739292f3d735e3c68b8973df545b485de2c","modified":1654227633803},{"_id":"source/_posts/leetcode204/Sieve_of_Eratosthenes_animation.gif","hash":"8d6f004fe548807b5774a584caae2c7f2880a3e6","modified":1654236055573},{"_id":"source/_posts/sublimeText4Purchase/img.png","hash":"048beb0cb34a7ebb5d85fefd94c6d53f791cc5d5","modified":1654236055613},{"_id":"source/images/bg.jpeg","hash":"c2b5ac45b440a9bcf08951ff4b83eea2c502daea","modified":1654236055613},{"_id":"source/_posts/day20220119/bg.jpeg","hash":"d849225c11c973e549c1c6706025671495341889","modified":1654236055557},{"_id":"source/_posts/inRKE/2022-05-04-16-24-28-image.png","hash":"c083f73f3756e6ddda3d182ceb0169821f266542","modified":1654236055569},{"_id":"source/_posts/phpDeploy/2022-04-30-20-35-23-image.png","hash":"a68e66f63d78231b0419cf952d7aae45242c3b04","modified":1654236055601},{"_id":"source/_posts/sublimeText4Purchase/bg.jpeg","hash":"b5ea7fcebc03e8ab5e3008ec7d65c71536ba1b3c","modified":1654236055605},{"_id":"source/_posts/sublimeText4Purchase/image-20220114153619254.png","hash":"8b0511461b8b0717aec5536339ba0f3692d42024","modified":1654236055605},{"_id":"source/live2d-widget/assets/screenshot-3.png","hash":"f89c6fdf44008e7d3c7a1aafe65dc39b212edb6c","modified":1654236055625},{"_id":"source/_posts/day20220121/bg.jpeg","hash":"f4d28cd025fd48cb31a1541b1dc426abe2a208ac","modified":1654236055561},{"_id":"source/_posts/pyControl/bg.jpeg","hash":"c43f58191b438e23c0b4239cae3783fb7a19f508","modified":1654236055605},{"_id":"source/_posts/pyListSort/bg.jpeg","hash":"6d4e40b2505465124e359f0a07bf98b661844783","modified":1654236055605},{"_id":"source/_posts/nexusCreate/image-20220112230213213.png","hash":"ac490f98b757bb557ebfb3b0fc4be1df6e53464c","modified":1654236055601},{"_id":"source/live2d-widget/assets/screenshot-2.png","hash":"76b844653136184c573b3632e12296e008a7ff5c","modified":1654236055625},{"_id":"source/_posts/jpaCompositePK/bg.jpg","hash":"af3ff6b0eb635ed02714edb5af1c0f6fde48c3f5","modified":1654236055573},{"_id":"source/_posts/nexusCreate/bg.jpeg","hash":"8bbae5df02ef58fab4c03dabc58765994e6d5d4b","modified":1654236055593},{"_id":"node_modules/hexo-theme-butterfly/LICENSE","hash":"1128f8f91104ba9ef98d37eea6523a888dcfa5de","modified":1654529029477},{"_id":"node_modules/hexo-theme-butterfly/README.md","hash":"66b4889591d0f36696c4d363412c753b6fe25519","modified":1654529029801},{"_id":"node_modules/hexo-theme-butterfly/README_CN.md","hash":"08afd014fd27019909f341a2ad6162665958c6d6","modified":1654529029801},{"_id":"node_modules/hexo-theme-butterfly/package.json","hash":"bf1e7d13b179a17f1c851033eddf5944ea5993d4","modified":1654529029797},{"_id":"node_modules/hexo-theme-butterfly/_config.yml","hash":"390288cffa0aa1338c02e7f240bafa6eef1d4f4c","modified":1654529029953},{"_id":"node_modules/hexo-theme-butterfly/.github/stale.yml","hash":"5e8ea535424e8112439135d21afc5262c0bc0b39","modified":1654529029957},{"_id":"node_modules/hexo-theme-butterfly/layout/archive.pug","hash":"bd62286afb64a51c97e800c5945620d51605d5fa","modified":1654529029833},{"_id":"node_modules/hexo-theme-butterfly/layout/category.pug","hash":"710708cfdb436bc875602abf096c919ccdf544db","modified":1654529029853},{"_id":"node_modules/hexo-theme-butterfly/layout/index.pug","hash":"e1c3146834c16e6077406180858add0a8183875a","modified":1654529029877},{"_id":"node_modules/hexo-theme-butterfly/layout/page.pug","hash":"baf469784aef227e4cc840550888554588e87a13","modified":1654529029889},{"_id":"node_modules/hexo-theme-butterfly/layout/post.pug","hash":"fc9f45252d78fcd15e4a82bfd144401cba5b169a","modified":1654529029897},{"_id":"node_modules/hexo-theme-butterfly/layout/tag.pug","hash":"0440f42569df2676273c026a92384fa7729bc4e9","modified":1654529029901},{"_id":"node_modules/hexo-theme-butterfly/languages/default.yml","hash":"1e37a3695d50e3e61d7c36e58a6dac872a4a56cd","modified":1654529029953},{"_id":"node_modules/hexo-theme-butterfly/languages/en.yml","hash":"d1bb560698eb8b0079495b7b18b44facb610f9fd","modified":1654529029957},{"_id":"node_modules/hexo-theme-butterfly/languages/zh-CN.yml","hash":"28b6f0c39155651d747eb595e0a283bc97be2e09","modified":1654529029957},{"_id":"node_modules/hexo-theme-butterfly/languages/zh-TW.yml","hash":"947f794e862bb2813e36887f777bdb760f70a322","modified":1654529029957},{"_id":"node_modules/hexo-theme-butterfly/.github/ISSUE_TEMPLATE/bug_report.yml","hash":"67e4f5a66d4b8cabadbaad0410628364ee75e0ae","modified":1654529029953},{"_id":"node_modules/hexo-theme-butterfly/.github/ISSUE_TEMPLATE/config.yml","hash":"7dfe7189ffeaebb6db13842237f8e124649bea3d","modified":1654529029953},{"_id":"node_modules/hexo-theme-butterfly/.github/ISSUE_TEMPLATE/feature_request.yml","hash":"996640605ed1e8e35182f0fd9a60a88783b24b03","modified":1654529029957},{"_id":"node_modules/hexo-theme-butterfly/.github/workflows/publish.yml","hash":"05857c2f265246d8de00e31037f2720709540c09","modified":1654529029957},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/404.pug","hash":"cb49f737aca272ccfeb62880bd651eccee72a129","modified":1654529029809},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/additional-js.pug","hash":"594a977ebe8d97e60fa3d7cb40fc260ded4d8a58","modified":1654529029817},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/footer.pug","hash":"02390a5b6ae1f57497b22ba2e6be9f13cfb7acac","modified":1654529029865},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head.pug","hash":"54511ed299a3bcf4ecbb62e3078f6b0611ccbd2c","modified":1654529029869},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/layout.pug","hash":"da27c20f0e672103b984e135eb2fe7770ca7fcce","modified":1654529029881},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/pagination.pug","hash":"0b80f04950bd0fe5e6c4e7b7559adf4d0ce28436","modified":1654529029893},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/rightside.pug","hash":"699d0d2cff233628752956c4434125c8203f7d63","modified":1654529029897},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/sidebar.pug","hash":"8d39473ed112d113674a0f689f63fae06c72abd2","modified":1654529029901},{"_id":"node_modules/hexo-theme-butterfly/scripts/events/404.js","hash":"83cd7f73225ccad123afbd526ce1834eb1eb6a6d","modified":1654529029697},{"_id":"node_modules/hexo-theme-butterfly/scripts/events/config.js","hash":"a12b9f11d7d3f52de5b2090d2805d7303e0187a5","modified":1654529029737},{"_id":"node_modules/hexo-theme-butterfly/scripts/events/init.js","hash":"b4940a5c73d3a5cd8bb5883e3041ecdd905a74e0","modified":1654529029745},{"_id":"node_modules/hexo-theme-butterfly/scripts/events/stylus.js","hash":"9819f0996234fbd80d6c50a9e526c56ebf22588d","modified":1654529029789},{"_id":"node_modules/hexo-theme-butterfly/scripts/events/welcome.js","hash":"3cfc46c749e2fd7ae9c2a17206238ed0e0e17e7d","modified":1654529029797},{"_id":"node_modules/hexo-theme-butterfly/scripts/filters/post_lazyload.js","hash":"932df912976261929f809b7dbd4eb473e7787345","modified":1654529029781},{"_id":"node_modules/hexo-theme-butterfly/scripts/filters/random_cover.js","hash":"21379ed2dccb69c43b893895c9d56238c11e5f43","modified":1654529029781},{"_id":"node_modules/hexo-theme-butterfly/scripts/helpers/aside_archives.js","hash":"2ec66513d5322f185d2071acc052978ba9415a8e","modified":1654529029729},{"_id":"node_modules/hexo-theme-butterfly/scripts/helpers/aside_categories.js","hash":"e00efdb5d02bc5c6eb4159e498af69fa61a7dbb9","modified":1654529029729},{"_id":"node_modules/hexo-theme-butterfly/scripts/helpers/inject_head_js.js","hash":"b4cd617c619d1a0df93603721a6fa1317526174b","modified":1654529029749},{"_id":"node_modules/hexo-theme-butterfly/scripts/helpers/page.js","hash":"c6611d97087c51845cb1ab4821696a62fa33daeb","modified":1654529029773},{"_id":"node_modules/hexo-theme-butterfly/scripts/helpers/related_post.js","hash":"d368a8830e506c8b5eb6512b709ec8db354d5ea1","modified":1654529029785},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/button.js","hash":"91d954f6e9fe6e571eb8ec9f8996294b2dc3688e","modified":1654529029737},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/gallery.js","hash":"f79c99f6c5b626c272dc2bed2b0250d6b91bb28a","modified":1654529029741},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/flink.js","hash":"ab62919fa567b95fbe14889517abda649991b1ee","modified":1654529029737},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/hide.js","hash":"396c3ab1bcf1c7693ad7e506eadd13016c6769b6","modified":1654529029745},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/inlineImg.js","hash":"a43ee2c7871bdd93cb6beb804429e404570f7929","modified":1654529029753},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/label.js","hash":"03b2afef41d02bd1045c89578a02402c28356006","modified":1654529029753},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/mermaid.js","hash":"531808a290b8bdd66bac2faab211ada8e9646a37","modified":1654529029765},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/note.js","hash":"c16c6eb058af2b36bcd583b2591076c7ebdd51ad","modified":1654529029773},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/tabs.js","hash":"6c6e415623d0fd39da016d9e353bb4f5cca444f5","modified":1654529029789},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/timeline.js","hash":"300eb779588bf35a1b687d9f829d866074b707e3","modified":1654529029789},{"_id":"node_modules/hexo-theme-butterfly/source/css/index.styl","hash":"861998e4ac67a59529a8245a9130d68f826c9c12","modified":1654529029945},{"_id":"node_modules/hexo-theme-butterfly/source/css/var.styl","hash":"4890a40366d6443f8b8942a4e9a6dce9fe3494f5","modified":1654529029953},{"_id":"node_modules/hexo-theme-butterfly/source/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1654529029677},{"_id":"node_modules/hexo-theme-butterfly/source/img/favicon.png","hash":"3cf89864b4f6c9b532522a4d260a2e887971c92d","modified":1654529029805},{"_id":"node_modules/hexo-theme-butterfly/source/js/main.js","hash":"04efcbd28b37875cfec88eb87cab7256a9ebb327","modified":1654529029765},{"_id":"node_modules/hexo-theme-butterfly/source/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1654529029633},{"_id":"node_modules/hexo-theme-butterfly/source/js/tw_cn.js","hash":"00053ce73210274b3679f42607edef1206eebc68","modified":1654529029793},{"_id":"node_modules/hexo-theme-butterfly/source/js/utils.js","hash":"0b95daada72abb5d64a1e3236049a60120e47cca","modified":1654529029797},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/Open_Graph.pug","hash":"6c41f49a3e682067533dd9384e6e4511fc3a1349","modified":1654529029889},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/analytics.pug","hash":"15530d9ac59c576d79af75dd687efe71e8d261b0","modified":1654529029829},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/config.pug","hash":"8f41fa9732ea654a10f6e666d9c782c7e27e5ea6","modified":1654529029853},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/config_site.pug","hash":"7df90c8e432e33716517ab918b0a125bc284041b","modified":1654529029853},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/google_adsense.pug","hash":"95a37e92b39c44bcbea4be7e29ddb3921c5b8220","modified":1654529029869},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/noscript.pug","hash":"d16ad2ee0ff5751fd7f8a5ce1b83935518674977","modified":1654529029889},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/preconnect.pug","hash":"65a23b5170204e55b813ce13a79d799b66b7382c","modified":1654529029897},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/pwa.pug","hash":"3d492cfe645d37c94d30512e0b230b0a09913148","modified":1654529029897},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/site_verification.pug","hash":"e2e8d681f183f00ce5ee239c42d2e36b3744daad","modified":1654529029901},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/header/index.pug","hash":"65fa23680af0daf64930a399c2f2ca37809a8149","modified":1654529029873},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/header/menu_item.pug","hash":"31346a210f4f9912c5b29f51d8f659913492f388","modified":1654529029889},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/header/nav.pug","hash":"78a3abd90bb3c18cd773d3d5abac3541e7f415e5","modified":1654529029889},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/header/post-info.pug","hash":"19a05dccfbffdf31cfa48c3208542b924637303d","modified":1654529029893},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/header/social.pug","hash":"0d953e51d04a9294a64153c89c20f491a9ec42d4","modified":1654529029901},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/loading/loading-js.pug","hash":"4cfcf0100e37ce91864703cd44f1cb99cb5493ea","modified":1654529029885},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/loading/loading.pug","hash":"5276937fbcceb9d62879dc47be880cd469a27349","modified":1654529029885},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/mixins/article-sort.pug","hash":"2fb74d0b0e4b98749427c5a1a1b0acb6c85fadc4","modified":1654529029837},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/mixins/post-ui.pug","hash":"b9ebb02af8ccf43e3f73be43db19254fa913c57b","modified":1654529029897},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/page/categories.pug","hash":"5276a8d2835e05bd535fedc9f593a0ce8c3e8437","modified":1654529029853},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/page/default-page.pug","hash":"12c65c174d26a41821df9bad26cdf1087ec5b0ca","modified":1654529029857},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/page/flink.pug","hash":"fed069baa9b383f57db32bb631115071d29bdc60","modified":1654529029865},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/page/tags.pug","hash":"6311eda08e4515281c51bd49f43902a51832383c","modified":1654529029901},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/post/post-copyright.pug","hash":"ebecba46a5f4efe1c98a386df06c56e26fbd07b9","modified":1654529029893},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/post/reward.pug","hash":"864869c43fe5b5bb6f4ac6b13dd4bfb16ea47550","modified":1654529029897},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/aplayer.pug","hash":"c7cfade2b160380432c47eef4cd62273b6508c58","modified":1654529029833},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/effect.pug","hash":"6528e86656906117a1af6b90e0349c2c4651d5e1","modified":1654529029861},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/pangu.pug","hash":"0f024e36b8116118233e10118714bde304e01e12","modified":1654529029893},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/pjax.pug","hash":"460c37caeed6e6e72c1e62292e6c5e9699dd5937","modified":1654529029893},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/prismjs.pug","hash":"ffb9ea15a2b54423cd4cd441e2d061b8233e9b58","modified":1654529029897},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/subtitle.pug","hash":"bae2f32ac96cebef600c1e37eaa8467c9a7e5d92","modified":1654529029901},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_ad.pug","hash":"60dc48a7b5d89c2a49123c3fc5893ab9c57dd225","modified":1654529029837},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_announcement.pug","hash":"ae392459ad401a083ca51ee0b27526b3c1e1faed","modified":1654529029841},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_archives.pug","hash":"86897010fe71503e239887fd8f6a4f5851737be9","modified":1654529029841},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_author.pug","hash":"e37468e63db2a0ac09b65d21b7de3e62425bb455","modified":1654529029841},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_bottom_self.pug","hash":"13dc8ce922e2e2332fe6ad5856ebb5dbf9ea4444","modified":1654529029841},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_categories.pug","hash":"d1a416d0a8a7916d0b1a41d73adc66f8c811e493","modified":1654529029845},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_newest_comment.pug","hash":"6d93564a8bd13cb9b52ee5e178db3bcbf18b1bc6","modified":1654529029845},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_post_toc.pug","hash":"3057a2f6f051355e35d3b205121af8735100eacf","modified":1654529029845},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_recent_post.pug","hash":"9c1229af6ab48961021886882c473514101fba21","modified":1654529029849},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_tags.pug","hash":"438aea3e713ed16b7559b9a80a9c5ec0221263df","modified":1654529029849},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_top_self.pug","hash":"ae67c6d4130a6c075058a9c1faea1648bcc6f83e","modified":1654529029849},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_webinfo.pug","hash":"0612aaee878f33ea8d3da0293c7dc3b6cd871466","modified":1654529029849},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/index.pug","hash":"7fb096656c8a6c21a4b6a5100885b1081d6021ed","modified":1654529029877},{"_id":"node_modules/hexo-theme-butterfly/source/css/_global/function.styl","hash":"644d520fe80cc82058467708ab82ccad313b0c27","modified":1654529029937},{"_id":"node_modules/hexo-theme-butterfly/source/css/_global/index.styl","hash":"714f19e7d66df84938bd1b82b33d5667abe1f147","modified":1654529029941},{"_id":"node_modules/hexo-theme-butterfly/source/css/_highlight/highlight.styl","hash":"2f95e99b8351fbecd9037a1bbdc3fee9d6ea8a77","modified":1654529029941},{"_id":"node_modules/hexo-theme-butterfly/source/css/_highlight/theme.styl","hash":"bcd384c8b2aa0390c9eb69ac1abbfd1240ce1da4","modified":1654529029953},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/aside.styl","hash":"ca58af8903eb1d1d05edae54fc2e23aeac6da6c5","modified":1654529029921},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/chat.styl","hash":"29f48f9370f245e6e575b5836bccf47eb5688d8b","modified":1654529029929},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/comments.styl","hash":"c61dccca690d486c3d9c29cf028d87b777385141","modified":1654529029929},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/footer.styl","hash":"26be2afa9d4e7016cf3c42a6cd166f01e8e4ad5c","modified":1654529029937},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/head.styl","hash":"d97c1722ce0fcc319f1f90ec2d51f9d746748e2b","modified":1654529029941},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/loading.styl","hash":"ef21990de28bd75dcd0f88b8d616e1a7a137502f","modified":1654529029945},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/pagination.styl","hash":"fb9f78bfbb79579f1d752cb73fb6d25c8418e0fd","modified":1654529029949},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/post.styl","hash":"15056fba0bd5a45ea8dc97eb557f6929ff16797a","modified":1654529029949},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/relatedposts.styl","hash":"d53de408cb27a2e704aba7f7402b7caebe0410d8","modified":1654529029949},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/reward.styl","hash":"c5cfed620708807a48076b5ee59b0ba84e29aa80","modified":1654529029949},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/rightside.styl","hash":"bd88ee30ebf8ca2e7b4d3a034c317fd61733921f","modified":1654529029949},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/sidebar.styl","hash":"631ca35a38bc4ac052e9caf47508ff1f99842fc7","modified":1654529029949},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/third-party.styl","hash":"8314e9749eb1ae40c4bae9735b7a6638b2d6876a","modified":1654529029953},{"_id":"node_modules/hexo-theme-butterfly/source/css/_mode/readmode.styl","hash":"69f8e9414526dfda3af9a71c8e528fdd0ecbbfe5","modified":1654529029949},{"_id":"node_modules/hexo-theme-butterfly/source/css/_mode/darkmode.styl","hash":"f67177310f5594954b25a591d186d28d5d450b18","modified":1654529029933},{"_id":"node_modules/hexo-theme-butterfly/source/css/_page/404.styl","hash":"50dbb9e6d98c71ffe16741b8c1b0c1b9771efd2b","modified":1654529029917},{"_id":"node_modules/hexo-theme-butterfly/source/css/_page/archives.styl","hash":"6f4b4ede52305bce9b22c8c897dcbde8af6e2ce4","modified":1654529029921},{"_id":"node_modules/hexo-theme-butterfly/source/css/_page/categories.styl","hash":"f01ee74948cedb44e53cd3bb1ef36b7d2778ede7","modified":1654529029925},{"_id":"node_modules/hexo-theme-butterfly/source/css/_page/common.styl","hash":"a58d35d698885f1034dedbe99f7dbc1a801412c6","modified":1654529029929},{"_id":"node_modules/hexo-theme-butterfly/source/css/_page/flink.styl","hash":"98d755b686ee833e9da10afaa40c4ec2bd66c19a","modified":1654529029937},{"_id":"node_modules/hexo-theme-butterfly/source/css/_page/homepage.styl","hash":"826dae759062d8f84eb2bf5ab8fdb80e0f79d58b","modified":1654529029941},{"_id":"node_modules/hexo-theme-butterfly/source/css/_page/tags.styl","hash":"580feb7e8b0822a1be48ac380f8c5c53b1523321","modified":1654529029953},{"_id":"node_modules/hexo-theme-butterfly/source/css/_search/algolia.styl","hash":"51e45625929d57c9df3ba9090af99b9b7bb9a15b","modified":1654529029917},{"_id":"node_modules/hexo-theme-butterfly/source/css/_search/index.styl","hash":"39d61cbe0c1e937f83ba3b147afaa29b4de2f87d","modified":1654529029941},{"_id":"node_modules/hexo-theme-butterfly/source/css/_search/local-search.styl","hash":"25e58a7a8bda4b73d0a0e551643ca01b09ccd7e5","modified":1654529029945},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/button.styl","hash":"45f0c32bdea117540f6b14ebac6450d7142bd710","modified":1654529029925},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/gallery.styl","hash":"a310e48f826a4cacc55d8e68f43806e5085554f6","modified":1654529029941},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/hexo.styl","hash":"d76c38adf1d9c1279ef4241835667789f5b736e0","modified":1654529029941},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/hide.styl","hash":"ce489ca2e249e2a3cf71584e20d84bdb022e3475","modified":1654529029941},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/inlineImg.styl","hash":"df9d405c33a9a68946b530410f64096bcb72560c","modified":1654529029945},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/label.styl","hash":"66c59e193d794cdb02cca7bd1dc4aea5a19d7e84","modified":1654529029945},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/note.styl","hash":"08493b66b9f31f2bd3e9a3115017a0ce16142b20","modified":1654529029945},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/tabs.styl","hash":"bf9568444dd54e39dc59b461323dcd38942f27d9","modified":1654529029949},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/timeline.styl","hash":"f071156d439556e7463ed4bc61ceee87170d5d08","modified":1654529029953},{"_id":"node_modules/hexo-theme-butterfly/source/css/_third-party/normalize.min.css","hash":"2c18a1c9604af475b4749def8f1959df88d8b276","modified":1654529029557},{"_id":"node_modules/hexo-theme-butterfly/source/js/search/algolia.js","hash":"ce8131b712dca80f289015aef75f86e727f62981","modified":1654529029717},{"_id":"node_modules/hexo-theme-butterfly/source/js/search/local-search.js","hash":"3071a4208fdf89ad7e0031536dd6ffa7bc951e4d","modified":1654529029757},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/card-post-count/index.pug","hash":"e3bf847553515174f6085df982f0623e9783db7a","modified":1654529029873},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/card-post-count/disqus.pug","hash":"d85c3737b5c9548553a78b757a7698df126a52cf","modified":1654529029861},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/card-post-count/fb.pug","hash":"7848ec58c6ec03243abf80a3b22b4dc10f3edf53","modified":1654529029861},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/card-post-count/twikoo.pug","hash":"58406a7a3bf45815769f652bf3ef81e57dcd07eb","modified":1654529029905},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/card-post-count/valine.pug","hash":"e4b7bf91a29bd03181593b63e1f3ee1103af2e48","modified":1654529029909},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/chat/crisp.pug","hash":"76634112c64023177260d1317ae39cef2a68e35f","modified":1654529029857},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/card-post-count/waline.pug","hash":"5f648086a33a32d169a2f8d8c549c08aa02f67db","modified":1654529029909},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/chat/chatra.pug","hash":"481cd5053bafb1a19f623554a27d3aa077ea59c3","modified":1654529029853},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/chat/daovoice.pug","hash":"cfe63e7d26a6665df6aa32ca90868ad48e05ec04","modified":1654529029857},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/chat/gitter.pug","hash":"d1d2474420bf4edc2e43ccdff6f92b8b082143df","modified":1654529029869},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/chat/index.pug","hash":"3f05f8311ae559d768ee3d0925e84ed767c314d3","modified":1654529029873},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/chat/tidio.pug","hash":"24a926756c2300b9c561aaab6bd3a71fdd16e16d","modified":1654529029901},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/disqusjs.pug","hash":"693d999777dd16e0566d29ac3203d4c167b2f9a7","modified":1654529029861},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/disqus.pug","hash":"a111407fdcafcf1099e26ffa69786f8822c5d9fb","modified":1654529029861},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/gitalk.pug","hash":"22e2ef30fe5eb1db7566e89943c74ece029b2a8e","modified":1654529029865},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/facebook_comments.pug","hash":"2d8fc3fb8f9aec61400acf3c94070bd8539058f8","modified":1654529029861},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/giscus.pug","hash":"591ef23c583690bd74af0cafb09af64ba5bd8151","modified":1654529029865},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/js.pug","hash":"9302837f1e35f153323bb4f166514c7e96e8ecdd","modified":1654529029881},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/index.pug","hash":"e4850f2c9ba5f6b2248808f7257662679e0fab0a","modified":1654529029873},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/utterances.pug","hash":"a737046e730eb7264606ba0536218964044492f9","modified":1654529029905},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/valine.pug","hash":"e55b9c0f8ced231f47eb88bd7f4ec99f29c5c29d","modified":1654529029909},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/livere.pug","hash":"52ea8aa26b84d3ad38ae28cdf0f163e9ca8dced7","modified":1654529029881},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/waline.pug","hash":"15462d1ed04651ad3b430c682842ac400f6f9b47","modified":1654529029909},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/twikoo.pug","hash":"81c6070e06ecc2244040c7007566d7972f46ec4e","modified":1654529029905},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/math/index.pug","hash":"b8ae5fd7d74e1edcef21f5004fc96147e064d219","modified":1654529029873},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/math/mathjax.pug","hash":"f4dc7d02c8192979404ae9e134c5048d3d0a76e2","modified":1654529029885},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/math/katex.pug","hash":"31b007dc0f3de52176f278012ecf17a4bcecde2c","modified":1654529029881},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/newest-comments/disqus-comment.pug","hash":"04b2a5882e789a988e41d45abe606f0617b08e38","modified":1654529029857},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/math/mermaid.pug","hash":"8e33aca36a4d3ae9e041ba05ced8eff56ae38f77","modified":1654529029889},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/newest-comments/github-issues.pug","hash":"e846ddfe4a63b15d1416f6055f5756af5e3da7c6","modified":1654529029869},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/newest-comments/index.pug","hash":"f6506ccfd1ce994b9e53aa95588d0b6dbad11411","modified":1654529029877},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/newest-comments/waline.pug","hash":"dd0bc119029b62dce5dc965d5de7377e438fa29a","modified":1654529029913},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/newest-comments/twikoo-comment.pug","hash":"233907dd7f5b5f33412701d2ccffbc0bbae8707b","modified":1654529029905},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/newest-comments/valine.pug","hash":"d19e1c2c0a50f0e4547d71a17b9be88e8152f17c","modified":1654529029909},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/search/index.pug","hash":"da3b9437d061ee68dbc383057db5c73034c49605","modified":1654529029877},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/search/algolia.pug","hash":"e8245d0b4933129bb1c485d8de11a9e52e676348","modified":1654529029825},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/search/local-search.pug","hash":"178c9cdcc4ce5a006885b24ce4a3d624e4734899","modified":1654529029885},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/share/addtoany.pug","hash":"85c92f8a7e44d7cd1c86f089a05be438535e5362","modified":1654529029817},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/share/add-this.pug","hash":"2980f1889226ca981aa23b8eb1853fde26dcf89a","modified":1654529029813},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/share/index.pug","hash":"4c4a9c15215ae8ac5eadb0e086b278f76db9ee92","modified":1654529029877},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/share/share-js.pug","hash":"f61d63724ea5c5f352568b3a16bde023affefbe5","modified":1654529029897},{"_id":"node_modules/hexo-theme-butterfly/source/css/_highlight/highlight/index.styl","hash":"18804c58239d95798fa86d0597f32d7f7dd30051","modified":1654529029941},{"_id":"node_modules/hexo-theme-butterfly/source/css/_highlight/highlight/diff.styl","hash":"cf1fae641c927621a4df1be5ca4a853b9b526e23","modified":1654529029933},{"_id":"node_modules/hexo-theme-butterfly/source/css/_highlight/prismjs/diff.styl","hash":"5972c61f5125068cbe0af279a0c93a54847fdc3b","modified":1654529029937},{"_id":"node_modules/hexo-theme-butterfly/source/css/_highlight/prismjs/index.styl","hash":"5dc2e0bcae9a54bfb9bdcc82d02ae5a3cf1ca97d","modified":1654529029941},{"_id":"node_modules/hexo-theme-butterfly/source/css/_highlight/prismjs/line-number.styl","hash":"8970cc1916c982b64a1478792b2822d1d31e276d","modified":1654529029945},{"_id":"source/_posts/sublimeText4Purchase/image-20220114154843108.png","hash":"a3b9f1acf5cc2c26651de90fa81c397a07d64437","modified":1654236055609},{"_id":"source/_posts/sublimeText4Purchase/image-20220114154528250.png","hash":"86088922bd6dc90ae61f5c4e465a0586ee00c259","modified":1654236055609},{"_id":"source/images/gjh.png","hash":"eb8d94df48ebed96df0a5f18dfdb6d62b2c3eac1","modified":1654236055621},{"_id":"public/js/search/local-search.js","hash":"5a4feab1f4fb5a2613aff49af7454593140eb303","modified":1654534546141},{"_id":"public/ _data/link.json","hash":"112d454d5f989719a01edda65c62a3062ee46666","modified":1654534546141},{"_id":"public/ _data/valine.json","hash":"c4f8467a1017cb9c6bdc9f7ba059ef24355bf2c5","modified":1654534546141},{"_id":"public/ _data/widget.json","hash":"346885db4d68cb1271b1e48d9dde31b8c09cadda","modified":1654534546141},{"_id":"public/live2d-widget/autoload.js","hash":"c4367c9e25dbb7a6c51d9b77dfc1b51e5606cc40","modified":1654534546141},{"_id":"public/live2d-widget/waifu-tips.js","hash":"84d0ba117235bd629dc81466be854359d5edab04","modified":1654534546141},{"_id":"public/live2d-widget/live2d.min.js","hash":"94383fb61de815c3f806ae3f11026bbcfe384082","modified":1654534546141},{"_id":"public/live2d-widget/waifu-tips.json","hash":"243aa4780051343c54df2101cc4c216b517cfb21","modified":1654534546141},{"_id":"public/live2d-widget/waifu_left.css","hash":"a85e7b609aaf2492c1227055a045a041ebc08276","modified":1654534546141},{"_id":"public/live2d-widget/waifu_right.css","hash":"78d5a9d7c9f0290a8e539bf6c702135090a90467","modified":1654534546141},{"_id":"public/search.xml","hash":"b3e09e1abfca55d4d242e29ba91d4e98d4986aa3","modified":1654534546141},{"_id":"public/404.html","hash":"e2363a050c8e0f766a7e65a4cf67e8b91b86da18","modified":1654534892485},{"_id":"public/Gallery/index.html","hash":"37e9347521fccbb3ddc891807ec14357a17f17e3","modified":1654534892485},{"_id":"public/about/index.html","hash":"a3f24fb3bf1bcd8312abf7e2c66c368e1b9cd8de","modified":1654534892485},{"_id":"public/bg/index.html","hash":"5efdd7105071ec32060d2b59523da366bf5c9ace","modified":1654534892485},{"_id":"public/categories/index.html","hash":"13f8dfed300f3969484b53b5daf951b50982658a","modified":1654534892485},{"_id":"public/link/index.html","hash":"edac5d9ac0d60275e385fed7e1e8a6d9065d5865","modified":1654534892485},{"_id":"public/live2d-widget/README.html","hash":"57468eea276b26d9d460188479e1ec1c4a930a1c","modified":1654534892485},{"_id":"public/music/index.html","hash":"a5e9070664fd28647f8d0056cfc81512d73166d0","modified":1654534892485},{"_id":"public/steamgames/index.html","hash":"33f88bf96716410604fdf06360e92c75d56bd598","modified":1654534892485},{"_id":"public/wallpaper/index.html","hash":"e4dbdd3df600ab58286f586ad3e07444507ab027","modified":1654534892485},{"_id":"public/tags/index.html","hash":"ee39351c8f6b2bc5e3e866dab779bf7a722e2fd5","modified":1654534892485},{"_id":"public/live2d-widget/demo/demo.html","hash":"23c4491708d31b920fa9ce5277be553ecdd787ae","modified":1654534892485},{"_id":"public/live2d-widget/demo/login.html","hash":"444938d38f1145e530c8a29f7fd7aaa75a24ef41","modified":1654534892485},{"_id":"public/post/inGitByOsDeepin/index.html","hash":"a6370f29aeab4dee34d2f313e80a113ad6e62a99","modified":1654534892485},{"_id":"public/post/inHexoByOsDeepin/index.html","hash":"0a3d096d969a97c236722fdccd6cea409730e4f8","modified":1654534892485},{"_id":"public/post/inNodejsByOsDeepin/index.html","hash":"041cfbc1feb390c98befbeab3331b7f8752f282e","modified":1654534892485},{"_id":"public/post/inVueByOsDeepin/index.html","hash":"04f522853a8b7d485271d7f52525e36b25d77f69","modified":1654534892485},{"_id":"public/post/inMavenByOsDeepin/index.html","hash":"7d1a5ff84e53ef7457ec21e3e310bd341ab0e4a8","modified":1654534892485},{"_id":"public/post/inJdkByOsDeepin/index.html","hash":"19912d58c0f64eb78ffe74bc754cdf3678f44d78","modified":1654534892485},{"_id":"public/post/createMyImage/index.html","hash":"5f54888245e0b341cc40d088302dcc2ef1fd69ea","modified":1654534892485},{"_id":"public/post/inK8sByKubeadm/index.html","hash":"9a18a2be5fc15b0a51466bfb28d093b84c5065f4","modified":1654534892485},{"_id":"public/post/inReacherByDC/index.html","hash":"828ec635a1e3de80029e48f95ae6ccb3bdd4ae76","modified":1654534892485},{"_id":"public/post/day20220523/index.html","hash":"953cd6475428395ad1467d1ceb6a42a972f8529c","modified":1654534892485},{"_id":"public/post/weekly-contest-293/index.html","hash":"bea381dc8da3c9c915017395a20d9aa338f91cfb","modified":1654534892485},{"_id":"public/post/count-integers-in-intervals/index.html","hash":"b9ea7e8d053c5581cf75c19af34760c9959c6610","modified":1654534892485},{"_id":"public/post/largest-combination-with-bitwise-and-greater-than-zero/index.html","hash":"51e8080d9746fef2ffdc3e460cb24668c9a2e590","modified":1654534892485},{"_id":"public/post/maximum-consecutive-floors-without-special-floors/index.html","hash":"ee69f4434b6799517a648b8ca5a78483a97036a9","modified":1654534892485},{"_id":"public/post/find-resultant-array-after-removing-anagrams/index.html","hash":"f16ab43f4d37ad53cf77a8c6611734a98236c328","modified":1654534892485},{"_id":"public/post/weekly-contest-292/index.html","hash":"b8782c8b20a4c914c989d6a267a895d997b52ab3","modified":1654534892485},{"_id":"public/post/check-if-there-is-a-valid-parentheses-string-path/index.html","hash":"f230b4dc1e1770b79b9fad64139028be0a60ef26","modified":1654534892485},{"_id":"public/post/count-nodes-equal-to-average-of-subtree/index.html","hash":"0085eba30f8ac23b47480d80ab11ce469452ef69","modified":1654534892485},{"_id":"public/post/count-number-of-texts/index.html","hash":"49979cc80b55cd0f0abf4cd24be8274e2290f303","modified":1654534892485},{"_id":"public/post/largest-3-same-digit-number-in-string/index.html","hash":"39d69887e6103714704541929c658d4e6a5e0e71","modified":1654534892485},{"_id":"public/post/inRKE/index.html","hash":"765264791e1e3d0ddb613d13e0b934653d9af470","modified":1654534892485},{"_id":"public/post/phpDeploy/index.html","hash":"608b147b286f13f51047601faa8c8502f4913623","modified":1654534892485},{"_id":"public/post/designPattern/index.html","hash":"0be71ed0744db6bd92eb45f8acac48b8cbb7348b","modified":1654534892485},{"_id":"public/post/builder/index.html","hash":"3ac2d7a70271f1cae598e8ac7aa0030c02c6b222","modified":1654534892485},{"_id":"public/post/prototype/index.html","hash":"756e5f6b4958419ed5a8cae511c08840f9e460e6","modified":1654534892485},{"_id":"public/post/singleton/index.html","hash":"e32df81c4e9894b83bbad82bee307ed631ff4f14","modified":1654534892485},{"_id":"public/post/iRedisByDC/index.html","hash":"c3e94638450d2dfe2f2091a28f1d5e126a6edc6a","modified":1654534892485},{"_id":"public/post/iMySQLByDC/index.html","hash":"84351d9cff9e499a86a37a55757553814318787b","modified":1654534892485},{"_id":"public/post/iNginxByDC/index.html","hash":"62a33dd8f4f81c5afc062e95908eafd87ae8967c","modified":1654534892485},{"_id":"public/post/dockerComposeInstall/index.html","hash":"a3af2412d181a32e917370b35d6136fe921d7728","modified":1654534892485},{"_id":"public/post/dockerInstall/index.html","hash":"fdc7c9409ec987451833a919a51316d97157b678","modified":1654534892485},{"_id":"public/post/repeatedSubstringPattern/index.html","hash":"455e182ee43152b6b23ea413743d53b51c27f7d3","modified":1654534892485},{"_id":"public/post/leetcode204/index.html","hash":"4bf7d5fb260359b7a10341232886c104dfe144ed","modified":1654534892485},{"_id":"public/post/day20220411/index.html","hash":"13d6e799af5114e00f4db825d4f8d76acefc1b76","modified":1654534892485},{"_id":"public/post/darwin/index.html","hash":"d4a60f4b8a1af23e4b0cabb7bfb8bb50e00d4305","modified":1654534892485},{"_id":"public/post/autowiredWaring/index.html","hash":"6a5098ed0abd1d7fdabb2b652ace9b237817fcf4","modified":1654534892485},{"_id":"public/post/influxdbInstall/index.html","hash":"063568a33bda3e9c6890ccb2adf0a1a30ba1cb26","modified":1654534892485},{"_id":"public/post/day20220312/index.html","hash":"c4d7b3d1cf01a4b5f9787985f788e195fdf47b6f","modified":1654534892485},{"_id":"public/post/mystery0311/index.html","hash":"92418b4768bffc7a5dbf4f9dabc7d28ca51a3cf4","modified":1654534892485},{"_id":"public/post/day20220311/index.html","hash":"4c473e707d0a5f9c640eb280258d9a91715b0a4a","modified":1654534892485},{"_id":"public/post/question20220310-1/index.html","hash":"52ec87145a74819981e2acf33caf4c375fe8367f","modified":1654534892485},{"_id":"public/post/mystery0310/index.html","hash":"c33f2bfe38dc9100ce2abc1a5bfe64c05d0e6809","modified":1654534892485},{"_id":"public/post/day20220310/index.html","hash":"16dd2f98bf71de758e6d50c4ecf8ce27608f24e0","modified":1654534892485},{"_id":"public/post/day20220309/index.html","hash":"396b37889236f698d6d62a679cba838cf246bfab","modified":1654534892485},{"_id":"public/post/day20220307/index.html","hash":"843997ccdffcc576bdc7ffb7eaa6f0ac3288769b","modified":1654534892485},{"_id":"public/post/mystery0307/index.html","hash":"a3a7cfba6fe71d15226b6209f53d8947535b9839","modified":1654534892485},{"_id":"public/post/mystery0305/index.html","hash":"3fe28ce99bac888c1e23269f4ec59d7d641d0636","modified":1654534892485},{"_id":"public/post/mystery0304/index.html","hash":"36dc35e0afddff0fa3d1b40f482494af3d1abab0","modified":1654534892485},{"_id":"public/post/pyMulCom/index.html","hash":"6da8f9b25a19ec04570606b739efcc310b04a602","modified":1654534892485},{"_id":"public/post/pyListSlice/index.html","hash":"515ce497a91e58249bdbaefda00987b13758a58a","modified":1654534892485},{"_id":"public/post/pyUsefulFun/index.html","hash":"ac3d3d71884338c4c4e7e41b5c775577624ae0a2","modified":1654534892485},{"_id":"public/post/day20220214/index.html","hash":"2164a26ad0967b833075e98302f0c93d1f6890c3","modified":1654534892485},{"_id":"public/post/day20220213/index.html","hash":"0520d9987dabe3fae723979fac9660f2c8aa5beb","modified":1654534892485},{"_id":"public/post/day20220212/index.html","hash":"41694485973e5d83b37ec1309d312ced33cc88ab","modified":1654534892485},{"_id":"public/post/gitPushMoreRepo/index.html","hash":"879952b88122a6aa3584e7d5deceb4719925a114","modified":1654534892485},{"_id":"public/post/day20220211/index.html","hash":"66b279c2c5aea1325534f7fee8eb3927642249ef","modified":1654534892485},{"_id":"public/post/putWebsiteToSearchEngine/index.html","hash":"0dafabc56e0bdb9a884ab37a6bacc483c444a3eb","modified":1654534892485},{"_id":"public/post/day20220205/index.html","hash":"1d1b9844a5153f473b5a9e5d2104f673e692dcc5","modified":1654534892485},{"_id":"public/post/day20220204/index.html","hash":"cf1e5fb27420659b1c2918c53b2f47b7d4a26281","modified":1654534892485},{"_id":"public/post/seata141demo/index.html","hash":"dea67e163e8e5ab4cef6a535e65177d1bfdaf31c","modified":1654534892485},{"_id":"public/post/day20220125/index.html","hash":"23660dd46d197f42dd3ca051d302b72846d2e9f7","modified":1654534892485},{"_id":"public/post/day20220124/index.html","hash":"3c06ff1be0a98632d65ddf7845d36100e6ef2847","modified":1654534892485},{"_id":"public/post/day20220121/index.html","hash":"4cb0bc2c3f0e044ea26b136b6f53c0ca480083c6","modified":1654534892485},{"_id":"public/post/day20220120/index.html","hash":"c06ad621a408340cfc24e0d0c0791aa051486ec1","modified":1654534892485},{"_id":"public/post/day20220119/index.html","hash":"cd5b481488d900494dd1f60a44f19c32c7e57b09","modified":1654534892485},{"_id":"public/post/day20220118/index.html","hash":"e0e3e8b559e32c1c103728204a165bb47b538105","modified":1654534892485},{"_id":"public/post/sublimeText4Purchase/index.html","hash":"283010803144be98414a2f040b64868c1f19e198","modified":1654534892485},{"_id":"public/post/nexusCreate/index.html","hash":"535214f35bc818839718b37540cc2d6e5f294f81","modified":1654534892485},{"_id":"public/post/jpaCompositePK/index.html","hash":"863410b6786f2fea9ae8479fb8926ccea1e3855e","modified":1654534892485},{"_id":"public/post/pyControl/index.html","hash":"858ee7f41456372528bbac90273607d5befa1244","modified":1654534892485},{"_id":"public/post/pyListSort/index.html","hash":"f30984a1521434a0c1bf9f1b7ef60029d0a964b3","modified":1654534892485},{"_id":"public/post/hello-world/index.html","hash":"56c81c339c232589096df47ac2be3e700af12e75","modified":1654534892485},{"_id":"public/artitalk/index.html","hash":"4fcf7d37fa1a51a1596235ac656ac9e8e2840ac9","modified":1654534892485},{"_id":"public/books/index.html","hash":"611d26409d241945fb14a79c79219ebb400287af","modified":1654534892485},{"_id":"public/movies/index.html","hash":"d0b647308e66391d8de014677d33e92755ec8dcc","modified":1654534892485},{"_id":"public/comments/index.html","hash":"8864d7a4d8dcfdf662ebcb1743c72705e4ec2605","modified":1654534892485},{"_id":"public/archives/index.html","hash":"ac73180537e488128cbf482fd3c014bf329160c1","modified":1654534892485},{"_id":"public/archives/page/2/index.html","hash":"87057b7589ad24f104c7a2d3a43618c5e1a3273c","modified":1654534892485},{"_id":"public/archives/page/3/index.html","hash":"92fd9556538943f7666f664f23a14d053c819207","modified":1654534892485},{"_id":"public/archives/page/4/index.html","hash":"997369ad502794b0a79034763609ca164065ff6f","modified":1654534892485},{"_id":"public/archives/page/5/index.html","hash":"f921f77f3f9ec18ed86223110840cbcc4c8f42c4","modified":1654534892485},{"_id":"public/archives/2021/index.html","hash":"c9dcf73d4941ab58bc45c9e68b1ff96182e119d7","modified":1654534892485},{"_id":"public/archives/2021/12/index.html","hash":"63d9800d3e53baf6ad2e52950d8ca15488e3e1c0","modified":1654534892485},{"_id":"public/archives/2022/index.html","hash":"1bdfa83abecd7799cfd8ac39c74fb9ad331ed751","modified":1654534892485},{"_id":"public/archives/2022/page/2/index.html","hash":"df0e61b1196c23450eb3806a545cefe4beff17a2","modified":1654534892485},{"_id":"public/archives/2022/page/3/index.html","hash":"5268e56060df8b155bc68b4279f24c0d19da3dc8","modified":1654534892485},{"_id":"public/archives/2022/page/4/index.html","hash":"20ceb36fbf3dbf2dfe36182491d5c83c507bb558","modified":1654534892485},{"_id":"public/archives/2022/page/5/index.html","hash":"24dc1d5fafdf4e1e4020b8f6425e90da59507649","modified":1654534892485},{"_id":"public/archives/2022/01/index.html","hash":"c1f2c7e43f60479009daa5ba1cd97490699375e6","modified":1654534892485},{"_id":"public/archives/2022/02/index.html","hash":"649dd0948e9c9b07db2fbddbe9a2be1b7533ee31","modified":1654534892485},{"_id":"public/archives/2022/03/index.html","hash":"ffd58a90355edb0840f31e6b5aab5276b43bf742","modified":1654534892485},{"_id":"public/archives/2022/03/page/2/index.html","hash":"8dbfba307b8b6f00dc47e20b097aba2a0f960e1f","modified":1654534892485},{"_id":"public/archives/2022/04/index.html","hash":"70a295bf871e2160f0f4b2a205d7db7f2ffa683e","modified":1654534892485},{"_id":"public/archives/2022/05/index.html","hash":"754543d3006338c3c5ad898375e958042f7a9acf","modified":1654534892485},{"_id":"public/archives/2022/06/index.html","hash":"efd0585bdb5593dc13604f0c107bf23b7f0d0318","modified":1654534892485},{"_id":"public/categories/java/index.html","hash":"706c2a0ba539cad3670c52e99938142a69923020","modified":1654534892485},{"_id":"public/categories/设计模式/index.html","hash":"1a923c052b9bd5e2ce355a03f1c8e7dc859d79d6","modified":1654534892485},{"_id":"public/categories/算法/index.html","hash":"5687b8139e9939ac318493591f7be4121b5724c7","modified":1654534892485},{"_id":"public/categories/算法/page/2/index.html","hash":"2402af5575e723c9aba6a5d3c6ce8604de742f66","modified":1654534892485},{"_id":"public/categories/算法/page/3/index.html","hash":"da2e5b0dc77d683d3da7c3eba0027d2571477f30","modified":1654534892485},{"_id":"public/categories/docker/index.html","hash":"b67a056baeca2a85693c09e08e7421c28399faf0","modified":1654534892485},{"_id":"public/categories/it百科/index.html","hash":"9d30567d493b1bedd24b6666ac0e1c74367ab0b0","modified":1654534892485},{"_id":"public/categories/算法/力扣/index.html","hash":"147773e8c1be60bdd03e8518f42e20bd1e270956","modified":1654534892485},{"_id":"public/categories/算法/力扣/page/2/index.html","hash":"e8d0ae738f8b3329e8902bd79a2625da76ee65ad","modified":1654534892485},{"_id":"public/categories/算法/力扣/page/3/index.html","hash":"48e48bbc9bc0fa4d3743269d563534bed0ebe14d","modified":1654534892485},{"_id":"public/categories/算法/力扣/每日一题/index.html","hash":"8849828af3ea5b570cc6688e6821d73ee9faecc0","modified":1654534892485},{"_id":"public/categories/算法/力扣/每日一题/page/2/index.html","hash":"fe6edddd5a25aa12aab0c9d442db6f7db46f46bc","modified":1654534892485},{"_id":"public/categories/git/index.html","hash":"e9460be5cb6c5b4553598128cf9057a9617d3f4a","modified":1654534892485},{"_id":"public/categories/安装部署/index.html","hash":"877a9bd0a86b7ec5e44e63004d54943612ea101f","modified":1654534892485},{"_id":"public/categories/云原生/index.html","hash":"24f5c5ac43b0398896d668443880540472c7b16f","modified":1654534892485},{"_id":"public/categories/java/jpa/index.html","hash":"950a8113814455cfd1fddad8e2e0842bd81d44c0","modified":1654534892485},{"_id":"public/categories/推理/index.html","hash":"eef658bff847f9737b1ca6b8702d02e9e0cca9d9","modified":1654534892485},{"_id":"public/categories/nexus/index.html","hash":"c891f4481943b04404b17425c306e8794789ab34","modified":1654534892485},{"_id":"public/categories/PHP/index.html","hash":"8b668ed3e1d8cddaf3ce30cf89479c615f61660c","modified":1654534892485},{"_id":"public/categories/网站建设/index.html","hash":"7169ed17bf755903851d4b1330c05fb72f2b720f","modified":1654534892485},{"_id":"public/categories/python/index.html","hash":"c0652ae33681f10dc5da23263c453dfa1b05656e","modified":1654534892485},{"_id":"public/categories/问题记录/index.html","hash":"3eb9c5306a0f274346a383d91667b1c8cc4d884a","modified":1654534892485},{"_id":"public/categories/java/seata/index.html","hash":"bad3e36b45d68d8d75ff80768804a090fd9cd9ef","modified":1654534892485},{"_id":"public/categories/开发工具/index.html","hash":"d8f50e5c8a052fbbe40792239c6fcbdf1eeeef44","modified":1654534892485},{"_id":"public/categories/算法/力扣/周赛/index.html","hash":"1a11e44f17e55dd1f74d32c9a584b82380f48cc7","modified":1654534892485},{"_id":"public/index.html","hash":"c0c367a9597505a8fa89f565f5d7adfd1aaa69e3","modified":1654534892485},{"_id":"public/page/2/index.html","hash":"948475c7f79c32ea517c493f0bd7ff57dab77de8","modified":1654534892485},{"_id":"public/page/3/index.html","hash":"af9d2c80bd53bb35fc1af2d9698ea94aa7bece19","modified":1654534892485},{"_id":"public/page/4/index.html","hash":"2d808e1d1ceaf07b7a76bde1b549e366b0bdcd12","modified":1654534892485},{"_id":"public/page/5/index.html","hash":"6979ba291cd8243dde32fd49bec9194f21bb470d","modified":1654534892485},{"_id":"public/tags/java/index.html","hash":"e431a0dceb91bc30df6271575496b9999c1c7a92","modified":1654534892485},{"_id":"public/tags/学习笔记/index.html","hash":"1b774b884d171ae3dac649825763b1f175fc30e3","modified":1654534892485},{"_id":"public/tags/设计模式/index.html","hash":"a52f5aa386c531cb77b3723dae3327123410e2cb","modified":1654534892485},{"_id":"public/tags/力扣/index.html","hash":"6b7e6dac02d8827ede686edd72b6c853e487565e","modified":1654534892485},{"_id":"public/tags/力扣/page/2/index.html","hash":"5b6c57fc06a7037dbff5086d0f3cb611be9d2da1","modified":1654534892485},{"_id":"public/tags/力扣/page/3/index.html","hash":"4a1565690e40e4d2977a63c28d400db8beeb7abe","modified":1654534892485},{"_id":"public/tags/docker/index.html","hash":"918a41b634859b69e4078bc7704c6be841523d70","modified":1654534892485},{"_id":"public/tags/it百科/index.html","hash":"6cee982735ceff6822319904e59474c817f6c0cb","modified":1654534892485},{"_id":"public/tags/git/index.html","hash":"9cad9d572765b3babafcab97e5849cfe2ad1c01b","modified":1654534892485},{"_id":"public/tags/安装部署/index.html","hash":"45dbd8dab3a871941bf708baa71cb4bd5720dd35","modified":1654534892485},{"_id":"public/tags/deepin/index.html","hash":"31722e7a28dca7f697707e34c7f7d1a23501d7e4","modified":1654534892485},{"_id":"public/tags/jpa/index.html","hash":"43c71f76eb26574d157f3f7f5b98d86d5b734edf","modified":1654534892485},{"_id":"public/tags/推理界的今天/index.html","hash":"2f49a9350efdaf8722b0ac1154b9e2fc42ff366a","modified":1654534892485},{"_id":"public/tags/maven/index.html","hash":"578640823c95fa209c13eb7d18f6ca0b7b5f33f7","modified":1654534892485},{"_id":"public/tags/nexus/index.html","hash":"75a8e85ac1b3bac9ccf3ed529507157db076d0c8","modified":1654534892485},{"_id":"public/tags/PHP/index.html","hash":"8af44a7a11fd488dd81b735dbda59d5cecbd8a7e","modified":1654534892485},{"_id":"public/tags/搜索引擎/index.html","hash":"27bd4bb663ea8aacd860021e4968f3637a946cee","modified":1654534892485},{"_id":"public/tags/python/index.html","hash":"a01710b9d4b69def90dc2b613f679871aceeadda","modified":1654534892485},{"_id":"public/tags/seata/index.html","hash":"1f4d9c97ef05f8c5fecb431ba0d9199d9c95c40d","modified":1654534892485},{"_id":"public/tags/破解/index.html","hash":"0c4d97afa0302a2a5c2eec37d905c6badf54c43b","modified":1654534892485},{"_id":"public/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1654534546141},{"_id":"public/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1654534546141},{"_id":"public/img/favicon.png","hash":"3cf89864b4f6c9b532522a4d260a2e887971c92d","modified":1654534546141},{"_id":"public/images/android-chrome-144x144.png","hash":"62564a3643cfa6fb273c8a024157012628168491","modified":1654534546141},{"_id":"public/images/android-chrome-256x256.png","hash":"0626670a4de7915a99c5bcacbf212624bd4912c3","modified":1654534546141},{"_id":"public/images/WeaselLong.jpg","hash":"fab9fb7f21bf0317822e797f180cdca70465c2d4","modified":1654534546141},{"_id":"public/images/android-chrome-36x36.png","hash":"0c38c2be1c7520f338a539cf71007e82597cb7c3","modified":1654534546141},{"_id":"public/images/android-chrome-48x48.png","hash":"cac966f3e18b09b2bdfba2ec1711e9a4e2956c8f","modified":1654534546141},{"_id":"public/images/android-chrome-72x72.png","hash":"fec1b740aeac629386583acd03c86e427465db97","modified":1654534546141},{"_id":"public/images/android-chrome-192x192.png","hash":"b3674eb9fb05d38a3ff7b7adefdd92a79a9df00b","modified":1654534546141},{"_id":"public/images/android-chrome-96x96.png","hash":"44217f9196beda75680510396d62e3f46570de05","modified":1654534546141},{"_id":"public/images/apple-touch-icon.png","hash":"2db1d9700cc4d39c9faa2e79a6a3e640a45509b0","modified":1654534546141},{"_id":"public/images/browserconfig.xml","hash":"98e5d423ebe8a3123a04e68d538c99d553258bd0","modified":1654534546141},{"_id":"public/images/butterfly.svg","hash":"1fb7b2e5a48fb663429a32ce4bbcbb2a5ef7c0fe","modified":1654534546141},{"_id":"public/images/favicon-16x16.png","hash":"ca564106af55069071884527b6185db58bf96dd3","modified":1654534546141},{"_id":"public/images/favicon-32x32.png","hash":"47b3855b48e2778c6dbf89f1101803f5991f4b43","modified":1654534546141},{"_id":"public/images/favicon.ico","hash":"4884f2459ca00339c373face66f1420ccbbc1379","modified":1654534546141},{"_id":"public/images/hero.svg","hash":"ad099d62bd58260d278a63882e6e162b6fdad910","modified":1654534546141},{"_id":"public/images/icp.svg","hash":"fa31510b45b3821fce80b8e148baff0bc39fe378","modified":1654534546141},{"_id":"public/images/logo.png","hash":"fbe28f905637f2bca7fe7e9ed99da71e4a79d3ae","modified":1654534546141},{"_id":"public/images/micp.svg","hash":"f1a8784f427e81150d634a0b30c248d93f7bfe4e","modified":1654534546141},{"_id":"public/images/mstile-150x150.png","hash":"addaf10e4bdb9216fc1cf980733d8a9712f9eab8","modified":1654534546141},{"_id":"public/images/safari-pinned-tab.svg","hash":"eae9b0a9ce7c5ce9b7c067132db956f90f199fa6","modified":1654534546141},{"_id":"public/images/site.webmanifest","hash":"146356a690b43afee9207b256ddd45c6a07a3eaf","modified":1654534546141},{"_id":"public/link/datagrip.png","hash":"aa317c6d8e0a85b6bca31517ecbbd50db6746e6a","modified":1654534546141},{"_id":"public/link/AnotherRedisDesktopManager.png","hash":"f5d4a37281a521e453578a5efb26fdb759118e07","modified":1654534546141},{"_id":"public/link/idea.png","hash":"6c89f00d2862f89837a1b432429b027914774743","modified":1654534546141},{"_id":"public/link/jdgui.png","hash":"fc2837240b55a63fa7a4d9163559be7d64bc702a","modified":1654534546141},{"_id":"public/link/jdk.png","hash":"1157487ecfd838bd52c0185aa41d491c4d8e2ded","modified":1654534546141},{"_id":"public/link/jui.png","hash":"38e01ae04f2aa135f7794f53227b15883942e5c7","modified":1654534546141},{"_id":"public/link/kafka.png","hash":"74ae6f9aa0843be5cd83e87141ca298dc65dd158","modified":1654534546141},{"_id":"public/link/nginx.png","hash":"ade7f203ca7daebb5c102ca94d72fb95ca3fa015","modified":1654534546141},{"_id":"public/link/pycharm.png","hash":"5ac649e6bf8cde216db8c36b4d4eba7f999f666c","modified":1654534546141},{"_id":"public/link/rabbitmq.png","hash":"590e3739240026e0ba88bf70ffe21474e9cf7f20","modified":1654534546141},{"_id":"public/link/xshell.png","hash":"2921bd09d9e10264cdf23565ce88a1321dffbcda","modified":1654534546141},{"_id":"public/link/webstorm.png","hash":"cb07d5812778c779914a0480f1693a95d9c19ae9","modified":1654534546141},{"_id":"public/link/yapi.png","hash":"ffb2431afae088e6d03d550791da2389f5720b92","modified":1654534546141},{"_id":"public/live2d-widget/LICENSE","hash":"31a3d460bb3c7d98845187c716a30db81c44b615","modified":1654534546141},{"_id":"public/live2d-widget/assets/screenshot-1.png","hash":"4bd4d97a1fcaa5deb3cea1c0a102a895a15af32f","modified":1654534546141},{"_id":"public/post/autowiredWaring/2022-03-28-11-30-49-1648438205(1).png","hash":"0c217381d7098337edf9754f311bd209f1884cf5","modified":1654534546141},{"_id":"public/post/createMyImage/2022-05-31-16-21-41-image.png","hash":"4ae41d952b69cd06bb94075e348b232b352c26ef","modified":1654534546141},{"_id":"public/post/createMyImage/2022-05-31-16-28-07-image.png","hash":"5251230a62f05321124b80634d79bc7bceacaabb","modified":1654534546141},{"_id":"public/post/createMyImage/2022-05-31-16-29-22-image.png","hash":"d470647e355cfe9ca384945572ab6530e628f137","modified":1654534546141},{"_id":"public/post/createMyImage/2022-05-31-16-32-54-image.png","hash":"d570f121fefc2932e7a06890904d3c4377b51b0d","modified":1654534546141},{"_id":"public/post/createMyImage/2022-05-31-17-11-22-image.png","hash":"864c3da1ce3160dfd190be3d1134a78ebaec203c","modified":1654534546141},{"_id":"public/post/createMyImage/2022-05-31-17-08-23-image.png","hash":"be1f8ae1a0a1db0d6d4a294fac7e1cc787450dc1","modified":1654534546141},{"_id":"public/post/createMyImage/2022-05-31-17-12-17-image.png","hash":"8e304520c099f92eaf08deb1ac0c73d7522b3c6b","modified":1654534546141},{"_id":"public/post/createMyImage/2022-05-31-17-22-07-image.png","hash":"1cf5824e8d5cf0ac2ffb8e7f75d66e7c64d80f7e","modified":1654534546141},{"_id":"public/post/createMyImage/2022-05-31-17-30-38-image.png","hash":"ed3b2fcb53772766681e360f74d1dfc61d48cd7b","modified":1654534546141},{"_id":"public/post/createMyImage/2022-06-01-08-37-12-image.png","hash":"e34ff1534a0d2660d7ec76bb9afd3617c898c069","modified":1654534546141},{"_id":"public/post/createMyImage/2022-06-01-08-39-28-image.png","hash":"3457a3a5060aaaffcbbd27a6f2269abd64c703e0","modified":1654534546141},{"_id":"public/post/createMyImage/2022-06-01-08-42-46-image.png","hash":"7908d63e2b60cdadf776d5e1793b0f06f8b92651","modified":1654534546141},{"_id":"public/post/day20220213/1536_ex1_upd.jpeg","hash":"de9d9cf87a5014da884edef0f4a3a567a16d4cbd","modified":1654534546141},{"_id":"public/post/day20220213/1536_ex2_upd.jpeg","hash":"b819f149e17daafe0cc271a5d6cb355b5d234416","modified":1654534546141},{"_id":"public/post/day20220310/bg.jpeg","hash":"24bb7768d31db65487b9cd5ba01e3d31eda6617f","modified":1654534546141},{"_id":"public/post/dockerComposeInstall/2022-04-21-00-40-56-image.png","hash":"0d47afecc00cbb600888a11e124645b460770d75","modified":1654534546141},{"_id":"public/post/dockerInstall/2022-04-20-23-44-07-image.png","hash":"b3e99f51d525ec902524f75af38df44447a7bd18","modified":1654534546141},{"_id":"public/post/dockerComposeInstall/2022-04-21-00-44-14-image.png","hash":"ba1fd6c9737bfac243dc38e32ee2f3d2c2e142d1","modified":1654534546141},{"_id":"public/post/dockerInstall/2022-04-20-23-50-06-image.png","hash":"f40c4d19cd1f7036cbc144b3b177d2bc648be327","modified":1654534546141},{"_id":"public/post/dockerInstall/2022-04-21-00-00-59-image.png","hash":"24d575e05211c2f466faa89267cc57d4ebcf8ed4","modified":1654534546141},{"_id":"public/post/dockerInstall/2022-04-21-00-05-16-image.png","hash":"56ed90def0ade353fef50236d0fd407f45d65c21","modified":1654534546141},{"_id":"public/post/dockerInstall/2022-04-21-00-22-21-image.png","hash":"314a5a66250e0678029ca9f55a66bbc71dd49431","modified":1654534546141},{"_id":"public/post/dockerInstall/2022-04-21-00-22-43-image.png","hash":"37d95518c4839850b8d1d2bb6dc02043081cc288","modified":1654534546141},{"_id":"public/post/iMySQLByDC/2022-04-24-16-20-33-image.png","hash":"f890b45fe46040dda344b08749da1be566d29ab3","modified":1654534546141},{"_id":"public/post/iMySQLByDC/2022-04-24-16-30-32-image.png","hash":"f798b153bb7e364626dc8912566de22e743b9e7e","modified":1654534546141},{"_id":"public/post/iMySQLByDC/2022-04-24-16-34-24-image.png","hash":"874ad4dbd651a6859fb7b94684f94f5f1b514949","modified":1654534546141},{"_id":"public/post/iMySQLByDC/img.png","hash":"a154e003401e3ac917e32d1731824c6c4ab326bd","modified":1654534546141},{"_id":"public/post/iNginxByDC/2022-04-21-01-03-03-image.png","hash":"565af23266ba46ee19135b091c55ea5638cb0bdf","modified":1654534546141},{"_id":"public/post/iNginxByDC/2022-04-21-19-59-02-image.png","hash":"e15ded843f6567e23641d791fdd52b623e5f3bed","modified":1654534546141},{"_id":"public/post/iNginxByDC/2022-04-21-20-12-55-image.png","hash":"e42497217ad3fc292988dd95907731fe23b31aaa","modified":1654534546141},{"_id":"public/post/iNginxByDC/2022-04-21-00-47-51-image.png","hash":"a81f7fa160f1a2e82ceaa114c5b26170013715b4","modified":1654534546141},{"_id":"public/post/iNginxByDC/2022-04-21-20-43-55-image.png","hash":"4b5363fba98028ab0549615a5be0d5a762896666","modified":1654534546141},{"_id":"public/post/iNginxByDC/2022-04-24-15-34-45-image.png","hash":"5440401e663dd9cb5166fbe0d8688cc4ea0b8ed9","modified":1654534546141},{"_id":"public/post/iRedisByDC/2022-04-24-16-57-51-image.png","hash":"774965d764291398c0a9d5c94aae5fa82dfb76f2","modified":1654534546141},{"_id":"public/post/iRedisByDC/2022-04-24-17-04-13-image.png","hash":"eb9dcf263aeec8efe82433dcfa08cb17a1929664","modified":1654534546141},{"_id":"public/post/iRedisByDC/2022-04-24-17-10-52-image.png","hash":"0d0e7785f877e326a85e078360fafae5a7b99471","modified":1654534546141},{"_id":"public/post/inHexoByOsDeepin/image-20220603141423311.png","hash":"9313f2359a88faab58652338f08d650f19919571","modified":1654534546141},{"_id":"public/post/inHexoByOsDeepin/image-20220603141527169.png","hash":"a913b625788822260e46c270c77acd5c41e0e816","modified":1654534546141},{"_id":"public/post/inHexoByOsDeepin/image-20220603141613298.png","hash":"8545edca992dde1f01e964315ecc95b06f992db4","modified":1654534546141},{"_id":"public/post/inGitByOsDeepin/image-20220603103959058.png","hash":"17444b7368166b703a6f56b4ab7936803737e35e","modified":1654534546141},{"_id":"public/post/inGitByOsDeepin/image-20220603104225094.png","hash":"7a1672ef94bb682a5ce985f5afcb3713c987bc24","modified":1654534546141},{"_id":"public/post/inGitByOsDeepin/image-20220603104335664.png","hash":"6abb43bf927d0f8c2b24464594b5d4763dda3bae","modified":1654534546141},{"_id":"public/post/inGitByOsDeepin/image-20220603104447770.png","hash":"696ad12aca317a524c6a7f5547499e76dfec0090","modified":1654534546141},{"_id":"public/post/inJdkByOsDeepin/image-20220603020439325.png","hash":"790b43ea9372085ab2c553827f3df9e3e053ff5a","modified":1654534546141},{"_id":"public/post/inJdkByOsDeepin/image-20220603021925685.png","hash":"712a9cf5a1fc6cd0a76781f320388e9cf081cc0c","modified":1654534546141},{"_id":"public/post/inJdkByOsDeepin/image-20220603022022217.png","hash":"09abce0843001799cf50e7e27f86871a64cf040f","modified":1654534546141},{"_id":"public/post/inMavenByOsDeepin/image-20220603121051155.png","hash":"4a128ccb94f4e110701dfab7d6007a7ebaa37ab5","modified":1654534546141},{"_id":"public/post/inMavenByOsDeepin/image-20220603121153205.png","hash":"ca51154c33ba40c78077cf674f9b79f7b276f0a0","modified":1654534546141},{"_id":"public/post/inMavenByOsDeepin/image-20220603121458972.png","hash":"f4ef4eeee85ae0e72b5c3fd2543a9efd24adbc3a","modified":1654534546141},{"_id":"public/post/inMavenByOsDeepin/image-20220603122200505.png","hash":"4273fea22013bac46f0ed9ea7c1b60510830903c","modified":1654534546141},{"_id":"public/post/inMavenByOsDeepin/image-20220603122859128.png","hash":"1a0c7050801b36f6f63ee1da19b41f04570b7ec1","modified":1654534546141},{"_id":"public/post/inNodejsByOsDeepin/image-20220603112153367.png","hash":"d01452cfa394a860ca34b8873c00cbd71bf167c6","modified":1654534546141},{"_id":"public/post/inNodejsByOsDeepin/image-20220603112904096.png","hash":"08f3926bb92bcc5578fb69324c4896973d6f423d","modified":1654534546141},{"_id":"public/post/inNodejsByOsDeepin/image-20220603113034176.png","hash":"f6fc00a8c92fdfd68610cefc2dfb50b6e682ae10","modified":1654534546141},{"_id":"public/post/inNodejsByOsDeepin/image-20220603113454241.png","hash":"be715aea9d83ee0a3478f759c7b7ac7cc8031b0a","modified":1654534546141},{"_id":"public/post/inRKE/2022-05-04-17-23-24-image.png","hash":"6d504a297ee975da828d2510cc8890dce079f257","modified":1654534546141},{"_id":"public/post/inRKE/2022-05-04-17-27-23-image.png","hash":"f80cec0f0beeb880b48d16d4a376246fe3242c0b","modified":1654534546141},{"_id":"public/post/inRKE/2022-05-04-17-33-11-image.png","hash":"faeabb0c336f114f6c98eb4123fc366613e71825","modified":1654534546141},{"_id":"public/post/inRKE/2022-05-04-17-38-29-image.png","hash":"e4a2902c21e75741d875241d065b8cfca3bb7c1e","modified":1654534546141},{"_id":"public/post/inRKE/2022-05-04-17-40-07-image.png","hash":"028e09f9e4334af553203e01717c686dff71d903","modified":1654534546141},{"_id":"public/post/inRKE/2022-05-04-19-41-19-image.png","hash":"da40b70305fa081879110c78b2e573d173c20992","modified":1654534546141},{"_id":"public/post/inRKE/2022-05-04-19-48-18-image.png","hash":"85d4fb2055ad0d2f98b764a29c5a744eeca9521c","modified":1654534546141},{"_id":"public/post/inRKE/2022-05-04-20-50-13-image.png","hash":"958a664b5deff895b845744b6e834d4baaebdfce","modified":1654534546141},{"_id":"public/post/inVueByOsDeepin/image-20220603114219499.png","hash":"640ddf8c50c322fd1421d26e153f26fef7b7c1ea","modified":1654534546141},{"_id":"public/post/inVueByOsDeepin/image-20220603114513508.png","hash":"01e1bdd13f1a8e8e123a78936d7ccd2fe4344503","modified":1654534546141},{"_id":"public/post/inVueByOsDeepin/image-20220603114616673.png","hash":"24ec44631948a9c73628890531c57e97a9fce692","modified":1654534546141},{"_id":"public/post/influxdbInstall/2022-03-12-18-28-41-image.png","hash":"3fa1dbce09fd207d6aa4cd9f86fd8aa9fb99c4ff","modified":1654534546141},{"_id":"public/post/influxdbInstall/2022-03-12-18-41-44-image.png","hash":"be41061f6ecf06d4d95850cdd3062e831f566a89","modified":1654534546141},{"_id":"public/post/influxdbInstall/2022-03-12-18-42-25-image.png","hash":"408a578434ebe6970cebd6e69070f82b44c1193e","modified":1654534546141},{"_id":"public/post/influxdbInstall/2022-03-12-18-52-39-image.png","hash":"5718dac0bc8948fa4ae9e25778ca98c7f0d5ffbb","modified":1654534546141},{"_id":"public/post/influxdbInstall/2022-03-12-18-54-58-image.png","hash":"c0e0e6cc812a7b63e0d01a39c798c52127d22fb5","modified":1654534546141},{"_id":"public/post/influxdbInstall/2022-03-12-18-56-23-image.png","hash":"7f86b02b8ec66065bd21f291d6a38613cca15c43","modified":1654534546141},{"_id":"public/post/nexusCreate/1A658347.png","hash":"928311dbf17bb72a8c1a4f9714e7791fc5ffe65c","modified":1654534546141},{"_id":"public/post/nexusCreate/image-20220112202513617.png","hash":"03541f6127dcc4d03b8f2b7aa9a45b6e7ee69558","modified":1654534546141},{"_id":"public/post/nexusCreate/image-20220112203927784.png","hash":"c8ecb9d0600f00dae3f2e6230c81fc2775ea10ae","modified":1654534546141},{"_id":"public/post/nexusCreate/image-20220112204407509.png","hash":"ebf83c4522609999971402b982bdf86967ca6adf","modified":1654534546141},{"_id":"public/post/nexusCreate/image-20220112204921432.png","hash":"7ba35c07910d9b2799e625ba2b7b11036652f3d6","modified":1654534546141},{"_id":"public/post/nexusCreate/image-20220112205557025.png","hash":"da96eb5aaf2357e3d5a89dd77d762748b72d38c1","modified":1654534546141},{"_id":"public/post/nexusCreate/image-20220112212243615.png","hash":"b484e6b4a9cfe1f063de17080457e70707f46fed","modified":1654534546141},{"_id":"public/post/nexusCreate/image-20220112214220341.png","hash":"f5d92dc47282b668be4b4e4061f0c69cb254f900","modified":1654534546141},{"_id":"public/post/nexusCreate/image-20220112214506743.png","hash":"62ad6f02e00f67761867c51bbcb4b64a1ed0e2f1","modified":1654534546141},{"_id":"public/post/nexusCreate/image-20220112214637528.png","hash":"0f5ba6e53179e542c5717cb0c63d7251f60ea688","modified":1654534546141},{"_id":"public/post/nexusCreate/image-20220112214717867.png","hash":"dabc261030d2e8d3237fca662109b1ed395e1284","modified":1654534546141},{"_id":"public/post/nexusCreate/image-20220112214820826.png","hash":"966c02c84ac0cfcb9c4d4a35c377f266a92726c4","modified":1654534546141},{"_id":"public/post/nexusCreate/image-20220112214831857.png","hash":"e71ee4b6f71ebca05168782a2b26511fcc4a0738","modified":1654534546141},{"_id":"public/post/nexusCreate/image-20220112215708898.png","hash":"61138282d1e7e9a18dbddb6bfdaae6fb427f4700","modified":1654534546141},{"_id":"public/post/nexusCreate/image-20220112215809631.png","hash":"2e94631128761f962f3beea80fd1177ea90a3cd3","modified":1654534546141},{"_id":"public/post/nexusCreate/image-20220112215951755.png","hash":"bf466e4f5a3724bf3a2c5e8d6d02b83c9cb1b432","modified":1654534546141},{"_id":"public/post/nexusCreate/image-20220112221637473.png","hash":"155b77f021e8bc65e9980105c8486fa789e91bab","modified":1654534546141},{"_id":"public/post/phpDeploy/2022-04-30-16-52-00-image.png","hash":"78f00da2b952b0676b5b1d6c3250194fec1d44c8","modified":1654534546141},{"_id":"public/post/question20220310-1/bg.jpeg","hash":"a11c1466b533dd62d55697b3aa42e9c128103be7","modified":1654534546141},{"_id":"public/post/sublimeText4Purchase/image-20220114155341371.png","hash":"44757f86776c7e43375c9b8655b9c01fca5521f8","modified":1654534546141},{"_id":"public/post/sublimeText4Purchase/image-20220114155558214.png","hash":"035ce7c26f51fadab6eb64ad45a6cd4a42e4a8af","modified":1654534546141},{"_id":"public/images/avatar.jpeg","hash":"96aafacca4dee9d5244a865f97d388b1e2e6da5a","modified":1654534546141},{"_id":"public/link/powerjob.ico","hash":"ebf4481f14c87634ca4b2ef2e5de303a46f60af3","modified":1654534546141},{"_id":"public/post/createMyImage/2022-06-01-08-38-34-image.png","hash":"86b3d69c847c49e7908563039854a83d61ab6b5b","modified":1654534546141},{"_id":"public/post/dockerInstall/2022-04-20-23-47-39-image.png","hash":"fb3321aa7660367f9cf41058b598ff510ed059c5","modified":1654534546141},{"_id":"public/post/iNginxByDC/2022-04-21-00-46-47-image.png","hash":"87837ae00e5fcccb0e374366793ccec8991b264e","modified":1654534546141},{"_id":"public/post/iRedisByDC/2022-04-24-17-12-56-image.png","hash":"55aac90a9870e185db2014f9f43c13f08cec54bb","modified":1654534546141},{"_id":"public/post/iRedisByDC/2022-04-24-17-14-15-image.png","hash":"79d3880cd3bfb22ef3d7d494798cdb2e29374201","modified":1654534546141},{"_id":"public/post/inJdkByOsDeepin/image-20220603015920009.png","hash":"864aa68fc1e26033cdf4de3ccbb3abd4ede6a19a","modified":1654534546141},{"_id":"public/post/inMavenByOsDeepin/image-20220603115702494.png","hash":"784560068a7f29dd02457d92e5677025a38253d3","modified":1654534546141},{"_id":"public/post/inMavenByOsDeepin/image-20220603120000596.png","hash":"1e749457cd64d21581e3aaa34b2ea55471ea7249","modified":1654534546141},{"_id":"public/post/inMavenByOsDeepin/image-20220603120156243.png","hash":"4b92f66bd42df8ab20347b338be879825946fae4","modified":1654534546141},{"_id":"public/post/inMavenByOsDeepin/image-20220603120347751.png","hash":"37686d8df1452bbfe4da9b8fc0125cd124f84d74","modified":1654534546141},{"_id":"public/post/inNodejsByOsDeepin/image-20220603110634896.png","hash":"2aeb954b5dde22f0c1d9cebaaaa91fd97f381e79","modified":1654534546141},{"_id":"public/post/inNodejsByOsDeepin/image-20220603111656347.png","hash":"48bc5f36ac962832c478d854841d1e2026143651","modified":1654534546141},{"_id":"public/post/inNodejsByOsDeepin/image-20220603112001543.png","hash":"7a4deca5ffd18d6981417ea266e5d76d92a6c3be","modified":1654534546141},{"_id":"public/post/inRKE/2022-05-04-17-46-31-image.png","hash":"3547f32f4ed6362d37df5f8d5a15f009d85f1e3c","modified":1654534546141},{"_id":"public/post/inRKE/2022-05-04-19-47-43-image.png","hash":"527230ce3ecd6cb907f078f2b6be21b9d8996323","modified":1654534546141},{"_id":"public/post/inRKE/2022-05-04-20-50-57-image.png","hash":"8b1a84bab9115a7d0cd045ef187e5d5dda6e7a37","modified":1654534546141},{"_id":"public/post/nexusCreate/image-20220112211546086.png","hash":"d0de4224b0a8d83811956f7f7143d6632e8ccd95","modified":1654534546141},{"_id":"public/post/nexusCreate/image-20220112211948810.png","hash":"e71015033a0d78d97af65ecbae655c6ba2c4e7bf","modified":1654534546141},{"_id":"public/post/nexusCreate/image-20220112212410144.png","hash":"af039630b66495f82f5735076964e7edee625f38","modified":1654534546141},{"_id":"public/post/nexusCreate/image-20220112220131151.png","hash":"c3ea21681a8c3c6b8678d1cfdddb8cfc016c023b","modified":1654534546141},{"_id":"public/post/nexusCreate/image-20220112220511830.png","hash":"23987ac51f17611935d69a4ad67e185d6800baf1","modified":1654534546141},{"_id":"public/post/nexusCreate/image-20220112220741095.png","hash":"a6eb80658e6691867633869feda9e49aa290865d","modified":1654534546141},{"_id":"public/post/nexusCreate/image-20220112221401367.png","hash":"ba0b1b60a0b7553166311310a158e7a11f35dac1","modified":1654534546141},{"_id":"public/post/nexusCreate/image-20220112221517343.png","hash":"09f13482ac33ce11d6d809c1be26b36da0059414","modified":1654534546141},{"_id":"public/post/nexusCreate/image-20220112221849871.png","hash":"31e9d8fe4f0d50b1157609adb7b73e192361e043","modified":1654534546141},{"_id":"public/post/nexusCreate/image-20220112224909515.png","hash":"273802e42499373e429f2f66d60ce144b2f21249","modified":1654534546141},{"_id":"public/post/nexusCreate/image-20220112223312451.png","hash":"682c3c7dad92d974d9cfdb0a87acb80bbbf43818","modified":1654534546141},{"_id":"public/post/nexusCreate/image-20220112230645860.png","hash":"5f46697b3c40e5aeefb0c473b326c84286070cff","modified":1654534546141},{"_id":"public/post/phpDeploy/2022-04-30-16-54-56-image.png","hash":"7256e69e5f893b0c0663bd993404d4b654777e41","modified":1654534546141},{"_id":"public/post/phpDeploy/2022-04-30-20-12-36-image.png","hash":"7c97b99497fe1ee57e269b8b8690b00de14664be","modified":1654534546141},{"_id":"public/post/phpDeploy/2022-04-30-20-14-03-image.png","hash":"101a65d97dc8c4fb09965349204a0019089cee11","modified":1654534546141},{"_id":"public/post/phpDeploy/2022-04-30-20-20-22-image.png","hash":"ea68545541589c830ac567b0218311373cd6a268","modified":1654534546141},{"_id":"public/post/phpDeploy/2022-04-30-20-32-37-image.png","hash":"b23f67afff54284ae43532a4b5ede11bce6db494","modified":1654534546141},{"_id":"public/post/phpDeploy/2022-04-30-20-42-16-image.png","hash":"29d208d6dc4f4db8409cab4897301787d29ee29c","modified":1654534546141},{"_id":"public/post/phpDeploy/2022-04-30-20-44-58-image.png","hash":"1e95e69771e42ebe97950ac7daf5c22c209319c6","modified":1654534546141},{"_id":"public/post/sublimeText4Purchase/image-20220114155104130.png","hash":"fa188c572dd0901c1dd7db14570321fd874249cc","modified":1654534546141},{"_id":"public/post/sublimeText4Purchase/image-20220114155245648.png","hash":"1b3aa8df2d43f623d8e789e50e2cceddf5cd44e0","modified":1654534546141},{"_id":"public/css/var.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1654534546141},{"_id":"public/js/utils.js","hash":"0b95daada72abb5d64a1e3236049a60120e47cca","modified":1654534546141},{"_id":"public/js/search/algolia.js","hash":"ce8131b712dca80f289015aef75f86e727f62981","modified":1654534546141},{"_id":"public/css/index.css","hash":"06696014be9ccbe87870f3da3bd37f5b01cd1dc2","modified":1654534546141},{"_id":"public/js/main.js","hash":"04efcbd28b37875cfec88eb87cab7256a9ebb327","modified":1654534546141},{"_id":"public/js/tw_cn.js","hash":"00053ce73210274b3679f42607edef1206eebc68","modified":1654534546141},{"_id":"public/images/alipay.png","hash":"300c66513a784f35174b5db09fe96e49c501cec0","modified":1654534546141},{"_id":"public/images/wechat.png","hash":"1c7c579dca0c8612445acec0d2fc56a07fa73e74","modified":1654534546141},{"_id":"public/post/day20220118/bg.jpeg","hash":"a88c53650ff208c971e622f2dac860784f898969","modified":1654534546141},{"_id":"public/post/day20220120/bg.jpeg","hash":"ef479b44558abc0915d7ea8f30de5d33eba6f565","modified":1654534546141},{"_id":"public/post/dockerComposeInstall/2022-04-21-00-36-46-image.png","hash":"2d57174da3c40ffa87f0cd7e30b7d41bc3ea8fa6","modified":1654534546141},{"_id":"public/post/iMySQLByDC/2022-04-24-16-45-29-image.png","hash":"107266fff785918a0aff977594db78a41a09aa6b","modified":1654534546141},{"_id":"public/post/inGitByOsDeepin/image-20220603103757605.png","hash":"1b52de802e6bf4c92aa4571aa98e30d8e37e785b","modified":1654534546141},{"_id":"public/post/inVueByOsDeepin/image-20220603114033774.png","hash":"eb2fd739292f3d735e3c68b8973df545b485de2c","modified":1654534546141},{"_id":"public/post/leetcode204/Sieve_of_Eratosthenes_animation.gif","hash":"8d6f004fe548807b5774a584caae2c7f2880a3e6","modified":1654534546141},{"_id":"public/post/sublimeText4Purchase/img.png","hash":"048beb0cb34a7ebb5d85fefd94c6d53f791cc5d5","modified":1654534546141},{"_id":"public/images/bg.jpeg","hash":"c2b5ac45b440a9bcf08951ff4b83eea2c502daea","modified":1654534546141},{"_id":"public/live2d-widget/assets/screenshot-3.png","hash":"f89c6fdf44008e7d3c7a1aafe65dc39b212edb6c","modified":1654534546141},{"_id":"public/post/day20220119/bg.jpeg","hash":"d849225c11c973e549c1c6706025671495341889","modified":1654534546141},{"_id":"public/post/inRKE/2022-05-04-16-24-28-image.png","hash":"c083f73f3756e6ddda3d182ceb0169821f266542","modified":1654534546141},{"_id":"public/post/phpDeploy/2022-04-30-20-35-23-image.png","hash":"a68e66f63d78231b0419cf952d7aae45242c3b04","modified":1654534546141},{"_id":"public/post/sublimeText4Purchase/bg.jpeg","hash":"b5ea7fcebc03e8ab5e3008ec7d65c71536ba1b3c","modified":1654534546141},{"_id":"public/post/sublimeText4Purchase/image-20220114153619254.png","hash":"8b0511461b8b0717aec5536339ba0f3692d42024","modified":1654534546141},{"_id":"public/post/day20220121/bg.jpeg","hash":"f4d28cd025fd48cb31a1541b1dc426abe2a208ac","modified":1654534546141},{"_id":"public/post/pyControl/bg.jpeg","hash":"c43f58191b438e23c0b4239cae3783fb7a19f508","modified":1654534546141},{"_id":"public/post/pyListSort/bg.jpeg","hash":"6d4e40b2505465124e359f0a07bf98b661844783","modified":1654534546141},{"_id":"public/live2d-widget/assets/screenshot-2.png","hash":"76b844653136184c573b3632e12296e008a7ff5c","modified":1654534546141},{"_id":"public/post/nexusCreate/image-20220112230213213.png","hash":"ac490f98b757bb557ebfb3b0fc4be1df6e53464c","modified":1654534546141},{"_id":"public/post/jpaCompositePK/bg.jpg","hash":"af3ff6b0eb635ed02714edb5af1c0f6fde48c3f5","modified":1654534546141},{"_id":"public/post/nexusCreate/bg.jpeg","hash":"8bbae5df02ef58fab4c03dabc58765994e6d5d4b","modified":1654534546141},{"_id":"public/post/sublimeText4Purchase/image-20220114154843108.png","hash":"a3b9f1acf5cc2c26651de90fa81c397a07d64437","modified":1654534546141},{"_id":"public/post/sublimeText4Purchase/image-20220114154528250.png","hash":"86088922bd6dc90ae61f5c4e465a0586ee00c259","modified":1654534546141},{"_id":"public/images/gjh.png","hash":"eb8d94df48ebed96df0a5f18dfdb6d62b2c3eac1","modified":1654534546141}],"Category":[{"name":"java","_id":"cl42z5h5g00043gn66vfr2c22"},{"name":"设计模式","_id":"cl42z5h5o000c3gn6eq0c404b"},{"name":"算法","_id":"cl42z5h5r000k3gn6aze31mnl"},{"name":"docker","_id":"cl42z5h67001f3gn6a06jcrmg"},{"name":"it百科","_id":"cl42z5h6a001n3gn67hh47i4j"},{"name":"力扣","parent":"cl42z5h5r000k3gn6aze31mnl","_id":"cl42z5h6d001y3gn6eia98vaz"},{"name":"每日一题","parent":"cl42z5h6d001y3gn6eia98vaz","_id":"cl42z5h7h00523gn61eecb9s7"},{"name":"git","_id":"cl42z5h88007g3gn63nh40je4"},{"name":"安装部署","_id":"cl42z5h8a007s3gn60wul9r33"},{"name":"云原生","_id":"cl42z5h8d008e3gn6fl248hoo"},{"name":"jpa","parent":"cl42z5h5g00043gn66vfr2c22","_id":"cl42z5h8j009o3gn669fq2z8e"},{"name":"推理","_id":"cl42z5h8m00a03gn60343d8ua"},{"name":"nexus","_id":"cl42z5h8o00af3gn62frjawuv"},{"name":"PHP","_id":"cl42z5h8o00ai3gn614206tw4"},{"name":"网站建设","_id":"cl42z5h8o00am3gn69d1xhkww"},{"name":"python","_id":"cl42z5h8p00ap3gn689ld824b"},{"name":"问题记录","_id":"cl42z5h8q00b43gn67u7i0adg"},{"name":"seata","parent":"cl42z5h5g00043gn66vfr2c22","_id":"cl42z5h8q00b73gn675xf4tld"},{"name":"开发工具","_id":"cl42z5h8r00ba3gn66o3kajza"},{"name":"周赛","parent":"cl42z5h6d001y3gn6eia98vaz","_id":"cl42z5h8r00bc3gn654ufhr6u"}],"Data":[{"_id":"link","data":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}]},{"_id":"valine","data":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"}}],"Page":[{"_content":"- class_name: 博客相关\n  link_list:\n    - name: Hexo\n      link: https://hexo.io/zh-tw/\n      avatar: https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg\n      descr: 快速、简单且强大的网站框架\n    - name: Valine\n      link: https://valine.js.org/\n      avatar: https://valine.js.org/images/valine.png\n      descr: 一款快速、简洁且高效的无后端评论系统\n    - name: 百度统计\n      link: https://tongji.baidu.com/\n      avatar: https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690\n      descr: 领先的中文网站分析平台\n    - name: 墨滴编辑器\n      link: https://editor.mdnice.com/\n      avatar: https://mdnice.com/favicon.svg\n      descr: 可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式\n    - name: v-md-editor\n      link: https://ckang1229.gitee.io/vue-markdown-editor/zh/\n      avatar:\n      descr: Vue的一款markdown插件（支持vue2和vue3）\n\n- class_name: 视频学习\n  link_list:\n    - name: 咕泡云课堂\n      link: https://ke.gupaoedu.cn/\n      avatar: https://ke.gupaoedu.cn/favicon.ico\n      descr: 咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播\n    - name: 谷粒学苑\n      link: https://www.gulixueyuan.com/\n      avatar: https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6\n      descr: 谷粒学苑为尚硅谷旗下IT课程在线学习平台\n\n- class_name: 开发工具\n  link_list:\n    - name: jdk\n      link: https://www.oracle.com/java/technologies/downloads/\n      avatar: https://blog.huangge1199.cn/link/jdk.png\n      descr: Java语言的软件开发工具包\n    - name: IDEA\n      link: https://www.jetbrains.com/zh-cn/idea/\n      avatar: https://blog.huangge1199.cn/link/idea.png\n      descr: 功能强大、符合人体工程学的 Java IDE\n    - name: webstorm\n      link: https://www.jetbrains.com/zh-cn/webstorm/\n      avatar: https://blog.huangge1199.cn/link/webstorm.png\n      descr: 一个适用于JavaScript 和相关技术的集成开发环境\n    - name: datagrip\n      link: https://www.jetbrains.com/zh-cn/datagrip/\n      avatar: https://blog.huangge1199.cn/link/datagrip.png\n      descr: 由JetBrains 开发的数据库和SQL 跨平台IDE\n    - name: pyCharm\n      link: https://www.jetbrains.com/zh-cn/pycharm/\n      avatar: https://blog.huangge1199.cn/link/pycharm.png\n      descr: JetBrains为专业开发者提供的Python IDE\n    - name: xshell\n      link: https://www.xshell.com/zh/xshell/\n      avatar: https://blog.huangge1199.cn/link/xshell.png\n      descr: 业界最强大的SSH客户机\n    - name: winscp\n      link: https://winscp.net/eng/index.php\n      avatar: https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990\n      descr: 一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端\n    - name: Another Redis Desktop Manager\n      link: https://github.com/qishibo/AnotherRedisDesktopManager\n      avatar: https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png\n      descr: 更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值\n    - name: JD-GUI\n      link: http://java-decompiler.github.io/\n      avatar: https://blog.huangge1199.cn/link/jdgui.png\n      descr: 一款功能十分强大的JAVA反编译工具\n\n- class_name: 后端开发\n  link_list:\n    - name: sa-token\n      link: https://sa-token.dev33.cn/\n      avatar: https://sa-token.dev33.cn/doc/logo.png\n      descr: 一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！\n    - name: sentinel\n      link: https://sentinelguard.io/\n      avatar: https://sentinelguard.io/img/sentinel.ico\n      descr: 面向分布式服务架构的高可用流量控制组件\n    - name: dubbo\n      link: https://dubbo.apache.org/\n      avatar: https://dubbo.apache.org/favicons/favicon.ico\n      descr: 一款高性能、轻量级的开源服务框架\n    - name: nacos\n      link: https://nacos.io/\n      avatar: https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png\n      descr: 一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台\n    - name: nginx\n      link: https://nginx.org/\n      avatar: https://blog.huangge1199.cn/link/nginx.png\n      descr: 反向代理服务器\n    - name: zookeeper\n      link: https://zookeeper.apache.org/\n      avatar: https://zookeeper.apache.org/images/zookeeper_small.gif\n      descr: 为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册\n    - name: kafka\n      link: https://kafka.apache.org/\n      avatar: https://blog.huangge1199.cn/link/kafka.png\n      descr: 一种分布式的，基于发布 / 订阅的消息系统\n    - name: rabbitmq\n      link: https://www.rabbitmq.com/\n      avatar: https://blog.huangge1199.cn/link/rabbitmq.png\n      descr: 消息队列\n    - name: rocketmq\n      link: https://rocketmq.apache.org/\n      avatar: https://rocketmq.apache.org/assets/images/rmq-logo.png\n      descr: 消息队列\n    - name: justauth\n      link: https://justauth.wiki/\n      avatar: https://justauth.wiki/logo.png\n      descr: 开箱即用的整合第三方登录的开源组件\n    - name: XXL-JOB\n      link: https://www.xuxueli.com/xxl-job/\n      avatar: https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg\n      descr: 分布式任务调度平台\n    - name: MQTT\n      link: https://www.emqx.com/zh/mqtt\n      avatar: https://www.emqx.com/favicon.ico\n      descr: MQTT - 轻量级的物联网消息传输协议\n    - name: powerjob\n      link: http://www.powerjob.tech/\n      avatar: https://blog.huangge1199.cn/link/powerjob.ico\n      descr: 新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。\n\n- class_name: 前端开发\n  link_list:\n    - name: vue\n      link: https://cn.vuejs.org/\n      avatar: https://cn.vuejs.org/images/logo.svg\n      descr: 是一套用于构建用户界面的渐进式框架\n    - name: element\n      link: https://element.eleme.cn/#/zh-CN\n      avatar: https://element.eleme.cn/favicon.ico\n      descr: 一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库\n    - name: Element Plus\n      link: https://element-plus.org/zh-CN/\n      avatar: https://element-plus.org/images/element-plus-logo-small.svg\n      descr: 一个 Vue 3 UI 框架 | Element Plus\n    - name: vant\n      link: https://youzan.github.io/vant-weapp/#/home\n      avatar: https://img.yzcdn.cn/vant/logo.png\n      descr: 轻量、可靠的小程序 UI 组件库\n    - name: nuxt.js\n      link: https://nuxtjs.org/\n      avatar: https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png\n      descr: 轻量、可靠的小程序 UI 组件库\n    - name: echarts\n      link: https://echarts.apache.org/\n      avatar: https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1\n      descr: 轻量、可靠的小程序 UI 组件库\n    - name: jQuery UI\n      link: https://jui.org/\n      avatar: https://blog.huangge1199.cn/link/jui.png\n      descr: 简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)\n    - name: mavonEditor\n      link: http://www.mavoneditor.com/\n      avatar:\n      descr: Vue的一款markdown插件\n    - name: Ant Design of Vue\n      link: https://www.antdv.com/\n      avatar: https://www.antdv.com/assets/logo.1ef800a8.svg\n      descr: ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。\n\n- class_name: 辅助工具\n  link_list:\n    - name: YAPI\n      link: http://yapi.smart-xwork.cn/\n      avatar: https://blog.huangge1199.cn/link/yapi.png\n      descr: 高效、易用、功能强大的API管理平台\n    - name: 恒星播放器\n      link: https://www.stellarplayer.com/\n      avatar: https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png\n      descr: 一款纯粹专注的播放器\n    - name: NPS\n      link: https://ehang-io.github.io/nps/\n      avatar: https://ehang-io.github.io/nps/logo.svg\n      descr: 一款轻量级、高性能、功能强大的内网穿透代理服务器\n    - name: Ventoy\n      link: https://www.ventoy.net/\n      avatar: https://www.ventoy.net/static/img/ventoy.png?v=1\n      descr: 新一代多系统启动U盘解决方案\n\n","source":" _data/link.yml","raw":"- class_name: 博客相关\n  link_list:\n    - name: Hexo\n      link: https://hexo.io/zh-tw/\n      avatar: https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg\n      descr: 快速、简单且强大的网站框架\n    - name: Valine\n      link: https://valine.js.org/\n      avatar: https://valine.js.org/images/valine.png\n      descr: 一款快速、简洁且高效的无后端评论系统\n    - name: 百度统计\n      link: https://tongji.baidu.com/\n      avatar: https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690\n      descr: 领先的中文网站分析平台\n    - name: 墨滴编辑器\n      link: https://editor.mdnice.com/\n      avatar: https://mdnice.com/favicon.svg\n      descr: 可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式\n    - name: v-md-editor\n      link: https://ckang1229.gitee.io/vue-markdown-editor/zh/\n      avatar:\n      descr: Vue的一款markdown插件（支持vue2和vue3）\n\n- class_name: 视频学习\n  link_list:\n    - name: 咕泡云课堂\n      link: https://ke.gupaoedu.cn/\n      avatar: https://ke.gupaoedu.cn/favicon.ico\n      descr: 咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播\n    - name: 谷粒学苑\n      link: https://www.gulixueyuan.com/\n      avatar: https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6\n      descr: 谷粒学苑为尚硅谷旗下IT课程在线学习平台\n\n- class_name: 开发工具\n  link_list:\n    - name: jdk\n      link: https://www.oracle.com/java/technologies/downloads/\n      avatar: https://blog.huangge1199.cn/link/jdk.png\n      descr: Java语言的软件开发工具包\n    - name: IDEA\n      link: https://www.jetbrains.com/zh-cn/idea/\n      avatar: https://blog.huangge1199.cn/link/idea.png\n      descr: 功能强大、符合人体工程学的 Java IDE\n    - name: webstorm\n      link: https://www.jetbrains.com/zh-cn/webstorm/\n      avatar: https://blog.huangge1199.cn/link/webstorm.png\n      descr: 一个适用于JavaScript 和相关技术的集成开发环境\n    - name: datagrip\n      link: https://www.jetbrains.com/zh-cn/datagrip/\n      avatar: https://blog.huangge1199.cn/link/datagrip.png\n      descr: 由JetBrains 开发的数据库和SQL 跨平台IDE\n    - name: pyCharm\n      link: https://www.jetbrains.com/zh-cn/pycharm/\n      avatar: https://blog.huangge1199.cn/link/pycharm.png\n      descr: JetBrains为专业开发者提供的Python IDE\n    - name: xshell\n      link: https://www.xshell.com/zh/xshell/\n      avatar: https://blog.huangge1199.cn/link/xshell.png\n      descr: 业界最强大的SSH客户机\n    - name: winscp\n      link: https://winscp.net/eng/index.php\n      avatar: https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990\n      descr: 一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端\n    - name: Another Redis Desktop Manager\n      link: https://github.com/qishibo/AnotherRedisDesktopManager\n      avatar: https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png\n      descr: 更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值\n    - name: JD-GUI\n      link: http://java-decompiler.github.io/\n      avatar: https://blog.huangge1199.cn/link/jdgui.png\n      descr: 一款功能十分强大的JAVA反编译工具\n\n- class_name: 后端开发\n  link_list:\n    - name: sa-token\n      link: https://sa-token.dev33.cn/\n      avatar: https://sa-token.dev33.cn/doc/logo.png\n      descr: 一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！\n    - name: sentinel\n      link: https://sentinelguard.io/\n      avatar: https://sentinelguard.io/img/sentinel.ico\n      descr: 面向分布式服务架构的高可用流量控制组件\n    - name: dubbo\n      link: https://dubbo.apache.org/\n      avatar: https://dubbo.apache.org/favicons/favicon.ico\n      descr: 一款高性能、轻量级的开源服务框架\n    - name: nacos\n      link: https://nacos.io/\n      avatar: https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png\n      descr: 一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台\n    - name: nginx\n      link: https://nginx.org/\n      avatar: https://blog.huangge1199.cn/link/nginx.png\n      descr: 反向代理服务器\n    - name: zookeeper\n      link: https://zookeeper.apache.org/\n      avatar: https://zookeeper.apache.org/images/zookeeper_small.gif\n      descr: 为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册\n    - name: kafka\n      link: https://kafka.apache.org/\n      avatar: https://blog.huangge1199.cn/link/kafka.png\n      descr: 一种分布式的，基于发布 / 订阅的消息系统\n    - name: rabbitmq\n      link: https://www.rabbitmq.com/\n      avatar: https://blog.huangge1199.cn/link/rabbitmq.png\n      descr: 消息队列\n    - name: rocketmq\n      link: https://rocketmq.apache.org/\n      avatar: https://rocketmq.apache.org/assets/images/rmq-logo.png\n      descr: 消息队列\n    - name: justauth\n      link: https://justauth.wiki/\n      avatar: https://justauth.wiki/logo.png\n      descr: 开箱即用的整合第三方登录的开源组件\n    - name: XXL-JOB\n      link: https://www.xuxueli.com/xxl-job/\n      avatar: https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg\n      descr: 分布式任务调度平台\n    - name: MQTT\n      link: https://www.emqx.com/zh/mqtt\n      avatar: https://www.emqx.com/favicon.ico\n      descr: MQTT - 轻量级的物联网消息传输协议\n    - name: powerjob\n      link: http://www.powerjob.tech/\n      avatar: https://blog.huangge1199.cn/link/powerjob.ico\n      descr: 新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。\n\n- class_name: 前端开发\n  link_list:\n    - name: vue\n      link: https://cn.vuejs.org/\n      avatar: https://cn.vuejs.org/images/logo.svg\n      descr: 是一套用于构建用户界面的渐进式框架\n    - name: element\n      link: https://element.eleme.cn/#/zh-CN\n      avatar: https://element.eleme.cn/favicon.ico\n      descr: 一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库\n    - name: Element Plus\n      link: https://element-plus.org/zh-CN/\n      avatar: https://element-plus.org/images/element-plus-logo-small.svg\n      descr: 一个 Vue 3 UI 框架 | Element Plus\n    - name: vant\n      link: https://youzan.github.io/vant-weapp/#/home\n      avatar: https://img.yzcdn.cn/vant/logo.png\n      descr: 轻量、可靠的小程序 UI 组件库\n    - name: nuxt.js\n      link: https://nuxtjs.org/\n      avatar: https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png\n      descr: 轻量、可靠的小程序 UI 组件库\n    - name: echarts\n      link: https://echarts.apache.org/\n      avatar: https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1\n      descr: 轻量、可靠的小程序 UI 组件库\n    - name: jQuery UI\n      link: https://jui.org/\n      avatar: https://blog.huangge1199.cn/link/jui.png\n      descr: 简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)\n    - name: mavonEditor\n      link: http://www.mavoneditor.com/\n      avatar:\n      descr: Vue的一款markdown插件\n    - name: Ant Design of Vue\n      link: https://www.antdv.com/\n      avatar: https://www.antdv.com/assets/logo.1ef800a8.svg\n      descr: ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。\n\n- class_name: 辅助工具\n  link_list:\n    - name: YAPI\n      link: http://yapi.smart-xwork.cn/\n      avatar: https://blog.huangge1199.cn/link/yapi.png\n      descr: 高效、易用、功能强大的API管理平台\n    - name: 恒星播放器\n      link: https://www.stellarplayer.com/\n      avatar: https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png\n      descr: 一款纯粹专注的播放器\n    - name: NPS\n      link: https://ehang-io.github.io/nps/\n      avatar: https://ehang-io.github.io/nps/logo.svg\n      descr: 一款轻量级、高性能、功能强大的内网穿透代理服务器\n    - name: Ventoy\n      link: https://www.ventoy.net/\n      avatar: https://www.ventoy.net/static/img/ventoy.png?v=1\n      descr: 新一代多系统启动U盘解决方案\n\n","date":"2022-06-06T14:48:46.543Z","updated":"2022-06-03T06:00:55.553Z","path":" _data/link.json","layout":"false","title":"","comments":1,"_id":"cl42z5h5800003gn654y593c1","content":"[{\"class_name\":\"博客相关\",\"link_list\":[{\"name\":\"Hexo\",\"link\":\"https://hexo.io/zh-tw/\",\"avatar\":\"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg\",\"descr\":\"快速、简单且强大的网站框架\"},{\"name\":\"Valine\",\"link\":\"https://valine.js.org/\",\"avatar\":\"https://valine.js.org/images/valine.png\",\"descr\":\"一款快速、简洁且高效的无后端评论系统\"},{\"name\":\"百度统计\",\"link\":\"https://tongji.baidu.com/\",\"avatar\":\"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690\",\"descr\":\"领先的中文网站分析平台\"},{\"name\":\"墨滴编辑器\",\"link\":\"https://editor.mdnice.com/\",\"avatar\":\"https://mdnice.com/favicon.svg\",\"descr\":\"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式\"},{\"name\":\"v-md-editor\",\"link\":\"https://ckang1229.gitee.io/vue-markdown-editor/zh/\",\"avatar\":null,\"descr\":\"Vue的一款markdown插件（支持vue2和vue3）\"}]},{\"class_name\":\"视频学习\",\"link_list\":[{\"name\":\"咕泡云课堂\",\"link\":\"https://ke.gupaoedu.cn/\",\"avatar\":\"https://ke.gupaoedu.cn/favicon.ico\",\"descr\":\"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播\"},{\"name\":\"谷粒学苑\",\"link\":\"https://www.gulixueyuan.com/\",\"avatar\":\"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6\",\"descr\":\"谷粒学苑为尚硅谷旗下IT课程在线学习平台\"}]},{\"class_name\":\"开发工具\",\"link_list\":[{\"name\":\"jdk\",\"link\":\"https://www.oracle.com/java/technologies/downloads/\",\"avatar\":\"https://blog.huangge1199.cn/link/jdk.png\",\"descr\":\"Java语言的软件开发工具包\"},{\"name\":\"IDEA\",\"link\":\"https://www.jetbrains.com/zh-cn/idea/\",\"avatar\":\"https://blog.huangge1199.cn/link/idea.png\",\"descr\":\"功能强大、符合人体工程学的 Java IDE\"},{\"name\":\"webstorm\",\"link\":\"https://www.jetbrains.com/zh-cn/webstorm/\",\"avatar\":\"https://blog.huangge1199.cn/link/webstorm.png\",\"descr\":\"一个适用于JavaScript 和相关技术的集成开发环境\"},{\"name\":\"datagrip\",\"link\":\"https://www.jetbrains.com/zh-cn/datagrip/\",\"avatar\":\"https://blog.huangge1199.cn/link/datagrip.png\",\"descr\":\"由JetBrains 开发的数据库和SQL 跨平台IDE\"},{\"name\":\"pyCharm\",\"link\":\"https://www.jetbrains.com/zh-cn/pycharm/\",\"avatar\":\"https://blog.huangge1199.cn/link/pycharm.png\",\"descr\":\"JetBrains为专业开发者提供的Python IDE\"},{\"name\":\"xshell\",\"link\":\"https://www.xshell.com/zh/xshell/\",\"avatar\":\"https://blog.huangge1199.cn/link/xshell.png\",\"descr\":\"业界最强大的SSH客户机\"},{\"name\":\"winscp\",\"link\":\"https://winscp.net/eng/index.php\",\"avatar\":\"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990\",\"descr\":\"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端\"},{\"name\":\"Another Redis Desktop Manager\",\"link\":\"https://github.com/qishibo/AnotherRedisDesktopManager\",\"avatar\":\"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png\",\"descr\":\"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值\"},{\"name\":\"JD-GUI\",\"link\":\"http://java-decompiler.github.io/\",\"avatar\":\"https://blog.huangge1199.cn/link/jdgui.png\",\"descr\":\"一款功能十分强大的JAVA反编译工具\"}]},{\"class_name\":\"后端开发\",\"link_list\":[{\"name\":\"sa-token\",\"link\":\"https://sa-token.dev33.cn/\",\"avatar\":\"https://sa-token.dev33.cn/doc/logo.png\",\"descr\":\"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！\"},{\"name\":\"sentinel\",\"link\":\"https://sentinelguard.io/\",\"avatar\":\"https://sentinelguard.io/img/sentinel.ico\",\"descr\":\"面向分布式服务架构的高可用流量控制组件\"},{\"name\":\"dubbo\",\"link\":\"https://dubbo.apache.org/\",\"avatar\":\"https://dubbo.apache.org/favicons/favicon.ico\",\"descr\":\"一款高性能、轻量级的开源服务框架\"},{\"name\":\"nacos\",\"link\":\"https://nacos.io/\",\"avatar\":\"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png\",\"descr\":\"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台\"},{\"name\":\"nginx\",\"link\":\"https://nginx.org/\",\"avatar\":\"https://blog.huangge1199.cn/link/nginx.png\",\"descr\":\"反向代理服务器\"},{\"name\":\"zookeeper\",\"link\":\"https://zookeeper.apache.org/\",\"avatar\":\"https://zookeeper.apache.org/images/zookeeper_small.gif\",\"descr\":\"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册\"},{\"name\":\"kafka\",\"link\":\"https://kafka.apache.org/\",\"avatar\":\"https://blog.huangge1199.cn/link/kafka.png\",\"descr\":\"一种分布式的，基于发布 / 订阅的消息系统\"},{\"name\":\"rabbitmq\",\"link\":\"https://www.rabbitmq.com/\",\"avatar\":\"https://blog.huangge1199.cn/link/rabbitmq.png\",\"descr\":\"消息队列\"},{\"name\":\"rocketmq\",\"link\":\"https://rocketmq.apache.org/\",\"avatar\":\"https://rocketmq.apache.org/assets/images/rmq-logo.png\",\"descr\":\"消息队列\"},{\"name\":\"justauth\",\"link\":\"https://justauth.wiki/\",\"avatar\":\"https://justauth.wiki/logo.png\",\"descr\":\"开箱即用的整合第三方登录的开源组件\"},{\"name\":\"XXL-JOB\",\"link\":\"https://www.xuxueli.com/xxl-job/\",\"avatar\":\"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg\",\"descr\":\"分布式任务调度平台\"},{\"name\":\"MQTT\",\"link\":\"https://www.emqx.com/zh/mqtt\",\"avatar\":\"https://www.emqx.com/favicon.ico\",\"descr\":\"MQTT - 轻量级的物联网消息传输协议\"},{\"name\":\"powerjob\",\"link\":\"http://www.powerjob.tech/\",\"avatar\":\"https://blog.huangge1199.cn/link/powerjob.ico\",\"descr\":\"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。\"}]},{\"class_name\":\"前端开发\",\"link_list\":[{\"name\":\"vue\",\"link\":\"https://cn.vuejs.org/\",\"avatar\":\"https://cn.vuejs.org/images/logo.svg\",\"descr\":\"是一套用于构建用户界面的渐进式框架\"},{\"name\":\"element\",\"link\":\"https://element.eleme.cn/#/zh-CN\",\"avatar\":\"https://element.eleme.cn/favicon.ico\",\"descr\":\"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库\"},{\"name\":\"Element Plus\",\"link\":\"https://element-plus.org/zh-CN/\",\"avatar\":\"https://element-plus.org/images/element-plus-logo-small.svg\",\"descr\":\"一个 Vue 3 UI 框架 | Element Plus\"},{\"name\":\"vant\",\"link\":\"https://youzan.github.io/vant-weapp/#/home\",\"avatar\":\"https://img.yzcdn.cn/vant/logo.png\",\"descr\":\"轻量、可靠的小程序 UI 组件库\"},{\"name\":\"nuxt.js\",\"link\":\"https://nuxtjs.org/\",\"avatar\":\"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png\",\"descr\":\"轻量、可靠的小程序 UI 组件库\"},{\"name\":\"echarts\",\"link\":\"https://echarts.apache.org/\",\"avatar\":\"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1\",\"descr\":\"轻量、可靠的小程序 UI 组件库\"},{\"name\":\"jQuery UI\",\"link\":\"https://jui.org/\",\"avatar\":\"https://blog.huangge1199.cn/link/jui.png\",\"descr\":\"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)\"},{\"name\":\"mavonEditor\",\"link\":\"http://www.mavoneditor.com/\",\"avatar\":null,\"descr\":\"Vue的一款markdown插件\"},{\"name\":\"Ant Design of Vue\",\"link\":\"https://www.antdv.com/\",\"avatar\":\"https://www.antdv.com/assets/logo.1ef800a8.svg\",\"descr\":\"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。\"}]},{\"class_name\":\"辅助工具\",\"link_list\":[{\"name\":\"YAPI\",\"link\":\"http://yapi.smart-xwork.cn/\",\"avatar\":\"https://blog.huangge1199.cn/link/yapi.png\",\"descr\":\"高效、易用、功能强大的API管理平台\"},{\"name\":\"恒星播放器\",\"link\":\"https://www.stellarplayer.com/\",\"avatar\":\"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png\",\"descr\":\"一款纯粹专注的播放器\"},{\"name\":\"NPS\",\"link\":\"https://ehang-io.github.io/nps/\",\"avatar\":\"https://ehang-io.github.io/nps/logo.svg\",\"descr\":\"一款轻量级、高性能、功能强大的内网穿透代理服务器\"},{\"name\":\"Ventoy\",\"link\":\"https://www.ventoy.net/\",\"avatar\":\"https://www.ventoy.net/static/img/ventoy.png?v=1\",\"descr\":\"新一代多系统启动U盘解决方案\"}]}]","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"cover":"https://blog.huangge1199.cn/post/sublimeText4Purchase/bg.jpeg","excerpt":"","more":"[{\"class_name\":\"博客相关\",\"link_list\":[{\"name\":\"Hexo\",\"link\":\"https://hexo.io/zh-tw/\",\"avatar\":\"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg\",\"descr\":\"快速、简单且强大的网站框架\"},{\"name\":\"Valine\",\"link\":\"https://valine.js.org/\",\"avatar\":\"https://valine.js.org/images/valine.png\",\"descr\":\"一款快速、简洁且高效的无后端评论系统\"},{\"name\":\"百度统计\",\"link\":\"https://tongji.baidu.com/\",\"avatar\":\"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690\",\"descr\":\"领先的中文网站分析平台\"},{\"name\":\"墨滴编辑器\",\"link\":\"https://editor.mdnice.com/\",\"avatar\":\"https://mdnice.com/favicon.svg\",\"descr\":\"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式\"},{\"name\":\"v-md-editor\",\"link\":\"https://ckang1229.gitee.io/vue-markdown-editor/zh/\",\"avatar\":null,\"descr\":\"Vue的一款markdown插件（支持vue2和vue3）\"}]},{\"class_name\":\"视频学习\",\"link_list\":[{\"name\":\"咕泡云课堂\",\"link\":\"https://ke.gupaoedu.cn/\",\"avatar\":\"https://ke.gupaoedu.cn/favicon.ico\",\"descr\":\"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播\"},{\"name\":\"谷粒学苑\",\"link\":\"https://www.gulixueyuan.com/\",\"avatar\":\"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6\",\"descr\":\"谷粒学苑为尚硅谷旗下IT课程在线学习平台\"}]},{\"class_name\":\"开发工具\",\"link_list\":[{\"name\":\"jdk\",\"link\":\"https://www.oracle.com/java/technologies/downloads/\",\"avatar\":\"https://blog.huangge1199.cn/link/jdk.png\",\"descr\":\"Java语言的软件开发工具包\"},{\"name\":\"IDEA\",\"link\":\"https://www.jetbrains.com/zh-cn/idea/\",\"avatar\":\"https://blog.huangge1199.cn/link/idea.png\",\"descr\":\"功能强大、符合人体工程学的 Java IDE\"},{\"name\":\"webstorm\",\"link\":\"https://www.jetbrains.com/zh-cn/webstorm/\",\"avatar\":\"https://blog.huangge1199.cn/link/webstorm.png\",\"descr\":\"一个适用于JavaScript 和相关技术的集成开发环境\"},{\"name\":\"datagrip\",\"link\":\"https://www.jetbrains.com/zh-cn/datagrip/\",\"avatar\":\"https://blog.huangge1199.cn/link/datagrip.png\",\"descr\":\"由JetBrains 开发的数据库和SQL 跨平台IDE\"},{\"name\":\"pyCharm\",\"link\":\"https://www.jetbrains.com/zh-cn/pycharm/\",\"avatar\":\"https://blog.huangge1199.cn/link/pycharm.png\",\"descr\":\"JetBrains为专业开发者提供的Python IDE\"},{\"name\":\"xshell\",\"link\":\"https://www.xshell.com/zh/xshell/\",\"avatar\":\"https://blog.huangge1199.cn/link/xshell.png\",\"descr\":\"业界最强大的SSH客户机\"},{\"name\":\"winscp\",\"link\":\"https://winscp.net/eng/index.php\",\"avatar\":\"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990\",\"descr\":\"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端\"},{\"name\":\"Another Redis Desktop Manager\",\"link\":\"https://github.com/qishibo/AnotherRedisDesktopManager\",\"avatar\":\"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png\",\"descr\":\"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值\"},{\"name\":\"JD-GUI\",\"link\":\"http://java-decompiler.github.io/\",\"avatar\":\"https://blog.huangge1199.cn/link/jdgui.png\",\"descr\":\"一款功能十分强大的JAVA反编译工具\"}]},{\"class_name\":\"后端开发\",\"link_list\":[{\"name\":\"sa-token\",\"link\":\"https://sa-token.dev33.cn/\",\"avatar\":\"https://sa-token.dev33.cn/doc/logo.png\",\"descr\":\"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！\"},{\"name\":\"sentinel\",\"link\":\"https://sentinelguard.io/\",\"avatar\":\"https://sentinelguard.io/img/sentinel.ico\",\"descr\":\"面向分布式服务架构的高可用流量控制组件\"},{\"name\":\"dubbo\",\"link\":\"https://dubbo.apache.org/\",\"avatar\":\"https://dubbo.apache.org/favicons/favicon.ico\",\"descr\":\"一款高性能、轻量级的开源服务框架\"},{\"name\":\"nacos\",\"link\":\"https://nacos.io/\",\"avatar\":\"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png\",\"descr\":\"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台\"},{\"name\":\"nginx\",\"link\":\"https://nginx.org/\",\"avatar\":\"https://blog.huangge1199.cn/link/nginx.png\",\"descr\":\"反向代理服务器\"},{\"name\":\"zookeeper\",\"link\":\"https://zookeeper.apache.org/\",\"avatar\":\"https://zookeeper.apache.org/images/zookeeper_small.gif\",\"descr\":\"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册\"},{\"name\":\"kafka\",\"link\":\"https://kafka.apache.org/\",\"avatar\":\"https://blog.huangge1199.cn/link/kafka.png\",\"descr\":\"一种分布式的，基于发布 / 订阅的消息系统\"},{\"name\":\"rabbitmq\",\"link\":\"https://www.rabbitmq.com/\",\"avatar\":\"https://blog.huangge1199.cn/link/rabbitmq.png\",\"descr\":\"消息队列\"},{\"name\":\"rocketmq\",\"link\":\"https://rocketmq.apache.org/\",\"avatar\":\"https://rocketmq.apache.org/assets/images/rmq-logo.png\",\"descr\":\"消息队列\"},{\"name\":\"justauth\",\"link\":\"https://justauth.wiki/\",\"avatar\":\"https://justauth.wiki/logo.png\",\"descr\":\"开箱即用的整合第三方登录的开源组件\"},{\"name\":\"XXL-JOB\",\"link\":\"https://www.xuxueli.com/xxl-job/\",\"avatar\":\"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg\",\"descr\":\"分布式任务调度平台\"},{\"name\":\"MQTT\",\"link\":\"https://www.emqx.com/zh/mqtt\",\"avatar\":\"https://www.emqx.com/favicon.ico\",\"descr\":\"MQTT - 轻量级的物联网消息传输协议\"},{\"name\":\"powerjob\",\"link\":\"http://www.powerjob.tech/\",\"avatar\":\"https://blog.huangge1199.cn/link/powerjob.ico\",\"descr\":\"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。\"}]},{\"class_name\":\"前端开发\",\"link_list\":[{\"name\":\"vue\",\"link\":\"https://cn.vuejs.org/\",\"avatar\":\"https://cn.vuejs.org/images/logo.svg\",\"descr\":\"是一套用于构建用户界面的渐进式框架\"},{\"name\":\"element\",\"link\":\"https://element.eleme.cn/#/zh-CN\",\"avatar\":\"https://element.eleme.cn/favicon.ico\",\"descr\":\"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库\"},{\"name\":\"Element Plus\",\"link\":\"https://element-plus.org/zh-CN/\",\"avatar\":\"https://element-plus.org/images/element-plus-logo-small.svg\",\"descr\":\"一个 Vue 3 UI 框架 | Element Plus\"},{\"name\":\"vant\",\"link\":\"https://youzan.github.io/vant-weapp/#/home\",\"avatar\":\"https://img.yzcdn.cn/vant/logo.png\",\"descr\":\"轻量、可靠的小程序 UI 组件库\"},{\"name\":\"nuxt.js\",\"link\":\"https://nuxtjs.org/\",\"avatar\":\"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png\",\"descr\":\"轻量、可靠的小程序 UI 组件库\"},{\"name\":\"echarts\",\"link\":\"https://echarts.apache.org/\",\"avatar\":\"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1\",\"descr\":\"轻量、可靠的小程序 UI 组件库\"},{\"name\":\"jQuery UI\",\"link\":\"https://jui.org/\",\"avatar\":\"https://blog.huangge1199.cn/link/jui.png\",\"descr\":\"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)\"},{\"name\":\"mavonEditor\",\"link\":\"http://www.mavoneditor.com/\",\"avatar\":null,\"descr\":\"Vue的一款markdown插件\"},{\"name\":\"Ant Design of Vue\",\"link\":\"https://www.antdv.com/\",\"avatar\":\"https://www.antdv.com/assets/logo.1ef800a8.svg\",\"descr\":\"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。\"}]},{\"class_name\":\"辅助工具\",\"link_list\":[{\"name\":\"YAPI\",\"link\":\"http://yapi.smart-xwork.cn/\",\"avatar\":\"https://blog.huangge1199.cn/link/yapi.png\",\"descr\":\"高效、易用、功能强大的API管理平台\"},{\"name\":\"恒星播放器\",\"link\":\"https://www.stellarplayer.com/\",\"avatar\":\"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png\",\"descr\":\"一款纯粹专注的播放器\"},{\"name\":\"NPS\",\"link\":\"https://ehang-io.github.io/nps/\",\"avatar\":\"https://ehang-io.github.io/nps/logo.svg\",\"descr\":\"一款轻量级、高性能、功能强大的内网穿透代理服务器\"},{\"name\":\"Ventoy\",\"link\":\"https://www.ventoy.net/\",\"avatar\":\"https://www.ventoy.net/static/img/ventoy.png?v=1\",\"descr\":\"新一代多系统启动U盘解决方案\"}]}]"},{"_content":"{\n  \"tv_doge\": \"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png\",\n  \"tv_亲亲\": \"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png\",\n  \"tv_偷笑\": \"bb690d4107620f1c15cff29509db529a73aee261.png\",\n  \"tv_再见\": \"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png\",\n  \"tv_冷漠\": \"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png\",\n  \"tv_发怒\": \"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png\",\n  \"tv_发财\": \"34db290afd2963723c6eb3c4560667db7253a21a.png\",\n  \"tv_可爱\": \"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png\",\n  \"tv_吐血\": \"09dd16a7aa59b77baa1155d47484409624470c77.png\",\n  \"tv_呆\": \"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png\",\n  \"tv_呕吐\": \"9f996894a39e282ccf5e66856af49483f81870f3.png\",\n  \"tv_困\": \"241ee304e44c0af029adceb294399391e4737ef2.png\",\n  \"tv_坏笑\": \"1f0b87f731a671079842116e0991c91c2c88645a.png\",\n  \"tv_大佬\": \"093c1e2c490161aca397afc45573c877cdead616.png\",\n  \"tv_大哭\": \"23269aeb35f99daee28dda129676f6e9ea87934f.png\",\n  \"tv_委屈\": \"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png\",\n  \"tv_害羞\": \"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png\",\n  \"tv_尴尬\": \"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png\",\n  \"tv_微笑\": \"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png\",\n  \"tv_思考\": \"90cf159733e558137ed20aa04d09964436f618a1.png\",\n  \"tv_惊吓\": \"0d15c7e2ee58e935adc6a7193ee042388adc22af.png\"\n}","source":" _data/valine.json","raw":"{\n  \"tv_doge\": \"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png\",\n  \"tv_亲亲\": \"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png\",\n  \"tv_偷笑\": \"bb690d4107620f1c15cff29509db529a73aee261.png\",\n  \"tv_再见\": \"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png\",\n  \"tv_冷漠\": \"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png\",\n  \"tv_发怒\": \"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png\",\n  \"tv_发财\": \"34db290afd2963723c6eb3c4560667db7253a21a.png\",\n  \"tv_可爱\": \"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png\",\n  \"tv_吐血\": \"09dd16a7aa59b77baa1155d47484409624470c77.png\",\n  \"tv_呆\": \"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png\",\n  \"tv_呕吐\": \"9f996894a39e282ccf5e66856af49483f81870f3.png\",\n  \"tv_困\": \"241ee304e44c0af029adceb294399391e4737ef2.png\",\n  \"tv_坏笑\": \"1f0b87f731a671079842116e0991c91c2c88645a.png\",\n  \"tv_大佬\": \"093c1e2c490161aca397afc45573c877cdead616.png\",\n  \"tv_大哭\": \"23269aeb35f99daee28dda129676f6e9ea87934f.png\",\n  \"tv_委屈\": \"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png\",\n  \"tv_害羞\": \"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png\",\n  \"tv_尴尬\": \"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png\",\n  \"tv_微笑\": \"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png\",\n  \"tv_思考\": \"90cf159733e558137ed20aa04d09964436f618a1.png\",\n  \"tv_惊吓\": \"0d15c7e2ee58e935adc6a7193ee042388adc22af.png\"\n}","date":"2022-06-06T16:51:39.551Z","updated":"2022-06-03T06:00:55.553Z","path":" _data/valine.json","layout":"false","title":"","comments":1,"_id":"cl42z5h5d00023gn6c66d74dg","content":"{\"tv_doge\":\"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png\",\"tv_亲亲\":\"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png\",\"tv_偷笑\":\"bb690d4107620f1c15cff29509db529a73aee261.png\",\"tv_再见\":\"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png\",\"tv_冷漠\":\"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png\",\"tv_发怒\":\"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png\",\"tv_发财\":\"34db290afd2963723c6eb3c4560667db7253a21a.png\",\"tv_可爱\":\"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png\",\"tv_吐血\":\"09dd16a7aa59b77baa1155d47484409624470c77.png\",\"tv_呆\":\"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png\",\"tv_呕吐\":\"9f996894a39e282ccf5e66856af49483f81870f3.png\",\"tv_困\":\"241ee304e44c0af029adceb294399391e4737ef2.png\",\"tv_坏笑\":\"1f0b87f731a671079842116e0991c91c2c88645a.png\",\"tv_大佬\":\"093c1e2c490161aca397afc45573c877cdead616.png\",\"tv_大哭\":\"23269aeb35f99daee28dda129676f6e9ea87934f.png\",\"tv_委屈\":\"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png\",\"tv_害羞\":\"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png\",\"tv_尴尬\":\"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png\",\"tv_微笑\":\"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png\",\"tv_思考\":\"90cf159733e558137ed20aa04d09964436f618a1.png\",\"tv_惊吓\":\"0d15c7e2ee58e935adc6a7193ee042388adc22af.png\"}","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"cover":"https://blog.huangge1199.cn/post/pyControl/bg.jpeg","excerpt":"","more":"{\"tv_doge\":\"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png\",\"tv_亲亲\":\"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png\",\"tv_偷笑\":\"bb690d4107620f1c15cff29509db529a73aee261.png\",\"tv_再见\":\"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png\",\"tv_冷漠\":\"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png\",\"tv_发怒\":\"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png\",\"tv_发财\":\"34db290afd2963723c6eb3c4560667db7253a21a.png\",\"tv_可爱\":\"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png\",\"tv_吐血\":\"09dd16a7aa59b77baa1155d47484409624470c77.png\",\"tv_呆\":\"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png\",\"tv_呕吐\":\"9f996894a39e282ccf5e66856af49483f81870f3.png\",\"tv_困\":\"241ee304e44c0af029adceb294399391e4737ef2.png\",\"tv_坏笑\":\"1f0b87f731a671079842116e0991c91c2c88645a.png\",\"tv_大佬\":\"093c1e2c490161aca397afc45573c877cdead616.png\",\"tv_大哭\":\"23269aeb35f99daee28dda129676f6e9ea87934f.png\",\"tv_委屈\":\"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png\",\"tv_害羞\":\"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png\",\"tv_尴尬\":\"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png\",\"tv_微笑\":\"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png\",\"tv_思考\":\"90cf159733e558137ed20aa04d09964436f618a1.png\",\"tv_惊吓\":\"0d15c7e2ee58e935adc6a7193ee042388adc22af.png\"}"},{"title":"照片","date":"2021-11-29T14:22:00.000Z","type":"Gallery","_content":"<div class=\"gallery-group-main\">\n{% galleryGroup '壁紙' '收藏的一些壁紙' '/wallpaper' https://i.loli.net/2019/11/10/T7Mu8Aod3egmC4Q.png %}\n{% galleryGroup '背景图' '博客中使用的背景图' '/bg' https://blog.huangge1199.cn/images/bg.jpeg %}\n</div>\n","source":"Gallery/index.md","raw":"---\ntitle: 照片\ndate: 2021-11-29 22:22:00\ntype: \"Gallery\"\n---\n<div class=\"gallery-group-main\">\n{% galleryGroup '壁紙' '收藏的一些壁紙' '/wallpaper' https://i.loli.net/2019/11/10/T7Mu8Aod3egmC4Q.png %}\n{% galleryGroup '背景图' '博客中使用的背景图' '/bg' https://blog.huangge1199.cn/images/bg.jpeg %}\n</div>\n","updated":"2022-06-03T06:00:55.553Z","path":"Gallery/index.html","comments":1,"layout":"page","_id":"cl42z5h5l00083gn6g3kxg7nv","content":"<div class=\"gallery-group-main\">\n\n  <figure class=\"gallery-group\">\n  <img class=\"gallery-group-img no-lightbox\" src='https://i.loli.net/2019/11/10/T7Mu8Aod3egmC4Q.png' alt=\"Group Image Gallery\">\n  <figcaption>\n  <div class=\"gallery-group-name\">壁紙</div>\n  <p>收藏的一些壁紙</p>\n  <a href='/wallpaper'></a>\n  </figcaption>\n  </figure>\n  \n\n  <figure class=\"gallery-group\">\n  <img class=\"gallery-group-img no-lightbox\" src='https://blog.huangge1199.cn/images/bg.jpeg' alt=\"Group Image Gallery\">\n  <figcaption>\n  <div class=\"gallery-group-name\">背景图</div>\n  <p>博客中使用的背景图</p>\n  <a href='/bg'></a>\n  </figcaption>\n  </figure>\n  \n</div>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"cover":"https://blog.huangge1199.cn/post/day20220119/bg.jpeg","excerpt":"","more":"<div class=\"gallery-group-main\">\n\n  <figure class=\"gallery-group\">\n  <img class=\"gallery-group-img no-lightbox\" src='https://i.loli.net/2019/11/10/T7Mu8Aod3egmC4Q.png' alt=\"Group Image Gallery\">\n  <figcaption>\n  <div class=\"gallery-group-name\">壁紙</div>\n  <p>收藏的一些壁紙</p>\n  <a href='/wallpaper'></a>\n  </figcaption>\n  </figure>\n  \n\n  <figure class=\"gallery-group\">\n  <img class=\"gallery-group-img no-lightbox\" src='https://blog.huangge1199.cn/images/bg.jpeg' alt=\"Group Image Gallery\">\n  <figcaption>\n  <div class=\"gallery-group-name\">背景图</div>\n  <p>博客中使用的背景图</p>\n  <a href='/bg'></a>\n  </figcaption>\n  </figure>\n  \n</div>\n"},{"title":"关于","date":"2021-11-29T12:56:03.000Z","_content":"","source":"about/index.md","raw":"---\ntitle: 关于\ndate: 2021-11-29 20:56:03\n---\n","updated":"2022-06-03T06:00:55.613Z","path":"about/index.html","comments":1,"layout":"page","_id":"cl42z5h5m000a3gn66q033dxf","content":"","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"cover":"https://blog.huangge1199.cn/post/day20220119/bg.jpeg","excerpt":"","more":""},{"title":"背景图","date":"2021-12-29T09:25:02.000Z","_content":"{% gallery %}\n![](https://blog.huangge1199.cn/images/bg.jpeg)\n![](https://blog.huangge1199.cn/post/pyControl/bg.jpeg)\n![](https://blog.huangge1199.cn/post/pyListSort/bg.jpeg)\n![](https://blog.huangge1199.cn/post/jpaCompositePK/bg.jpg)\n![](https://blog.huangge1199.cn/post/nexusCreate/bg.jpeg)\n![](https://blog.huangge1199.cn/post/sublimeText4Purchase/bg.jpeg)\n![](https://blog.huangge1199.cn/post/day20220118/bg.jpeg)\n![](https://blog.huangge1199.cn/post/day20220119/bg.jpeg)\n![](https://blog.huangge1199.cn/post/day20220120/bg.jpeg)\n![](https://blog.huangge1199.cn/post/day20220121/bg.jpeg)\n![](https://blog.huangge1199.cn/post/day20220310/bg.jpeg)\n{% endgallery %}\n","source":"bg/index.md","raw":"---\ntitle: 背景图\ndate: 2021-12-29 17:25:02\n---\n{% gallery %}\n![](https://blog.huangge1199.cn/images/bg.jpeg)\n![](https://blog.huangge1199.cn/post/pyControl/bg.jpeg)\n![](https://blog.huangge1199.cn/post/pyListSort/bg.jpeg)\n![](https://blog.huangge1199.cn/post/jpaCompositePK/bg.jpg)\n![](https://blog.huangge1199.cn/post/nexusCreate/bg.jpeg)\n![](https://blog.huangge1199.cn/post/sublimeText4Purchase/bg.jpeg)\n![](https://blog.huangge1199.cn/post/day20220118/bg.jpeg)\n![](https://blog.huangge1199.cn/post/day20220119/bg.jpeg)\n![](https://blog.huangge1199.cn/post/day20220120/bg.jpeg)\n![](https://blog.huangge1199.cn/post/day20220121/bg.jpeg)\n![](https://blog.huangge1199.cn/post/day20220310/bg.jpeg)\n{% endgallery %}\n","updated":"2022-06-03T06:00:55.613Z","path":"bg/index.html","comments":1,"layout":"page","_id":"cl42z5h5o000f3gn6853z3uvl","content":"<div class=\"fj-gallery\"><p><img src=\"https://blog.huangge1199.cn/images/bg.jpeg\" alt=\"\"><br><img src=\"https://blog.huangge1199.cn/post/pyControl/bg.jpeg\" alt=\"\"><br><img src=\"https://blog.huangge1199.cn/post/pyListSort/bg.jpeg\" alt=\"\"><br><img src=\"https://blog.huangge1199.cn/post/jpaCompositePK/bg.jpg\" alt=\"\"><br><img src=\"https://blog.huangge1199.cn/post/nexusCreate/bg.jpeg\" alt=\"\"><br><img src=\"https://blog.huangge1199.cn/post/sublimeText4Purchase/bg.jpeg\" alt=\"\"><br><img src=\"https://blog.huangge1199.cn/post/day20220118/bg.jpeg\" alt=\"\"><br><img src=\"https://blog.huangge1199.cn/post/day20220119/bg.jpeg\" alt=\"\"><br><img src=\"https://blog.huangge1199.cn/post/day20220120/bg.jpeg\" alt=\"\"><br><img src=\"https://blog.huangge1199.cn/post/day20220121/bg.jpeg\" alt=\"\"><br><img src=\"https://blog.huangge1199.cn/post/day20220310/bg.jpeg\" alt=\"\"></p>\n          </div>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"cover":"https://blog.huangge1199.cn/post/day20220120/bg.jpeg","excerpt":"","more":"<div class=\"fj-gallery\"><p><img src=\"https://blog.huangge1199.cn/images/bg.jpeg\" alt=\"\"><br><img src=\"https://blog.huangge1199.cn/post/pyControl/bg.jpeg\" alt=\"\"><br><img src=\"https://blog.huangge1199.cn/post/pyListSort/bg.jpeg\" alt=\"\"><br><img src=\"https://blog.huangge1199.cn/post/jpaCompositePK/bg.jpg\" alt=\"\"><br><img src=\"https://blog.huangge1199.cn/post/nexusCreate/bg.jpeg\" alt=\"\"><br><img src=\"https://blog.huangge1199.cn/post/sublimeText4Purchase/bg.jpeg\" alt=\"\"><br><img src=\"https://blog.huangge1199.cn/post/day20220118/bg.jpeg\" alt=\"\"><br><img src=\"https://blog.huangge1199.cn/post/day20220119/bg.jpeg\" alt=\"\"><br><img src=\"https://blog.huangge1199.cn/post/day20220120/bg.jpeg\" alt=\"\"><br><img src=\"https://blog.huangge1199.cn/post/day20220121/bg.jpeg\" alt=\"\"><br><img src=\"https://blog.huangge1199.cn/post/day20220310/bg.jpeg\" alt=\"\"></p>\n          </div>\n"},{"title":"分类","date":"2021-11-29T09:26:10.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2021-11-29 17:26:10\ntype: \"categories\"\ncomments: false\n---\n","updated":"2022-06-03T06:00:55.613Z","path":"categories/index.html","layout":"page","_id":"cl42z5h5p000h3gn609p09ak5","content":"","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"cover":"https://blog.huangge1199.cn/post/day20220119/bg.jpeg","excerpt":"","more":""},{"title":"网址大全","date":"2021-11-29T09:27:00.000Z","type":"link","comments":0,"_content":"","source":"link/index.md","raw":"---\ntitle: 网址大全\ndate: 2021-11-29 17:27:00\ntype: \"link\"\ncomments: false\n---\n","updated":"2022-06-03T06:00:55.621Z","path":"link/index.html","layout":"page","_id":"cl42z5h5s000m3gn63f0c86m1","content":"","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"cover":"https://blog.huangge1199.cn/post/sublimeText4Purchase/bg.jpeg","excerpt":"","more":""},{"_content":"# Live2D Widget\n\n![](https://forthebadge.com/images/badges/built-with-love.svg)\n![](https://forthebadge.com/images/badges/uses-html.svg)\n![](https://forthebadge.com/images/badges/made-with-javascript.svg)\n![](https://forthebadge.com/images/badges/contains-cat-gifs.svg)\n![](https://forthebadge.com/images/badges/powered-by-electricity.svg)\n![](https://forthebadge.com/images/badges/makes-people-smile.svg)\n\n## 特性 Feature\n\n在网页中添加 Live2D 看板娘。兼容 PJAX，支持无刷新加载。  \nAdd Live2D widget to web page. Compatible with PJAX.\n\n**警告：本项目使用了大量 ES6 语法，不支持 IE 11 等老旧浏览器。**  \n**WARNING: This project does not support legacy browsers such as IE 11.**\n\n## 示例 Demo\n\n在[米米的博客](https://zhangshuqiao.org)的左下角可查看效果。（注：以下人物模型仅供展示之用，本仓库并不包含任何模型。）\n\n<img src=\"assets/screenshot-2.png\" width=\"280\"><img src=\"assets/screenshot-3.png\" width=\"280\"><img src=\"assets/screenshot-1.png\" width=\"270\">\n\n你也可以在允许的范围内进行二次开发，这里有一些示例\n\n- [demo.html](https://mi.js.org/live2d-widget/demo/demo.html) ，展现基础效果\n- [login.html](https://mi.js.org/live2d-widget/demo/login.html) ，仿 NPM 的登陆界面\n\n## 依赖 Dependencies\n\n本插件需要 Font Awesome (v4 或 v5) 图标支持，请确保相关样式表已在页面中加载。以 Font Awesome v4 为例，请在 `<head>` 中加入：  \nFont Awesome (v4 or v5) is required for this plugin. Take Font Awesome v4 as an example, please add the following in `<head>`:\n```xml\n<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/font-awesome/css/font-awesome.min.css\">\n```\n否则图标将无法正常显示。（如果网页中已经加载了任何版本的 Font Awesome，就不要重复加载了）\n\n## 使用 Usage\n\n将这一行代码加入 `<head>` 或 `<body>`，即可展现出效果：\n```xml\n<script src=\"https://cdn.jsdelivr.net/gh/stevenjoezhang/live2d-widget@latest/autoload.js\"></script>\n```\n如果网站启用了 PJAX，由于看板娘不必每页刷新，因此要注意将相关脚本放到 PJAX 刷新区域之外。\n\n换句话说，如果你是小白，或者只需要最基础的功能，就只用把这一行代码，连同前面加载 Font Awesome 的一行代码，一起放到 html 的 `<head>` 中即可。  \n对于用各种模版引擎（例如 Nunjucks，Jinja 或者 PHP）生成的页面，也要自行修改，方法类似，只是可能略为麻烦。以 [Hexo](https://hexo.io) 为例，需要在主题相关的 ejs 或 njk 模版中正确配置路径，才可以加载。\n\n**但是！我们强烈推荐自己进行配置，否则很多功能是不完整的，并且可能产生问题！**  \n如果你有兴趣自己折腾的话，请看下面的详细说明。\n\n### Using CDN\n\n要自定义有关内容，可以把这个仓库 Fork 一份，然后进行修改。这时，使用方法对应地变为\n```xml\n<script src=\"https://cdn.jsdelivr.net/gh/username/live2d-widget@latest/autoload.js\"></script>\n```\n将此处的 `username` 替换为你的 GitHub 用户名。为了使 CDN 的内容正常刷新，需要创建新的 git tag 并推送至 GitHub 仓库中，否则此处的 `@latest` 仍然指向更新前的文件。此外 CDN 本身存在缓存，因此改动可能需要一定的时间生效。相关文档：\n- [Git Basics - Tagging](https://git-scm.com/book/en/v2/Git-Basics-Tagging)\n- [Managing releases in a repository](https://help.github.com/en/github/administering-a-repository/managing-releases-in-a-repository)\n\n### Self-host\n\n你也可以直接把这些文件放到服务器上，而不是通过 CDN 加载。\n\n- 如果你能够通过 `ssh` 访问你的主机，请把整个仓库克隆到服务器上。执行：\n  ```bash\n  cd /path/to/your/webroot\n  # Clone this repository\n  git clone https://github.com/stevenjoezhang/live2d-widget.git\n  ```\n- 如果你的主机无法用 `ssh` 连接（例如一般的虚拟主机），请选择 `Download ZIP`，然后通过 `ftp` 等方式上传到主机上，再解压到网站的目录下。\n- 如果你是通过 Hexo 等工具部署的静态博客，请在博客源文件（即 `source`）目录下，执行前述的 `git clone` 命令。重新部署博客时，相关文件就会自动上传到对应的路径下。为了避免这些文件被 Hexo 插件错误地修改，可能需要设置 `skip_render`。\n\n这样，整个项目就可以通过你的服务器 IP 或者域名从公网访问了。不妨试试能否正常地通过浏览器打开 `autoload.js` 和 `live2d.min.js` 等文件，并确认这些文件的内容是完整和正确的。  \n一切正常的话，接下来修改一些配置就行了。（需要通过服务器上的文本编辑器修改；你也可以先在本地完成这一步骤，再上传到服务器上）  \n修改 `autoload.js` 中的常量 `live2d_path` 为 `live2d-widget` 这一目录的 URL。比如说，如果你能够通过\n```\nhttps://example.com/path/to/live2d-widget/live2d.min.js\n```\n访问到 `live2d.min.js`，那么就把 `live2d_path` 的值修改为\n```\nhttps://example.com/path/to/live2d-widget/\n```\n路径末尾的 `/` 一定要加上。具体可以参考 `autoload.js` 内的注释。  \n完成后，在你要添加看板娘的界面加入\n```xml\n<script src=\"https://example.com/path/to/live2d-widget/autoload.js\"></script>\n```\n就可以加载了。\n\n## 后端 API\n\n`initWidget` 方法接受名为 `apiPath` 和 `cdnPath` 的参数，两者设置其中一项即可。其中 `apiPath` 为后端 API 的 URL，可以自行搭建，并增加模型（需要修改的内容比较多，此处不再赘述）。而 `cdnPath` 则是通过 jsDelivr 这样的 CDN 服务加载资源，更加稳定。\n\n## 目录结构 Files\n\n- `waifu-tips.js` 包含了按钮和对话框的逻辑；\n- `waifu-tips.json` 中定义了触发条件（`selector`，CSS 选择器）和触发时显示的文字（`text`）；\n- `waifu.css` 是看板娘的样式表。\n\n源文件是对 Hexo 的 [NexT 主题](http://github.com/next-theme/hexo-theme-next)有效的，为了适用于你自己的网页，可能需要自行修改，或增加新内容。  \n**警告：作者不对包括但不限于 `waifu-tips.js` 和 `waifu-tips.json` 文件中的内容负责，请自行确保它们是合适的。**\n\n如果有任何疑问，欢迎提 Issue。如果有任何修改建议，欢迎提 Pull Request。\n\n## 鸣谢 Thanks\n\n<a href=\"https://www.browserstack.com/\"><img height=\"80\" src=\"https://live.browserstack.com/images/opensource/browserstack-logo.svg\" alt=\"BrowserStack Logo\"></a>\n\n> 感谢 BrowserStack 容许我们在真实的浏览器中测试此项目。  \n> Thanks to [BrowserStack](https://www.browserstack.com/) for providing the infrastructure that allows us to test in real browsers!\n\n<a href=\"https://www.jsdelivr.com\"><img height=\"80\" src=\"https://raw.githubusercontent.com/jsdelivr/jsdelivr-media/master/default/svg/jsdelivr-logo-horizontal.svg\"></a>\n\n> 感谢 jsDelivr 提供的 CDN 服务。  \n> Thanks jsDelivr for providing public CDN service.\n\n代码自这篇博文魔改而来：  \nhttps://www.fghrsh.net/post/123.html\n\n点击看板娘的纸飞机按钮时，会出现一个彩蛋，这来自于 [WebsiteAsteroids](http://www.websiteasteroids.com)。\n\n## 更多 More\n\n更多内容可以参考：  \nhttps://imjad.cn/archives/lab/add-dynamic-poster-girl-with-live2d-to-your-blog-02  \nhttps://github.com/xiazeyu/live2d-widget.js  \nhttps://github.com/summerscar/live2dDemo\n\n关于后端 API 模型：  \nhttps://github.com/fghrsh/live2d_api  \nhttps://github.com/xiazeyu/live2d-widget-models  \nhttps://github.com/xiaoski/live2d_models_collection\n\n除此之外，还有桌面版本：  \nhttps://github.com/amorist/platelet  \nhttps://github.com/akiroz/Live2D-Widget  \nhttps://github.com/zenghongtu/PPet  \nhttps://github.com/LikeNeko/L2dPetForMac\n\n以及 Wallpaper Engine：\nhttps://github.com/guansss/nep-live2d\n\n## 许可证 License\n\nReleased under the GNU General Public License v3  \nhttp://www.gnu.org/licenses/gpl-3.0.html\n\n本仓库并不包含任何模型，用作展示的所有 Live2D 模型、图片、动作数据等版权均属于其原作者，仅供研究学习，不得用于商业用途。\n\nLive2D 官方网站：  \nhttps://www.live2d.com/en/  \nhttps://live2d.github.io\n\nLive2D Cubism Core は Live2D Proprietary Software License で提供しています。  \nhttps://www.live2d.com/eula/live2d-proprietary-software-license-agreement_en.html  \nLive2D Cubism Components は Live2D Open Software License で提供しています。  \nhttp://www.live2d.com/eula/live2d-open-software-license-agreement_en.html\n\n> The terms and conditions do prohibit modification, but obfuscating in `live2d.min.js` would not be considered illegal modification.\n\nhttps://community.live2d.com/discussion/140/webgl-developer-licence-and-javascript-question\n\n## 更新 Update\n\n2018年10月31日，由 fghrsh 提供的原 API 停用，请更新至新地址。参考文章：  \nhttps://www.fghrsh.net/post/170.html\n\n2020年1月1日起，本项目不再依赖于 jQuery。\n","source":"live2d-widget/README.md","raw":"# Live2D Widget\n\n![](https://forthebadge.com/images/badges/built-with-love.svg)\n![](https://forthebadge.com/images/badges/uses-html.svg)\n![](https://forthebadge.com/images/badges/made-with-javascript.svg)\n![](https://forthebadge.com/images/badges/contains-cat-gifs.svg)\n![](https://forthebadge.com/images/badges/powered-by-electricity.svg)\n![](https://forthebadge.com/images/badges/makes-people-smile.svg)\n\n## 特性 Feature\n\n在网页中添加 Live2D 看板娘。兼容 PJAX，支持无刷新加载。  \nAdd Live2D widget to web page. Compatible with PJAX.\n\n**警告：本项目使用了大量 ES6 语法，不支持 IE 11 等老旧浏览器。**  \n**WARNING: This project does not support legacy browsers such as IE 11.**\n\n## 示例 Demo\n\n在[米米的博客](https://zhangshuqiao.org)的左下角可查看效果。（注：以下人物模型仅供展示之用，本仓库并不包含任何模型。）\n\n<img src=\"assets/screenshot-2.png\" width=\"280\"><img src=\"assets/screenshot-3.png\" width=\"280\"><img src=\"assets/screenshot-1.png\" width=\"270\">\n\n你也可以在允许的范围内进行二次开发，这里有一些示例\n\n- [demo.html](https://mi.js.org/live2d-widget/demo/demo.html) ，展现基础效果\n- [login.html](https://mi.js.org/live2d-widget/demo/login.html) ，仿 NPM 的登陆界面\n\n## 依赖 Dependencies\n\n本插件需要 Font Awesome (v4 或 v5) 图标支持，请确保相关样式表已在页面中加载。以 Font Awesome v4 为例，请在 `<head>` 中加入：  \nFont Awesome (v4 or v5) is required for this plugin. Take Font Awesome v4 as an example, please add the following in `<head>`:\n```xml\n<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/font-awesome/css/font-awesome.min.css\">\n```\n否则图标将无法正常显示。（如果网页中已经加载了任何版本的 Font Awesome，就不要重复加载了）\n\n## 使用 Usage\n\n将这一行代码加入 `<head>` 或 `<body>`，即可展现出效果：\n```xml\n<script src=\"https://cdn.jsdelivr.net/gh/stevenjoezhang/live2d-widget@latest/autoload.js\"></script>\n```\n如果网站启用了 PJAX，由于看板娘不必每页刷新，因此要注意将相关脚本放到 PJAX 刷新区域之外。\n\n换句话说，如果你是小白，或者只需要最基础的功能，就只用把这一行代码，连同前面加载 Font Awesome 的一行代码，一起放到 html 的 `<head>` 中即可。  \n对于用各种模版引擎（例如 Nunjucks，Jinja 或者 PHP）生成的页面，也要自行修改，方法类似，只是可能略为麻烦。以 [Hexo](https://hexo.io) 为例，需要在主题相关的 ejs 或 njk 模版中正确配置路径，才可以加载。\n\n**但是！我们强烈推荐自己进行配置，否则很多功能是不完整的，并且可能产生问题！**  \n如果你有兴趣自己折腾的话，请看下面的详细说明。\n\n### Using CDN\n\n要自定义有关内容，可以把这个仓库 Fork 一份，然后进行修改。这时，使用方法对应地变为\n```xml\n<script src=\"https://cdn.jsdelivr.net/gh/username/live2d-widget@latest/autoload.js\"></script>\n```\n将此处的 `username` 替换为你的 GitHub 用户名。为了使 CDN 的内容正常刷新，需要创建新的 git tag 并推送至 GitHub 仓库中，否则此处的 `@latest` 仍然指向更新前的文件。此外 CDN 本身存在缓存，因此改动可能需要一定的时间生效。相关文档：\n- [Git Basics - Tagging](https://git-scm.com/book/en/v2/Git-Basics-Tagging)\n- [Managing releases in a repository](https://help.github.com/en/github/administering-a-repository/managing-releases-in-a-repository)\n\n### Self-host\n\n你也可以直接把这些文件放到服务器上，而不是通过 CDN 加载。\n\n- 如果你能够通过 `ssh` 访问你的主机，请把整个仓库克隆到服务器上。执行：\n  ```bash\n  cd /path/to/your/webroot\n  # Clone this repository\n  git clone https://github.com/stevenjoezhang/live2d-widget.git\n  ```\n- 如果你的主机无法用 `ssh` 连接（例如一般的虚拟主机），请选择 `Download ZIP`，然后通过 `ftp` 等方式上传到主机上，再解压到网站的目录下。\n- 如果你是通过 Hexo 等工具部署的静态博客，请在博客源文件（即 `source`）目录下，执行前述的 `git clone` 命令。重新部署博客时，相关文件就会自动上传到对应的路径下。为了避免这些文件被 Hexo 插件错误地修改，可能需要设置 `skip_render`。\n\n这样，整个项目就可以通过你的服务器 IP 或者域名从公网访问了。不妨试试能否正常地通过浏览器打开 `autoload.js` 和 `live2d.min.js` 等文件，并确认这些文件的内容是完整和正确的。  \n一切正常的话，接下来修改一些配置就行了。（需要通过服务器上的文本编辑器修改；你也可以先在本地完成这一步骤，再上传到服务器上）  \n修改 `autoload.js` 中的常量 `live2d_path` 为 `live2d-widget` 这一目录的 URL。比如说，如果你能够通过\n```\nhttps://example.com/path/to/live2d-widget/live2d.min.js\n```\n访问到 `live2d.min.js`，那么就把 `live2d_path` 的值修改为\n```\nhttps://example.com/path/to/live2d-widget/\n```\n路径末尾的 `/` 一定要加上。具体可以参考 `autoload.js` 内的注释。  \n完成后，在你要添加看板娘的界面加入\n```xml\n<script src=\"https://example.com/path/to/live2d-widget/autoload.js\"></script>\n```\n就可以加载了。\n\n## 后端 API\n\n`initWidget` 方法接受名为 `apiPath` 和 `cdnPath` 的参数，两者设置其中一项即可。其中 `apiPath` 为后端 API 的 URL，可以自行搭建，并增加模型（需要修改的内容比较多，此处不再赘述）。而 `cdnPath` 则是通过 jsDelivr 这样的 CDN 服务加载资源，更加稳定。\n\n## 目录结构 Files\n\n- `waifu-tips.js` 包含了按钮和对话框的逻辑；\n- `waifu-tips.json` 中定义了触发条件（`selector`，CSS 选择器）和触发时显示的文字（`text`）；\n- `waifu.css` 是看板娘的样式表。\n\n源文件是对 Hexo 的 [NexT 主题](http://github.com/next-theme/hexo-theme-next)有效的，为了适用于你自己的网页，可能需要自行修改，或增加新内容。  \n**警告：作者不对包括但不限于 `waifu-tips.js` 和 `waifu-tips.json` 文件中的内容负责，请自行确保它们是合适的。**\n\n如果有任何疑问，欢迎提 Issue。如果有任何修改建议，欢迎提 Pull Request。\n\n## 鸣谢 Thanks\n\n<a href=\"https://www.browserstack.com/\"><img height=\"80\" src=\"https://live.browserstack.com/images/opensource/browserstack-logo.svg\" alt=\"BrowserStack Logo\"></a>\n\n> 感谢 BrowserStack 容许我们在真实的浏览器中测试此项目。  \n> Thanks to [BrowserStack](https://www.browserstack.com/) for providing the infrastructure that allows us to test in real browsers!\n\n<a href=\"https://www.jsdelivr.com\"><img height=\"80\" src=\"https://raw.githubusercontent.com/jsdelivr/jsdelivr-media/master/default/svg/jsdelivr-logo-horizontal.svg\"></a>\n\n> 感谢 jsDelivr 提供的 CDN 服务。  \n> Thanks jsDelivr for providing public CDN service.\n\n代码自这篇博文魔改而来：  \nhttps://www.fghrsh.net/post/123.html\n\n点击看板娘的纸飞机按钮时，会出现一个彩蛋，这来自于 [WebsiteAsteroids](http://www.websiteasteroids.com)。\n\n## 更多 More\n\n更多内容可以参考：  \nhttps://imjad.cn/archives/lab/add-dynamic-poster-girl-with-live2d-to-your-blog-02  \nhttps://github.com/xiazeyu/live2d-widget.js  \nhttps://github.com/summerscar/live2dDemo\n\n关于后端 API 模型：  \nhttps://github.com/fghrsh/live2d_api  \nhttps://github.com/xiazeyu/live2d-widget-models  \nhttps://github.com/xiaoski/live2d_models_collection\n\n除此之外，还有桌面版本：  \nhttps://github.com/amorist/platelet  \nhttps://github.com/akiroz/Live2D-Widget  \nhttps://github.com/zenghongtu/PPet  \nhttps://github.com/LikeNeko/L2dPetForMac\n\n以及 Wallpaper Engine：\nhttps://github.com/guansss/nep-live2d\n\n## 许可证 License\n\nReleased under the GNU General Public License v3  \nhttp://www.gnu.org/licenses/gpl-3.0.html\n\n本仓库并不包含任何模型，用作展示的所有 Live2D 模型、图片、动作数据等版权均属于其原作者，仅供研究学习，不得用于商业用途。\n\nLive2D 官方网站：  \nhttps://www.live2d.com/en/  \nhttps://live2d.github.io\n\nLive2D Cubism Core は Live2D Proprietary Software License で提供しています。  \nhttps://www.live2d.com/eula/live2d-proprietary-software-license-agreement_en.html  \nLive2D Cubism Components は Live2D Open Software License で提供しています。  \nhttp://www.live2d.com/eula/live2d-open-software-license-agreement_en.html\n\n> The terms and conditions do prohibit modification, but obfuscating in `live2d.min.js` would not be considered illegal modification.\n\nhttps://community.live2d.com/discussion/140/webgl-developer-licence-and-javascript-question\n\n## 更新 Update\n\n2018年10月31日，由 fghrsh 提供的原 API 停用，请更新至新地址。参考文章：  \nhttps://www.fghrsh.net/post/170.html\n\n2020年1月1日起，本项目不再依赖于 jQuery。\n","date":"2022-06-06T15:39:11.485Z","updated":"2022-06-03T06:00:55.621Z","path":"live2d-widget/README.html","title":"","comments":1,"layout":"page","_id":"cl42z5h5t000o3gn60gs33gsw","content":"<h1>Live2D Widget</h1>\n<p><img src=\"https://forthebadge.com/images/badges/built-with-love.svg\" alt=\"\"><br>\n<img src=\"https://forthebadge.com/images/badges/uses-html.svg\" alt=\"\"><br>\n<img src=\"https://forthebadge.com/images/badges/made-with-javascript.svg\" alt=\"\"><br>\n<img src=\"https://forthebadge.com/images/badges/contains-cat-gifs.svg\" alt=\"\"><br>\n<img src=\"https://forthebadge.com/images/badges/powered-by-electricity.svg\" alt=\"\"><br>\n<img src=\"https://forthebadge.com/images/badges/makes-people-smile.svg\" alt=\"\"></p>\n<h2 id=\"特性-Feature\">特性 Feature</h2>\n<p>在网页中添加 Live2D 看板娘。兼容 PJAX，支持无刷新加载。<br>\nAdd Live2D widget to web page. Compatible with PJAX.</p>\n<p><strong>警告：本项目使用了大量 ES6 语法，不支持 IE 11 等老旧浏览器。</strong><br>\n<strong>WARNING: This project does not support legacy browsers such as IE 11.</strong></p>\n<h2 id=\"示例-Demo\">示例 Demo</h2>\n<p>在<a href=\"https://zhangshuqiao.org\">米米的博客</a>的左下角可查看效果。（注：以下人物模型仅供展示之用，本仓库并不包含任何模型。）</p>\n<p><img src=\"assets/screenshot-2.png\" width=\"280\"><img src=\"assets/screenshot-3.png\" width=\"280\"><img src=\"assets/screenshot-1.png\" width=\"270\"></p>\n<p>你也可以在允许的范围内进行二次开发，这里有一些示例</p>\n<ul>\n<li><a href=\"https://mi.js.org/live2d-widget/demo/demo.html\">demo.html</a> ，展现基础效果</li>\n<li><a href=\"https://mi.js.org/live2d-widget/demo/login.html\">login.html</a> ，仿 NPM 的登陆界面</li>\n</ul>\n<h2 id=\"依赖-Dependencies\">依赖 Dependencies</h2>\n<p>本插件需要 Font Awesome (v4 或 v5) 图标支持，请确保相关样式表已在页面中加载。以 Font Awesome v4 为例，请在 <code>&lt;head&gt;</code> 中加入：<br>\nFont Awesome (v4 or v5) is required for this plugin. Take Font Awesome v4 as an example, please add the following in <code>&lt;head&gt;</code>:</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;font-awesome&#x2F;css&#x2F;font-awesome.min.css&quot;&gt;</code></pre>\n<p>否则图标将无法正常显示。（如果网页中已经加载了任何版本的 Font Awesome，就不要重复加载了）</p>\n<h2 id=\"使用-Usage\">使用 Usage</h2>\n<p>将这一行代码加入 <code>&lt;head&gt;</code> 或 <code>&lt;body&gt;</code>，即可展现出效果：</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;stevenjoezhang&#x2F;live2d-widget@latest&#x2F;autoload.js&quot;&gt;&lt;&#x2F;script&gt;</code></pre>\n<p>如果网站启用了 PJAX，由于看板娘不必每页刷新，因此要注意将相关脚本放到 PJAX 刷新区域之外。</p>\n<p>换句话说，如果你是小白，或者只需要最基础的功能，就只用把这一行代码，连同前面加载 Font Awesome 的一行代码，一起放到 html 的 <code>&lt;head&gt;</code> 中即可。<br>\n对于用各种模版引擎（例如 Nunjucks，Jinja 或者 PHP）生成的页面，也要自行修改，方法类似，只是可能略为麻烦。以 <a href=\"https://hexo.io\">Hexo</a> 为例，需要在主题相关的 ejs 或 njk 模版中正确配置路径，才可以加载。</p>\n<p><strong>但是！我们强烈推荐自己进行配置，否则很多功能是不完整的，并且可能产生问题！</strong><br>\n如果你有兴趣自己折腾的话，请看下面的详细说明。</p>\n<h3 id=\"Using-CDN\">Using CDN</h3>\n<p>要自定义有关内容，可以把这个仓库 Fork 一份，然后进行修改。这时，使用方法对应地变为</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;username&#x2F;live2d-widget@latest&#x2F;autoload.js&quot;&gt;&lt;&#x2F;script&gt;</code></pre>\n<p>将此处的 <code>username</code> 替换为你的 GitHub 用户名。为了使 CDN 的内容正常刷新，需要创建新的 git tag 并推送至 GitHub 仓库中，否则此处的 <code>@latest</code> 仍然指向更新前的文件。此外 CDN 本身存在缓存，因此改动可能需要一定的时间生效。相关文档：</p>\n<ul>\n<li><a href=\"https://git-scm.com/book/en/v2/Git-Basics-Tagging\">Git Basics - Tagging</a></li>\n<li><a href=\"https://help.github.com/en/github/administering-a-repository/managing-releases-in-a-repository\">Managing releases in a repository</a></li>\n</ul>\n<h3 id=\"Self-host\">Self-host</h3>\n<p>你也可以直接把这些文件放到服务器上，而不是通过 CDN 加载。</p>\n<ul>\n<li>如果你能够通过 <code>ssh</code> 访问你的主机，请把整个仓库克隆到服务器上。执行：<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">cd &#x2F;path&#x2F;to&#x2F;your&#x2F;webroot\n# Clone this repository\ngit clone https:&#x2F;&#x2F;github.com&#x2F;stevenjoezhang&#x2F;live2d-widget.git</code></pre>\n</li>\n<li>如果你的主机无法用 <code>ssh</code> 连接（例如一般的虚拟主机），请选择 <code>Download ZIP</code>，然后通过 <code>ftp</code> 等方式上传到主机上，再解压到网站的目录下。</li>\n<li>如果你是通过 Hexo 等工具部署的静态博客，请在博客源文件（即 <code>source</code>）目录下，执行前述的 <code>git clone</code> 命令。重新部署博客时，相关文件就会自动上传到对应的路径下。为了避免这些文件被 Hexo 插件错误地修改，可能需要设置 <code>skip_render</code>。</li>\n</ul>\n<p>这样，整个项目就可以通过你的服务器 IP 或者域名从公网访问了。不妨试试能否正常地通过浏览器打开 <code>autoload.js</code> 和 <code>live2d.min.js</code> 等文件，并确认这些文件的内容是完整和正确的。<br>\n一切正常的话，接下来修改一些配置就行了。（需要通过服务器上的文本编辑器修改；你也可以先在本地完成这一步骤，再上传到服务器上）<br>\n修改 <code>autoload.js</code> 中的常量 <code>live2d_path</code> 为 <code>live2d-widget</code> 这一目录的 URL。比如说，如果你能够通过</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">https:&#x2F;&#x2F;example.com&#x2F;path&#x2F;to&#x2F;live2d-widget&#x2F;live2d.min.js</code></pre>\n<p>访问到 <code>live2d.min.js</code>，那么就把 <code>live2d_path</code> 的值修改为</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">https:&#x2F;&#x2F;example.com&#x2F;path&#x2F;to&#x2F;live2d-widget&#x2F;</code></pre>\n<p>路径末尾的 <code>/</code> 一定要加上。具体可以参考 <code>autoload.js</code> 内的注释。<br>\n完成后，在你要添加看板娘的界面加入</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;example.com&#x2F;path&#x2F;to&#x2F;live2d-widget&#x2F;autoload.js&quot;&gt;&lt;&#x2F;script&gt;</code></pre>\n<p>就可以加载了。</p>\n<h2 id=\"后端-API\">后端 API</h2>\n<p><code>initWidget</code> 方法接受名为 <code>apiPath</code> 和 <code>cdnPath</code> 的参数，两者设置其中一项即可。其中 <code>apiPath</code> 为后端 API 的 URL，可以自行搭建，并增加模型（需要修改的内容比较多，此处不再赘述）。而 <code>cdnPath</code> 则是通过 jsDelivr 这样的 CDN 服务加载资源，更加稳定。</p>\n<h2 id=\"目录结构-Files\">目录结构 Files</h2>\n<ul>\n<li><code>waifu-tips.js</code> 包含了按钮和对话框的逻辑；</li>\n<li><code>waifu-tips.json</code> 中定义了触发条件（<code>selector</code>，CSS 选择器）和触发时显示的文字（<code>text</code>）；</li>\n<li><code>waifu.css</code> 是看板娘的样式表。</li>\n</ul>\n<p>源文件是对 Hexo 的 <a href=\"http://github.com/next-theme/hexo-theme-next\">NexT 主题</a>有效的，为了适用于你自己的网页，可能需要自行修改，或增加新内容。<br>\n<strong>警告：作者不对包括但不限于 <code>waifu-tips.js</code> 和 <code>waifu-tips.json</code> 文件中的内容负责，请自行确保它们是合适的。</strong></p>\n<p>如果有任何疑问，欢迎提 Issue。如果有任何修改建议，欢迎提 Pull Request。</p>\n<h2 id=\"鸣谢-Thanks\">鸣谢 Thanks</h2>\n<p><a href=\"https://www.browserstack.com/\"><img height=\"80\" src=\"https://live.browserstack.com/images/opensource/browserstack-logo.svg\" alt=\"BrowserStack Logo\"></a></p>\n<blockquote>\n<p>感谢 BrowserStack 容许我们在真实的浏览器中测试此项目。<br>\nThanks to <a href=\"https://www.browserstack.com/\">BrowserStack</a> for providing the infrastructure that allows us to test in real browsers!</p>\n</blockquote>\n<p><a href=\"https://www.jsdelivr.com\"><img height=\"80\" src=\"https://raw.githubusercontent.com/jsdelivr/jsdelivr-media/master/default/svg/jsdelivr-logo-horizontal.svg\"></a></p>\n<blockquote>\n<p>感谢 jsDelivr 提供的 CDN 服务。<br>\nThanks jsDelivr for providing public CDN service.</p>\n</blockquote>\n<p>代码自这篇博文魔改而来：<br>\n<a href=\"https://www.fghrsh.net/post/123.html\">https://www.fghrsh.net/post/123.html</a></p>\n<p>点击看板娘的纸飞机按钮时，会出现一个彩蛋，这来自于 <a href=\"http://www.websiteasteroids.com\">WebsiteAsteroids</a>。</p>\n<h2 id=\"更多-More\">更多 More</h2>\n<p>更多内容可以参考：<br>\n<a href=\"https://imjad.cn/archives/lab/add-dynamic-poster-girl-with-live2d-to-your-blog-02\">https://imjad.cn/archives/lab/add-dynamic-poster-girl-with-live2d-to-your-blog-02</a><br>\n<a href=\"https://github.com/xiazeyu/live2d-widget.js\">https://github.com/xiazeyu/live2d-widget.js</a><br>\n<a href=\"https://github.com/summerscar/live2dDemo\">https://github.com/summerscar/live2dDemo</a></p>\n<p>关于后端 API 模型：<br>\n<a href=\"https://github.com/fghrsh/live2d_api\">https://github.com/fghrsh/live2d_api</a><br>\n<a href=\"https://github.com/xiazeyu/live2d-widget-models\">https://github.com/xiazeyu/live2d-widget-models</a><br>\n<a href=\"https://github.com/xiaoski/live2d_models_collection\">https://github.com/xiaoski/live2d_models_collection</a></p>\n<p>除此之外，还有桌面版本：<br>\n<a href=\"https://github.com/amorist/platelet\">https://github.com/amorist/platelet</a><br>\n<a href=\"https://github.com/akiroz/Live2D-Widget\">https://github.com/akiroz/Live2D-Widget</a><br>\n<a href=\"https://github.com/zenghongtu/PPet\">https://github.com/zenghongtu/PPet</a><br>\n<a href=\"https://github.com/LikeNeko/L2dPetForMac\">https://github.com/LikeNeko/L2dPetForMac</a></p>\n<p>以及 Wallpaper Engine：<br>\n<a href=\"https://github.com/guansss/nep-live2d\">https://github.com/guansss/nep-live2d</a></p>\n<h2 id=\"许可证-License\">许可证 License</h2>\n<p>Released under the GNU General Public License v3<br>\n<a href=\"http://www.gnu.org/licenses/gpl-3.0.html\">http://www.gnu.org/licenses/gpl-3.0.html</a></p>\n<p>本仓库并不包含任何模型，用作展示的所有 Live2D 模型、图片、动作数据等版权均属于其原作者，仅供研究学习，不得用于商业用途。</p>\n<p>Live2D 官方网站：<br>\n<a href=\"https://www.live2d.com/en/\">https://www.live2d.com/en/</a><br>\n<a href=\"https://live2d.github.io\">https://live2d.github.io</a></p>\n<p>Live2D Cubism Core は Live2D Proprietary Software License で提供しています。<br>\n<a href=\"https://www.live2d.com/eula/live2d-proprietary-software-license-agreement_en.html\">https://www.live2d.com/eula/live2d-proprietary-software-license-agreement_en.html</a><br>\nLive2D Cubism Components は Live2D Open Software License で提供しています。<br>\n<a href=\"http://www.live2d.com/eula/live2d-open-software-license-agreement_en.html\">http://www.live2d.com/eula/live2d-open-software-license-agreement_en.html</a></p>\n<blockquote>\n<p>The terms and conditions do prohibit modification, but obfuscating in <code>live2d.min.js</code> would not be considered illegal modification.</p>\n</blockquote>\n<p><a href=\"https://community.live2d.com/discussion/140/webgl-developer-licence-and-javascript-question\">https://community.live2d.com/discussion/140/webgl-developer-licence-and-javascript-question</a></p>\n<h2 id=\"更新-Update\">更新 Update</h2>\n<p>2018年10月31日，由 fghrsh 提供的原 API 停用，请更新至新地址。参考文章：<br>\n<a href=\"https://www.fghrsh.net/post/170.html\">https://www.fghrsh.net/post/170.html</a></p>\n<p>2020年1月1日起，本项目不再依赖于 jQuery。</p>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"cover":"https://blog.huangge1199.cn/post/day20220119/bg.jpeg","excerpt":"","more":"<h1>Live2D Widget</h1>\n<p><img src=\"https://forthebadge.com/images/badges/built-with-love.svg\" alt=\"\"><br>\n<img src=\"https://forthebadge.com/images/badges/uses-html.svg\" alt=\"\"><br>\n<img src=\"https://forthebadge.com/images/badges/made-with-javascript.svg\" alt=\"\"><br>\n<img src=\"https://forthebadge.com/images/badges/contains-cat-gifs.svg\" alt=\"\"><br>\n<img src=\"https://forthebadge.com/images/badges/powered-by-electricity.svg\" alt=\"\"><br>\n<img src=\"https://forthebadge.com/images/badges/makes-people-smile.svg\" alt=\"\"></p>\n<h2 id=\"特性-Feature\">特性 Feature</h2>\n<p>在网页中添加 Live2D 看板娘。兼容 PJAX，支持无刷新加载。<br>\nAdd Live2D widget to web page. Compatible with PJAX.</p>\n<p><strong>警告：本项目使用了大量 ES6 语法，不支持 IE 11 等老旧浏览器。</strong><br>\n<strong>WARNING: This project does not support legacy browsers such as IE 11.</strong></p>\n<h2 id=\"示例-Demo\">示例 Demo</h2>\n<p>在<a href=\"https://zhangshuqiao.org\">米米的博客</a>的左下角可查看效果。（注：以下人物模型仅供展示之用，本仓库并不包含任何模型。）</p>\n<p><img src=\"assets/screenshot-2.png\" width=\"280\"><img src=\"assets/screenshot-3.png\" width=\"280\"><img src=\"assets/screenshot-1.png\" width=\"270\"></p>\n<p>你也可以在允许的范围内进行二次开发，这里有一些示例</p>\n<ul>\n<li><a href=\"https://mi.js.org/live2d-widget/demo/demo.html\">demo.html</a> ，展现基础效果</li>\n<li><a href=\"https://mi.js.org/live2d-widget/demo/login.html\">login.html</a> ，仿 NPM 的登陆界面</li>\n</ul>\n<h2 id=\"依赖-Dependencies\">依赖 Dependencies</h2>\n<p>本插件需要 Font Awesome (v4 或 v5) 图标支持，请确保相关样式表已在页面中加载。以 Font Awesome v4 为例，请在 <code>&lt;head&gt;</code> 中加入：<br>\nFont Awesome (v4 or v5) is required for this plugin. Take Font Awesome v4 as an example, please add the following in <code>&lt;head&gt;</code>:</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;font-awesome&#x2F;css&#x2F;font-awesome.min.css&quot;&gt;</code></pre>\n<p>否则图标将无法正常显示。（如果网页中已经加载了任何版本的 Font Awesome，就不要重复加载了）</p>\n<h2 id=\"使用-Usage\">使用 Usage</h2>\n<p>将这一行代码加入 <code>&lt;head&gt;</code> 或 <code>&lt;body&gt;</code>，即可展现出效果：</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;stevenjoezhang&#x2F;live2d-widget@latest&#x2F;autoload.js&quot;&gt;&lt;&#x2F;script&gt;</code></pre>\n<p>如果网站启用了 PJAX，由于看板娘不必每页刷新，因此要注意将相关脚本放到 PJAX 刷新区域之外。</p>\n<p>换句话说，如果你是小白，或者只需要最基础的功能，就只用把这一行代码，连同前面加载 Font Awesome 的一行代码，一起放到 html 的 <code>&lt;head&gt;</code> 中即可。<br>\n对于用各种模版引擎（例如 Nunjucks，Jinja 或者 PHP）生成的页面，也要自行修改，方法类似，只是可能略为麻烦。以 <a href=\"https://hexo.io\">Hexo</a> 为例，需要在主题相关的 ejs 或 njk 模版中正确配置路径，才可以加载。</p>\n<p><strong>但是！我们强烈推荐自己进行配置，否则很多功能是不完整的，并且可能产生问题！</strong><br>\n如果你有兴趣自己折腾的话，请看下面的详细说明。</p>\n<h3 id=\"Using-CDN\">Using CDN</h3>\n<p>要自定义有关内容，可以把这个仓库 Fork 一份，然后进行修改。这时，使用方法对应地变为</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;username&#x2F;live2d-widget@latest&#x2F;autoload.js&quot;&gt;&lt;&#x2F;script&gt;</code></pre>\n<p>将此处的 <code>username</code> 替换为你的 GitHub 用户名。为了使 CDN 的内容正常刷新，需要创建新的 git tag 并推送至 GitHub 仓库中，否则此处的 <code>@latest</code> 仍然指向更新前的文件。此外 CDN 本身存在缓存，因此改动可能需要一定的时间生效。相关文档：</p>\n<ul>\n<li><a href=\"https://git-scm.com/book/en/v2/Git-Basics-Tagging\">Git Basics - Tagging</a></li>\n<li><a href=\"https://help.github.com/en/github/administering-a-repository/managing-releases-in-a-repository\">Managing releases in a repository</a></li>\n</ul>\n<h3 id=\"Self-host\">Self-host</h3>\n<p>你也可以直接把这些文件放到服务器上，而不是通过 CDN 加载。</p>\n<ul>\n<li>如果你能够通过 <code>ssh</code> 访问你的主机，请把整个仓库克隆到服务器上。执行：<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">cd &#x2F;path&#x2F;to&#x2F;your&#x2F;webroot\n# Clone this repository\ngit clone https:&#x2F;&#x2F;github.com&#x2F;stevenjoezhang&#x2F;live2d-widget.git</code></pre>\n</li>\n<li>如果你的主机无法用 <code>ssh</code> 连接（例如一般的虚拟主机），请选择 <code>Download ZIP</code>，然后通过 <code>ftp</code> 等方式上传到主机上，再解压到网站的目录下。</li>\n<li>如果你是通过 Hexo 等工具部署的静态博客，请在博客源文件（即 <code>source</code>）目录下，执行前述的 <code>git clone</code> 命令。重新部署博客时，相关文件就会自动上传到对应的路径下。为了避免这些文件被 Hexo 插件错误地修改，可能需要设置 <code>skip_render</code>。</li>\n</ul>\n<p>这样，整个项目就可以通过你的服务器 IP 或者域名从公网访问了。不妨试试能否正常地通过浏览器打开 <code>autoload.js</code> 和 <code>live2d.min.js</code> 等文件，并确认这些文件的内容是完整和正确的。<br>\n一切正常的话，接下来修改一些配置就行了。（需要通过服务器上的文本编辑器修改；你也可以先在本地完成这一步骤，再上传到服务器上）<br>\n修改 <code>autoload.js</code> 中的常量 <code>live2d_path</code> 为 <code>live2d-widget</code> 这一目录的 URL。比如说，如果你能够通过</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">https:&#x2F;&#x2F;example.com&#x2F;path&#x2F;to&#x2F;live2d-widget&#x2F;live2d.min.js</code></pre>\n<p>访问到 <code>live2d.min.js</code>，那么就把 <code>live2d_path</code> 的值修改为</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">https:&#x2F;&#x2F;example.com&#x2F;path&#x2F;to&#x2F;live2d-widget&#x2F;</code></pre>\n<p>路径末尾的 <code>/</code> 一定要加上。具体可以参考 <code>autoload.js</code> 内的注释。<br>\n完成后，在你要添加看板娘的界面加入</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;example.com&#x2F;path&#x2F;to&#x2F;live2d-widget&#x2F;autoload.js&quot;&gt;&lt;&#x2F;script&gt;</code></pre>\n<p>就可以加载了。</p>\n<h2 id=\"后端-API\">后端 API</h2>\n<p><code>initWidget</code> 方法接受名为 <code>apiPath</code> 和 <code>cdnPath</code> 的参数，两者设置其中一项即可。其中 <code>apiPath</code> 为后端 API 的 URL，可以自行搭建，并增加模型（需要修改的内容比较多，此处不再赘述）。而 <code>cdnPath</code> 则是通过 jsDelivr 这样的 CDN 服务加载资源，更加稳定。</p>\n<h2 id=\"目录结构-Files\">目录结构 Files</h2>\n<ul>\n<li><code>waifu-tips.js</code> 包含了按钮和对话框的逻辑；</li>\n<li><code>waifu-tips.json</code> 中定义了触发条件（<code>selector</code>，CSS 选择器）和触发时显示的文字（<code>text</code>）；</li>\n<li><code>waifu.css</code> 是看板娘的样式表。</li>\n</ul>\n<p>源文件是对 Hexo 的 <a href=\"http://github.com/next-theme/hexo-theme-next\">NexT 主题</a>有效的，为了适用于你自己的网页，可能需要自行修改，或增加新内容。<br>\n<strong>警告：作者不对包括但不限于 <code>waifu-tips.js</code> 和 <code>waifu-tips.json</code> 文件中的内容负责，请自行确保它们是合适的。</strong></p>\n<p>如果有任何疑问，欢迎提 Issue。如果有任何修改建议，欢迎提 Pull Request。</p>\n<h2 id=\"鸣谢-Thanks\">鸣谢 Thanks</h2>\n<p><a href=\"https://www.browserstack.com/\"><img height=\"80\" src=\"https://live.browserstack.com/images/opensource/browserstack-logo.svg\" alt=\"BrowserStack Logo\"></a></p>\n<blockquote>\n<p>感谢 BrowserStack 容许我们在真实的浏览器中测试此项目。<br>\nThanks to <a href=\"https://www.browserstack.com/\">BrowserStack</a> for providing the infrastructure that allows us to test in real browsers!</p>\n</blockquote>\n<p><a href=\"https://www.jsdelivr.com\"><img height=\"80\" src=\"https://raw.githubusercontent.com/jsdelivr/jsdelivr-media/master/default/svg/jsdelivr-logo-horizontal.svg\"></a></p>\n<blockquote>\n<p>感谢 jsDelivr 提供的 CDN 服务。<br>\nThanks jsDelivr for providing public CDN service.</p>\n</blockquote>\n<p>代码自这篇博文魔改而来：<br>\n<a href=\"https://www.fghrsh.net/post/123.html\">https://www.fghrsh.net/post/123.html</a></p>\n<p>点击看板娘的纸飞机按钮时，会出现一个彩蛋，这来自于 <a href=\"http://www.websiteasteroids.com\">WebsiteAsteroids</a>。</p>\n<h2 id=\"更多-More\">更多 More</h2>\n<p>更多内容可以参考：<br>\n<a href=\"https://imjad.cn/archives/lab/add-dynamic-poster-girl-with-live2d-to-your-blog-02\">https://imjad.cn/archives/lab/add-dynamic-poster-girl-with-live2d-to-your-blog-02</a><br>\n<a href=\"https://github.com/xiazeyu/live2d-widget.js\">https://github.com/xiazeyu/live2d-widget.js</a><br>\n<a href=\"https://github.com/summerscar/live2dDemo\">https://github.com/summerscar/live2dDemo</a></p>\n<p>关于后端 API 模型：<br>\n<a href=\"https://github.com/fghrsh/live2d_api\">https://github.com/fghrsh/live2d_api</a><br>\n<a href=\"https://github.com/xiazeyu/live2d-widget-models\">https://github.com/xiazeyu/live2d-widget-models</a><br>\n<a href=\"https://github.com/xiaoski/live2d_models_collection\">https://github.com/xiaoski/live2d_models_collection</a></p>\n<p>除此之外，还有桌面版本：<br>\n<a href=\"https://github.com/amorist/platelet\">https://github.com/amorist/platelet</a><br>\n<a href=\"https://github.com/akiroz/Live2D-Widget\">https://github.com/akiroz/Live2D-Widget</a><br>\n<a href=\"https://github.com/zenghongtu/PPet\">https://github.com/zenghongtu/PPet</a><br>\n<a href=\"https://github.com/LikeNeko/L2dPetForMac\">https://github.com/LikeNeko/L2dPetForMac</a></p>\n<p>以及 Wallpaper Engine：<br>\n<a href=\"https://github.com/guansss/nep-live2d\">https://github.com/guansss/nep-live2d</a></p>\n<h2 id=\"许可证-License\">许可证 License</h2>\n<p>Released under the GNU General Public License v3<br>\n<a href=\"http://www.gnu.org/licenses/gpl-3.0.html\">http://www.gnu.org/licenses/gpl-3.0.html</a></p>\n<p>本仓库并不包含任何模型，用作展示的所有 Live2D 模型、图片、动作数据等版权均属于其原作者，仅供研究学习，不得用于商业用途。</p>\n<p>Live2D 官方网站：<br>\n<a href=\"https://www.live2d.com/en/\">https://www.live2d.com/en/</a><br>\n<a href=\"https://live2d.github.io\">https://live2d.github.io</a></p>\n<p>Live2D Cubism Core は Live2D Proprietary Software License で提供しています。<br>\n<a href=\"https://www.live2d.com/eula/live2d-proprietary-software-license-agreement_en.html\">https://www.live2d.com/eula/live2d-proprietary-software-license-agreement_en.html</a><br>\nLive2D Cubism Components は Live2D Open Software License で提供しています。<br>\n<a href=\"http://www.live2d.com/eula/live2d-open-software-license-agreement_en.html\">http://www.live2d.com/eula/live2d-open-software-license-agreement_en.html</a></p>\n<blockquote>\n<p>The terms and conditions do prohibit modification, but obfuscating in <code>live2d.min.js</code> would not be considered illegal modification.</p>\n</blockquote>\n<p><a href=\"https://community.live2d.com/discussion/140/webgl-developer-licence-and-javascript-question\">https://community.live2d.com/discussion/140/webgl-developer-licence-and-javascript-question</a></p>\n<h2 id=\"更新-Update\">更新 Update</h2>\n<p>2018年10月31日，由 fghrsh 提供的原 API 停用，请更新至新地址。参考文章：<br>\n<a href=\"https://www.fghrsh.net/post/170.html\">https://www.fghrsh.net/post/170.html</a></p>\n<p>2020年1月1日起，本项目不再依赖于 jQuery。</p>\n"},{"_content":"// 注意：live2d_path 参数应使用绝对路径\nconst live2d_path = \"/live2d-widget/\";\n\n// 封装异步加载资源的方法\nfunction loadExternalResource(url, type) {\n\treturn new Promise((resolve, reject) => {\n\t\tlet tag;\n\n\t\tif (type === \"css\") {\n\t\t\ttag = document.createElement(\"link\");\n\t\t\ttag.rel = \"stylesheet\";\n\t\t\ttag.href = url;\n\t\t\ttag.id = \"live2d_css\";\n\t\t}\n\t\telse if (type === \"js\") {\n\t\t\ttag = document.createElement(\"script\");\n\t\t\ttag.src = url;\n\t\t}\n\t\tif (tag) {\n\t\t\ttag.onload = () => resolve(url);\n\t\t\ttag.onerror = () => reject(url);\n\t\t\tdocument.head.appendChild(tag);\n\t\t}\n\t});\n}\n\n// 加载 waifu.css live2d.min.js waifu-tips.js\nif (screen.width >= 768) {\n\t// \"768\"为最低显示宽度\n\tPromise.all([\n\t\tloadExternalResource(live2d_path + \"waifu_left.css\", \"css\"),\n\t\tloadExternalResource(live2d_path + \"live2d.min.js\", \"js\"),\n\t\tloadExternalResource(live2d_path + \"waifu-tips.js\", \"js\")\n\t]).then(() => {\n\t\tinitWidget({\n\t\t\twaifuPath: live2d_path + \"waifu-tips.json\",\n\t\t\t// apiPath: \"https://live2d.fghrsh.net/api/\",\n\t\t\tcdnPath: \"https://cdn.jsdelivr.net/gh/fghrsh/live2d_api/\"\n\t\t});\n\t});\n}\n// initWidget 第一个参数为 waifu-tips.json 的路径，第二个参数为 API 地址\n// API 后端可自行搭建，参考 https://github.com/fghrsh/live2d_api\n// 初始化看板娘会自动加载指定目录下的 waifu-tips.json\n\nconsole.log(`\n  く__,.ヘヽ.        /  ,ー､ 〉\n           ＼ ', !-─‐-i  /  /´\n           ／｀ｰ'       L/／｀ヽ､\n         /   ／,   /|   ,   ,       ',\n       ｲ   / /-‐/  ｉ  L_ ﾊ ヽ!   i\n        ﾚ ﾍ 7ｲ｀ﾄ   ﾚ'ｧ-ﾄ､!ハ|   |\n          !,/7 '0'     ´0iソ|    |\n          |.从\"    _     ,,,, / |./    |\n          ﾚ'| i＞.､,,__  _,.イ /   .i   |\n            ﾚ'| | / k_７_/ﾚ'ヽ,  ﾊ.  |\n              | |/i 〈|/   i  ,.ﾍ |  i  |\n             .|/ /  ｉ：    ﾍ!    ＼  |\n              kヽ>､ﾊ    _,.ﾍ､    /､!\n              !'〈//｀Ｔ´', ＼ ｀'7'ｰr'\n              ﾚ'ヽL__|___i,___,ンﾚ|ノ\n                  ﾄ-,/  |___./\n                  'ｰ'    !_,.:\n`);\n","source":"live2d-widget/autoload.js","raw":"// 注意：live2d_path 参数应使用绝对路径\nconst live2d_path = \"/live2d-widget/\";\n\n// 封装异步加载资源的方法\nfunction loadExternalResource(url, type) {\n\treturn new Promise((resolve, reject) => {\n\t\tlet tag;\n\n\t\tif (type === \"css\") {\n\t\t\ttag = document.createElement(\"link\");\n\t\t\ttag.rel = \"stylesheet\";\n\t\t\ttag.href = url;\n\t\t\ttag.id = \"live2d_css\";\n\t\t}\n\t\telse if (type === \"js\") {\n\t\t\ttag = document.createElement(\"script\");\n\t\t\ttag.src = url;\n\t\t}\n\t\tif (tag) {\n\t\t\ttag.onload = () => resolve(url);\n\t\t\ttag.onerror = () => reject(url);\n\t\t\tdocument.head.appendChild(tag);\n\t\t}\n\t});\n}\n\n// 加载 waifu.css live2d.min.js waifu-tips.js\nif (screen.width >= 768) {\n\t// \"768\"为最低显示宽度\n\tPromise.all([\n\t\tloadExternalResource(live2d_path + \"waifu_left.css\", \"css\"),\n\t\tloadExternalResource(live2d_path + \"live2d.min.js\", \"js\"),\n\t\tloadExternalResource(live2d_path + \"waifu-tips.js\", \"js\")\n\t]).then(() => {\n\t\tinitWidget({\n\t\t\twaifuPath: live2d_path + \"waifu-tips.json\",\n\t\t\t// apiPath: \"https://live2d.fghrsh.net/api/\",\n\t\t\tcdnPath: \"https://cdn.jsdelivr.net/gh/fghrsh/live2d_api/\"\n\t\t});\n\t});\n}\n// initWidget 第一个参数为 waifu-tips.json 的路径，第二个参数为 API 地址\n// API 后端可自行搭建，参考 https://github.com/fghrsh/live2d_api\n// 初始化看板娘会自动加载指定目录下的 waifu-tips.json\n\nconsole.log(`\n  く__,.ヘヽ.        /  ,ー､ 〉\n           ＼ ', !-─‐-i  /  /´\n           ／｀ｰ'       L/／｀ヽ､\n         /   ／,   /|   ,   ,       ',\n       ｲ   / /-‐/  ｉ  L_ ﾊ ヽ!   i\n        ﾚ ﾍ 7ｲ｀ﾄ   ﾚ'ｧ-ﾄ､!ハ|   |\n          !,/7 '0'     ´0iソ|    |\n          |.从\"    _     ,,,, / |./    |\n          ﾚ'| i＞.､,,__  _,.イ /   .i   |\n            ﾚ'| | / k_７_/ﾚ'ヽ,  ﾊ.  |\n              | |/i 〈|/   i  ,.ﾍ |  i  |\n             .|/ /  ｉ：    ﾍ!    ＼  |\n              kヽ>､ﾊ    _,.ﾍ､    /､!\n              !'〈//｀Ｔ´', ＼ ｀'7'ｰr'\n              ﾚ'ヽL__|___i,___,ンﾚ|ノ\n                  ﾄ-,/  |___./\n                  'ｰ'    !_,.:\n`);\n","date":"2022-06-06T15:39:11.485Z","updated":"2022-06-03T06:00:55.625Z","path":"live2d-widget/autoload.js","layout":"false","title":"","comments":1,"_id":"cl42z5h5v000t3gn61xwn9cyh","content":"// 注意：live2d_path 参数应使用绝对路径\nconst live2d_path = \"/live2d-widget/\";\n\n// 封装异步加载资源的方法\nfunction loadExternalResource(url, type) {\n\treturn new Promise((resolve, reject) => {\n\t\tlet tag;\n\n\t\tif (type === \"css\") {\n\t\t\ttag = document.createElement(\"link\");\n\t\t\ttag.rel = \"stylesheet\";\n\t\t\ttag.href = url;\n\t\t\ttag.id = \"live2d_css\";\n\t\t}\n\t\telse if (type === \"js\") {\n\t\t\ttag = document.createElement(\"script\");\n\t\t\ttag.src = url;\n\t\t}\n\t\tif (tag) {\n\t\t\ttag.onload = () => resolve(url);\n\t\t\ttag.onerror = () => reject(url);\n\t\t\tdocument.head.appendChild(tag);\n\t\t}\n\t});\n}\n\n// 加载 waifu.css live2d.min.js waifu-tips.js\nif (screen.width >= 768) {\n\t// \"768\"为最低显示宽度\n\tPromise.all([\n\t\tloadExternalResource(live2d_path + \"waifu_left.css\", \"css\"),\n\t\tloadExternalResource(live2d_path + \"live2d.min.js\", \"js\"),\n\t\tloadExternalResource(live2d_path + \"waifu-tips.js\", \"js\")\n\t]).then(() => {\n\t\tinitWidget({\n\t\t\twaifuPath: live2d_path + \"waifu-tips.json\",\n\t\t\t// apiPath: \"https://live2d.fghrsh.net/api/\",\n\t\t\tcdnPath: \"https://cdn.jsdelivr.net/gh/fghrsh/live2d_api/\"\n\t\t});\n\t});\n}\n// initWidget 第一个参数为 waifu-tips.json 的路径，第二个参数为 API 地址\n// API 后端可自行搭建，参考 https://github.com/fghrsh/live2d_api\n// 初始化看板娘会自动加载指定目录下的 waifu-tips.json\n\nconsole.log(`\n  く__,.ヘヽ.        /  ,ー､ 〉\n           ＼ ', !-─‐-i  /  /´\n           ／｀ｰ'       L/／｀ヽ､\n         /   ／,   /|   ,   ,       ',\n       ｲ   / /-‐/  ｉ  L_ ﾊ ヽ!   i\n        ﾚ ﾍ 7ｲ｀ﾄ   ﾚ'ｧ-ﾄ､!ハ|   |\n          !,/7 '0'     ´0iソ|    |\n          |.从\"    _     ,,,, / |./    |\n          ﾚ'| i＞.､,,__  _,.イ /   .i   |\n            ﾚ'| | / k_７_/ﾚ'ヽ,  ﾊ.  |\n              | |/i 〈|/   i  ,.ﾍ |  i  |\n             .|/ /  ｉ：    ﾍ!    ＼  |\n              kヽ>､ﾊ    _,.ﾍ､    /､!\n              !'〈//｀Ｔ´', ＼ ｀'7'ｰr'\n              ﾚ'ヽL__|___i,___,ンﾚ|ノ\n                  ﾄ-,/  |___./\n                  'ｰ'    !_,.:\n`);\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"cover":"https://blog.huangge1199.cn/post/nexusCreate/bg.jpeg","excerpt":"","more":"// 注意：live2d_path 参数应使用绝对路径\nconst live2d_path = \"/live2d-widget/\";\n\n// 封装异步加载资源的方法\nfunction loadExternalResource(url, type) {\n\treturn new Promise((resolve, reject) => {\n\t\tlet tag;\n\n\t\tif (type === \"css\") {\n\t\t\ttag = document.createElement(\"link\");\n\t\t\ttag.rel = \"stylesheet\";\n\t\t\ttag.href = url;\n\t\t\ttag.id = \"live2d_css\";\n\t\t}\n\t\telse if (type === \"js\") {\n\t\t\ttag = document.createElement(\"script\");\n\t\t\ttag.src = url;\n\t\t}\n\t\tif (tag) {\n\t\t\ttag.onload = () => resolve(url);\n\t\t\ttag.onerror = () => reject(url);\n\t\t\tdocument.head.appendChild(tag);\n\t\t}\n\t});\n}\n\n// 加载 waifu.css live2d.min.js waifu-tips.js\nif (screen.width >= 768) {\n\t// \"768\"为最低显示宽度\n\tPromise.all([\n\t\tloadExternalResource(live2d_path + \"waifu_left.css\", \"css\"),\n\t\tloadExternalResource(live2d_path + \"live2d.min.js\", \"js\"),\n\t\tloadExternalResource(live2d_path + \"waifu-tips.js\", \"js\")\n\t]).then(() => {\n\t\tinitWidget({\n\t\t\twaifuPath: live2d_path + \"waifu-tips.json\",\n\t\t\t// apiPath: \"https://live2d.fghrsh.net/api/\",\n\t\t\tcdnPath: \"https://cdn.jsdelivr.net/gh/fghrsh/live2d_api/\"\n\t\t});\n\t});\n}\n// initWidget 第一个参数为 waifu-tips.json 的路径，第二个参数为 API 地址\n// API 后端可自行搭建，参考 https://github.com/fghrsh/live2d_api\n// 初始化看板娘会自动加载指定目录下的 waifu-tips.json\n\nconsole.log(`\n  く__,.ヘヽ.        /  ,ー､ 〉\n           ＼ ', !-─‐-i  /  /´\n           ／｀ｰ'       L/／｀ヽ､\n         /   ／,   /|   ,   ,       ',\n       ｲ   / /-‐/  ｉ  L_ ﾊ ヽ!   i\n        ﾚ ﾍ 7ｲ｀ﾄ   ﾚ'ｧ-ﾄ､!ハ|   |\n          !,/7 '0'     ´0iソ|    |\n          |.从\"    _     ,,,, / |./    |\n          ﾚ'| i＞.､,,__  _,.イ /   .i   |\n            ﾚ'| | / k_７_/ﾚ'ヽ,  ﾊ.  |\n              | |/i 〈|/   i  ,.ﾍ |  i  |\n             .|/ /  ｉ：    ﾍ!    ＼  |\n              kヽ>､ﾊ    _,.ﾍ､    /､!\n              !'〈//｀Ｔ´', ＼ ｀'7'ｰr'\n              ﾚ'ヽL__|___i,___,ンﾚ|ノ\n                  ﾄ-,/  |___./\n                  'ｰ'    !_,.:\n`);\n"},{"_content":"/*\n * Live2D Widget\n * https://github.com/stevenjoezhang/live2d-widget\n */\n\nfunction loadWidget(config) {\n\tlet { waifuPath, apiPath, cdnPath } = config;\n\tlet useCDN = false, modelList;\n\tif (typeof cdnPath === \"string\") {\n\t\tuseCDN = true;\n\t\tif (!cdnPath.endsWith(\"/\")) cdnPath += \"/\";\n\t} else if (typeof apiPath === \"string\") {\n\t\tif (!apiPath.endsWith(\"/\")) apiPath += \"/\";\n\t} else {\n\t\tconsole.error(\"Invalid initWidget argument!\");\n\t\treturn;\n\t}\n\tlocalStorage.removeItem(\"waifu-display\");\n\tsessionStorage.removeItem(\"waifu-text\");\n\tdocument.body.insertAdjacentHTML(\"beforeend\", `<div id=\"waifu\">\n\t\t\t<div id=\"waifu-tips\"></div>\n\t\t\t<canvas id=\"live2d\" width=\"800\" height=\"800\"></canvas>\n\t\t\t<div id=\"waifu-tool\">\n\t\t\t\t<span class=\"fa fa-lg fa-comment\"></span>\n<!--\t\t\t\t<span class=\"fa fa-lg fa-paper-plane\"></span>-->\n\t\t\t\t<span class=\"fa fa-lg fa-user-circle\"></span>\n\t\t\t\t<span class=\"fa fa-lg fa-street-view\"></span>\n\t\t\t\t<span class=\"fa fa-lg fa-camera-retro\"></span>\n\t\t\t\t<span class=\"fa fa-lg fa-info-circle\"></span>\n\t\t\t\t<span class=\"fa fa-lg fa-times\"></span>\n                                <span class=\"fa fa-lg fa-chevron-right\" id=\"live2d-go-right\"></span>\n                                <span class=\"fa fa-lg fa-chevron-left\" id=\"live2d-go-left\"></span>\n\t\t\t</div>\n\t\t</div>`);\n\t// https://stackoverflow.com/questions/24148403/trigger-css-transition-on-appended-element\n\tsetTimeout(() => {\n\t\tdocument.getElementById(\"waifu\").style.bottom = 0;\n\t}, 0);\n\n\tfunction randomSelection(obj) {\n\t\treturn Array.isArray(obj) ? obj[Math.floor(Math.random() * obj.length)] : obj;\n\t}\n\t// 检测用户活动状态，并在空闲时显示消息\n\tlet userAction = false,\n\t\tuserActionTimer,\n\t\tmessageTimer,\n\t\tmessageArray = [\"好久不见，日子过得好快呢……\", \"大坏蛋！你都多久没理人家了呀，嘤嘤嘤～\", \"嗨～快来逗我玩吧！\", \"拿小拳拳锤你胸口！\", \"记得把小家加入 Adblock 白名单哦！\"];\n\twindow.addEventListener(\"mousemove\", () => userAction = true);\n\twindow.addEventListener(\"keydown\", () => userAction = true);\n\tsetInterval(() => {\n\t\tif (userAction) {\n\t\t\tuserAction = false;\n\t\t\tclearInterval(userActionTimer);\n\t\t\tuserActionTimer = null;\n\t\t} else if (!userActionTimer) {\n\t\t\tuserActionTimer = setInterval(() => {\n\t\t\t\tshowMessage(randomSelection(messageArray), 6000, 9);\n\t\t\t}, 20000);\n\t\t}\n\t}, 1000);\n\n        (function () { // 根据位置加载\n                if (localStorage.getItem(\"Live2DPlace\") === \"left\") {\n                        document.getElementById(\"live2d-go-left\").style.display = \"none\";\n                } else if (localStorage.getItem(\"Live2DPlace\") === \"right\") {\n                        document.getElementById(\"live2d-go-right\").style.display = \"none\";\n                        document.getElementById(\"live2d_css\").href = live2d_path + \"waifu_right.css\";\n                }\n        })();\n\n\t(function registerEventListener() { // 工具栏菜单效果\n\t\tdocument.querySelector(\"#waifu-tool .fa-comment\").addEventListener(\"click\", showHitokoto); // 一言API对话\n\t\t// document.querySelector(\"#waifu-tool .fa-paper-plane\").addEventListener(\"click\", () => { // 飞机大战（雾）\n\t\t// \tif (window.Asteroids) {\n\t\t// \t\tif (!window.ASTEROIDSPLAYERS) window.ASTEROIDSPLAYERS = [];\n\t\t// \t\twindow.ASTEROIDSPLAYERS.push(new Asteroids());\n\t\t// \t} else {\n\t\t// \t\tconst script = document.createElement(\"script\");\n\t\t// \t\tscript.src = \"https://cdn.jsdelivr.net/gh/stevenjoezhang/asteroids/asteroids.js\";\n\t\t// \t\tdocument.head.appendChild(script);\n\t\t// \t}\n\t\t// });\n\t\tdocument.querySelector(\"#waifu-tool .fa-user-circle\").addEventListener(\"click\", loadOtherModel); // 切换模型\n\t\tdocument.querySelector(\"#waifu-tool .fa-street-view\").addEventListener(\"click\", loadRandModel); // 切换材质\n\t\tdocument.querySelector(\"#waifu-tool .fa-camera-retro\").addEventListener(\"click\", () => { // 输出照片\n\t\t\tshowMessage(\"照好了嘛，是不是很可爱呢？\", 6000, 9);\n\t\t\tLive2D.captureName = \"photo.png\"; // 输出照片的名字\n\t\t\tLive2D.captureFrame = true;\n\t\t});\n\t\tdocument.querySelector(\"#waifu-tool .fa-info-circle\").addEventListener(\"click\", () => { // 关于页转跳\n\t\t\topen(\"https://github.com/stevenjoezhang/live2d-widget\"); //关于页链接\n\t\t});\n\t\tdocument.querySelector(\"#waifu-tool .fa-times\").addEventListener(\"click\", () => { // 关闭看板娘\n\t\t\tlocalStorage.setItem(\"waifu-display\", Date.now());\n\t\t\tshowMessage(\"愿你有一天能与重要的人重逢。\", 2000, 11);\n\t\t\tdocument.getElementById(\"waifu\").style.bottom = \"-500px\";\n\t\t\tsetTimeout(() => {\n\t\t\t\tdocument.getElementById(\"waifu\").style.display = \"none\";\n\t\t\t\tdocument.getElementById(\"waifu-toggle\").classList.add(\"waifu-toggle-active\");\n\t\t\t}, 3000);\n\t\t});\n\t\tdocument.querySelector(\"#waifu-tool .fa-chevron-right\").addEventListener(\"click\", () => { // 切换看板娘位置（左 => 右）\n\t\t\tlocalStorage.setItem(\"Live2DPlace\", \"right\");\n\t\t\tshowMessage(\"耶，可以去右边了呢～。\", 2000, 11);\n\t\t\tdocument.getElementById(\"waifu\").style.bottom = \"-500px\";\n\t\t\tdocument.getElementById(\"waifu-toggle\").style.display = \"none\";\n\t\t\tsetTimeout(() => {\n\t\t\t\tdocument.getElementById(\"live2d_css\").href = live2d_path + \"waifu_right.css\";\n\t\t\t\tdocument.getElementById(\"waifu\").style.bottom = \"0px\";\n\t\t\t\tdocument.getElementById(\"live2d-go-right\").style.display = \"none\";\n\t\t\t\tdocument.getElementById(\"live2d-go-left\").style.display = \"block\";\n\t\t\t}, 3000);\n\t\t\tsetTimeout('document.getElementById(\"waifu-toggle\").style.display = \"inline\"',6000);\n\t\t});\n                document.querySelector(\"#waifu-tool .fa-chevron-left\").addEventListener(\"click\", () => { // 切换看板娘位置（左 <= 右）\n\t\t\tlocalStorage.setItem(\"Live2DPlace\", \"left\");\n\t\t\tshowMessage(\"耶，可以去左边了呢～。\", 2000, 11);\n\t\t\tdocument.getElementById(\"waifu\").style.bottom = \"-500px\";\n\t\t\tdocument.getElementById(\"waifu-toggle\").style.display = \"none\";\n\t\t\tsetTimeout(() => {\n\t\t\t\tdocument.getElementById(\"live2d_css\").href = live2d_path + \"waifu_left.css\";\n\t\t\t\tdocument.getElementById(\"waifu\").style.bottom = \"0px\";\n\t\t\t\tdocument.getElementById(\"live2d-go-left\").style.display = \"none\";\n\t\t\t\tdocument.getElementById(\"live2d-go-right\").style.display = \"block\";\n\t\t\t}, 3000);\n\t\t\tsetTimeout('document.getElementById(\"waifu-toggle\").style.display = \"inline\"',6000);\n\t\t});\n\t\tconst devtools = () => { };\n\t\tconsole.log(\"%c\", devtools);\n\t\tdevtools.toString = () => {\n\t\t\tshowMessage(\"哈哈，你打开了控制台，是想要看看我的小秘密吗？\", 6000, 9);\n\t\t};\n\t\twindow.addEventListener(\"copy\", () => {\n\t\t\tshowMessage(\"你都复制了些什么呀，转载要记得加上出处哦！\", 6000, 9);\n\t\t});\n\t\twindow.addEventListener(\"visibilitychange\", () => {\n\t\t\tif (!document.hidden) showMessage(\"哇，你终于回来了～\", 6000, 9);\n\t\t});\n\t})();\n\n\t(function welcomeMessage() {\n\t\tlet text;\n\t\tif (location.pathname === \"/\") { // 如果是主页\n\t\t\tconst now = new Date().getHours();\n\t\t\tif (now > 5 && now <= 7) text = \"早上好！一日之计在于晨，美好的一天就要开始了。\";\n\t\t\telse if (now > 7 && now <= 11) text = \"上午好！工作顺利嘛，不要久坐，多起来走动走动哦！\";\n\t\t\telse if (now > 11 && now <= 13) text = \"中午了，工作了一个上午，现在是午餐时间！\";\n\t\t\telse if (now > 13 && now <= 17) text = \"午后很容易犯困呢，今天的运动目标完成了吗？\";\n\t\t\telse if (now > 17 && now <= 19) text = \"傍晚了！窗外夕阳的景色很美丽呢，最美不过夕阳红～\";\n\t\t\telse if (now > 19 && now <= 21) text = \"晚上好，今天过得怎么样？\";\n\t\t\telse if (now > 21 && now <= 23) text = [\"已经这么晚了呀，早点休息吧，晚安～\", \"深夜时要爱护眼睛呀！\"];\n\t\t\telse text = \"你是夜猫子呀？这么晚还不睡觉，明天起的来嘛？\";\n\t\t} else if (document.referrer !== \"\") {\n\t\t\tconst referrer = new URL(document.referrer),\n\t\t\t\tdomain = referrer.hostname.split(\".\")[1];\n\t\t\tif (location.hostname === referrer.hostname) text = `欢迎阅读<span>「${document.title.split(\" - \")[0]}」</span>`;\n\t\t\telse if (domain === \"baidu\") text = `Hello！来自 百度搜索 的朋友<br>你是搜索 <span>${referrer.search.split(\"&wd=\")[1].split(\"&\")[0]}</span> 找到的我吗？`;\n\t\t\telse if (domain === \"so\") text = `Hello！来自 360搜索 的朋友<br>你是搜索 <span>${referrer.search.split(\"&q=\")[1].split(\"&\")[0]}</span> 找到的我吗？`;\n\t\t\telse if (domain === \"google\") text = `Hello！来自 谷歌搜索 的朋友<br>欢迎阅读<span>「${document.title.split(\" - \")[0]}」</span>`;\n\t\t\telse text = `Hello！来自 <span>${referrer.hostname}</span> 的朋友`;\n\t\t} else {\n\t\t\ttext = `欢迎阅读<span>「${document.title.split(\" - \")[0]}」</span>`;\n\t\t}\n\t\tshowMessage(text, 7000, 8);\n\t})();\n\n\tfunction showHitokoto() { // 增加 hitokoto.cn 的 API\n\t\tfetch(\"https://v1.hitokoto.cn\")\n\t\t\t.then(response => response.json())\n\t\t\t.then(result => {\n\t\t\t\tconst text = `这句一言来自 <span>「${result.from}」</span>，是 <span>${result.creator}</span> 在 hitokoto.cn 投稿的。`;\n\t\t\t\tshowMessage(result.hitokoto, 6000, 9);\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tshowMessage(text, 4000, 9);\n\t\t\t\t}, 6000);\n\t\t\t});\n\t}\n\n\tfunction showMessage(text, timeout, priority) {\n\t\tif (!text || (sessionStorage.getItem(\"waifu-text\") && sessionStorage.getItem(\"waifu-text\") > priority)) return;\n\t\tif (messageTimer) {\n\t\t\tclearTimeout(messageTimer);\n\t\t\tmessageTimer = null;\n\t\t}\n\t\ttext = randomSelection(text);\n\t\tsessionStorage.setItem(\"waifu-text\", priority);\n\t\tconst tips = document.getElementById(\"waifu-tips\");\n\t\ttips.innerHTML = text;\n\t\ttips.classList.add(\"waifu-tips-active\");\n\t\tmessageTimer = setTimeout(() => {\n\t\t\tsessionStorage.removeItem(\"waifu-text\");\n\t\t\ttips.classList.remove(\"waifu-tips-active\");\n\t\t}, timeout);\n\t}\n\n\t(function initModel() {\n\t\tlet modelId = localStorage.getItem(\"modelId\"),\n\t\t\tmodelTexturesId = localStorage.getItem(\"modelTexturesId\");\n\t\tif (modelId === null) {\n\t\t\t// 首次访问时加载 指定模型 的 指定材质\n\t\t\tmodelId = 2; // 模型 ID\n\t\t\tmodelTexturesId = 39; // 材质 ID\n\t\t}\n\t\tloadModel(modelId, modelTexturesId);\n\t\tfetch(waifuPath)\n\t\t\t.then(response => response.json())\n\t\t\t.then(result => {\n\t\t\t\twindow.addEventListener(\"mouseover\", event => {\n\t\t\t\t\tfor (let { selector, text } of result.mouseover) {\n\t\t\t\t\t\tif (!event.target.matches(selector)) continue;\n\t\t\t\t\t\ttext = randomSelection(text);\n\t\t\t\t\t\ttext = text.replace(\"{text}\", event.target.innerText);\n\t\t\t\t\t\tshowMessage(text, 4000, 8);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\twindow.addEventListener(\"click\", event => {\n\t\t\t\t\tfor (let { selector, text } of result.click) {\n\t\t\t\t\t\tif (!event.target.matches(selector)) continue;\n\t\t\t\t\t\ttext = randomSelection(text);\n\t\t\t\t\t\ttext = text.replace(\"{text}\", event.target.innerText);\n\t\t\t\t\t\tshowMessage(text, 4000, 8);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tresult.seasons.forEach(({ date, text }) => {\n\t\t\t\t\tconst now = new Date(),\n\t\t\t\t\t\tafter = date.split(\"-\")[0],\n\t\t\t\t\t\tbefore = date.split(\"-\")[1] || after;\n\t\t\t\t\tif ((after.split(\"/\")[0] <= now.getMonth() + 1 && now.getMonth() + 1 <= before.split(\"/\")[0]) && (after.split(\"/\")[1] <= now.getDate() && now.getDate() <= before.split(\"/\")[1])) {\n\t\t\t\t\t\ttext = randomSelection(text);\n\t\t\t\t\t\ttext = text.replace(\"{year}\", now.getFullYear());\n\t\t\t\t\t\t//showMessage(text, 7000, true);\n\t\t\t\t\t\tmessageArray.push(text);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t})();\n\n\tasync function loadModelList() {\n\t\tconst response = await fetch(`${cdnPath}model_list.json`);\n\t\tmodelList = await response.json();\n\t}\n\n\tasync function loadModel(modelId, modelTexturesId, message) {\n\t\tlocalStorage.setItem(\"modelId\", modelId);\n\t\tlocalStorage.setItem(\"modelTexturesId\", modelTexturesId);\n\t\tshowMessage(message, 4000, 10);\n\t\tif (useCDN) {\n\t\t\tif (!modelList) await loadModelList();\n\t\t\tconst target = randomSelection(modelList.models[modelId]);\n\t\t\tloadlive2d(\"live2d\", `${cdnPath}model/${target}/index.json`);\n\t\t} else {\n\t\t\tloadlive2d(\"live2d\", `${apiPath}get/?id=${modelId}-${modelTexturesId}`);\n\t\t\tconsole.log(`Live2D 模型 ${modelId}-${modelTexturesId} 加载完成`);\n\t\t}\n\t}\n\n\tasync function loadRandModel() {\n\t\tconst modelId = localStorage.getItem(\"modelId\"),\n\t\t\tmodelTexturesId = localStorage.getItem(\"modelTexturesId\");\n\t\tif (useCDN) {\n\t\t\tif (!modelList) await loadModelList();\n\t\t\tconst target = randomSelection(modelList.models[modelId]);\n\t\t\tloadlive2d(\"live2d\", `${cdnPath}model/${target}/index.json`);\n\t\t\tshowMessage(\"我的新衣服好看嘛？\", 4000, 10);\n\t\t} else {\n\t\t\t// 材质加载方式, 可选 \"rand\"(随机), \"switch\"(顺序)\n\t\t\tfetch(`${apiPath}switch_textures/?id=${modelId}-${modelTexturesId}`)\n\t\t\t\t.then(response => response.json())\n\t\t\t\t.then(result => {\n\t\t\t\t\tif (result.textures.id === 1 && (modelTexturesId === 1 || modelTexturesId === 0)) showMessage(\"我还没有其他衣服呢！\", 4000, 10);\n\t\t\t\t\telse loadModel(modelId, result.textures.id, \"我的新衣服好看嘛？\");\n\t\t\t\t});\n\t\t}\n\t}\n\n\tasync function loadOtherModel() {\n\t\tlet modelId = localStorage.getItem(\"modelId\");\n\t\tif (useCDN) {\n\t\t\tif (!modelList) await loadModelList();\n\t\t\tconst index = (++modelId >= modelList.models.length) ? 0 : modelId;\n\t\t\tloadModel(index, 0, modelList.messages[index]);\n\t\t} else {\n\t\t\tfetch(`${apiPath}switch/?id=${modelId}`)\n\t\t\t\t.then(response => response.json())\n\t\t\t\t.then(result => {\n\t\t\t\t\tloadModel(result.model.id, 0, result.model.message);\n\t\t\t\t});\n\t\t}\n\t}\n}\n\nfunction initWidget(config, apiPath) {\n\tif (typeof config === \"string\") {\n\t\tconfig = {\n\t\t\twaifuPath: config,\n\t\t\tapiPath\n\t\t};\n\t}\n\tdocument.body.insertAdjacentHTML(\"beforeend\", `<div id=\"waifu-toggle\">\n\t\t\t<span>看板娘</span>\n\t\t</div>`);\n\tconst toggle = document.getElementById(\"waifu-toggle\");\n\ttoggle.addEventListener(\"click\", () => {\n\t\ttoggle.classList.remove(\"waifu-toggle-active\");\n\t\tif (toggle.getAttribute(\"first-time\")) {\n\t\t\tloadWidget(config);\n\t\t\ttoggle.removeAttribute(\"first-time\");\n\t\t} else {\n\t\t\tlocalStorage.removeItem(\"waifu-display\");\n\t\t\tdocument.getElementById(\"waifu\").style.display = \"\";\n\t\t\tsetTimeout(() => {\n\t\t\t\tdocument.getElementById(\"waifu\").style.bottom = 0;\n\t\t\t}, 0);\n\t\t}\n\t});\n\tif (localStorage.getItem(\"waifu-display\") && Date.now() - localStorage.getItem(\"waifu-display\") <= 86400000) {\n\t\ttoggle.setAttribute(\"first-time\", true);\n\t\tsetTimeout(() => {\n\t\t\ttoggle.classList.add(\"waifu-toggle-active\");\n\t\t}, 0);\n\t} else {\n\t\tloadWidget(config);\n\t}\n}\n","source":"live2d-widget/waifu-tips.js","raw":"/*\n * Live2D Widget\n * https://github.com/stevenjoezhang/live2d-widget\n */\n\nfunction loadWidget(config) {\n\tlet { waifuPath, apiPath, cdnPath } = config;\n\tlet useCDN = false, modelList;\n\tif (typeof cdnPath === \"string\") {\n\t\tuseCDN = true;\n\t\tif (!cdnPath.endsWith(\"/\")) cdnPath += \"/\";\n\t} else if (typeof apiPath === \"string\") {\n\t\tif (!apiPath.endsWith(\"/\")) apiPath += \"/\";\n\t} else {\n\t\tconsole.error(\"Invalid initWidget argument!\");\n\t\treturn;\n\t}\n\tlocalStorage.removeItem(\"waifu-display\");\n\tsessionStorage.removeItem(\"waifu-text\");\n\tdocument.body.insertAdjacentHTML(\"beforeend\", `<div id=\"waifu\">\n\t\t\t<div id=\"waifu-tips\"></div>\n\t\t\t<canvas id=\"live2d\" width=\"800\" height=\"800\"></canvas>\n\t\t\t<div id=\"waifu-tool\">\n\t\t\t\t<span class=\"fa fa-lg fa-comment\"></span>\n<!--\t\t\t\t<span class=\"fa fa-lg fa-paper-plane\"></span>-->\n\t\t\t\t<span class=\"fa fa-lg fa-user-circle\"></span>\n\t\t\t\t<span class=\"fa fa-lg fa-street-view\"></span>\n\t\t\t\t<span class=\"fa fa-lg fa-camera-retro\"></span>\n\t\t\t\t<span class=\"fa fa-lg fa-info-circle\"></span>\n\t\t\t\t<span class=\"fa fa-lg fa-times\"></span>\n                                <span class=\"fa fa-lg fa-chevron-right\" id=\"live2d-go-right\"></span>\n                                <span class=\"fa fa-lg fa-chevron-left\" id=\"live2d-go-left\"></span>\n\t\t\t</div>\n\t\t</div>`);\n\t// https://stackoverflow.com/questions/24148403/trigger-css-transition-on-appended-element\n\tsetTimeout(() => {\n\t\tdocument.getElementById(\"waifu\").style.bottom = 0;\n\t}, 0);\n\n\tfunction randomSelection(obj) {\n\t\treturn Array.isArray(obj) ? obj[Math.floor(Math.random() * obj.length)] : obj;\n\t}\n\t// 检测用户活动状态，并在空闲时显示消息\n\tlet userAction = false,\n\t\tuserActionTimer,\n\t\tmessageTimer,\n\t\tmessageArray = [\"好久不见，日子过得好快呢……\", \"大坏蛋！你都多久没理人家了呀，嘤嘤嘤～\", \"嗨～快来逗我玩吧！\", \"拿小拳拳锤你胸口！\", \"记得把小家加入 Adblock 白名单哦！\"];\n\twindow.addEventListener(\"mousemove\", () => userAction = true);\n\twindow.addEventListener(\"keydown\", () => userAction = true);\n\tsetInterval(() => {\n\t\tif (userAction) {\n\t\t\tuserAction = false;\n\t\t\tclearInterval(userActionTimer);\n\t\t\tuserActionTimer = null;\n\t\t} else if (!userActionTimer) {\n\t\t\tuserActionTimer = setInterval(() => {\n\t\t\t\tshowMessage(randomSelection(messageArray), 6000, 9);\n\t\t\t}, 20000);\n\t\t}\n\t}, 1000);\n\n        (function () { // 根据位置加载\n                if (localStorage.getItem(\"Live2DPlace\") === \"left\") {\n                        document.getElementById(\"live2d-go-left\").style.display = \"none\";\n                } else if (localStorage.getItem(\"Live2DPlace\") === \"right\") {\n                        document.getElementById(\"live2d-go-right\").style.display = \"none\";\n                        document.getElementById(\"live2d_css\").href = live2d_path + \"waifu_right.css\";\n                }\n        })();\n\n\t(function registerEventListener() { // 工具栏菜单效果\n\t\tdocument.querySelector(\"#waifu-tool .fa-comment\").addEventListener(\"click\", showHitokoto); // 一言API对话\n\t\t// document.querySelector(\"#waifu-tool .fa-paper-plane\").addEventListener(\"click\", () => { // 飞机大战（雾）\n\t\t// \tif (window.Asteroids) {\n\t\t// \t\tif (!window.ASTEROIDSPLAYERS) window.ASTEROIDSPLAYERS = [];\n\t\t// \t\twindow.ASTEROIDSPLAYERS.push(new Asteroids());\n\t\t// \t} else {\n\t\t// \t\tconst script = document.createElement(\"script\");\n\t\t// \t\tscript.src = \"https://cdn.jsdelivr.net/gh/stevenjoezhang/asteroids/asteroids.js\";\n\t\t// \t\tdocument.head.appendChild(script);\n\t\t// \t}\n\t\t// });\n\t\tdocument.querySelector(\"#waifu-tool .fa-user-circle\").addEventListener(\"click\", loadOtherModel); // 切换模型\n\t\tdocument.querySelector(\"#waifu-tool .fa-street-view\").addEventListener(\"click\", loadRandModel); // 切换材质\n\t\tdocument.querySelector(\"#waifu-tool .fa-camera-retro\").addEventListener(\"click\", () => { // 输出照片\n\t\t\tshowMessage(\"照好了嘛，是不是很可爱呢？\", 6000, 9);\n\t\t\tLive2D.captureName = \"photo.png\"; // 输出照片的名字\n\t\t\tLive2D.captureFrame = true;\n\t\t});\n\t\tdocument.querySelector(\"#waifu-tool .fa-info-circle\").addEventListener(\"click\", () => { // 关于页转跳\n\t\t\topen(\"https://github.com/stevenjoezhang/live2d-widget\"); //关于页链接\n\t\t});\n\t\tdocument.querySelector(\"#waifu-tool .fa-times\").addEventListener(\"click\", () => { // 关闭看板娘\n\t\t\tlocalStorage.setItem(\"waifu-display\", Date.now());\n\t\t\tshowMessage(\"愿你有一天能与重要的人重逢。\", 2000, 11);\n\t\t\tdocument.getElementById(\"waifu\").style.bottom = \"-500px\";\n\t\t\tsetTimeout(() => {\n\t\t\t\tdocument.getElementById(\"waifu\").style.display = \"none\";\n\t\t\t\tdocument.getElementById(\"waifu-toggle\").classList.add(\"waifu-toggle-active\");\n\t\t\t}, 3000);\n\t\t});\n\t\tdocument.querySelector(\"#waifu-tool .fa-chevron-right\").addEventListener(\"click\", () => { // 切换看板娘位置（左 => 右）\n\t\t\tlocalStorage.setItem(\"Live2DPlace\", \"right\");\n\t\t\tshowMessage(\"耶，可以去右边了呢～。\", 2000, 11);\n\t\t\tdocument.getElementById(\"waifu\").style.bottom = \"-500px\";\n\t\t\tdocument.getElementById(\"waifu-toggle\").style.display = \"none\";\n\t\t\tsetTimeout(() => {\n\t\t\t\tdocument.getElementById(\"live2d_css\").href = live2d_path + \"waifu_right.css\";\n\t\t\t\tdocument.getElementById(\"waifu\").style.bottom = \"0px\";\n\t\t\t\tdocument.getElementById(\"live2d-go-right\").style.display = \"none\";\n\t\t\t\tdocument.getElementById(\"live2d-go-left\").style.display = \"block\";\n\t\t\t}, 3000);\n\t\t\tsetTimeout('document.getElementById(\"waifu-toggle\").style.display = \"inline\"',6000);\n\t\t});\n                document.querySelector(\"#waifu-tool .fa-chevron-left\").addEventListener(\"click\", () => { // 切换看板娘位置（左 <= 右）\n\t\t\tlocalStorage.setItem(\"Live2DPlace\", \"left\");\n\t\t\tshowMessage(\"耶，可以去左边了呢～。\", 2000, 11);\n\t\t\tdocument.getElementById(\"waifu\").style.bottom = \"-500px\";\n\t\t\tdocument.getElementById(\"waifu-toggle\").style.display = \"none\";\n\t\t\tsetTimeout(() => {\n\t\t\t\tdocument.getElementById(\"live2d_css\").href = live2d_path + \"waifu_left.css\";\n\t\t\t\tdocument.getElementById(\"waifu\").style.bottom = \"0px\";\n\t\t\t\tdocument.getElementById(\"live2d-go-left\").style.display = \"none\";\n\t\t\t\tdocument.getElementById(\"live2d-go-right\").style.display = \"block\";\n\t\t\t}, 3000);\n\t\t\tsetTimeout('document.getElementById(\"waifu-toggle\").style.display = \"inline\"',6000);\n\t\t});\n\t\tconst devtools = () => { };\n\t\tconsole.log(\"%c\", devtools);\n\t\tdevtools.toString = () => {\n\t\t\tshowMessage(\"哈哈，你打开了控制台，是想要看看我的小秘密吗？\", 6000, 9);\n\t\t};\n\t\twindow.addEventListener(\"copy\", () => {\n\t\t\tshowMessage(\"你都复制了些什么呀，转载要记得加上出处哦！\", 6000, 9);\n\t\t});\n\t\twindow.addEventListener(\"visibilitychange\", () => {\n\t\t\tif (!document.hidden) showMessage(\"哇，你终于回来了～\", 6000, 9);\n\t\t});\n\t})();\n\n\t(function welcomeMessage() {\n\t\tlet text;\n\t\tif (location.pathname === \"/\") { // 如果是主页\n\t\t\tconst now = new Date().getHours();\n\t\t\tif (now > 5 && now <= 7) text = \"早上好！一日之计在于晨，美好的一天就要开始了。\";\n\t\t\telse if (now > 7 && now <= 11) text = \"上午好！工作顺利嘛，不要久坐，多起来走动走动哦！\";\n\t\t\telse if (now > 11 && now <= 13) text = \"中午了，工作了一个上午，现在是午餐时间！\";\n\t\t\telse if (now > 13 && now <= 17) text = \"午后很容易犯困呢，今天的运动目标完成了吗？\";\n\t\t\telse if (now > 17 && now <= 19) text = \"傍晚了！窗外夕阳的景色很美丽呢，最美不过夕阳红～\";\n\t\t\telse if (now > 19 && now <= 21) text = \"晚上好，今天过得怎么样？\";\n\t\t\telse if (now > 21 && now <= 23) text = [\"已经这么晚了呀，早点休息吧，晚安～\", \"深夜时要爱护眼睛呀！\"];\n\t\t\telse text = \"你是夜猫子呀？这么晚还不睡觉，明天起的来嘛？\";\n\t\t} else if (document.referrer !== \"\") {\n\t\t\tconst referrer = new URL(document.referrer),\n\t\t\t\tdomain = referrer.hostname.split(\".\")[1];\n\t\t\tif (location.hostname === referrer.hostname) text = `欢迎阅读<span>「${document.title.split(\" - \")[0]}」</span>`;\n\t\t\telse if (domain === \"baidu\") text = `Hello！来自 百度搜索 的朋友<br>你是搜索 <span>${referrer.search.split(\"&wd=\")[1].split(\"&\")[0]}</span> 找到的我吗？`;\n\t\t\telse if (domain === \"so\") text = `Hello！来自 360搜索 的朋友<br>你是搜索 <span>${referrer.search.split(\"&q=\")[1].split(\"&\")[0]}</span> 找到的我吗？`;\n\t\t\telse if (domain === \"google\") text = `Hello！来自 谷歌搜索 的朋友<br>欢迎阅读<span>「${document.title.split(\" - \")[0]}」</span>`;\n\t\t\telse text = `Hello！来自 <span>${referrer.hostname}</span> 的朋友`;\n\t\t} else {\n\t\t\ttext = `欢迎阅读<span>「${document.title.split(\" - \")[0]}」</span>`;\n\t\t}\n\t\tshowMessage(text, 7000, 8);\n\t})();\n\n\tfunction showHitokoto() { // 增加 hitokoto.cn 的 API\n\t\tfetch(\"https://v1.hitokoto.cn\")\n\t\t\t.then(response => response.json())\n\t\t\t.then(result => {\n\t\t\t\tconst text = `这句一言来自 <span>「${result.from}」</span>，是 <span>${result.creator}</span> 在 hitokoto.cn 投稿的。`;\n\t\t\t\tshowMessage(result.hitokoto, 6000, 9);\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tshowMessage(text, 4000, 9);\n\t\t\t\t}, 6000);\n\t\t\t});\n\t}\n\n\tfunction showMessage(text, timeout, priority) {\n\t\tif (!text || (sessionStorage.getItem(\"waifu-text\") && sessionStorage.getItem(\"waifu-text\") > priority)) return;\n\t\tif (messageTimer) {\n\t\t\tclearTimeout(messageTimer);\n\t\t\tmessageTimer = null;\n\t\t}\n\t\ttext = randomSelection(text);\n\t\tsessionStorage.setItem(\"waifu-text\", priority);\n\t\tconst tips = document.getElementById(\"waifu-tips\");\n\t\ttips.innerHTML = text;\n\t\ttips.classList.add(\"waifu-tips-active\");\n\t\tmessageTimer = setTimeout(() => {\n\t\t\tsessionStorage.removeItem(\"waifu-text\");\n\t\t\ttips.classList.remove(\"waifu-tips-active\");\n\t\t}, timeout);\n\t}\n\n\t(function initModel() {\n\t\tlet modelId = localStorage.getItem(\"modelId\"),\n\t\t\tmodelTexturesId = localStorage.getItem(\"modelTexturesId\");\n\t\tif (modelId === null) {\n\t\t\t// 首次访问时加载 指定模型 的 指定材质\n\t\t\tmodelId = 2; // 模型 ID\n\t\t\tmodelTexturesId = 39; // 材质 ID\n\t\t}\n\t\tloadModel(modelId, modelTexturesId);\n\t\tfetch(waifuPath)\n\t\t\t.then(response => response.json())\n\t\t\t.then(result => {\n\t\t\t\twindow.addEventListener(\"mouseover\", event => {\n\t\t\t\t\tfor (let { selector, text } of result.mouseover) {\n\t\t\t\t\t\tif (!event.target.matches(selector)) continue;\n\t\t\t\t\t\ttext = randomSelection(text);\n\t\t\t\t\t\ttext = text.replace(\"{text}\", event.target.innerText);\n\t\t\t\t\t\tshowMessage(text, 4000, 8);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\twindow.addEventListener(\"click\", event => {\n\t\t\t\t\tfor (let { selector, text } of result.click) {\n\t\t\t\t\t\tif (!event.target.matches(selector)) continue;\n\t\t\t\t\t\ttext = randomSelection(text);\n\t\t\t\t\t\ttext = text.replace(\"{text}\", event.target.innerText);\n\t\t\t\t\t\tshowMessage(text, 4000, 8);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tresult.seasons.forEach(({ date, text }) => {\n\t\t\t\t\tconst now = new Date(),\n\t\t\t\t\t\tafter = date.split(\"-\")[0],\n\t\t\t\t\t\tbefore = date.split(\"-\")[1] || after;\n\t\t\t\t\tif ((after.split(\"/\")[0] <= now.getMonth() + 1 && now.getMonth() + 1 <= before.split(\"/\")[0]) && (after.split(\"/\")[1] <= now.getDate() && now.getDate() <= before.split(\"/\")[1])) {\n\t\t\t\t\t\ttext = randomSelection(text);\n\t\t\t\t\t\ttext = text.replace(\"{year}\", now.getFullYear());\n\t\t\t\t\t\t//showMessage(text, 7000, true);\n\t\t\t\t\t\tmessageArray.push(text);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t})();\n\n\tasync function loadModelList() {\n\t\tconst response = await fetch(`${cdnPath}model_list.json`);\n\t\tmodelList = await response.json();\n\t}\n\n\tasync function loadModel(modelId, modelTexturesId, message) {\n\t\tlocalStorage.setItem(\"modelId\", modelId);\n\t\tlocalStorage.setItem(\"modelTexturesId\", modelTexturesId);\n\t\tshowMessage(message, 4000, 10);\n\t\tif (useCDN) {\n\t\t\tif (!modelList) await loadModelList();\n\t\t\tconst target = randomSelection(modelList.models[modelId]);\n\t\t\tloadlive2d(\"live2d\", `${cdnPath}model/${target}/index.json`);\n\t\t} else {\n\t\t\tloadlive2d(\"live2d\", `${apiPath}get/?id=${modelId}-${modelTexturesId}`);\n\t\t\tconsole.log(`Live2D 模型 ${modelId}-${modelTexturesId} 加载完成`);\n\t\t}\n\t}\n\n\tasync function loadRandModel() {\n\t\tconst modelId = localStorage.getItem(\"modelId\"),\n\t\t\tmodelTexturesId = localStorage.getItem(\"modelTexturesId\");\n\t\tif (useCDN) {\n\t\t\tif (!modelList) await loadModelList();\n\t\t\tconst target = randomSelection(modelList.models[modelId]);\n\t\t\tloadlive2d(\"live2d\", `${cdnPath}model/${target}/index.json`);\n\t\t\tshowMessage(\"我的新衣服好看嘛？\", 4000, 10);\n\t\t} else {\n\t\t\t// 材质加载方式, 可选 \"rand\"(随机), \"switch\"(顺序)\n\t\t\tfetch(`${apiPath}switch_textures/?id=${modelId}-${modelTexturesId}`)\n\t\t\t\t.then(response => response.json())\n\t\t\t\t.then(result => {\n\t\t\t\t\tif (result.textures.id === 1 && (modelTexturesId === 1 || modelTexturesId === 0)) showMessage(\"我还没有其他衣服呢！\", 4000, 10);\n\t\t\t\t\telse loadModel(modelId, result.textures.id, \"我的新衣服好看嘛？\");\n\t\t\t\t});\n\t\t}\n\t}\n\n\tasync function loadOtherModel() {\n\t\tlet modelId = localStorage.getItem(\"modelId\");\n\t\tif (useCDN) {\n\t\t\tif (!modelList) await loadModelList();\n\t\t\tconst index = (++modelId >= modelList.models.length) ? 0 : modelId;\n\t\t\tloadModel(index, 0, modelList.messages[index]);\n\t\t} else {\n\t\t\tfetch(`${apiPath}switch/?id=${modelId}`)\n\t\t\t\t.then(response => response.json())\n\t\t\t\t.then(result => {\n\t\t\t\t\tloadModel(result.model.id, 0, result.model.message);\n\t\t\t\t});\n\t\t}\n\t}\n}\n\nfunction initWidget(config, apiPath) {\n\tif (typeof config === \"string\") {\n\t\tconfig = {\n\t\t\twaifuPath: config,\n\t\t\tapiPath\n\t\t};\n\t}\n\tdocument.body.insertAdjacentHTML(\"beforeend\", `<div id=\"waifu-toggle\">\n\t\t\t<span>看板娘</span>\n\t\t</div>`);\n\tconst toggle = document.getElementById(\"waifu-toggle\");\n\ttoggle.addEventListener(\"click\", () => {\n\t\ttoggle.classList.remove(\"waifu-toggle-active\");\n\t\tif (toggle.getAttribute(\"first-time\")) {\n\t\t\tloadWidget(config);\n\t\t\ttoggle.removeAttribute(\"first-time\");\n\t\t} else {\n\t\t\tlocalStorage.removeItem(\"waifu-display\");\n\t\t\tdocument.getElementById(\"waifu\").style.display = \"\";\n\t\t\tsetTimeout(() => {\n\t\t\t\tdocument.getElementById(\"waifu\").style.bottom = 0;\n\t\t\t}, 0);\n\t\t}\n\t});\n\tif (localStorage.getItem(\"waifu-display\") && Date.now() - localStorage.getItem(\"waifu-display\") <= 86400000) {\n\t\ttoggle.setAttribute(\"first-time\", true);\n\t\tsetTimeout(() => {\n\t\t\ttoggle.classList.add(\"waifu-toggle-active\");\n\t\t}, 0);\n\t} else {\n\t\tloadWidget(config);\n\t}\n}\n","date":"2022-06-06T15:39:11.493Z","updated":"2022-06-03T06:00:55.633Z","path":"live2d-widget/waifu-tips.js","layout":"false","title":"","comments":1,"_id":"cl42z5h5x000w3gn60i60hwov","content":"/*\n * Live2D Widget\n * https://github.com/stevenjoezhang/live2d-widget\n */\n\nfunction loadWidget(config) {\n\tlet { waifuPath, apiPath, cdnPath } = config;\n\tlet useCDN = false, modelList;\n\tif (typeof cdnPath === \"string\") {\n\t\tuseCDN = true;\n\t\tif (!cdnPath.endsWith(\"/\")) cdnPath += \"/\";\n\t} else if (typeof apiPath === \"string\") {\n\t\tif (!apiPath.endsWith(\"/\")) apiPath += \"/\";\n\t} else {\n\t\tconsole.error(\"Invalid initWidget argument!\");\n\t\treturn;\n\t}\n\tlocalStorage.removeItem(\"waifu-display\");\n\tsessionStorage.removeItem(\"waifu-text\");\n\tdocument.body.insertAdjacentHTML(\"beforeend\", `<div id=\"waifu\">\n\t\t\t<div id=\"waifu-tips\"></div>\n\t\t\t<canvas id=\"live2d\" width=\"800\" height=\"800\"></canvas>\n\t\t\t<div id=\"waifu-tool\">\n\t\t\t\t<span class=\"fa fa-lg fa-comment\"></span>\n<!--\t\t\t\t<span class=\"fa fa-lg fa-paper-plane\"></span>-->\n\t\t\t\t<span class=\"fa fa-lg fa-user-circle\"></span>\n\t\t\t\t<span class=\"fa fa-lg fa-street-view\"></span>\n\t\t\t\t<span class=\"fa fa-lg fa-camera-retro\"></span>\n\t\t\t\t<span class=\"fa fa-lg fa-info-circle\"></span>\n\t\t\t\t<span class=\"fa fa-lg fa-times\"></span>\n                                <span class=\"fa fa-lg fa-chevron-right\" id=\"live2d-go-right\"></span>\n                                <span class=\"fa fa-lg fa-chevron-left\" id=\"live2d-go-left\"></span>\n\t\t\t</div>\n\t\t</div>`);\n\t// https://stackoverflow.com/questions/24148403/trigger-css-transition-on-appended-element\n\tsetTimeout(() => {\n\t\tdocument.getElementById(\"waifu\").style.bottom = 0;\n\t}, 0);\n\n\tfunction randomSelection(obj) {\n\t\treturn Array.isArray(obj) ? obj[Math.floor(Math.random() * obj.length)] : obj;\n\t}\n\t// 检测用户活动状态，并在空闲时显示消息\n\tlet userAction = false,\n\t\tuserActionTimer,\n\t\tmessageTimer,\n\t\tmessageArray = [\"好久不见，日子过得好快呢……\", \"大坏蛋！你都多久没理人家了呀，嘤嘤嘤～\", \"嗨～快来逗我玩吧！\", \"拿小拳拳锤你胸口！\", \"记得把小家加入 Adblock 白名单哦！\"];\n\twindow.addEventListener(\"mousemove\", () => userAction = true);\n\twindow.addEventListener(\"keydown\", () => userAction = true);\n\tsetInterval(() => {\n\t\tif (userAction) {\n\t\t\tuserAction = false;\n\t\t\tclearInterval(userActionTimer);\n\t\t\tuserActionTimer = null;\n\t\t} else if (!userActionTimer) {\n\t\t\tuserActionTimer = setInterval(() => {\n\t\t\t\tshowMessage(randomSelection(messageArray), 6000, 9);\n\t\t\t}, 20000);\n\t\t}\n\t}, 1000);\n\n        (function () { // 根据位置加载\n                if (localStorage.getItem(\"Live2DPlace\") === \"left\") {\n                        document.getElementById(\"live2d-go-left\").style.display = \"none\";\n                } else if (localStorage.getItem(\"Live2DPlace\") === \"right\") {\n                        document.getElementById(\"live2d-go-right\").style.display = \"none\";\n                        document.getElementById(\"live2d_css\").href = live2d_path + \"waifu_right.css\";\n                }\n        })();\n\n\t(function registerEventListener() { // 工具栏菜单效果\n\t\tdocument.querySelector(\"#waifu-tool .fa-comment\").addEventListener(\"click\", showHitokoto); // 一言API对话\n\t\t// document.querySelector(\"#waifu-tool .fa-paper-plane\").addEventListener(\"click\", () => { // 飞机大战（雾）\n\t\t// \tif (window.Asteroids) {\n\t\t// \t\tif (!window.ASTEROIDSPLAYERS) window.ASTEROIDSPLAYERS = [];\n\t\t// \t\twindow.ASTEROIDSPLAYERS.push(new Asteroids());\n\t\t// \t} else {\n\t\t// \t\tconst script = document.createElement(\"script\");\n\t\t// \t\tscript.src = \"https://cdn.jsdelivr.net/gh/stevenjoezhang/asteroids/asteroids.js\";\n\t\t// \t\tdocument.head.appendChild(script);\n\t\t// \t}\n\t\t// });\n\t\tdocument.querySelector(\"#waifu-tool .fa-user-circle\").addEventListener(\"click\", loadOtherModel); // 切换模型\n\t\tdocument.querySelector(\"#waifu-tool .fa-street-view\").addEventListener(\"click\", loadRandModel); // 切换材质\n\t\tdocument.querySelector(\"#waifu-tool .fa-camera-retro\").addEventListener(\"click\", () => { // 输出照片\n\t\t\tshowMessage(\"照好了嘛，是不是很可爱呢？\", 6000, 9);\n\t\t\tLive2D.captureName = \"photo.png\"; // 输出照片的名字\n\t\t\tLive2D.captureFrame = true;\n\t\t});\n\t\tdocument.querySelector(\"#waifu-tool .fa-info-circle\").addEventListener(\"click\", () => { // 关于页转跳\n\t\t\topen(\"https://github.com/stevenjoezhang/live2d-widget\"); //关于页链接\n\t\t});\n\t\tdocument.querySelector(\"#waifu-tool .fa-times\").addEventListener(\"click\", () => { // 关闭看板娘\n\t\t\tlocalStorage.setItem(\"waifu-display\", Date.now());\n\t\t\tshowMessage(\"愿你有一天能与重要的人重逢。\", 2000, 11);\n\t\t\tdocument.getElementById(\"waifu\").style.bottom = \"-500px\";\n\t\t\tsetTimeout(() => {\n\t\t\t\tdocument.getElementById(\"waifu\").style.display = \"none\";\n\t\t\t\tdocument.getElementById(\"waifu-toggle\").classList.add(\"waifu-toggle-active\");\n\t\t\t}, 3000);\n\t\t});\n\t\tdocument.querySelector(\"#waifu-tool .fa-chevron-right\").addEventListener(\"click\", () => { // 切换看板娘位置（左 => 右）\n\t\t\tlocalStorage.setItem(\"Live2DPlace\", \"right\");\n\t\t\tshowMessage(\"耶，可以去右边了呢～。\", 2000, 11);\n\t\t\tdocument.getElementById(\"waifu\").style.bottom = \"-500px\";\n\t\t\tdocument.getElementById(\"waifu-toggle\").style.display = \"none\";\n\t\t\tsetTimeout(() => {\n\t\t\t\tdocument.getElementById(\"live2d_css\").href = live2d_path + \"waifu_right.css\";\n\t\t\t\tdocument.getElementById(\"waifu\").style.bottom = \"0px\";\n\t\t\t\tdocument.getElementById(\"live2d-go-right\").style.display = \"none\";\n\t\t\t\tdocument.getElementById(\"live2d-go-left\").style.display = \"block\";\n\t\t\t}, 3000);\n\t\t\tsetTimeout('document.getElementById(\"waifu-toggle\").style.display = \"inline\"',6000);\n\t\t});\n                document.querySelector(\"#waifu-tool .fa-chevron-left\").addEventListener(\"click\", () => { // 切换看板娘位置（左 <= 右）\n\t\t\tlocalStorage.setItem(\"Live2DPlace\", \"left\");\n\t\t\tshowMessage(\"耶，可以去左边了呢～。\", 2000, 11);\n\t\t\tdocument.getElementById(\"waifu\").style.bottom = \"-500px\";\n\t\t\tdocument.getElementById(\"waifu-toggle\").style.display = \"none\";\n\t\t\tsetTimeout(() => {\n\t\t\t\tdocument.getElementById(\"live2d_css\").href = live2d_path + \"waifu_left.css\";\n\t\t\t\tdocument.getElementById(\"waifu\").style.bottom = \"0px\";\n\t\t\t\tdocument.getElementById(\"live2d-go-left\").style.display = \"none\";\n\t\t\t\tdocument.getElementById(\"live2d-go-right\").style.display = \"block\";\n\t\t\t}, 3000);\n\t\t\tsetTimeout('document.getElementById(\"waifu-toggle\").style.display = \"inline\"',6000);\n\t\t});\n\t\tconst devtools = () => { };\n\t\tconsole.log(\"%c\", devtools);\n\t\tdevtools.toString = () => {\n\t\t\tshowMessage(\"哈哈，你打开了控制台，是想要看看我的小秘密吗？\", 6000, 9);\n\t\t};\n\t\twindow.addEventListener(\"copy\", () => {\n\t\t\tshowMessage(\"你都复制了些什么呀，转载要记得加上出处哦！\", 6000, 9);\n\t\t});\n\t\twindow.addEventListener(\"visibilitychange\", () => {\n\t\t\tif (!document.hidden) showMessage(\"哇，你终于回来了～\", 6000, 9);\n\t\t});\n\t})();\n\n\t(function welcomeMessage() {\n\t\tlet text;\n\t\tif (location.pathname === \"/\") { // 如果是主页\n\t\t\tconst now = new Date().getHours();\n\t\t\tif (now > 5 && now <= 7) text = \"早上好！一日之计在于晨，美好的一天就要开始了。\";\n\t\t\telse if (now > 7 && now <= 11) text = \"上午好！工作顺利嘛，不要久坐，多起来走动走动哦！\";\n\t\t\telse if (now > 11 && now <= 13) text = \"中午了，工作了一个上午，现在是午餐时间！\";\n\t\t\telse if (now > 13 && now <= 17) text = \"午后很容易犯困呢，今天的运动目标完成了吗？\";\n\t\t\telse if (now > 17 && now <= 19) text = \"傍晚了！窗外夕阳的景色很美丽呢，最美不过夕阳红～\";\n\t\t\telse if (now > 19 && now <= 21) text = \"晚上好，今天过得怎么样？\";\n\t\t\telse if (now > 21 && now <= 23) text = [\"已经这么晚了呀，早点休息吧，晚安～\", \"深夜时要爱护眼睛呀！\"];\n\t\t\telse text = \"你是夜猫子呀？这么晚还不睡觉，明天起的来嘛？\";\n\t\t} else if (document.referrer !== \"\") {\n\t\t\tconst referrer = new URL(document.referrer),\n\t\t\t\tdomain = referrer.hostname.split(\".\")[1];\n\t\t\tif (location.hostname === referrer.hostname) text = `欢迎阅读<span>「${document.title.split(\" - \")[0]}」</span>`;\n\t\t\telse if (domain === \"baidu\") text = `Hello！来自 百度搜索 的朋友<br>你是搜索 <span>${referrer.search.split(\"&wd=\")[1].split(\"&\")[0]}</span> 找到的我吗？`;\n\t\t\telse if (domain === \"so\") text = `Hello！来自 360搜索 的朋友<br>你是搜索 <span>${referrer.search.split(\"&q=\")[1].split(\"&\")[0]}</span> 找到的我吗？`;\n\t\t\telse if (domain === \"google\") text = `Hello！来自 谷歌搜索 的朋友<br>欢迎阅读<span>「${document.title.split(\" - \")[0]}」</span>`;\n\t\t\telse text = `Hello！来自 <span>${referrer.hostname}</span> 的朋友`;\n\t\t} else {\n\t\t\ttext = `欢迎阅读<span>「${document.title.split(\" - \")[0]}」</span>`;\n\t\t}\n\t\tshowMessage(text, 7000, 8);\n\t})();\n\n\tfunction showHitokoto() { // 增加 hitokoto.cn 的 API\n\t\tfetch(\"https://v1.hitokoto.cn\")\n\t\t\t.then(response => response.json())\n\t\t\t.then(result => {\n\t\t\t\tconst text = `这句一言来自 <span>「${result.from}」</span>，是 <span>${result.creator}</span> 在 hitokoto.cn 投稿的。`;\n\t\t\t\tshowMessage(result.hitokoto, 6000, 9);\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tshowMessage(text, 4000, 9);\n\t\t\t\t}, 6000);\n\t\t\t});\n\t}\n\n\tfunction showMessage(text, timeout, priority) {\n\t\tif (!text || (sessionStorage.getItem(\"waifu-text\") && sessionStorage.getItem(\"waifu-text\") > priority)) return;\n\t\tif (messageTimer) {\n\t\t\tclearTimeout(messageTimer);\n\t\t\tmessageTimer = null;\n\t\t}\n\t\ttext = randomSelection(text);\n\t\tsessionStorage.setItem(\"waifu-text\", priority);\n\t\tconst tips = document.getElementById(\"waifu-tips\");\n\t\ttips.innerHTML = text;\n\t\ttips.classList.add(\"waifu-tips-active\");\n\t\tmessageTimer = setTimeout(() => {\n\t\t\tsessionStorage.removeItem(\"waifu-text\");\n\t\t\ttips.classList.remove(\"waifu-tips-active\");\n\t\t}, timeout);\n\t}\n\n\t(function initModel() {\n\t\tlet modelId = localStorage.getItem(\"modelId\"),\n\t\t\tmodelTexturesId = localStorage.getItem(\"modelTexturesId\");\n\t\tif (modelId === null) {\n\t\t\t// 首次访问时加载 指定模型 的 指定材质\n\t\t\tmodelId = 2; // 模型 ID\n\t\t\tmodelTexturesId = 39; // 材质 ID\n\t\t}\n\t\tloadModel(modelId, modelTexturesId);\n\t\tfetch(waifuPath)\n\t\t\t.then(response => response.json())\n\t\t\t.then(result => {\n\t\t\t\twindow.addEventListener(\"mouseover\", event => {\n\t\t\t\t\tfor (let { selector, text } of result.mouseover) {\n\t\t\t\t\t\tif (!event.target.matches(selector)) continue;\n\t\t\t\t\t\ttext = randomSelection(text);\n\t\t\t\t\t\ttext = text.replace(\"{text}\", event.target.innerText);\n\t\t\t\t\t\tshowMessage(text, 4000, 8);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\twindow.addEventListener(\"click\", event => {\n\t\t\t\t\tfor (let { selector, text } of result.click) {\n\t\t\t\t\t\tif (!event.target.matches(selector)) continue;\n\t\t\t\t\t\ttext = randomSelection(text);\n\t\t\t\t\t\ttext = text.replace(\"{text}\", event.target.innerText);\n\t\t\t\t\t\tshowMessage(text, 4000, 8);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tresult.seasons.forEach(({ date, text }) => {\n\t\t\t\t\tconst now = new Date(),\n\t\t\t\t\t\tafter = date.split(\"-\")[0],\n\t\t\t\t\t\tbefore = date.split(\"-\")[1] || after;\n\t\t\t\t\tif ((after.split(\"/\")[0] <= now.getMonth() + 1 && now.getMonth() + 1 <= before.split(\"/\")[0]) && (after.split(\"/\")[1] <= now.getDate() && now.getDate() <= before.split(\"/\")[1])) {\n\t\t\t\t\t\ttext = randomSelection(text);\n\t\t\t\t\t\ttext = text.replace(\"{year}\", now.getFullYear());\n\t\t\t\t\t\t//showMessage(text, 7000, true);\n\t\t\t\t\t\tmessageArray.push(text);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t})();\n\n\tasync function loadModelList() {\n\t\tconst response = await fetch(`${cdnPath}model_list.json`);\n\t\tmodelList = await response.json();\n\t}\n\n\tasync function loadModel(modelId, modelTexturesId, message) {\n\t\tlocalStorage.setItem(\"modelId\", modelId);\n\t\tlocalStorage.setItem(\"modelTexturesId\", modelTexturesId);\n\t\tshowMessage(message, 4000, 10);\n\t\tif (useCDN) {\n\t\t\tif (!modelList) await loadModelList();\n\t\t\tconst target = randomSelection(modelList.models[modelId]);\n\t\t\tloadlive2d(\"live2d\", `${cdnPath}model/${target}/index.json`);\n\t\t} else {\n\t\t\tloadlive2d(\"live2d\", `${apiPath}get/?id=${modelId}-${modelTexturesId}`);\n\t\t\tconsole.log(`Live2D 模型 ${modelId}-${modelTexturesId} 加载完成`);\n\t\t}\n\t}\n\n\tasync function loadRandModel() {\n\t\tconst modelId = localStorage.getItem(\"modelId\"),\n\t\t\tmodelTexturesId = localStorage.getItem(\"modelTexturesId\");\n\t\tif (useCDN) {\n\t\t\tif (!modelList) await loadModelList();\n\t\t\tconst target = randomSelection(modelList.models[modelId]);\n\t\t\tloadlive2d(\"live2d\", `${cdnPath}model/${target}/index.json`);\n\t\t\tshowMessage(\"我的新衣服好看嘛？\", 4000, 10);\n\t\t} else {\n\t\t\t// 材质加载方式, 可选 \"rand\"(随机), \"switch\"(顺序)\n\t\t\tfetch(`${apiPath}switch_textures/?id=${modelId}-${modelTexturesId}`)\n\t\t\t\t.then(response => response.json())\n\t\t\t\t.then(result => {\n\t\t\t\t\tif (result.textures.id === 1 && (modelTexturesId === 1 || modelTexturesId === 0)) showMessage(\"我还没有其他衣服呢！\", 4000, 10);\n\t\t\t\t\telse loadModel(modelId, result.textures.id, \"我的新衣服好看嘛？\");\n\t\t\t\t});\n\t\t}\n\t}\n\n\tasync function loadOtherModel() {\n\t\tlet modelId = localStorage.getItem(\"modelId\");\n\t\tif (useCDN) {\n\t\t\tif (!modelList) await loadModelList();\n\t\t\tconst index = (++modelId >= modelList.models.length) ? 0 : modelId;\n\t\t\tloadModel(index, 0, modelList.messages[index]);\n\t\t} else {\n\t\t\tfetch(`${apiPath}switch/?id=${modelId}`)\n\t\t\t\t.then(response => response.json())\n\t\t\t\t.then(result => {\n\t\t\t\t\tloadModel(result.model.id, 0, result.model.message);\n\t\t\t\t});\n\t\t}\n\t}\n}\n\nfunction initWidget(config, apiPath) {\n\tif (typeof config === \"string\") {\n\t\tconfig = {\n\t\t\twaifuPath: config,\n\t\t\tapiPath\n\t\t};\n\t}\n\tdocument.body.insertAdjacentHTML(\"beforeend\", `<div id=\"waifu-toggle\">\n\t\t\t<span>看板娘</span>\n\t\t</div>`);\n\tconst toggle = document.getElementById(\"waifu-toggle\");\n\ttoggle.addEventListener(\"click\", () => {\n\t\ttoggle.classList.remove(\"waifu-toggle-active\");\n\t\tif (toggle.getAttribute(\"first-time\")) {\n\t\t\tloadWidget(config);\n\t\t\ttoggle.removeAttribute(\"first-time\");\n\t\t} else {\n\t\t\tlocalStorage.removeItem(\"waifu-display\");\n\t\t\tdocument.getElementById(\"waifu\").style.display = \"\";\n\t\t\tsetTimeout(() => {\n\t\t\t\tdocument.getElementById(\"waifu\").style.bottom = 0;\n\t\t\t}, 0);\n\t\t}\n\t});\n\tif (localStorage.getItem(\"waifu-display\") && Date.now() - localStorage.getItem(\"waifu-display\") <= 86400000) {\n\t\ttoggle.setAttribute(\"first-time\", true);\n\t\tsetTimeout(() => {\n\t\t\ttoggle.classList.add(\"waifu-toggle-active\");\n\t\t}, 0);\n\t} else {\n\t\tloadWidget(config);\n\t}\n}\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"cover":"https://blog.huangge1199.cn/post/day20220121/bg.jpeg","excerpt":"","more":"/*\n * Live2D Widget\n * https://github.com/stevenjoezhang/live2d-widget\n */\n\nfunction loadWidget(config) {\n\tlet { waifuPath, apiPath, cdnPath } = config;\n\tlet useCDN = false, modelList;\n\tif (typeof cdnPath === \"string\") {\n\t\tuseCDN = true;\n\t\tif (!cdnPath.endsWith(\"/\")) cdnPath += \"/\";\n\t} else if (typeof apiPath === \"string\") {\n\t\tif (!apiPath.endsWith(\"/\")) apiPath += \"/\";\n\t} else {\n\t\tconsole.error(\"Invalid initWidget argument!\");\n\t\treturn;\n\t}\n\tlocalStorage.removeItem(\"waifu-display\");\n\tsessionStorage.removeItem(\"waifu-text\");\n\tdocument.body.insertAdjacentHTML(\"beforeend\", `<div id=\"waifu\">\n\t\t\t<div id=\"waifu-tips\"></div>\n\t\t\t<canvas id=\"live2d\" width=\"800\" height=\"800\"></canvas>\n\t\t\t<div id=\"waifu-tool\">\n\t\t\t\t<span class=\"fa fa-lg fa-comment\"></span>\n<!--\t\t\t\t<span class=\"fa fa-lg fa-paper-plane\"></span>-->\n\t\t\t\t<span class=\"fa fa-lg fa-user-circle\"></span>\n\t\t\t\t<span class=\"fa fa-lg fa-street-view\"></span>\n\t\t\t\t<span class=\"fa fa-lg fa-camera-retro\"></span>\n\t\t\t\t<span class=\"fa fa-lg fa-info-circle\"></span>\n\t\t\t\t<span class=\"fa fa-lg fa-times\"></span>\n                                <span class=\"fa fa-lg fa-chevron-right\" id=\"live2d-go-right\"></span>\n                                <span class=\"fa fa-lg fa-chevron-left\" id=\"live2d-go-left\"></span>\n\t\t\t</div>\n\t\t</div>`);\n\t// https://stackoverflow.com/questions/24148403/trigger-css-transition-on-appended-element\n\tsetTimeout(() => {\n\t\tdocument.getElementById(\"waifu\").style.bottom = 0;\n\t}, 0);\n\n\tfunction randomSelection(obj) {\n\t\treturn Array.isArray(obj) ? obj[Math.floor(Math.random() * obj.length)] : obj;\n\t}\n\t// 检测用户活动状态，并在空闲时显示消息\n\tlet userAction = false,\n\t\tuserActionTimer,\n\t\tmessageTimer,\n\t\tmessageArray = [\"好久不见，日子过得好快呢……\", \"大坏蛋！你都多久没理人家了呀，嘤嘤嘤～\", \"嗨～快来逗我玩吧！\", \"拿小拳拳锤你胸口！\", \"记得把小家加入 Adblock 白名单哦！\"];\n\twindow.addEventListener(\"mousemove\", () => userAction = true);\n\twindow.addEventListener(\"keydown\", () => userAction = true);\n\tsetInterval(() => {\n\t\tif (userAction) {\n\t\t\tuserAction = false;\n\t\t\tclearInterval(userActionTimer);\n\t\t\tuserActionTimer = null;\n\t\t} else if (!userActionTimer) {\n\t\t\tuserActionTimer = setInterval(() => {\n\t\t\t\tshowMessage(randomSelection(messageArray), 6000, 9);\n\t\t\t}, 20000);\n\t\t}\n\t}, 1000);\n\n        (function () { // 根据位置加载\n                if (localStorage.getItem(\"Live2DPlace\") === \"left\") {\n                        document.getElementById(\"live2d-go-left\").style.display = \"none\";\n                } else if (localStorage.getItem(\"Live2DPlace\") === \"right\") {\n                        document.getElementById(\"live2d-go-right\").style.display = \"none\";\n                        document.getElementById(\"live2d_css\").href = live2d_path + \"waifu_right.css\";\n                }\n        })();\n\n\t(function registerEventListener() { // 工具栏菜单效果\n\t\tdocument.querySelector(\"#waifu-tool .fa-comment\").addEventListener(\"click\", showHitokoto); // 一言API对话\n\t\t// document.querySelector(\"#waifu-tool .fa-paper-plane\").addEventListener(\"click\", () => { // 飞机大战（雾）\n\t\t// \tif (window.Asteroids) {\n\t\t// \t\tif (!window.ASTEROIDSPLAYERS) window.ASTEROIDSPLAYERS = [];\n\t\t// \t\twindow.ASTEROIDSPLAYERS.push(new Asteroids());\n\t\t// \t} else {\n\t\t// \t\tconst script = document.createElement(\"script\");\n\t\t// \t\tscript.src = \"https://cdn.jsdelivr.net/gh/stevenjoezhang/asteroids/asteroids.js\";\n\t\t// \t\tdocument.head.appendChild(script);\n\t\t// \t}\n\t\t// });\n\t\tdocument.querySelector(\"#waifu-tool .fa-user-circle\").addEventListener(\"click\", loadOtherModel); // 切换模型\n\t\tdocument.querySelector(\"#waifu-tool .fa-street-view\").addEventListener(\"click\", loadRandModel); // 切换材质\n\t\tdocument.querySelector(\"#waifu-tool .fa-camera-retro\").addEventListener(\"click\", () => { // 输出照片\n\t\t\tshowMessage(\"照好了嘛，是不是很可爱呢？\", 6000, 9);\n\t\t\tLive2D.captureName = \"photo.png\"; // 输出照片的名字\n\t\t\tLive2D.captureFrame = true;\n\t\t});\n\t\tdocument.querySelector(\"#waifu-tool .fa-info-circle\").addEventListener(\"click\", () => { // 关于页转跳\n\t\t\topen(\"https://github.com/stevenjoezhang/live2d-widget\"); //关于页链接\n\t\t});\n\t\tdocument.querySelector(\"#waifu-tool .fa-times\").addEventListener(\"click\", () => { // 关闭看板娘\n\t\t\tlocalStorage.setItem(\"waifu-display\", Date.now());\n\t\t\tshowMessage(\"愿你有一天能与重要的人重逢。\", 2000, 11);\n\t\t\tdocument.getElementById(\"waifu\").style.bottom = \"-500px\";\n\t\t\tsetTimeout(() => {\n\t\t\t\tdocument.getElementById(\"waifu\").style.display = \"none\";\n\t\t\t\tdocument.getElementById(\"waifu-toggle\").classList.add(\"waifu-toggle-active\");\n\t\t\t}, 3000);\n\t\t});\n\t\tdocument.querySelector(\"#waifu-tool .fa-chevron-right\").addEventListener(\"click\", () => { // 切换看板娘位置（左 => 右）\n\t\t\tlocalStorage.setItem(\"Live2DPlace\", \"right\");\n\t\t\tshowMessage(\"耶，可以去右边了呢～。\", 2000, 11);\n\t\t\tdocument.getElementById(\"waifu\").style.bottom = \"-500px\";\n\t\t\tdocument.getElementById(\"waifu-toggle\").style.display = \"none\";\n\t\t\tsetTimeout(() => {\n\t\t\t\tdocument.getElementById(\"live2d_css\").href = live2d_path + \"waifu_right.css\";\n\t\t\t\tdocument.getElementById(\"waifu\").style.bottom = \"0px\";\n\t\t\t\tdocument.getElementById(\"live2d-go-right\").style.display = \"none\";\n\t\t\t\tdocument.getElementById(\"live2d-go-left\").style.display = \"block\";\n\t\t\t}, 3000);\n\t\t\tsetTimeout('document.getElementById(\"waifu-toggle\").style.display = \"inline\"',6000);\n\t\t});\n                document.querySelector(\"#waifu-tool .fa-chevron-left\").addEventListener(\"click\", () => { // 切换看板娘位置（左 <= 右）\n\t\t\tlocalStorage.setItem(\"Live2DPlace\", \"left\");\n\t\t\tshowMessage(\"耶，可以去左边了呢～。\", 2000, 11);\n\t\t\tdocument.getElementById(\"waifu\").style.bottom = \"-500px\";\n\t\t\tdocument.getElementById(\"waifu-toggle\").style.display = \"none\";\n\t\t\tsetTimeout(() => {\n\t\t\t\tdocument.getElementById(\"live2d_css\").href = live2d_path + \"waifu_left.css\";\n\t\t\t\tdocument.getElementById(\"waifu\").style.bottom = \"0px\";\n\t\t\t\tdocument.getElementById(\"live2d-go-left\").style.display = \"none\";\n\t\t\t\tdocument.getElementById(\"live2d-go-right\").style.display = \"block\";\n\t\t\t}, 3000);\n\t\t\tsetTimeout('document.getElementById(\"waifu-toggle\").style.display = \"inline\"',6000);\n\t\t});\n\t\tconst devtools = () => { };\n\t\tconsole.log(\"%c\", devtools);\n\t\tdevtools.toString = () => {\n\t\t\tshowMessage(\"哈哈，你打开了控制台，是想要看看我的小秘密吗？\", 6000, 9);\n\t\t};\n\t\twindow.addEventListener(\"copy\", () => {\n\t\t\tshowMessage(\"你都复制了些什么呀，转载要记得加上出处哦！\", 6000, 9);\n\t\t});\n\t\twindow.addEventListener(\"visibilitychange\", () => {\n\t\t\tif (!document.hidden) showMessage(\"哇，你终于回来了～\", 6000, 9);\n\t\t});\n\t})();\n\n\t(function welcomeMessage() {\n\t\tlet text;\n\t\tif (location.pathname === \"/\") { // 如果是主页\n\t\t\tconst now = new Date().getHours();\n\t\t\tif (now > 5 && now <= 7) text = \"早上好！一日之计在于晨，美好的一天就要开始了。\";\n\t\t\telse if (now > 7 && now <= 11) text = \"上午好！工作顺利嘛，不要久坐，多起来走动走动哦！\";\n\t\t\telse if (now > 11 && now <= 13) text = \"中午了，工作了一个上午，现在是午餐时间！\";\n\t\t\telse if (now > 13 && now <= 17) text = \"午后很容易犯困呢，今天的运动目标完成了吗？\";\n\t\t\telse if (now > 17 && now <= 19) text = \"傍晚了！窗外夕阳的景色很美丽呢，最美不过夕阳红～\";\n\t\t\telse if (now > 19 && now <= 21) text = \"晚上好，今天过得怎么样？\";\n\t\t\telse if (now > 21 && now <= 23) text = [\"已经这么晚了呀，早点休息吧，晚安～\", \"深夜时要爱护眼睛呀！\"];\n\t\t\telse text = \"你是夜猫子呀？这么晚还不睡觉，明天起的来嘛？\";\n\t\t} else if (document.referrer !== \"\") {\n\t\t\tconst referrer = new URL(document.referrer),\n\t\t\t\tdomain = referrer.hostname.split(\".\")[1];\n\t\t\tif (location.hostname === referrer.hostname) text = `欢迎阅读<span>「${document.title.split(\" - \")[0]}」</span>`;\n\t\t\telse if (domain === \"baidu\") text = `Hello！来自 百度搜索 的朋友<br>你是搜索 <span>${referrer.search.split(\"&wd=\")[1].split(\"&\")[0]}</span> 找到的我吗？`;\n\t\t\telse if (domain === \"so\") text = `Hello！来自 360搜索 的朋友<br>你是搜索 <span>${referrer.search.split(\"&q=\")[1].split(\"&\")[0]}</span> 找到的我吗？`;\n\t\t\telse if (domain === \"google\") text = `Hello！来自 谷歌搜索 的朋友<br>欢迎阅读<span>「${document.title.split(\" - \")[0]}」</span>`;\n\t\t\telse text = `Hello！来自 <span>${referrer.hostname}</span> 的朋友`;\n\t\t} else {\n\t\t\ttext = `欢迎阅读<span>「${document.title.split(\" - \")[0]}」</span>`;\n\t\t}\n\t\tshowMessage(text, 7000, 8);\n\t})();\n\n\tfunction showHitokoto() { // 增加 hitokoto.cn 的 API\n\t\tfetch(\"https://v1.hitokoto.cn\")\n\t\t\t.then(response => response.json())\n\t\t\t.then(result => {\n\t\t\t\tconst text = `这句一言来自 <span>「${result.from}」</span>，是 <span>${result.creator}</span> 在 hitokoto.cn 投稿的。`;\n\t\t\t\tshowMessage(result.hitokoto, 6000, 9);\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tshowMessage(text, 4000, 9);\n\t\t\t\t}, 6000);\n\t\t\t});\n\t}\n\n\tfunction showMessage(text, timeout, priority) {\n\t\tif (!text || (sessionStorage.getItem(\"waifu-text\") && sessionStorage.getItem(\"waifu-text\") > priority)) return;\n\t\tif (messageTimer) {\n\t\t\tclearTimeout(messageTimer);\n\t\t\tmessageTimer = null;\n\t\t}\n\t\ttext = randomSelection(text);\n\t\tsessionStorage.setItem(\"waifu-text\", priority);\n\t\tconst tips = document.getElementById(\"waifu-tips\");\n\t\ttips.innerHTML = text;\n\t\ttips.classList.add(\"waifu-tips-active\");\n\t\tmessageTimer = setTimeout(() => {\n\t\t\tsessionStorage.removeItem(\"waifu-text\");\n\t\t\ttips.classList.remove(\"waifu-tips-active\");\n\t\t}, timeout);\n\t}\n\n\t(function initModel() {\n\t\tlet modelId = localStorage.getItem(\"modelId\"),\n\t\t\tmodelTexturesId = localStorage.getItem(\"modelTexturesId\");\n\t\tif (modelId === null) {\n\t\t\t// 首次访问时加载 指定模型 的 指定材质\n\t\t\tmodelId = 2; // 模型 ID\n\t\t\tmodelTexturesId = 39; // 材质 ID\n\t\t}\n\t\tloadModel(modelId, modelTexturesId);\n\t\tfetch(waifuPath)\n\t\t\t.then(response => response.json())\n\t\t\t.then(result => {\n\t\t\t\twindow.addEventListener(\"mouseover\", event => {\n\t\t\t\t\tfor (let { selector, text } of result.mouseover) {\n\t\t\t\t\t\tif (!event.target.matches(selector)) continue;\n\t\t\t\t\t\ttext = randomSelection(text);\n\t\t\t\t\t\ttext = text.replace(\"{text}\", event.target.innerText);\n\t\t\t\t\t\tshowMessage(text, 4000, 8);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\twindow.addEventListener(\"click\", event => {\n\t\t\t\t\tfor (let { selector, text } of result.click) {\n\t\t\t\t\t\tif (!event.target.matches(selector)) continue;\n\t\t\t\t\t\ttext = randomSelection(text);\n\t\t\t\t\t\ttext = text.replace(\"{text}\", event.target.innerText);\n\t\t\t\t\t\tshowMessage(text, 4000, 8);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tresult.seasons.forEach(({ date, text }) => {\n\t\t\t\t\tconst now = new Date(),\n\t\t\t\t\t\tafter = date.split(\"-\")[0],\n\t\t\t\t\t\tbefore = date.split(\"-\")[1] || after;\n\t\t\t\t\tif ((after.split(\"/\")[0] <= now.getMonth() + 1 && now.getMonth() + 1 <= before.split(\"/\")[0]) && (after.split(\"/\")[1] <= now.getDate() && now.getDate() <= before.split(\"/\")[1])) {\n\t\t\t\t\t\ttext = randomSelection(text);\n\t\t\t\t\t\ttext = text.replace(\"{year}\", now.getFullYear());\n\t\t\t\t\t\t//showMessage(text, 7000, true);\n\t\t\t\t\t\tmessageArray.push(text);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t})();\n\n\tasync function loadModelList() {\n\t\tconst response = await fetch(`${cdnPath}model_list.json`);\n\t\tmodelList = await response.json();\n\t}\n\n\tasync function loadModel(modelId, modelTexturesId, message) {\n\t\tlocalStorage.setItem(\"modelId\", modelId);\n\t\tlocalStorage.setItem(\"modelTexturesId\", modelTexturesId);\n\t\tshowMessage(message, 4000, 10);\n\t\tif (useCDN) {\n\t\t\tif (!modelList) await loadModelList();\n\t\t\tconst target = randomSelection(modelList.models[modelId]);\n\t\t\tloadlive2d(\"live2d\", `${cdnPath}model/${target}/index.json`);\n\t\t} else {\n\t\t\tloadlive2d(\"live2d\", `${apiPath}get/?id=${modelId}-${modelTexturesId}`);\n\t\t\tconsole.log(`Live2D 模型 ${modelId}-${modelTexturesId} 加载完成`);\n\t\t}\n\t}\n\n\tasync function loadRandModel() {\n\t\tconst modelId = localStorage.getItem(\"modelId\"),\n\t\t\tmodelTexturesId = localStorage.getItem(\"modelTexturesId\");\n\t\tif (useCDN) {\n\t\t\tif (!modelList) await loadModelList();\n\t\t\tconst target = randomSelection(modelList.models[modelId]);\n\t\t\tloadlive2d(\"live2d\", `${cdnPath}model/${target}/index.json`);\n\t\t\tshowMessage(\"我的新衣服好看嘛？\", 4000, 10);\n\t\t} else {\n\t\t\t// 材质加载方式, 可选 \"rand\"(随机), \"switch\"(顺序)\n\t\t\tfetch(`${apiPath}switch_textures/?id=${modelId}-${modelTexturesId}`)\n\t\t\t\t.then(response => response.json())\n\t\t\t\t.then(result => {\n\t\t\t\t\tif (result.textures.id === 1 && (modelTexturesId === 1 || modelTexturesId === 0)) showMessage(\"我还没有其他衣服呢！\", 4000, 10);\n\t\t\t\t\telse loadModel(modelId, result.textures.id, \"我的新衣服好看嘛？\");\n\t\t\t\t});\n\t\t}\n\t}\n\n\tasync function loadOtherModel() {\n\t\tlet modelId = localStorage.getItem(\"modelId\");\n\t\tif (useCDN) {\n\t\t\tif (!modelList) await loadModelList();\n\t\t\tconst index = (++modelId >= modelList.models.length) ? 0 : modelId;\n\t\t\tloadModel(index, 0, modelList.messages[index]);\n\t\t} else {\n\t\t\tfetch(`${apiPath}switch/?id=${modelId}`)\n\t\t\t\t.then(response => response.json())\n\t\t\t\t.then(result => {\n\t\t\t\t\tloadModel(result.model.id, 0, result.model.message);\n\t\t\t\t});\n\t\t}\n\t}\n}\n\nfunction initWidget(config, apiPath) {\n\tif (typeof config === \"string\") {\n\t\tconfig = {\n\t\t\twaifuPath: config,\n\t\t\tapiPath\n\t\t};\n\t}\n\tdocument.body.insertAdjacentHTML(\"beforeend\", `<div id=\"waifu-toggle\">\n\t\t\t<span>看板娘</span>\n\t\t</div>`);\n\tconst toggle = document.getElementById(\"waifu-toggle\");\n\ttoggle.addEventListener(\"click\", () => {\n\t\ttoggle.classList.remove(\"waifu-toggle-active\");\n\t\tif (toggle.getAttribute(\"first-time\")) {\n\t\t\tloadWidget(config);\n\t\t\ttoggle.removeAttribute(\"first-time\");\n\t\t} else {\n\t\t\tlocalStorage.removeItem(\"waifu-display\");\n\t\t\tdocument.getElementById(\"waifu\").style.display = \"\";\n\t\t\tsetTimeout(() => {\n\t\t\t\tdocument.getElementById(\"waifu\").style.bottom = 0;\n\t\t\t}, 0);\n\t\t}\n\t});\n\tif (localStorage.getItem(\"waifu-display\") && Date.now() - localStorage.getItem(\"waifu-display\") <= 86400000) {\n\t\ttoggle.setAttribute(\"first-time\", true);\n\t\tsetTimeout(() => {\n\t\t\ttoggle.classList.add(\"waifu-toggle-active\");\n\t\t}, 0);\n\t} else {\n\t\tloadWidget(config);\n\t}\n}\n"},{"_content":"!function(t){function i(r){if(e[r])return e[r].exports;var o=e[r]={i:r,l:!1,exports:{}};return t[r].call(o.exports,o,o.exports,i),o.l=!0,o.exports}var e={};i.m=t,i.c=e,i.d=function(t,e,r){i.o(t,e)||Object.defineProperty(t,e,{configurable:!1,enumerable:!0,get:r})},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,\"a\",e),e},i.o=function(t,i){return Object.prototype.hasOwnProperty.call(t,i)},i.p=\"\",i(i.s=4)}([function(t,i,e){\"use strict\";function r(){this.live2DModel=null,this.modelMatrix=null,this.eyeBlink=null,this.physics=null,this.pose=null,this.debugMode=!1,this.initialized=!1,this.updating=!1,this.alpha=1,this.accAlpha=0,this.lipSync=!1,this.lipSyncValue=0,this.accelX=0,this.accelY=0,this.accelZ=0,this.dragX=0,this.dragY=0,this.startTimeMSec=null,this.mainMotionManager=new h,this.expressionManager=new h,this.motions={},this.expressions={},this.isTexLoaded=!1}function o(){AMotion.prototype.constructor.call(this),this.paramList=new Array}function n(){this.id=\"\",this.type=-1,this.value=null}function s(){this.nextBlinkTime=null,this.stateStartTime=null,this.blinkIntervalMsec=null,this.eyeState=g.STATE_FIRST,this.blinkIntervalMsec=4e3,this.closingMotionMsec=100,this.closedMotionMsec=50,this.openingMotionMsec=150,this.closeIfZero=!0,this.eyeID_L=\"PARAM_EYE_L_OPEN\",this.eyeID_R=\"PARAM_EYE_R_OPEN\"}function _(){this.tr=new Float32Array(16),this.identity()}function a(t,i){_.prototype.constructor.call(this),this.width=t,this.height=i}function h(){MotionQueueManager.prototype.constructor.call(this),this.currentPriority=null,this.reservePriority=null,this.super=MotionQueueManager.prototype}function l(){this.physicsList=new Array,this.startTimeMSec=UtSystem.getUserTimeMSec()}function $(){this.lastTime=0,this.lastModel=null,this.partsGroups=new Array}function u(t){this.paramIndex=-1,this.partsIndex=-1,this.link=null,this.id=t}function p(){this.EPSILON=.01,this.faceTargetX=0,this.faceTargetY=0,this.faceX=0,this.faceY=0,this.faceVX=0,this.faceVY=0,this.lastTimeSec=0}function f(){_.prototype.constructor.call(this),this.screenLeft=null,this.screenRight=null,this.screenTop=null,this.screenBottom=null,this.maxLeft=null,this.maxRight=null,this.maxTop=null,this.maxBottom=null,this.max=Number.MAX_VALUE,this.min=0}function c(){}var d=0;r.prototype.getModelMatrix=function(){return this.modelMatrix},r.prototype.setAlpha=function(t){t>.999&&(t=1),t<.001&&(t=0),this.alpha=t},r.prototype.getAlpha=function(){return this.alpha},r.prototype.isInitialized=function(){return this.initialized},r.prototype.setInitialized=function(t){this.initialized=t},r.prototype.isUpdating=function(){return this.updating},r.prototype.setUpdating=function(t){this.updating=t},r.prototype.getLive2DModel=function(){return this.live2DModel},r.prototype.setLipSync=function(t){this.lipSync=t},r.prototype.setLipSyncValue=function(t){this.lipSyncValue=t},r.prototype.setAccel=function(t,i,e){this.accelX=t,this.accelY=i,this.accelZ=e},r.prototype.setDrag=function(t,i){this.dragX=t,this.dragY=i},r.prototype.getMainMotionManager=function(){return this.mainMotionManager},r.prototype.getExpressionManager=function(){return this.expressionManager},r.prototype.loadModelData=function(t,i){var e=c.getPlatformManager();this.debugMode&&e.log(\"Load model : \"+t);var r=this;e.loadLive2DModel(t,function(t){if(r.live2DModel=t,r.live2DModel.saveParam(),0!=Live2D.getError())return void console.error(\"Error : Failed to loadModelData().\");r.modelMatrix=new a(r.live2DModel.getCanvasWidth(),r.live2DModel.getCanvasHeight()),r.modelMatrix.setWidth(2),r.modelMatrix.setCenterPosition(0,0),i(r.live2DModel)})},r.prototype.loadTexture=function(t,i,e){d++;var r=c.getPlatformManager();this.debugMode&&r.log(\"Load Texture : \"+i);var o=this;r.loadTexture(this.live2DModel,t,i,function(){d--,0==d&&(o.isTexLoaded=!0),\"function\"==typeof e&&e()})},r.prototype.loadMotion=function(t,i,e){var r=c.getPlatformManager();this.debugMode&&r.log(\"Load Motion : \"+i);var o=null,n=this;r.loadBytes(i,function(i){o=Live2DMotion.loadMotion(i),null!=t&&(n.motions[t]=o),e(o)})},r.prototype.loadExpression=function(t,i,e){var r=c.getPlatformManager();this.debugMode&&r.log(\"Load Expression : \"+i);var n=this;r.loadBytes(i,function(i){null!=t&&(n.expressions[t]=o.loadJson(i)),\"function\"==typeof e&&e()})},r.prototype.loadPose=function(t,i){var e=c.getPlatformManager();this.debugMode&&e.log(\"Load Pose : \"+t);var r=this;try{e.loadBytes(t,function(t){r.pose=$.load(t),\"function\"==typeof i&&i()})}catch(t){console.warn(t)}},r.prototype.loadPhysics=function(t){var i=c.getPlatformManager();this.debugMode&&i.log(\"Load Physics : \"+t);var e=this;try{i.loadBytes(t,function(t){e.physics=l.load(t)})}catch(t){console.warn(t)}},r.prototype.hitTestSimple=function(t,i,e){if(null===this.live2DModel)return!1;var r=this.live2DModel.getDrawDataIndex(t);if(r<0)return!1;for(var o=this.live2DModel.getTransformedPoints(r),n=this.live2DModel.getCanvasWidth(),s=0,_=this.live2DModel.getCanvasHeight(),a=0,h=0;h<o.length;h+=2){var l=o[h],$=o[h+1];l<n&&(n=l),l>s&&(s=l),$<_&&(_=$),$>a&&(a=$)}var u=this.modelMatrix.invertTransformX(i),p=this.modelMatrix.invertTransformY(e);return n<=u&&u<=s&&_<=p&&p<=a},r.prototype.hitTestSimpleCustom=function(t,i,e,r){return null!==this.live2DModel&&(e>=t[0]&&e<=i[0]&&r<=t[1]&&r>=i[1])},o.prototype=new AMotion,o.EXPRESSION_DEFAULT=\"DEFAULT\",o.TYPE_SET=0,o.TYPE_ADD=1,o.TYPE_MULT=2,o.loadJson=function(t){var i=new o,e=c.getPlatformManager(),r=e.jsonParseFromBytes(t);if(i.setFadeIn(parseInt(r.fade_in)>0?parseInt(r.fade_in):1e3),i.setFadeOut(parseInt(r.fade_out)>0?parseInt(r.fade_out):1e3),null==r.params)return i;var s=r.params,_=s.length;i.paramList=[];for(var a=0;a<_;a++){var h=s[a],l=h.id.toString(),$=parseFloat(h.val),u=o.TYPE_ADD,p=null!=h.calc?h.calc.toString():\"add\";if((u=\"add\"===p?o.TYPE_ADD:\"mult\"===p?o.TYPE_MULT:\"set\"===p?o.TYPE_SET:o.TYPE_ADD)==o.TYPE_ADD){var f=null==h.def?0:parseFloat(h.def);$-=f}else if(u==o.TYPE_MULT){var f=null==h.def?1:parseFloat(h.def);0==f&&(f=1),$/=f}var d=new n;d.id=l,d.type=u,d.value=$,i.paramList.push(d)}return i},o.prototype.updateParamExe=function(t,i,e,r){for(var n=this.paramList.length-1;n>=0;--n){var s=this.paramList[n];s.type==o.TYPE_ADD?t.addToParamFloat(s.id,s.value,e):s.type==o.TYPE_MULT?t.multParamFloat(s.id,s.value,e):s.type==o.TYPE_SET&&t.setParamFloat(s.id,s.value,e)}},s.prototype.calcNextBlink=function(){return UtSystem.getUserTimeMSec()+Math.random()*(2*this.blinkIntervalMsec-1)},s.prototype.setInterval=function(t){this.blinkIntervalMsec=t},s.prototype.setEyeMotion=function(t,i,e){this.closingMotionMsec=t,this.closedMotionMsec=i,this.openingMotionMsec=e},s.prototype.updateParam=function(t){var i,e=UtSystem.getUserTimeMSec(),r=0;switch(this.eyeState){case g.STATE_CLOSING:r=(e-this.stateStartTime)/this.closingMotionMsec,r>=1&&(r=1,this.eyeState=g.STATE_CLOSED,this.stateStartTime=e),i=1-r;break;case g.STATE_CLOSED:r=(e-this.stateStartTime)/this.closedMotionMsec,r>=1&&(this.eyeState=g.STATE_OPENING,this.stateStartTime=e),i=0;break;case g.STATE_OPENING:r=(e-this.stateStartTime)/this.openingMotionMsec,r>=1&&(r=1,this.eyeState=g.STATE_INTERVAL,this.nextBlinkTime=this.calcNextBlink()),i=r;break;case g.STATE_INTERVAL:this.nextBlinkTime<e&&(this.eyeState=g.STATE_CLOSING,this.stateStartTime=e),i=1;break;case g.STATE_FIRST:default:this.eyeState=g.STATE_INTERVAL,this.nextBlinkTime=this.calcNextBlink(),i=1}this.closeIfZero||(i=-i),t.setParamFloat(this.eyeID_L,i),t.setParamFloat(this.eyeID_R,i)};var g=function(){};g.STATE_FIRST=\"STATE_FIRST\",g.STATE_INTERVAL=\"STATE_INTERVAL\",g.STATE_CLOSING=\"STATE_CLOSING\",g.STATE_CLOSED=\"STATE_CLOSED\",g.STATE_OPENING=\"STATE_OPENING\",_.mul=function(t,i,e){var r,o,n,s=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];for(r=0;r<4;r++)for(o=0;o<4;o++)for(n=0;n<4;n++)s[r+4*o]+=t[r+4*n]*i[n+4*o];for(r=0;r<16;r++)e[r]=s[r]},_.prototype.identity=function(){for(var t=0;t<16;t++)this.tr[t]=t%5==0?1:0},_.prototype.getArray=function(){return this.tr},_.prototype.getCopyMatrix=function(){return new Float32Array(this.tr)},_.prototype.setMatrix=function(t){if(null!=this.tr&&this.tr.length==this.tr.length)for(var i=0;i<16;i++)this.tr[i]=t[i]},_.prototype.getScaleX=function(){return this.tr[0]},_.prototype.getScaleY=function(){return this.tr[5]},_.prototype.transformX=function(t){return this.tr[0]*t*8/3+this.tr[12]},_.prototype.transformY=function(t){return this.tr[5]*t*8/3+this.tr[13]},_.prototype.invertTransformX=function(t){return(t-this.tr[12])/this.tr[0]},_.prototype.invertTransformY=function(t){return(t-this.tr[13])/this.tr[5]},_.prototype.multTranslate=function(t,i){var e=[1,0,0,0,0,1,0,0,0,0,1,0,t,i,0,1];_.mul(e,this.tr,this.tr)},_.prototype.translate=function(t,i){this.tr[12]=t,this.tr[13]=i},_.prototype.translateX=function(t){this.tr[12]=t},_.prototype.translateY=function(t){this.tr[13]=t},_.prototype.multScale=function(t,i){var e=[t,0,0,0,0,i,0,0,0,0,1,0,0,0,0,1];_.mul(e,this.tr,this.tr)},_.prototype.scale=function(t,i){this.tr[0]=t,this.tr[5]=i},a.prototype=new _,a.prototype.setPosition=function(t,i){this.translate(t,i)},a.prototype.setCenterPosition=function(t,i){var e=this.width*this.getScaleX(),r=this.height*this.getScaleY();this.translate(t-e/2,i-r/2)},a.prototype.top=function(t){this.setY(t)},a.prototype.bottom=function(t){var i=this.height*this.getScaleY();this.translateY(t-i)},a.prototype.left=function(t){this.setX(t)},a.prototype.right=function(t){var i=this.width*this.getScaleX();this.translateX(t-i)},a.prototype.centerX=function(t){var i=this.width*this.getScaleX();this.translateX(t-i/2)},a.prototype.centerY=function(t){var i=this.height*this.getScaleY();this.translateY(t-i/2)},a.prototype.setX=function(t){this.translateX(t)},a.prototype.setY=function(t){this.translateY(t)},a.prototype.setHeight=function(t){var i=t/this.height,e=-i;this.scale(i,e)},a.prototype.setWidth=function(t){var i=t/this.width,e=-i;this.scale(i,e)},h.prototype=new MotionQueueManager,h.prototype.getCurrentPriority=function(){return this.currentPriority},h.prototype.getReservePriority=function(){return this.reservePriority},h.prototype.reserveMotion=function(t){return!(this.reservePriority>=t)&&(!(this.currentPriority>=t)&&(this.reservePriority=t,!0))},h.prototype.setReservePriority=function(t){this.reservePriority=t},h.prototype.updateParam=function(t){var i=MotionQueueManager.prototype.updateParam.call(this,t);return this.isFinished()&&(this.currentPriority=0),i},h.prototype.startMotionPrio=function(t,i){return i==this.reservePriority&&(this.reservePriority=0),this.currentPriority=i,this.startMotion(t,!1)},l.load=function(t){for(var i=new l,e=c.getPlatformManager(),r=e.jsonParseFromBytes(t),o=r.physics_hair,n=o.length,s=0;s<n;s++){var _=o[s],a=new PhysicsHair,h=_.setup,$=parseFloat(h.length),u=parseFloat(h.regist),p=parseFloat(h.mass);a.setup($,u,p);for(var f=_.src,d=f.length,g=0;g<d;g++){var y=f[g],m=y.id,T=PhysicsHair.Src.SRC_TO_X,P=y.ptype;\"x\"===P?T=PhysicsHair.Src.SRC_TO_X:\"y\"===P?T=PhysicsHair.Src.SRC_TO_Y:\"angle\"===P?T=PhysicsHair.Src.SRC_TO_G_ANGLE:UtDebug.error(\"live2d\",\"Invalid parameter:PhysicsHair.Src\");var S=parseFloat(y.scale),v=parseFloat(y.weight);a.addSrcParam(T,m,S,v)}for(var L=_.targets,M=L.length,g=0;g<M;g++){var E=L[g],m=E.id,T=PhysicsHair.Target.TARGET_FROM_ANGLE,P=E.ptype;\"angle\"===P?T=PhysicsHair.Target.TARGET_FROM_ANGLE:\"angle_v\"===P?T=PhysicsHair.Target.TARGET_FROM_ANGLE_V:UtDebug.error(\"live2d\",\"Invalid parameter:PhysicsHair.Target\");var S=parseFloat(E.scale),v=parseFloat(E.weight);a.addTargetParam(T,m,S,v)}i.physicsList.push(a)}return i},l.prototype.updateParam=function(t){for(var i=UtSystem.getUserTimeMSec()-this.startTimeMSec,e=0;e<this.physicsList.length;e++)this.physicsList[e].update(t,i)},$.load=function(t){for(var i=new $,e=c.getPlatformManager(),r=e.jsonParseFromBytes(t),o=r.parts_visible,n=o.length,s=0;s<n;s++){for(var _=o[s],a=_.group,h=a.length,l=new Array,p=0;p<h;p++){var f=a[p],d=new u(f.id);if(l[p]=d,null!=f.link){var g=f.link,y=g.length;d.link=new Array;for(var m=0;m<y;m++){var T=new u(g[m]);d.link.push(T)}}}i.partsGroups.push(l)}return i},$.prototype.updateParam=function(t){if(null!=t){t!=this.lastModel&&this.initParam(t),this.lastModel=t;var i=UtSystem.getUserTimeMSec(),e=0==this.lastTime?0:(i-this.lastTime)/1e3;this.lastTime=i,e<0&&(e=0);for(var r=0;r<this.partsGroups.length;r++)this.normalizePartsOpacityGroup(t,this.partsGroups[r],e),this.copyOpacityOtherParts(t,this.partsGroups[r])}},$.prototype.initParam=function(t){if(null!=t)for(var i=0;i<this.partsGroups.length;i++)for(var e=this.partsGroups[i],r=0;r<e.length;r++){e[r].initIndex(t);var o=e[r].partsIndex,n=e[r].paramIndex;if(!(o<0)){var s=0!=t.getParamFloat(n);if(t.setPartsOpacity(o,s?1:0),t.setParamFloat(n,s?1:0),null!=e[r].link)for(var _=0;_<e[r].link.length;_++)e[r].link[_].initIndex(t)}}},$.prototype.normalizePartsOpacityGroup=function(t,i,e){for(var r=-1,o=1,n=0;n<i.length;n++){var s=i[n].partsIndex,_=i[n].paramIndex;if(!(s<0)&&0!=t.getParamFloat(_)){if(r>=0)break;r=n,o=t.getPartsOpacity(s),o+=e/.5,o>1&&(o=1)}}r<0&&(r=0,o=1);for(var n=0;n<i.length;n++){var s=i[n].partsIndex;if(!(s<0))if(r==n)t.setPartsOpacity(s,o);else{var a,h=t.getPartsOpacity(s);a=o<.5?-.5*o/.5+1:.5*(1-o)/.5;var l=(1-a)*(1-o);l>.15&&(a=1-.15/(1-o)),h>a&&(h=a),t.setPartsOpacity(s,h)}}},$.prototype.copyOpacityOtherParts=function(t,i){for(var e=0;e<i.length;e++){var r=i[e];if(null!=r.link&&!(r.partsIndex<0))for(var o=t.getPartsOpacity(r.partsIndex),n=0;n<r.link.length;n++){var s=r.link[n];s.partsIndex<0||t.setPartsOpacity(s.partsIndex,o)}}},u.prototype.initIndex=function(t){this.paramIndex=t.getParamIndex(\"VISIBLE:\"+this.id),this.partsIndex=t.getPartsDataIndex(PartsDataID.getID(this.id)),t.setParamFloat(this.paramIndex,1)},p.FRAME_RATE=30,p.prototype.setPoint=function(t,i){this.faceTargetX=t,this.faceTargetY=i},p.prototype.getX=function(){return this.faceX},p.prototype.getY=function(){return this.faceY},p.prototype.update=function(){var t=40/7.5/p.FRAME_RATE;if(0==this.lastTimeSec)return void(this.lastTimeSec=UtSystem.getUserTimeMSec());var i=UtSystem.getUserTimeMSec(),e=(i-this.lastTimeSec)*p.FRAME_RATE/1e3;this.lastTimeSec=i;var r=.15*p.FRAME_RATE,o=e*t/r,n=this.faceTargetX-this.faceX,s=this.faceTargetY-this.faceY;if(!(Math.abs(n)<=this.EPSILON&&Math.abs(s)<=this.EPSILON)){var _=Math.sqrt(n*n+s*s),a=t*n/_,h=t*s/_,l=a-this.faceVX,$=h-this.faceVY,u=Math.sqrt(l*l+$*$);(u<-o||u>o)&&(l*=o/u,$*=o/u,u=o),this.faceVX+=l,this.faceVY+=$;var f=.5*(Math.sqrt(o*o+16*o*_-8*o*_)-o),c=Math.sqrt(this.faceVX*this.faceVX+this.faceVY*this.faceVY);c>f&&(this.faceVX*=f/c,this.faceVY*=f/c),this.faceX+=this.faceVX,this.faceY+=this.faceVY}},f.prototype=new _,f.prototype.getMaxScale=function(){return this.max},f.prototype.getMinScale=function(){return this.min},f.prototype.setMaxScale=function(t){this.max=t},f.prototype.setMinScale=function(t){this.min=t},f.prototype.isMaxScale=function(){return this.getScaleX()==this.max},f.prototype.isMinScale=function(){return this.getScaleX()==this.min},f.prototype.adjustTranslate=function(t,i){this.tr[0]*this.maxLeft+(this.tr[12]+t)>this.screenLeft&&(t=this.screenLeft-this.tr[0]*this.maxLeft-this.tr[12]),this.tr[0]*this.maxRight+(this.tr[12]+t)<this.screenRight&&(t=this.screenRight-this.tr[0]*this.maxRight-this.tr[12]),this.tr[5]*this.maxTop+(this.tr[13]+i)<this.screenTop&&(i=this.screenTop-this.tr[5]*this.maxTop-this.tr[13]),this.tr[5]*this.maxBottom+(this.tr[13]+i)>this.screenBottom&&(i=this.screenBottom-this.tr[5]*this.maxBottom-this.tr[13]);var e=[1,0,0,0,0,1,0,0,0,0,1,0,t,i,0,1];_.mul(e,this.tr,this.tr)},f.prototype.adjustScale=function(t,i,e){var r=e*this.tr[0];r<this.min?this.tr[0]>0&&(e=this.min/this.tr[0]):r>this.max&&this.tr[0]>0&&(e=this.max/this.tr[0]);var o=[1,0,0,0,0,1,0,0,0,0,1,0,t,i,0,1],n=[e,0,0,0,0,e,0,0,0,0,1,0,0,0,0,1],s=[1,0,0,0,0,1,0,0,0,0,1,0,-t,-i,0,1];_.mul(s,this.tr,this.tr),_.mul(n,this.tr,this.tr),_.mul(o,this.tr,this.tr)},f.prototype.setScreenRect=function(t,i,e,r){this.screenLeft=t,this.screenRight=i,this.screenTop=r,this.screenBottom=e},f.prototype.setMaxScreenRect=function(t,i,e,r){this.maxLeft=t,this.maxRight=i,this.maxTop=r,this.maxBottom=e},f.prototype.getScreenLeft=function(){return this.screenLeft},f.prototype.getScreenRight=function(){return this.screenRight},f.prototype.getScreenBottom=function(){return this.screenBottom},f.prototype.getScreenTop=function(){return this.screenTop},f.prototype.getMaxLeft=function(){return this.maxLeft},f.prototype.getMaxRight=function(){return this.maxRight},f.prototype.getMaxBottom=function(){return this.maxBottom},f.prototype.getMaxTop=function(){return this.maxTop},c.platformManager=null,c.getPlatformManager=function(){return c.platformManager},c.setPlatformManager=function(t){c.platformManager=t},t.exports={L2DTargetPoint:p,Live2DFramework:c,L2DViewMatrix:f,L2DPose:$,L2DPartsParam:u,L2DPhysics:l,L2DMotionManager:h,L2DModelMatrix:a,L2DMatrix44:_,EYE_STATE:g,L2DEyeBlink:s,L2DExpressionParam:n,L2DExpressionMotion:o,L2DBaseModel:r}},function(t,i,e){\"use strict\";var r={DEBUG_LOG:!1,DEBUG_MOUSE_LOG:!1,DEBUG_DRAW_HIT_AREA:!1,DEBUG_DRAW_ALPHA_MODEL:!1,VIEW_MAX_SCALE:2,VIEW_MIN_SCALE:.8,VIEW_LOGICAL_LEFT:-1,VIEW_LOGICAL_RIGHT:1,VIEW_LOGICAL_MAX_LEFT:-2,VIEW_LOGICAL_MAX_RIGHT:2,VIEW_LOGICAL_MAX_BOTTOM:-2,VIEW_LOGICAL_MAX_TOP:2,PRIORITY_NONE:0,PRIORITY_IDLE:1,PRIORITY_SLEEPY:2,PRIORITY_NORMAL:3,PRIORITY_FORCE:4,MOTION_GROUP_IDLE:\"idle\",MOTION_GROUP_SLEEPY:\"sleepy\",MOTION_GROUP_TAP_BODY:\"tap_body\",MOTION_GROUP_FLICK_HEAD:\"flick_head\",MOTION_GROUP_PINCH_IN:\"pinch_in\",MOTION_GROUP_PINCH_OUT:\"pinch_out\",MOTION_GROUP_SHAKE:\"shake\",HIT_AREA_HEAD:\"head\",HIT_AREA_BODY:\"body\"};t.exports=r},function(t,i,e){\"use strict\";function r(t){n=t}function o(){return n}Object.defineProperty(i,\"__esModule\",{value:!0}),i.setContext=r,i.getContext=o;var n=void 0},function(t,i,e){\"use strict\";function r(){}r.matrixStack=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],r.depth=0,r.currentMatrix=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],r.tmp=new Array(16),r.reset=function(){this.depth=0},r.loadIdentity=function(){for(var t=0;t<16;t++)this.currentMatrix[t]=t%5==0?1:0},r.push=function(){var t=(this.depth,16*(this.depth+1));this.matrixStack.length<t+16&&(this.matrixStack.length=t+16);for(var i=0;i<16;i++)this.matrixStack[t+i]=this.currentMatrix[i];this.depth++},r.pop=function(){--this.depth<0&&(myError(\"Invalid matrix stack.\"),this.depth=0);for(var t=16*this.depth,i=0;i<16;i++)this.currentMatrix[i]=this.matrixStack[t+i]},r.getMatrix=function(){return this.currentMatrix},r.multMatrix=function(t){var i,e,r;for(i=0;i<16;i++)this.tmp[i]=0;for(i=0;i<4;i++)for(e=0;e<4;e++)for(r=0;r<4;r++)this.tmp[i+4*e]+=this.currentMatrix[i+4*r]*t[r+4*e];for(i=0;i<16;i++)this.currentMatrix[i]=this.tmp[i]},t.exports=r},function(t,i,e){t.exports=e(5)},function(t,i,e){\"use strict\";function r(t){return t&&t.__esModule?t:{default:t}}function o(t){C=document.getElementById(t),C.addEventListener&&(window.addEventListener(\"click\",g),window.addEventListener(\"mousedown\",g),window.addEventListener(\"mousemove\",g),window.addEventListener(\"mouseup\",g),document.addEventListener(\"mouseout\",g),window.addEventListener(\"touchstart\",y),window.addEventListener(\"touchend\",y),window.addEventListener(\"touchmove\",y))}function n(t){var i=C.width,e=C.height;N=new M.L2DTargetPoint;var r=e/i,o=w.default.VIEW_LOGICAL_LEFT,n=w.default.VIEW_LOGICAL_RIGHT,_=-r,h=r;if(window.Live2D.captureFrame=!1,B=new M.L2DViewMatrix,B.setScreenRect(o,n,_,h),B.setMaxScreenRect(w.default.VIEW_LOGICAL_MAX_LEFT,w.default.VIEW_LOGICAL_MAX_RIGHT,w.default.VIEW_LOGICAL_MAX_BOTTOM,w.default.VIEW_LOGICAL_MAX_TOP),B.setMaxScale(w.default.VIEW_MAX_SCALE),B.setMinScale(w.default.VIEW_MIN_SCALE),U=new M.L2DMatrix44,U.multScale(1,i/e),G=new M.L2DMatrix44,G.multTranslate(-i/2,-e/2),G.multScale(2/i,-2/i),F=v(),(0,D.setContext)(F),!F)return console.error(\"Failed to create WebGL context.\"),void(window.WebGLRenderingContext&&console.error(\"Your browser don't support WebGL, check https://get.webgl.org/ for futher information.\"));window.Live2D.setGL(F),F.clearColor(0,0,0,0),a(t),s()}function s(){b||(b=!0,function t(){_();var i=window.requestAnimationFrame||window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame||window.msRequestAnimationFrame;if(window.Live2D.captureFrame){window.Live2D.captureFrame=!1;var e=document.createElement(\"a\");document.body.appendChild(e),e.setAttribute(\"type\",\"hidden\"),e.href=C.toDataURL(),e.download=window.Live2D.captureName||\"live2d.png\",e.click()}i(t,C)}())}function _(){O.default.reset(),O.default.loadIdentity(),N.update(),R.setDrag(N.getX(),N.getY()),F.clear(F.COLOR_BUFFER_BIT),O.default.multMatrix(U.getArray()),O.default.multMatrix(B.getArray()),O.default.push();for(var t=0;t<R.numModels();t++){var i=R.getModel(t);if(null==i)return;i.initialized&&!i.updating&&(i.update(),i.draw(F))}O.default.pop()}function a(t){R.reloadFlg=!0,R.count++,R.changeModel(F,t)}function h(t,i){return t.x*i.x+t.y*i.y}function l(t,i){var e=Math.sqrt(t*t+i*i);return{x:t/e,y:i/e}}function $(t,i,e){function r(t,i){return 180*Math.acos(h({x:0,y:1},l(t,i)))/Math.PI}if(i.x<e.left+e.width&&i.y<e.top+e.height&&i.x>e.left&&i.y>e.top)return i;var o=t.x-i.x,n=t.y-i.y,s=r(o,n);i.x<t.x&&(s=360-s);var _=360-r(e.left-t.x,-1*(e.top-t.y)),a=360-r(e.left-t.x,-1*(e.top+e.height-t.y)),$=r(e.left+e.width-t.x,-1*(e.top-t.y)),u=r(e.left+e.width-t.x,-1*(e.top+e.height-t.y)),p=n/o,f={};if(s<$){var c=e.top-t.y,d=c/p;f={y:t.y+c,x:t.x+d}}else if(s<u){var g=e.left+e.width-t.x,y=g*p;f={y:t.y+y,x:t.x+g}}else if(s<a){var m=e.top+e.height-t.y,T=m/p;f={y:t.y+m,x:t.x+T}}else if(s<_){var P=t.x-e.left,S=P*p;f={y:t.y-S,x:t.x-P}}else{var v=e.top-t.y,L=v/p;f={y:t.y+v,x:t.x+L}}return f}function u(t){Y=!0;var i=C.getBoundingClientRect(),e=P(t.clientX-i.left),r=S(t.clientY-i.top),o=$({x:i.left+i.width/2,y:i.top+i.height*X},{x:t.clientX,y:t.clientY},i),n=m(o.x-i.left),s=T(o.y-i.top);w.default.DEBUG_MOUSE_LOG&&console.log(\"onMouseMove device( x:\"+t.clientX+\" y:\"+t.clientY+\" ) view( x:\"+n+\" y:\"+s+\")\"),k=e,V=r,N.setPoint(n,s)}function p(t){Y=!0;var i=C.getBoundingClientRect(),e=P(t.clientX-i.left),r=S(t.clientY-i.top),o=$({x:i.left+i.width/2,y:i.top+i.height*X},{x:t.clientX,y:t.clientY},i),n=m(o.x-i.left),s=T(o.y-i.top);w.default.DEBUG_MOUSE_LOG&&console.log(\"onMouseDown device( x:\"+t.clientX+\" y:\"+t.clientY+\" ) view( x:\"+n+\" y:\"+s+\")\"),k=e,V=r,R.tapEvent(n,s)}function f(t){var i=C.getBoundingClientRect(),e=P(t.clientX-i.left),r=S(t.clientY-i.top),o=$({x:i.left+i.width/2,y:i.top+i.height*X},{x:t.clientX,y:t.clientY},i),n=m(o.x-i.left),s=T(o.y-i.top);w.default.DEBUG_MOUSE_LOG&&console.log(\"onMouseMove device( x:\"+t.clientX+\" y:\"+t.clientY+\" ) view( x:\"+n+\" y:\"+s+\")\"),Y&&(k=e,V=r,N.setPoint(n,s))}function c(){Y&&(Y=!1),N.setPoint(0,0)}function d(){w.default.DEBUG_LOG&&console.log(\"Set Session Storage.\"),sessionStorage.setItem(\"Sleepy\",\"1\")}function g(t){if(\"mousewheel\"==t.type);else if(\"mousedown\"==t.type)p(t);else if(\"mousemove\"==t.type){var i=sessionStorage.getItem(\"Sleepy\");\"1\"===i&&sessionStorage.setItem(\"Sleepy\",\"0\"),u(t)}else if(\"mouseup\"==t.type){if(\"button\"in t&&0!=t.button)return}else if(\"mouseout\"==t.type){w.default.DEBUG_LOG&&console.log(\"Mouse out Window.\"),c();var e=sessionStorage.getItem(\"SleepyTimer\");window.clearTimeout(e),e=window.setTimeout(d,5e4),sessionStorage.setItem(\"SleepyTimer\",e)}}function y(t){var i=t.touches[0];\"touchstart\"==t.type?1==t.touches.length&&u(i):\"touchmove\"==t.type?f(i):\"touchend\"==t.type&&c()}function m(t){var i=G.transformX(t);return B.invertTransformX(i)}function T(t){var i=G.transformY(t);return B.invertTransformY(i)}function P(t){return G.transformX(t)}function S(t){return G.transformY(t)}function v(){for(var t=[\"webgl\",\"experimental-webgl\",\"webkit-3d\",\"moz-webgl\"],i=0;i<t.length;i++)try{var e=C.getContext(t[i],{premultipliedAlpha:!0});if(e)return e}catch(t){}return null}function L(t,i,e){X=void 0===e?.5:e,o(t),n(i)}e(6);var M=e(0),E=e(8),A=r(E),I=e(1),w=r(I),x=e(3),O=r(x),D=e(2),R=(window.navigator.platform.toLowerCase(),new A.default),b=!1,F=null,C=null,N=null,B=null,U=null,G=null,Y=!1,k=0,V=0,X=.5;window.loadlive2d=L},function(t,i,e){\"use strict\";(function(t){!function(){function i(){At||(this._$MT=null,this._$5S=null,this._$NP=0,i._$42++,this._$5S=new Y(this))}function e(t){if(!At){this.clipContextList=new Array,this.glcontext=t.gl,this.dp_webgl=t,this.curFrameNo=0,this.firstError_clipInNotUpdate=!0,this.colorBuffer=0,this.isInitGLFBFunc=!1,this.tmpBoundsOnModel=new S,at.glContext.length>at.frameBuffers.length&&(this.curFrameNo=this.getMaskRenderTexture()),this.tmpModelToViewMatrix=new R,this.tmpMatrix2=new R,this.tmpMatrixForMask=new R,this.tmpMatrixForDraw=new R,this.CHANNEL_COLORS=new Array;var i=new A;i=new A,i.r=0,i.g=0,i.b=0,i.a=1,this.CHANNEL_COLORS.push(i),i=new A,i.r=1,i.g=0,i.b=0,i.a=0,this.CHANNEL_COLORS.push(i),i=new A,i.r=0,i.g=1,i.b=0,i.a=0,this.CHANNEL_COLORS.push(i),i=new A,i.r=0,i.g=0,i.b=1,i.a=0,this.CHANNEL_COLORS.push(i);for(var e=0;e<this.CHANNEL_COLORS.length;e++)this.dp_webgl.setChannelFlagAsColor(e,this.CHANNEL_COLORS[e])}}function r(t,i,e){this.clipIDList=new Array,this.clipIDList=e,this.clippingMaskDrawIndexList=new Array;for(var r=0;r<e.length;r++)this.clippingMaskDrawIndexList.push(i.getDrawDataIndex(e[r]));this.clippedDrawContextList=new Array,this.isUsing=!0,this.layoutChannelNo=0,this.layoutBounds=new S,this.allClippedDrawRect=new S,this.matrixForMask=new Float32Array(16),this.matrixForDraw=new Float32Array(16),this.owner=t}function o(t,i){this._$gP=t,this.drawDataIndex=i}function n(){At||(this.color=null)}function s(){At||(this._$dP=null,this._$eo=null,this._$V0=null,this._$dP=1e3,this._$eo=1e3,this._$V0=1,this._$a0())}function _(){}function a(){this._$r=null,this._$0S=null}function h(){At||(this.x=null,this.y=null,this.width=null,this.height=null)}function l(t){At||et.prototype.constructor.call(this,t)}function $(){}function u(t){At||et.prototype.constructor.call(this,t)}function p(){At||(this._$vo=null,this._$F2=null,this._$ao=400,this._$1S=400,p._$42++)}function f(){At||(this.p1=new c,this.p2=new c,this._$Fo=0,this._$Db=0,this._$L2=0,this._$M2=0,this._$ks=0,this._$9b=0,this._$iP=0,this._$iT=0,this._$lL=new Array,this._$qP=new Array,this.setup(.3,.5,.1))}function c(){this._$p=1,this.x=0,this.y=0,this.vx=0,this.vy=0,this.ax=0,this.ay=0,this.fx=0,this.fy=0,this._$s0=0,this._$70=0,this._$7L=0,this._$HL=0}function d(t,i,e){this._$wL=null,this.scale=null,this._$V0=null,this._$wL=t,this.scale=i,this._$V0=e}function g(t,i,e,r){d.prototype.constructor.call(this,i,e,r),this._$tL=null,this._$tL=t}function y(t,i,e){this._$wL=null,this.scale=null,this._$V0=null,this._$wL=t,this.scale=i,this._$V0=e}function T(t,i,e,r){y.prototype.constructor.call(this,i,e,r),this._$YP=null,this._$YP=t}function P(){At||(this._$fL=0,this._$gL=0,this._$B0=1,this._$z0=1,this._$qT=0,this.reflectX=!1,this.reflectY=!1)}function S(){At||(this.x=null,this.y=null,this.width=null,this.height=null)}function v(){}function L(){At||(this.x=null,this.y=null)}function M(){At||(this._$gP=null,this._$dr=null,this._$GS=null,this._$qb=null,this._$Lb=null,this._$mS=null,this.clipID=null,this.clipIDList=new Array)}function E(){At||(this._$Eb=E._$ps,this._$lT=1,this._$C0=1,this._$tT=1,this._$WL=1,this.culling=!1,this.matrix4x4=new Float32Array(16),this.premultipliedAlpha=!1,this.anisotropy=0,this.clippingProcess=E.CLIPPING_PROCESS_NONE,this.clipBufPre_clipContextMask=null,this.clipBufPre_clipContextDraw=null,this.CHANNEL_COLORS=new Array)}function A(){At||(this.a=1,this.r=1,this.g=1,this.b=1,this.scale=1,this._$ho=1,this.blendMode=at.L2D_COLOR_BLEND_MODE_MULT)}function I(){At||(this._$kP=null,this._$dr=null,this._$Ai=!0,this._$mS=null)}function w(){}function x(){At||(this._$VP=0,this._$wL=null,this._$GP=null,this._$8o=x._$ds,this._$2r=-1,this._$O2=0,this._$ri=0)}function O(){}function D(){At||(this._$Ob=null)}function R(){this.m=new Float32Array(16),this.identity()}function b(t){At||et.prototype.constructor.call(this,t)}function F(){At||(this._$7=1,this._$f=0,this._$H=0,this._$g=1,this._$k=0,this._$w=0,this._$hi=STATE_IDENTITY,this._$Z=_$pS)}function C(){At||(s.prototype.constructor.call(this),this.motions=new Array,this._$7r=null,this._$7r=C._$Co++,this._$D0=30,this._$yT=0,this._$E=!0,this.loopFadeIn=!0,this._$AS=-1,_$a0())}function N(){this._$P=new Float32Array(100),this.size=0}function B(){this._$4P=null,this._$I0=null,this._$RP=null}function U(){}function G(){}function Y(t){At||(this._$QT=!0,this._$co=-1,this._$qo=0,this._$pb=new Array(Y._$is),this._$_2=new Float32Array(Y._$is),this._$vr=new Float32Array(Y._$is),this._$Rr=new Float32Array(Y._$is),this._$Or=new Float32Array(Y._$is),this._$fs=new Float32Array(Y._$is),this._$Js=new Array(Y._$is),this._$3S=new Array,this._$aS=new Array,this._$Bo=null,this._$F2=new Array,this._$db=new Array,this._$8b=new Array,this._$Hr=new Array,this._$Ws=null,this._$Vs=null,this._$Er=null,this._$Es=new Int16Array(U._$Qb),this._$ZP=new Float32Array(2*U._$1r),this._$Ri=t,this._$b0=Y._$HP++,this.clipManager=null,this.dp_webgl=null)}function k(){}function V(){At||(this._$12=null,this._$bb=null,this._$_L=null,this._$jo=null,this._$iL=null,this._$0L=null,this._$Br=null,this._$Dr=null,this._$Cb=null,this._$mr=null,this._$_L=wt.STATE_FIRST,this._$Br=4e3,this._$Dr=100,this._$Cb=50,this._$mr=150,this._$jo=!0,this._$iL=\"PARAM_EYE_L_OPEN\",this._$0L=\"PARAM_EYE_R_OPEN\")}function X(){At||(E.prototype.constructor.call(this),this._$sb=new Int32Array(X._$As),this._$U2=new Array,this.transform=null,this.gl=null,null==X._$NT&&(X._$NT=X._$9r(256),X._$vS=X._$9r(256),X._$no=X._$vb(256)))}function z(){At||(I.prototype.constructor.call(this),this._$GS=null,this._$Y0=null)}function H(t){_t.prototype.constructor.call(this,t),this._$8r=I._$ur,this._$Yr=null,this._$Wr=null}function W(){At||(M.prototype.constructor.call(this),this._$gP=null,this._$dr=null,this._$GS=null,this._$qb=null,this._$Lb=null,this._$mS=null)}function j(){At||(this._$NL=null,this._$3S=null,this._$aS=null,j._$42++)}function q(){At||(i.prototype.constructor.call(this),this._$zo=new X)}function J(){At||(s.prototype.constructor.call(this),this.motions=new Array,this._$o2=null,this._$7r=J._$Co++,this._$D0=30,this._$yT=0,this._$E=!1,this.loopFadeIn=!0,this._$rr=-1,this._$eP=0)}function Q(t,i){return String.fromCharCode(t.getUint8(i))}function N(){this._$P=new Float32Array(100),this.size=0}function B(){this._$4P=null,this._$I0=null,this._$RP=null}function Z(){At||(I.prototype.constructor.call(this),this._$o=0,this._$A=0,this._$GS=null,this._$Eo=null)}function K(t){_t.prototype.constructor.call(this,t),this._$8r=I._$ur,this._$Cr=null,this._$hr=null}function tt(){At||(this.visible=!0,this._$g0=!1,this._$NL=null,this._$3S=null,this._$aS=null,tt._$42++)}function it(t){this._$VS=null,this._$e0=null,this._$e0=t}function et(t){At||(this.id=t)}function rt(){}function ot(){At||(this._$4S=null)}function nt(t,i){this.canvas=t,this.context=i,this.viewport=new Array(0,0,t.width,t.height),this._$6r=1,this._$xP=0,this._$3r=1,this._$uP=0,this._$Qo=-1,this.cacheImages={}}function st(){At||(this._$TT=null,this._$LT=null,this._$FS=null,this._$wL=null)}function _t(t){At||(this._$e0=null,this._$IP=null,this._$JS=!1,this._$AT=!0,this._$e0=t,this.totalScale=1,this._$7s=1,this.totalOpacity=1)}function at(){}function ht(){}function lt(t){At||(this._$ib=t)}function $t(){At||(W.prototype.constructor.call(this),this._$LP=-1,this._$d0=0,this._$Yo=0,this._$JP=null,this._$5P=null,this._$BP=null,this._$Eo=null,this._$Qi=null,this._$6s=$t._$ms,this.culling=!0,this.gl_cacheImage=null,this.instanceNo=$t._$42++)}function ut(t){Mt.prototype.constructor.call(this,t),this._$8r=W._$ur,this._$Cr=null,this._$hr=null}function pt(){At||(this.x=null,this.y=null)}function ft(t){At||(i.prototype.constructor.call(this),this.drawParamWebGL=new mt(t),this.drawParamWebGL.setGL(at.getGL(t)))}function ct(){At||(this.motions=null,this._$eb=!1,this.motions=new Array)}function dt(){this._$w0=null,this._$AT=!0,this._$9L=!1,this._$z2=-1,this._$bs=-1,this._$Do=-1,this._$sr=null,this._$sr=dt._$Gs++}function gt(){this.m=new Array(1,0,0,0,1,0,0,0,1)}function yt(t){At||et.prototype.constructor.call(this,t)}function mt(t){At||(E.prototype.constructor.call(this),this.textures=new Array,this.transform=null,this.gl=null,this.glno=t,this.firstDraw=!0,this.anisotropyExt=null,this.maxAnisotropy=0,this._$As=32,this._$Gr=!1,this._$NT=null,this._$vS=null,this._$no=null,this.vertShader=null,this.fragShader=null,this.vertShaderOff=null,this.fragShaderOff=null)}function Tt(t,i,e){return null==i&&(i=t.createBuffer()),t.bindBuffer(t.ARRAY_BUFFER,i),t.bufferData(t.ARRAY_BUFFER,e,t.DYNAMIC_DRAW),i}function Pt(t,i,e){return null==i&&(i=t.createBuffer()),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,i),t.bufferData(t.ELEMENT_ARRAY_BUFFER,e,t.DYNAMIC_DRAW),i}function St(t){At||(this._$P=new Int8Array(8),this._$R0=new DataView(this._$P.buffer),this._$3i=new Int8Array(1e3),this._$hL=0,this._$v0=0,this._$S2=0,this._$Ko=new Array,this._$T=t,this._$F=0)}function vt(){}function Lt(){}function Mt(t){At||(this._$e0=null,this._$IP=null,this._$Us=null,this._$7s=null,this._$IS=[!1],this._$VS=null,this._$AT=!0,this.baseOpacity=1,this.clipBufPre_clipContext=null,this._$e0=t)}function Et(){}var At=!0;i._$0s=1,i._$4s=2,i._$42=0,i._$62=function(t,e){try{if(e instanceof ArrayBuffer&&(e=new DataView(e)),!(e instanceof DataView))throw new lt(\"_$SS#loadModel(b) / b _$x be DataView or ArrayBuffer\");var r,o=new St(e),n=o._$ST(),s=o._$ST(),a=o._$ST();if(109!=n||111!=s||99!=a)throw new lt(\"_$gi _$C _$li , _$Q0 _$P0.\");if(r=o._$ST(),o._$gr(r),r>G._$T7){t._$NP|=i._$4s;throw new lt(\"_$gi _$C _$li , _$n0 _$_ version _$li ( SDK : \"+G._$T7+\" < _$f0 : \"+r+\" )@_$SS#loadModel()\\n\")}var h=o._$nP();if(r>=G._$s7){var l=o._$9T(),$=o._$9T();if(-30584!=l||-30584!=$)throw t._$NP|=i._$0s,new lt(\"_$gi _$C _$li , _$0 _$6 _$Ui.\")}t._$KS(h);var u=t.getModelContext();u.setDrawParam(t.getDrawParam()),u.init()}catch(t){_._$Rb(t)}},i.prototype._$KS=function(t){this._$MT=t},i.prototype.getModelImpl=function(){return null==this._$MT&&(this._$MT=new p,this._$MT._$zP()),this._$MT},i.prototype.getCanvasWidth=function(){return null==this._$MT?0:this._$MT.getCanvasWidth()},i.prototype.getCanvasHeight=function(){return null==this._$MT?0:this._$MT.getCanvasHeight()},i.prototype.getParamFloat=function(t){return\"number\"!=typeof t&&(t=this._$5S.getParamIndex(u.getID(t))),this._$5S.getParamFloat(t)},i.prototype.setParamFloat=function(t,i,e){\"number\"!=typeof t&&(t=this._$5S.getParamIndex(u.getID(t))),arguments.length<3&&(e=1),this._$5S.setParamFloat(t,this._$5S.getParamFloat(t)*(1-e)+i*e)},i.prototype.addToParamFloat=function(t,i,e){\"number\"!=typeof t&&(t=this._$5S.getParamIndex(u.getID(t))),arguments.length<3&&(e=1),this._$5S.setParamFloat(t,this._$5S.getParamFloat(t)+i*e)},i.prototype.multParamFloat=function(t,i,e){\"number\"!=typeof t&&(t=this._$5S.getParamIndex(u.getID(t))),arguments.length<3&&(e=1),this._$5S.setParamFloat(t,this._$5S.getParamFloat(t)*(1+(i-1)*e))},i.prototype.getParamIndex=function(t){return this._$5S.getParamIndex(u.getID(t))},i.prototype.loadParam=function(){this._$5S.loadParam()},i.prototype.saveParam=function(){this._$5S.saveParam()},i.prototype.init=function(){this._$5S.init()},i.prototype.update=function(){this._$5S.update()},i.prototype._$Rs=function(){return _._$li(\"_$60 _$PT _$Rs()\"),-1},i.prototype._$Ds=function(t){_._$li(\"_$60 _$PT _$SS#_$Ds() \\n\")},i.prototype._$K2=function(){},i.prototype.draw=function(){},i.prototype.getModelContext=function(){return this._$5S},i.prototype._$s2=function(){return this._$NP},i.prototype._$P7=function(t,i,e,r){var o=-1,n=0,s=this;if(0!=e)if(1==t.length){var _=t[0],a=0!=s.getParamFloat(_),h=i[0],l=s.getPartsOpacity(h),$=e/r;a?(l+=$)>1&&(l=1):(l-=$)<0&&(l=0),s.setPartsOpacity(h,l)}else{for(var u=0;u<t.length;u++){var _=t[u],p=0!=s.getParamFloat(_);if(p){if(o>=0)break;o=u;var h=i[u];n=s.getPartsOpacity(h),n+=e/r,n>1&&(n=1)}}o<0&&(console.log(\"No _$wi _$q0/ _$U default[%s]\",t[0]),o=0,n=1,s.loadParam(),s.setParamFloat(t[o],n),s.saveParam());for(var u=0;u<t.length;u++){var h=i[u];if(o==u)s.setPartsOpacity(h,n);else{var f,c=s.getPartsOpacity(h);f=n<.5?-.5*n/.5+1:.5*(1-n)/.5;var d=(1-f)*(1-n);d>.15&&(f=1-.15/(1-n)),c>f&&(c=f),s.setPartsOpacity(h,c)}}}else for(var u=0;u<t.length;u++){var _=t[u],h=i[u],p=0!=s.getParamFloat(_);s.setPartsOpacity(h,p?1:0)}},i.prototype.setPartsOpacity=function(t,i){\"number\"!=typeof t&&(t=this._$5S.getPartsDataIndex(l.getID(t))),this._$5S.setPartsOpacity(t,i)},i.prototype.getPartsDataIndex=function(t){return t instanceof l||(t=l.getID(t)),this._$5S.getPartsDataIndex(t)},i.prototype.getPartsOpacity=function(t){return\"number\"!=typeof t&&(t=this._$5S.getPartsDataIndex(l.getID(t))),t<0?0:this._$5S.getPartsOpacity(t)},i.prototype.getDrawParam=function(){},i.prototype.getDrawDataIndex=function(t){return this._$5S.getDrawDataIndex(b.getID(t))},i.prototype.getDrawData=function(t){return this._$5S.getDrawData(t)},i.prototype.getTransformedPoints=function(t){var i=this._$5S._$C2(t);return i instanceof ut?i.getTransformedPoints():null},i.prototype.getIndexArray=function(t){if(t<0||t>=this._$5S._$aS.length)return null;var i=this._$5S._$aS[t];return null!=i&&i.getType()==W._$wb&&i instanceof $t?i.getIndexArray():null},e.CHANNEL_COUNT=4,e.RENDER_TEXTURE_USE_MIPMAP=!1,e.NOT_USED_FRAME=-100,e.prototype._$L7=function(){if(this.tmpModelToViewMatrix&&(this.tmpModelToViewMatrix=null),this.tmpMatrix2&&(this.tmpMatrix2=null),this.tmpMatrixForMask&&(this.tmpMatrixForMask=null),this.tmpMatrixForDraw&&(this.tmpMatrixForDraw=null),this.tmpBoundsOnModel&&(this.tmpBoundsOnModel=null),this.CHANNEL_COLORS){for(var t=this.CHANNEL_COLORS.length-1;t>=0;--t)this.CHANNEL_COLORS.splice(t,1);this.CHANNEL_COLORS=[]}this.releaseShader()},e.prototype.releaseShader=function(){for(var t=at.frameBuffers.length,i=0;i<t;i++)this.gl.deleteFramebuffer(at.frameBuffers[i].framebuffer);at.frameBuffers=[],at.glContext=[]},e.prototype.init=function(t,i,e){for(var o=0;o<i.length;o++){var n=i[o].getClipIDList();if(null!=n){var s=this.findSameClip(n);null==s&&(s=new r(this,t,n),this.clipContextList.push(s));var _=i[o].getDrawDataID(),a=t.getDrawDataIndex(_);s.addClippedDrawData(_,a);e[o].clipBufPre_clipContext=s}}},e.prototype.getMaskRenderTexture=function(){var t=null;return t=this.dp_webgl.createFramebuffer(),at.frameBuffers[this.dp_webgl.glno]=t,this.dp_webgl.glno},e.prototype.setupClip=function(t,i){for(var e=0,r=0;r<this.clipContextList.length;r++){var o=this.clipContextList[r];this.calcClippedDrawTotalBounds(t,o),o.isUsing&&e++}if(e>0){var n=i.gl.getParameter(i.gl.FRAMEBUFFER_BINDING),s=new Array(4);s[0]=0,s[1]=0,s[2]=i.gl.canvas.width,s[3]=i.gl.canvas.height,i.gl.viewport(0,0,at.clippingMaskBufferSize,at.clippingMaskBufferSize),this.setupLayoutBounds(e),i.gl.bindFramebuffer(i.gl.FRAMEBUFFER,at.frameBuffers[this.curFrameNo].framebuffer),i.gl.clearColor(0,0,0,0),i.gl.clear(i.gl.COLOR_BUFFER_BIT);for(var r=0;r<this.clipContextList.length;r++){var o=this.clipContextList[r],_=o.allClippedDrawRect,a=(o.layoutChannelNo,o.layoutBounds);this.tmpBoundsOnModel._$jL(_),this.tmpBoundsOnModel.expand(.05*_.width,.05*_.height);var h=a.width/this.tmpBoundsOnModel.width,l=a.height/this.tmpBoundsOnModel.height;this.tmpMatrix2.identity(),this.tmpMatrix2.translate(-1,-1,0),this.tmpMatrix2.scale(2,2,1),this.tmpMatrix2.translate(a.x,a.y,0),this.tmpMatrix2.scale(h,l,1),this.tmpMatrix2.translate(-this.tmpBoundsOnModel.x,-this.tmpBoundsOnModel.y,0),this.tmpMatrixForMask.setMatrix(this.tmpMatrix2.m),this.tmpMatrix2.identity(),this.tmpMatrix2.translate(a.x,a.y,0),this.tmpMatrix2.scale(h,l,1),this.tmpMatrix2.translate(-this.tmpBoundsOnModel.x,-this.tmpBoundsOnModel.y,0),this.tmpMatrixForDraw.setMatrix(this.tmpMatrix2.m);for(var $=this.tmpMatrixForMask.getArray(),u=0;u<16;u++)o.matrixForMask[u]=$[u];for(var p=this.tmpMatrixForDraw.getArray(),u=0;u<16;u++)o.matrixForDraw[u]=p[u];for(var f=o.clippingMaskDrawIndexList.length,c=0;c<f;c++){var d=o.clippingMaskDrawIndexList[c],g=t.getDrawData(d),y=t._$C2(d);i.setClipBufPre_clipContextForMask(o),g.draw(i,t,y)}}i.gl.bindFramebuffer(i.gl.FRAMEBUFFER,n),i.setClipBufPre_clipContextForMask(null),i.gl.viewport(s[0],s[1],s[2],s[3])}},e.prototype.getColorBuffer=function(){return this.colorBuffer},e.prototype.findSameClip=function(t){for(var i=0;i<this.clipContextList.length;i++){var e=this.clipContextList[i],r=e.clipIDList.length;if(r==t.length){for(var o=0,n=0;n<r;n++)for(var s=e.clipIDList[n],_=0;_<r;_++)if(t[_]==s){o++;break}if(o==r)return e}}return null},e.prototype.calcClippedDrawTotalBounds=function(t,i){for(var e=t._$Ri.getModelImpl().getCanvasWidth(),r=t._$Ri.getModelImpl().getCanvasHeight(),o=e>r?e:r,n=o,s=o,_=0,a=0,h=i.clippedDrawContextList.length,l=0;l<h;l++){var $=i.clippedDrawContextList[l],u=$.drawDataIndex,p=t._$C2(u);if(p._$yo()){for(var f=p.getTransformedPoints(),c=f.length,d=[],g=[],y=0,m=U._$i2;m<c;m+=U._$No)d[y]=f[m],g[y]=f[m+1],y++;var T=Math.min.apply(null,d),P=Math.min.apply(null,g),S=Math.max.apply(null,d),v=Math.max.apply(null,g);T<n&&(n=T),P<s&&(s=P),S>_&&(_=S),v>a&&(a=v)}}if(n==o)i.allClippedDrawRect.x=0,i.allClippedDrawRect.y=0,i.allClippedDrawRect.width=0,i.allClippedDrawRect.height=0,i.isUsing=!1;else{var L=_-n,M=a-s;i.allClippedDrawRect.x=n,i.allClippedDrawRect.y=s,i.allClippedDrawRect.width=L,i.allClippedDrawRect.height=M,i.isUsing=!0}},e.prototype.setupLayoutBounds=function(t){var i=t/e.CHANNEL_COUNT,r=t%e.CHANNEL_COUNT;i=~~i,r=~~r;for(var o=0,n=0;n<e.CHANNEL_COUNT;n++){var s=i+(n<r?1:0);if(0==s);else if(1==s){var a=this.clipContextList[o++];a.layoutChannelNo=n,a.layoutBounds.x=0,a.layoutBounds.y=0,a.layoutBounds.width=1,a.layoutBounds.height=1}else if(2==s)for(var h=0;h<s;h++){var l=h%2,$=0;l=~~l;var a=this.clipContextList[o++];a.layoutChannelNo=n,a.layoutBounds.x=.5*l,a.layoutBounds.y=0,a.layoutBounds.width=.5,a.layoutBounds.height=1}else if(s<=4)for(var h=0;h<s;h++){var l=h%2,$=h/2;l=~~l,$=~~$;var a=this.clipContextList[o++];a.layoutChannelNo=n,a.layoutBounds.x=.5*l,a.layoutBounds.y=.5*$,a.layoutBounds.width=.5,a.layoutBounds.height=.5}else if(s<=9)for(var h=0;h<s;h++){var l=h%3,$=h/3;l=~~l,$=~~$;var a=this.clipContextList[o++];a.layoutChannelNo=n,a.layoutBounds.x=l/3,a.layoutBounds.y=$/3,a.layoutBounds.width=1/3,a.layoutBounds.height=1/3}else _._$li(\"_$6 _$0P mask count : %d\",s)}},r.prototype.addClippedDrawData=function(t,i){var e=new o(t,i);this.clippedDrawContextList.push(e)},s._$JT=function(t,i,e){var r=t/i,o=e/i,n=o,s=1-(1-o)*(1-o),_=1-(1-n)*(1-n),a=1/3*(1-o)*s+(n*(2/3)+1/3*(1-n))*(1-s),h=(n+2/3*(1-n))*_+(o*(1/3)+2/3*(1-o))*(1-_),l=1-3*h+3*a-0,$=3*h-6*a+0,u=3*a-0;if(r<=0)return 0;if(r>=1)return 1;var p=r,f=p*p;return l*(p*f)+$*f+u*p+0},s.prototype._$a0=function(){},s.prototype.setFadeIn=function(t){this._$dP=t},s.prototype.setFadeOut=function(t){this._$eo=t},s.prototype._$pT=function(t){this._$V0=t},s.prototype.getFadeOut=function(){return this._$eo},s.prototype._$4T=function(){return this._$eo},s.prototype._$mT=function(){return this._$V0},s.prototype.getDurationMSec=function(){return-1},s.prototype.getLoopDurationMSec=function(){return-1},s.prototype.updateParam=function(t,i){if(i._$AT&&!i._$9L){var e=w.getUserTimeMSec();if(i._$z2<0){i._$z2=e,i._$bs=e;var r=this.getDurationMSec();i._$Do<0&&(i._$Do=r<=0?-1:i._$z2+r)}var o=this._$V0;o=o*(0==this._$dP?1:ht._$r2((e-i._$bs)/this._$dP))*(0==this._$eo||i._$Do<0?1:ht._$r2((i._$Do-e)/this._$eo)),0<=o&&o<=1||console.log(\"### assert!! ### \"),this.updateParamExe(t,e,o,i),i._$Do>0&&i._$Do<e&&(i._$9L=!0)}},s.prototype.updateParamExe=function(t,i,e,r){},_._$8s=0,_._$fT=new Object,_.start=function(t){var i=_._$fT[t];null==i&&(i=new a,i._$r=t,_._$fT[t]=i),i._$0S=w.getSystemTimeMSec()},_.dump=function(t){var i=_._$fT[t];if(null!=i){var e=w.getSystemTimeMSec(),r=e-i._$0S;return console.log(t+\" : \"+r+\"ms\"),r}return-1},_.end=function(t){var i=_._$fT[t];if(null!=i){return w.getSystemTimeMSec()-i._$0S}return-1},_._$li=function(t,i){console.log(\"_$li : \"+t+\"\\n\",i)},_._$Ji=function(t,i){console.log(t,i)},_._$dL=function(t,i){console.log(t,i),console.log(\"\\n\")},_._$KL=function(t,i){for(var e=0;e<i;e++)e%16==0&&e>0?console.log(\"\\n\"):e%8==0&&e>0&&console.log(\"  \"),console.log(\"%02X \",255&t[e]);console.log(\"\\n\")},_._$nr=function(t,i,e){console.log(\"%s\\n\",t);for(var r=i.length,o=0;o<r;++o)console.log(\"%5d\",i[o]),console.log(\"%s\\n\",e),console.log(\",\");console.log(\"\\n\")},_._$Rb=function(t){console.log(\"dump exception : \"+t),console.log(\"stack :: \"+t.stack)},h.prototype._$8P=function(){return.5*(this.x+this.x+this.width)},h.prototype._$6P=function(){return.5*(this.y+this.y+this.height)},h.prototype._$EL=function(){return this.x+this.width},h.prototype._$5T=function(){return this.y+this.height},h.prototype._$jL=function(t,i,e,r){this.x=t,this.y=i,this.width=e,this.height=r},h.prototype._$jL=function(t){this.x=t.x,this.y=t.y,this.width=t.width,this.height=t.height},l.prototype=new et,l._$tP=new Object,l._$27=function(){l._$tP.clear()},l.getID=function(t){var i=l._$tP[t];return null==i&&(i=new l(t),l._$tP[t]=i),i},l.prototype._$3s=function(){return new l},u.prototype=new et,u._$tP=new Object,u._$27=function(){u._$tP.clear()},u.getID=function(t){var i=u._$tP[t];return null==i&&(i=new u(t),u._$tP[t]=i),i},u.prototype._$3s=function(){return new u},p._$42=0,p.prototype._$zP=function(){null==this._$vo&&(this._$vo=new ot),null==this._$F2&&(this._$F2=new Array)},p.prototype.getCanvasWidth=function(){return this._$ao},p.prototype.getCanvasHeight=function(){return this._$1S},p.prototype._$F0=function(t){this._$vo=t._$nP(),this._$F2=t._$nP(),this._$ao=t._$6L(),this._$1S=t._$6L()},p.prototype._$6S=function(t){this._$F2.push(t)},p.prototype._$Xr=function(){return this._$F2},p.prototype._$E2=function(){return this._$vo},f.prototype.setup=function(t,i,e){this._$ks=this._$Yb(),this.p2._$xT(),3==arguments.length&&(this._$Fo=t,this._$L2=i,this.p1._$p=e,this.p2._$p=e,this.p2.y=t,this.setup())},f.prototype.getPhysicsPoint1=function(){return this.p1},f.prototype.getPhysicsPoint2=function(){return this.p2},f.prototype._$qr=function(){return this._$Db},f.prototype._$pr=function(t){this._$Db=t},f.prototype._$5r=function(){return this._$M2},f.prototype._$Cs=function(){return this._$9b},f.prototype._$Yb=function(){return-180*Math.atan2(this.p1.x-this.p2.x,-(this.p1.y-this.p2.y))/Math.PI},f.prototype.addSrcParam=function(t,i,e,r){var o=new g(t,i,e,r);this._$lL.push(o)},f.prototype.addTargetParam=function(t,i,e,r){var o=new T(t,i,e,r);this._$qP.push(o)},f.prototype.update=function(t,i){if(0==this._$iP)return this._$iP=this._$iT=i,void(this._$Fo=Math.sqrt((this.p1.x-this.p2.x)*(this.p1.x-this.p2.x)+(this.p1.y-this.p2.y)*(this.p1.y-this.p2.y)));var e=(i-this._$iT)/1e3;if(0!=e){for(var r=this._$lL.length-1;r>=0;--r){this._$lL[r]._$oP(t,this)}this._$oo(t,e),this._$M2=this._$Yb(),this._$9b=(this._$M2-this._$ks)/e,this._$ks=this._$M2}for(var r=this._$qP.length-1;r>=0;--r){this._$qP[r]._$YS(t,this)}this._$iT=i},f.prototype._$oo=function(t,i){i<.033&&(i=.033);var e=1/i;this.p1.vx=(this.p1.x-this.p1._$s0)*e,this.p1.vy=(this.p1.y-this.p1._$70)*e,this.p1.ax=(this.p1.vx-this.p1._$7L)*e,this.p1.ay=(this.p1.vy-this.p1._$HL)*e,this.p1.fx=this.p1.ax*this.p1._$p,this.p1.fy=this.p1.ay*this.p1._$p,this.p1._$xT();var r,o,n=-Math.atan2(this.p1.y-this.p2.y,this.p1.x-this.p2.x),s=Math.cos(n),_=Math.sin(n),a=9.8*this.p2._$p,h=this._$Db*Lt._$bS,l=a*Math.cos(n-h);r=l*_,o=l*s;var $=-this.p1.fx*_*_,u=-this.p1.fy*_*s,p=-this.p2.vx*this._$L2,f=-this.p2.vy*this._$L2;this.p2.fx=r+$+p,this.p2.fy=o+u+f,this.p2.ax=this.p2.fx/this.p2._$p,this.p2.ay=this.p2.fy/this.p2._$p,this.p2.vx+=this.p2.ax*i,this.p2.vy+=this.p2.ay*i,this.p2.x+=this.p2.vx*i,this.p2.y+=this.p2.vy*i;var c=Math.sqrt((this.p1.x-this.p2.x)*(this.p1.x-this.p2.x)+(this.p1.y-this.p2.y)*(this.p1.y-this.p2.y));this.p2.x=this.p1.x+this._$Fo*(this.p2.x-this.p1.x)/c,this.p2.y=this.p1.y+this._$Fo*(this.p2.y-this.p1.y)/c,this.p2.vx=(this.p2.x-this.p2._$s0)*e,this.p2.vy=(this.p2.y-this.p2._$70)*e,this.p2._$xT()},c.prototype._$xT=function(){this._$s0=this.x,this._$70=this.y,this._$7L=this.vx,this._$HL=this.vy},d.prototype._$oP=function(t,i){},g.prototype=new d,g.prototype._$oP=function(t,i){var e=this.scale*t.getParamFloat(this._$wL),r=i.getPhysicsPoint1();switch(this._$tL){default:case f.Src.SRC_TO_X:r.x=r.x+(e-r.x)*this._$V0;break;case f.Src.SRC_TO_Y:r.y=r.y+(e-r.y)*this._$V0;break;case f.Src.SRC_TO_G_ANGLE:var o=i._$qr();o+=(e-o)*this._$V0,i._$pr(o)}},y.prototype._$YS=function(t,i){},T.prototype=new y,T.prototype._$YS=function(t,i){switch(this._$YP){default:case f.Target.TARGET_FROM_ANGLE:t.setParamFloat(this._$wL,this.scale*i._$5r(),this._$V0);break;case f.Target.TARGET_FROM_ANGLE_V:t.setParamFloat(this._$wL,this.scale*i._$Cs(),this._$V0)}},f.Src=function(){},f.Src.SRC_TO_X=\"SRC_TO_X\",f.Src.SRC_TO_Y=\"SRC_TO_Y\",f.Src.SRC_TO_G_ANGLE=\"SRC_TO_G_ANGLE\",f.Target=function(){},f.Target.TARGET_FROM_ANGLE=\"TARGET_FROM_ANGLE\",f.Target.TARGET_FROM_ANGLE_V=\"TARGET_FROM_ANGLE_V\",P.prototype.init=function(t){this._$fL=t._$fL,this._$gL=t._$gL,this._$B0=t._$B0,this._$z0=t._$z0,this._$qT=t._$qT,this.reflectX=t.reflectX,this.reflectY=t.reflectY},P.prototype._$F0=function(t){this._$fL=t._$_T(),this._$gL=t._$_T(),this._$B0=t._$_T(),this._$z0=t._$_T(),this._$qT=t._$_T(),t.getFormatVersion()>=G.LIVE2D_FORMAT_VERSION_V2_10_SDK2&&(this.reflectX=t._$po(),this.reflectY=t._$po())},P.prototype._$e=function(){};var It=function(){};It._$ni=function(t,i,e,r,o,n,s,_,a){var h=s*n-_*o;if(0==h)return null;var l,$=((t-e)*n-(i-r)*o)/h;return l=0!=o?(t-e-$*s)/o:(i-r-$*_)/n,isNaN(l)&&(l=(t-e-$*s)/o,isNaN(l)&&(l=(i-r-$*_)/n),isNaN(l)&&(console.log(\"a is NaN @UtVector#_$ni() \"),console.log(\"v1x : \"+o),console.log(\"v1x != 0 ? \"+(0!=o)))),null==a?new Array(l,$):(a[0]=l,a[1]=$,a)},S.prototype._$8P=function(){return this.x+.5*this.width},S.prototype._$6P=function(){return this.y+.5*this.height},S.prototype._$EL=function(){return this.x+this.width},S.prototype._$5T=function(){return this.y+this.height},S.prototype._$jL=function(t,i,e,r){this.x=t,this.y=i,this.width=e,this.height=r},S.prototype._$jL=function(t){this.x=t.x,this.y=t.y,this.width=t.width,this.height=t.height},S.prototype.contains=function(t,i){return this.x<=this.x&&this.y<=this.y&&this.x<=this.x+this.width&&this.y<=this.y+this.height},S.prototype.expand=function(t,i){this.x-=t,this.y-=i,this.width+=2*t,this.height+=2*i},v._$Z2=function(t,i,e,r){var o=i._$Q2(t,e),n=t._$vs(),s=t._$Tr();if(i._$zr(n,s,o),o<=0)return r[n[0]];if(1==o){var _=r[n[0]],a=r[n[1]],h=s[0];return _+(a-_)*h|0}if(2==o){var _=r[n[0]],a=r[n[1]],l=r[n[2]],$=r[n[3]],h=s[0],u=s[1],p=_+(a-_)*h|0,f=l+($-l)*h|0;return p+(f-p)*u|0}if(3==o){var c=r[n[0]],d=r[n[1]],g=r[n[2]],y=r[n[3]],m=r[n[4]],T=r[n[5]],P=r[n[6]],S=r[n[7]],h=s[0],u=s[1],v=s[2],_=c+(d-c)*h|0,a=g+(y-g)*h|0,l=m+(T-m)*h|0,$=P+(S-P)*h|0,p=_+(a-_)*u|0,f=l+($-l)*u|0;return p+(f-p)*v|0}if(4==o){var L=r[n[0]],M=r[n[1]],E=r[n[2]],A=r[n[3]],I=r[n[4]],w=r[n[5]],x=r[n[6]],O=r[n[7]],D=r[n[8]],R=r[n[9]],b=r[n[10]],F=r[n[11]],C=r[n[12]],N=r[n[13]],B=r[n[14]],U=r[n[15]],h=s[0],u=s[1],v=s[2],G=s[3],c=L+(M-L)*h|0,d=E+(A-E)*h|0,g=I+(w-I)*h|0,y=x+(O-x)*h|0,m=D+(R-D)*h|0,T=b+(F-b)*h|0,P=C+(N-C)*h|0,S=B+(U-B)*h|0,_=c+(d-c)*u|0,a=g+(y-g)*u|0,l=m+(T-m)*u|0,$=P+(S-P)*u|0,p=_+(a-_)*v|0,f=l+($-l)*v|0;return p+(f-p)*G|0}for(var Y=1<<o,k=new Float32Array(Y),V=0;V<Y;V++){for(var X=V,z=1,H=0;H<o;H++)z*=X%2==0?1-s[H]:s[H],X/=2;k[V]=z}for(var W=new Float32Array(Y),j=0;j<Y;j++)W[j]=r[n[j]];for(var q=0,j=0;j<Y;j++)q+=k[j]*W[j];return q+.5|0},v._$br=function(t,i,e,r){var o=i._$Q2(t,e),n=t._$vs(),s=t._$Tr();if(i._$zr(n,s,o),o<=0)return r[n[0]];if(1==o){var _=r[n[0]],a=r[n[1]],h=s[0];return _+(a-_)*h}if(2==o){var _=r[n[0]],a=r[n[1]],l=r[n[2]],$=r[n[3]],h=s[0],u=s[1];return(1-u)*(_+(a-_)*h)+u*(l+($-l)*h)}if(3==o){var p=r[n[0]],f=r[n[1]],c=r[n[2]],d=r[n[3]],g=r[n[4]],y=r[n[5]],m=r[n[6]],T=r[n[7]],h=s[0],u=s[1],P=s[2];return(1-P)*((1-u)*(p+(f-p)*h)+u*(c+(d-c)*h))+P*((1-u)*(g+(y-g)*h)+u*(m+(T-m)*h))}if(4==o){var S=r[n[0]],v=r[n[1]],L=r[n[2]],M=r[n[3]],E=r[n[4]],A=r[n[5]],I=r[n[6]],w=r[n[7]],x=r[n[8]],O=r[n[9]],D=r[n[10]],R=r[n[11]],b=r[n[12]],F=r[n[13]],C=r[n[14]],N=r[n[15]],h=s[0],u=s[1],P=s[2],B=s[3];return(1-B)*((1-P)*((1-u)*(S+(v-S)*h)+u*(L+(M-L)*h))+P*((1-u)*(E+(A-E)*h)+u*(I+(w-I)*h)))+B*((1-P)*((1-u)*(x+(O-x)*h)+u*(D+(R-D)*h))+P*((1-u)*(b+(F-b)*h)+u*(C+(N-C)*h)))}for(var U=1<<o,G=new Float32Array(U),Y=0;Y<U;Y++){for(var k=Y,V=1,X=0;X<o;X++)V*=k%2==0?1-s[X]:s[X],k/=2;G[Y]=V}for(var z=new Float32Array(U),H=0;H<U;H++)z[H]=r[n[H]];for(var W=0,H=0;H<U;H++)W+=G[H]*z[H];return W},v._$Vr=function(t,i,e,r,o,n,s,_){var a=i._$Q2(t,e),h=t._$vs(),l=t._$Tr();i._$zr(h,l,a);var $=2*r,u=s;if(a<=0){var p=h[0],f=o[p];if(2==_&&0==s)w._$jT(f,0,n,0,$);else for(var c=0;c<$;)n[u]=f[c++],n[u+1]=f[c++],u+=_}else if(1==a)for(var f=o[h[0]],d=o[h[1]],g=l[0],y=1-g,c=0;c<$;)n[u]=f[c]*y+d[c]*g,++c,n[u+1]=f[c]*y+d[c]*g,++c,u+=_;else if(2==a)for(var f=o[h[0]],d=o[h[1]],m=o[h[2]],T=o[h[3]],g=l[0],P=l[1],y=1-g,S=1-P,v=S*y,L=S*g,M=P*y,E=P*g,c=0;c<$;)n[u]=v*f[c]+L*d[c]+M*m[c]+E*T[c],++c,n[u+1]=v*f[c]+L*d[c]+M*m[c]+E*T[c],++c,u+=_;else if(3==a)for(var A=o[h[0]],I=o[h[1]],x=o[h[2]],O=o[h[3]],D=o[h[4]],R=o[h[5]],b=o[h[6]],F=o[h[7]],g=l[0],P=l[1],C=l[2],y=1-g,S=1-P,N=1-C,B=N*S*y,U=N*S*g,G=N*P*y,Y=N*P*g,k=C*S*y,V=C*S*g,X=C*P*y,z=C*P*g,c=0;c<$;)n[u]=B*A[c]+U*I[c]+G*x[c]+Y*O[c]+k*D[c]+V*R[c]+X*b[c]+z*F[c],++c,n[u+1]=B*A[c]+U*I[c]+G*x[c]+Y*O[c]+k*D[c]+V*R[c]+X*b[c]+z*F[c],++c,u+=_;else if(4==a)for(var H=o[h[0]],W=o[h[1]],j=o[h[2]],q=o[h[3]],J=o[h[4]],Q=o[h[5]],Z=o[h[6]],K=o[h[7]],tt=o[h[8]],it=o[h[9]],et=o[h[10]],rt=o[h[11]],ot=o[h[12]],nt=o[h[13]],st=o[h[14]],_t=o[h[15]],g=l[0],P=l[1],C=l[2],at=l[3],y=1-g,S=1-P,N=1-C,ht=1-at,lt=ht*N*S*y,$t=ht*N*S*g,ut=ht*N*P*y,pt=ht*N*P*g,ft=ht*C*S*y,ct=ht*C*S*g,dt=ht*C*P*y,gt=ht*C*P*g,yt=at*N*S*y,mt=at*N*S*g,Tt=at*N*P*y,Pt=at*N*P*g,St=at*C*S*y,vt=at*C*S*g,Lt=at*C*P*y,Mt=at*C*P*g,c=0;c<$;)n[u]=lt*H[c]+$t*W[c]+ut*j[c]+pt*q[c]+ft*J[c]+ct*Q[c]+dt*Z[c]+gt*K[c]+yt*tt[c]+mt*it[c]+Tt*et[c]+Pt*rt[c]+St*ot[c]+vt*nt[c]+Lt*st[c]+Mt*_t[c],++c,n[u+1]=lt*H[c]+$t*W[c]+ut*j[c]+pt*q[c]+ft*J[c]+ct*Q[c]+dt*Z[c]+gt*K[c]+yt*tt[c]+mt*it[c]+Tt*et[c]+Pt*rt[c]+St*ot[c]+vt*nt[c]+Lt*st[c]+Mt*_t[c],++c,u+=_;else{for(var Et=1<<a,At=new Float32Array(Et),It=0;It<Et;It++){for(var wt=It,xt=1,Ot=0;Ot<a;Ot++)xt*=wt%2==0?1-l[Ot]:l[Ot],wt/=2;At[It]=xt}for(var Dt=new Float32Array(Et),Rt=0;Rt<Et;Rt++)Dt[Rt]=o[h[Rt]];for(var c=0;c<$;){for(var bt=0,Ft=0,Ct=c+1,Rt=0;Rt<Et;Rt++)bt+=At[Rt]*Dt[Rt][c],Ft+=At[Rt]*Dt[Rt][Ct];c+=2,n[u]=bt,n[u+1]=Ft,u+=_}}},L.prototype._$HT=function(t,i){this.x=t,this.y=i},L.prototype._$HT=function(t){this.x=t.x,this.y=t.y},M._$ur=-2,M._$ES=500,M._$wb=2,M._$8S=3,M._$52=M._$ES,M._$R2=M._$ES,M._$or=function(){return M._$52},M._$Pr=function(){return M._$R2},M.prototype.convertClipIDForV2_11=function(t){var i=[];return null==t?null:0==t.length?null:/,/.test(t)?i=t.id.split(\",\"):(i.push(t.id),i)},M.prototype._$F0=function(t){this._$gP=t._$nP(),this._$dr=t._$nP(),this._$GS=t._$nP(),this._$qb=t._$6L(),this._$Lb=t._$cS(),this._$mS=t._$Tb(),t.getFormatVersion()>=G._$T7?(this.clipID=t._$nP(),this.clipIDList=this.convertClipIDForV2_11(this.clipID)):this.clipIDList=[],this._$MS(this._$Lb)},M.prototype.getClipIDList=function(){return this.clipIDList},M.prototype.init=function(t){},M.prototype._$Nr=function(t,i){if(i._$IS[0]=!1,i._$Us=v._$Z2(t,this._$GS,i._$IS,this._$Lb),at._$Zs);else if(i._$IS[0])return;i._$7s=v._$br(t,this._$GS,i._$IS,this._$mS)},M.prototype._$2b=function(t,i){},M.prototype.getDrawDataID=function(){return this._$gP},M.prototype._$j2=function(t){this._$gP=t},M.prototype.getOpacity=function(t,i){return i._$7s},M.prototype._$zS=function(t,i){return i._$Us},M.prototype._$MS=function(t){for(var i=t.length-1;i>=0;--i){var e=t[i];e<M._$52?M._$52=e:e>M._$R2&&(M._$R2=e)}},M.prototype.getTargetBaseDataID=function(){return this._$dr},M.prototype._$gs=function(t){this._$dr=t},M.prototype._$32=function(){return null!=this._$dr&&this._$dr!=yt._$2o()},M.prototype.preDraw=function(t,i,e){},M.prototype.draw=function(t,i,e){},M.prototype.getType=function(){},M.prototype._$B2=function(t,i,e){},E._$ps=32,E.CLIPPING_PROCESS_NONE=0,E.CLIPPING_PROCESS_OVERWRITE_ALPHA=1,E.CLIPPING_PROCESS_MULTIPLY_ALPHA=2,E.CLIPPING_PROCESS_DRAW=3,E.CLIPPING_PROCESS_CLEAR_ALPHA=4,E.prototype.setChannelFlagAsColor=function(t,i){this.CHANNEL_COLORS[t]=i},E.prototype.getChannelFlagAsColor=function(t){return this.CHANNEL_COLORS[t]},E.prototype._$ZT=function(){},E.prototype._$Uo=function(t,i,e,r,o,n,s){},E.prototype._$Rs=function(){return-1},E.prototype._$Ds=function(t){},E.prototype.setBaseColor=function(t,i,e,r){t<0?t=0:t>1&&(t=1),i<0?i=0:i>1&&(i=1),e<0?e=0:e>1&&(e=1),r<0?r=0:r>1&&(r=1),this._$lT=t,this._$C0=i,this._$tT=e,this._$WL=r},E.prototype._$WP=function(t){this.culling=t},E.prototype.setMatrix=function(t){for(var i=0;i<16;i++)this.matrix4x4[i]=t[i]},E.prototype._$IT=function(){return this.matrix4x4},E.prototype.setPremultipliedAlpha=function(t){this.premultipliedAlpha=t},E.prototype.isPremultipliedAlpha=function(){return this.premultipliedAlpha},E.prototype.setAnisotropy=function(t){this.anisotropy=t},E.prototype.getAnisotropy=function(){return this.anisotropy},E.prototype.getClippingProcess=function(){return this.clippingProcess},E.prototype.setClippingProcess=function(t){this.clippingProcess=t},E.prototype.setClipBufPre_clipContextForMask=function(t){this.clipBufPre_clipContextMask=t},E.prototype.getClipBufPre_clipContextMask=function(){return this.clipBufPre_clipContextMask},E.prototype.setClipBufPre_clipContextForDraw=function(t){this.clipBufPre_clipContextDraw=t},E.prototype.getClipBufPre_clipContextDraw=function(){return this.clipBufPre_clipContextDraw},I._$ur=-2,I._$c2=1,I._$_b=2,I.prototype._$F0=function(t){this._$kP=t._$nP(),this._$dr=t._$nP()},I.prototype.readV2_opacity=function(t){t.getFormatVersion()>=G.LIVE2D_FORMAT_VERSION_V2_10_SDK2&&(this._$mS=t._$Tb())},I.prototype.init=function(t){},I.prototype._$Nr=function(t,i){},I.prototype.interpolateOpacity=function(t,i,e,r){null==this._$mS?e.setInterpolatedOpacity(1):e.setInterpolatedOpacity(v._$br(t,i,r,this._$mS))},I.prototype._$2b=function(t,i){},I.prototype._$nb=function(t,i,e,r,o,n,s){},I.prototype.getType=function(){},I.prototype._$gs=function(t){this._$dr=t},I.prototype._$a2=function(t){this._$kP=t},I.prototype.getTargetBaseDataID=function(){return this._$dr},I.prototype.getBaseDataID=function(){return this._$kP},I.prototype._$32=function(){return null!=this._$dr&&this._$dr!=yt._$2o()},w._$W2=0,w._$CS=w._$W2,w._$Mo=function(){return!0},w._$XP=function(t){try{for(var i=getTimeMSec();getTimeMSec()-i<t;);}catch(t){t._$Rb()}},w.getUserTimeMSec=function(){return w._$CS==w._$W2?w.getSystemTimeMSec():w._$CS},w.setUserTimeMSec=function(t){w._$CS=t},w.updateUserTimeMSec=function(){return w._$CS=w.getSystemTimeMSec()},w.getTimeMSec=function(){return(new Date).getTime()},w.getSystemTimeMSec=function(){return(new Date).getTime()},w._$Q=function(t){},w._$jT=function(t,i,e,r,o){for(var n=0;n<o;n++)e[r+n]=t[i+n]},x._$ds=-2,x.prototype._$F0=function(t){this._$wL=t._$nP(),this._$VP=t._$6L(),this._$GP=t._$nP()},x.prototype.getParamIndex=function(t){return this._$2r!=t&&(this._$8o=x._$ds),this._$8o},x.prototype._$Pb=function(t,i){this._$8o=t,this._$2r=i},x.prototype.getParamID=function(){return this._$wL},x.prototype._$yP=function(t){this._$wL=t},x.prototype._$N2=function(){return this._$VP},x.prototype._$d2=function(){return this._$GP},x.prototype._$t2=function(t,i){this._$VP=t,this._$GP=i},x.prototype._$Lr=function(){return this._$O2},x.prototype._$wr=function(t){this._$O2=t},x.prototype._$SL=function(){return this._$ri},x.prototype._$AL=function(t){this._$ri=t},O.startsWith=function(t,i,e){var r=i+e.length;if(r>=t.length)return!1;for(var o=i;o<r;o++)if(O.getChar(t,o)!=e.charAt(o-i))return!1;return!0},O.getChar=function(t,i){return String.fromCharCode(t.getUint8(i))},O.createString=function(t,i,e){for(var r=new ArrayBuffer(2*e),o=new Uint16Array(r),n=0;n<e;n++)o[n]=t.getUint8(i+n);return String.fromCharCode.apply(null,o)},O._$LS=function(t,i,e,r){t instanceof ArrayBuffer&&(t=new DataView(t));var o=e,n=!1,s=!1,_=0,a=O.getChar(t,o);\"-\"==a&&(n=!0,o++);for(var h=!1;o<i;o++){switch(a=O.getChar(t,o)){case\"0\":_*=10;break;case\"1\":_=10*_+1;break;case\"2\":_=10*_+2;break;case\"3\":_=10*_+3;break;case\"4\":_=10*_+4;break;case\"5\":_=10*_+5;break;case\"6\":_=10*_+6;break;case\"7\":_=10*_+7;break;case\"8\":_=10*_+8;break;case\"9\":_=10*_+9;break;case\".\":s=!0,o++,h=!0;break;default:h=!0}if(h)break}if(s)for(var l=.1,$=!1;o<i;o++){switch(a=O.getChar(t,o)){case\"0\":break;case\"1\":_+=1*l;break;case\"2\":_+=2*l;break;case\"3\":_+=3*l;break;case\"4\":_+=4*l;break;case\"5\":_+=5*l;break;case\"6\":_+=6*l;break;case\"7\":_+=7*l;break;case\"8\":_+=8*l;break;case\"9\":_+=9*l;break;default:$=!0}if(l*=.1,$)break}return n&&(_=-_),r[0]=o,_},D.prototype._$zP=function(){this._$Ob=new Array},D.prototype._$F0=function(t){this._$Ob=t._$nP()},D.prototype._$Ur=function(t){if(t._$WS())return!0;for(var i=t._$v2(),e=this._$Ob.length-1;e>=0;--e){var r=this._$Ob[e].getParamIndex(i);if(r==x._$ds&&(r=t.getParamIndex(this._$Ob[e].getParamID())),t._$Xb(r))return!0}return!1},D.prototype._$Q2=function(t,i){for(var e,r,o=this._$Ob.length,n=t._$v2(),s=0,_=0;_<o;_++){var a=this._$Ob[_];if(e=a.getParamIndex(n),e==x._$ds&&(e=t.getParamIndex(a.getParamID()),a._$Pb(e,n)),e<0)throw new Exception(\"err 23242 : \"+a.getParamID());var h=e<0?0:t.getParamFloat(e);r=a._$N2();var l,$,u=a._$d2(),p=-1,f=0;if(r<1);else if(1==r)l=u[0],l-U._$J<h&&h<l+U._$J?(p=0,f=0):(p=0,i[0]=!0);else if(l=u[0],h<l-U._$J)p=0,i[0]=!0;else if(h<l+U._$J)p=0;else{for(var c=!1,d=1;d<r;++d){if($=u[d],h<$+U._$J){$-U._$J<h?p=d:(p=d-1,f=(h-l)/($-l),s++),c=!0;break}l=$}c||(p=r-1,f=0,i[0]=!0)}a._$wr(p),a._$AL(f)}return s},D.prototype._$zr=function(t,i,e){var r=1<<e;r+1>U._$Qb&&console.log(\"err 23245\\n\");for(var o=this._$Ob.length,n=1,s=1,_=0,a=0;a<r;++a)t[a]=0;for(var h=0;h<o;++h){var l=this._$Ob[h];if(0==l._$SL()){var $=l._$Lr()*n;if($<0&&at._$3T)throw new Exception(\"err 23246\");for(var a=0;a<r;++a)t[a]+=$}else{for(var $=n*l._$Lr(),u=n*(l._$Lr()+1),a=0;a<r;++a)t[a]+=(a/s|0)%2==0?$:u;i[_++]=l._$SL(),s*=2}n*=l._$N2()}t[r]=65535,i[_]=-1},D.prototype._$h2=function(t,i,e){for(var r=new Float32Array(i),o=0;o<i;++o)r[o]=e[o];var n=new x;n._$yP(t),n._$t2(i,r),this._$Ob.push(n)},D.prototype._$J2=function(t){for(var i=t,e=this._$Ob.length,r=0;r<e;++r){var o=this._$Ob[r],n=o._$N2(),s=i%o._$N2(),_=o._$d2()[s];console.log(\"%s[%d]=%7.2f / \",o.getParamID(),s,_),i/=n}console.log(\"\\n\")},D.prototype.getParamCount=function(){return this._$Ob.length},D.prototype._$zs=function(){return this._$Ob},R.prototype.identity=function(){for(var t=0;t<16;t++)this.m[t]=t%5==0?1:0},R.prototype.getArray=function(){return this.m},R.prototype.getCopyMatrix=function(){return new Float32Array(this.m)},R.prototype.setMatrix=function(t){if(null!=t&&16==t.length)for(var i=0;i<16;i++)this.m[i]=t[i]},R.prototype.mult=function(t,i,e){return null==i?null:(this==i?this.mult_safe(this.m,t.m,i.m,e):this.mult_fast(this.m,t.m,i.m,e),i)},R.prototype.mult_safe=function(t,i,e,r){if(t==e){var o=new Array(16);this.mult_fast(t,i,o,r);for(var n=15;n>=0;--n)e[n]=o[n]}else this.mult_fast(t,i,e,r)},R.prototype.mult_fast=function(t,i,e,r){r?(e[0]=t[0]*i[0]+t[4]*i[1]+t[8]*i[2],e[4]=t[0]*i[4]+t[4]*i[5]+t[8]*i[6],e[8]=t[0]*i[8]+t[4]*i[9]+t[8]*i[10],e[12]=t[0]*i[12]+t[4]*i[13]+t[8]*i[14]+t[12],e[1]=t[1]*i[0]+t[5]*i[1]+t[9]*i[2],e[5]=t[1]*i[4]+t[5]*i[5]+t[9]*i[6],e[9]=t[1]*i[8]+t[5]*i[9]+t[9]*i[10],e[13]=t[1]*i[12]+t[5]*i[13]+t[9]*i[14]+t[13],e[2]=t[2]*i[0]+t[6]*i[1]+t[10]*i[2],e[6]=t[2]*i[4]+t[6]*i[5]+t[10]*i[6],e[10]=t[2]*i[8]+t[6]*i[9]+t[10]*i[10],e[14]=t[2]*i[12]+t[6]*i[13]+t[10]*i[14]+t[14],e[3]=e[7]=e[11]=0,e[15]=1):(e[0]=t[0]*i[0]+t[4]*i[1]+t[8]*i[2]+t[12]*i[3],e[4]=t[0]*i[4]+t[4]*i[5]+t[8]*i[6]+t[12]*i[7],e[8]=t[0]*i[8]+t[4]*i[9]+t[8]*i[10]+t[12]*i[11],e[12]=t[0]*i[12]+t[4]*i[13]+t[8]*i[14]+t[12]*i[15],e[1]=t[1]*i[0]+t[5]*i[1]+t[9]*i[2]+t[13]*i[3],e[5]=t[1]*i[4]+t[5]*i[5]+t[9]*i[6]+t[13]*i[7],e[9]=t[1]*i[8]+t[5]*i[9]+t[9]*i[10]+t[13]*i[11],e[13]=t[1]*i[12]+t[5]*i[13]+t[9]*i[14]+t[13]*i[15],e[2]=t[2]*i[0]+t[6]*i[1]+t[10]*i[2]+t[14]*i[3],e[6]=t[2]*i[4]+t[6]*i[5]+t[10]*i[6]+t[14]*i[7],e[10]=t[2]*i[8]+t[6]*i[9]+t[10]*i[10]+t[14]*i[11],e[14]=t[2]*i[12]+t[6]*i[13]+t[10]*i[14]+t[14]*i[15],e[3]=t[3]*i[0]+t[7]*i[1]+t[11]*i[2]+t[15]*i[3],e[7]=t[3]*i[4]+t[7]*i[5]+t[11]*i[6]+t[15]*i[7],e[11]=t[3]*i[8]+t[7]*i[9]+t[11]*i[10]+t[15]*i[11],e[15]=t[3]*i[12]+t[7]*i[13]+t[11]*i[14]+t[15]*i[15])},R.prototype.translate=function(t,i,e){this.m[12]=this.m[0]*t+this.m[4]*i+this.m[8]*e+this.m[12],this.m[13]=this.m[1]*t+this.m[5]*i+this.m[9]*e+this.m[13],this.m[14]=this.m[2]*t+this.m[6]*i+this.m[10]*e+this.m[14],this.m[15]=this.m[3]*t+this.m[7]*i+this.m[11]*e+this.m[15]},R.prototype.scale=function(t,i,e){this.m[0]*=t,this.m[4]*=i,this.m[8]*=e,this.m[1]*=t,this.m[5]*=i,this.m[9]*=e,this.m[2]*=t,this.m[6]*=i,this.m[10]*=e,this.m[3]*=t,this.m[7]*=i,this.m[11]*=e},R.prototype.rotateX=function(t){var i=Lt.fcos(t),e=Lt._$9(t),r=this.m[4];this.m[4]=r*i+this.m[8]*e,this.m[8]=r*-e+this.m[8]*i,r=this.m[5],this.m[5]=r*i+this.m[9]*e,this.m[9]=r*-e+this.m[9]*i,r=this.m[6],this.m[6]=r*i+this.m[10]*e,this.m[10]=r*-e+this.m[10]*i,r=this.m[7],this.m[7]=r*i+this.m[11]*e,this.m[11]=r*-e+this.m[11]*i},R.prototype.rotateY=function(t){var i=Lt.fcos(t),e=Lt._$9(t),r=this.m[0];this.m[0]=r*i+this.m[8]*-e,this.m[8]=r*e+this.m[8]*i,r=this.m[1],this.m[1]=r*i+this.m[9]*-e,this.m[9]=r*e+this.m[9]*i,r=m[2],this.m[2]=r*i+this.m[10]*-e,this.m[10]=r*e+this.m[10]*i,r=m[3],this.m[3]=r*i+this.m[11]*-e,this.m[11]=r*e+this.m[11]*i},R.prototype.rotateZ=function(t){var i=Lt.fcos(t),e=Lt._$9(t),r=this.m[0];this.m[0]=r*i+this.m[4]*e,this.m[4]=r*-e+this.m[4]*i,r=this.m[1],this.m[1]=r*i+this.m[5]*e,this.m[5]=r*-e+this.m[5]*i,r=this.m[2],this.m[2]=r*i+this.m[6]*e,this.m[6]=r*-e+this.m[6]*i,r=this.m[3],this.m[3]=r*i+this.m[7]*e,this.m[7]=r*-e+this.m[7]*i},b.prototype=new et,b._$tP=new Object,b._$27=function(){b._$tP.clear()},b.getID=function(t){var i=b._$tP[t];return null==i&&(i=new b(t),b._$tP[t]=i),i},b.prototype._$3s=function(){return new b},F._$kS=-1,F._$pS=0,F._$hb=1,F.STATE_IDENTITY=0,F._$gb=1,F._$fo=2,F._$go=4,F.prototype.transform=function(t,i,e){var r,o,n,s,_,a,h=0,l=0;switch(this._$hi){default:return;case F._$go|F._$fo|F._$gb:for(r=this._$7,o=this._$H,n=this._$k,s=this._$f,_=this._$g,a=this._$w;--e>=0;){var $=t[h++],u=t[h++];i[l++]=r*$+o*u+n,i[l++]=s*$+_*u+a}return;case F._$go|F._$fo:for(r=this._$7,o=this._$H,s=this._$f,_=this._$g;--e>=0;){var $=t[h++],u=t[h++];i[l++]=r*$+o*u,i[l++]=s*$+_*u}return;case F._$go|F._$gb:for(o=this._$H,n=this._$k,s=this._$f,a=this._$w;--e>=0;){var $=t[h++];i[l++]=o*t[h++]+n,i[l++]=s*$+a}return;case F._$go:for(o=this._$H,s=this._$f;--e>=0;){var $=t[h++];i[l++]=o*t[h++],i[l++]=s*$}return;case F._$fo|F._$gb:for(r=this._$7,n=this._$k,_=this._$g,a=this._$w;--e>=0;)i[l++]=r*t[h++]+n,i[l++]=_*t[h++]+a;return;case F._$fo:for(r=this._$7,_=this._$g;--e>=0;)i[l++]=r*t[h++],i[l++]=_*t[h++];return;case F._$gb:for(n=this._$k,a=this._$w;--e>=0;)i[l++]=t[h++]+n,i[l++]=t[h++]+a;return;case F.STATE_IDENTITY:return void(t==i&&h==l||w._$jT(t,h,i,l,2*e))}},F.prototype.update=function(){0==this._$H&&0==this._$f?1==this._$7&&1==this._$g?0==this._$k&&0==this._$w?(this._$hi=F.STATE_IDENTITY,this._$Z=F._$pS):(this._$hi=F._$gb,this._$Z=F._$hb):0==this._$k&&0==this._$w?(this._$hi=F._$fo,this._$Z=F._$kS):(this._$hi=F._$fo|F._$gb,this._$Z=F._$kS):0==this._$7&&0==this._$g?0==this._$k&&0==this._$w?(this._$hi=F._$go,this._$Z=F._$kS):(this._$hi=F._$go|F._$gb,this._$Z=F._$kS):0==this._$k&&0==this._$w?(this._$hi=F._$go|F._$fo,this._$Z=F._$kS):(this._$hi=F._$go|F._$fo|F._$gb,this._$Z=F._$kS)},F.prototype._$RT=function(t){this._$IT(t);var i=t[0],e=t[2],r=t[1],o=t[3],n=Math.sqrt(i*i+r*r),s=i*o-e*r;0==n?at._$so&&console.log(\"affine._$RT() / rt==0\"):(t[0]=n,t[1]=s/n,t[2]=(r*o+i*e)/s,t[3]=Math.atan2(r,i))},F.prototype._$ho=function(t,i,e,r){var o=new Float32Array(6),n=new Float32Array(6);t._$RT(o),i._$RT(n);var s=new Float32Array(6);s[0]=o[0]+(n[0]-o[0])*e,s[1]=o[1]+(n[1]-o[1])*e,s[2]=o[2]+(n[2]-o[2])*e,s[3]=o[3]+(n[3]-o[3])*e,s[4]=o[4]+(n[4]-o[4])*e,s[5]=o[5]+(n[5]-o[5])*e,r._$CT(s)},F.prototype._$CT=function(t){var i=Math.cos(t[3]),e=Math.sin(t[3]);this._$7=t[0]*i,this._$f=t[0]*e,this._$H=t[1]*(t[2]*i-e),this._$g=t[1]*(t[2]*e+i),this._$k=t[4],this._$w=t[5],this.update()},F.prototype._$IT=function(t){t[0]=this._$7,t[1]=this._$f,t[2]=this._$H,t[3]=this._$g,t[4]=this._$k,t[5]=this._$w},C.prototype=new s,C._$cs=\"VISIBLE:\",C._$ar=\"LAYOUT:\",C._$Co=0,C._$D2=[],C._$1T=1,C.loadMotion=function(t){var i=new C,e=[0],r=t.length;i._$yT=0;for(var o=0;o<r;++o){var n=255&t[o];if(\"\\n\"!=n&&\"\\r\"!=n)if(\"#\"!=n)if(\"$\"!=n){if(\"a\"<=n&&n<=\"z\"||\"A\"<=n&&n<=\"Z\"||\"_\"==n){for(var s=o,_=-1;o<r&&(\"\\r\"!=(n=255&t[o])&&\"\\n\"!=n);++o)if(\"=\"==n){_=o;break}if(_>=0){var a=new B;O.startsWith(t,s,C._$cs)?(a._$RP=B._$hs,a._$4P=new String(t,s,_-s)):O.startsWith(t,s,C._$ar)?(a._$4P=new String(t,s+7,_-s-7),O.startsWith(t,s+7,\"ANCHOR_X\")?a._$RP=B._$xs:O.startsWith(t,s+7,\"ANCHOR_Y\")?a._$RP=B._$us:O.startsWith(t,s+7,\"SCALE_X\")?a._$RP=B._$qs:O.startsWith(t,s+7,\"SCALE_Y\")?a._$RP=B._$Ys:O.startsWith(t,s+7,\"X\")?a._$RP=B._$ws:O.startsWith(t,s+7,\"Y\")&&(a._$RP=B._$Ns)):(a._$RP=B._$Fr,a._$4P=new String(t,s,_-s)),i.motions.push(a);var h=0;for(C._$D2.clear(),o=_+1;o<r&&(\"\\r\"!=(n=255&t[o])&&\"\\n\"!=n);++o)if(\",\"!=n&&\" \"!=n&&\"\\t\"!=n){var l=O._$LS(t,r,o,e);if(e[0]>0){C._$D2.push(l),h++;var $=e[0];if($<o){console.log(\"_$n0 _$hi . @Live2DMotion loadMotion()\\n\");break}o=$}}a._$I0=C._$D2._$BL(),h>i._$yT&&(i._$yT=h)}}}else{for(var s=o,_=-1;o<r&&(\"\\r\"!=(n=255&t[o])&&\"\\n\"!=n);++o)if(\"=\"==n){_=o;break}var u=!1;if(_>=0)for(_==s+4&&\"f\"==t[s+1]&&\"p\"==t[s+2]&&\"s\"==t[s+3]&&(u=!0),o=_+1;o<r&&(\"\\r\"!=(n=255&t[o])&&\"\\n\"!=n);++o)if(\",\"!=n&&\" \"!=n&&\"\\t\"!=n){var l=O._$LS(t,r,o,e);e[0]>0&&u&&5<l&&l<121&&(i._$D0=l),o=e[0]}for(;o<r&&(\"\\n\"!=t[o]&&\"\\r\"!=t[o]);++o);}else for(;o<r&&(\"\\n\"!=t[o]&&\"\\r\"!=t[o]);++o);}return i._$AS=1e3*i._$yT/i._$D0|0,i},C.prototype.getDurationMSec=function(){return this._$AS},C.prototype.dump=function(){for(var t=0;t<this.motions.length;t++){var i=this.motions[t];console.log(\"_$wL[%s] [%d]. \",i._$4P,i._$I0.length);for(var e=0;e<i._$I0.length&&e<10;e++)console.log(\"%5.2f ,\",i._$I0[e]);console.log(\"\\n\")}},C.prototype.updateParamExe=function(t,i,e,r){for(var o=i-r._$z2,n=o*this._$D0/1e3,s=0|n,_=n-s,a=0;a<this.motions.length;a++){var h=this.motions[a],l=h._$I0.length,$=h._$4P;if(h._$RP==B._$hs){var u=h._$I0[s>=l?l-1:s];t.setParamFloat($,u)}else if(B._$ws<=h._$RP&&h._$RP<=B._$Ys);else{var p=t.getParamFloat($),f=h._$I0[s>=l?l-1:s],c=h._$I0[s+1>=l?l-1:s+1],d=f+(c-f)*_,g=p+(d-p)*e;t.setParamFloat($,g)}}s>=this._$yT&&(this._$E?(r._$z2=i,this.loopFadeIn&&(r._$bs=i)):r._$9L=!0)},C.prototype._$r0=function(){return this._$E},C.prototype._$aL=function(t){this._$E=t},C.prototype.isLoopFadeIn=function(){return this.loopFadeIn},C.prototype.setLoopFadeIn=function(t){this.loopFadeIn=t},N.prototype.clear=function(){this.size=0},N.prototype.add=function(t){if(this._$P.length<=this.size){var i=new Float32Array(2*this.size);w._$jT(this._$P,0,i,0,this.size),this._$P=i}this._$P[this.size++]=t},N.prototype._$BL=function(){var t=new Float32Array(this.size);return w._$jT(this._$P,0,t,0,this.size),t},B._$Fr=0,B._$hs=1,B._$ws=100,B._$Ns=101,B._$xs=102,B._$us=103,B._$qs=104,B._$Ys=105,U._$Ms=1,U._$Qs=2,U._$i2=0,U._$No=2,U._$do=U._$Ms,U._$Ls=!0,U._$1r=5,U._$Qb=65,U._$J=1e-4,U._$FT=.001,U._$Ss=3,G._$o7=6,G._$S7=7,G._$s7=8,G._$77=9,G.LIVE2D_FORMAT_VERSION_V2_10_SDK2=10,G.LIVE2D_FORMAT_VERSION_V2_11_SDK2_1=11,G._$T7=G.LIVE2D_FORMAT_VERSION_V2_11_SDK2_1,G._$Is=-2004318072,G._$h0=0,G._$4L=23,G._$7P=33,G._$uT=function(t){console.log(\"_$bo :: _$6 _$mo _$E0 : %d\\n\",t)},G._$9o=function(t){if(t<40)return G._$uT(t),null;if(t<50)return G._$uT(t),null;if(t<60)return G._$uT(t),null;if(t<100)switch(t){case 65:return new Z;case 66:return new D;case 67:return new x;case 68:return new z;case 69:return new P;case 70:return new $t;default:return G._$uT(t),null}else if(t<150)switch(t){case 131:return new st;case 133:return new tt;case 136:return new p;case 137:return new ot;case 142:return new j}return G._$uT(t),null},Y._$HP=0,Y._$_0=!0;Y._$V2=-1,Y._$W0=-1,Y._$jr=!1,Y._$ZS=!0,Y._$tr=-1e6,Y._$lr=1e6,Y._$is=32,Y._$e=!1,Y.prototype.getDrawDataIndex=function(t){for(var i=this._$aS.length-1;i>=0;--i)if(null!=this._$aS[i]&&this._$aS[i].getDrawDataID()==t)return i;return-1},Y.prototype.getDrawData=function(t){if(t instanceof b){if(null==this._$Bo){this._$Bo=new Object;for(var i=this._$aS.length,e=0;e<i;e++){var r=this._$aS[e],o=r.getDrawDataID();null!=o&&(this._$Bo[o]=r)}}return this._$Bo[id]}return t<this._$aS.length?this._$aS[t]:null},Y.prototype.release=function(){this._$3S.clear(),this._$aS.clear(),this._$F2.clear(),null!=this._$Bo&&this._$Bo.clear(),this._$db.clear(),this._$8b.clear(),this._$Hr.clear()},Y.prototype.init=function(){this._$co++,this._$F2.length>0&&this.release();for(var t=this._$Ri.getModelImpl(),i=t._$Xr(),r=i.length,o=new Array,n=new Array,s=0;s<r;++s){var _=i[s];this._$F2.push(_),this._$Hr.push(_.init(this));for(var a=_.getBaseData(),h=a.length,l=0;l<h;++l)o.push(a[l]);for(var l=0;l<h;++l){var $=a[l].init(this);$._$l2(s),n.push($)}for(var u=_.getDrawData(),p=u.length,l=0;l<p;++l){var f=u[l],c=f.init(this);c._$IP=s,this._$aS.push(f),this._$8b.push(c)}}for(var d=o.length,g=yt._$2o();;){for(var y=!1,s=0;s<d;++s){var m=o[s];if(null!=m){var T=m.getTargetBaseDataID();(null==T||T==g||this.getBaseDataIndex(T)>=0)&&(this._$3S.push(m),this._$db.push(n[s]),o[s]=null,y=!0)}}if(!y)break}var P=t._$E2();if(null!=P){var S=P._$1s();if(null!=S)for(var v=S.length,s=0;s<v;++s){var L=S[s];null!=L&&this._$02(L.getParamID(),L.getDefaultValue(),L.getMinValue(),L.getMaxValue())}}this.clipManager=new e(this.dp_webgl),this.clipManager.init(this,this._$aS,this._$8b),this._$QT=!0},Y.prototype.update=function(){Y._$e&&_.start(\"_$zL\");for(var t=this._$_2.length,i=0;i<t;i++)this._$_2[i]!=this._$vr[i]&&(this._$Js[i]=Y._$ZS,this._$vr[i]=this._$_2[i]);var e=this._$3S.length,r=this._$aS.length,o=W._$or(),n=W._$Pr(),s=n-o+1;(null==this._$Ws||this._$Ws.length<s)&&(this._$Ws=new Int16Array(s),this._$Vs=new Int16Array(s));for(var i=0;i<s;i++)this._$Ws[i]=Y._$V2,this._$Vs[i]=Y._$V2;(null==this._$Er||this._$Er.length<r)&&(this._$Er=new Int16Array(r));for(var i=0;i<r;i++)this._$Er[i]=Y._$W0;Y._$e&&_.dump(\"_$zL\"),Y._$e&&_.start(\"_$UL\");for(var a=null,h=0;h<e;++h){var l=this._$3S[h],$=this._$db[h];try{l._$Nr(this,$),l._$2b(this,$)}catch(t){null==a&&(a=t)}}null!=a&&Y._$_0&&_._$Rb(a),Y._$e&&_.dump(\"_$UL\"),Y._$e&&_.start(\"_$DL\");for(var u=null,p=0;p<r;++p){var f=this._$aS[p],c=this._$8b[p];try{if(f._$Nr(this,c),c._$u2())continue;f._$2b(this,c);var d,g=Math.floor(f._$zS(this,c)-o);try{d=this._$Vs[g]}catch(t){console.log(\"_$li :: %s / %s \\t\\t\\t\\t@@_$fS\\n\",t.toString(),f.getDrawDataID().toString()),g=Math.floor(f._$zS(this,c)-o);continue}d==Y._$V2?this._$Ws[g]=p:this._$Er[d]=p,this._$Vs[g]=p}catch(t){null==u&&(u=t,at._$sT(at._$H7))}}null!=u&&Y._$_0&&_._$Rb(u),Y._$e&&_.dump(\"_$DL\"),Y._$e&&_.start(\"_$eL\");for(var i=this._$Js.length-1;i>=0;i--)this._$Js[i]=Y._$jr;return this._$QT=!1,Y._$e&&_.dump(\"_$eL\"),!1},Y.prototype.preDraw=function(t){null!=this.clipManager&&(t._$ZT(),this.clipManager.setupClip(this,t))},Y.prototype.draw=function(t){if(null==this._$Ws)return void _._$li(\"call _$Ri.update() before _$Ri.draw() \");var i=this._$Ws.length;t._$ZT();for(var e=0;e<i;++e){var r=this._$Ws[e];if(r!=Y._$V2)for(;;){var o=this._$aS[r],n=this._$8b[r];if(n._$yo()){var s=n._$IP,a=this._$Hr[s];n._$VS=a.getPartsOpacity(),o.draw(t,this,n)}var h=this._$Er[r];if(h<=r||h==Y._$W0)break;r=h}}},Y.prototype.getParamIndex=function(t){for(var i=this._$pb.length-1;i>=0;--i)if(this._$pb[i]==t)return i;return this._$02(t,0,Y._$tr,Y._$lr)},Y.prototype._$BS=function(t){return this.getBaseDataIndex(t)},Y.prototype.getBaseDataIndex=function(t){for(var i=this._$3S.length-1;i>=0;--i)if(null!=this._$3S[i]&&this._$3S[i].getBaseDataID()==t)return i;return-1},Y.prototype._$UT=function(t,i){var e=new Float32Array(i);return w._$jT(t,0,e,0,t.length),e},Y.prototype._$02=function(t,i,e,r){if(this._$qo>=this._$pb.length){var o=this._$pb.length,n=new Array(2*o);w._$jT(this._$pb,0,n,0,o),this._$pb=n,this._$_2=this._$UT(this._$_2,2*o),this._$vr=this._$UT(this._$vr,2*o),this._$Rr=this._$UT(this._$Rr,2*o),this._$Or=this._$UT(this._$Or,2*o);var s=new Array;w._$jT(this._$Js,0,s,0,o),this._$Js=s}return this._$pb[this._$qo]=t,this._$_2[this._$qo]=i,this._$vr[this._$qo]=i,this._$Rr[this._$qo]=e,this._$Or[this._$qo]=r,this._$Js[this._$qo]=Y._$ZS,this._$qo++},Y.prototype._$Zo=function(t,i){this._$3S[t]=i},Y.prototype.setParamFloat=function(t,i){i<this._$Rr[t]&&(i=this._$Rr[t]),i>this._$Or[t]&&(i=this._$Or[t]),this._$_2[t]=i},Y.prototype.loadParam=function(){var t=this._$_2.length;t>this._$fs.length&&(t=this._$fs.length),w._$jT(this._$fs,0,this._$_2,0,t)},Y.prototype.saveParam=function(){var t=this._$_2.length;t>this._$fs.length&&(this._$fs=new Float32Array(t)),w._$jT(this._$_2,0,this._$fs,0,t)},Y.prototype._$v2=function(){return this._$co},Y.prototype._$WS=function(){return this._$QT},Y.prototype._$Xb=function(t){return this._$Js[t]==Y._$ZS},Y.prototype._$vs=function(){return this._$Es},Y.prototype._$Tr=function(){return this._$ZP},Y.prototype.getBaseData=function(t){return this._$3S[t]},Y.prototype.getParamFloat=function(t){return this._$_2[t]},Y.prototype.getParamMax=function(t){return this._$Or[t]},Y.prototype.getParamMin=function(t){return this._$Rr[t]},Y.prototype.setPartsOpacity=function(t,i){this._$Hr[t].setPartsOpacity(i)},Y.prototype.getPartsOpacity=function(t){return this._$Hr[t].getPartsOpacity()},Y.prototype.getPartsDataIndex=function(t){for(var i=this._$F2.length-1;i>=0;--i)if(null!=this._$F2[i]&&this._$F2[i]._$p2()==t)return i;return-1},Y.prototype._$q2=function(t){return this._$db[t]},Y.prototype._$C2=function(t){return this._$8b[t]},Y.prototype._$Bb=function(t){return this._$Hr[t]},Y.prototype._$5s=function(t,i){for(var e=this._$Ws.length,r=t,o=0;o<e;++o){var n=this._$Ws[o];if(n!=Y._$V2)for(;;){var s=this._$8b[n];s._$yo()&&(s._$GT()._$B2(this,s,r),r+=i);var _=this._$Er[n];if(_<=n||_==Y._$W0)break;n=_}}},Y.prototype.setDrawParam=function(t){this.dp_webgl=t},Y.prototype.getDrawParam=function(){return this.dp_webgl},k._$0T=function(t){return k._$0T(new _$5(t))},k._$0T=function(t){if(!t.exists())throw new _$ls(t._$3b());for(var i,e=t.length(),r=new Int8Array(e),o=new _$Xs(new _$kb(t),8192),n=0;(i=o.read(r,n,e-n))>0;)n+=i;return r},k._$C=function(t){var i=null,e=null;try{i=t instanceof Array?t:new _$Xs(t,8192),e=new _$js;for(var r,o=new Int8Array(1e3);(r=i.read(o))>0;)e.write(o,0,r);return e._$TS()}finally{null!=t&&t.close(),null!=e&&(e.flush(),e.close())}},V.prototype._$T2=function(){return w.getUserTimeMSec()+Math._$10()*(2*this._$Br-1)},V.prototype._$uo=function(t){this._$Br=t},V.prototype._$QS=function(t,i,e){this._$Dr=t,this._$Cb=i,this._$mr=e},V.prototype._$7T=function(t){var i,e=w.getUserTimeMSec(),r=0;switch(this._$_L){case STATE_CLOSING:r=(e-this._$bb)/this._$Dr,r>=1&&(r=1,this._$_L=wt.STATE_CLOSED,this._$bb=e),i=1-r;break;case STATE_CLOSED:r=(e-this._$bb)/this._$Cb,r>=1&&(this._$_L=wt.STATE_OPENING,this._$bb=e),i=0;break;case STATE_OPENING:r=(e-this._$bb)/this._$mr,r>=1&&(r=1,this._$_L=wt.STATE_INTERVAL,this._$12=this._$T2()),i=r;break;case STATE_INTERVAL:this._$12<e&&(this._$_L=wt.STATE_CLOSING,this._$bb=e),i=1;break;case STATE_FIRST:default:this._$_L=wt.STATE_INTERVAL,this._$12=this._$T2(),i=1}this._$jo||(i=-i),t.setParamFloat(this._$iL,i),t.setParamFloat(this._$0L,i)};var wt=function(){};wt.STATE_FIRST=\"STATE_FIRST\",wt.STATE_INTERVAL=\"STATE_INTERVAL\",wt.STATE_CLOSING=\"STATE_CLOSING\",wt.STATE_CLOSED=\"STATE_CLOSED\",wt.STATE_OPENING=\"STATE_OPENING\",X.prototype=new E,X._$As=32,X._$Gr=!1,X._$NT=null,X._$vS=null,X._$no=null,X._$9r=function(t){return new Float32Array(t)},X._$vb=function(t){return new Int16Array(t)},X._$cr=function(t,i){return null==t||t._$yL()<i.length?(t=X._$9r(2*i.length),t.put(i),t._$oT(0)):(t.clear(),t.put(i),t._$oT(0)),t},X._$mb=function(t,i){return null==t||t._$yL()<i.length?(t=X._$vb(2*i.length),t.put(i),t._$oT(0)):(t.clear(),t.put(i),t._$oT(0)),t},X._$Hs=function(){return X._$Gr},X._$as=function(t){X._$Gr=t},X.prototype.setGL=function(t){this.gl=t},X.prototype.setTransform=function(t){this.transform=t},X.prototype._$ZT=function(){},X.prototype._$Uo=function(t,i,e,r,o,n,s,_){if(!(n<.01)){var a=this._$U2[t],h=n>.9?at.EXPAND_W:0;this.gl.drawElements(a,e,r,o,n,h,this.transform,_)}},X.prototype._$Rs=function(){throw new Error(\"_$Rs\")},X.prototype._$Ds=function(t){throw new Error(\"_$Ds\")},X.prototype._$K2=function(){for(var t=0;t<this._$sb.length;t++){0!=this._$sb[t]&&(this.gl._$Sr(1,this._$sb,t),this._$sb[t]=0)}},X.prototype.setTexture=function(t,i){this._$sb.length<t+1&&this._$nS(t),this._$sb[t]=i},X.prototype.setTexture=function(t,i){this._$sb.length<t+1&&this._$nS(t),this._$U2[t]=i},X.prototype._$nS=function(t){var i=Math.max(2*this._$sb.length,t+1+10),e=new Int32Array(i);w._$jT(this._$sb,0,e,0,this._$sb.length),this._$sb=e;var r=new Array;w._$jT(this._$U2,0,r,0,this._$U2.length),this._$U2=r},z.prototype=new I,z._$Xo=new Float32Array(2),z._$io=new Float32Array(2),z._$0o=new Float32Array(2),z._$Lo=new Float32Array(2),z._$To=new Float32Array(2),z._$Po=new Float32Array(2),z._$gT=new Array,z.prototype._$zP=function(){this._$GS=new D,this._$GS._$zP(),this._$Y0=new Array},z.prototype.getType=function(){return I._$c2},z.prototype._$F0=function(t){I.prototype._$F0.call(this,t),this._$GS=t._$nP(),this._$Y0=t._$nP(),I.prototype.readV2_opacity.call(this,t)},z.prototype.init=function(t){var i=new H(this);return i._$Yr=new P,this._$32()&&(i._$Wr=new P),i},z.prototype._$Nr=function(t,i){this!=i._$GT()&&console.log(\"### assert!! ### \");var e=i;if(this._$GS._$Ur(t)){var r=z._$gT;r[0]=!1;var o=this._$GS._$Q2(t,r);i._$Ib(r[0]),this.interpolateOpacity(t,this._$GS,i,r);var n=t._$vs(),s=t._$Tr();if(this._$GS._$zr(n,s,o),o<=0){var _=this._$Y0[n[0]];e._$Yr.init(_)}else if(1==o){var _=this._$Y0[n[0]],a=this._$Y0[n[1]],h=s[0];e._$Yr._$fL=_._$fL+(a._$fL-_._$fL)*h,e._$Yr._$gL=_._$gL+(a._$gL-_._$gL)*h,e._$Yr._$B0=_._$B0+(a._$B0-_._$B0)*h,e._$Yr._$z0=_._$z0+(a._$z0-_._$z0)*h,e._$Yr._$qT=_._$qT+(a._$qT-_._$qT)*h}else if(2==o){var _=this._$Y0[n[0]],a=this._$Y0[n[1]],l=this._$Y0[n[2]],$=this._$Y0[n[3]],h=s[0],u=s[1],p=_._$fL+(a._$fL-_._$fL)*h,f=l._$fL+($._$fL-l._$fL)*h;e._$Yr._$fL=p+(f-p)*u,p=_._$gL+(a._$gL-_._$gL)*h,f=l._$gL+($._$gL-l._$gL)*h,e._$Yr._$gL=p+(f-p)*u,p=_._$B0+(a._$B0-_._$B0)*h,f=l._$B0+($._$B0-l._$B0)*h,e._$Yr._$B0=p+(f-p)*u,p=_._$z0+(a._$z0-_._$z0)*h,f=l._$z0+($._$z0-l._$z0)*h,e._$Yr._$z0=p+(f-p)*u,p=_._$qT+(a._$qT-_._$qT)*h,f=l._$qT+($._$qT-l._$qT)*h,e._$Yr._$qT=p+(f-p)*u}else if(3==o){var c=this._$Y0[n[0]],d=this._$Y0[n[1]],g=this._$Y0[n[2]],y=this._$Y0[n[3]],m=this._$Y0[n[4]],T=this._$Y0[n[5]],P=this._$Y0[n[6]],S=this._$Y0[n[7]],h=s[0],u=s[1],v=s[2],p=c._$fL+(d._$fL-c._$fL)*h,f=g._$fL+(y._$fL-g._$fL)*h,L=m._$fL+(T._$fL-m._$fL)*h,M=P._$fL+(S._$fL-P._$fL)*h;e._$Yr._$fL=(1-v)*(p+(f-p)*u)+v*(L+(M-L)*u),p=c._$gL+(d._$gL-c._$gL)*h,f=g._$gL+(y._$gL-g._$gL)*h,L=m._$gL+(T._$gL-m._$gL)*h,M=P._$gL+(S._$gL-P._$gL)*h,e._$Yr._$gL=(1-v)*(p+(f-p)*u)+v*(L+(M-L)*u),p=c._$B0+(d._$B0-c._$B0)*h,f=g._$B0+(y._$B0-g._$B0)*h,L=m._$B0+(T._$B0-m._$B0)*h,M=P._$B0+(S._$B0-P._$B0)*h,e._$Yr._$B0=(1-v)*(p+(f-p)*u)+v*(L+(M-L)*u),p=c._$z0+(d._$z0-c._$z0)*h,f=g._$z0+(y._$z0-g._$z0)*h,L=m._$z0+(T._$z0-m._$z0)*h,M=P._$z0+(S._$z0-P._$z0)*h,e._$Yr._$z0=(1-v)*(p+(f-p)*u)+v*(L+(M-L)*u),p=c._$qT+(d._$qT-c._$qT)*h,f=g._$qT+(y._$qT-g._$qT)*h,L=m._$qT+(T._$qT-m._$qT)*h,M=P._$qT+(S._$qT-P._$qT)*h,e._$Yr._$qT=(1-v)*(p+(f-p)*u)+v*(L+(M-L)*u)}else if(4==o){var E=this._$Y0[n[0]],A=this._$Y0[n[1]],I=this._$Y0[n[2]],w=this._$Y0[n[3]],x=this._$Y0[n[4]],O=this._$Y0[n[5]],D=this._$Y0[n[6]],R=this._$Y0[n[7]],b=this._$Y0[n[8]],F=this._$Y0[n[9]],C=this._$Y0[n[10]],N=this._$Y0[n[11]],B=this._$Y0[n[12]],U=this._$Y0[n[13]],G=this._$Y0[n[14]],Y=this._$Y0[n[15]],h=s[0],u=s[1],v=s[2],k=s[3],p=E._$fL+(A._$fL-E._$fL)*h,f=I._$fL+(w._$fL-I._$fL)*h,L=x._$fL+(O._$fL-x._$fL)*h,M=D._$fL+(R._$fL-D._$fL)*h,V=b._$fL+(F._$fL-b._$fL)*h,X=C._$fL+(N._$fL-C._$fL)*h,H=B._$fL+(U._$fL-B._$fL)*h,W=G._$fL+(Y._$fL-G._$fL)*h;e._$Yr._$fL=(1-k)*((1-v)*(p+(f-p)*u)+v*(L+(M-L)*u))+k*((1-v)*(V+(X-V)*u)+v*(H+(W-H)*u)),p=E._$gL+(A._$gL-E._$gL)*h,f=I._$gL+(w._$gL-I._$gL)*h,L=x._$gL+(O._$gL-x._$gL)*h,M=D._$gL+(R._$gL-D._$gL)*h,V=b._$gL+(F._$gL-b._$gL)*h,X=C._$gL+(N._$gL-C._$gL)*h,H=B._$gL+(U._$gL-B._$gL)*h,W=G._$gL+(Y._$gL-G._$gL)*h,e._$Yr._$gL=(1-k)*((1-v)*(p+(f-p)*u)+v*(L+(M-L)*u))+k*((1-v)*(V+(X-V)*u)+v*(H+(W-H)*u)),p=E._$B0+(A._$B0-E._$B0)*h,f=I._$B0+(w._$B0-I._$B0)*h,L=x._$B0+(O._$B0-x._$B0)*h,M=D._$B0+(R._$B0-D._$B0)*h,V=b._$B0+(F._$B0-b._$B0)*h,X=C._$B0+(N._$B0-C._$B0)*h,H=B._$B0+(U._$B0-B._$B0)*h,W=G._$B0+(Y._$B0-G._$B0)*h,e._$Yr._$B0=(1-k)*((1-v)*(p+(f-p)*u)+v*(L+(M-L)*u))+k*((1-v)*(V+(X-V)*u)+v*(H+(W-H)*u)),p=E._$z0+(A._$z0-E._$z0)*h,f=I._$z0+(w._$z0-I._$z0)*h,L=x._$z0+(O._$z0-x._$z0)*h,M=D._$z0+(R._$z0-D._$z0)*h,V=b._$z0+(F._$z0-b._$z0)*h,X=C._$z0+(N._$z0-C._$z0)*h,H=B._$z0+(U._$z0-B._$z0)*h,W=G._$z0+(Y._$z0-G._$z0)*h,e._$Yr._$z0=(1-k)*((1-v)*(p+(f-p)*u)+v*(L+(M-L)*u))+k*((1-v)*(V+(X-V)*u)+v*(H+(W-H)*u)),p=E._$qT+(A._$qT-E._$qT)*h,f=I._$qT+(w._$qT-I._$qT)*h,L=x._$qT+(O._$qT-x._$qT)*h,M=D._$qT+(R._$qT-D._$qT)*h,V=b._$qT+(F._$qT-b._$qT)*h,X=C._$qT+(N._$qT-C._$qT)*h,H=B._$qT+(U._$qT-B._$qT)*h,W=G._$qT+(Y._$qT-G._$qT)*h,e._$Yr._$qT=(1-k)*((1-v)*(p+(f-p)*u)+v*(L+(M-L)*u))+k*((1-v)*(V+(X-V)*u)+v*(H+(W-H)*u))}else{for(var j=0|Math.pow(2,o),q=new Float32Array(j),J=0;J<j;J++){for(var Q=J,Z=1,K=0;K<o;K++)Z*=Q%2==0?1-s[K]:s[K],Q/=2;q[J]=Z}for(var tt=new Array,it=0;it<j;it++)tt[it]=this._$Y0[n[it]];for(var et=0,rt=0,ot=0,nt=0,st=0,it=0;it<j;it++)et+=q[it]*tt[it]._$fL,rt+=q[it]*tt[it]._$gL,ot+=q[it]*tt[it]._$B0,nt+=q[it]*tt[it]._$z0,st+=q[it]*tt[it]._$qT;e._$Yr._$fL=et,e._$Yr._$gL=rt,e._$Yr._$B0=ot,e._$Yr._$z0=nt,e._$Yr._$qT=st}var _=this._$Y0[n[0]];e._$Yr.reflectX=_.reflectX,e._$Yr.reflectY=_.reflectY}},z.prototype._$2b=function(t,i){this!=i._$GT()&&console.log(\"### assert!! ### \");var e=i;if(e._$hS(!0),this._$32()){var r=this.getTargetBaseDataID();if(e._$8r==I._$ur&&(e._$8r=t.getBaseDataIndex(r)),e._$8r<0)at._$so&&_._$li(\"_$L _$0P _$G :: %s\",r),e._$hS(!1);else{var o=t.getBaseData(e._$8r);if(null!=o){var n=t._$q2(e._$8r),s=z._$Xo;s[0]=e._$Yr._$fL,s[1]=e._$Yr._$gL;var a=z._$io;a[0]=0,a[1]=-.1;n._$GT().getType()==I._$c2?a[1]=-10:a[1]=-.1;var h=z._$0o;this._$Jr(t,o,n,s,a,h);var l=Lt._$92(a,h);o._$nb(t,n,s,s,1,0,2),e._$Wr._$fL=s[0],e._$Wr._$gL=s[1],e._$Wr._$B0=e._$Yr._$B0,e._$Wr._$z0=e._$Yr._$z0,e._$Wr._$qT=e._$Yr._$qT-l*Lt._$NS;var $=n.getTotalScale();e.setTotalScale_notForClient($*e._$Wr._$B0);var u=n.getTotalOpacity();e.setTotalOpacity(u*e.getInterpolatedOpacity()),e._$Wr.reflectX=e._$Yr.reflectX,e._$Wr.reflectY=e._$Yr.reflectY,e._$hS(n._$yo())}else e._$hS(!1)}}else e.setTotalScale_notForClient(e._$Yr._$B0),e.setTotalOpacity(e.getInterpolatedOpacity())},z.prototype._$nb=function(t,i,e,r,o,n,s){this!=i._$GT()&&console.log(\"### assert!! ### \");for(var _,a,h=i,l=null!=h._$Wr?h._$Wr:h._$Yr,$=Math.sin(Lt._$bS*l._$qT),u=Math.cos(Lt._$bS*l._$qT),p=h.getTotalScale(),f=l.reflectX?-1:1,c=l.reflectY?-1:1,d=u*p*f,g=-$*p*c,y=$*p*f,m=u*p*c,T=l._$fL,P=l._$gL,S=o*s,v=n;v<S;v+=s)_=e[v],a=e[v+1],r[v]=d*_+g*a+T,r[v+1]=y*_+m*a+P},z.prototype._$Jr=function(t,i,e,r,o,n){i!=e._$GT()&&console.log(\"### assert!! ### \");var s=z._$Lo;z._$Lo[0]=r[0],z._$Lo[1]=r[1],i._$nb(t,e,s,s,1,0,2);for(var _=z._$To,a=z._$Po,h=1,l=0;l<10;l++){if(a[0]=r[0]+h*o[0],a[1]=r[1]+h*o[1],i._$nb(t,e,a,_,1,0,2),_[0]-=s[0],_[1]-=s[1],0!=_[0]||0!=_[1])return n[0]=_[0],void(n[1]=_[1]);if(a[0]=r[0]-h*o[0],a[1]=r[1]-h*o[1],i._$nb(t,e,a,_,1,0,2),_[0]-=s[0],_[1]-=s[1],0!=_[0]||0!=_[1])return _[0]=-_[0],_[0]=-_[0],n[0]=_[0],void(n[1]=_[1]);h*=.1}at._$so&&console.log(\"_$L0 to transform _$SP\\n\")},H.prototype=new _t,W.prototype=new M,W._$ur=-2,W._$ES=500,W._$wb=2,W._$8S=3,W._$os=4,W._$52=W._$ES,W._$R2=W._$ES,W._$Sb=function(t){for(var i=t.length-1;i>=0;--i){var e=t[i];e<W._$52?W._$52=e:e>W._$R2&&(W._$R2=e)}},W._$or=function(){return W._$52},W._$Pr=function(){return W._$R2},W.prototype._$F0=function(t){this._$gP=t._$nP(),this._$dr=t._$nP(),this._$GS=t._$nP(),this._$qb=t._$6L(),this._$Lb=t._$cS(),this._$mS=t._$Tb(),t.getFormatVersion()>=G._$T7?(this.clipID=t._$nP(),this.clipIDList=this.convertClipIDForV2_11(this.clipID)):this.clipIDList=null,W._$Sb(this._$Lb)},W.prototype.getClipIDList=function(){return this.clipIDList},W.prototype._$Nr=function(t,i){if(i._$IS[0]=!1,i._$Us=v._$Z2(t,this._$GS,i._$IS,this._$Lb),at._$Zs);else if(i._$IS[0])return;i._$7s=v._$br(t,this._$GS,i._$IS,this._$mS)},W.prototype._$2b=function(t){},W.prototype.getDrawDataID=function(){return this._$gP},W.prototype._$j2=function(t){this._$gP=t},W.prototype.getOpacity=function(t,i){return i._$7s},W.prototype._$zS=function(t,i){return i._$Us},W.prototype.getTargetBaseDataID=function(){return this._$dr},W.prototype._$gs=function(t){this._$dr=t},W.prototype._$32=function(){return null!=this._$dr&&this._$dr!=yt._$2o()},W.prototype.getType=function(){},j._$42=0,j.prototype._$1b=function(){return this._$3S},j.prototype.getDrawDataList=function(){return this._$aS},j.prototype._$F0=function(t){this._$NL=t._$nP(),this._$aS=t._$nP(),this._$3S=t._$nP()},j.prototype._$kr=function(t){t._$Zo(this._$3S),t._$xo(this._$aS),this._$3S=null,this._$aS=null},q.prototype=new i,q.loadModel=function(t){var e=new q;return i._$62(e,t),e},q.loadModel=function(t){var e=new q;return i._$62(e,t),e},q._$to=function(){return new q},q._$er=function(t){var i=new _$5(\"../_$_r/_$t0/_$Ri/_$_P._$d\");if(0==i.exists())throw new _$ls(\"_$t0 _$_ _$6 _$Ui :: \"+i._$PL());for(var e=[\"../_$_r/_$t0/_$Ri/_$_P.512/_$CP._$1\",\"../_$_r/_$t0/_$Ri/_$_P.512/_$vP._$1\",\"../_$_r/_$t0/_$Ri/_$_P.512/_$EP._$1\",\"../_$_r/_$t0/_$Ri/_$_P.512/_$pP._$1\"],r=q.loadModel(i._$3b()),o=0;o<e.length;o++){var n=new _$5(e[o]);if(0==n.exists())throw new _$ls(\"_$t0 _$_ _$6 _$Ui :: \"+n._$PL());r.setTexture(o,_$nL._$_o(t,n._$3b()))}return r},q.prototype.setGL=function(t){this._$zo.setGL(t)},q.prototype.setTransform=function(t){this._$zo.setTransform(t)},q.prototype.draw=function(){this._$5S.draw(this._$zo)},q.prototype._$K2=function(){this._$zo._$K2()},q.prototype.setTexture=function(t,i){null==this._$zo&&_._$li(\"_$Yi for QT _$ki / _$XS() is _$6 _$ui!!\"),this._$zo.setTexture(t,i)},q.prototype.setTexture=function(t,i){null==this._$zo&&_._$li(\"_$Yi for QT _$ki / _$XS() is _$6 _$ui!!\"),this._$zo.setTexture(t,i)},q.prototype._$Rs=function(){return this._$zo._$Rs()},q.prototype._$Ds=function(t){this._$zo._$Ds(t)},q.prototype.getDrawParam=function(){return this._$zo},J.prototype=new s,J._$cs=\"VISIBLE:\",J._$ar=\"LAYOUT:\",J.MTN_PREFIX_FADEIN=\"FADEIN:\",J.MTN_PREFIX_FADEOUT=\"FADEOUT:\",J._$Co=0,J._$1T=1,J.loadMotion=function(t){var i=k._$C(t);return J.loadMotion(i)},J.loadMotion=function(t){t instanceof ArrayBuffer&&(t=new DataView(t));var i=new J,e=[0],r=t.byteLength;i._$yT=0;for(var o=0;o<r;++o){var n=Q(t,o),s=n.charCodeAt(0);if(\"\\n\"!=n&&\"\\r\"!=n)if(\"#\"!=n)if(\"$\"!=n){if(97<=s&&s<=122||65<=s&&s<=90||\"_\"==n){for(var _=o,a=-1;o<r&&(\"\\r\"!=(n=Q(t,o))&&\"\\n\"!=n);++o)if(\"=\"==n){a=o;break}if(a>=0){var h=new B;O.startsWith(t,_,J._$cs)?(h._$RP=B._$hs,h._$4P=O.createString(t,_,a-_)):O.startsWith(t,_,J._$ar)?(h._$4P=O.createString(t,_+7,a-_-7),O.startsWith(t,_+7,\"ANCHOR_X\")?h._$RP=B._$xs:O.startsWith(t,_+7,\"ANCHOR_Y\")?h._$RP=B._$us:O.startsWith(t,_+7,\"SCALE_X\")?h._$RP=B._$qs:O.startsWith(t,_+7,\"SCALE_Y\")?h._$RP=B._$Ys:O.startsWith(t,_+7,\"X\")?h._$RP=B._$ws:O.startsWith(t,_+7,\"Y\")&&(h._$RP=B._$Ns)):(h._$RP=B._$Fr,h._$4P=O.createString(t,_,a-_)),i.motions.push(h);var l=0,$=[];for(o=a+1;o<r&&(\"\\r\"!=(n=Q(t,o))&&\"\\n\"!=n);++o)if(\",\"!=n&&\" \"!=n&&\"\\t\"!=n){var u=O._$LS(t,r,o,e);if(e[0]>0){$.push(u),l++;var p=e[0];if(p<o){console.log(\"_$n0 _$hi . @Live2DMotion loadMotion()\\n\");break}o=p-1}}h._$I0=new Float32Array($),l>i._$yT&&(i._$yT=l)}}}else{for(var _=o,a=-1;o<r&&(\"\\r\"!=(n=Q(t,o))&&\"\\n\"!=n);++o)if(\"=\"==n){a=o;break}var f=!1;if(a>=0)for(a==_+4&&\"f\"==Q(t,_+1)&&\"p\"==Q(t,_+2)&&\"s\"==Q(t,_+3)&&(f=!0),o=a+1;o<r&&(\"\\r\"!=(n=Q(t,o))&&\"\\n\"!=n);++o)if(\",\"!=n&&\" \"!=n&&\"\\t\"!=n){var u=O._$LS(t,r,o,e);e[0]>0&&f&&5<u&&u<121&&(i._$D0=u),o=e[0]}for(;o<r&&(\"\\n\"!=Q(t,o)&&\"\\r\"!=Q(t,o));++o);}else for(;o<r&&(\"\\n\"!=Q(t,o)&&\"\\r\"!=Q(t,o));++o);}return i._$rr=1e3*i._$yT/i._$D0|0,i},J.prototype.getDurationMSec=function(){return this._$E?-1:this._$rr},J.prototype.getLoopDurationMSec=function(){return this._$rr},J.prototype.dump=function(){for(var t=0;t<this.motions.length;t++){var i=this.motions[t];console.log(\"_$wL[%s] [%d]. \",i._$4P,i._$I0.length);for(var e=0;e<i._$I0.length&&e<10;e++)console.log(\"%5.2f ,\",i._$I0[e]);console.log(\"\\n\")}},J.prototype.updateParamExe=function(t,i,e,r){for(var o=i-r._$z2,n=o*this._$D0/1e3,s=0|n,_=n-s,a=0;a<this.motions.length;a++){var h=this.motions[a],l=h._$I0.length,$=h._$4P;if(h._$RP==B._$hs){var u=h._$I0[s>=l?l-1:s];t.setParamFloat($,u)}else if(B._$ws<=h._$RP&&h._$RP<=B._$Ys);else{var p,f=t.getParamIndex($),c=t.getModelContext(),d=c.getParamMax(f),g=c.getParamMin(f),y=.4*(d-g),m=c.getParamFloat(f),T=h._$I0[s>=l?l-1:s],P=h._$I0[s+1>=l?l-1:s+1];p=T<P&&P-T>y||T>P&&T-P>y?T:T+(P-T)*_;var S=m+(p-m)*e;t.setParamFloat($,S)}}s>=this._$yT&&(this._$E?(r._$z2=i,this.loopFadeIn&&(r._$bs=i)):r._$9L=!0),this._$eP=e},J.prototype._$r0=function(){return this._$E},J.prototype._$aL=function(t){this._$E=t},J.prototype._$S0=function(){return this._$D0},J.prototype._$U0=function(t){this._$D0=t},J.prototype.isLoopFadeIn=function(){return this.loopFadeIn},J.prototype.setLoopFadeIn=function(t){this.loopFadeIn=t},N.prototype.clear=function(){this.size=0},N.prototype.add=function(t){if(this._$P.length<=this.size){var i=new Float32Array(2*this.size);w._$jT(this._$P,0,i,0,this.size),this._$P=i}this._$P[this.size++]=t},N.prototype._$BL=function(){var t=new Float32Array(this.size);return w._$jT(this._$P,0,t,0,this.size),t},B._$Fr=0,B._$hs=1,B._$ws=100,B._$Ns=101,B._$xs=102,B._$us=103,B._$qs=104,B._$Ys=105,Z.prototype=new I,Z._$gT=new Array,Z.prototype._$zP=function(){this._$GS=new D,this._$GS._$zP()},Z.prototype._$F0=function(t){I.prototype._$F0.call(this,t),this._$A=t._$6L(),this._$o=t._$6L(),this._$GS=t._$nP(),this._$Eo=t._$nP(),I.prototype.readV2_opacity.call(this,t)},Z.prototype.init=function(t){var i=new K(this),e=(this._$o+1)*(this._$A+1);return null!=i._$Cr&&(i._$Cr=null),i._$Cr=new Float32Array(2*e),null!=i._$hr&&(i._$hr=null),this._$32()?i._$hr=new Float32Array(2*e):i._$hr=null,i},Z.prototype._$Nr=function(t,i){var e=i;if(this._$GS._$Ur(t)){var r=this._$VT(),o=Z._$gT;o[0]=!1,v._$Vr(t,this._$GS,o,r,this._$Eo,e._$Cr,0,2),i._$Ib(o[0]),this.interpolateOpacity(t,this._$GS,i,o)}},Z.prototype._$2b=function(t,i){var e=i;if(e._$hS(!0),this._$32()){var r=this.getTargetBaseDataID();if(e._$8r==I._$ur&&(e._$8r=t.getBaseDataIndex(r)),e._$8r<0)at._$so&&_._$li(\"_$L _$0P _$G :: %s\",r),e._$hS(!1);else{var o=t.getBaseData(e._$8r),n=t._$q2(e._$8r);if(null!=o&&n._$yo()){var s=n.getTotalScale();e.setTotalScale_notForClient(s);var a=n.getTotalOpacity();e.setTotalOpacity(a*e.getInterpolatedOpacity()),o._$nb(t,n,e._$Cr,e._$hr,this._$VT(),0,2),e._$hS(!0)}else e._$hS(!1)}}else e.setTotalOpacity(e.getInterpolatedOpacity())},Z.prototype._$nb=function(t,i,e,r,o,n,s){var _=i,a=null!=_._$hr?_._$hr:_._$Cr;Z.transformPoints_sdk2(e,r,o,n,s,a,this._$o,this._$A)},Z.transformPoints_sdk2=function(i,e,r,o,n,s,_,a){for(var h,l,$,u=r*n,p=0,f=0,c=0,d=0,g=0,y=0,m=!1,T=o;T<u;T+=n){var P,S,v,L;if(v=i[T],L=i[T+1],P=v*_,S=L*a,P<0||S<0||_<=P||a<=S){var M=_+1;if(!m){m=!0,p=.25*(s[2*(0+0*M)]+s[2*(_+0*M)]+s[2*(0+a*M)]+s[2*(_+a*M)]),f=.25*(s[2*(0+0*M)+1]+s[2*(_+0*M)+1]+s[2*(0+a*M)+1]+s[2*(_+a*M)+1]);var E=s[2*(_+a*M)]-s[2*(0+0*M)],A=s[2*(_+a*M)+1]-s[2*(0+0*M)+1],I=s[2*(_+0*M)]-s[2*(0+a*M)],w=s[2*(_+0*M)+1]-s[2*(0+a*M)+1];c=.5*(E+I),d=.5*(A+w),g=.5*(E-I),y=.5*(A-w),p-=.5*(c+g),f-=.5*(d+y)}if(-2<v&&v<3&&-2<L&&L<3)if(v<=0)if(L<=0){var x=s[2*(0+0*M)],O=s[2*(0+0*M)+1],D=p-2*c,R=f-2*d,b=p-2*g,F=f-2*y,C=p-2*c-2*g,N=f-2*d-2*y,B=.5*(v- -2),U=.5*(L- -2);B+U<=1?(e[T]=C+(b-C)*B+(D-C)*U,e[T+1]=N+(F-N)*B+(R-N)*U):(e[T]=x+(D-x)*(1-B)+(b-x)*(1-U),e[T+1]=O+(R-O)*(1-B)+(F-O)*(1-U))}else if(L>=1){var b=s[2*(0+a*M)],F=s[2*(0+a*M)+1],C=p-2*c+1*g,N=f-2*d+1*y,x=p+3*g,O=f+3*y,D=p-2*c+3*g,R=f-2*d+3*y,B=.5*(v- -2),U=.5*(L-1);B+U<=1?(e[T]=C+(b-C)*B+(D-C)*U,e[T+1]=N+(F-N)*B+(R-N)*U):(e[T]=x+(D-x)*(1-B)+(b-x)*(1-U),e[T+1]=O+(R-O)*(1-B)+(F-O)*(1-U))}else{var G=0|S;G==a&&(G=a-1);var B=.5*(v- -2),U=S-G,Y=G/a,k=(G+1)/a,b=s[2*(0+G*M)],F=s[2*(0+G*M)+1],x=s[2*(0+(G+1)*M)],O=s[2*(0+(G+1)*M)+1],C=p-2*c+Y*g,N=f-2*d+Y*y,D=p-2*c+k*g,R=f-2*d+k*y;B+U<=1?(e[T]=C+(b-C)*B+(D-C)*U,e[T+1]=N+(F-N)*B+(R-N)*U):(e[T]=x+(D-x)*(1-B)+(b-x)*(1-U),e[T+1]=O+(R-O)*(1-B)+(F-O)*(1-U))}else if(1<=v)if(L<=0){var D=s[2*(_+0*M)],R=s[2*(_+0*M)+1],x=p+3*c,O=f+3*d,C=p+1*c-2*g,N=f+1*d-2*y,b=p+3*c-2*g,F=f+3*d-2*y,B=.5*(v-1),U=.5*(L- -2);B+U<=1?(e[T]=C+(b-C)*B+(D-C)*U,e[T+1]=N+(F-N)*B+(R-N)*U):(e[T]=x+(D-x)*(1-B)+(b-x)*(1-U),e[T+1]=O+(R-O)*(1-B)+(F-O)*(1-U))}else if(L>=1){var C=s[2*(_+a*M)],N=s[2*(_+a*M)+1],b=p+3*c+1*g,F=f+3*d+1*y,D=p+1*c+3*g,R=f+1*d+3*y,x=p+3*c+3*g,O=f+3*d+3*y,B=.5*(v-1),U=.5*(L-1);B+U<=1?(e[T]=C+(b-C)*B+(D-C)*U,e[T+1]=N+(F-N)*B+(R-N)*U):(e[T]=x+(D-x)*(1-B)+(b-x)*(1-U),e[T+1]=O+(R-O)*(1-B)+(F-O)*(1-U))}else{var G=0|S;G==a&&(G=a-1);var B=.5*(v-1),U=S-G,Y=G/a,k=(G+1)/a,C=s[2*(_+G*M)],N=s[2*(_+G*M)+1],D=s[2*(_+(G+1)*M)],R=s[2*(_+(G+1)*M)+1],b=p+3*c+Y*g,F=f+3*d+Y*y,x=p+3*c+k*g,O=f+3*d+k*y;B+U<=1?(e[T]=C+(b-C)*B+(D-C)*U,e[T+1]=N+(F-N)*B+(R-N)*U):(e[T]=x+(D-x)*(1-B)+(b-x)*(1-U),e[T+1]=O+(R-O)*(1-B)+(F-O)*(1-U))}else if(L<=0){var V=0|P;V==_&&(V=_-1);var B=P-V,U=.5*(L- -2),X=V/_,z=(V+1)/_,D=s[2*(V+0*M)],R=s[2*(V+0*M)+1],x=s[2*(V+1+0*M)],O=s[2*(V+1+0*M)+1],C=p+X*c-2*g,N=f+X*d-2*y,b=p+z*c-2*g,F=f+z*d-2*y;B+U<=1?(e[T]=C+(b-C)*B+(D-C)*U,e[T+1]=N+(F-N)*B+(R-N)*U):(e[T]=x+(D-x)*(1-B)+(b-x)*(1-U),e[T+1]=O+(R-O)*(1-B)+(F-O)*(1-U))}else if(L>=1){var V=0|P;V==_&&(V=_-1);var B=P-V,U=.5*(L-1),X=V/_,z=(V+1)/_,C=s[2*(V+a*M)],N=s[2*(V+a*M)+1],b=s[2*(V+1+a*M)],F=s[2*(V+1+a*M)+1],D=p+X*c+3*g,R=f+X*d+3*y,x=p+z*c+3*g,O=f+z*d+3*y;B+U<=1?(e[T]=C+(b-C)*B+(D-C)*U,e[T+1]=N+(F-N)*B+(R-N)*U):(e[T]=x+(D-x)*(1-B)+(b-x)*(1-U),e[T+1]=O+(R-O)*(1-B)+(F-O)*(1-U))}else t.err.printf(\"_$li calc : %.4f , %.4f\\t\\t\\t\\t\\t@@BDBoxGrid\\n\",v,L);else e[T]=p+v*c+L*g,e[T+1]=f+v*d+L*y}else l=P-(0|P),$=S-(0|S),h=2*((0|P)+(0|S)*(_+1)),l+$<1?(e[T]=s[h]*(1-l-$)+s[h+2]*l+s[h+2*(_+1)]*$,e[T+1]=s[h+1]*(1-l-$)+s[h+3]*l+s[h+2*(_+1)+1]*$):(e[T]=s[h+2*(_+1)+2]*(l-1+$)+s[h+2*(_+1)]*(1-l)+s[h+2]*(1-$),e[T+1]=s[h+2*(_+1)+3]*(l-1+$)+s[h+2*(_+1)+1]*(1-l)+s[h+3]*(1-$))}},Z.prototype.transformPoints_sdk1=function(t,i,e,r,o,n,s){for(var _,a,h,l,$,u,p,f=i,c=this._$o,d=this._$A,g=o*s,y=null!=f._$hr?f._$hr:f._$Cr,m=n;m<g;m+=s)at._$ts?(_=e[m],a=e[m+1],_<0?_=0:_>1&&(_=1),a<0?a=0:a>1&&(a=1),_*=c,a*=d,h=0|_,l=0|a,h>c-1&&(h=c-1),l>d-1&&(l=d-1),u=_-h,p=a-l,$=2*(h+l*(c+1))):(_=e[m]*c,a=e[m+1]*d,u=_-(0|_),p=a-(0|a),$=2*((0|_)+(0|a)*(c+1))),u+p<1?(r[m]=y[$]*(1-u-p)+y[$+2]*u+y[$+2*(c+1)]*p,r[m+1]=y[$+1]*(1-u-p)+y[$+3]*u+y[$+2*(c+1)+1]*p):(r[m]=y[$+2*(c+1)+2]*(u-1+p)+y[$+2*(c+1)]*(1-u)+y[$+2]*(1-p),r[m+1]=y[$+2*(c+1)+3]*(u-1+p)+y[$+2*(c+1)+1]*(1-u)+y[$+3]*(1-p))},Z.prototype._$VT=function(){return(this._$o+1)*(this._$A+1)},Z.prototype.getType=function(){return I._$_b},K.prototype=new _t,tt._$42=0,tt.prototype._$zP=function(){this._$3S=new Array,this._$aS=new Array},tt.prototype._$F0=function(t){this._$g0=t._$8L(),this.visible=t._$8L(),this._$NL=t._$nP(),this._$3S=t._$nP(),this._$aS=t._$nP()},tt.prototype.init=function(t){var i=new it(this);return i.setPartsOpacity(this.isVisible()?1:0),i},tt.prototype._$6o=function(t){if(null==this._$3S)throw new Error(\"_$3S _$6 _$Wo@_$6o\");this._$3S.push(t)},tt.prototype._$3o=function(t){if(null==this._$aS)throw new Error(\"_$aS _$6 _$Wo@_$3o\");this._$aS.push(t)},tt.prototype._$Zo=function(t){this._$3S=t},tt.prototype._$xo=function(t){this._$aS=t},tt.prototype.isVisible=function(){return this.visible},tt.prototype._$uL=function(){return this._$g0},tt.prototype._$KP=function(t){this.visible=t},tt.prototype._$ET=function(t){this._$g0=t},tt.prototype.getBaseData=function(){return this._$3S},tt.prototype.getDrawData=function(){return this._$aS},tt.prototype._$p2=function(){return this._$NL},tt.prototype._$ob=function(t){this._$NL=t},tt.prototype.getPartsID=function(){return this._$NL},tt.prototype._$MP=function(t){this._$NL=t},it.prototype=new $,it.prototype.getPartsOpacity=function(){return this._$VS},it.prototype.setPartsOpacity=function(t){this._$VS=t},et._$L7=function(){u._$27(),yt._$27(),b._$27(),l._$27()},et.prototype.toString=function(){return this.id},rt.prototype._$F0=function(t){},ot.prototype._$1s=function(){return this._$4S},ot.prototype._$zP=function(){this._$4S=new Array},ot.prototype._$F0=function(t){this._$4S=t._$nP()},ot.prototype._$Ks=function(t){this._$4S.push(t)},nt.tr=new gt,nt._$50=new gt,nt._$Ti=new Array(0,0),nt._$Pi=new Array(0,0),nt._$B=new Array(0,0),nt.prototype._$lP=function(t,i,e,r){this.viewport=new Array(t,i,e,r)},nt.prototype._$bL=function(){this.context.save();var t=this.viewport;null!=t&&(this.context.beginPath(),this.context._$Li(t[0],t[1],t[2],t[3]),this.context.clip())},nt.prototype._$ei=function(){this.context.restore()},nt.prototype.drawElements=function(t,i,e,r,o,n,s,a){try{o!=this._$Qo&&(this._$Qo=o,this.context.globalAlpha=o);for(var h=i.length,l=t.width,$=t.height,u=this.context,p=this._$xP,f=this._$uP,c=this._$6r,d=this._$3r,g=nt.tr,y=nt._$Ti,m=nt._$Pi,T=nt._$B,P=0;P<h;P+=3){u.save();var S=i[P],v=i[P+1],L=i[P+2],M=p+c*e[2*S],E=f+d*e[2*S+1],A=p+c*e[2*v],I=f+d*e[2*v+1],w=p+c*e[2*L],x=f+d*e[2*L+1];s&&(s._$PS(M,E,T),M=T[0],E=T[1],s._$PS(A,I,T),A=T[0],I=T[1],s._$PS(w,x,T),w=T[0],x=T[1]);var O=l*r[2*S],D=$-$*r[2*S+1],R=l*r[2*v],b=$-$*r[2*v+1],F=l*r[2*L],C=$-$*r[2*L+1],N=Math.atan2(b-D,R-O),B=Math.atan2(I-E,A-M),U=A-M,G=I-E,Y=Math.sqrt(U*U+G*G),k=R-O,V=b-D,X=Math.sqrt(k*k+V*V),z=Y/X;It._$ni(F,C,O,D,R-O,b-D,-(b-D),R-O,y),It._$ni(w,x,M,E,A-M,I-E,-(I-E),A-M,m);var H=(m[0]-y[0])/y[1],W=Math.min(O,R,F),j=Math.max(O,R,F),q=Math.min(D,b,C),J=Math.max(D,b,C),Q=Math.floor(W),Z=Math.floor(q),K=Math.ceil(j),tt=Math.ceil(J);g.identity(),g.translate(M,E),g.rotate(B),g.scale(1,m[1]/y[1]),g.shear(H,0),g.scale(z,z),g.rotate(-N),g.translate(-O,-D),g.setContext(u);if(n||(n=1.2),at.IGNORE_EXPAND&&(n=0),at.USE_CACHED_POLYGON_IMAGE){var it=a._$e0;if(it.gl_cacheImage=it.gl_cacheImage||{},!it.gl_cacheImage[P]){var et=nt.createCanvas(K-Q,tt-Z);at.DEBUG_DATA.LDGL_CANVAS_MB=at.DEBUG_DATA.LDGL_CANVAS_MB||0,at.DEBUG_DATA.LDGL_CANVAS_MB+=(K-Q)*(tt-Z)*4;var rt=et.getContext(\"2d\");rt.translate(-Q,-Z),nt.clip(rt,g,n,Y,O,D,R,b,F,C,M,E,A,I,w,x),rt.drawImage(t,0,0),it.gl_cacheImage[P]={cacheCanvas:et,cacheContext:rt}}u.drawImage(it.gl_cacheImage[P].cacheCanvas,Q,Z)}else at.IGNORE_CLIP||nt.clip(u,g,n,Y,O,D,R,b,F,C,M,E,A,I,w,x),at.USE_ADJUST_TRANSLATION&&(W=0,j=l,q=0,J=$),u.drawImage(t,W,q,j-W,J-q,W,q,j-W,J-q);u.restore()}}catch(t){_._$Rb(t)}},nt.clip=function(t,i,e,r,o,n,s,_,a,h,l,$,u,p,f,c){e>.02?nt.expandClip(t,i,e,r,l,$,u,p,f,c):nt.clipWithTransform(t,null,o,n,s,_,a,h)},nt.expandClip=function(t,i,e,r,o,n,s,_,a,h){var l=s-o,$=_-n,u=a-o,p=h-n,f=l*p-$*u>0?e:-e,c=-$,d=l,g=a-s,y=h-_,m=-y,T=g,P=Math.sqrt(g*g+y*y),S=-p,v=u,L=Math.sqrt(u*u+p*p),M=o-f*c/r,E=n-f*d/r,A=s-f*c/r,I=_-f*d/r,w=s-f*m/P,x=_-f*T/P,O=a-f*m/P,D=h-f*T/P,R=o+f*S/L,b=n+f*v/L,F=a+f*S/L,C=h+f*v/L,N=nt._$50;return null!=i._$P2(N)&&(nt.clipWithTransform(t,N,M,E,A,I,w,x,O,D,F,C,R,b),!0)},nt.clipWithTransform=function(t,i,e,r,o,n,s,a){if(arguments.length<7)return void _._$li(\"err : @LDGL.clip()\");if(!(arguments[1]instanceof gt))return void _._$li(\"err : a[0] is _$6 LDTransform @LDGL.clip()\");var h=nt._$B,l=i,$=arguments;if(t.beginPath(),l){l._$PS($[2],$[3],h),t.moveTo(h[0],h[1]);for(var u=4;u<$.length;u+=2)l._$PS($[u],$[u+1],h),t.lineTo(h[0],h[1])}else{t.moveTo($[2],$[3]);for(var u=4;u<$.length;u+=2)t.lineTo($[u],$[u+1])}t.clip()},nt.createCanvas=function(t,i){var e=document.createElement(\"canvas\");return e.setAttribute(\"width\",t),e.setAttribute(\"height\",i),e||_._$li(\"err : \"+e),e},nt.dumpValues=function(){for(var t=\"\",i=0;i<arguments.length;i++)t+=\"[\"+i+\"]= \"+arguments[i].toFixed(3)+\" , \";console.log(t)},st.prototype._$F0=function(t){this._$TT=t._$_T(),this._$LT=t._$_T(),this._$FS=t._$_T(),this._$wL=t._$nP()},st.prototype.getMinValue=function(){return this._$TT},st.prototype.getMaxValue=function(){return this._$LT},st.prototype.getDefaultValue=function(){return this._$FS},st.prototype.getParamID=function(){return this._$wL},_t.prototype._$yo=function(){return this._$AT&&!this._$JS},_t.prototype._$hS=function(t){this._$AT=t},_t.prototype._$GT=function(){return this._$e0},_t.prototype._$l2=function(t){this._$IP=t},_t.prototype.getPartsIndex=function(){return this._$IP},_t.prototype._$x2=function(){return this._$JS},_t.prototype._$Ib=function(t){this._$JS=t},_t.prototype.getTotalScale=function(){return this.totalScale},_t.prototype.setTotalScale_notForClient=function(t){this.totalScale=t},_t.prototype.getInterpolatedOpacity=function(){return this._$7s},_t.prototype.setInterpolatedOpacity=function(t){this._$7s=t},_t.prototype.getTotalOpacity=function(t){return this.totalOpacity},_t.prototype.setTotalOpacity=function(t){this.totalOpacity=t},at._$2s=\"2.1.00_1\",at._$Kr=201001e3,at._$sP=!0,at._$so=!0,at._$cb=!1,at._$3T=!0,at._$Ts=!0,at._$fb=!0,at._$ts=!0,at.L2D_DEFORMER_EXTEND=!0,at._$Wb=!1;at._$yr=!1,at._$Zs=!1,at.L2D_NO_ERROR=0,at._$i7=1e3,at._$9s=1001,at._$es=1100,at._$r7=2e3,at._$07=2001,at._$b7=2002,at._$H7=4e3,at.L2D_COLOR_BLEND_MODE_MULT=0,at.L2D_COLOR_BLEND_MODE_ADD=1,at.L2D_COLOR_BLEND_MODE_INTERPOLATE=2,at._$6b=!0,at._$cT=0,at.clippingMaskBufferSize=256,at.glContext=new Array,at.frameBuffers=new Array,at.fTexture=new Array,at.IGNORE_CLIP=!1,at.IGNORE_EXPAND=!1,at.EXPAND_W=2,at.USE_ADJUST_TRANSLATION=!0,at.USE_CANVAS_TRANSFORM=!0,at.USE_CACHED_POLYGON_IMAGE=!1,at.DEBUG_DATA={},at.PROFILE_IOS_SPEED={PROFILE_NAME:\"iOS Speed\",USE_ADJUST_TRANSLATION:!0,USE_CACHED_POLYGON_IMAGE:!0,EXPAND_W:4},at.PROFILE_IOS_QUALITY={PROFILE_NAME:\"iOS HiQ\",USE_ADJUST_TRANSLATION:!0,USE_CACHED_POLYGON_IMAGE:!1,EXPAND_W:2},at.PROFILE_IOS_DEFAULT=at.PROFILE_IOS_QUALITY,at.PROFILE_ANDROID={PROFILE_NAME:\"Android\",USE_ADJUST_TRANSLATION:!1,USE_CACHED_POLYGON_IMAGE:!1,EXPAND_W:2},at.PROFILE_DESKTOP={PROFILE_NAME:\"Desktop\",USE_ADJUST_TRANSLATION:!1,USE_CACHED_POLYGON_IMAGE:!1,EXPAND_W:2},at.initProfile=function(){Et.isIOS()?at.setupProfile(at.PROFILE_IOS_DEFAULT):Et.isAndroid()?at.setupProfile(at.PROFILE_ANDROID):at.setupProfile(at.PROFILE_DESKTOP)},at.setupProfile=function(t,i){if(\"number\"==typeof t)switch(t){case 9901:t=at.PROFILE_IOS_SPEED;break;case 9902:t=at.PROFILE_IOS_QUALITY;break;case 9903:t=at.PROFILE_IOS_DEFAULT;break;case 9904:t=at.PROFILE_ANDROID;break;case 9905:t=at.PROFILE_DESKTOP;break;default:alert(\"profile _$6 _$Ui : \"+t)}arguments.length<2&&(i=!0),i&&console.log(\"profile : \"+t.PROFILE_NAME);for(var e in t)at[e]=t[e],i&&console.log(\"  [\"+e+\"] = \"+t[e])},at.init=function(){if(at._$6b){console.log(\"Live2D %s\",at._$2s),at._$6b=!1;!0,at.initProfile()}},at.getVersionStr=function(){return at._$2s},at.getVersionNo=function(){return at._$Kr},at._$sT=function(t){at._$cT=t},at.getError=function(){var t=at._$cT;return at._$cT=0,t},at.dispose=function(){at.glContext=[],at.frameBuffers=[],at.fTexture=[]},at.setGL=function(t,i){var e=i||0;at.glContext[e]=t},at.getGL=function(t){return at.glContext[t]},at.setClippingMaskBufferSize=function(t){at.clippingMaskBufferSize=t},at.getClippingMaskBufferSize=function(){return at.clippingMaskBufferSize},at.deleteBuffer=function(t){at.getGL(t).deleteFramebuffer(at.frameBuffers[t].framebuffer),delete at.frameBuffers[t],delete at.glContext[t]},ht._$r2=function(t){return t<0?0:t>1?1:.5-.5*Math.cos(t*Lt.PI_F)},lt._$fr=-1,lt.prototype.toString=function(){return this._$ib},$t.prototype=new W,$t._$42=0,$t._$Os=30,$t._$ms=0,$t._$ns=1,$t._$_s=2,$t._$gT=new Array,$t.prototype._$_S=function(t){this._$LP=t},$t.prototype.getTextureNo=function(){return this._$LP},$t.prototype._$ZL=function(){return this._$Qi},$t.prototype._$H2=function(){return this._$JP},$t.prototype.getNumPoints=function(){return this._$d0},$t.prototype.getType=function(){return W._$wb},$t.prototype._$B2=function(t,i,e){var r=i,o=null!=r._$hr?r._$hr:r._$Cr;switch(U._$do){default:case U._$Ms:throw new Error(\"_$L _$ro \");case U._$Qs:for(var n=this._$d0-1;n>=0;--n)o[n*U._$No+4]=e}},$t.prototype._$zP=function(){this._$GS=new D,this._$GS._$zP()},$t.prototype._$F0=function(t){W.prototype._$F0.call(this,t),this._$LP=t._$6L(),this._$d0=t._$6L(),this._$Yo=t._$6L();var i=t._$nP();this._$BP=new Int16Array(3*this._$Yo);for(var e=3*this._$Yo-1;e>=0;--e)this._$BP[e]=i[e];if(this._$Eo=t._$nP(),this._$Qi=t._$nP(),t.getFormatVersion()>=G._$s7){if(this._$JP=t._$6L(),0!=this._$JP){if(0!=(1&this._$JP)){var r=t._$6L();null==this._$5P&&(this._$5P=new Object),this._$5P._$Hb=parseInt(r)}0!=(this._$JP&$t._$Os)?this._$6s=(this._$JP&$t._$Os)>>1:this._$6s=$t._$ms,0!=(32&this._$JP)&&(this.culling=!1)}}else this._$JP=0},$t.prototype.init=function(t){var i=new ut(this),e=this._$d0*U._$No,r=this._$32();switch(null!=i._$Cr&&(i._$Cr=null),i._$Cr=new Float32Array(e),null!=i._$hr&&(i._$hr=null),i._$hr=r?new Float32Array(e):null,U._$do){default:case U._$Ms:if(U._$Ls)for(var o=this._$d0-1;o>=0;--o){var n=o<<1;this._$Qi[n+1]=1-this._$Qi[n+1]}break;case U._$Qs:for(var o=this._$d0-1;o>=0;--o){var n=o<<1,s=o*U._$No,_=this._$Qi[n],a=this._$Qi[n+1];i._$Cr[s]=_,i._$Cr[s+1]=a,i._$Cr[s+4]=0,r&&(i._$hr[s]=_,i._$hr[s+1]=a,i._$hr[s+4]=0)}}return i},$t.prototype._$Nr=function(t,i){var e=i;if(this!=e._$GT()&&console.log(\"### assert!! ### \"),this._$GS._$Ur(t)&&(W.prototype._$Nr.call(this,t,e),!e._$IS[0])){var r=$t._$gT;r[0]=!1,v._$Vr(t,this._$GS,r,this._$d0,this._$Eo,e._$Cr,U._$i2,U._$No)}},$t.prototype._$2b=function(t,i){try{this!=i._$GT()&&console.log(\"### assert!! ### \");var e=!1;i._$IS[0]&&(e=!0);var r=i;if(!e&&(W.prototype._$2b.call(this,t),this._$32())){var o=this.getTargetBaseDataID();if(r._$8r==W._$ur&&(r._$8r=t.getBaseDataIndex(o)),r._$8r<0)at._$so&&_._$li(\"_$L _$0P _$G :: %s\",o);else{var n=t.getBaseData(r._$8r),s=t._$q2(r._$8r);null==n||s._$x2()?r._$AT=!1:(n._$nb(t,s,r._$Cr,r._$hr,this._$d0,U._$i2,U._$No),r._$AT=!0),r.baseOpacity=s.getTotalOpacity()}}}catch(t){throw t}},$t.prototype.draw=function(t,i,e){if(this!=e._$GT()&&console.log(\"### assert!! ### \"),!e._$IS[0]){var r=e,o=this._$LP;o<0&&(o=1);var n=this.getOpacity(i,r)*e._$VS*e.baseOpacity,s=null!=r._$hr?r._$hr:r._$Cr;t.setClipBufPre_clipContextForDraw(e.clipBufPre_clipContext),t._$WP(this.culling),t._$Uo(o,3*this._$Yo,this._$BP,s,this._$Qi,n,this._$6s,r)}},$t.prototype.dump=function(){console.log(\"  _$yi( %d ) , _$d0( %d ) , _$Yo( %d ) \\n\",this._$LP,this._$d0,this._$Yo),console.log(\"  _$Oi _$di = { \");for(var t=0;t<this._$BP.length;t++)console.log(\"%5d ,\",this._$BP[t]);console.log(\"\\n  _$5i _$30\");for(var t=0;t<this._$Eo.length;t++){console.log(\"\\n    _$30[%d] = \",t);for(var i=this._$Eo[t],e=0;e<i.length;e++)console.log(\"%6.2f, \",i[e])}console.log(\"\\n\")},$t.prototype._$72=function(t){return null==this._$5P?null:this._$5P[t]},$t.prototype.getIndexArray=function(){return this._$BP},ut.prototype=new Mt,ut.prototype.getTransformedPoints=function(){return null!=this._$hr?this._$hr:this._$Cr},pt.prototype._$HT=function(t){this.x=t.x,this.y=t.y},pt.prototype._$HT=function(t,i){this.x=t,this.y=i},ft.prototype=new i,ft.loadModel=function(t){var e=new ft;return i._$62(e,t),e},ft.loadModel=function(t,e){var r=e||0,o=new ft(r);return i._$62(o,t),o},ft._$to=function(){return new ft},ft._$er=function(t){var i=new _$5(\"../_$_r/_$t0/_$Ri/_$_P._$d\");if(0==i.exists())throw new _$ls(\"_$t0 _$_ _$6 _$Ui :: \"+i._$PL());for(var e=[\"../_$_r/_$t0/_$Ri/_$_P.512/_$CP._$1\",\"../_$_r/_$t0/_$Ri/_$_P.512/_$vP._$1\",\"../_$_r/_$t0/_$Ri/_$_P.512/_$EP._$1\",\"../_$_r/_$t0/_$Ri/_$_P.512/_$pP._$1\"],r=ft.loadModel(i._$3b()),o=0;o<e.length;o++){var n=new _$5(e[o]);if(0==n.exists())throw new _$ls(\"_$t0 _$_ _$6 _$Ui :: \"+n._$PL());r.setTexture(o,_$nL._$_o(t,n._$3b()))}return r},ft.prototype.setGL=function(t){at.setGL(t)},ft.prototype.setTransform=function(t){this.drawParamWebGL.setTransform(t)},ft.prototype.update=function(){this._$5S.update(),this._$5S.preDraw(this.drawParamWebGL)},ft.prototype.draw=function(){this._$5S.draw(this.drawParamWebGL)},ft.prototype._$K2=function(){this.drawParamWebGL._$K2()},ft.prototype.setTexture=function(t,i){null==this.drawParamWebGL&&_._$li(\"_$Yi for QT _$ki / _$XS() is _$6 _$ui!!\"),this.drawParamWebGL.setTexture(t,i)},ft.prototype.setTexture=function(t,i){null==this.drawParamWebGL&&_._$li(\"_$Yi for QT _$ki / _$XS() is _$6 _$ui!!\"),this.drawParamWebGL.setTexture(t,i)},ft.prototype._$Rs=function(){return this.drawParamWebGL._$Rs()},ft.prototype._$Ds=function(t){this.drawParamWebGL._$Ds(t)},ft.prototype.getDrawParam=function(){return this.drawParamWebGL},ft.prototype.setMatrix=function(t){this.drawParamWebGL.setMatrix(t)},ft.prototype.setPremultipliedAlpha=function(t){this.drawParamWebGL.setPremultipliedAlpha(t)},ft.prototype.isPremultipliedAlpha=function(){return this.drawParamWebGL.isPremultipliedAlpha()},ft.prototype.setAnisotropy=function(t){this.drawParamWebGL.setAnisotropy(t)},ft.prototype.getAnisotropy=function(){return this.drawParamWebGL.getAnisotropy()},ct.prototype._$tb=function(){return this.motions},ct.prototype.startMotion=function(t,i){for(var e=null,r=this.motions.length,o=0;o<r;++o)null!=(e=this.motions[o])&&(e._$qS(e._$w0.getFadeOut()),this._$eb&&_._$Ji(\"MotionQueueManager[size:%2d]->startMotion() / start _$K _$3 (m%d)\\n\",r,e._$sr));if(null==t)return-1;e=new dt,e._$w0=t,this.motions.push(e);var n=e._$sr;return this._$eb&&_._$Ji(\"MotionQueueManager[size:%2d]->startMotion() / new _$w0 (m%d)\\n\",r,n),n},ct.prototype.updateParam=function(t){try{for(var i=!1,e=0;e<this.motions.length;e++){var r=this.motions[e];if(null!=r){var o=r._$w0;null!=o?(o.updateParam(t,r),i=!0,r.isFinished()&&(this._$eb&&_._$Ji(\"MotionQueueManager[size:%2d]->updateParam() / _$T0 _$w0 (m%d)\\n\",this.motions.length-1,r._$sr),this.motions.splice(e,1),e--)):(this.motions=this.motions.splice(e,1),e--)}else this.motions.splice(e,1),e--}return i}catch(t){return _._$li(t),!0}},ct.prototype.isFinished=function(t){if(arguments.length>=1){for(var i=0;i<this.motions.length;i++){var e=this.motions[i];if(null!=e&&(e._$sr==t&&!e.isFinished()))return!1}return!0}for(var i=0;i<this.motions.length;i++){var e=this.motions[i];if(null!=e){if(null!=e._$w0){if(!e.isFinished())return!1}else this.motions.splice(i,1),i--}else this.motions.splice(i,1),i--}return!0},ct.prototype.stopAllMotions=function(){for(var t=0;t<this.motions.length;t++){var i=this.motions[t];if(null!=i){i._$w0;this.motions.splice(t,1),t--}else this.motions.splice(t,1),t--}},ct.prototype._$Zr=function(t){this._$eb=t},ct.prototype._$e=function(){console.log(\"-- _$R --\\n\");for(var t=0;t<this.motions.length;t++){var i=this.motions[t],e=i._$w0;console.log(\"MotionQueueEnt[%d] :: %s\\n\",this.motions.length,e.toString())}},dt._$Gs=0,dt.prototype.isFinished=function(){return this._$9L},dt.prototype._$qS=function(t){var i=w.getUserTimeMSec(),e=i+t;(this._$Do<0||e<this._$Do)&&(this._$Do=e)},dt.prototype._$Bs=function(){return this._$sr},gt.prototype.setContext=function(t){var i=this.m;t.transform(i[0],i[1],i[3],i[4],i[6],i[7])},gt.prototype.toString=function(){for(var t=\"LDTransform { \",i=0;i<9;i++)t+=this.m[i].toFixed(2)+\" ,\";return t+=\" }\"},gt.prototype.identity=function(){var t=this.m;t[0]=t[4]=t[8]=1,t[1]=t[2]=t[3]=t[5]=t[6]=t[7]=0},gt.prototype._$PS=function(t,i,e){null==e&&(e=new Array(0,0));var r=this.m;return e[0]=r[0]*t+r[3]*i+r[6],e[1]=r[1]*t+r[4]*i+r[7],e},gt.prototype._$P2=function(t){t||(t=new gt);var i=this.m,e=i[0],r=i[1],o=i[2],n=i[3],s=i[4],_=i[5],a=i[6],h=i[7],l=i[8],$=e*s*l+r*_*a+o*n*h-e*_*h-o*s*a-r*n*l;if(0==$)return null;var u=1/$;return t.m[0]=u*(s*l-h*_),t.m[1]=u*(h*o-r*l),t.m[2]=u*(r*_-s*o),t.m[3]=u*(a*_-n*l),t.m[4]=u*(e*l-a*o),t.m[5]=u*(n*o-e*_),t.m[6]=u*(n*h-a*s),t.m[7]=u*(a*r-e*h),t.m[8]=u*(e*s-n*r),t},gt.prototype.transform=function(t,i,e){null==e&&(e=new Array(0,0));var r=this.m;return e[0]=r[0]*t+r[3]*i+r[6],e[1]=r[1]*t+r[4]*i+r[7],e},gt.prototype.translate=function(t,i){var e=this.m;e[6]=e[0]*t+e[3]*i+e[6],e[7]=e[1]*t+e[4]*i+e[7],e[8]=e[2]*t+e[5]*i+e[8]},gt.prototype.scale=function(t,i){var e=this.m;e[0]*=t,e[1]*=t,e[2]*=t,e[3]*=i,e[4]*=i,e[5]*=i},gt.prototype.shear=function(t,i){var e=this.m,r=e[0]+e[3]*i,o=e[1]+e[4]*i,n=e[2]+e[5]*i;e[3]=e[0]*t+e[3],e[4]=e[1]*t+e[4],e[5]=e[2]*t+e[5],e[0]=r,e[1]=o,e[2]=n},gt.prototype.rotate=function(t){var i=this.m,e=Math.cos(t),r=Math.sin(t),o=i[0]*e+i[3]*r,n=i[1]*e+i[4]*r,s=i[2]*e+i[5]*r;i[3]=-i[0]*r+i[3]*e,i[4]=-i[1]*r+i[4]*e,i[5]=-i[2]*r+i[5]*e,i[0]=o,i[1]=n,i[2]=s},gt.prototype.concatenate=function(t){var i=this.m,e=t.m,r=i[0]*e[0]+i[3]*e[1]+i[6]*e[2],o=i[1]*e[0]+i[4]*e[1]+i[7]*e[2],n=i[2]*e[0]+i[5]*e[1]+i[8]*e[2],s=i[0]*e[3]+i[3]*e[4]+i[6]*e[5],_=i[1]*e[3]+i[4]*e[4]+i[7]*e[5],a=i[2]*e[3]+i[5]*e[4]+i[8]*e[5],h=i[0]*e[6]+i[3]*e[7]+i[6]*e[8],l=i[1]*e[6]+i[4]*e[7]+i[7]*e[8],$=i[2]*e[6]+i[5]*e[7]+i[8]*e[8];m[0]=r,m[1]=o,m[2]=n,m[3]=s,m[4]=_,m[5]=a,m[6]=h,m[7]=l,m[8]=$},yt.prototype=new et,yt._$eT=null,yt._$tP=new Object,yt._$2o=function(){return null==yt._$eT&&(yt._$eT=yt.getID(\"DST_BASE\")),yt._$eT},yt._$27=function(){yt._$tP.clear(),yt._$eT=null},yt.getID=function(t){var i=yt._$tP[t];return null==i&&(i=new yt(t),yt._$tP[t]=i),i},yt.prototype._$3s=function(){return new yt},mt.prototype=new E,mt._$9r=function(t){return new Float32Array(t)},mt._$vb=function(t){return new Int16Array(t)},mt._$cr=function(t,i){return null==t||t._$yL()<i.length?(t=mt._$9r(2*i.length),t.put(i),t._$oT(0)):(t.clear(),t.put(i),t._$oT(0)),t},mt._$mb=function(t,i){return null==t||t._$yL()<i.length?(t=mt._$vb(2*i.length),t.put(i),t._$oT(0)):(t.clear(),t.put(i),t._$oT(0)),t},mt._$Hs=function(){return this._$Gr},mt._$as=function(t){this._$Gr=t},mt.prototype.getGL=function(){return this.gl},mt.prototype.setGL=function(t){this.gl=t},mt.prototype.setTransform=function(t){this.transform=t},mt.prototype._$ZT=function(){var t=this.gl;this.firstDraw&&(this.initShader(),this.firstDraw=!1,this.anisotropyExt=t.getExtension(\"EXT_texture_filter_anisotropic\")||t.getExtension(\"WEBKIT_EXT_texture_filter_anisotropic\")||t.getExtension(\"MOZ_EXT_texture_filter_anisotropic\"),this.anisotropyExt&&(this.maxAnisotropy=t.getParameter(this.anisotropyExt.MAX_TEXTURE_MAX_ANISOTROPY_EXT))),t.disable(t.SCISSOR_TEST),t.disable(t.STENCIL_TEST),t.disable(t.DEPTH_TEST),t.frontFace(t.CW),t.enable(t.BLEND),t.colorMask(1,1,1,1),t.bindBuffer(t.ARRAY_BUFFER,null),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null)},mt.prototype._$Uo=function(t,i,e,r,o,n,s,_){if(!(n<.01&&null==this.clipBufPre_clipContextMask)){var a=(n>.9&&at.EXPAND_W,this.gl);if(null==this.gl)throw new Error(\"gl is null\");var h=1*this._$C0*n,l=1*this._$tT*n,$=1*this._$WL*n,u=this._$lT*n;if(null!=this.clipBufPre_clipContextMask){a.frontFace(a.CCW),a.useProgram(this.shaderProgram),this._$vS=Tt(a,this._$vS,r),this._$no=Pt(a,this._$no,e),a.enableVertexAttribArray(this.a_position_Loc),a.vertexAttribPointer(this.a_position_Loc,2,a.FLOAT,!1,0,0),this._$NT=Tt(a,this._$NT,o),a.activeTexture(a.TEXTURE1),a.bindTexture(a.TEXTURE_2D,this.textures[t]),a.uniform1i(this.s_texture0_Loc,1),a.enableVertexAttribArray(this.a_texCoord_Loc),a.vertexAttribPointer(this.a_texCoord_Loc,2,a.FLOAT,!1,0,0),a.uniformMatrix4fv(this.u_matrix_Loc,!1,this.getClipBufPre_clipContextMask().matrixForMask);var p=this.getClipBufPre_clipContextMask().layoutChannelNo,f=this.getChannelFlagAsColor(p);a.uniform4f(this.u_channelFlag,f.r,f.g,f.b,f.a);var c=this.getClipBufPre_clipContextMask().layoutBounds;a.uniform4f(this.u_baseColor_Loc,2*c.x-1,2*c.y-1,2*c._$EL()-1,2*c._$5T()-1),a.uniform1i(this.u_maskFlag_Loc,!0)}else if(null!=this.getClipBufPre_clipContextDraw()){a.useProgram(this.shaderProgramOff),this._$vS=Tt(a,this._$vS,r),this._$no=Pt(a,this._$no,e),a.enableVertexAttribArray(this.a_position_Loc_Off),a.vertexAttribPointer(this.a_position_Loc_Off,2,a.FLOAT,!1,0,0),this._$NT=Tt(a,this._$NT,o),a.activeTexture(a.TEXTURE1),a.bindTexture(a.TEXTURE_2D,this.textures[t]),a.uniform1i(this.s_texture0_Loc_Off,1),a.enableVertexAttribArray(this.a_texCoord_Loc_Off),a.vertexAttribPointer(this.a_texCoord_Loc_Off,2,a.FLOAT,!1,0,0),a.uniformMatrix4fv(this.u_clipMatrix_Loc_Off,!1,this.getClipBufPre_clipContextDraw().matrixForDraw),a.uniformMatrix4fv(this.u_matrix_Loc_Off,!1,this.matrix4x4),a.activeTexture(a.TEXTURE2),a.bindTexture(a.TEXTURE_2D,at.fTexture[this.glno]),a.uniform1i(this.s_texture1_Loc_Off,2);var p=this.getClipBufPre_clipContextDraw().layoutChannelNo,f=this.getChannelFlagAsColor(p);a.uniform4f(this.u_channelFlag_Loc_Off,f.r,f.g,f.b,f.a),a.uniform4f(this.u_baseColor_Loc_Off,h,l,$,u)}else a.useProgram(this.shaderProgram),this._$vS=Tt(a,this._$vS,r),this._$no=Pt(a,this._$no,e),a.enableVertexAttribArray(this.a_position_Loc),a.vertexAttribPointer(this.a_position_Loc,2,a.FLOAT,!1,0,0),this._$NT=Tt(a,this._$NT,o),a.activeTexture(a.TEXTURE1),a.bindTexture(a.TEXTURE_2D,this.textures[t]),a.uniform1i(this.s_texture0_Loc,1),a.enableVertexAttribArray(this.a_texCoord_Loc),a.vertexAttribPointer(this.a_texCoord_Loc,2,a.FLOAT,!1,0,0),a.uniformMatrix4fv(this.u_matrix_Loc,!1,this.matrix4x4),a.uniform4f(this.u_baseColor_Loc,h,l,$,u),a.uniform1i(this.u_maskFlag_Loc,!1);this.culling?this.gl.enable(a.CULL_FACE):this.gl.disable(a.CULL_FACE),this.gl.enable(a.BLEND);var d,g,y,m;if(null!=this.clipBufPre_clipContextMask)d=a.ONE,g=a.ONE_MINUS_SRC_ALPHA,y=a.ONE,m=a.ONE_MINUS_SRC_ALPHA;else switch(s){case $t._$ms:d=a.ONE,g=a.ONE_MINUS_SRC_ALPHA,y=a.ONE,m=a.ONE_MINUS_SRC_ALPHA;break;case $t._$ns:d=a.ONE,g=a.ONE,y=a.ZERO,m=a.ONE;break;case $t._$_s:d=a.DST_COLOR,g=a.ONE_MINUS_SRC_ALPHA,y=a.ZERO,m=a.ONE}a.blendEquationSeparate(a.FUNC_ADD,a.FUNC_ADD),a.blendFuncSeparate(d,g,y,m),this.anisotropyExt&&a.texParameteri(a.TEXTURE_2D,this.anisotropyExt.TEXTURE_MAX_ANISOTROPY_EXT,this.maxAnisotropy);var T=e.length;a.drawElements(a.TRIANGLES,T,a.UNSIGNED_SHORT,0),a.bindTexture(a.TEXTURE_2D,null)}},mt.prototype._$Rs=function(){throw new Error(\"_$Rs\")},mt.prototype._$Ds=function(t){throw new Error(\"_$Ds\")},mt.prototype._$K2=function(){for(var t=0;t<this.textures.length;t++){0!=this.textures[t]&&(this.gl._$K2(1,this.textures,t),this.textures[t]=null)}},mt.prototype.setTexture=function(t,i){this.textures[t]=i},mt.prototype.initShader=function(){var t=this.gl;this.loadShaders2(),this.a_position_Loc=t.getAttribLocation(this.shaderProgram,\"a_position\"),this.a_texCoord_Loc=t.getAttribLocation(this.shaderProgram,\"a_texCoord\"),this.u_matrix_Loc=t.getUniformLocation(this.shaderProgram,\"u_mvpMatrix\"),this.s_texture0_Loc=t.getUniformLocation(this.shaderProgram,\"s_texture0\"),this.u_channelFlag=t.getUniformLocation(this.shaderProgram,\"u_channelFlag\"),this.u_baseColor_Loc=t.getUniformLocation(this.shaderProgram,\"u_baseColor\"),this.u_maskFlag_Loc=t.getUniformLocation(this.shaderProgram,\"u_maskFlag\"),this.a_position_Loc_Off=t.getAttribLocation(this.shaderProgramOff,\"a_position\"),this.a_texCoord_Loc_Off=t.getAttribLocation(this.shaderProgramOff,\"a_texCoord\"),this.u_matrix_Loc_Off=t.getUniformLocation(this.shaderProgramOff,\"u_mvpMatrix\"),this.u_clipMatrix_Loc_Off=t.getUniformLocation(this.shaderProgramOff,\"u_ClipMatrix\"),this.s_texture0_Loc_Off=t.getUniformLocation(this.shaderProgramOff,\"s_texture0\"),this.s_texture1_Loc_Off=t.getUniformLocation(this.shaderProgramOff,\"s_texture1\"),this.u_channelFlag_Loc_Off=t.getUniformLocation(this.shaderProgramOff,\"u_channelFlag\"),this.u_baseColor_Loc_Off=t.getUniformLocation(this.shaderProgramOff,\"u_baseColor\")},mt.prototype.disposeShader=function(){var t=this.gl;this.shaderProgram&&(t.deleteProgram(this.shaderProgram),this.shaderProgram=null),this.shaderProgramOff&&(t.deleteProgram(this.shaderProgramOff),this.shaderProgramOff=null)},mt.prototype.compileShader=function(t,i){var e=this.gl,r=i,o=e.createShader(t);if(null==o)return _._$Ji(\"_$L0 to create shader\"),null;if(e.shaderSource(o,r),e.compileShader(o),!e.getShaderParameter(o,e.COMPILE_STATUS)){var n=e.getShaderInfoLog(o);return _._$Ji(\"_$L0 to compile shader : \"+n),e.deleteShader(o),null}return o},mt.prototype.loadShaders2=function(){var t=this.gl;if(this.shaderProgram=t.createProgram(),!this.shaderProgram)return!1;if(this.shaderProgramOff=t.createProgram(),!this.shaderProgramOff)return!1;if(this.vertShader=this.compileShader(t.VERTEX_SHADER,\"attribute vec4     a_position;attribute vec2     a_texCoord;varying vec2       v_texCoord;varying vec4       v_ClipPos;uniform mat4       u_mvpMatrix;void main(){    gl_Position = u_mvpMatrix * a_position;    v_ClipPos = u_mvpMatrix * a_position;    v_texCoord = a_texCoord;}\"),!this.vertShader)return _._$Ji(\"Vertex shader compile _$li!\"),!1;if(this.vertShaderOff=this.compileShader(t.VERTEX_SHADER,\"attribute vec4     a_position;attribute vec2     a_texCoord;varying vec2       v_texCoord;varying vec4       v_ClipPos;uniform mat4       u_mvpMatrix;uniform mat4       u_ClipMatrix;void main(){    gl_Position = u_mvpMatrix * a_position;    v_ClipPos = u_ClipMatrix * a_position;    v_texCoord = a_texCoord ;}\"),!this.vertShaderOff)return _._$Ji(\"OffVertex shader compile _$li!\"),!1;if(this.fragShader=this.compileShader(t.FRAGMENT_SHADER,\"precision mediump float;varying vec2       v_texCoord;varying vec4       v_ClipPos;uniform sampler2D  s_texture0;uniform vec4       u_channelFlag;uniform vec4       u_baseColor;uniform bool       u_maskFlag;void main(){    vec4 smpColor;     if(u_maskFlag){        float isInside =             step(u_baseColor.x, v_ClipPos.x/v_ClipPos.w)          * step(u_baseColor.y, v_ClipPos.y/v_ClipPos.w)          * step(v_ClipPos.x/v_ClipPos.w, u_baseColor.z)          * step(v_ClipPos.y/v_ClipPos.w, u_baseColor.w);        smpColor = u_channelFlag * texture2D(s_texture0 , v_texCoord).a * isInside;    }else{        smpColor = texture2D(s_texture0 , v_texCoord) * u_baseColor;    }    gl_FragColor = smpColor;}\"),!this.fragShader)return _._$Ji(\"Fragment shader compile _$li!\"),!1;if(this.fragShaderOff=this.compileShader(t.FRAGMENT_SHADER,\"precision mediump float ;varying vec2       v_texCoord;varying vec4       v_ClipPos;uniform sampler2D  s_texture0;uniform sampler2D  s_texture1;uniform vec4       u_channelFlag;uniform vec4       u_baseColor ;void main(){    vec4 col_formask = texture2D(s_texture0, v_texCoord) * u_baseColor;    vec4 clipMask = texture2D(s_texture1, v_ClipPos.xy / v_ClipPos.w) * u_channelFlag;    float maskVal = clipMask.r + clipMask.g + clipMask.b + clipMask.a;    col_formask = col_formask * maskVal;    gl_FragColor = col_formask;}\"),!this.fragShaderOff)return _._$Ji(\"OffFragment shader compile _$li!\"),!1;if(t.attachShader(this.shaderProgram,this.vertShader),t.attachShader(this.shaderProgram,this.fragShader),t.attachShader(this.shaderProgramOff,this.vertShaderOff),t.attachShader(this.shaderProgramOff,this.fragShaderOff),t.linkProgram(this.shaderProgram),t.linkProgram(this.shaderProgramOff),!t.getProgramParameter(this.shaderProgram,t.LINK_STATUS)){var i=t.getProgramInfoLog(this.shaderProgram);return _._$Ji(\"_$L0 to link program: \"+i),this.vertShader&&(t.deleteShader(this.vertShader),this.vertShader=0),this.fragShader&&(t.deleteShader(this.fragShader),this.fragShader=0),this.shaderProgram&&(t.deleteProgram(this.shaderProgram),this.shaderProgram=0),this.vertShaderOff&&(t.deleteShader(this.vertShaderOff),this.vertShaderOff=0),this.fragShaderOff&&(t.deleteShader(this.fragShaderOff),this.fragShaderOff=0),this.shaderProgramOff&&(t.deleteProgram(this.shaderProgramOff),this.shaderProgramOff=0),!1}return!0},mt.prototype.createFramebuffer=function(){var t=this.gl,i=at.clippingMaskBufferSize,e=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,e);var r=t.createRenderbuffer();t.bindRenderbuffer(t.RENDERBUFFER,r),t.renderbufferStorage(t.RENDERBUFFER,t.RGBA4,i,i),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.RENDERBUFFER,r);var o=t.createTexture();return t.bindTexture(t.TEXTURE_2D,o),t.texImage2D(t.TEXTURE_2D,0,t.RGBA,i,i,0,t.RGBA,t.UNSIGNED_BYTE,null),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.LINEAR),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.LINEAR),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,o,0),t.bindTexture(t.TEXTURE_2D,null),t.bindRenderbuffer(t.RENDERBUFFER,null),t.bindFramebuffer(t.FRAMEBUFFER,null),at.fTexture[this.glno]=o,{framebuffer:e,renderbuffer:r,texture:at.fTexture[this.glno]}},St.prototype._$fP=function(){var t,i,e,r=this._$ST();if(0==(128&r))return 255&r;if(0==(128&(t=this._$ST())))return(127&r)<<7|127&t;if(0==(128&(i=this._$ST())))return(127&r)<<14|(127&t)<<7|255&i;if(0==(128&(e=this._$ST())))return(127&r)<<21|(127&t)<<14|(127&i)<<7|255&e;throw new lt(\"_$L _$0P  _\")},St.prototype.getFormatVersion=function(){return this._$S2},St.prototype._$gr=function(t){this._$S2=t},St.prototype._$3L=function(){return this._$fP()},St.prototype._$mP=function(){return this._$zT(),this._$F+=8,this._$T.getFloat64(this._$F-8)},St.prototype._$_T=function(){return this._$zT(),this._$F+=4,this._$T.getFloat32(this._$F-4)},St.prototype._$6L=function(){return this._$zT(),this._$F+=4,this._$T.getInt32(this._$F-4)},St.prototype._$ST=function(){return this._$zT(),this._$T.getInt8(this._$F++)},St.prototype._$9T=function(){return this._$zT(),this._$F+=2,this._$T.getInt16(this._$F-2)},St.prototype._$2T=function(){throw this._$zT(),this._$F+=8,new lt(\"_$L _$q read long\")},St.prototype._$po=function(){return this._$zT(),0!=this._$T.getInt8(this._$F++)};var xt=!0;St.prototype._$bT=function(){this._$zT();var t=this._$3L(),i=null;if(xt)try{var e=new ArrayBuffer(2*t);i=new Uint16Array(e);for(var r=0;r<t;++r)i[r]=this._$T.getUint8(this._$F++);return String.fromCharCode.apply(null,i)}catch(t){xt=!1}try{var o=new Array;if(null==i)for(var r=0;r<t;++r)o[r]=this._$T.getUint8(this._$F++);else for(var r=0;r<t;++r)o[r]=i[r];return String.fromCharCode.apply(null,o)}catch(t){console.log(\"read utf8 / _$rT _$L0 !! : \"+t)}},St.prototype._$cS=function(){this._$zT();for(var t=this._$3L(),i=new Int32Array(t),e=0;e<t;e++)i[e]=this._$T.getInt32(this._$F),this._$F+=4;return i},St.prototype._$Tb=function(){this._$zT();for(var t=this._$3L(),i=new Float32Array(t),e=0;e<t;e++)i[e]=this._$T.getFloat32(this._$F),this._$F+=4;return i},St.prototype._$5b=function(){this._$zT();for(var t=this._$3L(),i=new Float64Array(t),e=0;e<t;e++)i[e]=this._$T.getFloat64(this._$F),this._$F+=8;return i},St.prototype._$nP=function(){return this._$Jb(-1)},St.prototype._$Jb=function(t){if(this._$zT(),t<0&&(t=this._$3L()),t==G._$7P){var i=this._$6L();if(0<=i&&i<this._$Ko.length)return this._$Ko[i];throw new lt(\"_$sL _$4i @_$m0\")}var e=this._$4b(t);return this._$Ko.push(e),e},St.prototype._$4b=function(t){if(0==t)return null;if(50==t){var i=this._$bT(),e=b.getID(i);return e}if(51==t){var i=this._$bT(),e=yt.getID(i);return e}if(134==t){var i=this._$bT(),e=l.getID(i);return e}if(60==t){var i=this._$bT(),e=u.getID(i);return e}if(t>=48){var r=G._$9o(t);return null!=r?(r._$F0(this),r):null}switch(t){case 1:return this._$bT();case 10:return new n(this._$6L(),!0);case 11:return new S(this._$mP(),this._$mP(),this._$mP(),this._$mP());case 12:return new S(this._$_T(),this._$_T(),this._$_T(),this._$_T());case 13:return new L(this._$mP(),this._$mP());case 14:return new L(this._$_T(),this._$_T());case 15:for(var o=this._$3L(),e=new Array(o),s=0;s<o;s++)e[s]=this._$nP();return e;case 17:var e=new F(this._$mP(),this._$mP(),this._$mP(),this._$mP(),this._$mP(),this._$mP());return e;case 21:return new h(this._$6L(),this._$6L(),this._$6L(),this._$6L());case 22:return new pt(this._$6L(),this._$6L());case 23:throw new Error(\"_$L _$ro \");case 16:case 25:return this._$cS();case 26:return this._$5b();case 27:return this._$Tb();case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 18:case 19:case 20:case 24:case 28:throw new lt(\"_$6 _$q : _$nP() of 2-9 ,18,19,20,24,28 : \"+t);default:throw new lt(\"_$6 _$q : _$nP() NO _$i : \"+t)}},St.prototype._$8L=function(){return 0==this._$hL?this._$v0=this._$ST():8==this._$hL&&(this._$v0=this._$ST(),this._$hL=0),1==(this._$v0>>7-this._$hL++&1)},St.prototype._$zT=function(){0!=this._$hL&&(this._$hL=0)},vt.prototype._$wP=function(t,i,e){for(var r=0;r<e;r++){for(var o=0;o<i;o++){var n=2*(o+r*i);console.log(\"(% 7.3f , % 7.3f) , \",t[n],t[n+1])}console.log(\"\\n\")}console.log(\"\\n\")},Lt._$2S=Math.PI/180,Lt._$bS=Math.PI/180,Lt._$wS=180/Math.PI,Lt._$NS=180/Math.PI,Lt.PI_F=Math.PI,Lt._$kT=[0,.012368,.024734,.037097,.049454,.061803,.074143,.086471,.098786,.111087,.12337,.135634,.147877,.160098,.172295,.184465,.196606,.208718,.220798,.232844,.244854,.256827,.268761,.280654,.292503,.304308,.316066,.327776,.339436,.351044,.362598,.374097,.385538,.396921,.408243,.419502,.430697,.441826,.452888,.463881,.474802,.485651,.496425,.507124,.517745,.528287,.538748,.549126,.559421,.56963,.579752,.589785,.599728,.609579,.619337,.629,.638567,.648036,.657406,.666676,.675843,.684908,.693867,.70272,.711466,.720103,.72863,.737045,.745348,.753536,.76161,.769566,.777405,.785125,.792725,.800204,.807561,.814793,.821901,.828884,.835739,.842467,.849066,.855535,.861873,.868079,.874153,.880093,.885898,.891567,.897101,.902497,.907754,.912873,.917853,.922692,.92739,.931946,.936359,.940629,.944755,.948737,.952574,.956265,.959809,.963207,.966457,.96956,.972514,.97532,.977976,.980482,.982839,.985045,.987101,.989006,.990759,.992361,.993811,.995109,.996254,.997248,.998088,.998776,.999312,.999694,.999924,1],Lt._$92=function(t,i){var e=Math.atan2(t[1],t[0]),r=Math.atan2(i[1],i[0]);return Lt._$tS(e,r)},Lt._$tS=function(t,i){for(var e=t-i;e<-Math.PI;)e+=2*Math.PI;for(;e>Math.PI;)e-=2*Math.PI;return e},Lt._$9=function(t){return Math.sin(t)},Lt.fcos=function(t){return Math.cos(t)},Mt.prototype._$u2=function(){return this._$IS[0]},Mt.prototype._$yo=function(){return this._$AT&&!this._$IS[0]},Mt.prototype._$GT=function(){return this._$e0},Et._$W2=0,Et.SYSTEM_INFO=null,Et.USER_AGENT=navigator.userAgent,Et.isIPhone=function(){return Et.SYSTEM_INFO||Et.setup(),Et.SYSTEM_INFO._isIPhone},Et.isIOS=function(){return Et.SYSTEM_INFO||Et.setup(),Et.SYSTEM_INFO._isIPhone||Et.SYSTEM_INFO._isIPad},Et.isAndroid=function(){return Et.SYSTEM_INFO||Et.setup(),Et.SYSTEM_INFO._isAndroid},Et.getOSVersion=function(){return Et.SYSTEM_INFO||Et.setup(),Et.SYSTEM_INFO.version},Et.getOS=function(){return Et.SYSTEM_INFO||Et.setup(),Et.SYSTEM_INFO._isIPhone||Et.SYSTEM_INFO._isIPad?\"iOS\":Et.SYSTEM_INFO._isAndroid?\"Android\":\"_$Q0 OS\"},Et.setup=function(){function t(t,i){for(var e=t.substring(i).split(/[ _,;\\.]/),r=0,o=0;o<=2&&!isNaN(e[o]);o++){var n=parseInt(e[o]);if(n<0||n>999){_._$li(\"err : \"+n+\" @UtHtml5.setup()\"),r=0;break}r+=n*Math.pow(1e3,2-o)}return r}var i,e=Et.USER_AGENT,r=Et.SYSTEM_INFO={userAgent:e};if((i=e.indexOf(\"iPhone OS \"))>=0)r.os=\"iPhone\",r._isIPhone=!0,r.version=t(e,i+\"iPhone OS \".length);else if((i=e.indexOf(\"iPad\"))>=0){if((i=e.indexOf(\"CPU OS\"))<0)return void _._$li(\" err : \"+e+\" @UtHtml5.setup()\");r.os=\"iPad\",r._isIPad=!0,r.version=t(e,i+\"CPU OS \".length)}else(i=e.indexOf(\"Android\"))>=0?(r.os=\"Android\",r._isAndroid=!0,r.version=t(e,i+\"Android \".length)):(r.os=\"-\",r.version=-1)},window.UtSystem=w,window.UtDebug=_,window.LDTransform=gt,window.LDGL=nt,window.Live2D=at,window.Live2DModelWebGL=ft,window.Live2DModelJS=q,window.Live2DMotion=J,window.MotionQueueManager=ct,window.PhysicsHair=f,window.AMotion=s,window.PartsDataID=l,window.DrawDataID=b,window.BaseDataID=yt,window.ParamID=u,at.init();var At=!1}()}).call(i,e(7))},function(t,i){t.exports={import:function(){throw new Error(\"System.import cannot be used indirectly\")}}},function(t,i,e){\"use strict\";function r(t){return t&&t.__esModule?t:{default:t}}function o(){this.models=[],this.count=-1,this.reloadFlg=!1,Live2D.init(),n.Live2DFramework.setPlatformManager(new _.default)}Object.defineProperty(i,\"__esModule\",{value:!0}),i.default=o;var n=e(0),s=e(9),_=r(s),a=e(10),h=r(a),l=e(1),$=r(l);o.prototype.createModel=function(){var t=new h.default;return this.models.push(t),t},o.prototype.changeModel=function(t,i){if(this.reloadFlg){this.reloadFlg=!1;this.releaseModel(0,t),this.createModel(),this.models[0].load(t,i)}},o.prototype.getModel=function(t){return t>=this.models.length?null:this.models[t]},o.prototype.releaseModel=function(t,i){this.models.length<=t||(this.models[t].release(i),delete this.models[t],this.models.splice(t,1))},o.prototype.numModels=function(){return this.models.length},o.prototype.setDrag=function(t,i){for(var e=0;e<this.models.length;e++)this.models[e].setDrag(t,i)},o.prototype.maxScaleEvent=function(){$.default.DEBUG_LOG&&console.log(\"Max scale event.\");for(var t=0;t<this.models.length;t++)this.models[t].startRandomMotion($.default.MOTION_GROUP_PINCH_IN,$.default.PRIORITY_NORMAL)},o.prototype.minScaleEvent=function(){$.default.DEBUG_LOG&&console.log(\"Min scale event.\");for(var t=0;t<this.models.length;t++)this.models[t].startRandomMotion($.default.MOTION_GROUP_PINCH_OUT,$.default.PRIORITY_NORMAL)},o.prototype.tapEvent=function(t,i){$.default.DEBUG_LOG&&console.log(\"tapEvent view x:\"+t+\" y:\"+i);for(var e=0;e<this.models.length;e++)this.models[e].hitTest($.default.HIT_AREA_HEAD,t,i)?($.default.DEBUG_LOG&&console.log(\"Tap face.\"),this.models[e].setRandomExpression()):this.models[e].hitTest($.default.HIT_AREA_BODY,t,i)?($.default.DEBUG_LOG&&console.log(\"Tap body. models[\"+e+\"]\"),this.models[e].startRandomMotion($.default.MOTION_GROUP_TAP_BODY,$.default.PRIORITY_NORMAL)):this.models[e].hitTestCustom(\"head\",t,i)?($.default.DEBUG_LOG&&console.log(\"Tap face.\"),this.models[e].startRandomMotion($.default.MOTION_GROUP_FLICK_HEAD,$.default.PRIORITY_NORMAL)):this.models[e].hitTestCustom(\"body\",t,i)&&($.default.DEBUG_LOG&&console.log(\"Tap body. models[\"+e+\"]\"),this.models[e].startRandomMotion($.default.MOTION_GROUP_TAP_BODY,$.default.PRIORITY_NORMAL));return!0}},function(t,i,e){\"use strict\";function r(){}Object.defineProperty(i,\"__esModule\",{value:!0}),i.default=r;var o=e(2);var requestCache={};r.prototype.loadBytes=function(t,i){if(requestCache[t]!==undefined){i(requestCache[t]);return;}var e=new XMLHttpRequest;e.open(\"GET\",t,!0),e.responseType=\"arraybuffer\",e.onload=function(){switch(e.status){case 200:requestCache[t]=e.response;i(e.response);break;default:console.error(\"Failed to load (\"+e.status+\") : \"+t)}},e.send(null)},r.prototype.loadString=function(t){this.loadBytes(t,function(t){return t})},r.prototype.loadLive2DModel=function(t,i){var e=null;this.loadBytes(t,function(t){e=Live2DModelWebGL.loadModel(t),i(e)})},r.prototype.loadTexture=function(t,i,e,r){var n=new Image;n.crossOrigin=\"Anonymous\",n.src=e;n.onload=function(){var e=(0,o.getContext)(),s=e.createTexture();if(!s)return console.error(\"Failed to generate gl texture name.\"),-1;0==t.isPremultipliedAlpha()&&e.pixelStorei(e.UNPACK_PREMULTIPLY_ALPHA_WEBGL,1),e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,1),e.activeTexture(e.TEXTURE0),e.bindTexture(e.TEXTURE_2D,s),e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.LINEAR),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.LINEAR_MIPMAP_NEAREST),e.generateMipmap(e.TEXTURE_2D),t.setTexture(i,s),s=null,\"function\"==typeof r&&r()},n.onerror=function(){console.error(\"Failed to load image : \"+e)}},r.prototype.jsonParseFromBytes=function(t){var i,e=new Uint8Array(t,0,3);return i=239==e[0]&&187==e[1]&&191==e[2]?String.fromCharCode.apply(null,new Uint8Array(t,3)):String.fromCharCode.apply(null,new Uint8Array(t)),JSON.parse(i)},r.prototype.log=function(t){}},function(t,i,e){\"use strict\";function r(t){return t&&t.__esModule?t:{default:t}}function o(){n.L2DBaseModel.prototype.constructor.call(this),this.modelHomeDir=\"\",this.modelSetting=null,this.tmpMatrix=[]}Object.defineProperty(i,\"__esModule\",{value:!0}),i.default=o;var n=e(0),s=e(11),_=r(s),a=e(1),h=r(a),l=e(3),$=r(l);o.prototype=new n.L2DBaseModel,o.prototype.load=function(t,i,e){this.setUpdating(!0),this.setInitialized(!1),this.modelHomeDir=i.substring(0,i.lastIndexOf(\"/\")+1),this.modelSetting=new _.default;var r=this;this.modelSetting.loadModelSetting(i,function(){var t=r.modelHomeDir+r.modelSetting.getModelFile();r.loadModelData(t,function(t){for(var i=0;i<r.modelSetting.getTextureNum();i++){if(/^https?:\\/\\/|^\\/\\//i.test(r.modelSetting.getTextureFile(i)))var o=r.modelSetting.getTextureFile(i);else var o=r.modelHomeDir+r.modelSetting.getTextureFile(i);r.loadTexture(i,o,function(){if(r.isTexLoaded){if(r.modelSetting.getExpressionNum()>0){r.expressions={};for(var t=0;t<r.modelSetting.getExpressionNum();t++){var i=r.modelSetting.getExpressionName(t),o=r.modelHomeDir+r.modelSetting.getExpressionFile(t);r.loadExpression(i,o)}}else r.expressionManager=null,r.expressions={};if(r.eyeBlink,null!=r.modelSetting.getPhysicsFile()?r.loadPhysics(r.modelHomeDir+r.modelSetting.getPhysicsFile()):r.physics=null,null!=r.modelSetting.getPoseFile()?r.loadPose(r.modelHomeDir+r.modelSetting.getPoseFile(),function(){r.pose.updateParam(r.live2DModel)}):r.pose=null,null!=r.modelSetting.getLayout()){var n=r.modelSetting.getLayout();null!=n.width&&r.modelMatrix.setWidth(n.width),null!=n.height&&r.modelMatrix.setHeight(n.height),null!=n.x&&r.modelMatrix.setX(n.x),null!=n.y&&r.modelMatrix.setY(n.y),null!=n.center_x&&r.modelMatrix.centerX(n.center_x),null!=n.center_y&&r.modelMatrix.centerY(n.center_y),null!=n.top&&r.modelMatrix.top(n.top),null!=n.bottom&&r.modelMatrix.bottom(n.bottom),null!=n.left&&r.modelMatrix.left(n.left),null!=n.right&&r.modelMatrix.right(n.right)}if(null!=r.modelSetting.getHitAreasCustom()){var s=r.modelSetting.getHitAreasCustom();null!=s.head_x&&(h.default.hit_areas_custom_head_x=s.head_x),null!=s.head_y&&(h.default.hit_areas_custom_head_y=s.head_y),null!=s.body_x&&(h.default.hit_areas_custom_body_x=s.body_x),null!=s.body_y&&(h.default.hit_areas_custom_body_y=s.body_y)}for(var t=0;t<r.modelSetting.getInitParamNum();t++)r.live2DModel.setParamFloat(r.modelSetting.getInitParamID(t),r.modelSetting.getInitParamValue(t));for(var t=0;t<r.modelSetting.getInitPartsVisibleNum();t++)r.live2DModel.setPartsOpacity(r.modelSetting.getInitPartsVisibleID(t),r.modelSetting.getInitPartsVisibleValue(t));r.live2DModel.saveParam(),r.preloadMotionGroup(h.default.MOTION_GROUP_IDLE),r.preloadMotionGroup(h.default.MOTION_GROUP_SLEEPY),r.mainMotionManager.stopAllMotions(),r.setUpdating(!1),r.setInitialized(!0),\"function\"==typeof e&&e()}})}})})},o.prototype.release=function(t){var i=n.Live2DFramework.getPlatformManager();t.deleteTexture(i.texture)},o.prototype.preloadMotionGroup=function(t){for(var i=this,e=0;e<this.modelSetting.getMotionNum(t);e++){var r=this.modelSetting.getMotionFile(t,e);this.loadMotion(r,this.modelHomeDir+r,function(r){r.setFadeIn(i.modelSetting.getMotionFadeIn(t,e)),r.setFadeOut(i.modelSetting.getMotionFadeOut(t,e))})}},o.prototype.update=function(){if(null==this.live2DModel)return void(h.default.DEBUG_LOG&&console.error(\"Failed to update.\"));var t=UtSystem.getUserTimeMSec()-this.startTimeMSec,i=t/1e3,e=2*i*Math.PI;if(this.mainMotionManager.isFinished()){\"1\"===sessionStorage.getItem(\"Sleepy\")?this.startRandomMotion(h.default.MOTION_GROUP_SLEEPY,h.default.PRIORITY_SLEEPY):this.startRandomMotion(h.default.MOTION_GROUP_IDLE,h.default.PRIORITY_IDLE)}this.live2DModel.loadParam(),this.mainMotionManager.updateParam(this.live2DModel)||null!=this.eyeBlink&&this.eyeBlink.updateParam(this.live2DModel),this.live2DModel.saveParam(),null==this.expressionManager||null==this.expressions||this.expressionManager.isFinished()||this.expressionManager.updateParam(this.live2DModel),this.live2DModel.addToParamFloat(\"PARAM_ANGLE_X\",30*this.dragX,1),this.live2DModel.addToParamFloat(\"PARAM_ANGLE_Y\",30*this.dragY,1),this.live2DModel.addToParamFloat(\"PARAM_ANGLE_Z\",this.dragX*this.dragY*-30,1),this.live2DModel.addToParamFloat(\"PARAM_BODY_ANGLE_X\",10*this.dragX,1),this.live2DModel.addToParamFloat(\"PARAM_EYE_BALL_X\",this.dragX,1),this.live2DModel.addToParamFloat(\"PARAM_EYE_BALL_Y\",this.dragY,1),this.live2DModel.addToParamFloat(\"PARAM_ANGLE_X\",Number(15*Math.sin(e/6.5345)),.5),this.live2DModel.addToParamFloat(\"PARAM_ANGLE_Y\",Number(8*Math.sin(e/3.5345)),.5),this.live2DModel.addToParamFloat(\"PARAM_ANGLE_Z\",Number(10*Math.sin(e/5.5345)),.5),this.live2DModel.addToParamFloat(\"PARAM_BODY_ANGLE_X\",Number(4*Math.sin(e/15.5345)),.5),this.live2DModel.setParamFloat(\"PARAM_BREATH\",Number(.5+.5*Math.sin(e/3.2345)),1),null!=this.physics&&this.physics.updateParam(this.live2DModel),null==this.lipSync&&this.live2DModel.setParamFloat(\"PARAM_MOUTH_OPEN_Y\",this.lipSyncValue),null!=this.pose&&this.pose.updateParam(this.live2DModel),this.live2DModel.update()},o.prototype.setRandomExpression=function(){var t=[];for(var i in this.expressions)t.push(i);var e=parseInt(Math.random()*t.length);this.setExpression(t[e])},o.prototype.startRandomMotion=function(t,i){var e=this.modelSetting.getMotionNum(t),r=parseInt(Math.random()*e);this.startMotion(t,r,i)},o.prototype.startMotion=function(t,i,e){var r=this.modelSetting.getMotionFile(t,i);if(null==r||\"\"==r)return void(h.default.DEBUG_LOG&&console.error(\"Failed to motion.\"));if(e==h.default.PRIORITY_FORCE)this.mainMotionManager.setReservePriority(e);else if(!this.mainMotionManager.reserveMotion(e))return void(h.default.DEBUG_LOG&&console.log(\"Motion is running.\"));var o,n=this;null==this.motions[t]?this.loadMotion(null,this.modelHomeDir+r,function(r){o=r,n.setFadeInFadeOut(t,i,e,o)}):(o=this.motions[t],n.setFadeInFadeOut(t,i,e,o))},o.prototype.setFadeInFadeOut=function(t,i,e,r){var o=this.modelSetting.getMotionFile(t,i);if(r.setFadeIn(this.modelSetting.getMotionFadeIn(t,i)),r.setFadeOut(this.modelSetting.getMotionFadeOut(t,i)),h.default.DEBUG_LOG&&console.log(\"Start motion : \"+o),null==this.modelSetting.getMotionSound(t,i))this.mainMotionManager.startMotionPrio(r,e);else{var n=this.modelSetting.getMotionSound(t,i),s=document.createElement(\"audio\");s.src=this.modelHomeDir+n,h.default.DEBUG_LOG&&console.log(\"Start sound : \"+n),s.play(),this.mainMotionManager.startMotionPrio(r,e)}},o.prototype.setExpression=function(t){var i=this.expressions[t];h.default.DEBUG_LOG&&console.log(\"Expression : \"+t),this.expressionManager.startMotion(i,!1)},o.prototype.draw=function(t){$.default.push(),$.default.multMatrix(this.modelMatrix.getArray()),this.tmpMatrix=$.default.getMatrix(),this.live2DModel.setMatrix(this.tmpMatrix),this.live2DModel.draw(),$.default.pop()},o.prototype.hitTest=function(t,i,e){for(var r=this.modelSetting.getHitAreaNum(),o=0;o<r;o++)if(t==this.modelSetting.getHitAreaName(o)){var n=this.modelSetting.getHitAreaID(o);return this.hitTestSimple(n,i,e)}return!1},o.prototype.hitTestCustom=function(t,i,e){return\"head\"==t?this.hitTestSimpleCustom(h.default.hit_areas_custom_head_x,h.default.hit_areas_custom_head_y,i,e):\"body\"==t&&this.hitTestSimpleCustom(h.default.hit_areas_custom_body_x,h.default.hit_areas_custom_body_y,i,e)}},function(t,i,e){\"use strict\";function r(){this.NAME=\"name\",this.ID=\"id\",this.MODEL=\"model\",this.TEXTURES=\"textures\",this.HIT_AREAS=\"hit_areas\",this.PHYSICS=\"physics\",this.POSE=\"pose\",this.EXPRESSIONS=\"expressions\",this.MOTION_GROUPS=\"motions\",this.SOUND=\"sound\",this.FADE_IN=\"fade_in\",this.FADE_OUT=\"fade_out\",this.LAYOUT=\"layout\",this.HIT_AREAS_CUSTOM=\"hit_areas_custom\",this.INIT_PARAM=\"init_param\",this.INIT_PARTS_VISIBLE=\"init_parts_visible\",this.VALUE=\"val\",this.FILE=\"file\",this.json={}}Object.defineProperty(i,\"__esModule\",{value:!0}),i.default=r;var o=e(0);r.prototype.loadModelSetting=function(t,i){var e=this;o.Live2DFramework.getPlatformManager().loadBytes(t,function(t){var r=String.fromCharCode.apply(null,new Uint8Array(t));e.json=JSON.parse(r),i()})},r.prototype.getTextureFile=function(t){return null==this.json[this.TEXTURES]||null==this.json[this.TEXTURES][t]?null:this.json[this.TEXTURES][t]},r.prototype.getModelFile=function(){return this.json[this.MODEL]},r.prototype.getTextureNum=function(){return null==this.json[this.TEXTURES]?0:this.json[this.TEXTURES].length},r.prototype.getHitAreaNum=function(){return null==this.json[this.HIT_AREAS]?0:this.json[this.HIT_AREAS].length},r.prototype.getHitAreaID=function(t){return null==this.json[this.HIT_AREAS]||null==this.json[this.HIT_AREAS][t]?null:this.json[this.HIT_AREAS][t][this.ID]},r.prototype.getHitAreaName=function(t){return null==this.json[this.HIT_AREAS]||null==this.json[this.HIT_AREAS][t]?null:this.json[this.HIT_AREAS][t][this.NAME]},r.prototype.getPhysicsFile=function(){return this.json[this.PHYSICS]},r.prototype.getPoseFile=function(){return this.json[this.POSE]},r.prototype.getExpressionNum=function(){return null==this.json[this.EXPRESSIONS]?0:this.json[this.EXPRESSIONS].length},r.prototype.getExpressionFile=function(t){return null==this.json[this.EXPRESSIONS]?null:this.json[this.EXPRESSIONS][t][this.FILE]},r.prototype.getExpressionName=function(t){return null==this.json[this.EXPRESSIONS]?null:this.json[this.EXPRESSIONS][t][this.NAME]},r.prototype.getLayout=function(){return this.json[this.LAYOUT]},r.prototype.getHitAreasCustom=function(){return this.json[this.HIT_AREAS_CUSTOM]},r.prototype.getInitParamNum=function(){return null==this.json[this.INIT_PARAM]?0:this.json[this.INIT_PARAM].length},r.prototype.getMotionNum=function(t){return null==this.json[this.MOTION_GROUPS]||null==this.json[this.MOTION_GROUPS][t]?0:this.json[this.MOTION_GROUPS][t].length},r.prototype.getMotionFile=function(t,i){return null==this.json[this.MOTION_GROUPS]||null==this.json[this.MOTION_GROUPS][t]||null==this.json[this.MOTION_GROUPS][t][i]?null:this.json[this.MOTION_GROUPS][t][i][this.FILE]},r.prototype.getMotionSound=function(t,i){return null==this.json[this.MOTION_GROUPS]||null==this.json[this.MOTION_GROUPS][t]||null==this.json[this.MOTION_GROUPS][t][i]||null==this.json[this.MOTION_GROUPS][t][i][this.SOUND]?null:this.json[this.MOTION_GROUPS][t][i][this.SOUND]},r.prototype.getMotionFadeIn=function(t,i){return null==this.json[this.MOTION_GROUPS]||null==this.json[this.MOTION_GROUPS][t]||null==this.json[this.MOTION_GROUPS][t][i]||null==this.json[this.MOTION_GROUPS][t][i][this.FADE_IN]?1e3:this.json[this.MOTION_GROUPS][t][i][this.FADE_IN]},r.prototype.getMotionFadeOut=function(t,i){return null==this.json[this.MOTION_GROUPS]||null==this.json[this.MOTION_GROUPS][t]||null==this.json[this.MOTION_GROUPS][t][i]||null==this.json[this.MOTION_GROUPS][t][i][this.FADE_OUT]?1e3:this.json[this.MOTION_GROUPS][t][i][this.FADE_OUT]},r.prototype.getInitParamID=function(t){return null==this.json[this.INIT_PARAM]||null==this.json[this.INIT_PARAM][t]?null:this.json[this.INIT_PARAM][t][this.ID]},r.prototype.getInitParamValue=function(t){return null==this.json[this.INIT_PARAM]||null==this.json[this.INIT_PARAM][t]?NaN:this.json[this.INIT_PARAM][t][this.VALUE]},r.prototype.getInitPartsVisibleNum=function(){return null==this.json[this.INIT_PARTS_VISIBLE]?0:this.json[this.INIT_PARTS_VISIBLE].length},r.prototype.getInitPartsVisibleID=function(t){return null==this.json[this.INIT_PARTS_VISIBLE]||null==this.json[this.INIT_PARTS_VISIBLE][t]?null:this.json[this.INIT_PARTS_VISIBLE][t][this.ID]},r.prototype.getInitPartsVisibleValue=function(t){return null==this.json[this.INIT_PARTS_VISIBLE]||null==this.json[this.INIT_PARTS_VISIBLE][t]?NaN:this.json[this.INIT_PARTS_VISIBLE][t][this.VALUE]}}]);\n","source":"live2d-widget/live2d.min.js","raw":"!function(t){function i(r){if(e[r])return e[r].exports;var o=e[r]={i:r,l:!1,exports:{}};return t[r].call(o.exports,o,o.exports,i),o.l=!0,o.exports}var e={};i.m=t,i.c=e,i.d=function(t,e,r){i.o(t,e)||Object.defineProperty(t,e,{configurable:!1,enumerable:!0,get:r})},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,\"a\",e),e},i.o=function(t,i){return Object.prototype.hasOwnProperty.call(t,i)},i.p=\"\",i(i.s=4)}([function(t,i,e){\"use strict\";function r(){this.live2DModel=null,this.modelMatrix=null,this.eyeBlink=null,this.physics=null,this.pose=null,this.debugMode=!1,this.initialized=!1,this.updating=!1,this.alpha=1,this.accAlpha=0,this.lipSync=!1,this.lipSyncValue=0,this.accelX=0,this.accelY=0,this.accelZ=0,this.dragX=0,this.dragY=0,this.startTimeMSec=null,this.mainMotionManager=new h,this.expressionManager=new h,this.motions={},this.expressions={},this.isTexLoaded=!1}function o(){AMotion.prototype.constructor.call(this),this.paramList=new Array}function n(){this.id=\"\",this.type=-1,this.value=null}function s(){this.nextBlinkTime=null,this.stateStartTime=null,this.blinkIntervalMsec=null,this.eyeState=g.STATE_FIRST,this.blinkIntervalMsec=4e3,this.closingMotionMsec=100,this.closedMotionMsec=50,this.openingMotionMsec=150,this.closeIfZero=!0,this.eyeID_L=\"PARAM_EYE_L_OPEN\",this.eyeID_R=\"PARAM_EYE_R_OPEN\"}function _(){this.tr=new Float32Array(16),this.identity()}function a(t,i){_.prototype.constructor.call(this),this.width=t,this.height=i}function h(){MotionQueueManager.prototype.constructor.call(this),this.currentPriority=null,this.reservePriority=null,this.super=MotionQueueManager.prototype}function l(){this.physicsList=new Array,this.startTimeMSec=UtSystem.getUserTimeMSec()}function $(){this.lastTime=0,this.lastModel=null,this.partsGroups=new Array}function u(t){this.paramIndex=-1,this.partsIndex=-1,this.link=null,this.id=t}function p(){this.EPSILON=.01,this.faceTargetX=0,this.faceTargetY=0,this.faceX=0,this.faceY=0,this.faceVX=0,this.faceVY=0,this.lastTimeSec=0}function f(){_.prototype.constructor.call(this),this.screenLeft=null,this.screenRight=null,this.screenTop=null,this.screenBottom=null,this.maxLeft=null,this.maxRight=null,this.maxTop=null,this.maxBottom=null,this.max=Number.MAX_VALUE,this.min=0}function c(){}var d=0;r.prototype.getModelMatrix=function(){return this.modelMatrix},r.prototype.setAlpha=function(t){t>.999&&(t=1),t<.001&&(t=0),this.alpha=t},r.prototype.getAlpha=function(){return this.alpha},r.prototype.isInitialized=function(){return this.initialized},r.prototype.setInitialized=function(t){this.initialized=t},r.prototype.isUpdating=function(){return this.updating},r.prototype.setUpdating=function(t){this.updating=t},r.prototype.getLive2DModel=function(){return this.live2DModel},r.prototype.setLipSync=function(t){this.lipSync=t},r.prototype.setLipSyncValue=function(t){this.lipSyncValue=t},r.prototype.setAccel=function(t,i,e){this.accelX=t,this.accelY=i,this.accelZ=e},r.prototype.setDrag=function(t,i){this.dragX=t,this.dragY=i},r.prototype.getMainMotionManager=function(){return this.mainMotionManager},r.prototype.getExpressionManager=function(){return this.expressionManager},r.prototype.loadModelData=function(t,i){var e=c.getPlatformManager();this.debugMode&&e.log(\"Load model : \"+t);var r=this;e.loadLive2DModel(t,function(t){if(r.live2DModel=t,r.live2DModel.saveParam(),0!=Live2D.getError())return void console.error(\"Error : Failed to loadModelData().\");r.modelMatrix=new a(r.live2DModel.getCanvasWidth(),r.live2DModel.getCanvasHeight()),r.modelMatrix.setWidth(2),r.modelMatrix.setCenterPosition(0,0),i(r.live2DModel)})},r.prototype.loadTexture=function(t,i,e){d++;var r=c.getPlatformManager();this.debugMode&&r.log(\"Load Texture : \"+i);var o=this;r.loadTexture(this.live2DModel,t,i,function(){d--,0==d&&(o.isTexLoaded=!0),\"function\"==typeof e&&e()})},r.prototype.loadMotion=function(t,i,e){var r=c.getPlatformManager();this.debugMode&&r.log(\"Load Motion : \"+i);var o=null,n=this;r.loadBytes(i,function(i){o=Live2DMotion.loadMotion(i),null!=t&&(n.motions[t]=o),e(o)})},r.prototype.loadExpression=function(t,i,e){var r=c.getPlatformManager();this.debugMode&&r.log(\"Load Expression : \"+i);var n=this;r.loadBytes(i,function(i){null!=t&&(n.expressions[t]=o.loadJson(i)),\"function\"==typeof e&&e()})},r.prototype.loadPose=function(t,i){var e=c.getPlatformManager();this.debugMode&&e.log(\"Load Pose : \"+t);var r=this;try{e.loadBytes(t,function(t){r.pose=$.load(t),\"function\"==typeof i&&i()})}catch(t){console.warn(t)}},r.prototype.loadPhysics=function(t){var i=c.getPlatformManager();this.debugMode&&i.log(\"Load Physics : \"+t);var e=this;try{i.loadBytes(t,function(t){e.physics=l.load(t)})}catch(t){console.warn(t)}},r.prototype.hitTestSimple=function(t,i,e){if(null===this.live2DModel)return!1;var r=this.live2DModel.getDrawDataIndex(t);if(r<0)return!1;for(var o=this.live2DModel.getTransformedPoints(r),n=this.live2DModel.getCanvasWidth(),s=0,_=this.live2DModel.getCanvasHeight(),a=0,h=0;h<o.length;h+=2){var l=o[h],$=o[h+1];l<n&&(n=l),l>s&&(s=l),$<_&&(_=$),$>a&&(a=$)}var u=this.modelMatrix.invertTransformX(i),p=this.modelMatrix.invertTransformY(e);return n<=u&&u<=s&&_<=p&&p<=a},r.prototype.hitTestSimpleCustom=function(t,i,e,r){return null!==this.live2DModel&&(e>=t[0]&&e<=i[0]&&r<=t[1]&&r>=i[1])},o.prototype=new AMotion,o.EXPRESSION_DEFAULT=\"DEFAULT\",o.TYPE_SET=0,o.TYPE_ADD=1,o.TYPE_MULT=2,o.loadJson=function(t){var i=new o,e=c.getPlatformManager(),r=e.jsonParseFromBytes(t);if(i.setFadeIn(parseInt(r.fade_in)>0?parseInt(r.fade_in):1e3),i.setFadeOut(parseInt(r.fade_out)>0?parseInt(r.fade_out):1e3),null==r.params)return i;var s=r.params,_=s.length;i.paramList=[];for(var a=0;a<_;a++){var h=s[a],l=h.id.toString(),$=parseFloat(h.val),u=o.TYPE_ADD,p=null!=h.calc?h.calc.toString():\"add\";if((u=\"add\"===p?o.TYPE_ADD:\"mult\"===p?o.TYPE_MULT:\"set\"===p?o.TYPE_SET:o.TYPE_ADD)==o.TYPE_ADD){var f=null==h.def?0:parseFloat(h.def);$-=f}else if(u==o.TYPE_MULT){var f=null==h.def?1:parseFloat(h.def);0==f&&(f=1),$/=f}var d=new n;d.id=l,d.type=u,d.value=$,i.paramList.push(d)}return i},o.prototype.updateParamExe=function(t,i,e,r){for(var n=this.paramList.length-1;n>=0;--n){var s=this.paramList[n];s.type==o.TYPE_ADD?t.addToParamFloat(s.id,s.value,e):s.type==o.TYPE_MULT?t.multParamFloat(s.id,s.value,e):s.type==o.TYPE_SET&&t.setParamFloat(s.id,s.value,e)}},s.prototype.calcNextBlink=function(){return UtSystem.getUserTimeMSec()+Math.random()*(2*this.blinkIntervalMsec-1)},s.prototype.setInterval=function(t){this.blinkIntervalMsec=t},s.prototype.setEyeMotion=function(t,i,e){this.closingMotionMsec=t,this.closedMotionMsec=i,this.openingMotionMsec=e},s.prototype.updateParam=function(t){var i,e=UtSystem.getUserTimeMSec(),r=0;switch(this.eyeState){case g.STATE_CLOSING:r=(e-this.stateStartTime)/this.closingMotionMsec,r>=1&&(r=1,this.eyeState=g.STATE_CLOSED,this.stateStartTime=e),i=1-r;break;case g.STATE_CLOSED:r=(e-this.stateStartTime)/this.closedMotionMsec,r>=1&&(this.eyeState=g.STATE_OPENING,this.stateStartTime=e),i=0;break;case g.STATE_OPENING:r=(e-this.stateStartTime)/this.openingMotionMsec,r>=1&&(r=1,this.eyeState=g.STATE_INTERVAL,this.nextBlinkTime=this.calcNextBlink()),i=r;break;case g.STATE_INTERVAL:this.nextBlinkTime<e&&(this.eyeState=g.STATE_CLOSING,this.stateStartTime=e),i=1;break;case g.STATE_FIRST:default:this.eyeState=g.STATE_INTERVAL,this.nextBlinkTime=this.calcNextBlink(),i=1}this.closeIfZero||(i=-i),t.setParamFloat(this.eyeID_L,i),t.setParamFloat(this.eyeID_R,i)};var g=function(){};g.STATE_FIRST=\"STATE_FIRST\",g.STATE_INTERVAL=\"STATE_INTERVAL\",g.STATE_CLOSING=\"STATE_CLOSING\",g.STATE_CLOSED=\"STATE_CLOSED\",g.STATE_OPENING=\"STATE_OPENING\",_.mul=function(t,i,e){var r,o,n,s=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];for(r=0;r<4;r++)for(o=0;o<4;o++)for(n=0;n<4;n++)s[r+4*o]+=t[r+4*n]*i[n+4*o];for(r=0;r<16;r++)e[r]=s[r]},_.prototype.identity=function(){for(var t=0;t<16;t++)this.tr[t]=t%5==0?1:0},_.prototype.getArray=function(){return this.tr},_.prototype.getCopyMatrix=function(){return new Float32Array(this.tr)},_.prototype.setMatrix=function(t){if(null!=this.tr&&this.tr.length==this.tr.length)for(var i=0;i<16;i++)this.tr[i]=t[i]},_.prototype.getScaleX=function(){return this.tr[0]},_.prototype.getScaleY=function(){return this.tr[5]},_.prototype.transformX=function(t){return this.tr[0]*t*8/3+this.tr[12]},_.prototype.transformY=function(t){return this.tr[5]*t*8/3+this.tr[13]},_.prototype.invertTransformX=function(t){return(t-this.tr[12])/this.tr[0]},_.prototype.invertTransformY=function(t){return(t-this.tr[13])/this.tr[5]},_.prototype.multTranslate=function(t,i){var e=[1,0,0,0,0,1,0,0,0,0,1,0,t,i,0,1];_.mul(e,this.tr,this.tr)},_.prototype.translate=function(t,i){this.tr[12]=t,this.tr[13]=i},_.prototype.translateX=function(t){this.tr[12]=t},_.prototype.translateY=function(t){this.tr[13]=t},_.prototype.multScale=function(t,i){var e=[t,0,0,0,0,i,0,0,0,0,1,0,0,0,0,1];_.mul(e,this.tr,this.tr)},_.prototype.scale=function(t,i){this.tr[0]=t,this.tr[5]=i},a.prototype=new _,a.prototype.setPosition=function(t,i){this.translate(t,i)},a.prototype.setCenterPosition=function(t,i){var e=this.width*this.getScaleX(),r=this.height*this.getScaleY();this.translate(t-e/2,i-r/2)},a.prototype.top=function(t){this.setY(t)},a.prototype.bottom=function(t){var i=this.height*this.getScaleY();this.translateY(t-i)},a.prototype.left=function(t){this.setX(t)},a.prototype.right=function(t){var i=this.width*this.getScaleX();this.translateX(t-i)},a.prototype.centerX=function(t){var i=this.width*this.getScaleX();this.translateX(t-i/2)},a.prototype.centerY=function(t){var i=this.height*this.getScaleY();this.translateY(t-i/2)},a.prototype.setX=function(t){this.translateX(t)},a.prototype.setY=function(t){this.translateY(t)},a.prototype.setHeight=function(t){var i=t/this.height,e=-i;this.scale(i,e)},a.prototype.setWidth=function(t){var i=t/this.width,e=-i;this.scale(i,e)},h.prototype=new MotionQueueManager,h.prototype.getCurrentPriority=function(){return this.currentPriority},h.prototype.getReservePriority=function(){return this.reservePriority},h.prototype.reserveMotion=function(t){return!(this.reservePriority>=t)&&(!(this.currentPriority>=t)&&(this.reservePriority=t,!0))},h.prototype.setReservePriority=function(t){this.reservePriority=t},h.prototype.updateParam=function(t){var i=MotionQueueManager.prototype.updateParam.call(this,t);return this.isFinished()&&(this.currentPriority=0),i},h.prototype.startMotionPrio=function(t,i){return i==this.reservePriority&&(this.reservePriority=0),this.currentPriority=i,this.startMotion(t,!1)},l.load=function(t){for(var i=new l,e=c.getPlatformManager(),r=e.jsonParseFromBytes(t),o=r.physics_hair,n=o.length,s=0;s<n;s++){var _=o[s],a=new PhysicsHair,h=_.setup,$=parseFloat(h.length),u=parseFloat(h.regist),p=parseFloat(h.mass);a.setup($,u,p);for(var f=_.src,d=f.length,g=0;g<d;g++){var y=f[g],m=y.id,T=PhysicsHair.Src.SRC_TO_X,P=y.ptype;\"x\"===P?T=PhysicsHair.Src.SRC_TO_X:\"y\"===P?T=PhysicsHair.Src.SRC_TO_Y:\"angle\"===P?T=PhysicsHair.Src.SRC_TO_G_ANGLE:UtDebug.error(\"live2d\",\"Invalid parameter:PhysicsHair.Src\");var S=parseFloat(y.scale),v=parseFloat(y.weight);a.addSrcParam(T,m,S,v)}for(var L=_.targets,M=L.length,g=0;g<M;g++){var E=L[g],m=E.id,T=PhysicsHair.Target.TARGET_FROM_ANGLE,P=E.ptype;\"angle\"===P?T=PhysicsHair.Target.TARGET_FROM_ANGLE:\"angle_v\"===P?T=PhysicsHair.Target.TARGET_FROM_ANGLE_V:UtDebug.error(\"live2d\",\"Invalid parameter:PhysicsHair.Target\");var S=parseFloat(E.scale),v=parseFloat(E.weight);a.addTargetParam(T,m,S,v)}i.physicsList.push(a)}return i},l.prototype.updateParam=function(t){for(var i=UtSystem.getUserTimeMSec()-this.startTimeMSec,e=0;e<this.physicsList.length;e++)this.physicsList[e].update(t,i)},$.load=function(t){for(var i=new $,e=c.getPlatformManager(),r=e.jsonParseFromBytes(t),o=r.parts_visible,n=o.length,s=0;s<n;s++){for(var _=o[s],a=_.group,h=a.length,l=new Array,p=0;p<h;p++){var f=a[p],d=new u(f.id);if(l[p]=d,null!=f.link){var g=f.link,y=g.length;d.link=new Array;for(var m=0;m<y;m++){var T=new u(g[m]);d.link.push(T)}}}i.partsGroups.push(l)}return i},$.prototype.updateParam=function(t){if(null!=t){t!=this.lastModel&&this.initParam(t),this.lastModel=t;var i=UtSystem.getUserTimeMSec(),e=0==this.lastTime?0:(i-this.lastTime)/1e3;this.lastTime=i,e<0&&(e=0);for(var r=0;r<this.partsGroups.length;r++)this.normalizePartsOpacityGroup(t,this.partsGroups[r],e),this.copyOpacityOtherParts(t,this.partsGroups[r])}},$.prototype.initParam=function(t){if(null!=t)for(var i=0;i<this.partsGroups.length;i++)for(var e=this.partsGroups[i],r=0;r<e.length;r++){e[r].initIndex(t);var o=e[r].partsIndex,n=e[r].paramIndex;if(!(o<0)){var s=0!=t.getParamFloat(n);if(t.setPartsOpacity(o,s?1:0),t.setParamFloat(n,s?1:0),null!=e[r].link)for(var _=0;_<e[r].link.length;_++)e[r].link[_].initIndex(t)}}},$.prototype.normalizePartsOpacityGroup=function(t,i,e){for(var r=-1,o=1,n=0;n<i.length;n++){var s=i[n].partsIndex,_=i[n].paramIndex;if(!(s<0)&&0!=t.getParamFloat(_)){if(r>=0)break;r=n,o=t.getPartsOpacity(s),o+=e/.5,o>1&&(o=1)}}r<0&&(r=0,o=1);for(var n=0;n<i.length;n++){var s=i[n].partsIndex;if(!(s<0))if(r==n)t.setPartsOpacity(s,o);else{var a,h=t.getPartsOpacity(s);a=o<.5?-.5*o/.5+1:.5*(1-o)/.5;var l=(1-a)*(1-o);l>.15&&(a=1-.15/(1-o)),h>a&&(h=a),t.setPartsOpacity(s,h)}}},$.prototype.copyOpacityOtherParts=function(t,i){for(var e=0;e<i.length;e++){var r=i[e];if(null!=r.link&&!(r.partsIndex<0))for(var o=t.getPartsOpacity(r.partsIndex),n=0;n<r.link.length;n++){var s=r.link[n];s.partsIndex<0||t.setPartsOpacity(s.partsIndex,o)}}},u.prototype.initIndex=function(t){this.paramIndex=t.getParamIndex(\"VISIBLE:\"+this.id),this.partsIndex=t.getPartsDataIndex(PartsDataID.getID(this.id)),t.setParamFloat(this.paramIndex,1)},p.FRAME_RATE=30,p.prototype.setPoint=function(t,i){this.faceTargetX=t,this.faceTargetY=i},p.prototype.getX=function(){return this.faceX},p.prototype.getY=function(){return this.faceY},p.prototype.update=function(){var t=40/7.5/p.FRAME_RATE;if(0==this.lastTimeSec)return void(this.lastTimeSec=UtSystem.getUserTimeMSec());var i=UtSystem.getUserTimeMSec(),e=(i-this.lastTimeSec)*p.FRAME_RATE/1e3;this.lastTimeSec=i;var r=.15*p.FRAME_RATE,o=e*t/r,n=this.faceTargetX-this.faceX,s=this.faceTargetY-this.faceY;if(!(Math.abs(n)<=this.EPSILON&&Math.abs(s)<=this.EPSILON)){var _=Math.sqrt(n*n+s*s),a=t*n/_,h=t*s/_,l=a-this.faceVX,$=h-this.faceVY,u=Math.sqrt(l*l+$*$);(u<-o||u>o)&&(l*=o/u,$*=o/u,u=o),this.faceVX+=l,this.faceVY+=$;var f=.5*(Math.sqrt(o*o+16*o*_-8*o*_)-o),c=Math.sqrt(this.faceVX*this.faceVX+this.faceVY*this.faceVY);c>f&&(this.faceVX*=f/c,this.faceVY*=f/c),this.faceX+=this.faceVX,this.faceY+=this.faceVY}},f.prototype=new _,f.prototype.getMaxScale=function(){return this.max},f.prototype.getMinScale=function(){return this.min},f.prototype.setMaxScale=function(t){this.max=t},f.prototype.setMinScale=function(t){this.min=t},f.prototype.isMaxScale=function(){return this.getScaleX()==this.max},f.prototype.isMinScale=function(){return this.getScaleX()==this.min},f.prototype.adjustTranslate=function(t,i){this.tr[0]*this.maxLeft+(this.tr[12]+t)>this.screenLeft&&(t=this.screenLeft-this.tr[0]*this.maxLeft-this.tr[12]),this.tr[0]*this.maxRight+(this.tr[12]+t)<this.screenRight&&(t=this.screenRight-this.tr[0]*this.maxRight-this.tr[12]),this.tr[5]*this.maxTop+(this.tr[13]+i)<this.screenTop&&(i=this.screenTop-this.tr[5]*this.maxTop-this.tr[13]),this.tr[5]*this.maxBottom+(this.tr[13]+i)>this.screenBottom&&(i=this.screenBottom-this.tr[5]*this.maxBottom-this.tr[13]);var e=[1,0,0,0,0,1,0,0,0,0,1,0,t,i,0,1];_.mul(e,this.tr,this.tr)},f.prototype.adjustScale=function(t,i,e){var r=e*this.tr[0];r<this.min?this.tr[0]>0&&(e=this.min/this.tr[0]):r>this.max&&this.tr[0]>0&&(e=this.max/this.tr[0]);var o=[1,0,0,0,0,1,0,0,0,0,1,0,t,i,0,1],n=[e,0,0,0,0,e,0,0,0,0,1,0,0,0,0,1],s=[1,0,0,0,0,1,0,0,0,0,1,0,-t,-i,0,1];_.mul(s,this.tr,this.tr),_.mul(n,this.tr,this.tr),_.mul(o,this.tr,this.tr)},f.prototype.setScreenRect=function(t,i,e,r){this.screenLeft=t,this.screenRight=i,this.screenTop=r,this.screenBottom=e},f.prototype.setMaxScreenRect=function(t,i,e,r){this.maxLeft=t,this.maxRight=i,this.maxTop=r,this.maxBottom=e},f.prototype.getScreenLeft=function(){return this.screenLeft},f.prototype.getScreenRight=function(){return this.screenRight},f.prototype.getScreenBottom=function(){return this.screenBottom},f.prototype.getScreenTop=function(){return this.screenTop},f.prototype.getMaxLeft=function(){return this.maxLeft},f.prototype.getMaxRight=function(){return this.maxRight},f.prototype.getMaxBottom=function(){return this.maxBottom},f.prototype.getMaxTop=function(){return this.maxTop},c.platformManager=null,c.getPlatformManager=function(){return c.platformManager},c.setPlatformManager=function(t){c.platformManager=t},t.exports={L2DTargetPoint:p,Live2DFramework:c,L2DViewMatrix:f,L2DPose:$,L2DPartsParam:u,L2DPhysics:l,L2DMotionManager:h,L2DModelMatrix:a,L2DMatrix44:_,EYE_STATE:g,L2DEyeBlink:s,L2DExpressionParam:n,L2DExpressionMotion:o,L2DBaseModel:r}},function(t,i,e){\"use strict\";var r={DEBUG_LOG:!1,DEBUG_MOUSE_LOG:!1,DEBUG_DRAW_HIT_AREA:!1,DEBUG_DRAW_ALPHA_MODEL:!1,VIEW_MAX_SCALE:2,VIEW_MIN_SCALE:.8,VIEW_LOGICAL_LEFT:-1,VIEW_LOGICAL_RIGHT:1,VIEW_LOGICAL_MAX_LEFT:-2,VIEW_LOGICAL_MAX_RIGHT:2,VIEW_LOGICAL_MAX_BOTTOM:-2,VIEW_LOGICAL_MAX_TOP:2,PRIORITY_NONE:0,PRIORITY_IDLE:1,PRIORITY_SLEEPY:2,PRIORITY_NORMAL:3,PRIORITY_FORCE:4,MOTION_GROUP_IDLE:\"idle\",MOTION_GROUP_SLEEPY:\"sleepy\",MOTION_GROUP_TAP_BODY:\"tap_body\",MOTION_GROUP_FLICK_HEAD:\"flick_head\",MOTION_GROUP_PINCH_IN:\"pinch_in\",MOTION_GROUP_PINCH_OUT:\"pinch_out\",MOTION_GROUP_SHAKE:\"shake\",HIT_AREA_HEAD:\"head\",HIT_AREA_BODY:\"body\"};t.exports=r},function(t,i,e){\"use strict\";function r(t){n=t}function o(){return n}Object.defineProperty(i,\"__esModule\",{value:!0}),i.setContext=r,i.getContext=o;var n=void 0},function(t,i,e){\"use strict\";function r(){}r.matrixStack=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],r.depth=0,r.currentMatrix=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],r.tmp=new Array(16),r.reset=function(){this.depth=0},r.loadIdentity=function(){for(var t=0;t<16;t++)this.currentMatrix[t]=t%5==0?1:0},r.push=function(){var t=(this.depth,16*(this.depth+1));this.matrixStack.length<t+16&&(this.matrixStack.length=t+16);for(var i=0;i<16;i++)this.matrixStack[t+i]=this.currentMatrix[i];this.depth++},r.pop=function(){--this.depth<0&&(myError(\"Invalid matrix stack.\"),this.depth=0);for(var t=16*this.depth,i=0;i<16;i++)this.currentMatrix[i]=this.matrixStack[t+i]},r.getMatrix=function(){return this.currentMatrix},r.multMatrix=function(t){var i,e,r;for(i=0;i<16;i++)this.tmp[i]=0;for(i=0;i<4;i++)for(e=0;e<4;e++)for(r=0;r<4;r++)this.tmp[i+4*e]+=this.currentMatrix[i+4*r]*t[r+4*e];for(i=0;i<16;i++)this.currentMatrix[i]=this.tmp[i]},t.exports=r},function(t,i,e){t.exports=e(5)},function(t,i,e){\"use strict\";function r(t){return t&&t.__esModule?t:{default:t}}function o(t){C=document.getElementById(t),C.addEventListener&&(window.addEventListener(\"click\",g),window.addEventListener(\"mousedown\",g),window.addEventListener(\"mousemove\",g),window.addEventListener(\"mouseup\",g),document.addEventListener(\"mouseout\",g),window.addEventListener(\"touchstart\",y),window.addEventListener(\"touchend\",y),window.addEventListener(\"touchmove\",y))}function n(t){var i=C.width,e=C.height;N=new M.L2DTargetPoint;var r=e/i,o=w.default.VIEW_LOGICAL_LEFT,n=w.default.VIEW_LOGICAL_RIGHT,_=-r,h=r;if(window.Live2D.captureFrame=!1,B=new M.L2DViewMatrix,B.setScreenRect(o,n,_,h),B.setMaxScreenRect(w.default.VIEW_LOGICAL_MAX_LEFT,w.default.VIEW_LOGICAL_MAX_RIGHT,w.default.VIEW_LOGICAL_MAX_BOTTOM,w.default.VIEW_LOGICAL_MAX_TOP),B.setMaxScale(w.default.VIEW_MAX_SCALE),B.setMinScale(w.default.VIEW_MIN_SCALE),U=new M.L2DMatrix44,U.multScale(1,i/e),G=new M.L2DMatrix44,G.multTranslate(-i/2,-e/2),G.multScale(2/i,-2/i),F=v(),(0,D.setContext)(F),!F)return console.error(\"Failed to create WebGL context.\"),void(window.WebGLRenderingContext&&console.error(\"Your browser don't support WebGL, check https://get.webgl.org/ for futher information.\"));window.Live2D.setGL(F),F.clearColor(0,0,0,0),a(t),s()}function s(){b||(b=!0,function t(){_();var i=window.requestAnimationFrame||window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame||window.msRequestAnimationFrame;if(window.Live2D.captureFrame){window.Live2D.captureFrame=!1;var e=document.createElement(\"a\");document.body.appendChild(e),e.setAttribute(\"type\",\"hidden\"),e.href=C.toDataURL(),e.download=window.Live2D.captureName||\"live2d.png\",e.click()}i(t,C)}())}function _(){O.default.reset(),O.default.loadIdentity(),N.update(),R.setDrag(N.getX(),N.getY()),F.clear(F.COLOR_BUFFER_BIT),O.default.multMatrix(U.getArray()),O.default.multMatrix(B.getArray()),O.default.push();for(var t=0;t<R.numModels();t++){var i=R.getModel(t);if(null==i)return;i.initialized&&!i.updating&&(i.update(),i.draw(F))}O.default.pop()}function a(t){R.reloadFlg=!0,R.count++,R.changeModel(F,t)}function h(t,i){return t.x*i.x+t.y*i.y}function l(t,i){var e=Math.sqrt(t*t+i*i);return{x:t/e,y:i/e}}function $(t,i,e){function r(t,i){return 180*Math.acos(h({x:0,y:1},l(t,i)))/Math.PI}if(i.x<e.left+e.width&&i.y<e.top+e.height&&i.x>e.left&&i.y>e.top)return i;var o=t.x-i.x,n=t.y-i.y,s=r(o,n);i.x<t.x&&(s=360-s);var _=360-r(e.left-t.x,-1*(e.top-t.y)),a=360-r(e.left-t.x,-1*(e.top+e.height-t.y)),$=r(e.left+e.width-t.x,-1*(e.top-t.y)),u=r(e.left+e.width-t.x,-1*(e.top+e.height-t.y)),p=n/o,f={};if(s<$){var c=e.top-t.y,d=c/p;f={y:t.y+c,x:t.x+d}}else if(s<u){var g=e.left+e.width-t.x,y=g*p;f={y:t.y+y,x:t.x+g}}else if(s<a){var m=e.top+e.height-t.y,T=m/p;f={y:t.y+m,x:t.x+T}}else if(s<_){var P=t.x-e.left,S=P*p;f={y:t.y-S,x:t.x-P}}else{var v=e.top-t.y,L=v/p;f={y:t.y+v,x:t.x+L}}return f}function u(t){Y=!0;var i=C.getBoundingClientRect(),e=P(t.clientX-i.left),r=S(t.clientY-i.top),o=$({x:i.left+i.width/2,y:i.top+i.height*X},{x:t.clientX,y:t.clientY},i),n=m(o.x-i.left),s=T(o.y-i.top);w.default.DEBUG_MOUSE_LOG&&console.log(\"onMouseMove device( x:\"+t.clientX+\" y:\"+t.clientY+\" ) view( x:\"+n+\" y:\"+s+\")\"),k=e,V=r,N.setPoint(n,s)}function p(t){Y=!0;var i=C.getBoundingClientRect(),e=P(t.clientX-i.left),r=S(t.clientY-i.top),o=$({x:i.left+i.width/2,y:i.top+i.height*X},{x:t.clientX,y:t.clientY},i),n=m(o.x-i.left),s=T(o.y-i.top);w.default.DEBUG_MOUSE_LOG&&console.log(\"onMouseDown device( x:\"+t.clientX+\" y:\"+t.clientY+\" ) view( x:\"+n+\" y:\"+s+\")\"),k=e,V=r,R.tapEvent(n,s)}function f(t){var i=C.getBoundingClientRect(),e=P(t.clientX-i.left),r=S(t.clientY-i.top),o=$({x:i.left+i.width/2,y:i.top+i.height*X},{x:t.clientX,y:t.clientY},i),n=m(o.x-i.left),s=T(o.y-i.top);w.default.DEBUG_MOUSE_LOG&&console.log(\"onMouseMove device( x:\"+t.clientX+\" y:\"+t.clientY+\" ) view( x:\"+n+\" y:\"+s+\")\"),Y&&(k=e,V=r,N.setPoint(n,s))}function c(){Y&&(Y=!1),N.setPoint(0,0)}function d(){w.default.DEBUG_LOG&&console.log(\"Set Session Storage.\"),sessionStorage.setItem(\"Sleepy\",\"1\")}function g(t){if(\"mousewheel\"==t.type);else if(\"mousedown\"==t.type)p(t);else if(\"mousemove\"==t.type){var i=sessionStorage.getItem(\"Sleepy\");\"1\"===i&&sessionStorage.setItem(\"Sleepy\",\"0\"),u(t)}else if(\"mouseup\"==t.type){if(\"button\"in t&&0!=t.button)return}else if(\"mouseout\"==t.type){w.default.DEBUG_LOG&&console.log(\"Mouse out Window.\"),c();var e=sessionStorage.getItem(\"SleepyTimer\");window.clearTimeout(e),e=window.setTimeout(d,5e4),sessionStorage.setItem(\"SleepyTimer\",e)}}function y(t){var i=t.touches[0];\"touchstart\"==t.type?1==t.touches.length&&u(i):\"touchmove\"==t.type?f(i):\"touchend\"==t.type&&c()}function m(t){var i=G.transformX(t);return B.invertTransformX(i)}function T(t){var i=G.transformY(t);return B.invertTransformY(i)}function P(t){return G.transformX(t)}function S(t){return G.transformY(t)}function v(){for(var t=[\"webgl\",\"experimental-webgl\",\"webkit-3d\",\"moz-webgl\"],i=0;i<t.length;i++)try{var e=C.getContext(t[i],{premultipliedAlpha:!0});if(e)return e}catch(t){}return null}function L(t,i,e){X=void 0===e?.5:e,o(t),n(i)}e(6);var M=e(0),E=e(8),A=r(E),I=e(1),w=r(I),x=e(3),O=r(x),D=e(2),R=(window.navigator.platform.toLowerCase(),new A.default),b=!1,F=null,C=null,N=null,B=null,U=null,G=null,Y=!1,k=0,V=0,X=.5;window.loadlive2d=L},function(t,i,e){\"use strict\";(function(t){!function(){function i(){At||(this._$MT=null,this._$5S=null,this._$NP=0,i._$42++,this._$5S=new Y(this))}function e(t){if(!At){this.clipContextList=new Array,this.glcontext=t.gl,this.dp_webgl=t,this.curFrameNo=0,this.firstError_clipInNotUpdate=!0,this.colorBuffer=0,this.isInitGLFBFunc=!1,this.tmpBoundsOnModel=new S,at.glContext.length>at.frameBuffers.length&&(this.curFrameNo=this.getMaskRenderTexture()),this.tmpModelToViewMatrix=new R,this.tmpMatrix2=new R,this.tmpMatrixForMask=new R,this.tmpMatrixForDraw=new R,this.CHANNEL_COLORS=new Array;var i=new A;i=new A,i.r=0,i.g=0,i.b=0,i.a=1,this.CHANNEL_COLORS.push(i),i=new A,i.r=1,i.g=0,i.b=0,i.a=0,this.CHANNEL_COLORS.push(i),i=new A,i.r=0,i.g=1,i.b=0,i.a=0,this.CHANNEL_COLORS.push(i),i=new A,i.r=0,i.g=0,i.b=1,i.a=0,this.CHANNEL_COLORS.push(i);for(var e=0;e<this.CHANNEL_COLORS.length;e++)this.dp_webgl.setChannelFlagAsColor(e,this.CHANNEL_COLORS[e])}}function r(t,i,e){this.clipIDList=new Array,this.clipIDList=e,this.clippingMaskDrawIndexList=new Array;for(var r=0;r<e.length;r++)this.clippingMaskDrawIndexList.push(i.getDrawDataIndex(e[r]));this.clippedDrawContextList=new Array,this.isUsing=!0,this.layoutChannelNo=0,this.layoutBounds=new S,this.allClippedDrawRect=new S,this.matrixForMask=new Float32Array(16),this.matrixForDraw=new Float32Array(16),this.owner=t}function o(t,i){this._$gP=t,this.drawDataIndex=i}function n(){At||(this.color=null)}function s(){At||(this._$dP=null,this._$eo=null,this._$V0=null,this._$dP=1e3,this._$eo=1e3,this._$V0=1,this._$a0())}function _(){}function a(){this._$r=null,this._$0S=null}function h(){At||(this.x=null,this.y=null,this.width=null,this.height=null)}function l(t){At||et.prototype.constructor.call(this,t)}function $(){}function u(t){At||et.prototype.constructor.call(this,t)}function p(){At||(this._$vo=null,this._$F2=null,this._$ao=400,this._$1S=400,p._$42++)}function f(){At||(this.p1=new c,this.p2=new c,this._$Fo=0,this._$Db=0,this._$L2=0,this._$M2=0,this._$ks=0,this._$9b=0,this._$iP=0,this._$iT=0,this._$lL=new Array,this._$qP=new Array,this.setup(.3,.5,.1))}function c(){this._$p=1,this.x=0,this.y=0,this.vx=0,this.vy=0,this.ax=0,this.ay=0,this.fx=0,this.fy=0,this._$s0=0,this._$70=0,this._$7L=0,this._$HL=0}function d(t,i,e){this._$wL=null,this.scale=null,this._$V0=null,this._$wL=t,this.scale=i,this._$V0=e}function g(t,i,e,r){d.prototype.constructor.call(this,i,e,r),this._$tL=null,this._$tL=t}function y(t,i,e){this._$wL=null,this.scale=null,this._$V0=null,this._$wL=t,this.scale=i,this._$V0=e}function T(t,i,e,r){y.prototype.constructor.call(this,i,e,r),this._$YP=null,this._$YP=t}function P(){At||(this._$fL=0,this._$gL=0,this._$B0=1,this._$z0=1,this._$qT=0,this.reflectX=!1,this.reflectY=!1)}function S(){At||(this.x=null,this.y=null,this.width=null,this.height=null)}function v(){}function L(){At||(this.x=null,this.y=null)}function M(){At||(this._$gP=null,this._$dr=null,this._$GS=null,this._$qb=null,this._$Lb=null,this._$mS=null,this.clipID=null,this.clipIDList=new Array)}function E(){At||(this._$Eb=E._$ps,this._$lT=1,this._$C0=1,this._$tT=1,this._$WL=1,this.culling=!1,this.matrix4x4=new Float32Array(16),this.premultipliedAlpha=!1,this.anisotropy=0,this.clippingProcess=E.CLIPPING_PROCESS_NONE,this.clipBufPre_clipContextMask=null,this.clipBufPre_clipContextDraw=null,this.CHANNEL_COLORS=new Array)}function A(){At||(this.a=1,this.r=1,this.g=1,this.b=1,this.scale=1,this._$ho=1,this.blendMode=at.L2D_COLOR_BLEND_MODE_MULT)}function I(){At||(this._$kP=null,this._$dr=null,this._$Ai=!0,this._$mS=null)}function w(){}function x(){At||(this._$VP=0,this._$wL=null,this._$GP=null,this._$8o=x._$ds,this._$2r=-1,this._$O2=0,this._$ri=0)}function O(){}function D(){At||(this._$Ob=null)}function R(){this.m=new Float32Array(16),this.identity()}function b(t){At||et.prototype.constructor.call(this,t)}function F(){At||(this._$7=1,this._$f=0,this._$H=0,this._$g=1,this._$k=0,this._$w=0,this._$hi=STATE_IDENTITY,this._$Z=_$pS)}function C(){At||(s.prototype.constructor.call(this),this.motions=new Array,this._$7r=null,this._$7r=C._$Co++,this._$D0=30,this._$yT=0,this._$E=!0,this.loopFadeIn=!0,this._$AS=-1,_$a0())}function N(){this._$P=new Float32Array(100),this.size=0}function B(){this._$4P=null,this._$I0=null,this._$RP=null}function U(){}function G(){}function Y(t){At||(this._$QT=!0,this._$co=-1,this._$qo=0,this._$pb=new Array(Y._$is),this._$_2=new Float32Array(Y._$is),this._$vr=new Float32Array(Y._$is),this._$Rr=new Float32Array(Y._$is),this._$Or=new Float32Array(Y._$is),this._$fs=new Float32Array(Y._$is),this._$Js=new Array(Y._$is),this._$3S=new Array,this._$aS=new Array,this._$Bo=null,this._$F2=new Array,this._$db=new Array,this._$8b=new Array,this._$Hr=new Array,this._$Ws=null,this._$Vs=null,this._$Er=null,this._$Es=new Int16Array(U._$Qb),this._$ZP=new Float32Array(2*U._$1r),this._$Ri=t,this._$b0=Y._$HP++,this.clipManager=null,this.dp_webgl=null)}function k(){}function V(){At||(this._$12=null,this._$bb=null,this._$_L=null,this._$jo=null,this._$iL=null,this._$0L=null,this._$Br=null,this._$Dr=null,this._$Cb=null,this._$mr=null,this._$_L=wt.STATE_FIRST,this._$Br=4e3,this._$Dr=100,this._$Cb=50,this._$mr=150,this._$jo=!0,this._$iL=\"PARAM_EYE_L_OPEN\",this._$0L=\"PARAM_EYE_R_OPEN\")}function X(){At||(E.prototype.constructor.call(this),this._$sb=new Int32Array(X._$As),this._$U2=new Array,this.transform=null,this.gl=null,null==X._$NT&&(X._$NT=X._$9r(256),X._$vS=X._$9r(256),X._$no=X._$vb(256)))}function z(){At||(I.prototype.constructor.call(this),this._$GS=null,this._$Y0=null)}function H(t){_t.prototype.constructor.call(this,t),this._$8r=I._$ur,this._$Yr=null,this._$Wr=null}function W(){At||(M.prototype.constructor.call(this),this._$gP=null,this._$dr=null,this._$GS=null,this._$qb=null,this._$Lb=null,this._$mS=null)}function j(){At||(this._$NL=null,this._$3S=null,this._$aS=null,j._$42++)}function q(){At||(i.prototype.constructor.call(this),this._$zo=new X)}function J(){At||(s.prototype.constructor.call(this),this.motions=new Array,this._$o2=null,this._$7r=J._$Co++,this._$D0=30,this._$yT=0,this._$E=!1,this.loopFadeIn=!0,this._$rr=-1,this._$eP=0)}function Q(t,i){return String.fromCharCode(t.getUint8(i))}function N(){this._$P=new Float32Array(100),this.size=0}function B(){this._$4P=null,this._$I0=null,this._$RP=null}function Z(){At||(I.prototype.constructor.call(this),this._$o=0,this._$A=0,this._$GS=null,this._$Eo=null)}function K(t){_t.prototype.constructor.call(this,t),this._$8r=I._$ur,this._$Cr=null,this._$hr=null}function tt(){At||(this.visible=!0,this._$g0=!1,this._$NL=null,this._$3S=null,this._$aS=null,tt._$42++)}function it(t){this._$VS=null,this._$e0=null,this._$e0=t}function et(t){At||(this.id=t)}function rt(){}function ot(){At||(this._$4S=null)}function nt(t,i){this.canvas=t,this.context=i,this.viewport=new Array(0,0,t.width,t.height),this._$6r=1,this._$xP=0,this._$3r=1,this._$uP=0,this._$Qo=-1,this.cacheImages={}}function st(){At||(this._$TT=null,this._$LT=null,this._$FS=null,this._$wL=null)}function _t(t){At||(this._$e0=null,this._$IP=null,this._$JS=!1,this._$AT=!0,this._$e0=t,this.totalScale=1,this._$7s=1,this.totalOpacity=1)}function at(){}function ht(){}function lt(t){At||(this._$ib=t)}function $t(){At||(W.prototype.constructor.call(this),this._$LP=-1,this._$d0=0,this._$Yo=0,this._$JP=null,this._$5P=null,this._$BP=null,this._$Eo=null,this._$Qi=null,this._$6s=$t._$ms,this.culling=!0,this.gl_cacheImage=null,this.instanceNo=$t._$42++)}function ut(t){Mt.prototype.constructor.call(this,t),this._$8r=W._$ur,this._$Cr=null,this._$hr=null}function pt(){At||(this.x=null,this.y=null)}function ft(t){At||(i.prototype.constructor.call(this),this.drawParamWebGL=new mt(t),this.drawParamWebGL.setGL(at.getGL(t)))}function ct(){At||(this.motions=null,this._$eb=!1,this.motions=new Array)}function dt(){this._$w0=null,this._$AT=!0,this._$9L=!1,this._$z2=-1,this._$bs=-1,this._$Do=-1,this._$sr=null,this._$sr=dt._$Gs++}function gt(){this.m=new Array(1,0,0,0,1,0,0,0,1)}function yt(t){At||et.prototype.constructor.call(this,t)}function mt(t){At||(E.prototype.constructor.call(this),this.textures=new Array,this.transform=null,this.gl=null,this.glno=t,this.firstDraw=!0,this.anisotropyExt=null,this.maxAnisotropy=0,this._$As=32,this._$Gr=!1,this._$NT=null,this._$vS=null,this._$no=null,this.vertShader=null,this.fragShader=null,this.vertShaderOff=null,this.fragShaderOff=null)}function Tt(t,i,e){return null==i&&(i=t.createBuffer()),t.bindBuffer(t.ARRAY_BUFFER,i),t.bufferData(t.ARRAY_BUFFER,e,t.DYNAMIC_DRAW),i}function Pt(t,i,e){return null==i&&(i=t.createBuffer()),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,i),t.bufferData(t.ELEMENT_ARRAY_BUFFER,e,t.DYNAMIC_DRAW),i}function St(t){At||(this._$P=new Int8Array(8),this._$R0=new DataView(this._$P.buffer),this._$3i=new Int8Array(1e3),this._$hL=0,this._$v0=0,this._$S2=0,this._$Ko=new Array,this._$T=t,this._$F=0)}function vt(){}function Lt(){}function Mt(t){At||(this._$e0=null,this._$IP=null,this._$Us=null,this._$7s=null,this._$IS=[!1],this._$VS=null,this._$AT=!0,this.baseOpacity=1,this.clipBufPre_clipContext=null,this._$e0=t)}function Et(){}var At=!0;i._$0s=1,i._$4s=2,i._$42=0,i._$62=function(t,e){try{if(e instanceof ArrayBuffer&&(e=new DataView(e)),!(e instanceof DataView))throw new lt(\"_$SS#loadModel(b) / b _$x be DataView or ArrayBuffer\");var r,o=new St(e),n=o._$ST(),s=o._$ST(),a=o._$ST();if(109!=n||111!=s||99!=a)throw new lt(\"_$gi _$C _$li , _$Q0 _$P0.\");if(r=o._$ST(),o._$gr(r),r>G._$T7){t._$NP|=i._$4s;throw new lt(\"_$gi _$C _$li , _$n0 _$_ version _$li ( SDK : \"+G._$T7+\" < _$f0 : \"+r+\" )@_$SS#loadModel()\\n\")}var h=o._$nP();if(r>=G._$s7){var l=o._$9T(),$=o._$9T();if(-30584!=l||-30584!=$)throw t._$NP|=i._$0s,new lt(\"_$gi _$C _$li , _$0 _$6 _$Ui.\")}t._$KS(h);var u=t.getModelContext();u.setDrawParam(t.getDrawParam()),u.init()}catch(t){_._$Rb(t)}},i.prototype._$KS=function(t){this._$MT=t},i.prototype.getModelImpl=function(){return null==this._$MT&&(this._$MT=new p,this._$MT._$zP()),this._$MT},i.prototype.getCanvasWidth=function(){return null==this._$MT?0:this._$MT.getCanvasWidth()},i.prototype.getCanvasHeight=function(){return null==this._$MT?0:this._$MT.getCanvasHeight()},i.prototype.getParamFloat=function(t){return\"number\"!=typeof t&&(t=this._$5S.getParamIndex(u.getID(t))),this._$5S.getParamFloat(t)},i.prototype.setParamFloat=function(t,i,e){\"number\"!=typeof t&&(t=this._$5S.getParamIndex(u.getID(t))),arguments.length<3&&(e=1),this._$5S.setParamFloat(t,this._$5S.getParamFloat(t)*(1-e)+i*e)},i.prototype.addToParamFloat=function(t,i,e){\"number\"!=typeof t&&(t=this._$5S.getParamIndex(u.getID(t))),arguments.length<3&&(e=1),this._$5S.setParamFloat(t,this._$5S.getParamFloat(t)+i*e)},i.prototype.multParamFloat=function(t,i,e){\"number\"!=typeof t&&(t=this._$5S.getParamIndex(u.getID(t))),arguments.length<3&&(e=1),this._$5S.setParamFloat(t,this._$5S.getParamFloat(t)*(1+(i-1)*e))},i.prototype.getParamIndex=function(t){return this._$5S.getParamIndex(u.getID(t))},i.prototype.loadParam=function(){this._$5S.loadParam()},i.prototype.saveParam=function(){this._$5S.saveParam()},i.prototype.init=function(){this._$5S.init()},i.prototype.update=function(){this._$5S.update()},i.prototype._$Rs=function(){return _._$li(\"_$60 _$PT _$Rs()\"),-1},i.prototype._$Ds=function(t){_._$li(\"_$60 _$PT _$SS#_$Ds() \\n\")},i.prototype._$K2=function(){},i.prototype.draw=function(){},i.prototype.getModelContext=function(){return this._$5S},i.prototype._$s2=function(){return this._$NP},i.prototype._$P7=function(t,i,e,r){var o=-1,n=0,s=this;if(0!=e)if(1==t.length){var _=t[0],a=0!=s.getParamFloat(_),h=i[0],l=s.getPartsOpacity(h),$=e/r;a?(l+=$)>1&&(l=1):(l-=$)<0&&(l=0),s.setPartsOpacity(h,l)}else{for(var u=0;u<t.length;u++){var _=t[u],p=0!=s.getParamFloat(_);if(p){if(o>=0)break;o=u;var h=i[u];n=s.getPartsOpacity(h),n+=e/r,n>1&&(n=1)}}o<0&&(console.log(\"No _$wi _$q0/ _$U default[%s]\",t[0]),o=0,n=1,s.loadParam(),s.setParamFloat(t[o],n),s.saveParam());for(var u=0;u<t.length;u++){var h=i[u];if(o==u)s.setPartsOpacity(h,n);else{var f,c=s.getPartsOpacity(h);f=n<.5?-.5*n/.5+1:.5*(1-n)/.5;var d=(1-f)*(1-n);d>.15&&(f=1-.15/(1-n)),c>f&&(c=f),s.setPartsOpacity(h,c)}}}else for(var u=0;u<t.length;u++){var _=t[u],h=i[u],p=0!=s.getParamFloat(_);s.setPartsOpacity(h,p?1:0)}},i.prototype.setPartsOpacity=function(t,i){\"number\"!=typeof t&&(t=this._$5S.getPartsDataIndex(l.getID(t))),this._$5S.setPartsOpacity(t,i)},i.prototype.getPartsDataIndex=function(t){return t instanceof l||(t=l.getID(t)),this._$5S.getPartsDataIndex(t)},i.prototype.getPartsOpacity=function(t){return\"number\"!=typeof t&&(t=this._$5S.getPartsDataIndex(l.getID(t))),t<0?0:this._$5S.getPartsOpacity(t)},i.prototype.getDrawParam=function(){},i.prototype.getDrawDataIndex=function(t){return this._$5S.getDrawDataIndex(b.getID(t))},i.prototype.getDrawData=function(t){return this._$5S.getDrawData(t)},i.prototype.getTransformedPoints=function(t){var i=this._$5S._$C2(t);return i instanceof ut?i.getTransformedPoints():null},i.prototype.getIndexArray=function(t){if(t<0||t>=this._$5S._$aS.length)return null;var i=this._$5S._$aS[t];return null!=i&&i.getType()==W._$wb&&i instanceof $t?i.getIndexArray():null},e.CHANNEL_COUNT=4,e.RENDER_TEXTURE_USE_MIPMAP=!1,e.NOT_USED_FRAME=-100,e.prototype._$L7=function(){if(this.tmpModelToViewMatrix&&(this.tmpModelToViewMatrix=null),this.tmpMatrix2&&(this.tmpMatrix2=null),this.tmpMatrixForMask&&(this.tmpMatrixForMask=null),this.tmpMatrixForDraw&&(this.tmpMatrixForDraw=null),this.tmpBoundsOnModel&&(this.tmpBoundsOnModel=null),this.CHANNEL_COLORS){for(var t=this.CHANNEL_COLORS.length-1;t>=0;--t)this.CHANNEL_COLORS.splice(t,1);this.CHANNEL_COLORS=[]}this.releaseShader()},e.prototype.releaseShader=function(){for(var t=at.frameBuffers.length,i=0;i<t;i++)this.gl.deleteFramebuffer(at.frameBuffers[i].framebuffer);at.frameBuffers=[],at.glContext=[]},e.prototype.init=function(t,i,e){for(var o=0;o<i.length;o++){var n=i[o].getClipIDList();if(null!=n){var s=this.findSameClip(n);null==s&&(s=new r(this,t,n),this.clipContextList.push(s));var _=i[o].getDrawDataID(),a=t.getDrawDataIndex(_);s.addClippedDrawData(_,a);e[o].clipBufPre_clipContext=s}}},e.prototype.getMaskRenderTexture=function(){var t=null;return t=this.dp_webgl.createFramebuffer(),at.frameBuffers[this.dp_webgl.glno]=t,this.dp_webgl.glno},e.prototype.setupClip=function(t,i){for(var e=0,r=0;r<this.clipContextList.length;r++){var o=this.clipContextList[r];this.calcClippedDrawTotalBounds(t,o),o.isUsing&&e++}if(e>0){var n=i.gl.getParameter(i.gl.FRAMEBUFFER_BINDING),s=new Array(4);s[0]=0,s[1]=0,s[2]=i.gl.canvas.width,s[3]=i.gl.canvas.height,i.gl.viewport(0,0,at.clippingMaskBufferSize,at.clippingMaskBufferSize),this.setupLayoutBounds(e),i.gl.bindFramebuffer(i.gl.FRAMEBUFFER,at.frameBuffers[this.curFrameNo].framebuffer),i.gl.clearColor(0,0,0,0),i.gl.clear(i.gl.COLOR_BUFFER_BIT);for(var r=0;r<this.clipContextList.length;r++){var o=this.clipContextList[r],_=o.allClippedDrawRect,a=(o.layoutChannelNo,o.layoutBounds);this.tmpBoundsOnModel._$jL(_),this.tmpBoundsOnModel.expand(.05*_.width,.05*_.height);var h=a.width/this.tmpBoundsOnModel.width,l=a.height/this.tmpBoundsOnModel.height;this.tmpMatrix2.identity(),this.tmpMatrix2.translate(-1,-1,0),this.tmpMatrix2.scale(2,2,1),this.tmpMatrix2.translate(a.x,a.y,0),this.tmpMatrix2.scale(h,l,1),this.tmpMatrix2.translate(-this.tmpBoundsOnModel.x,-this.tmpBoundsOnModel.y,0),this.tmpMatrixForMask.setMatrix(this.tmpMatrix2.m),this.tmpMatrix2.identity(),this.tmpMatrix2.translate(a.x,a.y,0),this.tmpMatrix2.scale(h,l,1),this.tmpMatrix2.translate(-this.tmpBoundsOnModel.x,-this.tmpBoundsOnModel.y,0),this.tmpMatrixForDraw.setMatrix(this.tmpMatrix2.m);for(var $=this.tmpMatrixForMask.getArray(),u=0;u<16;u++)o.matrixForMask[u]=$[u];for(var p=this.tmpMatrixForDraw.getArray(),u=0;u<16;u++)o.matrixForDraw[u]=p[u];for(var f=o.clippingMaskDrawIndexList.length,c=0;c<f;c++){var d=o.clippingMaskDrawIndexList[c],g=t.getDrawData(d),y=t._$C2(d);i.setClipBufPre_clipContextForMask(o),g.draw(i,t,y)}}i.gl.bindFramebuffer(i.gl.FRAMEBUFFER,n),i.setClipBufPre_clipContextForMask(null),i.gl.viewport(s[0],s[1],s[2],s[3])}},e.prototype.getColorBuffer=function(){return this.colorBuffer},e.prototype.findSameClip=function(t){for(var i=0;i<this.clipContextList.length;i++){var e=this.clipContextList[i],r=e.clipIDList.length;if(r==t.length){for(var o=0,n=0;n<r;n++)for(var s=e.clipIDList[n],_=0;_<r;_++)if(t[_]==s){o++;break}if(o==r)return e}}return null},e.prototype.calcClippedDrawTotalBounds=function(t,i){for(var e=t._$Ri.getModelImpl().getCanvasWidth(),r=t._$Ri.getModelImpl().getCanvasHeight(),o=e>r?e:r,n=o,s=o,_=0,a=0,h=i.clippedDrawContextList.length,l=0;l<h;l++){var $=i.clippedDrawContextList[l],u=$.drawDataIndex,p=t._$C2(u);if(p._$yo()){for(var f=p.getTransformedPoints(),c=f.length,d=[],g=[],y=0,m=U._$i2;m<c;m+=U._$No)d[y]=f[m],g[y]=f[m+1],y++;var T=Math.min.apply(null,d),P=Math.min.apply(null,g),S=Math.max.apply(null,d),v=Math.max.apply(null,g);T<n&&(n=T),P<s&&(s=P),S>_&&(_=S),v>a&&(a=v)}}if(n==o)i.allClippedDrawRect.x=0,i.allClippedDrawRect.y=0,i.allClippedDrawRect.width=0,i.allClippedDrawRect.height=0,i.isUsing=!1;else{var L=_-n,M=a-s;i.allClippedDrawRect.x=n,i.allClippedDrawRect.y=s,i.allClippedDrawRect.width=L,i.allClippedDrawRect.height=M,i.isUsing=!0}},e.prototype.setupLayoutBounds=function(t){var i=t/e.CHANNEL_COUNT,r=t%e.CHANNEL_COUNT;i=~~i,r=~~r;for(var o=0,n=0;n<e.CHANNEL_COUNT;n++){var s=i+(n<r?1:0);if(0==s);else if(1==s){var a=this.clipContextList[o++];a.layoutChannelNo=n,a.layoutBounds.x=0,a.layoutBounds.y=0,a.layoutBounds.width=1,a.layoutBounds.height=1}else if(2==s)for(var h=0;h<s;h++){var l=h%2,$=0;l=~~l;var a=this.clipContextList[o++];a.layoutChannelNo=n,a.layoutBounds.x=.5*l,a.layoutBounds.y=0,a.layoutBounds.width=.5,a.layoutBounds.height=1}else if(s<=4)for(var h=0;h<s;h++){var l=h%2,$=h/2;l=~~l,$=~~$;var a=this.clipContextList[o++];a.layoutChannelNo=n,a.layoutBounds.x=.5*l,a.layoutBounds.y=.5*$,a.layoutBounds.width=.5,a.layoutBounds.height=.5}else if(s<=9)for(var h=0;h<s;h++){var l=h%3,$=h/3;l=~~l,$=~~$;var a=this.clipContextList[o++];a.layoutChannelNo=n,a.layoutBounds.x=l/3,a.layoutBounds.y=$/3,a.layoutBounds.width=1/3,a.layoutBounds.height=1/3}else _._$li(\"_$6 _$0P mask count : %d\",s)}},r.prototype.addClippedDrawData=function(t,i){var e=new o(t,i);this.clippedDrawContextList.push(e)},s._$JT=function(t,i,e){var r=t/i,o=e/i,n=o,s=1-(1-o)*(1-o),_=1-(1-n)*(1-n),a=1/3*(1-o)*s+(n*(2/3)+1/3*(1-n))*(1-s),h=(n+2/3*(1-n))*_+(o*(1/3)+2/3*(1-o))*(1-_),l=1-3*h+3*a-0,$=3*h-6*a+0,u=3*a-0;if(r<=0)return 0;if(r>=1)return 1;var p=r,f=p*p;return l*(p*f)+$*f+u*p+0},s.prototype._$a0=function(){},s.prototype.setFadeIn=function(t){this._$dP=t},s.prototype.setFadeOut=function(t){this._$eo=t},s.prototype._$pT=function(t){this._$V0=t},s.prototype.getFadeOut=function(){return this._$eo},s.prototype._$4T=function(){return this._$eo},s.prototype._$mT=function(){return this._$V0},s.prototype.getDurationMSec=function(){return-1},s.prototype.getLoopDurationMSec=function(){return-1},s.prototype.updateParam=function(t,i){if(i._$AT&&!i._$9L){var e=w.getUserTimeMSec();if(i._$z2<0){i._$z2=e,i._$bs=e;var r=this.getDurationMSec();i._$Do<0&&(i._$Do=r<=0?-1:i._$z2+r)}var o=this._$V0;o=o*(0==this._$dP?1:ht._$r2((e-i._$bs)/this._$dP))*(0==this._$eo||i._$Do<0?1:ht._$r2((i._$Do-e)/this._$eo)),0<=o&&o<=1||console.log(\"### assert!! ### \"),this.updateParamExe(t,e,o,i),i._$Do>0&&i._$Do<e&&(i._$9L=!0)}},s.prototype.updateParamExe=function(t,i,e,r){},_._$8s=0,_._$fT=new Object,_.start=function(t){var i=_._$fT[t];null==i&&(i=new a,i._$r=t,_._$fT[t]=i),i._$0S=w.getSystemTimeMSec()},_.dump=function(t){var i=_._$fT[t];if(null!=i){var e=w.getSystemTimeMSec(),r=e-i._$0S;return console.log(t+\" : \"+r+\"ms\"),r}return-1},_.end=function(t){var i=_._$fT[t];if(null!=i){return w.getSystemTimeMSec()-i._$0S}return-1},_._$li=function(t,i){console.log(\"_$li : \"+t+\"\\n\",i)},_._$Ji=function(t,i){console.log(t,i)},_._$dL=function(t,i){console.log(t,i),console.log(\"\\n\")},_._$KL=function(t,i){for(var e=0;e<i;e++)e%16==0&&e>0?console.log(\"\\n\"):e%8==0&&e>0&&console.log(\"  \"),console.log(\"%02X \",255&t[e]);console.log(\"\\n\")},_._$nr=function(t,i,e){console.log(\"%s\\n\",t);for(var r=i.length,o=0;o<r;++o)console.log(\"%5d\",i[o]),console.log(\"%s\\n\",e),console.log(\",\");console.log(\"\\n\")},_._$Rb=function(t){console.log(\"dump exception : \"+t),console.log(\"stack :: \"+t.stack)},h.prototype._$8P=function(){return.5*(this.x+this.x+this.width)},h.prototype._$6P=function(){return.5*(this.y+this.y+this.height)},h.prototype._$EL=function(){return this.x+this.width},h.prototype._$5T=function(){return this.y+this.height},h.prototype._$jL=function(t,i,e,r){this.x=t,this.y=i,this.width=e,this.height=r},h.prototype._$jL=function(t){this.x=t.x,this.y=t.y,this.width=t.width,this.height=t.height},l.prototype=new et,l._$tP=new Object,l._$27=function(){l._$tP.clear()},l.getID=function(t){var i=l._$tP[t];return null==i&&(i=new l(t),l._$tP[t]=i),i},l.prototype._$3s=function(){return new l},u.prototype=new et,u._$tP=new Object,u._$27=function(){u._$tP.clear()},u.getID=function(t){var i=u._$tP[t];return null==i&&(i=new u(t),u._$tP[t]=i),i},u.prototype._$3s=function(){return new u},p._$42=0,p.prototype._$zP=function(){null==this._$vo&&(this._$vo=new ot),null==this._$F2&&(this._$F2=new Array)},p.prototype.getCanvasWidth=function(){return this._$ao},p.prototype.getCanvasHeight=function(){return this._$1S},p.prototype._$F0=function(t){this._$vo=t._$nP(),this._$F2=t._$nP(),this._$ao=t._$6L(),this._$1S=t._$6L()},p.prototype._$6S=function(t){this._$F2.push(t)},p.prototype._$Xr=function(){return this._$F2},p.prototype._$E2=function(){return this._$vo},f.prototype.setup=function(t,i,e){this._$ks=this._$Yb(),this.p2._$xT(),3==arguments.length&&(this._$Fo=t,this._$L2=i,this.p1._$p=e,this.p2._$p=e,this.p2.y=t,this.setup())},f.prototype.getPhysicsPoint1=function(){return this.p1},f.prototype.getPhysicsPoint2=function(){return this.p2},f.prototype._$qr=function(){return this._$Db},f.prototype._$pr=function(t){this._$Db=t},f.prototype._$5r=function(){return this._$M2},f.prototype._$Cs=function(){return this._$9b},f.prototype._$Yb=function(){return-180*Math.atan2(this.p1.x-this.p2.x,-(this.p1.y-this.p2.y))/Math.PI},f.prototype.addSrcParam=function(t,i,e,r){var o=new g(t,i,e,r);this._$lL.push(o)},f.prototype.addTargetParam=function(t,i,e,r){var o=new T(t,i,e,r);this._$qP.push(o)},f.prototype.update=function(t,i){if(0==this._$iP)return this._$iP=this._$iT=i,void(this._$Fo=Math.sqrt((this.p1.x-this.p2.x)*(this.p1.x-this.p2.x)+(this.p1.y-this.p2.y)*(this.p1.y-this.p2.y)));var e=(i-this._$iT)/1e3;if(0!=e){for(var r=this._$lL.length-1;r>=0;--r){this._$lL[r]._$oP(t,this)}this._$oo(t,e),this._$M2=this._$Yb(),this._$9b=(this._$M2-this._$ks)/e,this._$ks=this._$M2}for(var r=this._$qP.length-1;r>=0;--r){this._$qP[r]._$YS(t,this)}this._$iT=i},f.prototype._$oo=function(t,i){i<.033&&(i=.033);var e=1/i;this.p1.vx=(this.p1.x-this.p1._$s0)*e,this.p1.vy=(this.p1.y-this.p1._$70)*e,this.p1.ax=(this.p1.vx-this.p1._$7L)*e,this.p1.ay=(this.p1.vy-this.p1._$HL)*e,this.p1.fx=this.p1.ax*this.p1._$p,this.p1.fy=this.p1.ay*this.p1._$p,this.p1._$xT();var r,o,n=-Math.atan2(this.p1.y-this.p2.y,this.p1.x-this.p2.x),s=Math.cos(n),_=Math.sin(n),a=9.8*this.p2._$p,h=this._$Db*Lt._$bS,l=a*Math.cos(n-h);r=l*_,o=l*s;var $=-this.p1.fx*_*_,u=-this.p1.fy*_*s,p=-this.p2.vx*this._$L2,f=-this.p2.vy*this._$L2;this.p2.fx=r+$+p,this.p2.fy=o+u+f,this.p2.ax=this.p2.fx/this.p2._$p,this.p2.ay=this.p2.fy/this.p2._$p,this.p2.vx+=this.p2.ax*i,this.p2.vy+=this.p2.ay*i,this.p2.x+=this.p2.vx*i,this.p2.y+=this.p2.vy*i;var c=Math.sqrt((this.p1.x-this.p2.x)*(this.p1.x-this.p2.x)+(this.p1.y-this.p2.y)*(this.p1.y-this.p2.y));this.p2.x=this.p1.x+this._$Fo*(this.p2.x-this.p1.x)/c,this.p2.y=this.p1.y+this._$Fo*(this.p2.y-this.p1.y)/c,this.p2.vx=(this.p2.x-this.p2._$s0)*e,this.p2.vy=(this.p2.y-this.p2._$70)*e,this.p2._$xT()},c.prototype._$xT=function(){this._$s0=this.x,this._$70=this.y,this._$7L=this.vx,this._$HL=this.vy},d.prototype._$oP=function(t,i){},g.prototype=new d,g.prototype._$oP=function(t,i){var e=this.scale*t.getParamFloat(this._$wL),r=i.getPhysicsPoint1();switch(this._$tL){default:case f.Src.SRC_TO_X:r.x=r.x+(e-r.x)*this._$V0;break;case f.Src.SRC_TO_Y:r.y=r.y+(e-r.y)*this._$V0;break;case f.Src.SRC_TO_G_ANGLE:var o=i._$qr();o+=(e-o)*this._$V0,i._$pr(o)}},y.prototype._$YS=function(t,i){},T.prototype=new y,T.prototype._$YS=function(t,i){switch(this._$YP){default:case f.Target.TARGET_FROM_ANGLE:t.setParamFloat(this._$wL,this.scale*i._$5r(),this._$V0);break;case f.Target.TARGET_FROM_ANGLE_V:t.setParamFloat(this._$wL,this.scale*i._$Cs(),this._$V0)}},f.Src=function(){},f.Src.SRC_TO_X=\"SRC_TO_X\",f.Src.SRC_TO_Y=\"SRC_TO_Y\",f.Src.SRC_TO_G_ANGLE=\"SRC_TO_G_ANGLE\",f.Target=function(){},f.Target.TARGET_FROM_ANGLE=\"TARGET_FROM_ANGLE\",f.Target.TARGET_FROM_ANGLE_V=\"TARGET_FROM_ANGLE_V\",P.prototype.init=function(t){this._$fL=t._$fL,this._$gL=t._$gL,this._$B0=t._$B0,this._$z0=t._$z0,this._$qT=t._$qT,this.reflectX=t.reflectX,this.reflectY=t.reflectY},P.prototype._$F0=function(t){this._$fL=t._$_T(),this._$gL=t._$_T(),this._$B0=t._$_T(),this._$z0=t._$_T(),this._$qT=t._$_T(),t.getFormatVersion()>=G.LIVE2D_FORMAT_VERSION_V2_10_SDK2&&(this.reflectX=t._$po(),this.reflectY=t._$po())},P.prototype._$e=function(){};var It=function(){};It._$ni=function(t,i,e,r,o,n,s,_,a){var h=s*n-_*o;if(0==h)return null;var l,$=((t-e)*n-(i-r)*o)/h;return l=0!=o?(t-e-$*s)/o:(i-r-$*_)/n,isNaN(l)&&(l=(t-e-$*s)/o,isNaN(l)&&(l=(i-r-$*_)/n),isNaN(l)&&(console.log(\"a is NaN @UtVector#_$ni() \"),console.log(\"v1x : \"+o),console.log(\"v1x != 0 ? \"+(0!=o)))),null==a?new Array(l,$):(a[0]=l,a[1]=$,a)},S.prototype._$8P=function(){return this.x+.5*this.width},S.prototype._$6P=function(){return this.y+.5*this.height},S.prototype._$EL=function(){return this.x+this.width},S.prototype._$5T=function(){return this.y+this.height},S.prototype._$jL=function(t,i,e,r){this.x=t,this.y=i,this.width=e,this.height=r},S.prototype._$jL=function(t){this.x=t.x,this.y=t.y,this.width=t.width,this.height=t.height},S.prototype.contains=function(t,i){return this.x<=this.x&&this.y<=this.y&&this.x<=this.x+this.width&&this.y<=this.y+this.height},S.prototype.expand=function(t,i){this.x-=t,this.y-=i,this.width+=2*t,this.height+=2*i},v._$Z2=function(t,i,e,r){var o=i._$Q2(t,e),n=t._$vs(),s=t._$Tr();if(i._$zr(n,s,o),o<=0)return r[n[0]];if(1==o){var _=r[n[0]],a=r[n[1]],h=s[0];return _+(a-_)*h|0}if(2==o){var _=r[n[0]],a=r[n[1]],l=r[n[2]],$=r[n[3]],h=s[0],u=s[1],p=_+(a-_)*h|0,f=l+($-l)*h|0;return p+(f-p)*u|0}if(3==o){var c=r[n[0]],d=r[n[1]],g=r[n[2]],y=r[n[3]],m=r[n[4]],T=r[n[5]],P=r[n[6]],S=r[n[7]],h=s[0],u=s[1],v=s[2],_=c+(d-c)*h|0,a=g+(y-g)*h|0,l=m+(T-m)*h|0,$=P+(S-P)*h|0,p=_+(a-_)*u|0,f=l+($-l)*u|0;return p+(f-p)*v|0}if(4==o){var L=r[n[0]],M=r[n[1]],E=r[n[2]],A=r[n[3]],I=r[n[4]],w=r[n[5]],x=r[n[6]],O=r[n[7]],D=r[n[8]],R=r[n[9]],b=r[n[10]],F=r[n[11]],C=r[n[12]],N=r[n[13]],B=r[n[14]],U=r[n[15]],h=s[0],u=s[1],v=s[2],G=s[3],c=L+(M-L)*h|0,d=E+(A-E)*h|0,g=I+(w-I)*h|0,y=x+(O-x)*h|0,m=D+(R-D)*h|0,T=b+(F-b)*h|0,P=C+(N-C)*h|0,S=B+(U-B)*h|0,_=c+(d-c)*u|0,a=g+(y-g)*u|0,l=m+(T-m)*u|0,$=P+(S-P)*u|0,p=_+(a-_)*v|0,f=l+($-l)*v|0;return p+(f-p)*G|0}for(var Y=1<<o,k=new Float32Array(Y),V=0;V<Y;V++){for(var X=V,z=1,H=0;H<o;H++)z*=X%2==0?1-s[H]:s[H],X/=2;k[V]=z}for(var W=new Float32Array(Y),j=0;j<Y;j++)W[j]=r[n[j]];for(var q=0,j=0;j<Y;j++)q+=k[j]*W[j];return q+.5|0},v._$br=function(t,i,e,r){var o=i._$Q2(t,e),n=t._$vs(),s=t._$Tr();if(i._$zr(n,s,o),o<=0)return r[n[0]];if(1==o){var _=r[n[0]],a=r[n[1]],h=s[0];return _+(a-_)*h}if(2==o){var _=r[n[0]],a=r[n[1]],l=r[n[2]],$=r[n[3]],h=s[0],u=s[1];return(1-u)*(_+(a-_)*h)+u*(l+($-l)*h)}if(3==o){var p=r[n[0]],f=r[n[1]],c=r[n[2]],d=r[n[3]],g=r[n[4]],y=r[n[5]],m=r[n[6]],T=r[n[7]],h=s[0],u=s[1],P=s[2];return(1-P)*((1-u)*(p+(f-p)*h)+u*(c+(d-c)*h))+P*((1-u)*(g+(y-g)*h)+u*(m+(T-m)*h))}if(4==o){var S=r[n[0]],v=r[n[1]],L=r[n[2]],M=r[n[3]],E=r[n[4]],A=r[n[5]],I=r[n[6]],w=r[n[7]],x=r[n[8]],O=r[n[9]],D=r[n[10]],R=r[n[11]],b=r[n[12]],F=r[n[13]],C=r[n[14]],N=r[n[15]],h=s[0],u=s[1],P=s[2],B=s[3];return(1-B)*((1-P)*((1-u)*(S+(v-S)*h)+u*(L+(M-L)*h))+P*((1-u)*(E+(A-E)*h)+u*(I+(w-I)*h)))+B*((1-P)*((1-u)*(x+(O-x)*h)+u*(D+(R-D)*h))+P*((1-u)*(b+(F-b)*h)+u*(C+(N-C)*h)))}for(var U=1<<o,G=new Float32Array(U),Y=0;Y<U;Y++){for(var k=Y,V=1,X=0;X<o;X++)V*=k%2==0?1-s[X]:s[X],k/=2;G[Y]=V}for(var z=new Float32Array(U),H=0;H<U;H++)z[H]=r[n[H]];for(var W=0,H=0;H<U;H++)W+=G[H]*z[H];return W},v._$Vr=function(t,i,e,r,o,n,s,_){var a=i._$Q2(t,e),h=t._$vs(),l=t._$Tr();i._$zr(h,l,a);var $=2*r,u=s;if(a<=0){var p=h[0],f=o[p];if(2==_&&0==s)w._$jT(f,0,n,0,$);else for(var c=0;c<$;)n[u]=f[c++],n[u+1]=f[c++],u+=_}else if(1==a)for(var f=o[h[0]],d=o[h[1]],g=l[0],y=1-g,c=0;c<$;)n[u]=f[c]*y+d[c]*g,++c,n[u+1]=f[c]*y+d[c]*g,++c,u+=_;else if(2==a)for(var f=o[h[0]],d=o[h[1]],m=o[h[2]],T=o[h[3]],g=l[0],P=l[1],y=1-g,S=1-P,v=S*y,L=S*g,M=P*y,E=P*g,c=0;c<$;)n[u]=v*f[c]+L*d[c]+M*m[c]+E*T[c],++c,n[u+1]=v*f[c]+L*d[c]+M*m[c]+E*T[c],++c,u+=_;else if(3==a)for(var A=o[h[0]],I=o[h[1]],x=o[h[2]],O=o[h[3]],D=o[h[4]],R=o[h[5]],b=o[h[6]],F=o[h[7]],g=l[0],P=l[1],C=l[2],y=1-g,S=1-P,N=1-C,B=N*S*y,U=N*S*g,G=N*P*y,Y=N*P*g,k=C*S*y,V=C*S*g,X=C*P*y,z=C*P*g,c=0;c<$;)n[u]=B*A[c]+U*I[c]+G*x[c]+Y*O[c]+k*D[c]+V*R[c]+X*b[c]+z*F[c],++c,n[u+1]=B*A[c]+U*I[c]+G*x[c]+Y*O[c]+k*D[c]+V*R[c]+X*b[c]+z*F[c],++c,u+=_;else if(4==a)for(var H=o[h[0]],W=o[h[1]],j=o[h[2]],q=o[h[3]],J=o[h[4]],Q=o[h[5]],Z=o[h[6]],K=o[h[7]],tt=o[h[8]],it=o[h[9]],et=o[h[10]],rt=o[h[11]],ot=o[h[12]],nt=o[h[13]],st=o[h[14]],_t=o[h[15]],g=l[0],P=l[1],C=l[2],at=l[3],y=1-g,S=1-P,N=1-C,ht=1-at,lt=ht*N*S*y,$t=ht*N*S*g,ut=ht*N*P*y,pt=ht*N*P*g,ft=ht*C*S*y,ct=ht*C*S*g,dt=ht*C*P*y,gt=ht*C*P*g,yt=at*N*S*y,mt=at*N*S*g,Tt=at*N*P*y,Pt=at*N*P*g,St=at*C*S*y,vt=at*C*S*g,Lt=at*C*P*y,Mt=at*C*P*g,c=0;c<$;)n[u]=lt*H[c]+$t*W[c]+ut*j[c]+pt*q[c]+ft*J[c]+ct*Q[c]+dt*Z[c]+gt*K[c]+yt*tt[c]+mt*it[c]+Tt*et[c]+Pt*rt[c]+St*ot[c]+vt*nt[c]+Lt*st[c]+Mt*_t[c],++c,n[u+1]=lt*H[c]+$t*W[c]+ut*j[c]+pt*q[c]+ft*J[c]+ct*Q[c]+dt*Z[c]+gt*K[c]+yt*tt[c]+mt*it[c]+Tt*et[c]+Pt*rt[c]+St*ot[c]+vt*nt[c]+Lt*st[c]+Mt*_t[c],++c,u+=_;else{for(var Et=1<<a,At=new Float32Array(Et),It=0;It<Et;It++){for(var wt=It,xt=1,Ot=0;Ot<a;Ot++)xt*=wt%2==0?1-l[Ot]:l[Ot],wt/=2;At[It]=xt}for(var Dt=new Float32Array(Et),Rt=0;Rt<Et;Rt++)Dt[Rt]=o[h[Rt]];for(var c=0;c<$;){for(var bt=0,Ft=0,Ct=c+1,Rt=0;Rt<Et;Rt++)bt+=At[Rt]*Dt[Rt][c],Ft+=At[Rt]*Dt[Rt][Ct];c+=2,n[u]=bt,n[u+1]=Ft,u+=_}}},L.prototype._$HT=function(t,i){this.x=t,this.y=i},L.prototype._$HT=function(t){this.x=t.x,this.y=t.y},M._$ur=-2,M._$ES=500,M._$wb=2,M._$8S=3,M._$52=M._$ES,M._$R2=M._$ES,M._$or=function(){return M._$52},M._$Pr=function(){return M._$R2},M.prototype.convertClipIDForV2_11=function(t){var i=[];return null==t?null:0==t.length?null:/,/.test(t)?i=t.id.split(\",\"):(i.push(t.id),i)},M.prototype._$F0=function(t){this._$gP=t._$nP(),this._$dr=t._$nP(),this._$GS=t._$nP(),this._$qb=t._$6L(),this._$Lb=t._$cS(),this._$mS=t._$Tb(),t.getFormatVersion()>=G._$T7?(this.clipID=t._$nP(),this.clipIDList=this.convertClipIDForV2_11(this.clipID)):this.clipIDList=[],this._$MS(this._$Lb)},M.prototype.getClipIDList=function(){return this.clipIDList},M.prototype.init=function(t){},M.prototype._$Nr=function(t,i){if(i._$IS[0]=!1,i._$Us=v._$Z2(t,this._$GS,i._$IS,this._$Lb),at._$Zs);else if(i._$IS[0])return;i._$7s=v._$br(t,this._$GS,i._$IS,this._$mS)},M.prototype._$2b=function(t,i){},M.prototype.getDrawDataID=function(){return this._$gP},M.prototype._$j2=function(t){this._$gP=t},M.prototype.getOpacity=function(t,i){return i._$7s},M.prototype._$zS=function(t,i){return i._$Us},M.prototype._$MS=function(t){for(var i=t.length-1;i>=0;--i){var e=t[i];e<M._$52?M._$52=e:e>M._$R2&&(M._$R2=e)}},M.prototype.getTargetBaseDataID=function(){return this._$dr},M.prototype._$gs=function(t){this._$dr=t},M.prototype._$32=function(){return null!=this._$dr&&this._$dr!=yt._$2o()},M.prototype.preDraw=function(t,i,e){},M.prototype.draw=function(t,i,e){},M.prototype.getType=function(){},M.prototype._$B2=function(t,i,e){},E._$ps=32,E.CLIPPING_PROCESS_NONE=0,E.CLIPPING_PROCESS_OVERWRITE_ALPHA=1,E.CLIPPING_PROCESS_MULTIPLY_ALPHA=2,E.CLIPPING_PROCESS_DRAW=3,E.CLIPPING_PROCESS_CLEAR_ALPHA=4,E.prototype.setChannelFlagAsColor=function(t,i){this.CHANNEL_COLORS[t]=i},E.prototype.getChannelFlagAsColor=function(t){return this.CHANNEL_COLORS[t]},E.prototype._$ZT=function(){},E.prototype._$Uo=function(t,i,e,r,o,n,s){},E.prototype._$Rs=function(){return-1},E.prototype._$Ds=function(t){},E.prototype.setBaseColor=function(t,i,e,r){t<0?t=0:t>1&&(t=1),i<0?i=0:i>1&&(i=1),e<0?e=0:e>1&&(e=1),r<0?r=0:r>1&&(r=1),this._$lT=t,this._$C0=i,this._$tT=e,this._$WL=r},E.prototype._$WP=function(t){this.culling=t},E.prototype.setMatrix=function(t){for(var i=0;i<16;i++)this.matrix4x4[i]=t[i]},E.prototype._$IT=function(){return this.matrix4x4},E.prototype.setPremultipliedAlpha=function(t){this.premultipliedAlpha=t},E.prototype.isPremultipliedAlpha=function(){return this.premultipliedAlpha},E.prototype.setAnisotropy=function(t){this.anisotropy=t},E.prototype.getAnisotropy=function(){return this.anisotropy},E.prototype.getClippingProcess=function(){return this.clippingProcess},E.prototype.setClippingProcess=function(t){this.clippingProcess=t},E.prototype.setClipBufPre_clipContextForMask=function(t){this.clipBufPre_clipContextMask=t},E.prototype.getClipBufPre_clipContextMask=function(){return this.clipBufPre_clipContextMask},E.prototype.setClipBufPre_clipContextForDraw=function(t){this.clipBufPre_clipContextDraw=t},E.prototype.getClipBufPre_clipContextDraw=function(){return this.clipBufPre_clipContextDraw},I._$ur=-2,I._$c2=1,I._$_b=2,I.prototype._$F0=function(t){this._$kP=t._$nP(),this._$dr=t._$nP()},I.prototype.readV2_opacity=function(t){t.getFormatVersion()>=G.LIVE2D_FORMAT_VERSION_V2_10_SDK2&&(this._$mS=t._$Tb())},I.prototype.init=function(t){},I.prototype._$Nr=function(t,i){},I.prototype.interpolateOpacity=function(t,i,e,r){null==this._$mS?e.setInterpolatedOpacity(1):e.setInterpolatedOpacity(v._$br(t,i,r,this._$mS))},I.prototype._$2b=function(t,i){},I.prototype._$nb=function(t,i,e,r,o,n,s){},I.prototype.getType=function(){},I.prototype._$gs=function(t){this._$dr=t},I.prototype._$a2=function(t){this._$kP=t},I.prototype.getTargetBaseDataID=function(){return this._$dr},I.prototype.getBaseDataID=function(){return this._$kP},I.prototype._$32=function(){return null!=this._$dr&&this._$dr!=yt._$2o()},w._$W2=0,w._$CS=w._$W2,w._$Mo=function(){return!0},w._$XP=function(t){try{for(var i=getTimeMSec();getTimeMSec()-i<t;);}catch(t){t._$Rb()}},w.getUserTimeMSec=function(){return w._$CS==w._$W2?w.getSystemTimeMSec():w._$CS},w.setUserTimeMSec=function(t){w._$CS=t},w.updateUserTimeMSec=function(){return w._$CS=w.getSystemTimeMSec()},w.getTimeMSec=function(){return(new Date).getTime()},w.getSystemTimeMSec=function(){return(new Date).getTime()},w._$Q=function(t){},w._$jT=function(t,i,e,r,o){for(var n=0;n<o;n++)e[r+n]=t[i+n]},x._$ds=-2,x.prototype._$F0=function(t){this._$wL=t._$nP(),this._$VP=t._$6L(),this._$GP=t._$nP()},x.prototype.getParamIndex=function(t){return this._$2r!=t&&(this._$8o=x._$ds),this._$8o},x.prototype._$Pb=function(t,i){this._$8o=t,this._$2r=i},x.prototype.getParamID=function(){return this._$wL},x.prototype._$yP=function(t){this._$wL=t},x.prototype._$N2=function(){return this._$VP},x.prototype._$d2=function(){return this._$GP},x.prototype._$t2=function(t,i){this._$VP=t,this._$GP=i},x.prototype._$Lr=function(){return this._$O2},x.prototype._$wr=function(t){this._$O2=t},x.prototype._$SL=function(){return this._$ri},x.prototype._$AL=function(t){this._$ri=t},O.startsWith=function(t,i,e){var r=i+e.length;if(r>=t.length)return!1;for(var o=i;o<r;o++)if(O.getChar(t,o)!=e.charAt(o-i))return!1;return!0},O.getChar=function(t,i){return String.fromCharCode(t.getUint8(i))},O.createString=function(t,i,e){for(var r=new ArrayBuffer(2*e),o=new Uint16Array(r),n=0;n<e;n++)o[n]=t.getUint8(i+n);return String.fromCharCode.apply(null,o)},O._$LS=function(t,i,e,r){t instanceof ArrayBuffer&&(t=new DataView(t));var o=e,n=!1,s=!1,_=0,a=O.getChar(t,o);\"-\"==a&&(n=!0,o++);for(var h=!1;o<i;o++){switch(a=O.getChar(t,o)){case\"0\":_*=10;break;case\"1\":_=10*_+1;break;case\"2\":_=10*_+2;break;case\"3\":_=10*_+3;break;case\"4\":_=10*_+4;break;case\"5\":_=10*_+5;break;case\"6\":_=10*_+6;break;case\"7\":_=10*_+7;break;case\"8\":_=10*_+8;break;case\"9\":_=10*_+9;break;case\".\":s=!0,o++,h=!0;break;default:h=!0}if(h)break}if(s)for(var l=.1,$=!1;o<i;o++){switch(a=O.getChar(t,o)){case\"0\":break;case\"1\":_+=1*l;break;case\"2\":_+=2*l;break;case\"3\":_+=3*l;break;case\"4\":_+=4*l;break;case\"5\":_+=5*l;break;case\"6\":_+=6*l;break;case\"7\":_+=7*l;break;case\"8\":_+=8*l;break;case\"9\":_+=9*l;break;default:$=!0}if(l*=.1,$)break}return n&&(_=-_),r[0]=o,_},D.prototype._$zP=function(){this._$Ob=new Array},D.prototype._$F0=function(t){this._$Ob=t._$nP()},D.prototype._$Ur=function(t){if(t._$WS())return!0;for(var i=t._$v2(),e=this._$Ob.length-1;e>=0;--e){var r=this._$Ob[e].getParamIndex(i);if(r==x._$ds&&(r=t.getParamIndex(this._$Ob[e].getParamID())),t._$Xb(r))return!0}return!1},D.prototype._$Q2=function(t,i){for(var e,r,o=this._$Ob.length,n=t._$v2(),s=0,_=0;_<o;_++){var a=this._$Ob[_];if(e=a.getParamIndex(n),e==x._$ds&&(e=t.getParamIndex(a.getParamID()),a._$Pb(e,n)),e<0)throw new Exception(\"err 23242 : \"+a.getParamID());var h=e<0?0:t.getParamFloat(e);r=a._$N2();var l,$,u=a._$d2(),p=-1,f=0;if(r<1);else if(1==r)l=u[0],l-U._$J<h&&h<l+U._$J?(p=0,f=0):(p=0,i[0]=!0);else if(l=u[0],h<l-U._$J)p=0,i[0]=!0;else if(h<l+U._$J)p=0;else{for(var c=!1,d=1;d<r;++d){if($=u[d],h<$+U._$J){$-U._$J<h?p=d:(p=d-1,f=(h-l)/($-l),s++),c=!0;break}l=$}c||(p=r-1,f=0,i[0]=!0)}a._$wr(p),a._$AL(f)}return s},D.prototype._$zr=function(t,i,e){var r=1<<e;r+1>U._$Qb&&console.log(\"err 23245\\n\");for(var o=this._$Ob.length,n=1,s=1,_=0,a=0;a<r;++a)t[a]=0;for(var h=0;h<o;++h){var l=this._$Ob[h];if(0==l._$SL()){var $=l._$Lr()*n;if($<0&&at._$3T)throw new Exception(\"err 23246\");for(var a=0;a<r;++a)t[a]+=$}else{for(var $=n*l._$Lr(),u=n*(l._$Lr()+1),a=0;a<r;++a)t[a]+=(a/s|0)%2==0?$:u;i[_++]=l._$SL(),s*=2}n*=l._$N2()}t[r]=65535,i[_]=-1},D.prototype._$h2=function(t,i,e){for(var r=new Float32Array(i),o=0;o<i;++o)r[o]=e[o];var n=new x;n._$yP(t),n._$t2(i,r),this._$Ob.push(n)},D.prototype._$J2=function(t){for(var i=t,e=this._$Ob.length,r=0;r<e;++r){var o=this._$Ob[r],n=o._$N2(),s=i%o._$N2(),_=o._$d2()[s];console.log(\"%s[%d]=%7.2f / \",o.getParamID(),s,_),i/=n}console.log(\"\\n\")},D.prototype.getParamCount=function(){return this._$Ob.length},D.prototype._$zs=function(){return this._$Ob},R.prototype.identity=function(){for(var t=0;t<16;t++)this.m[t]=t%5==0?1:0},R.prototype.getArray=function(){return this.m},R.prototype.getCopyMatrix=function(){return new Float32Array(this.m)},R.prototype.setMatrix=function(t){if(null!=t&&16==t.length)for(var i=0;i<16;i++)this.m[i]=t[i]},R.prototype.mult=function(t,i,e){return null==i?null:(this==i?this.mult_safe(this.m,t.m,i.m,e):this.mult_fast(this.m,t.m,i.m,e),i)},R.prototype.mult_safe=function(t,i,e,r){if(t==e){var o=new Array(16);this.mult_fast(t,i,o,r);for(var n=15;n>=0;--n)e[n]=o[n]}else this.mult_fast(t,i,e,r)},R.prototype.mult_fast=function(t,i,e,r){r?(e[0]=t[0]*i[0]+t[4]*i[1]+t[8]*i[2],e[4]=t[0]*i[4]+t[4]*i[5]+t[8]*i[6],e[8]=t[0]*i[8]+t[4]*i[9]+t[8]*i[10],e[12]=t[0]*i[12]+t[4]*i[13]+t[8]*i[14]+t[12],e[1]=t[1]*i[0]+t[5]*i[1]+t[9]*i[2],e[5]=t[1]*i[4]+t[5]*i[5]+t[9]*i[6],e[9]=t[1]*i[8]+t[5]*i[9]+t[9]*i[10],e[13]=t[1]*i[12]+t[5]*i[13]+t[9]*i[14]+t[13],e[2]=t[2]*i[0]+t[6]*i[1]+t[10]*i[2],e[6]=t[2]*i[4]+t[6]*i[5]+t[10]*i[6],e[10]=t[2]*i[8]+t[6]*i[9]+t[10]*i[10],e[14]=t[2]*i[12]+t[6]*i[13]+t[10]*i[14]+t[14],e[3]=e[7]=e[11]=0,e[15]=1):(e[0]=t[0]*i[0]+t[4]*i[1]+t[8]*i[2]+t[12]*i[3],e[4]=t[0]*i[4]+t[4]*i[5]+t[8]*i[6]+t[12]*i[7],e[8]=t[0]*i[8]+t[4]*i[9]+t[8]*i[10]+t[12]*i[11],e[12]=t[0]*i[12]+t[4]*i[13]+t[8]*i[14]+t[12]*i[15],e[1]=t[1]*i[0]+t[5]*i[1]+t[9]*i[2]+t[13]*i[3],e[5]=t[1]*i[4]+t[5]*i[5]+t[9]*i[6]+t[13]*i[7],e[9]=t[1]*i[8]+t[5]*i[9]+t[9]*i[10]+t[13]*i[11],e[13]=t[1]*i[12]+t[5]*i[13]+t[9]*i[14]+t[13]*i[15],e[2]=t[2]*i[0]+t[6]*i[1]+t[10]*i[2]+t[14]*i[3],e[6]=t[2]*i[4]+t[6]*i[5]+t[10]*i[6]+t[14]*i[7],e[10]=t[2]*i[8]+t[6]*i[9]+t[10]*i[10]+t[14]*i[11],e[14]=t[2]*i[12]+t[6]*i[13]+t[10]*i[14]+t[14]*i[15],e[3]=t[3]*i[0]+t[7]*i[1]+t[11]*i[2]+t[15]*i[3],e[7]=t[3]*i[4]+t[7]*i[5]+t[11]*i[6]+t[15]*i[7],e[11]=t[3]*i[8]+t[7]*i[9]+t[11]*i[10]+t[15]*i[11],e[15]=t[3]*i[12]+t[7]*i[13]+t[11]*i[14]+t[15]*i[15])},R.prototype.translate=function(t,i,e){this.m[12]=this.m[0]*t+this.m[4]*i+this.m[8]*e+this.m[12],this.m[13]=this.m[1]*t+this.m[5]*i+this.m[9]*e+this.m[13],this.m[14]=this.m[2]*t+this.m[6]*i+this.m[10]*e+this.m[14],this.m[15]=this.m[3]*t+this.m[7]*i+this.m[11]*e+this.m[15]},R.prototype.scale=function(t,i,e){this.m[0]*=t,this.m[4]*=i,this.m[8]*=e,this.m[1]*=t,this.m[5]*=i,this.m[9]*=e,this.m[2]*=t,this.m[6]*=i,this.m[10]*=e,this.m[3]*=t,this.m[7]*=i,this.m[11]*=e},R.prototype.rotateX=function(t){var i=Lt.fcos(t),e=Lt._$9(t),r=this.m[4];this.m[4]=r*i+this.m[8]*e,this.m[8]=r*-e+this.m[8]*i,r=this.m[5],this.m[5]=r*i+this.m[9]*e,this.m[9]=r*-e+this.m[9]*i,r=this.m[6],this.m[6]=r*i+this.m[10]*e,this.m[10]=r*-e+this.m[10]*i,r=this.m[7],this.m[7]=r*i+this.m[11]*e,this.m[11]=r*-e+this.m[11]*i},R.prototype.rotateY=function(t){var i=Lt.fcos(t),e=Lt._$9(t),r=this.m[0];this.m[0]=r*i+this.m[8]*-e,this.m[8]=r*e+this.m[8]*i,r=this.m[1],this.m[1]=r*i+this.m[9]*-e,this.m[9]=r*e+this.m[9]*i,r=m[2],this.m[2]=r*i+this.m[10]*-e,this.m[10]=r*e+this.m[10]*i,r=m[3],this.m[3]=r*i+this.m[11]*-e,this.m[11]=r*e+this.m[11]*i},R.prototype.rotateZ=function(t){var i=Lt.fcos(t),e=Lt._$9(t),r=this.m[0];this.m[0]=r*i+this.m[4]*e,this.m[4]=r*-e+this.m[4]*i,r=this.m[1],this.m[1]=r*i+this.m[5]*e,this.m[5]=r*-e+this.m[5]*i,r=this.m[2],this.m[2]=r*i+this.m[6]*e,this.m[6]=r*-e+this.m[6]*i,r=this.m[3],this.m[3]=r*i+this.m[7]*e,this.m[7]=r*-e+this.m[7]*i},b.prototype=new et,b._$tP=new Object,b._$27=function(){b._$tP.clear()},b.getID=function(t){var i=b._$tP[t];return null==i&&(i=new b(t),b._$tP[t]=i),i},b.prototype._$3s=function(){return new b},F._$kS=-1,F._$pS=0,F._$hb=1,F.STATE_IDENTITY=0,F._$gb=1,F._$fo=2,F._$go=4,F.prototype.transform=function(t,i,e){var r,o,n,s,_,a,h=0,l=0;switch(this._$hi){default:return;case F._$go|F._$fo|F._$gb:for(r=this._$7,o=this._$H,n=this._$k,s=this._$f,_=this._$g,a=this._$w;--e>=0;){var $=t[h++],u=t[h++];i[l++]=r*$+o*u+n,i[l++]=s*$+_*u+a}return;case F._$go|F._$fo:for(r=this._$7,o=this._$H,s=this._$f,_=this._$g;--e>=0;){var $=t[h++],u=t[h++];i[l++]=r*$+o*u,i[l++]=s*$+_*u}return;case F._$go|F._$gb:for(o=this._$H,n=this._$k,s=this._$f,a=this._$w;--e>=0;){var $=t[h++];i[l++]=o*t[h++]+n,i[l++]=s*$+a}return;case F._$go:for(o=this._$H,s=this._$f;--e>=0;){var $=t[h++];i[l++]=o*t[h++],i[l++]=s*$}return;case F._$fo|F._$gb:for(r=this._$7,n=this._$k,_=this._$g,a=this._$w;--e>=0;)i[l++]=r*t[h++]+n,i[l++]=_*t[h++]+a;return;case F._$fo:for(r=this._$7,_=this._$g;--e>=0;)i[l++]=r*t[h++],i[l++]=_*t[h++];return;case F._$gb:for(n=this._$k,a=this._$w;--e>=0;)i[l++]=t[h++]+n,i[l++]=t[h++]+a;return;case F.STATE_IDENTITY:return void(t==i&&h==l||w._$jT(t,h,i,l,2*e))}},F.prototype.update=function(){0==this._$H&&0==this._$f?1==this._$7&&1==this._$g?0==this._$k&&0==this._$w?(this._$hi=F.STATE_IDENTITY,this._$Z=F._$pS):(this._$hi=F._$gb,this._$Z=F._$hb):0==this._$k&&0==this._$w?(this._$hi=F._$fo,this._$Z=F._$kS):(this._$hi=F._$fo|F._$gb,this._$Z=F._$kS):0==this._$7&&0==this._$g?0==this._$k&&0==this._$w?(this._$hi=F._$go,this._$Z=F._$kS):(this._$hi=F._$go|F._$gb,this._$Z=F._$kS):0==this._$k&&0==this._$w?(this._$hi=F._$go|F._$fo,this._$Z=F._$kS):(this._$hi=F._$go|F._$fo|F._$gb,this._$Z=F._$kS)},F.prototype._$RT=function(t){this._$IT(t);var i=t[0],e=t[2],r=t[1],o=t[3],n=Math.sqrt(i*i+r*r),s=i*o-e*r;0==n?at._$so&&console.log(\"affine._$RT() / rt==0\"):(t[0]=n,t[1]=s/n,t[2]=(r*o+i*e)/s,t[3]=Math.atan2(r,i))},F.prototype._$ho=function(t,i,e,r){var o=new Float32Array(6),n=new Float32Array(6);t._$RT(o),i._$RT(n);var s=new Float32Array(6);s[0]=o[0]+(n[0]-o[0])*e,s[1]=o[1]+(n[1]-o[1])*e,s[2]=o[2]+(n[2]-o[2])*e,s[3]=o[3]+(n[3]-o[3])*e,s[4]=o[4]+(n[4]-o[4])*e,s[5]=o[5]+(n[5]-o[5])*e,r._$CT(s)},F.prototype._$CT=function(t){var i=Math.cos(t[3]),e=Math.sin(t[3]);this._$7=t[0]*i,this._$f=t[0]*e,this._$H=t[1]*(t[2]*i-e),this._$g=t[1]*(t[2]*e+i),this._$k=t[4],this._$w=t[5],this.update()},F.prototype._$IT=function(t){t[0]=this._$7,t[1]=this._$f,t[2]=this._$H,t[3]=this._$g,t[4]=this._$k,t[5]=this._$w},C.prototype=new s,C._$cs=\"VISIBLE:\",C._$ar=\"LAYOUT:\",C._$Co=0,C._$D2=[],C._$1T=1,C.loadMotion=function(t){var i=new C,e=[0],r=t.length;i._$yT=0;for(var o=0;o<r;++o){var n=255&t[o];if(\"\\n\"!=n&&\"\\r\"!=n)if(\"#\"!=n)if(\"$\"!=n){if(\"a\"<=n&&n<=\"z\"||\"A\"<=n&&n<=\"Z\"||\"_\"==n){for(var s=o,_=-1;o<r&&(\"\\r\"!=(n=255&t[o])&&\"\\n\"!=n);++o)if(\"=\"==n){_=o;break}if(_>=0){var a=new B;O.startsWith(t,s,C._$cs)?(a._$RP=B._$hs,a._$4P=new String(t,s,_-s)):O.startsWith(t,s,C._$ar)?(a._$4P=new String(t,s+7,_-s-7),O.startsWith(t,s+7,\"ANCHOR_X\")?a._$RP=B._$xs:O.startsWith(t,s+7,\"ANCHOR_Y\")?a._$RP=B._$us:O.startsWith(t,s+7,\"SCALE_X\")?a._$RP=B._$qs:O.startsWith(t,s+7,\"SCALE_Y\")?a._$RP=B._$Ys:O.startsWith(t,s+7,\"X\")?a._$RP=B._$ws:O.startsWith(t,s+7,\"Y\")&&(a._$RP=B._$Ns)):(a._$RP=B._$Fr,a._$4P=new String(t,s,_-s)),i.motions.push(a);var h=0;for(C._$D2.clear(),o=_+1;o<r&&(\"\\r\"!=(n=255&t[o])&&\"\\n\"!=n);++o)if(\",\"!=n&&\" \"!=n&&\"\\t\"!=n){var l=O._$LS(t,r,o,e);if(e[0]>0){C._$D2.push(l),h++;var $=e[0];if($<o){console.log(\"_$n0 _$hi . @Live2DMotion loadMotion()\\n\");break}o=$}}a._$I0=C._$D2._$BL(),h>i._$yT&&(i._$yT=h)}}}else{for(var s=o,_=-1;o<r&&(\"\\r\"!=(n=255&t[o])&&\"\\n\"!=n);++o)if(\"=\"==n){_=o;break}var u=!1;if(_>=0)for(_==s+4&&\"f\"==t[s+1]&&\"p\"==t[s+2]&&\"s\"==t[s+3]&&(u=!0),o=_+1;o<r&&(\"\\r\"!=(n=255&t[o])&&\"\\n\"!=n);++o)if(\",\"!=n&&\" \"!=n&&\"\\t\"!=n){var l=O._$LS(t,r,o,e);e[0]>0&&u&&5<l&&l<121&&(i._$D0=l),o=e[0]}for(;o<r&&(\"\\n\"!=t[o]&&\"\\r\"!=t[o]);++o);}else for(;o<r&&(\"\\n\"!=t[o]&&\"\\r\"!=t[o]);++o);}return i._$AS=1e3*i._$yT/i._$D0|0,i},C.prototype.getDurationMSec=function(){return this._$AS},C.prototype.dump=function(){for(var t=0;t<this.motions.length;t++){var i=this.motions[t];console.log(\"_$wL[%s] [%d]. \",i._$4P,i._$I0.length);for(var e=0;e<i._$I0.length&&e<10;e++)console.log(\"%5.2f ,\",i._$I0[e]);console.log(\"\\n\")}},C.prototype.updateParamExe=function(t,i,e,r){for(var o=i-r._$z2,n=o*this._$D0/1e3,s=0|n,_=n-s,a=0;a<this.motions.length;a++){var h=this.motions[a],l=h._$I0.length,$=h._$4P;if(h._$RP==B._$hs){var u=h._$I0[s>=l?l-1:s];t.setParamFloat($,u)}else if(B._$ws<=h._$RP&&h._$RP<=B._$Ys);else{var p=t.getParamFloat($),f=h._$I0[s>=l?l-1:s],c=h._$I0[s+1>=l?l-1:s+1],d=f+(c-f)*_,g=p+(d-p)*e;t.setParamFloat($,g)}}s>=this._$yT&&(this._$E?(r._$z2=i,this.loopFadeIn&&(r._$bs=i)):r._$9L=!0)},C.prototype._$r0=function(){return this._$E},C.prototype._$aL=function(t){this._$E=t},C.prototype.isLoopFadeIn=function(){return this.loopFadeIn},C.prototype.setLoopFadeIn=function(t){this.loopFadeIn=t},N.prototype.clear=function(){this.size=0},N.prototype.add=function(t){if(this._$P.length<=this.size){var i=new Float32Array(2*this.size);w._$jT(this._$P,0,i,0,this.size),this._$P=i}this._$P[this.size++]=t},N.prototype._$BL=function(){var t=new Float32Array(this.size);return w._$jT(this._$P,0,t,0,this.size),t},B._$Fr=0,B._$hs=1,B._$ws=100,B._$Ns=101,B._$xs=102,B._$us=103,B._$qs=104,B._$Ys=105,U._$Ms=1,U._$Qs=2,U._$i2=0,U._$No=2,U._$do=U._$Ms,U._$Ls=!0,U._$1r=5,U._$Qb=65,U._$J=1e-4,U._$FT=.001,U._$Ss=3,G._$o7=6,G._$S7=7,G._$s7=8,G._$77=9,G.LIVE2D_FORMAT_VERSION_V2_10_SDK2=10,G.LIVE2D_FORMAT_VERSION_V2_11_SDK2_1=11,G._$T7=G.LIVE2D_FORMAT_VERSION_V2_11_SDK2_1,G._$Is=-2004318072,G._$h0=0,G._$4L=23,G._$7P=33,G._$uT=function(t){console.log(\"_$bo :: _$6 _$mo _$E0 : %d\\n\",t)},G._$9o=function(t){if(t<40)return G._$uT(t),null;if(t<50)return G._$uT(t),null;if(t<60)return G._$uT(t),null;if(t<100)switch(t){case 65:return new Z;case 66:return new D;case 67:return new x;case 68:return new z;case 69:return new P;case 70:return new $t;default:return G._$uT(t),null}else if(t<150)switch(t){case 131:return new st;case 133:return new tt;case 136:return new p;case 137:return new ot;case 142:return new j}return G._$uT(t),null},Y._$HP=0,Y._$_0=!0;Y._$V2=-1,Y._$W0=-1,Y._$jr=!1,Y._$ZS=!0,Y._$tr=-1e6,Y._$lr=1e6,Y._$is=32,Y._$e=!1,Y.prototype.getDrawDataIndex=function(t){for(var i=this._$aS.length-1;i>=0;--i)if(null!=this._$aS[i]&&this._$aS[i].getDrawDataID()==t)return i;return-1},Y.prototype.getDrawData=function(t){if(t instanceof b){if(null==this._$Bo){this._$Bo=new Object;for(var i=this._$aS.length,e=0;e<i;e++){var r=this._$aS[e],o=r.getDrawDataID();null!=o&&(this._$Bo[o]=r)}}return this._$Bo[id]}return t<this._$aS.length?this._$aS[t]:null},Y.prototype.release=function(){this._$3S.clear(),this._$aS.clear(),this._$F2.clear(),null!=this._$Bo&&this._$Bo.clear(),this._$db.clear(),this._$8b.clear(),this._$Hr.clear()},Y.prototype.init=function(){this._$co++,this._$F2.length>0&&this.release();for(var t=this._$Ri.getModelImpl(),i=t._$Xr(),r=i.length,o=new Array,n=new Array,s=0;s<r;++s){var _=i[s];this._$F2.push(_),this._$Hr.push(_.init(this));for(var a=_.getBaseData(),h=a.length,l=0;l<h;++l)o.push(a[l]);for(var l=0;l<h;++l){var $=a[l].init(this);$._$l2(s),n.push($)}for(var u=_.getDrawData(),p=u.length,l=0;l<p;++l){var f=u[l],c=f.init(this);c._$IP=s,this._$aS.push(f),this._$8b.push(c)}}for(var d=o.length,g=yt._$2o();;){for(var y=!1,s=0;s<d;++s){var m=o[s];if(null!=m){var T=m.getTargetBaseDataID();(null==T||T==g||this.getBaseDataIndex(T)>=0)&&(this._$3S.push(m),this._$db.push(n[s]),o[s]=null,y=!0)}}if(!y)break}var P=t._$E2();if(null!=P){var S=P._$1s();if(null!=S)for(var v=S.length,s=0;s<v;++s){var L=S[s];null!=L&&this._$02(L.getParamID(),L.getDefaultValue(),L.getMinValue(),L.getMaxValue())}}this.clipManager=new e(this.dp_webgl),this.clipManager.init(this,this._$aS,this._$8b),this._$QT=!0},Y.prototype.update=function(){Y._$e&&_.start(\"_$zL\");for(var t=this._$_2.length,i=0;i<t;i++)this._$_2[i]!=this._$vr[i]&&(this._$Js[i]=Y._$ZS,this._$vr[i]=this._$_2[i]);var e=this._$3S.length,r=this._$aS.length,o=W._$or(),n=W._$Pr(),s=n-o+1;(null==this._$Ws||this._$Ws.length<s)&&(this._$Ws=new Int16Array(s),this._$Vs=new Int16Array(s));for(var i=0;i<s;i++)this._$Ws[i]=Y._$V2,this._$Vs[i]=Y._$V2;(null==this._$Er||this._$Er.length<r)&&(this._$Er=new Int16Array(r));for(var i=0;i<r;i++)this._$Er[i]=Y._$W0;Y._$e&&_.dump(\"_$zL\"),Y._$e&&_.start(\"_$UL\");for(var a=null,h=0;h<e;++h){var l=this._$3S[h],$=this._$db[h];try{l._$Nr(this,$),l._$2b(this,$)}catch(t){null==a&&(a=t)}}null!=a&&Y._$_0&&_._$Rb(a),Y._$e&&_.dump(\"_$UL\"),Y._$e&&_.start(\"_$DL\");for(var u=null,p=0;p<r;++p){var f=this._$aS[p],c=this._$8b[p];try{if(f._$Nr(this,c),c._$u2())continue;f._$2b(this,c);var d,g=Math.floor(f._$zS(this,c)-o);try{d=this._$Vs[g]}catch(t){console.log(\"_$li :: %s / %s \\t\\t\\t\\t@@_$fS\\n\",t.toString(),f.getDrawDataID().toString()),g=Math.floor(f._$zS(this,c)-o);continue}d==Y._$V2?this._$Ws[g]=p:this._$Er[d]=p,this._$Vs[g]=p}catch(t){null==u&&(u=t,at._$sT(at._$H7))}}null!=u&&Y._$_0&&_._$Rb(u),Y._$e&&_.dump(\"_$DL\"),Y._$e&&_.start(\"_$eL\");for(var i=this._$Js.length-1;i>=0;i--)this._$Js[i]=Y._$jr;return this._$QT=!1,Y._$e&&_.dump(\"_$eL\"),!1},Y.prototype.preDraw=function(t){null!=this.clipManager&&(t._$ZT(),this.clipManager.setupClip(this,t))},Y.prototype.draw=function(t){if(null==this._$Ws)return void _._$li(\"call _$Ri.update() before _$Ri.draw() \");var i=this._$Ws.length;t._$ZT();for(var e=0;e<i;++e){var r=this._$Ws[e];if(r!=Y._$V2)for(;;){var o=this._$aS[r],n=this._$8b[r];if(n._$yo()){var s=n._$IP,a=this._$Hr[s];n._$VS=a.getPartsOpacity(),o.draw(t,this,n)}var h=this._$Er[r];if(h<=r||h==Y._$W0)break;r=h}}},Y.prototype.getParamIndex=function(t){for(var i=this._$pb.length-1;i>=0;--i)if(this._$pb[i]==t)return i;return this._$02(t,0,Y._$tr,Y._$lr)},Y.prototype._$BS=function(t){return this.getBaseDataIndex(t)},Y.prototype.getBaseDataIndex=function(t){for(var i=this._$3S.length-1;i>=0;--i)if(null!=this._$3S[i]&&this._$3S[i].getBaseDataID()==t)return i;return-1},Y.prototype._$UT=function(t,i){var e=new Float32Array(i);return w._$jT(t,0,e,0,t.length),e},Y.prototype._$02=function(t,i,e,r){if(this._$qo>=this._$pb.length){var o=this._$pb.length,n=new Array(2*o);w._$jT(this._$pb,0,n,0,o),this._$pb=n,this._$_2=this._$UT(this._$_2,2*o),this._$vr=this._$UT(this._$vr,2*o),this._$Rr=this._$UT(this._$Rr,2*o),this._$Or=this._$UT(this._$Or,2*o);var s=new Array;w._$jT(this._$Js,0,s,0,o),this._$Js=s}return this._$pb[this._$qo]=t,this._$_2[this._$qo]=i,this._$vr[this._$qo]=i,this._$Rr[this._$qo]=e,this._$Or[this._$qo]=r,this._$Js[this._$qo]=Y._$ZS,this._$qo++},Y.prototype._$Zo=function(t,i){this._$3S[t]=i},Y.prototype.setParamFloat=function(t,i){i<this._$Rr[t]&&(i=this._$Rr[t]),i>this._$Or[t]&&(i=this._$Or[t]),this._$_2[t]=i},Y.prototype.loadParam=function(){var t=this._$_2.length;t>this._$fs.length&&(t=this._$fs.length),w._$jT(this._$fs,0,this._$_2,0,t)},Y.prototype.saveParam=function(){var t=this._$_2.length;t>this._$fs.length&&(this._$fs=new Float32Array(t)),w._$jT(this._$_2,0,this._$fs,0,t)},Y.prototype._$v2=function(){return this._$co},Y.prototype._$WS=function(){return this._$QT},Y.prototype._$Xb=function(t){return this._$Js[t]==Y._$ZS},Y.prototype._$vs=function(){return this._$Es},Y.prototype._$Tr=function(){return this._$ZP},Y.prototype.getBaseData=function(t){return this._$3S[t]},Y.prototype.getParamFloat=function(t){return this._$_2[t]},Y.prototype.getParamMax=function(t){return this._$Or[t]},Y.prototype.getParamMin=function(t){return this._$Rr[t]},Y.prototype.setPartsOpacity=function(t,i){this._$Hr[t].setPartsOpacity(i)},Y.prototype.getPartsOpacity=function(t){return this._$Hr[t].getPartsOpacity()},Y.prototype.getPartsDataIndex=function(t){for(var i=this._$F2.length-1;i>=0;--i)if(null!=this._$F2[i]&&this._$F2[i]._$p2()==t)return i;return-1},Y.prototype._$q2=function(t){return this._$db[t]},Y.prototype._$C2=function(t){return this._$8b[t]},Y.prototype._$Bb=function(t){return this._$Hr[t]},Y.prototype._$5s=function(t,i){for(var e=this._$Ws.length,r=t,o=0;o<e;++o){var n=this._$Ws[o];if(n!=Y._$V2)for(;;){var s=this._$8b[n];s._$yo()&&(s._$GT()._$B2(this,s,r),r+=i);var _=this._$Er[n];if(_<=n||_==Y._$W0)break;n=_}}},Y.prototype.setDrawParam=function(t){this.dp_webgl=t},Y.prototype.getDrawParam=function(){return this.dp_webgl},k._$0T=function(t){return k._$0T(new _$5(t))},k._$0T=function(t){if(!t.exists())throw new _$ls(t._$3b());for(var i,e=t.length(),r=new Int8Array(e),o=new _$Xs(new _$kb(t),8192),n=0;(i=o.read(r,n,e-n))>0;)n+=i;return r},k._$C=function(t){var i=null,e=null;try{i=t instanceof Array?t:new _$Xs(t,8192),e=new _$js;for(var r,o=new Int8Array(1e3);(r=i.read(o))>0;)e.write(o,0,r);return e._$TS()}finally{null!=t&&t.close(),null!=e&&(e.flush(),e.close())}},V.prototype._$T2=function(){return w.getUserTimeMSec()+Math._$10()*(2*this._$Br-1)},V.prototype._$uo=function(t){this._$Br=t},V.prototype._$QS=function(t,i,e){this._$Dr=t,this._$Cb=i,this._$mr=e},V.prototype._$7T=function(t){var i,e=w.getUserTimeMSec(),r=0;switch(this._$_L){case STATE_CLOSING:r=(e-this._$bb)/this._$Dr,r>=1&&(r=1,this._$_L=wt.STATE_CLOSED,this._$bb=e),i=1-r;break;case STATE_CLOSED:r=(e-this._$bb)/this._$Cb,r>=1&&(this._$_L=wt.STATE_OPENING,this._$bb=e),i=0;break;case STATE_OPENING:r=(e-this._$bb)/this._$mr,r>=1&&(r=1,this._$_L=wt.STATE_INTERVAL,this._$12=this._$T2()),i=r;break;case STATE_INTERVAL:this._$12<e&&(this._$_L=wt.STATE_CLOSING,this._$bb=e),i=1;break;case STATE_FIRST:default:this._$_L=wt.STATE_INTERVAL,this._$12=this._$T2(),i=1}this._$jo||(i=-i),t.setParamFloat(this._$iL,i),t.setParamFloat(this._$0L,i)};var wt=function(){};wt.STATE_FIRST=\"STATE_FIRST\",wt.STATE_INTERVAL=\"STATE_INTERVAL\",wt.STATE_CLOSING=\"STATE_CLOSING\",wt.STATE_CLOSED=\"STATE_CLOSED\",wt.STATE_OPENING=\"STATE_OPENING\",X.prototype=new E,X._$As=32,X._$Gr=!1,X._$NT=null,X._$vS=null,X._$no=null,X._$9r=function(t){return new Float32Array(t)},X._$vb=function(t){return new Int16Array(t)},X._$cr=function(t,i){return null==t||t._$yL()<i.length?(t=X._$9r(2*i.length),t.put(i),t._$oT(0)):(t.clear(),t.put(i),t._$oT(0)),t},X._$mb=function(t,i){return null==t||t._$yL()<i.length?(t=X._$vb(2*i.length),t.put(i),t._$oT(0)):(t.clear(),t.put(i),t._$oT(0)),t},X._$Hs=function(){return X._$Gr},X._$as=function(t){X._$Gr=t},X.prototype.setGL=function(t){this.gl=t},X.prototype.setTransform=function(t){this.transform=t},X.prototype._$ZT=function(){},X.prototype._$Uo=function(t,i,e,r,o,n,s,_){if(!(n<.01)){var a=this._$U2[t],h=n>.9?at.EXPAND_W:0;this.gl.drawElements(a,e,r,o,n,h,this.transform,_)}},X.prototype._$Rs=function(){throw new Error(\"_$Rs\")},X.prototype._$Ds=function(t){throw new Error(\"_$Ds\")},X.prototype._$K2=function(){for(var t=0;t<this._$sb.length;t++){0!=this._$sb[t]&&(this.gl._$Sr(1,this._$sb,t),this._$sb[t]=0)}},X.prototype.setTexture=function(t,i){this._$sb.length<t+1&&this._$nS(t),this._$sb[t]=i},X.prototype.setTexture=function(t,i){this._$sb.length<t+1&&this._$nS(t),this._$U2[t]=i},X.prototype._$nS=function(t){var i=Math.max(2*this._$sb.length,t+1+10),e=new Int32Array(i);w._$jT(this._$sb,0,e,0,this._$sb.length),this._$sb=e;var r=new Array;w._$jT(this._$U2,0,r,0,this._$U2.length),this._$U2=r},z.prototype=new I,z._$Xo=new Float32Array(2),z._$io=new Float32Array(2),z._$0o=new Float32Array(2),z._$Lo=new Float32Array(2),z._$To=new Float32Array(2),z._$Po=new Float32Array(2),z._$gT=new Array,z.prototype._$zP=function(){this._$GS=new D,this._$GS._$zP(),this._$Y0=new Array},z.prototype.getType=function(){return I._$c2},z.prototype._$F0=function(t){I.prototype._$F0.call(this,t),this._$GS=t._$nP(),this._$Y0=t._$nP(),I.prototype.readV2_opacity.call(this,t)},z.prototype.init=function(t){var i=new H(this);return i._$Yr=new P,this._$32()&&(i._$Wr=new P),i},z.prototype._$Nr=function(t,i){this!=i._$GT()&&console.log(\"### assert!! ### \");var e=i;if(this._$GS._$Ur(t)){var r=z._$gT;r[0]=!1;var o=this._$GS._$Q2(t,r);i._$Ib(r[0]),this.interpolateOpacity(t,this._$GS,i,r);var n=t._$vs(),s=t._$Tr();if(this._$GS._$zr(n,s,o),o<=0){var _=this._$Y0[n[0]];e._$Yr.init(_)}else if(1==o){var _=this._$Y0[n[0]],a=this._$Y0[n[1]],h=s[0];e._$Yr._$fL=_._$fL+(a._$fL-_._$fL)*h,e._$Yr._$gL=_._$gL+(a._$gL-_._$gL)*h,e._$Yr._$B0=_._$B0+(a._$B0-_._$B0)*h,e._$Yr._$z0=_._$z0+(a._$z0-_._$z0)*h,e._$Yr._$qT=_._$qT+(a._$qT-_._$qT)*h}else if(2==o){var _=this._$Y0[n[0]],a=this._$Y0[n[1]],l=this._$Y0[n[2]],$=this._$Y0[n[3]],h=s[0],u=s[1],p=_._$fL+(a._$fL-_._$fL)*h,f=l._$fL+($._$fL-l._$fL)*h;e._$Yr._$fL=p+(f-p)*u,p=_._$gL+(a._$gL-_._$gL)*h,f=l._$gL+($._$gL-l._$gL)*h,e._$Yr._$gL=p+(f-p)*u,p=_._$B0+(a._$B0-_._$B0)*h,f=l._$B0+($._$B0-l._$B0)*h,e._$Yr._$B0=p+(f-p)*u,p=_._$z0+(a._$z0-_._$z0)*h,f=l._$z0+($._$z0-l._$z0)*h,e._$Yr._$z0=p+(f-p)*u,p=_._$qT+(a._$qT-_._$qT)*h,f=l._$qT+($._$qT-l._$qT)*h,e._$Yr._$qT=p+(f-p)*u}else if(3==o){var c=this._$Y0[n[0]],d=this._$Y0[n[1]],g=this._$Y0[n[2]],y=this._$Y0[n[3]],m=this._$Y0[n[4]],T=this._$Y0[n[5]],P=this._$Y0[n[6]],S=this._$Y0[n[7]],h=s[0],u=s[1],v=s[2],p=c._$fL+(d._$fL-c._$fL)*h,f=g._$fL+(y._$fL-g._$fL)*h,L=m._$fL+(T._$fL-m._$fL)*h,M=P._$fL+(S._$fL-P._$fL)*h;e._$Yr._$fL=(1-v)*(p+(f-p)*u)+v*(L+(M-L)*u),p=c._$gL+(d._$gL-c._$gL)*h,f=g._$gL+(y._$gL-g._$gL)*h,L=m._$gL+(T._$gL-m._$gL)*h,M=P._$gL+(S._$gL-P._$gL)*h,e._$Yr._$gL=(1-v)*(p+(f-p)*u)+v*(L+(M-L)*u),p=c._$B0+(d._$B0-c._$B0)*h,f=g._$B0+(y._$B0-g._$B0)*h,L=m._$B0+(T._$B0-m._$B0)*h,M=P._$B0+(S._$B0-P._$B0)*h,e._$Yr._$B0=(1-v)*(p+(f-p)*u)+v*(L+(M-L)*u),p=c._$z0+(d._$z0-c._$z0)*h,f=g._$z0+(y._$z0-g._$z0)*h,L=m._$z0+(T._$z0-m._$z0)*h,M=P._$z0+(S._$z0-P._$z0)*h,e._$Yr._$z0=(1-v)*(p+(f-p)*u)+v*(L+(M-L)*u),p=c._$qT+(d._$qT-c._$qT)*h,f=g._$qT+(y._$qT-g._$qT)*h,L=m._$qT+(T._$qT-m._$qT)*h,M=P._$qT+(S._$qT-P._$qT)*h,e._$Yr._$qT=(1-v)*(p+(f-p)*u)+v*(L+(M-L)*u)}else if(4==o){var E=this._$Y0[n[0]],A=this._$Y0[n[1]],I=this._$Y0[n[2]],w=this._$Y0[n[3]],x=this._$Y0[n[4]],O=this._$Y0[n[5]],D=this._$Y0[n[6]],R=this._$Y0[n[7]],b=this._$Y0[n[8]],F=this._$Y0[n[9]],C=this._$Y0[n[10]],N=this._$Y0[n[11]],B=this._$Y0[n[12]],U=this._$Y0[n[13]],G=this._$Y0[n[14]],Y=this._$Y0[n[15]],h=s[0],u=s[1],v=s[2],k=s[3],p=E._$fL+(A._$fL-E._$fL)*h,f=I._$fL+(w._$fL-I._$fL)*h,L=x._$fL+(O._$fL-x._$fL)*h,M=D._$fL+(R._$fL-D._$fL)*h,V=b._$fL+(F._$fL-b._$fL)*h,X=C._$fL+(N._$fL-C._$fL)*h,H=B._$fL+(U._$fL-B._$fL)*h,W=G._$fL+(Y._$fL-G._$fL)*h;e._$Yr._$fL=(1-k)*((1-v)*(p+(f-p)*u)+v*(L+(M-L)*u))+k*((1-v)*(V+(X-V)*u)+v*(H+(W-H)*u)),p=E._$gL+(A._$gL-E._$gL)*h,f=I._$gL+(w._$gL-I._$gL)*h,L=x._$gL+(O._$gL-x._$gL)*h,M=D._$gL+(R._$gL-D._$gL)*h,V=b._$gL+(F._$gL-b._$gL)*h,X=C._$gL+(N._$gL-C._$gL)*h,H=B._$gL+(U._$gL-B._$gL)*h,W=G._$gL+(Y._$gL-G._$gL)*h,e._$Yr._$gL=(1-k)*((1-v)*(p+(f-p)*u)+v*(L+(M-L)*u))+k*((1-v)*(V+(X-V)*u)+v*(H+(W-H)*u)),p=E._$B0+(A._$B0-E._$B0)*h,f=I._$B0+(w._$B0-I._$B0)*h,L=x._$B0+(O._$B0-x._$B0)*h,M=D._$B0+(R._$B0-D._$B0)*h,V=b._$B0+(F._$B0-b._$B0)*h,X=C._$B0+(N._$B0-C._$B0)*h,H=B._$B0+(U._$B0-B._$B0)*h,W=G._$B0+(Y._$B0-G._$B0)*h,e._$Yr._$B0=(1-k)*((1-v)*(p+(f-p)*u)+v*(L+(M-L)*u))+k*((1-v)*(V+(X-V)*u)+v*(H+(W-H)*u)),p=E._$z0+(A._$z0-E._$z0)*h,f=I._$z0+(w._$z0-I._$z0)*h,L=x._$z0+(O._$z0-x._$z0)*h,M=D._$z0+(R._$z0-D._$z0)*h,V=b._$z0+(F._$z0-b._$z0)*h,X=C._$z0+(N._$z0-C._$z0)*h,H=B._$z0+(U._$z0-B._$z0)*h,W=G._$z0+(Y._$z0-G._$z0)*h,e._$Yr._$z0=(1-k)*((1-v)*(p+(f-p)*u)+v*(L+(M-L)*u))+k*((1-v)*(V+(X-V)*u)+v*(H+(W-H)*u)),p=E._$qT+(A._$qT-E._$qT)*h,f=I._$qT+(w._$qT-I._$qT)*h,L=x._$qT+(O._$qT-x._$qT)*h,M=D._$qT+(R._$qT-D._$qT)*h,V=b._$qT+(F._$qT-b._$qT)*h,X=C._$qT+(N._$qT-C._$qT)*h,H=B._$qT+(U._$qT-B._$qT)*h,W=G._$qT+(Y._$qT-G._$qT)*h,e._$Yr._$qT=(1-k)*((1-v)*(p+(f-p)*u)+v*(L+(M-L)*u))+k*((1-v)*(V+(X-V)*u)+v*(H+(W-H)*u))}else{for(var j=0|Math.pow(2,o),q=new Float32Array(j),J=0;J<j;J++){for(var Q=J,Z=1,K=0;K<o;K++)Z*=Q%2==0?1-s[K]:s[K],Q/=2;q[J]=Z}for(var tt=new Array,it=0;it<j;it++)tt[it]=this._$Y0[n[it]];for(var et=0,rt=0,ot=0,nt=0,st=0,it=0;it<j;it++)et+=q[it]*tt[it]._$fL,rt+=q[it]*tt[it]._$gL,ot+=q[it]*tt[it]._$B0,nt+=q[it]*tt[it]._$z0,st+=q[it]*tt[it]._$qT;e._$Yr._$fL=et,e._$Yr._$gL=rt,e._$Yr._$B0=ot,e._$Yr._$z0=nt,e._$Yr._$qT=st}var _=this._$Y0[n[0]];e._$Yr.reflectX=_.reflectX,e._$Yr.reflectY=_.reflectY}},z.prototype._$2b=function(t,i){this!=i._$GT()&&console.log(\"### assert!! ### \");var e=i;if(e._$hS(!0),this._$32()){var r=this.getTargetBaseDataID();if(e._$8r==I._$ur&&(e._$8r=t.getBaseDataIndex(r)),e._$8r<0)at._$so&&_._$li(\"_$L _$0P _$G :: %s\",r),e._$hS(!1);else{var o=t.getBaseData(e._$8r);if(null!=o){var n=t._$q2(e._$8r),s=z._$Xo;s[0]=e._$Yr._$fL,s[1]=e._$Yr._$gL;var a=z._$io;a[0]=0,a[1]=-.1;n._$GT().getType()==I._$c2?a[1]=-10:a[1]=-.1;var h=z._$0o;this._$Jr(t,o,n,s,a,h);var l=Lt._$92(a,h);o._$nb(t,n,s,s,1,0,2),e._$Wr._$fL=s[0],e._$Wr._$gL=s[1],e._$Wr._$B0=e._$Yr._$B0,e._$Wr._$z0=e._$Yr._$z0,e._$Wr._$qT=e._$Yr._$qT-l*Lt._$NS;var $=n.getTotalScale();e.setTotalScale_notForClient($*e._$Wr._$B0);var u=n.getTotalOpacity();e.setTotalOpacity(u*e.getInterpolatedOpacity()),e._$Wr.reflectX=e._$Yr.reflectX,e._$Wr.reflectY=e._$Yr.reflectY,e._$hS(n._$yo())}else e._$hS(!1)}}else e.setTotalScale_notForClient(e._$Yr._$B0),e.setTotalOpacity(e.getInterpolatedOpacity())},z.prototype._$nb=function(t,i,e,r,o,n,s){this!=i._$GT()&&console.log(\"### assert!! ### \");for(var _,a,h=i,l=null!=h._$Wr?h._$Wr:h._$Yr,$=Math.sin(Lt._$bS*l._$qT),u=Math.cos(Lt._$bS*l._$qT),p=h.getTotalScale(),f=l.reflectX?-1:1,c=l.reflectY?-1:1,d=u*p*f,g=-$*p*c,y=$*p*f,m=u*p*c,T=l._$fL,P=l._$gL,S=o*s,v=n;v<S;v+=s)_=e[v],a=e[v+1],r[v]=d*_+g*a+T,r[v+1]=y*_+m*a+P},z.prototype._$Jr=function(t,i,e,r,o,n){i!=e._$GT()&&console.log(\"### assert!! ### \");var s=z._$Lo;z._$Lo[0]=r[0],z._$Lo[1]=r[1],i._$nb(t,e,s,s,1,0,2);for(var _=z._$To,a=z._$Po,h=1,l=0;l<10;l++){if(a[0]=r[0]+h*o[0],a[1]=r[1]+h*o[1],i._$nb(t,e,a,_,1,0,2),_[0]-=s[0],_[1]-=s[1],0!=_[0]||0!=_[1])return n[0]=_[0],void(n[1]=_[1]);if(a[0]=r[0]-h*o[0],a[1]=r[1]-h*o[1],i._$nb(t,e,a,_,1,0,2),_[0]-=s[0],_[1]-=s[1],0!=_[0]||0!=_[1])return _[0]=-_[0],_[0]=-_[0],n[0]=_[0],void(n[1]=_[1]);h*=.1}at._$so&&console.log(\"_$L0 to transform _$SP\\n\")},H.prototype=new _t,W.prototype=new M,W._$ur=-2,W._$ES=500,W._$wb=2,W._$8S=3,W._$os=4,W._$52=W._$ES,W._$R2=W._$ES,W._$Sb=function(t){for(var i=t.length-1;i>=0;--i){var e=t[i];e<W._$52?W._$52=e:e>W._$R2&&(W._$R2=e)}},W._$or=function(){return W._$52},W._$Pr=function(){return W._$R2},W.prototype._$F0=function(t){this._$gP=t._$nP(),this._$dr=t._$nP(),this._$GS=t._$nP(),this._$qb=t._$6L(),this._$Lb=t._$cS(),this._$mS=t._$Tb(),t.getFormatVersion()>=G._$T7?(this.clipID=t._$nP(),this.clipIDList=this.convertClipIDForV2_11(this.clipID)):this.clipIDList=null,W._$Sb(this._$Lb)},W.prototype.getClipIDList=function(){return this.clipIDList},W.prototype._$Nr=function(t,i){if(i._$IS[0]=!1,i._$Us=v._$Z2(t,this._$GS,i._$IS,this._$Lb),at._$Zs);else if(i._$IS[0])return;i._$7s=v._$br(t,this._$GS,i._$IS,this._$mS)},W.prototype._$2b=function(t){},W.prototype.getDrawDataID=function(){return this._$gP},W.prototype._$j2=function(t){this._$gP=t},W.prototype.getOpacity=function(t,i){return i._$7s},W.prototype._$zS=function(t,i){return i._$Us},W.prototype.getTargetBaseDataID=function(){return this._$dr},W.prototype._$gs=function(t){this._$dr=t},W.prototype._$32=function(){return null!=this._$dr&&this._$dr!=yt._$2o()},W.prototype.getType=function(){},j._$42=0,j.prototype._$1b=function(){return this._$3S},j.prototype.getDrawDataList=function(){return this._$aS},j.prototype._$F0=function(t){this._$NL=t._$nP(),this._$aS=t._$nP(),this._$3S=t._$nP()},j.prototype._$kr=function(t){t._$Zo(this._$3S),t._$xo(this._$aS),this._$3S=null,this._$aS=null},q.prototype=new i,q.loadModel=function(t){var e=new q;return i._$62(e,t),e},q.loadModel=function(t){var e=new q;return i._$62(e,t),e},q._$to=function(){return new q},q._$er=function(t){var i=new _$5(\"../_$_r/_$t0/_$Ri/_$_P._$d\");if(0==i.exists())throw new _$ls(\"_$t0 _$_ _$6 _$Ui :: \"+i._$PL());for(var e=[\"../_$_r/_$t0/_$Ri/_$_P.512/_$CP._$1\",\"../_$_r/_$t0/_$Ri/_$_P.512/_$vP._$1\",\"../_$_r/_$t0/_$Ri/_$_P.512/_$EP._$1\",\"../_$_r/_$t0/_$Ri/_$_P.512/_$pP._$1\"],r=q.loadModel(i._$3b()),o=0;o<e.length;o++){var n=new _$5(e[o]);if(0==n.exists())throw new _$ls(\"_$t0 _$_ _$6 _$Ui :: \"+n._$PL());r.setTexture(o,_$nL._$_o(t,n._$3b()))}return r},q.prototype.setGL=function(t){this._$zo.setGL(t)},q.prototype.setTransform=function(t){this._$zo.setTransform(t)},q.prototype.draw=function(){this._$5S.draw(this._$zo)},q.prototype._$K2=function(){this._$zo._$K2()},q.prototype.setTexture=function(t,i){null==this._$zo&&_._$li(\"_$Yi for QT _$ki / _$XS() is _$6 _$ui!!\"),this._$zo.setTexture(t,i)},q.prototype.setTexture=function(t,i){null==this._$zo&&_._$li(\"_$Yi for QT _$ki / _$XS() is _$6 _$ui!!\"),this._$zo.setTexture(t,i)},q.prototype._$Rs=function(){return this._$zo._$Rs()},q.prototype._$Ds=function(t){this._$zo._$Ds(t)},q.prototype.getDrawParam=function(){return this._$zo},J.prototype=new s,J._$cs=\"VISIBLE:\",J._$ar=\"LAYOUT:\",J.MTN_PREFIX_FADEIN=\"FADEIN:\",J.MTN_PREFIX_FADEOUT=\"FADEOUT:\",J._$Co=0,J._$1T=1,J.loadMotion=function(t){var i=k._$C(t);return J.loadMotion(i)},J.loadMotion=function(t){t instanceof ArrayBuffer&&(t=new DataView(t));var i=new J,e=[0],r=t.byteLength;i._$yT=0;for(var o=0;o<r;++o){var n=Q(t,o),s=n.charCodeAt(0);if(\"\\n\"!=n&&\"\\r\"!=n)if(\"#\"!=n)if(\"$\"!=n){if(97<=s&&s<=122||65<=s&&s<=90||\"_\"==n){for(var _=o,a=-1;o<r&&(\"\\r\"!=(n=Q(t,o))&&\"\\n\"!=n);++o)if(\"=\"==n){a=o;break}if(a>=0){var h=new B;O.startsWith(t,_,J._$cs)?(h._$RP=B._$hs,h._$4P=O.createString(t,_,a-_)):O.startsWith(t,_,J._$ar)?(h._$4P=O.createString(t,_+7,a-_-7),O.startsWith(t,_+7,\"ANCHOR_X\")?h._$RP=B._$xs:O.startsWith(t,_+7,\"ANCHOR_Y\")?h._$RP=B._$us:O.startsWith(t,_+7,\"SCALE_X\")?h._$RP=B._$qs:O.startsWith(t,_+7,\"SCALE_Y\")?h._$RP=B._$Ys:O.startsWith(t,_+7,\"X\")?h._$RP=B._$ws:O.startsWith(t,_+7,\"Y\")&&(h._$RP=B._$Ns)):(h._$RP=B._$Fr,h._$4P=O.createString(t,_,a-_)),i.motions.push(h);var l=0,$=[];for(o=a+1;o<r&&(\"\\r\"!=(n=Q(t,o))&&\"\\n\"!=n);++o)if(\",\"!=n&&\" \"!=n&&\"\\t\"!=n){var u=O._$LS(t,r,o,e);if(e[0]>0){$.push(u),l++;var p=e[0];if(p<o){console.log(\"_$n0 _$hi . @Live2DMotion loadMotion()\\n\");break}o=p-1}}h._$I0=new Float32Array($),l>i._$yT&&(i._$yT=l)}}}else{for(var _=o,a=-1;o<r&&(\"\\r\"!=(n=Q(t,o))&&\"\\n\"!=n);++o)if(\"=\"==n){a=o;break}var f=!1;if(a>=0)for(a==_+4&&\"f\"==Q(t,_+1)&&\"p\"==Q(t,_+2)&&\"s\"==Q(t,_+3)&&(f=!0),o=a+1;o<r&&(\"\\r\"!=(n=Q(t,o))&&\"\\n\"!=n);++o)if(\",\"!=n&&\" \"!=n&&\"\\t\"!=n){var u=O._$LS(t,r,o,e);e[0]>0&&f&&5<u&&u<121&&(i._$D0=u),o=e[0]}for(;o<r&&(\"\\n\"!=Q(t,o)&&\"\\r\"!=Q(t,o));++o);}else for(;o<r&&(\"\\n\"!=Q(t,o)&&\"\\r\"!=Q(t,o));++o);}return i._$rr=1e3*i._$yT/i._$D0|0,i},J.prototype.getDurationMSec=function(){return this._$E?-1:this._$rr},J.prototype.getLoopDurationMSec=function(){return this._$rr},J.prototype.dump=function(){for(var t=0;t<this.motions.length;t++){var i=this.motions[t];console.log(\"_$wL[%s] [%d]. \",i._$4P,i._$I0.length);for(var e=0;e<i._$I0.length&&e<10;e++)console.log(\"%5.2f ,\",i._$I0[e]);console.log(\"\\n\")}},J.prototype.updateParamExe=function(t,i,e,r){for(var o=i-r._$z2,n=o*this._$D0/1e3,s=0|n,_=n-s,a=0;a<this.motions.length;a++){var h=this.motions[a],l=h._$I0.length,$=h._$4P;if(h._$RP==B._$hs){var u=h._$I0[s>=l?l-1:s];t.setParamFloat($,u)}else if(B._$ws<=h._$RP&&h._$RP<=B._$Ys);else{var p,f=t.getParamIndex($),c=t.getModelContext(),d=c.getParamMax(f),g=c.getParamMin(f),y=.4*(d-g),m=c.getParamFloat(f),T=h._$I0[s>=l?l-1:s],P=h._$I0[s+1>=l?l-1:s+1];p=T<P&&P-T>y||T>P&&T-P>y?T:T+(P-T)*_;var S=m+(p-m)*e;t.setParamFloat($,S)}}s>=this._$yT&&(this._$E?(r._$z2=i,this.loopFadeIn&&(r._$bs=i)):r._$9L=!0),this._$eP=e},J.prototype._$r0=function(){return this._$E},J.prototype._$aL=function(t){this._$E=t},J.prototype._$S0=function(){return this._$D0},J.prototype._$U0=function(t){this._$D0=t},J.prototype.isLoopFadeIn=function(){return this.loopFadeIn},J.prototype.setLoopFadeIn=function(t){this.loopFadeIn=t},N.prototype.clear=function(){this.size=0},N.prototype.add=function(t){if(this._$P.length<=this.size){var i=new Float32Array(2*this.size);w._$jT(this._$P,0,i,0,this.size),this._$P=i}this._$P[this.size++]=t},N.prototype._$BL=function(){var t=new Float32Array(this.size);return w._$jT(this._$P,0,t,0,this.size),t},B._$Fr=0,B._$hs=1,B._$ws=100,B._$Ns=101,B._$xs=102,B._$us=103,B._$qs=104,B._$Ys=105,Z.prototype=new I,Z._$gT=new Array,Z.prototype._$zP=function(){this._$GS=new D,this._$GS._$zP()},Z.prototype._$F0=function(t){I.prototype._$F0.call(this,t),this._$A=t._$6L(),this._$o=t._$6L(),this._$GS=t._$nP(),this._$Eo=t._$nP(),I.prototype.readV2_opacity.call(this,t)},Z.prototype.init=function(t){var i=new K(this),e=(this._$o+1)*(this._$A+1);return null!=i._$Cr&&(i._$Cr=null),i._$Cr=new Float32Array(2*e),null!=i._$hr&&(i._$hr=null),this._$32()?i._$hr=new Float32Array(2*e):i._$hr=null,i},Z.prototype._$Nr=function(t,i){var e=i;if(this._$GS._$Ur(t)){var r=this._$VT(),o=Z._$gT;o[0]=!1,v._$Vr(t,this._$GS,o,r,this._$Eo,e._$Cr,0,2),i._$Ib(o[0]),this.interpolateOpacity(t,this._$GS,i,o)}},Z.prototype._$2b=function(t,i){var e=i;if(e._$hS(!0),this._$32()){var r=this.getTargetBaseDataID();if(e._$8r==I._$ur&&(e._$8r=t.getBaseDataIndex(r)),e._$8r<0)at._$so&&_._$li(\"_$L _$0P _$G :: %s\",r),e._$hS(!1);else{var o=t.getBaseData(e._$8r),n=t._$q2(e._$8r);if(null!=o&&n._$yo()){var s=n.getTotalScale();e.setTotalScale_notForClient(s);var a=n.getTotalOpacity();e.setTotalOpacity(a*e.getInterpolatedOpacity()),o._$nb(t,n,e._$Cr,e._$hr,this._$VT(),0,2),e._$hS(!0)}else e._$hS(!1)}}else e.setTotalOpacity(e.getInterpolatedOpacity())},Z.prototype._$nb=function(t,i,e,r,o,n,s){var _=i,a=null!=_._$hr?_._$hr:_._$Cr;Z.transformPoints_sdk2(e,r,o,n,s,a,this._$o,this._$A)},Z.transformPoints_sdk2=function(i,e,r,o,n,s,_,a){for(var h,l,$,u=r*n,p=0,f=0,c=0,d=0,g=0,y=0,m=!1,T=o;T<u;T+=n){var P,S,v,L;if(v=i[T],L=i[T+1],P=v*_,S=L*a,P<0||S<0||_<=P||a<=S){var M=_+1;if(!m){m=!0,p=.25*(s[2*(0+0*M)]+s[2*(_+0*M)]+s[2*(0+a*M)]+s[2*(_+a*M)]),f=.25*(s[2*(0+0*M)+1]+s[2*(_+0*M)+1]+s[2*(0+a*M)+1]+s[2*(_+a*M)+1]);var E=s[2*(_+a*M)]-s[2*(0+0*M)],A=s[2*(_+a*M)+1]-s[2*(0+0*M)+1],I=s[2*(_+0*M)]-s[2*(0+a*M)],w=s[2*(_+0*M)+1]-s[2*(0+a*M)+1];c=.5*(E+I),d=.5*(A+w),g=.5*(E-I),y=.5*(A-w),p-=.5*(c+g),f-=.5*(d+y)}if(-2<v&&v<3&&-2<L&&L<3)if(v<=0)if(L<=0){var x=s[2*(0+0*M)],O=s[2*(0+0*M)+1],D=p-2*c,R=f-2*d,b=p-2*g,F=f-2*y,C=p-2*c-2*g,N=f-2*d-2*y,B=.5*(v- -2),U=.5*(L- -2);B+U<=1?(e[T]=C+(b-C)*B+(D-C)*U,e[T+1]=N+(F-N)*B+(R-N)*U):(e[T]=x+(D-x)*(1-B)+(b-x)*(1-U),e[T+1]=O+(R-O)*(1-B)+(F-O)*(1-U))}else if(L>=1){var b=s[2*(0+a*M)],F=s[2*(0+a*M)+1],C=p-2*c+1*g,N=f-2*d+1*y,x=p+3*g,O=f+3*y,D=p-2*c+3*g,R=f-2*d+3*y,B=.5*(v- -2),U=.5*(L-1);B+U<=1?(e[T]=C+(b-C)*B+(D-C)*U,e[T+1]=N+(F-N)*B+(R-N)*U):(e[T]=x+(D-x)*(1-B)+(b-x)*(1-U),e[T+1]=O+(R-O)*(1-B)+(F-O)*(1-U))}else{var G=0|S;G==a&&(G=a-1);var B=.5*(v- -2),U=S-G,Y=G/a,k=(G+1)/a,b=s[2*(0+G*M)],F=s[2*(0+G*M)+1],x=s[2*(0+(G+1)*M)],O=s[2*(0+(G+1)*M)+1],C=p-2*c+Y*g,N=f-2*d+Y*y,D=p-2*c+k*g,R=f-2*d+k*y;B+U<=1?(e[T]=C+(b-C)*B+(D-C)*U,e[T+1]=N+(F-N)*B+(R-N)*U):(e[T]=x+(D-x)*(1-B)+(b-x)*(1-U),e[T+1]=O+(R-O)*(1-B)+(F-O)*(1-U))}else if(1<=v)if(L<=0){var D=s[2*(_+0*M)],R=s[2*(_+0*M)+1],x=p+3*c,O=f+3*d,C=p+1*c-2*g,N=f+1*d-2*y,b=p+3*c-2*g,F=f+3*d-2*y,B=.5*(v-1),U=.5*(L- -2);B+U<=1?(e[T]=C+(b-C)*B+(D-C)*U,e[T+1]=N+(F-N)*B+(R-N)*U):(e[T]=x+(D-x)*(1-B)+(b-x)*(1-U),e[T+1]=O+(R-O)*(1-B)+(F-O)*(1-U))}else if(L>=1){var C=s[2*(_+a*M)],N=s[2*(_+a*M)+1],b=p+3*c+1*g,F=f+3*d+1*y,D=p+1*c+3*g,R=f+1*d+3*y,x=p+3*c+3*g,O=f+3*d+3*y,B=.5*(v-1),U=.5*(L-1);B+U<=1?(e[T]=C+(b-C)*B+(D-C)*U,e[T+1]=N+(F-N)*B+(R-N)*U):(e[T]=x+(D-x)*(1-B)+(b-x)*(1-U),e[T+1]=O+(R-O)*(1-B)+(F-O)*(1-U))}else{var G=0|S;G==a&&(G=a-1);var B=.5*(v-1),U=S-G,Y=G/a,k=(G+1)/a,C=s[2*(_+G*M)],N=s[2*(_+G*M)+1],D=s[2*(_+(G+1)*M)],R=s[2*(_+(G+1)*M)+1],b=p+3*c+Y*g,F=f+3*d+Y*y,x=p+3*c+k*g,O=f+3*d+k*y;B+U<=1?(e[T]=C+(b-C)*B+(D-C)*U,e[T+1]=N+(F-N)*B+(R-N)*U):(e[T]=x+(D-x)*(1-B)+(b-x)*(1-U),e[T+1]=O+(R-O)*(1-B)+(F-O)*(1-U))}else if(L<=0){var V=0|P;V==_&&(V=_-1);var B=P-V,U=.5*(L- -2),X=V/_,z=(V+1)/_,D=s[2*(V+0*M)],R=s[2*(V+0*M)+1],x=s[2*(V+1+0*M)],O=s[2*(V+1+0*M)+1],C=p+X*c-2*g,N=f+X*d-2*y,b=p+z*c-2*g,F=f+z*d-2*y;B+U<=1?(e[T]=C+(b-C)*B+(D-C)*U,e[T+1]=N+(F-N)*B+(R-N)*U):(e[T]=x+(D-x)*(1-B)+(b-x)*(1-U),e[T+1]=O+(R-O)*(1-B)+(F-O)*(1-U))}else if(L>=1){var V=0|P;V==_&&(V=_-1);var B=P-V,U=.5*(L-1),X=V/_,z=(V+1)/_,C=s[2*(V+a*M)],N=s[2*(V+a*M)+1],b=s[2*(V+1+a*M)],F=s[2*(V+1+a*M)+1],D=p+X*c+3*g,R=f+X*d+3*y,x=p+z*c+3*g,O=f+z*d+3*y;B+U<=1?(e[T]=C+(b-C)*B+(D-C)*U,e[T+1]=N+(F-N)*B+(R-N)*U):(e[T]=x+(D-x)*(1-B)+(b-x)*(1-U),e[T+1]=O+(R-O)*(1-B)+(F-O)*(1-U))}else t.err.printf(\"_$li calc : %.4f , %.4f\\t\\t\\t\\t\\t@@BDBoxGrid\\n\",v,L);else e[T]=p+v*c+L*g,e[T+1]=f+v*d+L*y}else l=P-(0|P),$=S-(0|S),h=2*((0|P)+(0|S)*(_+1)),l+$<1?(e[T]=s[h]*(1-l-$)+s[h+2]*l+s[h+2*(_+1)]*$,e[T+1]=s[h+1]*(1-l-$)+s[h+3]*l+s[h+2*(_+1)+1]*$):(e[T]=s[h+2*(_+1)+2]*(l-1+$)+s[h+2*(_+1)]*(1-l)+s[h+2]*(1-$),e[T+1]=s[h+2*(_+1)+3]*(l-1+$)+s[h+2*(_+1)+1]*(1-l)+s[h+3]*(1-$))}},Z.prototype.transformPoints_sdk1=function(t,i,e,r,o,n,s){for(var _,a,h,l,$,u,p,f=i,c=this._$o,d=this._$A,g=o*s,y=null!=f._$hr?f._$hr:f._$Cr,m=n;m<g;m+=s)at._$ts?(_=e[m],a=e[m+1],_<0?_=0:_>1&&(_=1),a<0?a=0:a>1&&(a=1),_*=c,a*=d,h=0|_,l=0|a,h>c-1&&(h=c-1),l>d-1&&(l=d-1),u=_-h,p=a-l,$=2*(h+l*(c+1))):(_=e[m]*c,a=e[m+1]*d,u=_-(0|_),p=a-(0|a),$=2*((0|_)+(0|a)*(c+1))),u+p<1?(r[m]=y[$]*(1-u-p)+y[$+2]*u+y[$+2*(c+1)]*p,r[m+1]=y[$+1]*(1-u-p)+y[$+3]*u+y[$+2*(c+1)+1]*p):(r[m]=y[$+2*(c+1)+2]*(u-1+p)+y[$+2*(c+1)]*(1-u)+y[$+2]*(1-p),r[m+1]=y[$+2*(c+1)+3]*(u-1+p)+y[$+2*(c+1)+1]*(1-u)+y[$+3]*(1-p))},Z.prototype._$VT=function(){return(this._$o+1)*(this._$A+1)},Z.prototype.getType=function(){return I._$_b},K.prototype=new _t,tt._$42=0,tt.prototype._$zP=function(){this._$3S=new Array,this._$aS=new Array},tt.prototype._$F0=function(t){this._$g0=t._$8L(),this.visible=t._$8L(),this._$NL=t._$nP(),this._$3S=t._$nP(),this._$aS=t._$nP()},tt.prototype.init=function(t){var i=new it(this);return i.setPartsOpacity(this.isVisible()?1:0),i},tt.prototype._$6o=function(t){if(null==this._$3S)throw new Error(\"_$3S _$6 _$Wo@_$6o\");this._$3S.push(t)},tt.prototype._$3o=function(t){if(null==this._$aS)throw new Error(\"_$aS _$6 _$Wo@_$3o\");this._$aS.push(t)},tt.prototype._$Zo=function(t){this._$3S=t},tt.prototype._$xo=function(t){this._$aS=t},tt.prototype.isVisible=function(){return this.visible},tt.prototype._$uL=function(){return this._$g0},tt.prototype._$KP=function(t){this.visible=t},tt.prototype._$ET=function(t){this._$g0=t},tt.prototype.getBaseData=function(){return this._$3S},tt.prototype.getDrawData=function(){return this._$aS},tt.prototype._$p2=function(){return this._$NL},tt.prototype._$ob=function(t){this._$NL=t},tt.prototype.getPartsID=function(){return this._$NL},tt.prototype._$MP=function(t){this._$NL=t},it.prototype=new $,it.prototype.getPartsOpacity=function(){return this._$VS},it.prototype.setPartsOpacity=function(t){this._$VS=t},et._$L7=function(){u._$27(),yt._$27(),b._$27(),l._$27()},et.prototype.toString=function(){return this.id},rt.prototype._$F0=function(t){},ot.prototype._$1s=function(){return this._$4S},ot.prototype._$zP=function(){this._$4S=new Array},ot.prototype._$F0=function(t){this._$4S=t._$nP()},ot.prototype._$Ks=function(t){this._$4S.push(t)},nt.tr=new gt,nt._$50=new gt,nt._$Ti=new Array(0,0),nt._$Pi=new Array(0,0),nt._$B=new Array(0,0),nt.prototype._$lP=function(t,i,e,r){this.viewport=new Array(t,i,e,r)},nt.prototype._$bL=function(){this.context.save();var t=this.viewport;null!=t&&(this.context.beginPath(),this.context._$Li(t[0],t[1],t[2],t[3]),this.context.clip())},nt.prototype._$ei=function(){this.context.restore()},nt.prototype.drawElements=function(t,i,e,r,o,n,s,a){try{o!=this._$Qo&&(this._$Qo=o,this.context.globalAlpha=o);for(var h=i.length,l=t.width,$=t.height,u=this.context,p=this._$xP,f=this._$uP,c=this._$6r,d=this._$3r,g=nt.tr,y=nt._$Ti,m=nt._$Pi,T=nt._$B,P=0;P<h;P+=3){u.save();var S=i[P],v=i[P+1],L=i[P+2],M=p+c*e[2*S],E=f+d*e[2*S+1],A=p+c*e[2*v],I=f+d*e[2*v+1],w=p+c*e[2*L],x=f+d*e[2*L+1];s&&(s._$PS(M,E,T),M=T[0],E=T[1],s._$PS(A,I,T),A=T[0],I=T[1],s._$PS(w,x,T),w=T[0],x=T[1]);var O=l*r[2*S],D=$-$*r[2*S+1],R=l*r[2*v],b=$-$*r[2*v+1],F=l*r[2*L],C=$-$*r[2*L+1],N=Math.atan2(b-D,R-O),B=Math.atan2(I-E,A-M),U=A-M,G=I-E,Y=Math.sqrt(U*U+G*G),k=R-O,V=b-D,X=Math.sqrt(k*k+V*V),z=Y/X;It._$ni(F,C,O,D,R-O,b-D,-(b-D),R-O,y),It._$ni(w,x,M,E,A-M,I-E,-(I-E),A-M,m);var H=(m[0]-y[0])/y[1],W=Math.min(O,R,F),j=Math.max(O,R,F),q=Math.min(D,b,C),J=Math.max(D,b,C),Q=Math.floor(W),Z=Math.floor(q),K=Math.ceil(j),tt=Math.ceil(J);g.identity(),g.translate(M,E),g.rotate(B),g.scale(1,m[1]/y[1]),g.shear(H,0),g.scale(z,z),g.rotate(-N),g.translate(-O,-D),g.setContext(u);if(n||(n=1.2),at.IGNORE_EXPAND&&(n=0),at.USE_CACHED_POLYGON_IMAGE){var it=a._$e0;if(it.gl_cacheImage=it.gl_cacheImage||{},!it.gl_cacheImage[P]){var et=nt.createCanvas(K-Q,tt-Z);at.DEBUG_DATA.LDGL_CANVAS_MB=at.DEBUG_DATA.LDGL_CANVAS_MB||0,at.DEBUG_DATA.LDGL_CANVAS_MB+=(K-Q)*(tt-Z)*4;var rt=et.getContext(\"2d\");rt.translate(-Q,-Z),nt.clip(rt,g,n,Y,O,D,R,b,F,C,M,E,A,I,w,x),rt.drawImage(t,0,0),it.gl_cacheImage[P]={cacheCanvas:et,cacheContext:rt}}u.drawImage(it.gl_cacheImage[P].cacheCanvas,Q,Z)}else at.IGNORE_CLIP||nt.clip(u,g,n,Y,O,D,R,b,F,C,M,E,A,I,w,x),at.USE_ADJUST_TRANSLATION&&(W=0,j=l,q=0,J=$),u.drawImage(t,W,q,j-W,J-q,W,q,j-W,J-q);u.restore()}}catch(t){_._$Rb(t)}},nt.clip=function(t,i,e,r,o,n,s,_,a,h,l,$,u,p,f,c){e>.02?nt.expandClip(t,i,e,r,l,$,u,p,f,c):nt.clipWithTransform(t,null,o,n,s,_,a,h)},nt.expandClip=function(t,i,e,r,o,n,s,_,a,h){var l=s-o,$=_-n,u=a-o,p=h-n,f=l*p-$*u>0?e:-e,c=-$,d=l,g=a-s,y=h-_,m=-y,T=g,P=Math.sqrt(g*g+y*y),S=-p,v=u,L=Math.sqrt(u*u+p*p),M=o-f*c/r,E=n-f*d/r,A=s-f*c/r,I=_-f*d/r,w=s-f*m/P,x=_-f*T/P,O=a-f*m/P,D=h-f*T/P,R=o+f*S/L,b=n+f*v/L,F=a+f*S/L,C=h+f*v/L,N=nt._$50;return null!=i._$P2(N)&&(nt.clipWithTransform(t,N,M,E,A,I,w,x,O,D,F,C,R,b),!0)},nt.clipWithTransform=function(t,i,e,r,o,n,s,a){if(arguments.length<7)return void _._$li(\"err : @LDGL.clip()\");if(!(arguments[1]instanceof gt))return void _._$li(\"err : a[0] is _$6 LDTransform @LDGL.clip()\");var h=nt._$B,l=i,$=arguments;if(t.beginPath(),l){l._$PS($[2],$[3],h),t.moveTo(h[0],h[1]);for(var u=4;u<$.length;u+=2)l._$PS($[u],$[u+1],h),t.lineTo(h[0],h[1])}else{t.moveTo($[2],$[3]);for(var u=4;u<$.length;u+=2)t.lineTo($[u],$[u+1])}t.clip()},nt.createCanvas=function(t,i){var e=document.createElement(\"canvas\");return e.setAttribute(\"width\",t),e.setAttribute(\"height\",i),e||_._$li(\"err : \"+e),e},nt.dumpValues=function(){for(var t=\"\",i=0;i<arguments.length;i++)t+=\"[\"+i+\"]= \"+arguments[i].toFixed(3)+\" , \";console.log(t)},st.prototype._$F0=function(t){this._$TT=t._$_T(),this._$LT=t._$_T(),this._$FS=t._$_T(),this._$wL=t._$nP()},st.prototype.getMinValue=function(){return this._$TT},st.prototype.getMaxValue=function(){return this._$LT},st.prototype.getDefaultValue=function(){return this._$FS},st.prototype.getParamID=function(){return this._$wL},_t.prototype._$yo=function(){return this._$AT&&!this._$JS},_t.prototype._$hS=function(t){this._$AT=t},_t.prototype._$GT=function(){return this._$e0},_t.prototype._$l2=function(t){this._$IP=t},_t.prototype.getPartsIndex=function(){return this._$IP},_t.prototype._$x2=function(){return this._$JS},_t.prototype._$Ib=function(t){this._$JS=t},_t.prototype.getTotalScale=function(){return this.totalScale},_t.prototype.setTotalScale_notForClient=function(t){this.totalScale=t},_t.prototype.getInterpolatedOpacity=function(){return this._$7s},_t.prototype.setInterpolatedOpacity=function(t){this._$7s=t},_t.prototype.getTotalOpacity=function(t){return this.totalOpacity},_t.prototype.setTotalOpacity=function(t){this.totalOpacity=t},at._$2s=\"2.1.00_1\",at._$Kr=201001e3,at._$sP=!0,at._$so=!0,at._$cb=!1,at._$3T=!0,at._$Ts=!0,at._$fb=!0,at._$ts=!0,at.L2D_DEFORMER_EXTEND=!0,at._$Wb=!1;at._$yr=!1,at._$Zs=!1,at.L2D_NO_ERROR=0,at._$i7=1e3,at._$9s=1001,at._$es=1100,at._$r7=2e3,at._$07=2001,at._$b7=2002,at._$H7=4e3,at.L2D_COLOR_BLEND_MODE_MULT=0,at.L2D_COLOR_BLEND_MODE_ADD=1,at.L2D_COLOR_BLEND_MODE_INTERPOLATE=2,at._$6b=!0,at._$cT=0,at.clippingMaskBufferSize=256,at.glContext=new Array,at.frameBuffers=new Array,at.fTexture=new Array,at.IGNORE_CLIP=!1,at.IGNORE_EXPAND=!1,at.EXPAND_W=2,at.USE_ADJUST_TRANSLATION=!0,at.USE_CANVAS_TRANSFORM=!0,at.USE_CACHED_POLYGON_IMAGE=!1,at.DEBUG_DATA={},at.PROFILE_IOS_SPEED={PROFILE_NAME:\"iOS Speed\",USE_ADJUST_TRANSLATION:!0,USE_CACHED_POLYGON_IMAGE:!0,EXPAND_W:4},at.PROFILE_IOS_QUALITY={PROFILE_NAME:\"iOS HiQ\",USE_ADJUST_TRANSLATION:!0,USE_CACHED_POLYGON_IMAGE:!1,EXPAND_W:2},at.PROFILE_IOS_DEFAULT=at.PROFILE_IOS_QUALITY,at.PROFILE_ANDROID={PROFILE_NAME:\"Android\",USE_ADJUST_TRANSLATION:!1,USE_CACHED_POLYGON_IMAGE:!1,EXPAND_W:2},at.PROFILE_DESKTOP={PROFILE_NAME:\"Desktop\",USE_ADJUST_TRANSLATION:!1,USE_CACHED_POLYGON_IMAGE:!1,EXPAND_W:2},at.initProfile=function(){Et.isIOS()?at.setupProfile(at.PROFILE_IOS_DEFAULT):Et.isAndroid()?at.setupProfile(at.PROFILE_ANDROID):at.setupProfile(at.PROFILE_DESKTOP)},at.setupProfile=function(t,i){if(\"number\"==typeof t)switch(t){case 9901:t=at.PROFILE_IOS_SPEED;break;case 9902:t=at.PROFILE_IOS_QUALITY;break;case 9903:t=at.PROFILE_IOS_DEFAULT;break;case 9904:t=at.PROFILE_ANDROID;break;case 9905:t=at.PROFILE_DESKTOP;break;default:alert(\"profile _$6 _$Ui : \"+t)}arguments.length<2&&(i=!0),i&&console.log(\"profile : \"+t.PROFILE_NAME);for(var e in t)at[e]=t[e],i&&console.log(\"  [\"+e+\"] = \"+t[e])},at.init=function(){if(at._$6b){console.log(\"Live2D %s\",at._$2s),at._$6b=!1;!0,at.initProfile()}},at.getVersionStr=function(){return at._$2s},at.getVersionNo=function(){return at._$Kr},at._$sT=function(t){at._$cT=t},at.getError=function(){var t=at._$cT;return at._$cT=0,t},at.dispose=function(){at.glContext=[],at.frameBuffers=[],at.fTexture=[]},at.setGL=function(t,i){var e=i||0;at.glContext[e]=t},at.getGL=function(t){return at.glContext[t]},at.setClippingMaskBufferSize=function(t){at.clippingMaskBufferSize=t},at.getClippingMaskBufferSize=function(){return at.clippingMaskBufferSize},at.deleteBuffer=function(t){at.getGL(t).deleteFramebuffer(at.frameBuffers[t].framebuffer),delete at.frameBuffers[t],delete at.glContext[t]},ht._$r2=function(t){return t<0?0:t>1?1:.5-.5*Math.cos(t*Lt.PI_F)},lt._$fr=-1,lt.prototype.toString=function(){return this._$ib},$t.prototype=new W,$t._$42=0,$t._$Os=30,$t._$ms=0,$t._$ns=1,$t._$_s=2,$t._$gT=new Array,$t.prototype._$_S=function(t){this._$LP=t},$t.prototype.getTextureNo=function(){return this._$LP},$t.prototype._$ZL=function(){return this._$Qi},$t.prototype._$H2=function(){return this._$JP},$t.prototype.getNumPoints=function(){return this._$d0},$t.prototype.getType=function(){return W._$wb},$t.prototype._$B2=function(t,i,e){var r=i,o=null!=r._$hr?r._$hr:r._$Cr;switch(U._$do){default:case U._$Ms:throw new Error(\"_$L _$ro \");case U._$Qs:for(var n=this._$d0-1;n>=0;--n)o[n*U._$No+4]=e}},$t.prototype._$zP=function(){this._$GS=new D,this._$GS._$zP()},$t.prototype._$F0=function(t){W.prototype._$F0.call(this,t),this._$LP=t._$6L(),this._$d0=t._$6L(),this._$Yo=t._$6L();var i=t._$nP();this._$BP=new Int16Array(3*this._$Yo);for(var e=3*this._$Yo-1;e>=0;--e)this._$BP[e]=i[e];if(this._$Eo=t._$nP(),this._$Qi=t._$nP(),t.getFormatVersion()>=G._$s7){if(this._$JP=t._$6L(),0!=this._$JP){if(0!=(1&this._$JP)){var r=t._$6L();null==this._$5P&&(this._$5P=new Object),this._$5P._$Hb=parseInt(r)}0!=(this._$JP&$t._$Os)?this._$6s=(this._$JP&$t._$Os)>>1:this._$6s=$t._$ms,0!=(32&this._$JP)&&(this.culling=!1)}}else this._$JP=0},$t.prototype.init=function(t){var i=new ut(this),e=this._$d0*U._$No,r=this._$32();switch(null!=i._$Cr&&(i._$Cr=null),i._$Cr=new Float32Array(e),null!=i._$hr&&(i._$hr=null),i._$hr=r?new Float32Array(e):null,U._$do){default:case U._$Ms:if(U._$Ls)for(var o=this._$d0-1;o>=0;--o){var n=o<<1;this._$Qi[n+1]=1-this._$Qi[n+1]}break;case U._$Qs:for(var o=this._$d0-1;o>=0;--o){var n=o<<1,s=o*U._$No,_=this._$Qi[n],a=this._$Qi[n+1];i._$Cr[s]=_,i._$Cr[s+1]=a,i._$Cr[s+4]=0,r&&(i._$hr[s]=_,i._$hr[s+1]=a,i._$hr[s+4]=0)}}return i},$t.prototype._$Nr=function(t,i){var e=i;if(this!=e._$GT()&&console.log(\"### assert!! ### \"),this._$GS._$Ur(t)&&(W.prototype._$Nr.call(this,t,e),!e._$IS[0])){var r=$t._$gT;r[0]=!1,v._$Vr(t,this._$GS,r,this._$d0,this._$Eo,e._$Cr,U._$i2,U._$No)}},$t.prototype._$2b=function(t,i){try{this!=i._$GT()&&console.log(\"### assert!! ### \");var e=!1;i._$IS[0]&&(e=!0);var r=i;if(!e&&(W.prototype._$2b.call(this,t),this._$32())){var o=this.getTargetBaseDataID();if(r._$8r==W._$ur&&(r._$8r=t.getBaseDataIndex(o)),r._$8r<0)at._$so&&_._$li(\"_$L _$0P _$G :: %s\",o);else{var n=t.getBaseData(r._$8r),s=t._$q2(r._$8r);null==n||s._$x2()?r._$AT=!1:(n._$nb(t,s,r._$Cr,r._$hr,this._$d0,U._$i2,U._$No),r._$AT=!0),r.baseOpacity=s.getTotalOpacity()}}}catch(t){throw t}},$t.prototype.draw=function(t,i,e){if(this!=e._$GT()&&console.log(\"### assert!! ### \"),!e._$IS[0]){var r=e,o=this._$LP;o<0&&(o=1);var n=this.getOpacity(i,r)*e._$VS*e.baseOpacity,s=null!=r._$hr?r._$hr:r._$Cr;t.setClipBufPre_clipContextForDraw(e.clipBufPre_clipContext),t._$WP(this.culling),t._$Uo(o,3*this._$Yo,this._$BP,s,this._$Qi,n,this._$6s,r)}},$t.prototype.dump=function(){console.log(\"  _$yi( %d ) , _$d0( %d ) , _$Yo( %d ) \\n\",this._$LP,this._$d0,this._$Yo),console.log(\"  _$Oi _$di = { \");for(var t=0;t<this._$BP.length;t++)console.log(\"%5d ,\",this._$BP[t]);console.log(\"\\n  _$5i _$30\");for(var t=0;t<this._$Eo.length;t++){console.log(\"\\n    _$30[%d] = \",t);for(var i=this._$Eo[t],e=0;e<i.length;e++)console.log(\"%6.2f, \",i[e])}console.log(\"\\n\")},$t.prototype._$72=function(t){return null==this._$5P?null:this._$5P[t]},$t.prototype.getIndexArray=function(){return this._$BP},ut.prototype=new Mt,ut.prototype.getTransformedPoints=function(){return null!=this._$hr?this._$hr:this._$Cr},pt.prototype._$HT=function(t){this.x=t.x,this.y=t.y},pt.prototype._$HT=function(t,i){this.x=t,this.y=i},ft.prototype=new i,ft.loadModel=function(t){var e=new ft;return i._$62(e,t),e},ft.loadModel=function(t,e){var r=e||0,o=new ft(r);return i._$62(o,t),o},ft._$to=function(){return new ft},ft._$er=function(t){var i=new _$5(\"../_$_r/_$t0/_$Ri/_$_P._$d\");if(0==i.exists())throw new _$ls(\"_$t0 _$_ _$6 _$Ui :: \"+i._$PL());for(var e=[\"../_$_r/_$t0/_$Ri/_$_P.512/_$CP._$1\",\"../_$_r/_$t0/_$Ri/_$_P.512/_$vP._$1\",\"../_$_r/_$t0/_$Ri/_$_P.512/_$EP._$1\",\"../_$_r/_$t0/_$Ri/_$_P.512/_$pP._$1\"],r=ft.loadModel(i._$3b()),o=0;o<e.length;o++){var n=new _$5(e[o]);if(0==n.exists())throw new _$ls(\"_$t0 _$_ _$6 _$Ui :: \"+n._$PL());r.setTexture(o,_$nL._$_o(t,n._$3b()))}return r},ft.prototype.setGL=function(t){at.setGL(t)},ft.prototype.setTransform=function(t){this.drawParamWebGL.setTransform(t)},ft.prototype.update=function(){this._$5S.update(),this._$5S.preDraw(this.drawParamWebGL)},ft.prototype.draw=function(){this._$5S.draw(this.drawParamWebGL)},ft.prototype._$K2=function(){this.drawParamWebGL._$K2()},ft.prototype.setTexture=function(t,i){null==this.drawParamWebGL&&_._$li(\"_$Yi for QT _$ki / _$XS() is _$6 _$ui!!\"),this.drawParamWebGL.setTexture(t,i)},ft.prototype.setTexture=function(t,i){null==this.drawParamWebGL&&_._$li(\"_$Yi for QT _$ki / _$XS() is _$6 _$ui!!\"),this.drawParamWebGL.setTexture(t,i)},ft.prototype._$Rs=function(){return this.drawParamWebGL._$Rs()},ft.prototype._$Ds=function(t){this.drawParamWebGL._$Ds(t)},ft.prototype.getDrawParam=function(){return this.drawParamWebGL},ft.prototype.setMatrix=function(t){this.drawParamWebGL.setMatrix(t)},ft.prototype.setPremultipliedAlpha=function(t){this.drawParamWebGL.setPremultipliedAlpha(t)},ft.prototype.isPremultipliedAlpha=function(){return this.drawParamWebGL.isPremultipliedAlpha()},ft.prototype.setAnisotropy=function(t){this.drawParamWebGL.setAnisotropy(t)},ft.prototype.getAnisotropy=function(){return this.drawParamWebGL.getAnisotropy()},ct.prototype._$tb=function(){return this.motions},ct.prototype.startMotion=function(t,i){for(var e=null,r=this.motions.length,o=0;o<r;++o)null!=(e=this.motions[o])&&(e._$qS(e._$w0.getFadeOut()),this._$eb&&_._$Ji(\"MotionQueueManager[size:%2d]->startMotion() / start _$K _$3 (m%d)\\n\",r,e._$sr));if(null==t)return-1;e=new dt,e._$w0=t,this.motions.push(e);var n=e._$sr;return this._$eb&&_._$Ji(\"MotionQueueManager[size:%2d]->startMotion() / new _$w0 (m%d)\\n\",r,n),n},ct.prototype.updateParam=function(t){try{for(var i=!1,e=0;e<this.motions.length;e++){var r=this.motions[e];if(null!=r){var o=r._$w0;null!=o?(o.updateParam(t,r),i=!0,r.isFinished()&&(this._$eb&&_._$Ji(\"MotionQueueManager[size:%2d]->updateParam() / _$T0 _$w0 (m%d)\\n\",this.motions.length-1,r._$sr),this.motions.splice(e,1),e--)):(this.motions=this.motions.splice(e,1),e--)}else this.motions.splice(e,1),e--}return i}catch(t){return _._$li(t),!0}},ct.prototype.isFinished=function(t){if(arguments.length>=1){for(var i=0;i<this.motions.length;i++){var e=this.motions[i];if(null!=e&&(e._$sr==t&&!e.isFinished()))return!1}return!0}for(var i=0;i<this.motions.length;i++){var e=this.motions[i];if(null!=e){if(null!=e._$w0){if(!e.isFinished())return!1}else this.motions.splice(i,1),i--}else this.motions.splice(i,1),i--}return!0},ct.prototype.stopAllMotions=function(){for(var t=0;t<this.motions.length;t++){var i=this.motions[t];if(null!=i){i._$w0;this.motions.splice(t,1),t--}else this.motions.splice(t,1),t--}},ct.prototype._$Zr=function(t){this._$eb=t},ct.prototype._$e=function(){console.log(\"-- _$R --\\n\");for(var t=0;t<this.motions.length;t++){var i=this.motions[t],e=i._$w0;console.log(\"MotionQueueEnt[%d] :: %s\\n\",this.motions.length,e.toString())}},dt._$Gs=0,dt.prototype.isFinished=function(){return this._$9L},dt.prototype._$qS=function(t){var i=w.getUserTimeMSec(),e=i+t;(this._$Do<0||e<this._$Do)&&(this._$Do=e)},dt.prototype._$Bs=function(){return this._$sr},gt.prototype.setContext=function(t){var i=this.m;t.transform(i[0],i[1],i[3],i[4],i[6],i[7])},gt.prototype.toString=function(){for(var t=\"LDTransform { \",i=0;i<9;i++)t+=this.m[i].toFixed(2)+\" ,\";return t+=\" }\"},gt.prototype.identity=function(){var t=this.m;t[0]=t[4]=t[8]=1,t[1]=t[2]=t[3]=t[5]=t[6]=t[7]=0},gt.prototype._$PS=function(t,i,e){null==e&&(e=new Array(0,0));var r=this.m;return e[0]=r[0]*t+r[3]*i+r[6],e[1]=r[1]*t+r[4]*i+r[7],e},gt.prototype._$P2=function(t){t||(t=new gt);var i=this.m,e=i[0],r=i[1],o=i[2],n=i[3],s=i[4],_=i[5],a=i[6],h=i[7],l=i[8],$=e*s*l+r*_*a+o*n*h-e*_*h-o*s*a-r*n*l;if(0==$)return null;var u=1/$;return t.m[0]=u*(s*l-h*_),t.m[1]=u*(h*o-r*l),t.m[2]=u*(r*_-s*o),t.m[3]=u*(a*_-n*l),t.m[4]=u*(e*l-a*o),t.m[5]=u*(n*o-e*_),t.m[6]=u*(n*h-a*s),t.m[7]=u*(a*r-e*h),t.m[8]=u*(e*s-n*r),t},gt.prototype.transform=function(t,i,e){null==e&&(e=new Array(0,0));var r=this.m;return e[0]=r[0]*t+r[3]*i+r[6],e[1]=r[1]*t+r[4]*i+r[7],e},gt.prototype.translate=function(t,i){var e=this.m;e[6]=e[0]*t+e[3]*i+e[6],e[7]=e[1]*t+e[4]*i+e[7],e[8]=e[2]*t+e[5]*i+e[8]},gt.prototype.scale=function(t,i){var e=this.m;e[0]*=t,e[1]*=t,e[2]*=t,e[3]*=i,e[4]*=i,e[5]*=i},gt.prototype.shear=function(t,i){var e=this.m,r=e[0]+e[3]*i,o=e[1]+e[4]*i,n=e[2]+e[5]*i;e[3]=e[0]*t+e[3],e[4]=e[1]*t+e[4],e[5]=e[2]*t+e[5],e[0]=r,e[1]=o,e[2]=n},gt.prototype.rotate=function(t){var i=this.m,e=Math.cos(t),r=Math.sin(t),o=i[0]*e+i[3]*r,n=i[1]*e+i[4]*r,s=i[2]*e+i[5]*r;i[3]=-i[0]*r+i[3]*e,i[4]=-i[1]*r+i[4]*e,i[5]=-i[2]*r+i[5]*e,i[0]=o,i[1]=n,i[2]=s},gt.prototype.concatenate=function(t){var i=this.m,e=t.m,r=i[0]*e[0]+i[3]*e[1]+i[6]*e[2],o=i[1]*e[0]+i[4]*e[1]+i[7]*e[2],n=i[2]*e[0]+i[5]*e[1]+i[8]*e[2],s=i[0]*e[3]+i[3]*e[4]+i[6]*e[5],_=i[1]*e[3]+i[4]*e[4]+i[7]*e[5],a=i[2]*e[3]+i[5]*e[4]+i[8]*e[5],h=i[0]*e[6]+i[3]*e[7]+i[6]*e[8],l=i[1]*e[6]+i[4]*e[7]+i[7]*e[8],$=i[2]*e[6]+i[5]*e[7]+i[8]*e[8];m[0]=r,m[1]=o,m[2]=n,m[3]=s,m[4]=_,m[5]=a,m[6]=h,m[7]=l,m[8]=$},yt.prototype=new et,yt._$eT=null,yt._$tP=new Object,yt._$2o=function(){return null==yt._$eT&&(yt._$eT=yt.getID(\"DST_BASE\")),yt._$eT},yt._$27=function(){yt._$tP.clear(),yt._$eT=null},yt.getID=function(t){var i=yt._$tP[t];return null==i&&(i=new yt(t),yt._$tP[t]=i),i},yt.prototype._$3s=function(){return new yt},mt.prototype=new E,mt._$9r=function(t){return new Float32Array(t)},mt._$vb=function(t){return new Int16Array(t)},mt._$cr=function(t,i){return null==t||t._$yL()<i.length?(t=mt._$9r(2*i.length),t.put(i),t._$oT(0)):(t.clear(),t.put(i),t._$oT(0)),t},mt._$mb=function(t,i){return null==t||t._$yL()<i.length?(t=mt._$vb(2*i.length),t.put(i),t._$oT(0)):(t.clear(),t.put(i),t._$oT(0)),t},mt._$Hs=function(){return this._$Gr},mt._$as=function(t){this._$Gr=t},mt.prototype.getGL=function(){return this.gl},mt.prototype.setGL=function(t){this.gl=t},mt.prototype.setTransform=function(t){this.transform=t},mt.prototype._$ZT=function(){var t=this.gl;this.firstDraw&&(this.initShader(),this.firstDraw=!1,this.anisotropyExt=t.getExtension(\"EXT_texture_filter_anisotropic\")||t.getExtension(\"WEBKIT_EXT_texture_filter_anisotropic\")||t.getExtension(\"MOZ_EXT_texture_filter_anisotropic\"),this.anisotropyExt&&(this.maxAnisotropy=t.getParameter(this.anisotropyExt.MAX_TEXTURE_MAX_ANISOTROPY_EXT))),t.disable(t.SCISSOR_TEST),t.disable(t.STENCIL_TEST),t.disable(t.DEPTH_TEST),t.frontFace(t.CW),t.enable(t.BLEND),t.colorMask(1,1,1,1),t.bindBuffer(t.ARRAY_BUFFER,null),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null)},mt.prototype._$Uo=function(t,i,e,r,o,n,s,_){if(!(n<.01&&null==this.clipBufPre_clipContextMask)){var a=(n>.9&&at.EXPAND_W,this.gl);if(null==this.gl)throw new Error(\"gl is null\");var h=1*this._$C0*n,l=1*this._$tT*n,$=1*this._$WL*n,u=this._$lT*n;if(null!=this.clipBufPre_clipContextMask){a.frontFace(a.CCW),a.useProgram(this.shaderProgram),this._$vS=Tt(a,this._$vS,r),this._$no=Pt(a,this._$no,e),a.enableVertexAttribArray(this.a_position_Loc),a.vertexAttribPointer(this.a_position_Loc,2,a.FLOAT,!1,0,0),this._$NT=Tt(a,this._$NT,o),a.activeTexture(a.TEXTURE1),a.bindTexture(a.TEXTURE_2D,this.textures[t]),a.uniform1i(this.s_texture0_Loc,1),a.enableVertexAttribArray(this.a_texCoord_Loc),a.vertexAttribPointer(this.a_texCoord_Loc,2,a.FLOAT,!1,0,0),a.uniformMatrix4fv(this.u_matrix_Loc,!1,this.getClipBufPre_clipContextMask().matrixForMask);var p=this.getClipBufPre_clipContextMask().layoutChannelNo,f=this.getChannelFlagAsColor(p);a.uniform4f(this.u_channelFlag,f.r,f.g,f.b,f.a);var c=this.getClipBufPre_clipContextMask().layoutBounds;a.uniform4f(this.u_baseColor_Loc,2*c.x-1,2*c.y-1,2*c._$EL()-1,2*c._$5T()-1),a.uniform1i(this.u_maskFlag_Loc,!0)}else if(null!=this.getClipBufPre_clipContextDraw()){a.useProgram(this.shaderProgramOff),this._$vS=Tt(a,this._$vS,r),this._$no=Pt(a,this._$no,e),a.enableVertexAttribArray(this.a_position_Loc_Off),a.vertexAttribPointer(this.a_position_Loc_Off,2,a.FLOAT,!1,0,0),this._$NT=Tt(a,this._$NT,o),a.activeTexture(a.TEXTURE1),a.bindTexture(a.TEXTURE_2D,this.textures[t]),a.uniform1i(this.s_texture0_Loc_Off,1),a.enableVertexAttribArray(this.a_texCoord_Loc_Off),a.vertexAttribPointer(this.a_texCoord_Loc_Off,2,a.FLOAT,!1,0,0),a.uniformMatrix4fv(this.u_clipMatrix_Loc_Off,!1,this.getClipBufPre_clipContextDraw().matrixForDraw),a.uniformMatrix4fv(this.u_matrix_Loc_Off,!1,this.matrix4x4),a.activeTexture(a.TEXTURE2),a.bindTexture(a.TEXTURE_2D,at.fTexture[this.glno]),a.uniform1i(this.s_texture1_Loc_Off,2);var p=this.getClipBufPre_clipContextDraw().layoutChannelNo,f=this.getChannelFlagAsColor(p);a.uniform4f(this.u_channelFlag_Loc_Off,f.r,f.g,f.b,f.a),a.uniform4f(this.u_baseColor_Loc_Off,h,l,$,u)}else a.useProgram(this.shaderProgram),this._$vS=Tt(a,this._$vS,r),this._$no=Pt(a,this._$no,e),a.enableVertexAttribArray(this.a_position_Loc),a.vertexAttribPointer(this.a_position_Loc,2,a.FLOAT,!1,0,0),this._$NT=Tt(a,this._$NT,o),a.activeTexture(a.TEXTURE1),a.bindTexture(a.TEXTURE_2D,this.textures[t]),a.uniform1i(this.s_texture0_Loc,1),a.enableVertexAttribArray(this.a_texCoord_Loc),a.vertexAttribPointer(this.a_texCoord_Loc,2,a.FLOAT,!1,0,0),a.uniformMatrix4fv(this.u_matrix_Loc,!1,this.matrix4x4),a.uniform4f(this.u_baseColor_Loc,h,l,$,u),a.uniform1i(this.u_maskFlag_Loc,!1);this.culling?this.gl.enable(a.CULL_FACE):this.gl.disable(a.CULL_FACE),this.gl.enable(a.BLEND);var d,g,y,m;if(null!=this.clipBufPre_clipContextMask)d=a.ONE,g=a.ONE_MINUS_SRC_ALPHA,y=a.ONE,m=a.ONE_MINUS_SRC_ALPHA;else switch(s){case $t._$ms:d=a.ONE,g=a.ONE_MINUS_SRC_ALPHA,y=a.ONE,m=a.ONE_MINUS_SRC_ALPHA;break;case $t._$ns:d=a.ONE,g=a.ONE,y=a.ZERO,m=a.ONE;break;case $t._$_s:d=a.DST_COLOR,g=a.ONE_MINUS_SRC_ALPHA,y=a.ZERO,m=a.ONE}a.blendEquationSeparate(a.FUNC_ADD,a.FUNC_ADD),a.blendFuncSeparate(d,g,y,m),this.anisotropyExt&&a.texParameteri(a.TEXTURE_2D,this.anisotropyExt.TEXTURE_MAX_ANISOTROPY_EXT,this.maxAnisotropy);var T=e.length;a.drawElements(a.TRIANGLES,T,a.UNSIGNED_SHORT,0),a.bindTexture(a.TEXTURE_2D,null)}},mt.prototype._$Rs=function(){throw new Error(\"_$Rs\")},mt.prototype._$Ds=function(t){throw new Error(\"_$Ds\")},mt.prototype._$K2=function(){for(var t=0;t<this.textures.length;t++){0!=this.textures[t]&&(this.gl._$K2(1,this.textures,t),this.textures[t]=null)}},mt.prototype.setTexture=function(t,i){this.textures[t]=i},mt.prototype.initShader=function(){var t=this.gl;this.loadShaders2(),this.a_position_Loc=t.getAttribLocation(this.shaderProgram,\"a_position\"),this.a_texCoord_Loc=t.getAttribLocation(this.shaderProgram,\"a_texCoord\"),this.u_matrix_Loc=t.getUniformLocation(this.shaderProgram,\"u_mvpMatrix\"),this.s_texture0_Loc=t.getUniformLocation(this.shaderProgram,\"s_texture0\"),this.u_channelFlag=t.getUniformLocation(this.shaderProgram,\"u_channelFlag\"),this.u_baseColor_Loc=t.getUniformLocation(this.shaderProgram,\"u_baseColor\"),this.u_maskFlag_Loc=t.getUniformLocation(this.shaderProgram,\"u_maskFlag\"),this.a_position_Loc_Off=t.getAttribLocation(this.shaderProgramOff,\"a_position\"),this.a_texCoord_Loc_Off=t.getAttribLocation(this.shaderProgramOff,\"a_texCoord\"),this.u_matrix_Loc_Off=t.getUniformLocation(this.shaderProgramOff,\"u_mvpMatrix\"),this.u_clipMatrix_Loc_Off=t.getUniformLocation(this.shaderProgramOff,\"u_ClipMatrix\"),this.s_texture0_Loc_Off=t.getUniformLocation(this.shaderProgramOff,\"s_texture0\"),this.s_texture1_Loc_Off=t.getUniformLocation(this.shaderProgramOff,\"s_texture1\"),this.u_channelFlag_Loc_Off=t.getUniformLocation(this.shaderProgramOff,\"u_channelFlag\"),this.u_baseColor_Loc_Off=t.getUniformLocation(this.shaderProgramOff,\"u_baseColor\")},mt.prototype.disposeShader=function(){var t=this.gl;this.shaderProgram&&(t.deleteProgram(this.shaderProgram),this.shaderProgram=null),this.shaderProgramOff&&(t.deleteProgram(this.shaderProgramOff),this.shaderProgramOff=null)},mt.prototype.compileShader=function(t,i){var e=this.gl,r=i,o=e.createShader(t);if(null==o)return _._$Ji(\"_$L0 to create shader\"),null;if(e.shaderSource(o,r),e.compileShader(o),!e.getShaderParameter(o,e.COMPILE_STATUS)){var n=e.getShaderInfoLog(o);return _._$Ji(\"_$L0 to compile shader : \"+n),e.deleteShader(o),null}return o},mt.prototype.loadShaders2=function(){var t=this.gl;if(this.shaderProgram=t.createProgram(),!this.shaderProgram)return!1;if(this.shaderProgramOff=t.createProgram(),!this.shaderProgramOff)return!1;if(this.vertShader=this.compileShader(t.VERTEX_SHADER,\"attribute vec4     a_position;attribute vec2     a_texCoord;varying vec2       v_texCoord;varying vec4       v_ClipPos;uniform mat4       u_mvpMatrix;void main(){    gl_Position = u_mvpMatrix * a_position;    v_ClipPos = u_mvpMatrix * a_position;    v_texCoord = a_texCoord;}\"),!this.vertShader)return _._$Ji(\"Vertex shader compile _$li!\"),!1;if(this.vertShaderOff=this.compileShader(t.VERTEX_SHADER,\"attribute vec4     a_position;attribute vec2     a_texCoord;varying vec2       v_texCoord;varying vec4       v_ClipPos;uniform mat4       u_mvpMatrix;uniform mat4       u_ClipMatrix;void main(){    gl_Position = u_mvpMatrix * a_position;    v_ClipPos = u_ClipMatrix * a_position;    v_texCoord = a_texCoord ;}\"),!this.vertShaderOff)return _._$Ji(\"OffVertex shader compile _$li!\"),!1;if(this.fragShader=this.compileShader(t.FRAGMENT_SHADER,\"precision mediump float;varying vec2       v_texCoord;varying vec4       v_ClipPos;uniform sampler2D  s_texture0;uniform vec4       u_channelFlag;uniform vec4       u_baseColor;uniform bool       u_maskFlag;void main(){    vec4 smpColor;     if(u_maskFlag){        float isInside =             step(u_baseColor.x, v_ClipPos.x/v_ClipPos.w)          * step(u_baseColor.y, v_ClipPos.y/v_ClipPos.w)          * step(v_ClipPos.x/v_ClipPos.w, u_baseColor.z)          * step(v_ClipPos.y/v_ClipPos.w, u_baseColor.w);        smpColor = u_channelFlag * texture2D(s_texture0 , v_texCoord).a * isInside;    }else{        smpColor = texture2D(s_texture0 , v_texCoord) * u_baseColor;    }    gl_FragColor = smpColor;}\"),!this.fragShader)return _._$Ji(\"Fragment shader compile _$li!\"),!1;if(this.fragShaderOff=this.compileShader(t.FRAGMENT_SHADER,\"precision mediump float ;varying vec2       v_texCoord;varying vec4       v_ClipPos;uniform sampler2D  s_texture0;uniform sampler2D  s_texture1;uniform vec4       u_channelFlag;uniform vec4       u_baseColor ;void main(){    vec4 col_formask = texture2D(s_texture0, v_texCoord) * u_baseColor;    vec4 clipMask = texture2D(s_texture1, v_ClipPos.xy / v_ClipPos.w) * u_channelFlag;    float maskVal = clipMask.r + clipMask.g + clipMask.b + clipMask.a;    col_formask = col_formask * maskVal;    gl_FragColor = col_formask;}\"),!this.fragShaderOff)return _._$Ji(\"OffFragment shader compile _$li!\"),!1;if(t.attachShader(this.shaderProgram,this.vertShader),t.attachShader(this.shaderProgram,this.fragShader),t.attachShader(this.shaderProgramOff,this.vertShaderOff),t.attachShader(this.shaderProgramOff,this.fragShaderOff),t.linkProgram(this.shaderProgram),t.linkProgram(this.shaderProgramOff),!t.getProgramParameter(this.shaderProgram,t.LINK_STATUS)){var i=t.getProgramInfoLog(this.shaderProgram);return _._$Ji(\"_$L0 to link program: \"+i),this.vertShader&&(t.deleteShader(this.vertShader),this.vertShader=0),this.fragShader&&(t.deleteShader(this.fragShader),this.fragShader=0),this.shaderProgram&&(t.deleteProgram(this.shaderProgram),this.shaderProgram=0),this.vertShaderOff&&(t.deleteShader(this.vertShaderOff),this.vertShaderOff=0),this.fragShaderOff&&(t.deleteShader(this.fragShaderOff),this.fragShaderOff=0),this.shaderProgramOff&&(t.deleteProgram(this.shaderProgramOff),this.shaderProgramOff=0),!1}return!0},mt.prototype.createFramebuffer=function(){var t=this.gl,i=at.clippingMaskBufferSize,e=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,e);var r=t.createRenderbuffer();t.bindRenderbuffer(t.RENDERBUFFER,r),t.renderbufferStorage(t.RENDERBUFFER,t.RGBA4,i,i),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.RENDERBUFFER,r);var o=t.createTexture();return t.bindTexture(t.TEXTURE_2D,o),t.texImage2D(t.TEXTURE_2D,0,t.RGBA,i,i,0,t.RGBA,t.UNSIGNED_BYTE,null),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.LINEAR),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.LINEAR),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,o,0),t.bindTexture(t.TEXTURE_2D,null),t.bindRenderbuffer(t.RENDERBUFFER,null),t.bindFramebuffer(t.FRAMEBUFFER,null),at.fTexture[this.glno]=o,{framebuffer:e,renderbuffer:r,texture:at.fTexture[this.glno]}},St.prototype._$fP=function(){var t,i,e,r=this._$ST();if(0==(128&r))return 255&r;if(0==(128&(t=this._$ST())))return(127&r)<<7|127&t;if(0==(128&(i=this._$ST())))return(127&r)<<14|(127&t)<<7|255&i;if(0==(128&(e=this._$ST())))return(127&r)<<21|(127&t)<<14|(127&i)<<7|255&e;throw new lt(\"_$L _$0P  _\")},St.prototype.getFormatVersion=function(){return this._$S2},St.prototype._$gr=function(t){this._$S2=t},St.prototype._$3L=function(){return this._$fP()},St.prototype._$mP=function(){return this._$zT(),this._$F+=8,this._$T.getFloat64(this._$F-8)},St.prototype._$_T=function(){return this._$zT(),this._$F+=4,this._$T.getFloat32(this._$F-4)},St.prototype._$6L=function(){return this._$zT(),this._$F+=4,this._$T.getInt32(this._$F-4)},St.prototype._$ST=function(){return this._$zT(),this._$T.getInt8(this._$F++)},St.prototype._$9T=function(){return this._$zT(),this._$F+=2,this._$T.getInt16(this._$F-2)},St.prototype._$2T=function(){throw this._$zT(),this._$F+=8,new lt(\"_$L _$q read long\")},St.prototype._$po=function(){return this._$zT(),0!=this._$T.getInt8(this._$F++)};var xt=!0;St.prototype._$bT=function(){this._$zT();var t=this._$3L(),i=null;if(xt)try{var e=new ArrayBuffer(2*t);i=new Uint16Array(e);for(var r=0;r<t;++r)i[r]=this._$T.getUint8(this._$F++);return String.fromCharCode.apply(null,i)}catch(t){xt=!1}try{var o=new Array;if(null==i)for(var r=0;r<t;++r)o[r]=this._$T.getUint8(this._$F++);else for(var r=0;r<t;++r)o[r]=i[r];return String.fromCharCode.apply(null,o)}catch(t){console.log(\"read utf8 / _$rT _$L0 !! : \"+t)}},St.prototype._$cS=function(){this._$zT();for(var t=this._$3L(),i=new Int32Array(t),e=0;e<t;e++)i[e]=this._$T.getInt32(this._$F),this._$F+=4;return i},St.prototype._$Tb=function(){this._$zT();for(var t=this._$3L(),i=new Float32Array(t),e=0;e<t;e++)i[e]=this._$T.getFloat32(this._$F),this._$F+=4;return i},St.prototype._$5b=function(){this._$zT();for(var t=this._$3L(),i=new Float64Array(t),e=0;e<t;e++)i[e]=this._$T.getFloat64(this._$F),this._$F+=8;return i},St.prototype._$nP=function(){return this._$Jb(-1)},St.prototype._$Jb=function(t){if(this._$zT(),t<0&&(t=this._$3L()),t==G._$7P){var i=this._$6L();if(0<=i&&i<this._$Ko.length)return this._$Ko[i];throw new lt(\"_$sL _$4i @_$m0\")}var e=this._$4b(t);return this._$Ko.push(e),e},St.prototype._$4b=function(t){if(0==t)return null;if(50==t){var i=this._$bT(),e=b.getID(i);return e}if(51==t){var i=this._$bT(),e=yt.getID(i);return e}if(134==t){var i=this._$bT(),e=l.getID(i);return e}if(60==t){var i=this._$bT(),e=u.getID(i);return e}if(t>=48){var r=G._$9o(t);return null!=r?(r._$F0(this),r):null}switch(t){case 1:return this._$bT();case 10:return new n(this._$6L(),!0);case 11:return new S(this._$mP(),this._$mP(),this._$mP(),this._$mP());case 12:return new S(this._$_T(),this._$_T(),this._$_T(),this._$_T());case 13:return new L(this._$mP(),this._$mP());case 14:return new L(this._$_T(),this._$_T());case 15:for(var o=this._$3L(),e=new Array(o),s=0;s<o;s++)e[s]=this._$nP();return e;case 17:var e=new F(this._$mP(),this._$mP(),this._$mP(),this._$mP(),this._$mP(),this._$mP());return e;case 21:return new h(this._$6L(),this._$6L(),this._$6L(),this._$6L());case 22:return new pt(this._$6L(),this._$6L());case 23:throw new Error(\"_$L _$ro \");case 16:case 25:return this._$cS();case 26:return this._$5b();case 27:return this._$Tb();case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 18:case 19:case 20:case 24:case 28:throw new lt(\"_$6 _$q : _$nP() of 2-9 ,18,19,20,24,28 : \"+t);default:throw new lt(\"_$6 _$q : _$nP() NO _$i : \"+t)}},St.prototype._$8L=function(){return 0==this._$hL?this._$v0=this._$ST():8==this._$hL&&(this._$v0=this._$ST(),this._$hL=0),1==(this._$v0>>7-this._$hL++&1)},St.prototype._$zT=function(){0!=this._$hL&&(this._$hL=0)},vt.prototype._$wP=function(t,i,e){for(var r=0;r<e;r++){for(var o=0;o<i;o++){var n=2*(o+r*i);console.log(\"(% 7.3f , % 7.3f) , \",t[n],t[n+1])}console.log(\"\\n\")}console.log(\"\\n\")},Lt._$2S=Math.PI/180,Lt._$bS=Math.PI/180,Lt._$wS=180/Math.PI,Lt._$NS=180/Math.PI,Lt.PI_F=Math.PI,Lt._$kT=[0,.012368,.024734,.037097,.049454,.061803,.074143,.086471,.098786,.111087,.12337,.135634,.147877,.160098,.172295,.184465,.196606,.208718,.220798,.232844,.244854,.256827,.268761,.280654,.292503,.304308,.316066,.327776,.339436,.351044,.362598,.374097,.385538,.396921,.408243,.419502,.430697,.441826,.452888,.463881,.474802,.485651,.496425,.507124,.517745,.528287,.538748,.549126,.559421,.56963,.579752,.589785,.599728,.609579,.619337,.629,.638567,.648036,.657406,.666676,.675843,.684908,.693867,.70272,.711466,.720103,.72863,.737045,.745348,.753536,.76161,.769566,.777405,.785125,.792725,.800204,.807561,.814793,.821901,.828884,.835739,.842467,.849066,.855535,.861873,.868079,.874153,.880093,.885898,.891567,.897101,.902497,.907754,.912873,.917853,.922692,.92739,.931946,.936359,.940629,.944755,.948737,.952574,.956265,.959809,.963207,.966457,.96956,.972514,.97532,.977976,.980482,.982839,.985045,.987101,.989006,.990759,.992361,.993811,.995109,.996254,.997248,.998088,.998776,.999312,.999694,.999924,1],Lt._$92=function(t,i){var e=Math.atan2(t[1],t[0]),r=Math.atan2(i[1],i[0]);return Lt._$tS(e,r)},Lt._$tS=function(t,i){for(var e=t-i;e<-Math.PI;)e+=2*Math.PI;for(;e>Math.PI;)e-=2*Math.PI;return e},Lt._$9=function(t){return Math.sin(t)},Lt.fcos=function(t){return Math.cos(t)},Mt.prototype._$u2=function(){return this._$IS[0]},Mt.prototype._$yo=function(){return this._$AT&&!this._$IS[0]},Mt.prototype._$GT=function(){return this._$e0},Et._$W2=0,Et.SYSTEM_INFO=null,Et.USER_AGENT=navigator.userAgent,Et.isIPhone=function(){return Et.SYSTEM_INFO||Et.setup(),Et.SYSTEM_INFO._isIPhone},Et.isIOS=function(){return Et.SYSTEM_INFO||Et.setup(),Et.SYSTEM_INFO._isIPhone||Et.SYSTEM_INFO._isIPad},Et.isAndroid=function(){return Et.SYSTEM_INFO||Et.setup(),Et.SYSTEM_INFO._isAndroid},Et.getOSVersion=function(){return Et.SYSTEM_INFO||Et.setup(),Et.SYSTEM_INFO.version},Et.getOS=function(){return Et.SYSTEM_INFO||Et.setup(),Et.SYSTEM_INFO._isIPhone||Et.SYSTEM_INFO._isIPad?\"iOS\":Et.SYSTEM_INFO._isAndroid?\"Android\":\"_$Q0 OS\"},Et.setup=function(){function t(t,i){for(var e=t.substring(i).split(/[ _,;\\.]/),r=0,o=0;o<=2&&!isNaN(e[o]);o++){var n=parseInt(e[o]);if(n<0||n>999){_._$li(\"err : \"+n+\" @UtHtml5.setup()\"),r=0;break}r+=n*Math.pow(1e3,2-o)}return r}var i,e=Et.USER_AGENT,r=Et.SYSTEM_INFO={userAgent:e};if((i=e.indexOf(\"iPhone OS \"))>=0)r.os=\"iPhone\",r._isIPhone=!0,r.version=t(e,i+\"iPhone OS \".length);else if((i=e.indexOf(\"iPad\"))>=0){if((i=e.indexOf(\"CPU OS\"))<0)return void _._$li(\" err : \"+e+\" @UtHtml5.setup()\");r.os=\"iPad\",r._isIPad=!0,r.version=t(e,i+\"CPU OS \".length)}else(i=e.indexOf(\"Android\"))>=0?(r.os=\"Android\",r._isAndroid=!0,r.version=t(e,i+\"Android \".length)):(r.os=\"-\",r.version=-1)},window.UtSystem=w,window.UtDebug=_,window.LDTransform=gt,window.LDGL=nt,window.Live2D=at,window.Live2DModelWebGL=ft,window.Live2DModelJS=q,window.Live2DMotion=J,window.MotionQueueManager=ct,window.PhysicsHair=f,window.AMotion=s,window.PartsDataID=l,window.DrawDataID=b,window.BaseDataID=yt,window.ParamID=u,at.init();var At=!1}()}).call(i,e(7))},function(t,i){t.exports={import:function(){throw new Error(\"System.import cannot be used indirectly\")}}},function(t,i,e){\"use strict\";function r(t){return t&&t.__esModule?t:{default:t}}function o(){this.models=[],this.count=-1,this.reloadFlg=!1,Live2D.init(),n.Live2DFramework.setPlatformManager(new _.default)}Object.defineProperty(i,\"__esModule\",{value:!0}),i.default=o;var n=e(0),s=e(9),_=r(s),a=e(10),h=r(a),l=e(1),$=r(l);o.prototype.createModel=function(){var t=new h.default;return this.models.push(t),t},o.prototype.changeModel=function(t,i){if(this.reloadFlg){this.reloadFlg=!1;this.releaseModel(0,t),this.createModel(),this.models[0].load(t,i)}},o.prototype.getModel=function(t){return t>=this.models.length?null:this.models[t]},o.prototype.releaseModel=function(t,i){this.models.length<=t||(this.models[t].release(i),delete this.models[t],this.models.splice(t,1))},o.prototype.numModels=function(){return this.models.length},o.prototype.setDrag=function(t,i){for(var e=0;e<this.models.length;e++)this.models[e].setDrag(t,i)},o.prototype.maxScaleEvent=function(){$.default.DEBUG_LOG&&console.log(\"Max scale event.\");for(var t=0;t<this.models.length;t++)this.models[t].startRandomMotion($.default.MOTION_GROUP_PINCH_IN,$.default.PRIORITY_NORMAL)},o.prototype.minScaleEvent=function(){$.default.DEBUG_LOG&&console.log(\"Min scale event.\");for(var t=0;t<this.models.length;t++)this.models[t].startRandomMotion($.default.MOTION_GROUP_PINCH_OUT,$.default.PRIORITY_NORMAL)},o.prototype.tapEvent=function(t,i){$.default.DEBUG_LOG&&console.log(\"tapEvent view x:\"+t+\" y:\"+i);for(var e=0;e<this.models.length;e++)this.models[e].hitTest($.default.HIT_AREA_HEAD,t,i)?($.default.DEBUG_LOG&&console.log(\"Tap face.\"),this.models[e].setRandomExpression()):this.models[e].hitTest($.default.HIT_AREA_BODY,t,i)?($.default.DEBUG_LOG&&console.log(\"Tap body. models[\"+e+\"]\"),this.models[e].startRandomMotion($.default.MOTION_GROUP_TAP_BODY,$.default.PRIORITY_NORMAL)):this.models[e].hitTestCustom(\"head\",t,i)?($.default.DEBUG_LOG&&console.log(\"Tap face.\"),this.models[e].startRandomMotion($.default.MOTION_GROUP_FLICK_HEAD,$.default.PRIORITY_NORMAL)):this.models[e].hitTestCustom(\"body\",t,i)&&($.default.DEBUG_LOG&&console.log(\"Tap body. models[\"+e+\"]\"),this.models[e].startRandomMotion($.default.MOTION_GROUP_TAP_BODY,$.default.PRIORITY_NORMAL));return!0}},function(t,i,e){\"use strict\";function r(){}Object.defineProperty(i,\"__esModule\",{value:!0}),i.default=r;var o=e(2);var requestCache={};r.prototype.loadBytes=function(t,i){if(requestCache[t]!==undefined){i(requestCache[t]);return;}var e=new XMLHttpRequest;e.open(\"GET\",t,!0),e.responseType=\"arraybuffer\",e.onload=function(){switch(e.status){case 200:requestCache[t]=e.response;i(e.response);break;default:console.error(\"Failed to load (\"+e.status+\") : \"+t)}},e.send(null)},r.prototype.loadString=function(t){this.loadBytes(t,function(t){return t})},r.prototype.loadLive2DModel=function(t,i){var e=null;this.loadBytes(t,function(t){e=Live2DModelWebGL.loadModel(t),i(e)})},r.prototype.loadTexture=function(t,i,e,r){var n=new Image;n.crossOrigin=\"Anonymous\",n.src=e;n.onload=function(){var e=(0,o.getContext)(),s=e.createTexture();if(!s)return console.error(\"Failed to generate gl texture name.\"),-1;0==t.isPremultipliedAlpha()&&e.pixelStorei(e.UNPACK_PREMULTIPLY_ALPHA_WEBGL,1),e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,1),e.activeTexture(e.TEXTURE0),e.bindTexture(e.TEXTURE_2D,s),e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.LINEAR),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.LINEAR_MIPMAP_NEAREST),e.generateMipmap(e.TEXTURE_2D),t.setTexture(i,s),s=null,\"function\"==typeof r&&r()},n.onerror=function(){console.error(\"Failed to load image : \"+e)}},r.prototype.jsonParseFromBytes=function(t){var i,e=new Uint8Array(t,0,3);return i=239==e[0]&&187==e[1]&&191==e[2]?String.fromCharCode.apply(null,new Uint8Array(t,3)):String.fromCharCode.apply(null,new Uint8Array(t)),JSON.parse(i)},r.prototype.log=function(t){}},function(t,i,e){\"use strict\";function r(t){return t&&t.__esModule?t:{default:t}}function o(){n.L2DBaseModel.prototype.constructor.call(this),this.modelHomeDir=\"\",this.modelSetting=null,this.tmpMatrix=[]}Object.defineProperty(i,\"__esModule\",{value:!0}),i.default=o;var n=e(0),s=e(11),_=r(s),a=e(1),h=r(a),l=e(3),$=r(l);o.prototype=new n.L2DBaseModel,o.prototype.load=function(t,i,e){this.setUpdating(!0),this.setInitialized(!1),this.modelHomeDir=i.substring(0,i.lastIndexOf(\"/\")+1),this.modelSetting=new _.default;var r=this;this.modelSetting.loadModelSetting(i,function(){var t=r.modelHomeDir+r.modelSetting.getModelFile();r.loadModelData(t,function(t){for(var i=0;i<r.modelSetting.getTextureNum();i++){if(/^https?:\\/\\/|^\\/\\//i.test(r.modelSetting.getTextureFile(i)))var o=r.modelSetting.getTextureFile(i);else var o=r.modelHomeDir+r.modelSetting.getTextureFile(i);r.loadTexture(i,o,function(){if(r.isTexLoaded){if(r.modelSetting.getExpressionNum()>0){r.expressions={};for(var t=0;t<r.modelSetting.getExpressionNum();t++){var i=r.modelSetting.getExpressionName(t),o=r.modelHomeDir+r.modelSetting.getExpressionFile(t);r.loadExpression(i,o)}}else r.expressionManager=null,r.expressions={};if(r.eyeBlink,null!=r.modelSetting.getPhysicsFile()?r.loadPhysics(r.modelHomeDir+r.modelSetting.getPhysicsFile()):r.physics=null,null!=r.modelSetting.getPoseFile()?r.loadPose(r.modelHomeDir+r.modelSetting.getPoseFile(),function(){r.pose.updateParam(r.live2DModel)}):r.pose=null,null!=r.modelSetting.getLayout()){var n=r.modelSetting.getLayout();null!=n.width&&r.modelMatrix.setWidth(n.width),null!=n.height&&r.modelMatrix.setHeight(n.height),null!=n.x&&r.modelMatrix.setX(n.x),null!=n.y&&r.modelMatrix.setY(n.y),null!=n.center_x&&r.modelMatrix.centerX(n.center_x),null!=n.center_y&&r.modelMatrix.centerY(n.center_y),null!=n.top&&r.modelMatrix.top(n.top),null!=n.bottom&&r.modelMatrix.bottom(n.bottom),null!=n.left&&r.modelMatrix.left(n.left),null!=n.right&&r.modelMatrix.right(n.right)}if(null!=r.modelSetting.getHitAreasCustom()){var s=r.modelSetting.getHitAreasCustom();null!=s.head_x&&(h.default.hit_areas_custom_head_x=s.head_x),null!=s.head_y&&(h.default.hit_areas_custom_head_y=s.head_y),null!=s.body_x&&(h.default.hit_areas_custom_body_x=s.body_x),null!=s.body_y&&(h.default.hit_areas_custom_body_y=s.body_y)}for(var t=0;t<r.modelSetting.getInitParamNum();t++)r.live2DModel.setParamFloat(r.modelSetting.getInitParamID(t),r.modelSetting.getInitParamValue(t));for(var t=0;t<r.modelSetting.getInitPartsVisibleNum();t++)r.live2DModel.setPartsOpacity(r.modelSetting.getInitPartsVisibleID(t),r.modelSetting.getInitPartsVisibleValue(t));r.live2DModel.saveParam(),r.preloadMotionGroup(h.default.MOTION_GROUP_IDLE),r.preloadMotionGroup(h.default.MOTION_GROUP_SLEEPY),r.mainMotionManager.stopAllMotions(),r.setUpdating(!1),r.setInitialized(!0),\"function\"==typeof e&&e()}})}})})},o.prototype.release=function(t){var i=n.Live2DFramework.getPlatformManager();t.deleteTexture(i.texture)},o.prototype.preloadMotionGroup=function(t){for(var i=this,e=0;e<this.modelSetting.getMotionNum(t);e++){var r=this.modelSetting.getMotionFile(t,e);this.loadMotion(r,this.modelHomeDir+r,function(r){r.setFadeIn(i.modelSetting.getMotionFadeIn(t,e)),r.setFadeOut(i.modelSetting.getMotionFadeOut(t,e))})}},o.prototype.update=function(){if(null==this.live2DModel)return void(h.default.DEBUG_LOG&&console.error(\"Failed to update.\"));var t=UtSystem.getUserTimeMSec()-this.startTimeMSec,i=t/1e3,e=2*i*Math.PI;if(this.mainMotionManager.isFinished()){\"1\"===sessionStorage.getItem(\"Sleepy\")?this.startRandomMotion(h.default.MOTION_GROUP_SLEEPY,h.default.PRIORITY_SLEEPY):this.startRandomMotion(h.default.MOTION_GROUP_IDLE,h.default.PRIORITY_IDLE)}this.live2DModel.loadParam(),this.mainMotionManager.updateParam(this.live2DModel)||null!=this.eyeBlink&&this.eyeBlink.updateParam(this.live2DModel),this.live2DModel.saveParam(),null==this.expressionManager||null==this.expressions||this.expressionManager.isFinished()||this.expressionManager.updateParam(this.live2DModel),this.live2DModel.addToParamFloat(\"PARAM_ANGLE_X\",30*this.dragX,1),this.live2DModel.addToParamFloat(\"PARAM_ANGLE_Y\",30*this.dragY,1),this.live2DModel.addToParamFloat(\"PARAM_ANGLE_Z\",this.dragX*this.dragY*-30,1),this.live2DModel.addToParamFloat(\"PARAM_BODY_ANGLE_X\",10*this.dragX,1),this.live2DModel.addToParamFloat(\"PARAM_EYE_BALL_X\",this.dragX,1),this.live2DModel.addToParamFloat(\"PARAM_EYE_BALL_Y\",this.dragY,1),this.live2DModel.addToParamFloat(\"PARAM_ANGLE_X\",Number(15*Math.sin(e/6.5345)),.5),this.live2DModel.addToParamFloat(\"PARAM_ANGLE_Y\",Number(8*Math.sin(e/3.5345)),.5),this.live2DModel.addToParamFloat(\"PARAM_ANGLE_Z\",Number(10*Math.sin(e/5.5345)),.5),this.live2DModel.addToParamFloat(\"PARAM_BODY_ANGLE_X\",Number(4*Math.sin(e/15.5345)),.5),this.live2DModel.setParamFloat(\"PARAM_BREATH\",Number(.5+.5*Math.sin(e/3.2345)),1),null!=this.physics&&this.physics.updateParam(this.live2DModel),null==this.lipSync&&this.live2DModel.setParamFloat(\"PARAM_MOUTH_OPEN_Y\",this.lipSyncValue),null!=this.pose&&this.pose.updateParam(this.live2DModel),this.live2DModel.update()},o.prototype.setRandomExpression=function(){var t=[];for(var i in this.expressions)t.push(i);var e=parseInt(Math.random()*t.length);this.setExpression(t[e])},o.prototype.startRandomMotion=function(t,i){var e=this.modelSetting.getMotionNum(t),r=parseInt(Math.random()*e);this.startMotion(t,r,i)},o.prototype.startMotion=function(t,i,e){var r=this.modelSetting.getMotionFile(t,i);if(null==r||\"\"==r)return void(h.default.DEBUG_LOG&&console.error(\"Failed to motion.\"));if(e==h.default.PRIORITY_FORCE)this.mainMotionManager.setReservePriority(e);else if(!this.mainMotionManager.reserveMotion(e))return void(h.default.DEBUG_LOG&&console.log(\"Motion is running.\"));var o,n=this;null==this.motions[t]?this.loadMotion(null,this.modelHomeDir+r,function(r){o=r,n.setFadeInFadeOut(t,i,e,o)}):(o=this.motions[t],n.setFadeInFadeOut(t,i,e,o))},o.prototype.setFadeInFadeOut=function(t,i,e,r){var o=this.modelSetting.getMotionFile(t,i);if(r.setFadeIn(this.modelSetting.getMotionFadeIn(t,i)),r.setFadeOut(this.modelSetting.getMotionFadeOut(t,i)),h.default.DEBUG_LOG&&console.log(\"Start motion : \"+o),null==this.modelSetting.getMotionSound(t,i))this.mainMotionManager.startMotionPrio(r,e);else{var n=this.modelSetting.getMotionSound(t,i),s=document.createElement(\"audio\");s.src=this.modelHomeDir+n,h.default.DEBUG_LOG&&console.log(\"Start sound : \"+n),s.play(),this.mainMotionManager.startMotionPrio(r,e)}},o.prototype.setExpression=function(t){var i=this.expressions[t];h.default.DEBUG_LOG&&console.log(\"Expression : \"+t),this.expressionManager.startMotion(i,!1)},o.prototype.draw=function(t){$.default.push(),$.default.multMatrix(this.modelMatrix.getArray()),this.tmpMatrix=$.default.getMatrix(),this.live2DModel.setMatrix(this.tmpMatrix),this.live2DModel.draw(),$.default.pop()},o.prototype.hitTest=function(t,i,e){for(var r=this.modelSetting.getHitAreaNum(),o=0;o<r;o++)if(t==this.modelSetting.getHitAreaName(o)){var n=this.modelSetting.getHitAreaID(o);return this.hitTestSimple(n,i,e)}return!1},o.prototype.hitTestCustom=function(t,i,e){return\"head\"==t?this.hitTestSimpleCustom(h.default.hit_areas_custom_head_x,h.default.hit_areas_custom_head_y,i,e):\"body\"==t&&this.hitTestSimpleCustom(h.default.hit_areas_custom_body_x,h.default.hit_areas_custom_body_y,i,e)}},function(t,i,e){\"use strict\";function r(){this.NAME=\"name\",this.ID=\"id\",this.MODEL=\"model\",this.TEXTURES=\"textures\",this.HIT_AREAS=\"hit_areas\",this.PHYSICS=\"physics\",this.POSE=\"pose\",this.EXPRESSIONS=\"expressions\",this.MOTION_GROUPS=\"motions\",this.SOUND=\"sound\",this.FADE_IN=\"fade_in\",this.FADE_OUT=\"fade_out\",this.LAYOUT=\"layout\",this.HIT_AREAS_CUSTOM=\"hit_areas_custom\",this.INIT_PARAM=\"init_param\",this.INIT_PARTS_VISIBLE=\"init_parts_visible\",this.VALUE=\"val\",this.FILE=\"file\",this.json={}}Object.defineProperty(i,\"__esModule\",{value:!0}),i.default=r;var o=e(0);r.prototype.loadModelSetting=function(t,i){var e=this;o.Live2DFramework.getPlatformManager().loadBytes(t,function(t){var r=String.fromCharCode.apply(null,new Uint8Array(t));e.json=JSON.parse(r),i()})},r.prototype.getTextureFile=function(t){return null==this.json[this.TEXTURES]||null==this.json[this.TEXTURES][t]?null:this.json[this.TEXTURES][t]},r.prototype.getModelFile=function(){return this.json[this.MODEL]},r.prototype.getTextureNum=function(){return null==this.json[this.TEXTURES]?0:this.json[this.TEXTURES].length},r.prototype.getHitAreaNum=function(){return null==this.json[this.HIT_AREAS]?0:this.json[this.HIT_AREAS].length},r.prototype.getHitAreaID=function(t){return null==this.json[this.HIT_AREAS]||null==this.json[this.HIT_AREAS][t]?null:this.json[this.HIT_AREAS][t][this.ID]},r.prototype.getHitAreaName=function(t){return null==this.json[this.HIT_AREAS]||null==this.json[this.HIT_AREAS][t]?null:this.json[this.HIT_AREAS][t][this.NAME]},r.prototype.getPhysicsFile=function(){return this.json[this.PHYSICS]},r.prototype.getPoseFile=function(){return this.json[this.POSE]},r.prototype.getExpressionNum=function(){return null==this.json[this.EXPRESSIONS]?0:this.json[this.EXPRESSIONS].length},r.prototype.getExpressionFile=function(t){return null==this.json[this.EXPRESSIONS]?null:this.json[this.EXPRESSIONS][t][this.FILE]},r.prototype.getExpressionName=function(t){return null==this.json[this.EXPRESSIONS]?null:this.json[this.EXPRESSIONS][t][this.NAME]},r.prototype.getLayout=function(){return this.json[this.LAYOUT]},r.prototype.getHitAreasCustom=function(){return this.json[this.HIT_AREAS_CUSTOM]},r.prototype.getInitParamNum=function(){return null==this.json[this.INIT_PARAM]?0:this.json[this.INIT_PARAM].length},r.prototype.getMotionNum=function(t){return null==this.json[this.MOTION_GROUPS]||null==this.json[this.MOTION_GROUPS][t]?0:this.json[this.MOTION_GROUPS][t].length},r.prototype.getMotionFile=function(t,i){return null==this.json[this.MOTION_GROUPS]||null==this.json[this.MOTION_GROUPS][t]||null==this.json[this.MOTION_GROUPS][t][i]?null:this.json[this.MOTION_GROUPS][t][i][this.FILE]},r.prototype.getMotionSound=function(t,i){return null==this.json[this.MOTION_GROUPS]||null==this.json[this.MOTION_GROUPS][t]||null==this.json[this.MOTION_GROUPS][t][i]||null==this.json[this.MOTION_GROUPS][t][i][this.SOUND]?null:this.json[this.MOTION_GROUPS][t][i][this.SOUND]},r.prototype.getMotionFadeIn=function(t,i){return null==this.json[this.MOTION_GROUPS]||null==this.json[this.MOTION_GROUPS][t]||null==this.json[this.MOTION_GROUPS][t][i]||null==this.json[this.MOTION_GROUPS][t][i][this.FADE_IN]?1e3:this.json[this.MOTION_GROUPS][t][i][this.FADE_IN]},r.prototype.getMotionFadeOut=function(t,i){return null==this.json[this.MOTION_GROUPS]||null==this.json[this.MOTION_GROUPS][t]||null==this.json[this.MOTION_GROUPS][t][i]||null==this.json[this.MOTION_GROUPS][t][i][this.FADE_OUT]?1e3:this.json[this.MOTION_GROUPS][t][i][this.FADE_OUT]},r.prototype.getInitParamID=function(t){return null==this.json[this.INIT_PARAM]||null==this.json[this.INIT_PARAM][t]?null:this.json[this.INIT_PARAM][t][this.ID]},r.prototype.getInitParamValue=function(t){return null==this.json[this.INIT_PARAM]||null==this.json[this.INIT_PARAM][t]?NaN:this.json[this.INIT_PARAM][t][this.VALUE]},r.prototype.getInitPartsVisibleNum=function(){return null==this.json[this.INIT_PARTS_VISIBLE]?0:this.json[this.INIT_PARTS_VISIBLE].length},r.prototype.getInitPartsVisibleID=function(t){return null==this.json[this.INIT_PARTS_VISIBLE]||null==this.json[this.INIT_PARTS_VISIBLE][t]?null:this.json[this.INIT_PARTS_VISIBLE][t][this.ID]},r.prototype.getInitPartsVisibleValue=function(t){return null==this.json[this.INIT_PARTS_VISIBLE]||null==this.json[this.INIT_PARTS_VISIBLE][t]?NaN:this.json[this.INIT_PARTS_VISIBLE][t][this.VALUE]}}]);\n","date":"2022-06-06T15:39:11.489Z","updated":"2022-06-03T06:00:55.633Z","path":"live2d-widget/live2d.min.js","layout":"false","title":"","comments":1,"_id":"cl42z5h6200113gn6f85y9qcs","content":"!function(t){function i(r){if(e[r])return e[r].exports;var o=e[r]={i:r,l:!1,exports:{}};return t[r].call(o.exports,o,o.exports,i),o.l=!0,o.exports}var e={};i.m=t,i.c=e,i.d=function(t,e,r){i.o(t,e)||Object.defineProperty(t,e,{configurable:!1,enumerable:!0,get:r})},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,\"a\",e),e},i.o=function(t,i){return Object.prototype.hasOwnProperty.call(t,i)},i.p=\"\",i(i.s=4)}([function(t,i,e){\"use strict\";function r(){this.live2DModel=null,this.modelMatrix=null,this.eyeBlink=null,this.physics=null,this.pose=null,this.debugMode=!1,this.initialized=!1,this.updating=!1,this.alpha=1,this.accAlpha=0,this.lipSync=!1,this.lipSyncValue=0,this.accelX=0,this.accelY=0,this.accelZ=0,this.dragX=0,this.dragY=0,this.startTimeMSec=null,this.mainMotionManager=new h,this.expressionManager=new h,this.motions={},this.expressions={},this.isTexLoaded=!1}function o(){AMotion.prototype.constructor.call(this),this.paramList=new Array}function n(){this.id=\"\",this.type=-1,this.value=null}function s(){this.nextBlinkTime=null,this.stateStartTime=null,this.blinkIntervalMsec=null,this.eyeState=g.STATE_FIRST,this.blinkIntervalMsec=4e3,this.closingMotionMsec=100,this.closedMotionMsec=50,this.openingMotionMsec=150,this.closeIfZero=!0,this.eyeID_L=\"PARAM_EYE_L_OPEN\",this.eyeID_R=\"PARAM_EYE_R_OPEN\"}function _(){this.tr=new Float32Array(16),this.identity()}function a(t,i){_.prototype.constructor.call(this),this.width=t,this.height=i}function h(){MotionQueueManager.prototype.constructor.call(this),this.currentPriority=null,this.reservePriority=null,this.super=MotionQueueManager.prototype}function l(){this.physicsList=new Array,this.startTimeMSec=UtSystem.getUserTimeMSec()}function $(){this.lastTime=0,this.lastModel=null,this.partsGroups=new Array}function u(t){this.paramIndex=-1,this.partsIndex=-1,this.link=null,this.id=t}function p(){this.EPSILON=.01,this.faceTargetX=0,this.faceTargetY=0,this.faceX=0,this.faceY=0,this.faceVX=0,this.faceVY=0,this.lastTimeSec=0}function f(){_.prototype.constructor.call(this),this.screenLeft=null,this.screenRight=null,this.screenTop=null,this.screenBottom=null,this.maxLeft=null,this.maxRight=null,this.maxTop=null,this.maxBottom=null,this.max=Number.MAX_VALUE,this.min=0}function c(){}var d=0;r.prototype.getModelMatrix=function(){return this.modelMatrix},r.prototype.setAlpha=function(t){t>.999&&(t=1),t<.001&&(t=0),this.alpha=t},r.prototype.getAlpha=function(){return this.alpha},r.prototype.isInitialized=function(){return this.initialized},r.prototype.setInitialized=function(t){this.initialized=t},r.prototype.isUpdating=function(){return this.updating},r.prototype.setUpdating=function(t){this.updating=t},r.prototype.getLive2DModel=function(){return this.live2DModel},r.prototype.setLipSync=function(t){this.lipSync=t},r.prototype.setLipSyncValue=function(t){this.lipSyncValue=t},r.prototype.setAccel=function(t,i,e){this.accelX=t,this.accelY=i,this.accelZ=e},r.prototype.setDrag=function(t,i){this.dragX=t,this.dragY=i},r.prototype.getMainMotionManager=function(){return this.mainMotionManager},r.prototype.getExpressionManager=function(){return this.expressionManager},r.prototype.loadModelData=function(t,i){var e=c.getPlatformManager();this.debugMode&&e.log(\"Load model : \"+t);var r=this;e.loadLive2DModel(t,function(t){if(r.live2DModel=t,r.live2DModel.saveParam(),0!=Live2D.getError())return void console.error(\"Error : Failed to loadModelData().\");r.modelMatrix=new a(r.live2DModel.getCanvasWidth(),r.live2DModel.getCanvasHeight()),r.modelMatrix.setWidth(2),r.modelMatrix.setCenterPosition(0,0),i(r.live2DModel)})},r.prototype.loadTexture=function(t,i,e){d++;var r=c.getPlatformManager();this.debugMode&&r.log(\"Load Texture : \"+i);var o=this;r.loadTexture(this.live2DModel,t,i,function(){d--,0==d&&(o.isTexLoaded=!0),\"function\"==typeof e&&e()})},r.prototype.loadMotion=function(t,i,e){var r=c.getPlatformManager();this.debugMode&&r.log(\"Load Motion : \"+i);var o=null,n=this;r.loadBytes(i,function(i){o=Live2DMotion.loadMotion(i),null!=t&&(n.motions[t]=o),e(o)})},r.prototype.loadExpression=function(t,i,e){var r=c.getPlatformManager();this.debugMode&&r.log(\"Load Expression : \"+i);var n=this;r.loadBytes(i,function(i){null!=t&&(n.expressions[t]=o.loadJson(i)),\"function\"==typeof e&&e()})},r.prototype.loadPose=function(t,i){var e=c.getPlatformManager();this.debugMode&&e.log(\"Load Pose : \"+t);var r=this;try{e.loadBytes(t,function(t){r.pose=$.load(t),\"function\"==typeof i&&i()})}catch(t){console.warn(t)}},r.prototype.loadPhysics=function(t){var i=c.getPlatformManager();this.debugMode&&i.log(\"Load Physics : \"+t);var e=this;try{i.loadBytes(t,function(t){e.physics=l.load(t)})}catch(t){console.warn(t)}},r.prototype.hitTestSimple=function(t,i,e){if(null===this.live2DModel)return!1;var r=this.live2DModel.getDrawDataIndex(t);if(r<0)return!1;for(var o=this.live2DModel.getTransformedPoints(r),n=this.live2DModel.getCanvasWidth(),s=0,_=this.live2DModel.getCanvasHeight(),a=0,h=0;h<o.length;h+=2){var l=o[h],$=o[h+1];l<n&&(n=l),l>s&&(s=l),$<_&&(_=$),$>a&&(a=$)}var u=this.modelMatrix.invertTransformX(i),p=this.modelMatrix.invertTransformY(e);return n<=u&&u<=s&&_<=p&&p<=a},r.prototype.hitTestSimpleCustom=function(t,i,e,r){return null!==this.live2DModel&&(e>=t[0]&&e<=i[0]&&r<=t[1]&&r>=i[1])},o.prototype=new AMotion,o.EXPRESSION_DEFAULT=\"DEFAULT\",o.TYPE_SET=0,o.TYPE_ADD=1,o.TYPE_MULT=2,o.loadJson=function(t){var i=new o,e=c.getPlatformManager(),r=e.jsonParseFromBytes(t);if(i.setFadeIn(parseInt(r.fade_in)>0?parseInt(r.fade_in):1e3),i.setFadeOut(parseInt(r.fade_out)>0?parseInt(r.fade_out):1e3),null==r.params)return i;var s=r.params,_=s.length;i.paramList=[];for(var a=0;a<_;a++){var h=s[a],l=h.id.toString(),$=parseFloat(h.val),u=o.TYPE_ADD,p=null!=h.calc?h.calc.toString():\"add\";if((u=\"add\"===p?o.TYPE_ADD:\"mult\"===p?o.TYPE_MULT:\"set\"===p?o.TYPE_SET:o.TYPE_ADD)==o.TYPE_ADD){var f=null==h.def?0:parseFloat(h.def);$-=f}else if(u==o.TYPE_MULT){var f=null==h.def?1:parseFloat(h.def);0==f&&(f=1),$/=f}var d=new n;d.id=l,d.type=u,d.value=$,i.paramList.push(d)}return i},o.prototype.updateParamExe=function(t,i,e,r){for(var n=this.paramList.length-1;n>=0;--n){var s=this.paramList[n];s.type==o.TYPE_ADD?t.addToParamFloat(s.id,s.value,e):s.type==o.TYPE_MULT?t.multParamFloat(s.id,s.value,e):s.type==o.TYPE_SET&&t.setParamFloat(s.id,s.value,e)}},s.prototype.calcNextBlink=function(){return UtSystem.getUserTimeMSec()+Math.random()*(2*this.blinkIntervalMsec-1)},s.prototype.setInterval=function(t){this.blinkIntervalMsec=t},s.prototype.setEyeMotion=function(t,i,e){this.closingMotionMsec=t,this.closedMotionMsec=i,this.openingMotionMsec=e},s.prototype.updateParam=function(t){var i,e=UtSystem.getUserTimeMSec(),r=0;switch(this.eyeState){case g.STATE_CLOSING:r=(e-this.stateStartTime)/this.closingMotionMsec,r>=1&&(r=1,this.eyeState=g.STATE_CLOSED,this.stateStartTime=e),i=1-r;break;case g.STATE_CLOSED:r=(e-this.stateStartTime)/this.closedMotionMsec,r>=1&&(this.eyeState=g.STATE_OPENING,this.stateStartTime=e),i=0;break;case g.STATE_OPENING:r=(e-this.stateStartTime)/this.openingMotionMsec,r>=1&&(r=1,this.eyeState=g.STATE_INTERVAL,this.nextBlinkTime=this.calcNextBlink()),i=r;break;case g.STATE_INTERVAL:this.nextBlinkTime<e&&(this.eyeState=g.STATE_CLOSING,this.stateStartTime=e),i=1;break;case g.STATE_FIRST:default:this.eyeState=g.STATE_INTERVAL,this.nextBlinkTime=this.calcNextBlink(),i=1}this.closeIfZero||(i=-i),t.setParamFloat(this.eyeID_L,i),t.setParamFloat(this.eyeID_R,i)};var g=function(){};g.STATE_FIRST=\"STATE_FIRST\",g.STATE_INTERVAL=\"STATE_INTERVAL\",g.STATE_CLOSING=\"STATE_CLOSING\",g.STATE_CLOSED=\"STATE_CLOSED\",g.STATE_OPENING=\"STATE_OPENING\",_.mul=function(t,i,e){var r,o,n,s=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];for(r=0;r<4;r++)for(o=0;o<4;o++)for(n=0;n<4;n++)s[r+4*o]+=t[r+4*n]*i[n+4*o];for(r=0;r<16;r++)e[r]=s[r]},_.prototype.identity=function(){for(var t=0;t<16;t++)this.tr[t]=t%5==0?1:0},_.prototype.getArray=function(){return this.tr},_.prototype.getCopyMatrix=function(){return new Float32Array(this.tr)},_.prototype.setMatrix=function(t){if(null!=this.tr&&this.tr.length==this.tr.length)for(var i=0;i<16;i++)this.tr[i]=t[i]},_.prototype.getScaleX=function(){return this.tr[0]},_.prototype.getScaleY=function(){return this.tr[5]},_.prototype.transformX=function(t){return this.tr[0]*t*8/3+this.tr[12]},_.prototype.transformY=function(t){return this.tr[5]*t*8/3+this.tr[13]},_.prototype.invertTransformX=function(t){return(t-this.tr[12])/this.tr[0]},_.prototype.invertTransformY=function(t){return(t-this.tr[13])/this.tr[5]},_.prototype.multTranslate=function(t,i){var e=[1,0,0,0,0,1,0,0,0,0,1,0,t,i,0,1];_.mul(e,this.tr,this.tr)},_.prototype.translate=function(t,i){this.tr[12]=t,this.tr[13]=i},_.prototype.translateX=function(t){this.tr[12]=t},_.prototype.translateY=function(t){this.tr[13]=t},_.prototype.multScale=function(t,i){var e=[t,0,0,0,0,i,0,0,0,0,1,0,0,0,0,1];_.mul(e,this.tr,this.tr)},_.prototype.scale=function(t,i){this.tr[0]=t,this.tr[5]=i},a.prototype=new _,a.prototype.setPosition=function(t,i){this.translate(t,i)},a.prototype.setCenterPosition=function(t,i){var e=this.width*this.getScaleX(),r=this.height*this.getScaleY();this.translate(t-e/2,i-r/2)},a.prototype.top=function(t){this.setY(t)},a.prototype.bottom=function(t){var i=this.height*this.getScaleY();this.translateY(t-i)},a.prototype.left=function(t){this.setX(t)},a.prototype.right=function(t){var i=this.width*this.getScaleX();this.translateX(t-i)},a.prototype.centerX=function(t){var i=this.width*this.getScaleX();this.translateX(t-i/2)},a.prototype.centerY=function(t){var i=this.height*this.getScaleY();this.translateY(t-i/2)},a.prototype.setX=function(t){this.translateX(t)},a.prototype.setY=function(t){this.translateY(t)},a.prototype.setHeight=function(t){var i=t/this.height,e=-i;this.scale(i,e)},a.prototype.setWidth=function(t){var i=t/this.width,e=-i;this.scale(i,e)},h.prototype=new MotionQueueManager,h.prototype.getCurrentPriority=function(){return this.currentPriority},h.prototype.getReservePriority=function(){return this.reservePriority},h.prototype.reserveMotion=function(t){return!(this.reservePriority>=t)&&(!(this.currentPriority>=t)&&(this.reservePriority=t,!0))},h.prototype.setReservePriority=function(t){this.reservePriority=t},h.prototype.updateParam=function(t){var i=MotionQueueManager.prototype.updateParam.call(this,t);return this.isFinished()&&(this.currentPriority=0),i},h.prototype.startMotionPrio=function(t,i){return i==this.reservePriority&&(this.reservePriority=0),this.currentPriority=i,this.startMotion(t,!1)},l.load=function(t){for(var i=new l,e=c.getPlatformManager(),r=e.jsonParseFromBytes(t),o=r.physics_hair,n=o.length,s=0;s<n;s++){var _=o[s],a=new PhysicsHair,h=_.setup,$=parseFloat(h.length),u=parseFloat(h.regist),p=parseFloat(h.mass);a.setup($,u,p);for(var f=_.src,d=f.length,g=0;g<d;g++){var y=f[g],m=y.id,T=PhysicsHair.Src.SRC_TO_X,P=y.ptype;\"x\"===P?T=PhysicsHair.Src.SRC_TO_X:\"y\"===P?T=PhysicsHair.Src.SRC_TO_Y:\"angle\"===P?T=PhysicsHair.Src.SRC_TO_G_ANGLE:UtDebug.error(\"live2d\",\"Invalid parameter:PhysicsHair.Src\");var S=parseFloat(y.scale),v=parseFloat(y.weight);a.addSrcParam(T,m,S,v)}for(var L=_.targets,M=L.length,g=0;g<M;g++){var E=L[g],m=E.id,T=PhysicsHair.Target.TARGET_FROM_ANGLE,P=E.ptype;\"angle\"===P?T=PhysicsHair.Target.TARGET_FROM_ANGLE:\"angle_v\"===P?T=PhysicsHair.Target.TARGET_FROM_ANGLE_V:UtDebug.error(\"live2d\",\"Invalid parameter:PhysicsHair.Target\");var S=parseFloat(E.scale),v=parseFloat(E.weight);a.addTargetParam(T,m,S,v)}i.physicsList.push(a)}return i},l.prototype.updateParam=function(t){for(var i=UtSystem.getUserTimeMSec()-this.startTimeMSec,e=0;e<this.physicsList.length;e++)this.physicsList[e].update(t,i)},$.load=function(t){for(var i=new $,e=c.getPlatformManager(),r=e.jsonParseFromBytes(t),o=r.parts_visible,n=o.length,s=0;s<n;s++){for(var _=o[s],a=_.group,h=a.length,l=new Array,p=0;p<h;p++){var f=a[p],d=new u(f.id);if(l[p]=d,null!=f.link){var g=f.link,y=g.length;d.link=new Array;for(var m=0;m<y;m++){var T=new u(g[m]);d.link.push(T)}}}i.partsGroups.push(l)}return i},$.prototype.updateParam=function(t){if(null!=t){t!=this.lastModel&&this.initParam(t),this.lastModel=t;var i=UtSystem.getUserTimeMSec(),e=0==this.lastTime?0:(i-this.lastTime)/1e3;this.lastTime=i,e<0&&(e=0);for(var r=0;r<this.partsGroups.length;r++)this.normalizePartsOpacityGroup(t,this.partsGroups[r],e),this.copyOpacityOtherParts(t,this.partsGroups[r])}},$.prototype.initParam=function(t){if(null!=t)for(var i=0;i<this.partsGroups.length;i++)for(var e=this.partsGroups[i],r=0;r<e.length;r++){e[r].initIndex(t);var o=e[r].partsIndex,n=e[r].paramIndex;if(!(o<0)){var s=0!=t.getParamFloat(n);if(t.setPartsOpacity(o,s?1:0),t.setParamFloat(n,s?1:0),null!=e[r].link)for(var _=0;_<e[r].link.length;_++)e[r].link[_].initIndex(t)}}},$.prototype.normalizePartsOpacityGroup=function(t,i,e){for(var r=-1,o=1,n=0;n<i.length;n++){var s=i[n].partsIndex,_=i[n].paramIndex;if(!(s<0)&&0!=t.getParamFloat(_)){if(r>=0)break;r=n,o=t.getPartsOpacity(s),o+=e/.5,o>1&&(o=1)}}r<0&&(r=0,o=1);for(var n=0;n<i.length;n++){var s=i[n].partsIndex;if(!(s<0))if(r==n)t.setPartsOpacity(s,o);else{var a,h=t.getPartsOpacity(s);a=o<.5?-.5*o/.5+1:.5*(1-o)/.5;var l=(1-a)*(1-o);l>.15&&(a=1-.15/(1-o)),h>a&&(h=a),t.setPartsOpacity(s,h)}}},$.prototype.copyOpacityOtherParts=function(t,i){for(var e=0;e<i.length;e++){var r=i[e];if(null!=r.link&&!(r.partsIndex<0))for(var o=t.getPartsOpacity(r.partsIndex),n=0;n<r.link.length;n++){var s=r.link[n];s.partsIndex<0||t.setPartsOpacity(s.partsIndex,o)}}},u.prototype.initIndex=function(t){this.paramIndex=t.getParamIndex(\"VISIBLE:\"+this.id),this.partsIndex=t.getPartsDataIndex(PartsDataID.getID(this.id)),t.setParamFloat(this.paramIndex,1)},p.FRAME_RATE=30,p.prototype.setPoint=function(t,i){this.faceTargetX=t,this.faceTargetY=i},p.prototype.getX=function(){return this.faceX},p.prototype.getY=function(){return this.faceY},p.prototype.update=function(){var t=40/7.5/p.FRAME_RATE;if(0==this.lastTimeSec)return void(this.lastTimeSec=UtSystem.getUserTimeMSec());var i=UtSystem.getUserTimeMSec(),e=(i-this.lastTimeSec)*p.FRAME_RATE/1e3;this.lastTimeSec=i;var r=.15*p.FRAME_RATE,o=e*t/r,n=this.faceTargetX-this.faceX,s=this.faceTargetY-this.faceY;if(!(Math.abs(n)<=this.EPSILON&&Math.abs(s)<=this.EPSILON)){var _=Math.sqrt(n*n+s*s),a=t*n/_,h=t*s/_,l=a-this.faceVX,$=h-this.faceVY,u=Math.sqrt(l*l+$*$);(u<-o||u>o)&&(l*=o/u,$*=o/u,u=o),this.faceVX+=l,this.faceVY+=$;var f=.5*(Math.sqrt(o*o+16*o*_-8*o*_)-o),c=Math.sqrt(this.faceVX*this.faceVX+this.faceVY*this.faceVY);c>f&&(this.faceVX*=f/c,this.faceVY*=f/c),this.faceX+=this.faceVX,this.faceY+=this.faceVY}},f.prototype=new _,f.prototype.getMaxScale=function(){return this.max},f.prototype.getMinScale=function(){return this.min},f.prototype.setMaxScale=function(t){this.max=t},f.prototype.setMinScale=function(t){this.min=t},f.prototype.isMaxScale=function(){return this.getScaleX()==this.max},f.prototype.isMinScale=function(){return this.getScaleX()==this.min},f.prototype.adjustTranslate=function(t,i){this.tr[0]*this.maxLeft+(this.tr[12]+t)>this.screenLeft&&(t=this.screenLeft-this.tr[0]*this.maxLeft-this.tr[12]),this.tr[0]*this.maxRight+(this.tr[12]+t)<this.screenRight&&(t=this.screenRight-this.tr[0]*this.maxRight-this.tr[12]),this.tr[5]*this.maxTop+(this.tr[13]+i)<this.screenTop&&(i=this.screenTop-this.tr[5]*this.maxTop-this.tr[13]),this.tr[5]*this.maxBottom+(this.tr[13]+i)>this.screenBottom&&(i=this.screenBottom-this.tr[5]*this.maxBottom-this.tr[13]);var e=[1,0,0,0,0,1,0,0,0,0,1,0,t,i,0,1];_.mul(e,this.tr,this.tr)},f.prototype.adjustScale=function(t,i,e){var r=e*this.tr[0];r<this.min?this.tr[0]>0&&(e=this.min/this.tr[0]):r>this.max&&this.tr[0]>0&&(e=this.max/this.tr[0]);var o=[1,0,0,0,0,1,0,0,0,0,1,0,t,i,0,1],n=[e,0,0,0,0,e,0,0,0,0,1,0,0,0,0,1],s=[1,0,0,0,0,1,0,0,0,0,1,0,-t,-i,0,1];_.mul(s,this.tr,this.tr),_.mul(n,this.tr,this.tr),_.mul(o,this.tr,this.tr)},f.prototype.setScreenRect=function(t,i,e,r){this.screenLeft=t,this.screenRight=i,this.screenTop=r,this.screenBottom=e},f.prototype.setMaxScreenRect=function(t,i,e,r){this.maxLeft=t,this.maxRight=i,this.maxTop=r,this.maxBottom=e},f.prototype.getScreenLeft=function(){return this.screenLeft},f.prototype.getScreenRight=function(){return this.screenRight},f.prototype.getScreenBottom=function(){return this.screenBottom},f.prototype.getScreenTop=function(){return this.screenTop},f.prototype.getMaxLeft=function(){return this.maxLeft},f.prototype.getMaxRight=function(){return this.maxRight},f.prototype.getMaxBottom=function(){return this.maxBottom},f.prototype.getMaxTop=function(){return this.maxTop},c.platformManager=null,c.getPlatformManager=function(){return c.platformManager},c.setPlatformManager=function(t){c.platformManager=t},t.exports={L2DTargetPoint:p,Live2DFramework:c,L2DViewMatrix:f,L2DPose:$,L2DPartsParam:u,L2DPhysics:l,L2DMotionManager:h,L2DModelMatrix:a,L2DMatrix44:_,EYE_STATE:g,L2DEyeBlink:s,L2DExpressionParam:n,L2DExpressionMotion:o,L2DBaseModel:r}},function(t,i,e){\"use strict\";var r={DEBUG_LOG:!1,DEBUG_MOUSE_LOG:!1,DEBUG_DRAW_HIT_AREA:!1,DEBUG_DRAW_ALPHA_MODEL:!1,VIEW_MAX_SCALE:2,VIEW_MIN_SCALE:.8,VIEW_LOGICAL_LEFT:-1,VIEW_LOGICAL_RIGHT:1,VIEW_LOGICAL_MAX_LEFT:-2,VIEW_LOGICAL_MAX_RIGHT:2,VIEW_LOGICAL_MAX_BOTTOM:-2,VIEW_LOGICAL_MAX_TOP:2,PRIORITY_NONE:0,PRIORITY_IDLE:1,PRIORITY_SLEEPY:2,PRIORITY_NORMAL:3,PRIORITY_FORCE:4,MOTION_GROUP_IDLE:\"idle\",MOTION_GROUP_SLEEPY:\"sleepy\",MOTION_GROUP_TAP_BODY:\"tap_body\",MOTION_GROUP_FLICK_HEAD:\"flick_head\",MOTION_GROUP_PINCH_IN:\"pinch_in\",MOTION_GROUP_PINCH_OUT:\"pinch_out\",MOTION_GROUP_SHAKE:\"shake\",HIT_AREA_HEAD:\"head\",HIT_AREA_BODY:\"body\"};t.exports=r},function(t,i,e){\"use strict\";function r(t){n=t}function o(){return n}Object.defineProperty(i,\"__esModule\",{value:!0}),i.setContext=r,i.getContext=o;var n=void 0},function(t,i,e){\"use strict\";function r(){}r.matrixStack=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],r.depth=0,r.currentMatrix=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],r.tmp=new Array(16),r.reset=function(){this.depth=0},r.loadIdentity=function(){for(var t=0;t<16;t++)this.currentMatrix[t]=t%5==0?1:0},r.push=function(){var t=(this.depth,16*(this.depth+1));this.matrixStack.length<t+16&&(this.matrixStack.length=t+16);for(var i=0;i<16;i++)this.matrixStack[t+i]=this.currentMatrix[i];this.depth++},r.pop=function(){--this.depth<0&&(myError(\"Invalid matrix stack.\"),this.depth=0);for(var t=16*this.depth,i=0;i<16;i++)this.currentMatrix[i]=this.matrixStack[t+i]},r.getMatrix=function(){return this.currentMatrix},r.multMatrix=function(t){var i,e,r;for(i=0;i<16;i++)this.tmp[i]=0;for(i=0;i<4;i++)for(e=0;e<4;e++)for(r=0;r<4;r++)this.tmp[i+4*e]+=this.currentMatrix[i+4*r]*t[r+4*e];for(i=0;i<16;i++)this.currentMatrix[i]=this.tmp[i]},t.exports=r},function(t,i,e){t.exports=e(5)},function(t,i,e){\"use strict\";function r(t){return t&&t.__esModule?t:{default:t}}function o(t){C=document.getElementById(t),C.addEventListener&&(window.addEventListener(\"click\",g),window.addEventListener(\"mousedown\",g),window.addEventListener(\"mousemove\",g),window.addEventListener(\"mouseup\",g),document.addEventListener(\"mouseout\",g),window.addEventListener(\"touchstart\",y),window.addEventListener(\"touchend\",y),window.addEventListener(\"touchmove\",y))}function n(t){var i=C.width,e=C.height;N=new M.L2DTargetPoint;var r=e/i,o=w.default.VIEW_LOGICAL_LEFT,n=w.default.VIEW_LOGICAL_RIGHT,_=-r,h=r;if(window.Live2D.captureFrame=!1,B=new M.L2DViewMatrix,B.setScreenRect(o,n,_,h),B.setMaxScreenRect(w.default.VIEW_LOGICAL_MAX_LEFT,w.default.VIEW_LOGICAL_MAX_RIGHT,w.default.VIEW_LOGICAL_MAX_BOTTOM,w.default.VIEW_LOGICAL_MAX_TOP),B.setMaxScale(w.default.VIEW_MAX_SCALE),B.setMinScale(w.default.VIEW_MIN_SCALE),U=new M.L2DMatrix44,U.multScale(1,i/e),G=new M.L2DMatrix44,G.multTranslate(-i/2,-e/2),G.multScale(2/i,-2/i),F=v(),(0,D.setContext)(F),!F)return console.error(\"Failed to create WebGL context.\"),void(window.WebGLRenderingContext&&console.error(\"Your browser don't support WebGL, check https://get.webgl.org/ for futher information.\"));window.Live2D.setGL(F),F.clearColor(0,0,0,0),a(t),s()}function s(){b||(b=!0,function t(){_();var i=window.requestAnimationFrame||window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame||window.msRequestAnimationFrame;if(window.Live2D.captureFrame){window.Live2D.captureFrame=!1;var e=document.createElement(\"a\");document.body.appendChild(e),e.setAttribute(\"type\",\"hidden\"),e.href=C.toDataURL(),e.download=window.Live2D.captureName||\"live2d.png\",e.click()}i(t,C)}())}function _(){O.default.reset(),O.default.loadIdentity(),N.update(),R.setDrag(N.getX(),N.getY()),F.clear(F.COLOR_BUFFER_BIT),O.default.multMatrix(U.getArray()),O.default.multMatrix(B.getArray()),O.default.push();for(var t=0;t<R.numModels();t++){var i=R.getModel(t);if(null==i)return;i.initialized&&!i.updating&&(i.update(),i.draw(F))}O.default.pop()}function a(t){R.reloadFlg=!0,R.count++,R.changeModel(F,t)}function h(t,i){return t.x*i.x+t.y*i.y}function l(t,i){var e=Math.sqrt(t*t+i*i);return{x:t/e,y:i/e}}function $(t,i,e){function r(t,i){return 180*Math.acos(h({x:0,y:1},l(t,i)))/Math.PI}if(i.x<e.left+e.width&&i.y<e.top+e.height&&i.x>e.left&&i.y>e.top)return i;var o=t.x-i.x,n=t.y-i.y,s=r(o,n);i.x<t.x&&(s=360-s);var _=360-r(e.left-t.x,-1*(e.top-t.y)),a=360-r(e.left-t.x,-1*(e.top+e.height-t.y)),$=r(e.left+e.width-t.x,-1*(e.top-t.y)),u=r(e.left+e.width-t.x,-1*(e.top+e.height-t.y)),p=n/o,f={};if(s<$){var c=e.top-t.y,d=c/p;f={y:t.y+c,x:t.x+d}}else if(s<u){var g=e.left+e.width-t.x,y=g*p;f={y:t.y+y,x:t.x+g}}else if(s<a){var m=e.top+e.height-t.y,T=m/p;f={y:t.y+m,x:t.x+T}}else if(s<_){var P=t.x-e.left,S=P*p;f={y:t.y-S,x:t.x-P}}else{var v=e.top-t.y,L=v/p;f={y:t.y+v,x:t.x+L}}return f}function u(t){Y=!0;var i=C.getBoundingClientRect(),e=P(t.clientX-i.left),r=S(t.clientY-i.top),o=$({x:i.left+i.width/2,y:i.top+i.height*X},{x:t.clientX,y:t.clientY},i),n=m(o.x-i.left),s=T(o.y-i.top);w.default.DEBUG_MOUSE_LOG&&console.log(\"onMouseMove device( x:\"+t.clientX+\" y:\"+t.clientY+\" ) view( x:\"+n+\" y:\"+s+\")\"),k=e,V=r,N.setPoint(n,s)}function p(t){Y=!0;var i=C.getBoundingClientRect(),e=P(t.clientX-i.left),r=S(t.clientY-i.top),o=$({x:i.left+i.width/2,y:i.top+i.height*X},{x:t.clientX,y:t.clientY},i),n=m(o.x-i.left),s=T(o.y-i.top);w.default.DEBUG_MOUSE_LOG&&console.log(\"onMouseDown device( x:\"+t.clientX+\" y:\"+t.clientY+\" ) view( x:\"+n+\" y:\"+s+\")\"),k=e,V=r,R.tapEvent(n,s)}function f(t){var i=C.getBoundingClientRect(),e=P(t.clientX-i.left),r=S(t.clientY-i.top),o=$({x:i.left+i.width/2,y:i.top+i.height*X},{x:t.clientX,y:t.clientY},i),n=m(o.x-i.left),s=T(o.y-i.top);w.default.DEBUG_MOUSE_LOG&&console.log(\"onMouseMove device( x:\"+t.clientX+\" y:\"+t.clientY+\" ) view( x:\"+n+\" y:\"+s+\")\"),Y&&(k=e,V=r,N.setPoint(n,s))}function c(){Y&&(Y=!1),N.setPoint(0,0)}function d(){w.default.DEBUG_LOG&&console.log(\"Set Session Storage.\"),sessionStorage.setItem(\"Sleepy\",\"1\")}function g(t){if(\"mousewheel\"==t.type);else if(\"mousedown\"==t.type)p(t);else if(\"mousemove\"==t.type){var i=sessionStorage.getItem(\"Sleepy\");\"1\"===i&&sessionStorage.setItem(\"Sleepy\",\"0\"),u(t)}else if(\"mouseup\"==t.type){if(\"button\"in t&&0!=t.button)return}else if(\"mouseout\"==t.type){w.default.DEBUG_LOG&&console.log(\"Mouse out Window.\"),c();var e=sessionStorage.getItem(\"SleepyTimer\");window.clearTimeout(e),e=window.setTimeout(d,5e4),sessionStorage.setItem(\"SleepyTimer\",e)}}function y(t){var i=t.touches[0];\"touchstart\"==t.type?1==t.touches.length&&u(i):\"touchmove\"==t.type?f(i):\"touchend\"==t.type&&c()}function m(t){var i=G.transformX(t);return B.invertTransformX(i)}function T(t){var i=G.transformY(t);return B.invertTransformY(i)}function P(t){return G.transformX(t)}function S(t){return G.transformY(t)}function v(){for(var t=[\"webgl\",\"experimental-webgl\",\"webkit-3d\",\"moz-webgl\"],i=0;i<t.length;i++)try{var e=C.getContext(t[i],{premultipliedAlpha:!0});if(e)return e}catch(t){}return null}function L(t,i,e){X=void 0===e?.5:e,o(t),n(i)}e(6);var M=e(0),E=e(8),A=r(E),I=e(1),w=r(I),x=e(3),O=r(x),D=e(2),R=(window.navigator.platform.toLowerCase(),new A.default),b=!1,F=null,C=null,N=null,B=null,U=null,G=null,Y=!1,k=0,V=0,X=.5;window.loadlive2d=L},function(t,i,e){\"use strict\";(function(t){!function(){function i(){At||(this._$MT=null,this._$5S=null,this._$NP=0,i._$42++,this._$5S=new Y(this))}function e(t){if(!At){this.clipContextList=new Array,this.glcontext=t.gl,this.dp_webgl=t,this.curFrameNo=0,this.firstError_clipInNotUpdate=!0,this.colorBuffer=0,this.isInitGLFBFunc=!1,this.tmpBoundsOnModel=new S,at.glContext.length>at.frameBuffers.length&&(this.curFrameNo=this.getMaskRenderTexture()),this.tmpModelToViewMatrix=new R,this.tmpMatrix2=new R,this.tmpMatrixForMask=new R,this.tmpMatrixForDraw=new R,this.CHANNEL_COLORS=new Array;var i=new A;i=new A,i.r=0,i.g=0,i.b=0,i.a=1,this.CHANNEL_COLORS.push(i),i=new A,i.r=1,i.g=0,i.b=0,i.a=0,this.CHANNEL_COLORS.push(i),i=new A,i.r=0,i.g=1,i.b=0,i.a=0,this.CHANNEL_COLORS.push(i),i=new A,i.r=0,i.g=0,i.b=1,i.a=0,this.CHANNEL_COLORS.push(i);for(var e=0;e<this.CHANNEL_COLORS.length;e++)this.dp_webgl.setChannelFlagAsColor(e,this.CHANNEL_COLORS[e])}}function r(t,i,e){this.clipIDList=new Array,this.clipIDList=e,this.clippingMaskDrawIndexList=new Array;for(var r=0;r<e.length;r++)this.clippingMaskDrawIndexList.push(i.getDrawDataIndex(e[r]));this.clippedDrawContextList=new Array,this.isUsing=!0,this.layoutChannelNo=0,this.layoutBounds=new S,this.allClippedDrawRect=new S,this.matrixForMask=new Float32Array(16),this.matrixForDraw=new Float32Array(16),this.owner=t}function o(t,i){this._$gP=t,this.drawDataIndex=i}function n(){At||(this.color=null)}function s(){At||(this._$dP=null,this._$eo=null,this._$V0=null,this._$dP=1e3,this._$eo=1e3,this._$V0=1,this._$a0())}function _(){}function a(){this._$r=null,this._$0S=null}function h(){At||(this.x=null,this.y=null,this.width=null,this.height=null)}function l(t){At||et.prototype.constructor.call(this,t)}function $(){}function u(t){At||et.prototype.constructor.call(this,t)}function p(){At||(this._$vo=null,this._$F2=null,this._$ao=400,this._$1S=400,p._$42++)}function f(){At||(this.p1=new c,this.p2=new c,this._$Fo=0,this._$Db=0,this._$L2=0,this._$M2=0,this._$ks=0,this._$9b=0,this._$iP=0,this._$iT=0,this._$lL=new Array,this._$qP=new Array,this.setup(.3,.5,.1))}function c(){this._$p=1,this.x=0,this.y=0,this.vx=0,this.vy=0,this.ax=0,this.ay=0,this.fx=0,this.fy=0,this._$s0=0,this._$70=0,this._$7L=0,this._$HL=0}function d(t,i,e){this._$wL=null,this.scale=null,this._$V0=null,this._$wL=t,this.scale=i,this._$V0=e}function g(t,i,e,r){d.prototype.constructor.call(this,i,e,r),this._$tL=null,this._$tL=t}function y(t,i,e){this._$wL=null,this.scale=null,this._$V0=null,this._$wL=t,this.scale=i,this._$V0=e}function T(t,i,e,r){y.prototype.constructor.call(this,i,e,r),this._$YP=null,this._$YP=t}function P(){At||(this._$fL=0,this._$gL=0,this._$B0=1,this._$z0=1,this._$qT=0,this.reflectX=!1,this.reflectY=!1)}function S(){At||(this.x=null,this.y=null,this.width=null,this.height=null)}function v(){}function L(){At||(this.x=null,this.y=null)}function M(){At||(this._$gP=null,this._$dr=null,this._$GS=null,this._$qb=null,this._$Lb=null,this._$mS=null,this.clipID=null,this.clipIDList=new Array)}function E(){At||(this._$Eb=E._$ps,this._$lT=1,this._$C0=1,this._$tT=1,this._$WL=1,this.culling=!1,this.matrix4x4=new Float32Array(16),this.premultipliedAlpha=!1,this.anisotropy=0,this.clippingProcess=E.CLIPPING_PROCESS_NONE,this.clipBufPre_clipContextMask=null,this.clipBufPre_clipContextDraw=null,this.CHANNEL_COLORS=new Array)}function A(){At||(this.a=1,this.r=1,this.g=1,this.b=1,this.scale=1,this._$ho=1,this.blendMode=at.L2D_COLOR_BLEND_MODE_MULT)}function I(){At||(this._$kP=null,this._$dr=null,this._$Ai=!0,this._$mS=null)}function w(){}function x(){At||(this._$VP=0,this._$wL=null,this._$GP=null,this._$8o=x._$ds,this._$2r=-1,this._$O2=0,this._$ri=0)}function O(){}function D(){At||(this._$Ob=null)}function R(){this.m=new Float32Array(16),this.identity()}function b(t){At||et.prototype.constructor.call(this,t)}function F(){At||(this._$7=1,this._$f=0,this._$H=0,this._$g=1,this._$k=0,this._$w=0,this._$hi=STATE_IDENTITY,this._$Z=_$pS)}function C(){At||(s.prototype.constructor.call(this),this.motions=new Array,this._$7r=null,this._$7r=C._$Co++,this._$D0=30,this._$yT=0,this._$E=!0,this.loopFadeIn=!0,this._$AS=-1,_$a0())}function N(){this._$P=new Float32Array(100),this.size=0}function B(){this._$4P=null,this._$I0=null,this._$RP=null}function U(){}function G(){}function Y(t){At||(this._$QT=!0,this._$co=-1,this._$qo=0,this._$pb=new Array(Y._$is),this._$_2=new Float32Array(Y._$is),this._$vr=new Float32Array(Y._$is),this._$Rr=new Float32Array(Y._$is),this._$Or=new Float32Array(Y._$is),this._$fs=new Float32Array(Y._$is),this._$Js=new Array(Y._$is),this._$3S=new Array,this._$aS=new Array,this._$Bo=null,this._$F2=new Array,this._$db=new Array,this._$8b=new Array,this._$Hr=new Array,this._$Ws=null,this._$Vs=null,this._$Er=null,this._$Es=new Int16Array(U._$Qb),this._$ZP=new Float32Array(2*U._$1r),this._$Ri=t,this._$b0=Y._$HP++,this.clipManager=null,this.dp_webgl=null)}function k(){}function V(){At||(this._$12=null,this._$bb=null,this._$_L=null,this._$jo=null,this._$iL=null,this._$0L=null,this._$Br=null,this._$Dr=null,this._$Cb=null,this._$mr=null,this._$_L=wt.STATE_FIRST,this._$Br=4e3,this._$Dr=100,this._$Cb=50,this._$mr=150,this._$jo=!0,this._$iL=\"PARAM_EYE_L_OPEN\",this._$0L=\"PARAM_EYE_R_OPEN\")}function X(){At||(E.prototype.constructor.call(this),this._$sb=new Int32Array(X._$As),this._$U2=new Array,this.transform=null,this.gl=null,null==X._$NT&&(X._$NT=X._$9r(256),X._$vS=X._$9r(256),X._$no=X._$vb(256)))}function z(){At||(I.prototype.constructor.call(this),this._$GS=null,this._$Y0=null)}function H(t){_t.prototype.constructor.call(this,t),this._$8r=I._$ur,this._$Yr=null,this._$Wr=null}function W(){At||(M.prototype.constructor.call(this),this._$gP=null,this._$dr=null,this._$GS=null,this._$qb=null,this._$Lb=null,this._$mS=null)}function j(){At||(this._$NL=null,this._$3S=null,this._$aS=null,j._$42++)}function q(){At||(i.prototype.constructor.call(this),this._$zo=new X)}function J(){At||(s.prototype.constructor.call(this),this.motions=new Array,this._$o2=null,this._$7r=J._$Co++,this._$D0=30,this._$yT=0,this._$E=!1,this.loopFadeIn=!0,this._$rr=-1,this._$eP=0)}function Q(t,i){return String.fromCharCode(t.getUint8(i))}function N(){this._$P=new Float32Array(100),this.size=0}function B(){this._$4P=null,this._$I0=null,this._$RP=null}function Z(){At||(I.prototype.constructor.call(this),this._$o=0,this._$A=0,this._$GS=null,this._$Eo=null)}function K(t){_t.prototype.constructor.call(this,t),this._$8r=I._$ur,this._$Cr=null,this._$hr=null}function tt(){At||(this.visible=!0,this._$g0=!1,this._$NL=null,this._$3S=null,this._$aS=null,tt._$42++)}function it(t){this._$VS=null,this._$e0=null,this._$e0=t}function et(t){At||(this.id=t)}function rt(){}function ot(){At||(this._$4S=null)}function nt(t,i){this.canvas=t,this.context=i,this.viewport=new Array(0,0,t.width,t.height),this._$6r=1,this._$xP=0,this._$3r=1,this._$uP=0,this._$Qo=-1,this.cacheImages={}}function st(){At||(this._$TT=null,this._$LT=null,this._$FS=null,this._$wL=null)}function _t(t){At||(this._$e0=null,this._$IP=null,this._$JS=!1,this._$AT=!0,this._$e0=t,this.totalScale=1,this._$7s=1,this.totalOpacity=1)}function at(){}function ht(){}function lt(t){At||(this._$ib=t)}function $t(){At||(W.prototype.constructor.call(this),this._$LP=-1,this._$d0=0,this._$Yo=0,this._$JP=null,this._$5P=null,this._$BP=null,this._$Eo=null,this._$Qi=null,this._$6s=$t._$ms,this.culling=!0,this.gl_cacheImage=null,this.instanceNo=$t._$42++)}function ut(t){Mt.prototype.constructor.call(this,t),this._$8r=W._$ur,this._$Cr=null,this._$hr=null}function pt(){At||(this.x=null,this.y=null)}function ft(t){At||(i.prototype.constructor.call(this),this.drawParamWebGL=new mt(t),this.drawParamWebGL.setGL(at.getGL(t)))}function ct(){At||(this.motions=null,this._$eb=!1,this.motions=new Array)}function dt(){this._$w0=null,this._$AT=!0,this._$9L=!1,this._$z2=-1,this._$bs=-1,this._$Do=-1,this._$sr=null,this._$sr=dt._$Gs++}function gt(){this.m=new Array(1,0,0,0,1,0,0,0,1)}function yt(t){At||et.prototype.constructor.call(this,t)}function mt(t){At||(E.prototype.constructor.call(this),this.textures=new Array,this.transform=null,this.gl=null,this.glno=t,this.firstDraw=!0,this.anisotropyExt=null,this.maxAnisotropy=0,this._$As=32,this._$Gr=!1,this._$NT=null,this._$vS=null,this._$no=null,this.vertShader=null,this.fragShader=null,this.vertShaderOff=null,this.fragShaderOff=null)}function Tt(t,i,e){return null==i&&(i=t.createBuffer()),t.bindBuffer(t.ARRAY_BUFFER,i),t.bufferData(t.ARRAY_BUFFER,e,t.DYNAMIC_DRAW),i}function Pt(t,i,e){return null==i&&(i=t.createBuffer()),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,i),t.bufferData(t.ELEMENT_ARRAY_BUFFER,e,t.DYNAMIC_DRAW),i}function St(t){At||(this._$P=new Int8Array(8),this._$R0=new DataView(this._$P.buffer),this._$3i=new Int8Array(1e3),this._$hL=0,this._$v0=0,this._$S2=0,this._$Ko=new Array,this._$T=t,this._$F=0)}function vt(){}function Lt(){}function Mt(t){At||(this._$e0=null,this._$IP=null,this._$Us=null,this._$7s=null,this._$IS=[!1],this._$VS=null,this._$AT=!0,this.baseOpacity=1,this.clipBufPre_clipContext=null,this._$e0=t)}function Et(){}var At=!0;i._$0s=1,i._$4s=2,i._$42=0,i._$62=function(t,e){try{if(e instanceof ArrayBuffer&&(e=new DataView(e)),!(e instanceof DataView))throw new lt(\"_$SS#loadModel(b) / b _$x be DataView or ArrayBuffer\");var r,o=new St(e),n=o._$ST(),s=o._$ST(),a=o._$ST();if(109!=n||111!=s||99!=a)throw new lt(\"_$gi _$C _$li , _$Q0 _$P0.\");if(r=o._$ST(),o._$gr(r),r>G._$T7){t._$NP|=i._$4s;throw new lt(\"_$gi _$C _$li , _$n0 _$_ version _$li ( SDK : \"+G._$T7+\" < _$f0 : \"+r+\" )@_$SS#loadModel()\\n\")}var h=o._$nP();if(r>=G._$s7){var l=o._$9T(),$=o._$9T();if(-30584!=l||-30584!=$)throw t._$NP|=i._$0s,new lt(\"_$gi _$C _$li , _$0 _$6 _$Ui.\")}t._$KS(h);var u=t.getModelContext();u.setDrawParam(t.getDrawParam()),u.init()}catch(t){_._$Rb(t)}},i.prototype._$KS=function(t){this._$MT=t},i.prototype.getModelImpl=function(){return null==this._$MT&&(this._$MT=new p,this._$MT._$zP()),this._$MT},i.prototype.getCanvasWidth=function(){return null==this._$MT?0:this._$MT.getCanvasWidth()},i.prototype.getCanvasHeight=function(){return null==this._$MT?0:this._$MT.getCanvasHeight()},i.prototype.getParamFloat=function(t){return\"number\"!=typeof t&&(t=this._$5S.getParamIndex(u.getID(t))),this._$5S.getParamFloat(t)},i.prototype.setParamFloat=function(t,i,e){\"number\"!=typeof t&&(t=this._$5S.getParamIndex(u.getID(t))),arguments.length<3&&(e=1),this._$5S.setParamFloat(t,this._$5S.getParamFloat(t)*(1-e)+i*e)},i.prototype.addToParamFloat=function(t,i,e){\"number\"!=typeof t&&(t=this._$5S.getParamIndex(u.getID(t))),arguments.length<3&&(e=1),this._$5S.setParamFloat(t,this._$5S.getParamFloat(t)+i*e)},i.prototype.multParamFloat=function(t,i,e){\"number\"!=typeof t&&(t=this._$5S.getParamIndex(u.getID(t))),arguments.length<3&&(e=1),this._$5S.setParamFloat(t,this._$5S.getParamFloat(t)*(1+(i-1)*e))},i.prototype.getParamIndex=function(t){return this._$5S.getParamIndex(u.getID(t))},i.prototype.loadParam=function(){this._$5S.loadParam()},i.prototype.saveParam=function(){this._$5S.saveParam()},i.prototype.init=function(){this._$5S.init()},i.prototype.update=function(){this._$5S.update()},i.prototype._$Rs=function(){return _._$li(\"_$60 _$PT _$Rs()\"),-1},i.prototype._$Ds=function(t){_._$li(\"_$60 _$PT _$SS#_$Ds() \\n\")},i.prototype._$K2=function(){},i.prototype.draw=function(){},i.prototype.getModelContext=function(){return this._$5S},i.prototype._$s2=function(){return this._$NP},i.prototype._$P7=function(t,i,e,r){var o=-1,n=0,s=this;if(0!=e)if(1==t.length){var _=t[0],a=0!=s.getParamFloat(_),h=i[0],l=s.getPartsOpacity(h),$=e/r;a?(l+=$)>1&&(l=1):(l-=$)<0&&(l=0),s.setPartsOpacity(h,l)}else{for(var u=0;u<t.length;u++){var _=t[u],p=0!=s.getParamFloat(_);if(p){if(o>=0)break;o=u;var h=i[u];n=s.getPartsOpacity(h),n+=e/r,n>1&&(n=1)}}o<0&&(console.log(\"No _$wi _$q0/ _$U default[%s]\",t[0]),o=0,n=1,s.loadParam(),s.setParamFloat(t[o],n),s.saveParam());for(var u=0;u<t.length;u++){var h=i[u];if(o==u)s.setPartsOpacity(h,n);else{var f,c=s.getPartsOpacity(h);f=n<.5?-.5*n/.5+1:.5*(1-n)/.5;var d=(1-f)*(1-n);d>.15&&(f=1-.15/(1-n)),c>f&&(c=f),s.setPartsOpacity(h,c)}}}else for(var u=0;u<t.length;u++){var _=t[u],h=i[u],p=0!=s.getParamFloat(_);s.setPartsOpacity(h,p?1:0)}},i.prototype.setPartsOpacity=function(t,i){\"number\"!=typeof t&&(t=this._$5S.getPartsDataIndex(l.getID(t))),this._$5S.setPartsOpacity(t,i)},i.prototype.getPartsDataIndex=function(t){return t instanceof l||(t=l.getID(t)),this._$5S.getPartsDataIndex(t)},i.prototype.getPartsOpacity=function(t){return\"number\"!=typeof t&&(t=this._$5S.getPartsDataIndex(l.getID(t))),t<0?0:this._$5S.getPartsOpacity(t)},i.prototype.getDrawParam=function(){},i.prototype.getDrawDataIndex=function(t){return this._$5S.getDrawDataIndex(b.getID(t))},i.prototype.getDrawData=function(t){return this._$5S.getDrawData(t)},i.prototype.getTransformedPoints=function(t){var i=this._$5S._$C2(t);return i instanceof ut?i.getTransformedPoints():null},i.prototype.getIndexArray=function(t){if(t<0||t>=this._$5S._$aS.length)return null;var i=this._$5S._$aS[t];return null!=i&&i.getType()==W._$wb&&i instanceof $t?i.getIndexArray():null},e.CHANNEL_COUNT=4,e.RENDER_TEXTURE_USE_MIPMAP=!1,e.NOT_USED_FRAME=-100,e.prototype._$L7=function(){if(this.tmpModelToViewMatrix&&(this.tmpModelToViewMatrix=null),this.tmpMatrix2&&(this.tmpMatrix2=null),this.tmpMatrixForMask&&(this.tmpMatrixForMask=null),this.tmpMatrixForDraw&&(this.tmpMatrixForDraw=null),this.tmpBoundsOnModel&&(this.tmpBoundsOnModel=null),this.CHANNEL_COLORS){for(var t=this.CHANNEL_COLORS.length-1;t>=0;--t)this.CHANNEL_COLORS.splice(t,1);this.CHANNEL_COLORS=[]}this.releaseShader()},e.prototype.releaseShader=function(){for(var t=at.frameBuffers.length,i=0;i<t;i++)this.gl.deleteFramebuffer(at.frameBuffers[i].framebuffer);at.frameBuffers=[],at.glContext=[]},e.prototype.init=function(t,i,e){for(var o=0;o<i.length;o++){var n=i[o].getClipIDList();if(null!=n){var s=this.findSameClip(n);null==s&&(s=new r(this,t,n),this.clipContextList.push(s));var _=i[o].getDrawDataID(),a=t.getDrawDataIndex(_);s.addClippedDrawData(_,a);e[o].clipBufPre_clipContext=s}}},e.prototype.getMaskRenderTexture=function(){var t=null;return t=this.dp_webgl.createFramebuffer(),at.frameBuffers[this.dp_webgl.glno]=t,this.dp_webgl.glno},e.prototype.setupClip=function(t,i){for(var e=0,r=0;r<this.clipContextList.length;r++){var o=this.clipContextList[r];this.calcClippedDrawTotalBounds(t,o),o.isUsing&&e++}if(e>0){var n=i.gl.getParameter(i.gl.FRAMEBUFFER_BINDING),s=new Array(4);s[0]=0,s[1]=0,s[2]=i.gl.canvas.width,s[3]=i.gl.canvas.height,i.gl.viewport(0,0,at.clippingMaskBufferSize,at.clippingMaskBufferSize),this.setupLayoutBounds(e),i.gl.bindFramebuffer(i.gl.FRAMEBUFFER,at.frameBuffers[this.curFrameNo].framebuffer),i.gl.clearColor(0,0,0,0),i.gl.clear(i.gl.COLOR_BUFFER_BIT);for(var r=0;r<this.clipContextList.length;r++){var o=this.clipContextList[r],_=o.allClippedDrawRect,a=(o.layoutChannelNo,o.layoutBounds);this.tmpBoundsOnModel._$jL(_),this.tmpBoundsOnModel.expand(.05*_.width,.05*_.height);var h=a.width/this.tmpBoundsOnModel.width,l=a.height/this.tmpBoundsOnModel.height;this.tmpMatrix2.identity(),this.tmpMatrix2.translate(-1,-1,0),this.tmpMatrix2.scale(2,2,1),this.tmpMatrix2.translate(a.x,a.y,0),this.tmpMatrix2.scale(h,l,1),this.tmpMatrix2.translate(-this.tmpBoundsOnModel.x,-this.tmpBoundsOnModel.y,0),this.tmpMatrixForMask.setMatrix(this.tmpMatrix2.m),this.tmpMatrix2.identity(),this.tmpMatrix2.translate(a.x,a.y,0),this.tmpMatrix2.scale(h,l,1),this.tmpMatrix2.translate(-this.tmpBoundsOnModel.x,-this.tmpBoundsOnModel.y,0),this.tmpMatrixForDraw.setMatrix(this.tmpMatrix2.m);for(var $=this.tmpMatrixForMask.getArray(),u=0;u<16;u++)o.matrixForMask[u]=$[u];for(var p=this.tmpMatrixForDraw.getArray(),u=0;u<16;u++)o.matrixForDraw[u]=p[u];for(var f=o.clippingMaskDrawIndexList.length,c=0;c<f;c++){var d=o.clippingMaskDrawIndexList[c],g=t.getDrawData(d),y=t._$C2(d);i.setClipBufPre_clipContextForMask(o),g.draw(i,t,y)}}i.gl.bindFramebuffer(i.gl.FRAMEBUFFER,n),i.setClipBufPre_clipContextForMask(null),i.gl.viewport(s[0],s[1],s[2],s[3])}},e.prototype.getColorBuffer=function(){return this.colorBuffer},e.prototype.findSameClip=function(t){for(var i=0;i<this.clipContextList.length;i++){var e=this.clipContextList[i],r=e.clipIDList.length;if(r==t.length){for(var o=0,n=0;n<r;n++)for(var s=e.clipIDList[n],_=0;_<r;_++)if(t[_]==s){o++;break}if(o==r)return e}}return null},e.prototype.calcClippedDrawTotalBounds=function(t,i){for(var e=t._$Ri.getModelImpl().getCanvasWidth(),r=t._$Ri.getModelImpl().getCanvasHeight(),o=e>r?e:r,n=o,s=o,_=0,a=0,h=i.clippedDrawContextList.length,l=0;l<h;l++){var $=i.clippedDrawContextList[l],u=$.drawDataIndex,p=t._$C2(u);if(p._$yo()){for(var f=p.getTransformedPoints(),c=f.length,d=[],g=[],y=0,m=U._$i2;m<c;m+=U._$No)d[y]=f[m],g[y]=f[m+1],y++;var T=Math.min.apply(null,d),P=Math.min.apply(null,g),S=Math.max.apply(null,d),v=Math.max.apply(null,g);T<n&&(n=T),P<s&&(s=P),S>_&&(_=S),v>a&&(a=v)}}if(n==o)i.allClippedDrawRect.x=0,i.allClippedDrawRect.y=0,i.allClippedDrawRect.width=0,i.allClippedDrawRect.height=0,i.isUsing=!1;else{var L=_-n,M=a-s;i.allClippedDrawRect.x=n,i.allClippedDrawRect.y=s,i.allClippedDrawRect.width=L,i.allClippedDrawRect.height=M,i.isUsing=!0}},e.prototype.setupLayoutBounds=function(t){var i=t/e.CHANNEL_COUNT,r=t%e.CHANNEL_COUNT;i=~~i,r=~~r;for(var o=0,n=0;n<e.CHANNEL_COUNT;n++){var s=i+(n<r?1:0);if(0==s);else if(1==s){var a=this.clipContextList[o++];a.layoutChannelNo=n,a.layoutBounds.x=0,a.layoutBounds.y=0,a.layoutBounds.width=1,a.layoutBounds.height=1}else if(2==s)for(var h=0;h<s;h++){var l=h%2,$=0;l=~~l;var a=this.clipContextList[o++];a.layoutChannelNo=n,a.layoutBounds.x=.5*l,a.layoutBounds.y=0,a.layoutBounds.width=.5,a.layoutBounds.height=1}else if(s<=4)for(var h=0;h<s;h++){var l=h%2,$=h/2;l=~~l,$=~~$;var a=this.clipContextList[o++];a.layoutChannelNo=n,a.layoutBounds.x=.5*l,a.layoutBounds.y=.5*$,a.layoutBounds.width=.5,a.layoutBounds.height=.5}else if(s<=9)for(var h=0;h<s;h++){var l=h%3,$=h/3;l=~~l,$=~~$;var a=this.clipContextList[o++];a.layoutChannelNo=n,a.layoutBounds.x=l/3,a.layoutBounds.y=$/3,a.layoutBounds.width=1/3,a.layoutBounds.height=1/3}else _._$li(\"_$6 _$0P mask count : %d\",s)}},r.prototype.addClippedDrawData=function(t,i){var e=new o(t,i);this.clippedDrawContextList.push(e)},s._$JT=function(t,i,e){var r=t/i,o=e/i,n=o,s=1-(1-o)*(1-o),_=1-(1-n)*(1-n),a=1/3*(1-o)*s+(n*(2/3)+1/3*(1-n))*(1-s),h=(n+2/3*(1-n))*_+(o*(1/3)+2/3*(1-o))*(1-_),l=1-3*h+3*a-0,$=3*h-6*a+0,u=3*a-0;if(r<=0)return 0;if(r>=1)return 1;var p=r,f=p*p;return l*(p*f)+$*f+u*p+0},s.prototype._$a0=function(){},s.prototype.setFadeIn=function(t){this._$dP=t},s.prototype.setFadeOut=function(t){this._$eo=t},s.prototype._$pT=function(t){this._$V0=t},s.prototype.getFadeOut=function(){return this._$eo},s.prototype._$4T=function(){return this._$eo},s.prototype._$mT=function(){return this._$V0},s.prototype.getDurationMSec=function(){return-1},s.prototype.getLoopDurationMSec=function(){return-1},s.prototype.updateParam=function(t,i){if(i._$AT&&!i._$9L){var e=w.getUserTimeMSec();if(i._$z2<0){i._$z2=e,i._$bs=e;var r=this.getDurationMSec();i._$Do<0&&(i._$Do=r<=0?-1:i._$z2+r)}var o=this._$V0;o=o*(0==this._$dP?1:ht._$r2((e-i._$bs)/this._$dP))*(0==this._$eo||i._$Do<0?1:ht._$r2((i._$Do-e)/this._$eo)),0<=o&&o<=1||console.log(\"### assert!! ### \"),this.updateParamExe(t,e,o,i),i._$Do>0&&i._$Do<e&&(i._$9L=!0)}},s.prototype.updateParamExe=function(t,i,e,r){},_._$8s=0,_._$fT=new Object,_.start=function(t){var i=_._$fT[t];null==i&&(i=new a,i._$r=t,_._$fT[t]=i),i._$0S=w.getSystemTimeMSec()},_.dump=function(t){var i=_._$fT[t];if(null!=i){var e=w.getSystemTimeMSec(),r=e-i._$0S;return console.log(t+\" : \"+r+\"ms\"),r}return-1},_.end=function(t){var i=_._$fT[t];if(null!=i){return w.getSystemTimeMSec()-i._$0S}return-1},_._$li=function(t,i){console.log(\"_$li : \"+t+\"\\n\",i)},_._$Ji=function(t,i){console.log(t,i)},_._$dL=function(t,i){console.log(t,i),console.log(\"\\n\")},_._$KL=function(t,i){for(var e=0;e<i;e++)e%16==0&&e>0?console.log(\"\\n\"):e%8==0&&e>0&&console.log(\"  \"),console.log(\"%02X \",255&t[e]);console.log(\"\\n\")},_._$nr=function(t,i,e){console.log(\"%s\\n\",t);for(var r=i.length,o=0;o<r;++o)console.log(\"%5d\",i[o]),console.log(\"%s\\n\",e),console.log(\",\");console.log(\"\\n\")},_._$Rb=function(t){console.log(\"dump exception : \"+t),console.log(\"stack :: \"+t.stack)},h.prototype._$8P=function(){return.5*(this.x+this.x+this.width)},h.prototype._$6P=function(){return.5*(this.y+this.y+this.height)},h.prototype._$EL=function(){return this.x+this.width},h.prototype._$5T=function(){return this.y+this.height},h.prototype._$jL=function(t,i,e,r){this.x=t,this.y=i,this.width=e,this.height=r},h.prototype._$jL=function(t){this.x=t.x,this.y=t.y,this.width=t.width,this.height=t.height},l.prototype=new et,l._$tP=new Object,l._$27=function(){l._$tP.clear()},l.getID=function(t){var i=l._$tP[t];return null==i&&(i=new l(t),l._$tP[t]=i),i},l.prototype._$3s=function(){return new l},u.prototype=new et,u._$tP=new Object,u._$27=function(){u._$tP.clear()},u.getID=function(t){var i=u._$tP[t];return null==i&&(i=new u(t),u._$tP[t]=i),i},u.prototype._$3s=function(){return new u},p._$42=0,p.prototype._$zP=function(){null==this._$vo&&(this._$vo=new ot),null==this._$F2&&(this._$F2=new Array)},p.prototype.getCanvasWidth=function(){return this._$ao},p.prototype.getCanvasHeight=function(){return this._$1S},p.prototype._$F0=function(t){this._$vo=t._$nP(),this._$F2=t._$nP(),this._$ao=t._$6L(),this._$1S=t._$6L()},p.prototype._$6S=function(t){this._$F2.push(t)},p.prototype._$Xr=function(){return this._$F2},p.prototype._$E2=function(){return this._$vo},f.prototype.setup=function(t,i,e){this._$ks=this._$Yb(),this.p2._$xT(),3==arguments.length&&(this._$Fo=t,this._$L2=i,this.p1._$p=e,this.p2._$p=e,this.p2.y=t,this.setup())},f.prototype.getPhysicsPoint1=function(){return this.p1},f.prototype.getPhysicsPoint2=function(){return this.p2},f.prototype._$qr=function(){return this._$Db},f.prototype._$pr=function(t){this._$Db=t},f.prototype._$5r=function(){return this._$M2},f.prototype._$Cs=function(){return this._$9b},f.prototype._$Yb=function(){return-180*Math.atan2(this.p1.x-this.p2.x,-(this.p1.y-this.p2.y))/Math.PI},f.prototype.addSrcParam=function(t,i,e,r){var o=new g(t,i,e,r);this._$lL.push(o)},f.prototype.addTargetParam=function(t,i,e,r){var o=new T(t,i,e,r);this._$qP.push(o)},f.prototype.update=function(t,i){if(0==this._$iP)return this._$iP=this._$iT=i,void(this._$Fo=Math.sqrt((this.p1.x-this.p2.x)*(this.p1.x-this.p2.x)+(this.p1.y-this.p2.y)*(this.p1.y-this.p2.y)));var e=(i-this._$iT)/1e3;if(0!=e){for(var r=this._$lL.length-1;r>=0;--r){this._$lL[r]._$oP(t,this)}this._$oo(t,e),this._$M2=this._$Yb(),this._$9b=(this._$M2-this._$ks)/e,this._$ks=this._$M2}for(var r=this._$qP.length-1;r>=0;--r){this._$qP[r]._$YS(t,this)}this._$iT=i},f.prototype._$oo=function(t,i){i<.033&&(i=.033);var e=1/i;this.p1.vx=(this.p1.x-this.p1._$s0)*e,this.p1.vy=(this.p1.y-this.p1._$70)*e,this.p1.ax=(this.p1.vx-this.p1._$7L)*e,this.p1.ay=(this.p1.vy-this.p1._$HL)*e,this.p1.fx=this.p1.ax*this.p1._$p,this.p1.fy=this.p1.ay*this.p1._$p,this.p1._$xT();var r,o,n=-Math.atan2(this.p1.y-this.p2.y,this.p1.x-this.p2.x),s=Math.cos(n),_=Math.sin(n),a=9.8*this.p2._$p,h=this._$Db*Lt._$bS,l=a*Math.cos(n-h);r=l*_,o=l*s;var $=-this.p1.fx*_*_,u=-this.p1.fy*_*s,p=-this.p2.vx*this._$L2,f=-this.p2.vy*this._$L2;this.p2.fx=r+$+p,this.p2.fy=o+u+f,this.p2.ax=this.p2.fx/this.p2._$p,this.p2.ay=this.p2.fy/this.p2._$p,this.p2.vx+=this.p2.ax*i,this.p2.vy+=this.p2.ay*i,this.p2.x+=this.p2.vx*i,this.p2.y+=this.p2.vy*i;var c=Math.sqrt((this.p1.x-this.p2.x)*(this.p1.x-this.p2.x)+(this.p1.y-this.p2.y)*(this.p1.y-this.p2.y));this.p2.x=this.p1.x+this._$Fo*(this.p2.x-this.p1.x)/c,this.p2.y=this.p1.y+this._$Fo*(this.p2.y-this.p1.y)/c,this.p2.vx=(this.p2.x-this.p2._$s0)*e,this.p2.vy=(this.p2.y-this.p2._$70)*e,this.p2._$xT()},c.prototype._$xT=function(){this._$s0=this.x,this._$70=this.y,this._$7L=this.vx,this._$HL=this.vy},d.prototype._$oP=function(t,i){},g.prototype=new d,g.prototype._$oP=function(t,i){var e=this.scale*t.getParamFloat(this._$wL),r=i.getPhysicsPoint1();switch(this._$tL){default:case f.Src.SRC_TO_X:r.x=r.x+(e-r.x)*this._$V0;break;case f.Src.SRC_TO_Y:r.y=r.y+(e-r.y)*this._$V0;break;case f.Src.SRC_TO_G_ANGLE:var o=i._$qr();o+=(e-o)*this._$V0,i._$pr(o)}},y.prototype._$YS=function(t,i){},T.prototype=new y,T.prototype._$YS=function(t,i){switch(this._$YP){default:case f.Target.TARGET_FROM_ANGLE:t.setParamFloat(this._$wL,this.scale*i._$5r(),this._$V0);break;case f.Target.TARGET_FROM_ANGLE_V:t.setParamFloat(this._$wL,this.scale*i._$Cs(),this._$V0)}},f.Src=function(){},f.Src.SRC_TO_X=\"SRC_TO_X\",f.Src.SRC_TO_Y=\"SRC_TO_Y\",f.Src.SRC_TO_G_ANGLE=\"SRC_TO_G_ANGLE\",f.Target=function(){},f.Target.TARGET_FROM_ANGLE=\"TARGET_FROM_ANGLE\",f.Target.TARGET_FROM_ANGLE_V=\"TARGET_FROM_ANGLE_V\",P.prototype.init=function(t){this._$fL=t._$fL,this._$gL=t._$gL,this._$B0=t._$B0,this._$z0=t._$z0,this._$qT=t._$qT,this.reflectX=t.reflectX,this.reflectY=t.reflectY},P.prototype._$F0=function(t){this._$fL=t._$_T(),this._$gL=t._$_T(),this._$B0=t._$_T(),this._$z0=t._$_T(),this._$qT=t._$_T(),t.getFormatVersion()>=G.LIVE2D_FORMAT_VERSION_V2_10_SDK2&&(this.reflectX=t._$po(),this.reflectY=t._$po())},P.prototype._$e=function(){};var It=function(){};It._$ni=function(t,i,e,r,o,n,s,_,a){var h=s*n-_*o;if(0==h)return null;var l,$=((t-e)*n-(i-r)*o)/h;return l=0!=o?(t-e-$*s)/o:(i-r-$*_)/n,isNaN(l)&&(l=(t-e-$*s)/o,isNaN(l)&&(l=(i-r-$*_)/n),isNaN(l)&&(console.log(\"a is NaN @UtVector#_$ni() \"),console.log(\"v1x : \"+o),console.log(\"v1x != 0 ? \"+(0!=o)))),null==a?new Array(l,$):(a[0]=l,a[1]=$,a)},S.prototype._$8P=function(){return this.x+.5*this.width},S.prototype._$6P=function(){return this.y+.5*this.height},S.prototype._$EL=function(){return this.x+this.width},S.prototype._$5T=function(){return this.y+this.height},S.prototype._$jL=function(t,i,e,r){this.x=t,this.y=i,this.width=e,this.height=r},S.prototype._$jL=function(t){this.x=t.x,this.y=t.y,this.width=t.width,this.height=t.height},S.prototype.contains=function(t,i){return this.x<=this.x&&this.y<=this.y&&this.x<=this.x+this.width&&this.y<=this.y+this.height},S.prototype.expand=function(t,i){this.x-=t,this.y-=i,this.width+=2*t,this.height+=2*i},v._$Z2=function(t,i,e,r){var o=i._$Q2(t,e),n=t._$vs(),s=t._$Tr();if(i._$zr(n,s,o),o<=0)return r[n[0]];if(1==o){var _=r[n[0]],a=r[n[1]],h=s[0];return _+(a-_)*h|0}if(2==o){var _=r[n[0]],a=r[n[1]],l=r[n[2]],$=r[n[3]],h=s[0],u=s[1],p=_+(a-_)*h|0,f=l+($-l)*h|0;return p+(f-p)*u|0}if(3==o){var c=r[n[0]],d=r[n[1]],g=r[n[2]],y=r[n[3]],m=r[n[4]],T=r[n[5]],P=r[n[6]],S=r[n[7]],h=s[0],u=s[1],v=s[2],_=c+(d-c)*h|0,a=g+(y-g)*h|0,l=m+(T-m)*h|0,$=P+(S-P)*h|0,p=_+(a-_)*u|0,f=l+($-l)*u|0;return p+(f-p)*v|0}if(4==o){var L=r[n[0]],M=r[n[1]],E=r[n[2]],A=r[n[3]],I=r[n[4]],w=r[n[5]],x=r[n[6]],O=r[n[7]],D=r[n[8]],R=r[n[9]],b=r[n[10]],F=r[n[11]],C=r[n[12]],N=r[n[13]],B=r[n[14]],U=r[n[15]],h=s[0],u=s[1],v=s[2],G=s[3],c=L+(M-L)*h|0,d=E+(A-E)*h|0,g=I+(w-I)*h|0,y=x+(O-x)*h|0,m=D+(R-D)*h|0,T=b+(F-b)*h|0,P=C+(N-C)*h|0,S=B+(U-B)*h|0,_=c+(d-c)*u|0,a=g+(y-g)*u|0,l=m+(T-m)*u|0,$=P+(S-P)*u|0,p=_+(a-_)*v|0,f=l+($-l)*v|0;return p+(f-p)*G|0}for(var Y=1<<o,k=new Float32Array(Y),V=0;V<Y;V++){for(var X=V,z=1,H=0;H<o;H++)z*=X%2==0?1-s[H]:s[H],X/=2;k[V]=z}for(var W=new Float32Array(Y),j=0;j<Y;j++)W[j]=r[n[j]];for(var q=0,j=0;j<Y;j++)q+=k[j]*W[j];return q+.5|0},v._$br=function(t,i,e,r){var o=i._$Q2(t,e),n=t._$vs(),s=t._$Tr();if(i._$zr(n,s,o),o<=0)return r[n[0]];if(1==o){var _=r[n[0]],a=r[n[1]],h=s[0];return _+(a-_)*h}if(2==o){var _=r[n[0]],a=r[n[1]],l=r[n[2]],$=r[n[3]],h=s[0],u=s[1];return(1-u)*(_+(a-_)*h)+u*(l+($-l)*h)}if(3==o){var p=r[n[0]],f=r[n[1]],c=r[n[2]],d=r[n[3]],g=r[n[4]],y=r[n[5]],m=r[n[6]],T=r[n[7]],h=s[0],u=s[1],P=s[2];return(1-P)*((1-u)*(p+(f-p)*h)+u*(c+(d-c)*h))+P*((1-u)*(g+(y-g)*h)+u*(m+(T-m)*h))}if(4==o){var S=r[n[0]],v=r[n[1]],L=r[n[2]],M=r[n[3]],E=r[n[4]],A=r[n[5]],I=r[n[6]],w=r[n[7]],x=r[n[8]],O=r[n[9]],D=r[n[10]],R=r[n[11]],b=r[n[12]],F=r[n[13]],C=r[n[14]],N=r[n[15]],h=s[0],u=s[1],P=s[2],B=s[3];return(1-B)*((1-P)*((1-u)*(S+(v-S)*h)+u*(L+(M-L)*h))+P*((1-u)*(E+(A-E)*h)+u*(I+(w-I)*h)))+B*((1-P)*((1-u)*(x+(O-x)*h)+u*(D+(R-D)*h))+P*((1-u)*(b+(F-b)*h)+u*(C+(N-C)*h)))}for(var U=1<<o,G=new Float32Array(U),Y=0;Y<U;Y++){for(var k=Y,V=1,X=0;X<o;X++)V*=k%2==0?1-s[X]:s[X],k/=2;G[Y]=V}for(var z=new Float32Array(U),H=0;H<U;H++)z[H]=r[n[H]];for(var W=0,H=0;H<U;H++)W+=G[H]*z[H];return W},v._$Vr=function(t,i,e,r,o,n,s,_){var a=i._$Q2(t,e),h=t._$vs(),l=t._$Tr();i._$zr(h,l,a);var $=2*r,u=s;if(a<=0){var p=h[0],f=o[p];if(2==_&&0==s)w._$jT(f,0,n,0,$);else for(var c=0;c<$;)n[u]=f[c++],n[u+1]=f[c++],u+=_}else if(1==a)for(var f=o[h[0]],d=o[h[1]],g=l[0],y=1-g,c=0;c<$;)n[u]=f[c]*y+d[c]*g,++c,n[u+1]=f[c]*y+d[c]*g,++c,u+=_;else if(2==a)for(var f=o[h[0]],d=o[h[1]],m=o[h[2]],T=o[h[3]],g=l[0],P=l[1],y=1-g,S=1-P,v=S*y,L=S*g,M=P*y,E=P*g,c=0;c<$;)n[u]=v*f[c]+L*d[c]+M*m[c]+E*T[c],++c,n[u+1]=v*f[c]+L*d[c]+M*m[c]+E*T[c],++c,u+=_;else if(3==a)for(var A=o[h[0]],I=o[h[1]],x=o[h[2]],O=o[h[3]],D=o[h[4]],R=o[h[5]],b=o[h[6]],F=o[h[7]],g=l[0],P=l[1],C=l[2],y=1-g,S=1-P,N=1-C,B=N*S*y,U=N*S*g,G=N*P*y,Y=N*P*g,k=C*S*y,V=C*S*g,X=C*P*y,z=C*P*g,c=0;c<$;)n[u]=B*A[c]+U*I[c]+G*x[c]+Y*O[c]+k*D[c]+V*R[c]+X*b[c]+z*F[c],++c,n[u+1]=B*A[c]+U*I[c]+G*x[c]+Y*O[c]+k*D[c]+V*R[c]+X*b[c]+z*F[c],++c,u+=_;else if(4==a)for(var H=o[h[0]],W=o[h[1]],j=o[h[2]],q=o[h[3]],J=o[h[4]],Q=o[h[5]],Z=o[h[6]],K=o[h[7]],tt=o[h[8]],it=o[h[9]],et=o[h[10]],rt=o[h[11]],ot=o[h[12]],nt=o[h[13]],st=o[h[14]],_t=o[h[15]],g=l[0],P=l[1],C=l[2],at=l[3],y=1-g,S=1-P,N=1-C,ht=1-at,lt=ht*N*S*y,$t=ht*N*S*g,ut=ht*N*P*y,pt=ht*N*P*g,ft=ht*C*S*y,ct=ht*C*S*g,dt=ht*C*P*y,gt=ht*C*P*g,yt=at*N*S*y,mt=at*N*S*g,Tt=at*N*P*y,Pt=at*N*P*g,St=at*C*S*y,vt=at*C*S*g,Lt=at*C*P*y,Mt=at*C*P*g,c=0;c<$;)n[u]=lt*H[c]+$t*W[c]+ut*j[c]+pt*q[c]+ft*J[c]+ct*Q[c]+dt*Z[c]+gt*K[c]+yt*tt[c]+mt*it[c]+Tt*et[c]+Pt*rt[c]+St*ot[c]+vt*nt[c]+Lt*st[c]+Mt*_t[c],++c,n[u+1]=lt*H[c]+$t*W[c]+ut*j[c]+pt*q[c]+ft*J[c]+ct*Q[c]+dt*Z[c]+gt*K[c]+yt*tt[c]+mt*it[c]+Tt*et[c]+Pt*rt[c]+St*ot[c]+vt*nt[c]+Lt*st[c]+Mt*_t[c],++c,u+=_;else{for(var Et=1<<a,At=new Float32Array(Et),It=0;It<Et;It++){for(var wt=It,xt=1,Ot=0;Ot<a;Ot++)xt*=wt%2==0?1-l[Ot]:l[Ot],wt/=2;At[It]=xt}for(var Dt=new Float32Array(Et),Rt=0;Rt<Et;Rt++)Dt[Rt]=o[h[Rt]];for(var c=0;c<$;){for(var bt=0,Ft=0,Ct=c+1,Rt=0;Rt<Et;Rt++)bt+=At[Rt]*Dt[Rt][c],Ft+=At[Rt]*Dt[Rt][Ct];c+=2,n[u]=bt,n[u+1]=Ft,u+=_}}},L.prototype._$HT=function(t,i){this.x=t,this.y=i},L.prototype._$HT=function(t){this.x=t.x,this.y=t.y},M._$ur=-2,M._$ES=500,M._$wb=2,M._$8S=3,M._$52=M._$ES,M._$R2=M._$ES,M._$or=function(){return M._$52},M._$Pr=function(){return M._$R2},M.prototype.convertClipIDForV2_11=function(t){var i=[];return null==t?null:0==t.length?null:/,/.test(t)?i=t.id.split(\",\"):(i.push(t.id),i)},M.prototype._$F0=function(t){this._$gP=t._$nP(),this._$dr=t._$nP(),this._$GS=t._$nP(),this._$qb=t._$6L(),this._$Lb=t._$cS(),this._$mS=t._$Tb(),t.getFormatVersion()>=G._$T7?(this.clipID=t._$nP(),this.clipIDList=this.convertClipIDForV2_11(this.clipID)):this.clipIDList=[],this._$MS(this._$Lb)},M.prototype.getClipIDList=function(){return this.clipIDList},M.prototype.init=function(t){},M.prototype._$Nr=function(t,i){if(i._$IS[0]=!1,i._$Us=v._$Z2(t,this._$GS,i._$IS,this._$Lb),at._$Zs);else if(i._$IS[0])return;i._$7s=v._$br(t,this._$GS,i._$IS,this._$mS)},M.prototype._$2b=function(t,i){},M.prototype.getDrawDataID=function(){return this._$gP},M.prototype._$j2=function(t){this._$gP=t},M.prototype.getOpacity=function(t,i){return i._$7s},M.prototype._$zS=function(t,i){return i._$Us},M.prototype._$MS=function(t){for(var i=t.length-1;i>=0;--i){var e=t[i];e<M._$52?M._$52=e:e>M._$R2&&(M._$R2=e)}},M.prototype.getTargetBaseDataID=function(){return this._$dr},M.prototype._$gs=function(t){this._$dr=t},M.prototype._$32=function(){return null!=this._$dr&&this._$dr!=yt._$2o()},M.prototype.preDraw=function(t,i,e){},M.prototype.draw=function(t,i,e){},M.prototype.getType=function(){},M.prototype._$B2=function(t,i,e){},E._$ps=32,E.CLIPPING_PROCESS_NONE=0,E.CLIPPING_PROCESS_OVERWRITE_ALPHA=1,E.CLIPPING_PROCESS_MULTIPLY_ALPHA=2,E.CLIPPING_PROCESS_DRAW=3,E.CLIPPING_PROCESS_CLEAR_ALPHA=4,E.prototype.setChannelFlagAsColor=function(t,i){this.CHANNEL_COLORS[t]=i},E.prototype.getChannelFlagAsColor=function(t){return this.CHANNEL_COLORS[t]},E.prototype._$ZT=function(){},E.prototype._$Uo=function(t,i,e,r,o,n,s){},E.prototype._$Rs=function(){return-1},E.prototype._$Ds=function(t){},E.prototype.setBaseColor=function(t,i,e,r){t<0?t=0:t>1&&(t=1),i<0?i=0:i>1&&(i=1),e<0?e=0:e>1&&(e=1),r<0?r=0:r>1&&(r=1),this._$lT=t,this._$C0=i,this._$tT=e,this._$WL=r},E.prototype._$WP=function(t){this.culling=t},E.prototype.setMatrix=function(t){for(var i=0;i<16;i++)this.matrix4x4[i]=t[i]},E.prototype._$IT=function(){return this.matrix4x4},E.prototype.setPremultipliedAlpha=function(t){this.premultipliedAlpha=t},E.prototype.isPremultipliedAlpha=function(){return this.premultipliedAlpha},E.prototype.setAnisotropy=function(t){this.anisotropy=t},E.prototype.getAnisotropy=function(){return this.anisotropy},E.prototype.getClippingProcess=function(){return this.clippingProcess},E.prototype.setClippingProcess=function(t){this.clippingProcess=t},E.prototype.setClipBufPre_clipContextForMask=function(t){this.clipBufPre_clipContextMask=t},E.prototype.getClipBufPre_clipContextMask=function(){return this.clipBufPre_clipContextMask},E.prototype.setClipBufPre_clipContextForDraw=function(t){this.clipBufPre_clipContextDraw=t},E.prototype.getClipBufPre_clipContextDraw=function(){return this.clipBufPre_clipContextDraw},I._$ur=-2,I._$c2=1,I._$_b=2,I.prototype._$F0=function(t){this._$kP=t._$nP(),this._$dr=t._$nP()},I.prototype.readV2_opacity=function(t){t.getFormatVersion()>=G.LIVE2D_FORMAT_VERSION_V2_10_SDK2&&(this._$mS=t._$Tb())},I.prototype.init=function(t){},I.prototype._$Nr=function(t,i){},I.prototype.interpolateOpacity=function(t,i,e,r){null==this._$mS?e.setInterpolatedOpacity(1):e.setInterpolatedOpacity(v._$br(t,i,r,this._$mS))},I.prototype._$2b=function(t,i){},I.prototype._$nb=function(t,i,e,r,o,n,s){},I.prototype.getType=function(){},I.prototype._$gs=function(t){this._$dr=t},I.prototype._$a2=function(t){this._$kP=t},I.prototype.getTargetBaseDataID=function(){return this._$dr},I.prototype.getBaseDataID=function(){return this._$kP},I.prototype._$32=function(){return null!=this._$dr&&this._$dr!=yt._$2o()},w._$W2=0,w._$CS=w._$W2,w._$Mo=function(){return!0},w._$XP=function(t){try{for(var i=getTimeMSec();getTimeMSec()-i<t;);}catch(t){t._$Rb()}},w.getUserTimeMSec=function(){return w._$CS==w._$W2?w.getSystemTimeMSec():w._$CS},w.setUserTimeMSec=function(t){w._$CS=t},w.updateUserTimeMSec=function(){return w._$CS=w.getSystemTimeMSec()},w.getTimeMSec=function(){return(new Date).getTime()},w.getSystemTimeMSec=function(){return(new Date).getTime()},w._$Q=function(t){},w._$jT=function(t,i,e,r,o){for(var n=0;n<o;n++)e[r+n]=t[i+n]},x._$ds=-2,x.prototype._$F0=function(t){this._$wL=t._$nP(),this._$VP=t._$6L(),this._$GP=t._$nP()},x.prototype.getParamIndex=function(t){return this._$2r!=t&&(this._$8o=x._$ds),this._$8o},x.prototype._$Pb=function(t,i){this._$8o=t,this._$2r=i},x.prototype.getParamID=function(){return this._$wL},x.prototype._$yP=function(t){this._$wL=t},x.prototype._$N2=function(){return this._$VP},x.prototype._$d2=function(){return this._$GP},x.prototype._$t2=function(t,i){this._$VP=t,this._$GP=i},x.prototype._$Lr=function(){return this._$O2},x.prototype._$wr=function(t){this._$O2=t},x.prototype._$SL=function(){return this._$ri},x.prototype._$AL=function(t){this._$ri=t},O.startsWith=function(t,i,e){var r=i+e.length;if(r>=t.length)return!1;for(var o=i;o<r;o++)if(O.getChar(t,o)!=e.charAt(o-i))return!1;return!0},O.getChar=function(t,i){return String.fromCharCode(t.getUint8(i))},O.createString=function(t,i,e){for(var r=new ArrayBuffer(2*e),o=new Uint16Array(r),n=0;n<e;n++)o[n]=t.getUint8(i+n);return String.fromCharCode.apply(null,o)},O._$LS=function(t,i,e,r){t instanceof ArrayBuffer&&(t=new DataView(t));var o=e,n=!1,s=!1,_=0,a=O.getChar(t,o);\"-\"==a&&(n=!0,o++);for(var h=!1;o<i;o++){switch(a=O.getChar(t,o)){case\"0\":_*=10;break;case\"1\":_=10*_+1;break;case\"2\":_=10*_+2;break;case\"3\":_=10*_+3;break;case\"4\":_=10*_+4;break;case\"5\":_=10*_+5;break;case\"6\":_=10*_+6;break;case\"7\":_=10*_+7;break;case\"8\":_=10*_+8;break;case\"9\":_=10*_+9;break;case\".\":s=!0,o++,h=!0;break;default:h=!0}if(h)break}if(s)for(var l=.1,$=!1;o<i;o++){switch(a=O.getChar(t,o)){case\"0\":break;case\"1\":_+=1*l;break;case\"2\":_+=2*l;break;case\"3\":_+=3*l;break;case\"4\":_+=4*l;break;case\"5\":_+=5*l;break;case\"6\":_+=6*l;break;case\"7\":_+=7*l;break;case\"8\":_+=8*l;break;case\"9\":_+=9*l;break;default:$=!0}if(l*=.1,$)break}return n&&(_=-_),r[0]=o,_},D.prototype._$zP=function(){this._$Ob=new Array},D.prototype._$F0=function(t){this._$Ob=t._$nP()},D.prototype._$Ur=function(t){if(t._$WS())return!0;for(var i=t._$v2(),e=this._$Ob.length-1;e>=0;--e){var r=this._$Ob[e].getParamIndex(i);if(r==x._$ds&&(r=t.getParamIndex(this._$Ob[e].getParamID())),t._$Xb(r))return!0}return!1},D.prototype._$Q2=function(t,i){for(var e,r,o=this._$Ob.length,n=t._$v2(),s=0,_=0;_<o;_++){var a=this._$Ob[_];if(e=a.getParamIndex(n),e==x._$ds&&(e=t.getParamIndex(a.getParamID()),a._$Pb(e,n)),e<0)throw new Exception(\"err 23242 : \"+a.getParamID());var h=e<0?0:t.getParamFloat(e);r=a._$N2();var l,$,u=a._$d2(),p=-1,f=0;if(r<1);else if(1==r)l=u[0],l-U._$J<h&&h<l+U._$J?(p=0,f=0):(p=0,i[0]=!0);else if(l=u[0],h<l-U._$J)p=0,i[0]=!0;else if(h<l+U._$J)p=0;else{for(var c=!1,d=1;d<r;++d){if($=u[d],h<$+U._$J){$-U._$J<h?p=d:(p=d-1,f=(h-l)/($-l),s++),c=!0;break}l=$}c||(p=r-1,f=0,i[0]=!0)}a._$wr(p),a._$AL(f)}return s},D.prototype._$zr=function(t,i,e){var r=1<<e;r+1>U._$Qb&&console.log(\"err 23245\\n\");for(var o=this._$Ob.length,n=1,s=1,_=0,a=0;a<r;++a)t[a]=0;for(var h=0;h<o;++h){var l=this._$Ob[h];if(0==l._$SL()){var $=l._$Lr()*n;if($<0&&at._$3T)throw new Exception(\"err 23246\");for(var a=0;a<r;++a)t[a]+=$}else{for(var $=n*l._$Lr(),u=n*(l._$Lr()+1),a=0;a<r;++a)t[a]+=(a/s|0)%2==0?$:u;i[_++]=l._$SL(),s*=2}n*=l._$N2()}t[r]=65535,i[_]=-1},D.prototype._$h2=function(t,i,e){for(var r=new Float32Array(i),o=0;o<i;++o)r[o]=e[o];var n=new x;n._$yP(t),n._$t2(i,r),this._$Ob.push(n)},D.prototype._$J2=function(t){for(var i=t,e=this._$Ob.length,r=0;r<e;++r){var o=this._$Ob[r],n=o._$N2(),s=i%o._$N2(),_=o._$d2()[s];console.log(\"%s[%d]=%7.2f / \",o.getParamID(),s,_),i/=n}console.log(\"\\n\")},D.prototype.getParamCount=function(){return this._$Ob.length},D.prototype._$zs=function(){return this._$Ob},R.prototype.identity=function(){for(var t=0;t<16;t++)this.m[t]=t%5==0?1:0},R.prototype.getArray=function(){return this.m},R.prototype.getCopyMatrix=function(){return new Float32Array(this.m)},R.prototype.setMatrix=function(t){if(null!=t&&16==t.length)for(var i=0;i<16;i++)this.m[i]=t[i]},R.prototype.mult=function(t,i,e){return null==i?null:(this==i?this.mult_safe(this.m,t.m,i.m,e):this.mult_fast(this.m,t.m,i.m,e),i)},R.prototype.mult_safe=function(t,i,e,r){if(t==e){var o=new Array(16);this.mult_fast(t,i,o,r);for(var n=15;n>=0;--n)e[n]=o[n]}else this.mult_fast(t,i,e,r)},R.prototype.mult_fast=function(t,i,e,r){r?(e[0]=t[0]*i[0]+t[4]*i[1]+t[8]*i[2],e[4]=t[0]*i[4]+t[4]*i[5]+t[8]*i[6],e[8]=t[0]*i[8]+t[4]*i[9]+t[8]*i[10],e[12]=t[0]*i[12]+t[4]*i[13]+t[8]*i[14]+t[12],e[1]=t[1]*i[0]+t[5]*i[1]+t[9]*i[2],e[5]=t[1]*i[4]+t[5]*i[5]+t[9]*i[6],e[9]=t[1]*i[8]+t[5]*i[9]+t[9]*i[10],e[13]=t[1]*i[12]+t[5]*i[13]+t[9]*i[14]+t[13],e[2]=t[2]*i[0]+t[6]*i[1]+t[10]*i[2],e[6]=t[2]*i[4]+t[6]*i[5]+t[10]*i[6],e[10]=t[2]*i[8]+t[6]*i[9]+t[10]*i[10],e[14]=t[2]*i[12]+t[6]*i[13]+t[10]*i[14]+t[14],e[3]=e[7]=e[11]=0,e[15]=1):(e[0]=t[0]*i[0]+t[4]*i[1]+t[8]*i[2]+t[12]*i[3],e[4]=t[0]*i[4]+t[4]*i[5]+t[8]*i[6]+t[12]*i[7],e[8]=t[0]*i[8]+t[4]*i[9]+t[8]*i[10]+t[12]*i[11],e[12]=t[0]*i[12]+t[4]*i[13]+t[8]*i[14]+t[12]*i[15],e[1]=t[1]*i[0]+t[5]*i[1]+t[9]*i[2]+t[13]*i[3],e[5]=t[1]*i[4]+t[5]*i[5]+t[9]*i[6]+t[13]*i[7],e[9]=t[1]*i[8]+t[5]*i[9]+t[9]*i[10]+t[13]*i[11],e[13]=t[1]*i[12]+t[5]*i[13]+t[9]*i[14]+t[13]*i[15],e[2]=t[2]*i[0]+t[6]*i[1]+t[10]*i[2]+t[14]*i[3],e[6]=t[2]*i[4]+t[6]*i[5]+t[10]*i[6]+t[14]*i[7],e[10]=t[2]*i[8]+t[6]*i[9]+t[10]*i[10]+t[14]*i[11],e[14]=t[2]*i[12]+t[6]*i[13]+t[10]*i[14]+t[14]*i[15],e[3]=t[3]*i[0]+t[7]*i[1]+t[11]*i[2]+t[15]*i[3],e[7]=t[3]*i[4]+t[7]*i[5]+t[11]*i[6]+t[15]*i[7],e[11]=t[3]*i[8]+t[7]*i[9]+t[11]*i[10]+t[15]*i[11],e[15]=t[3]*i[12]+t[7]*i[13]+t[11]*i[14]+t[15]*i[15])},R.prototype.translate=function(t,i,e){this.m[12]=this.m[0]*t+this.m[4]*i+this.m[8]*e+this.m[12],this.m[13]=this.m[1]*t+this.m[5]*i+this.m[9]*e+this.m[13],this.m[14]=this.m[2]*t+this.m[6]*i+this.m[10]*e+this.m[14],this.m[15]=this.m[3]*t+this.m[7]*i+this.m[11]*e+this.m[15]},R.prototype.scale=function(t,i,e){this.m[0]*=t,this.m[4]*=i,this.m[8]*=e,this.m[1]*=t,this.m[5]*=i,this.m[9]*=e,this.m[2]*=t,this.m[6]*=i,this.m[10]*=e,this.m[3]*=t,this.m[7]*=i,this.m[11]*=e},R.prototype.rotateX=function(t){var i=Lt.fcos(t),e=Lt._$9(t),r=this.m[4];this.m[4]=r*i+this.m[8]*e,this.m[8]=r*-e+this.m[8]*i,r=this.m[5],this.m[5]=r*i+this.m[9]*e,this.m[9]=r*-e+this.m[9]*i,r=this.m[6],this.m[6]=r*i+this.m[10]*e,this.m[10]=r*-e+this.m[10]*i,r=this.m[7],this.m[7]=r*i+this.m[11]*e,this.m[11]=r*-e+this.m[11]*i},R.prototype.rotateY=function(t){var i=Lt.fcos(t),e=Lt._$9(t),r=this.m[0];this.m[0]=r*i+this.m[8]*-e,this.m[8]=r*e+this.m[8]*i,r=this.m[1],this.m[1]=r*i+this.m[9]*-e,this.m[9]=r*e+this.m[9]*i,r=m[2],this.m[2]=r*i+this.m[10]*-e,this.m[10]=r*e+this.m[10]*i,r=m[3],this.m[3]=r*i+this.m[11]*-e,this.m[11]=r*e+this.m[11]*i},R.prototype.rotateZ=function(t){var i=Lt.fcos(t),e=Lt._$9(t),r=this.m[0];this.m[0]=r*i+this.m[4]*e,this.m[4]=r*-e+this.m[4]*i,r=this.m[1],this.m[1]=r*i+this.m[5]*e,this.m[5]=r*-e+this.m[5]*i,r=this.m[2],this.m[2]=r*i+this.m[6]*e,this.m[6]=r*-e+this.m[6]*i,r=this.m[3],this.m[3]=r*i+this.m[7]*e,this.m[7]=r*-e+this.m[7]*i},b.prototype=new et,b._$tP=new Object,b._$27=function(){b._$tP.clear()},b.getID=function(t){var i=b._$tP[t];return null==i&&(i=new b(t),b._$tP[t]=i),i},b.prototype._$3s=function(){return new b},F._$kS=-1,F._$pS=0,F._$hb=1,F.STATE_IDENTITY=0,F._$gb=1,F._$fo=2,F._$go=4,F.prototype.transform=function(t,i,e){var r,o,n,s,_,a,h=0,l=0;switch(this._$hi){default:return;case F._$go|F._$fo|F._$gb:for(r=this._$7,o=this._$H,n=this._$k,s=this._$f,_=this._$g,a=this._$w;--e>=0;){var $=t[h++],u=t[h++];i[l++]=r*$+o*u+n,i[l++]=s*$+_*u+a}return;case F._$go|F._$fo:for(r=this._$7,o=this._$H,s=this._$f,_=this._$g;--e>=0;){var $=t[h++],u=t[h++];i[l++]=r*$+o*u,i[l++]=s*$+_*u}return;case F._$go|F._$gb:for(o=this._$H,n=this._$k,s=this._$f,a=this._$w;--e>=0;){var $=t[h++];i[l++]=o*t[h++]+n,i[l++]=s*$+a}return;case F._$go:for(o=this._$H,s=this._$f;--e>=0;){var $=t[h++];i[l++]=o*t[h++],i[l++]=s*$}return;case F._$fo|F._$gb:for(r=this._$7,n=this._$k,_=this._$g,a=this._$w;--e>=0;)i[l++]=r*t[h++]+n,i[l++]=_*t[h++]+a;return;case F._$fo:for(r=this._$7,_=this._$g;--e>=0;)i[l++]=r*t[h++],i[l++]=_*t[h++];return;case F._$gb:for(n=this._$k,a=this._$w;--e>=0;)i[l++]=t[h++]+n,i[l++]=t[h++]+a;return;case F.STATE_IDENTITY:return void(t==i&&h==l||w._$jT(t,h,i,l,2*e))}},F.prototype.update=function(){0==this._$H&&0==this._$f?1==this._$7&&1==this._$g?0==this._$k&&0==this._$w?(this._$hi=F.STATE_IDENTITY,this._$Z=F._$pS):(this._$hi=F._$gb,this._$Z=F._$hb):0==this._$k&&0==this._$w?(this._$hi=F._$fo,this._$Z=F._$kS):(this._$hi=F._$fo|F._$gb,this._$Z=F._$kS):0==this._$7&&0==this._$g?0==this._$k&&0==this._$w?(this._$hi=F._$go,this._$Z=F._$kS):(this._$hi=F._$go|F._$gb,this._$Z=F._$kS):0==this._$k&&0==this._$w?(this._$hi=F._$go|F._$fo,this._$Z=F._$kS):(this._$hi=F._$go|F._$fo|F._$gb,this._$Z=F._$kS)},F.prototype._$RT=function(t){this._$IT(t);var i=t[0],e=t[2],r=t[1],o=t[3],n=Math.sqrt(i*i+r*r),s=i*o-e*r;0==n?at._$so&&console.log(\"affine._$RT() / rt==0\"):(t[0]=n,t[1]=s/n,t[2]=(r*o+i*e)/s,t[3]=Math.atan2(r,i))},F.prototype._$ho=function(t,i,e,r){var o=new Float32Array(6),n=new Float32Array(6);t._$RT(o),i._$RT(n);var s=new Float32Array(6);s[0]=o[0]+(n[0]-o[0])*e,s[1]=o[1]+(n[1]-o[1])*e,s[2]=o[2]+(n[2]-o[2])*e,s[3]=o[3]+(n[3]-o[3])*e,s[4]=o[4]+(n[4]-o[4])*e,s[5]=o[5]+(n[5]-o[5])*e,r._$CT(s)},F.prototype._$CT=function(t){var i=Math.cos(t[3]),e=Math.sin(t[3]);this._$7=t[0]*i,this._$f=t[0]*e,this._$H=t[1]*(t[2]*i-e),this._$g=t[1]*(t[2]*e+i),this._$k=t[4],this._$w=t[5],this.update()},F.prototype._$IT=function(t){t[0]=this._$7,t[1]=this._$f,t[2]=this._$H,t[3]=this._$g,t[4]=this._$k,t[5]=this._$w},C.prototype=new s,C._$cs=\"VISIBLE:\",C._$ar=\"LAYOUT:\",C._$Co=0,C._$D2=[],C._$1T=1,C.loadMotion=function(t){var i=new C,e=[0],r=t.length;i._$yT=0;for(var o=0;o<r;++o){var n=255&t[o];if(\"\\n\"!=n&&\"\\r\"!=n)if(\"#\"!=n)if(\"$\"!=n){if(\"a\"<=n&&n<=\"z\"||\"A\"<=n&&n<=\"Z\"||\"_\"==n){for(var s=o,_=-1;o<r&&(\"\\r\"!=(n=255&t[o])&&\"\\n\"!=n);++o)if(\"=\"==n){_=o;break}if(_>=0){var a=new B;O.startsWith(t,s,C._$cs)?(a._$RP=B._$hs,a._$4P=new String(t,s,_-s)):O.startsWith(t,s,C._$ar)?(a._$4P=new String(t,s+7,_-s-7),O.startsWith(t,s+7,\"ANCHOR_X\")?a._$RP=B._$xs:O.startsWith(t,s+7,\"ANCHOR_Y\")?a._$RP=B._$us:O.startsWith(t,s+7,\"SCALE_X\")?a._$RP=B._$qs:O.startsWith(t,s+7,\"SCALE_Y\")?a._$RP=B._$Ys:O.startsWith(t,s+7,\"X\")?a._$RP=B._$ws:O.startsWith(t,s+7,\"Y\")&&(a._$RP=B._$Ns)):(a._$RP=B._$Fr,a._$4P=new String(t,s,_-s)),i.motions.push(a);var h=0;for(C._$D2.clear(),o=_+1;o<r&&(\"\\r\"!=(n=255&t[o])&&\"\\n\"!=n);++o)if(\",\"!=n&&\" \"!=n&&\"\\t\"!=n){var l=O._$LS(t,r,o,e);if(e[0]>0){C._$D2.push(l),h++;var $=e[0];if($<o){console.log(\"_$n0 _$hi . @Live2DMotion loadMotion()\\n\");break}o=$}}a._$I0=C._$D2._$BL(),h>i._$yT&&(i._$yT=h)}}}else{for(var s=o,_=-1;o<r&&(\"\\r\"!=(n=255&t[o])&&\"\\n\"!=n);++o)if(\"=\"==n){_=o;break}var u=!1;if(_>=0)for(_==s+4&&\"f\"==t[s+1]&&\"p\"==t[s+2]&&\"s\"==t[s+3]&&(u=!0),o=_+1;o<r&&(\"\\r\"!=(n=255&t[o])&&\"\\n\"!=n);++o)if(\",\"!=n&&\" \"!=n&&\"\\t\"!=n){var l=O._$LS(t,r,o,e);e[0]>0&&u&&5<l&&l<121&&(i._$D0=l),o=e[0]}for(;o<r&&(\"\\n\"!=t[o]&&\"\\r\"!=t[o]);++o);}else for(;o<r&&(\"\\n\"!=t[o]&&\"\\r\"!=t[o]);++o);}return i._$AS=1e3*i._$yT/i._$D0|0,i},C.prototype.getDurationMSec=function(){return this._$AS},C.prototype.dump=function(){for(var t=0;t<this.motions.length;t++){var i=this.motions[t];console.log(\"_$wL[%s] [%d]. \",i._$4P,i._$I0.length);for(var e=0;e<i._$I0.length&&e<10;e++)console.log(\"%5.2f ,\",i._$I0[e]);console.log(\"\\n\")}},C.prototype.updateParamExe=function(t,i,e,r){for(var o=i-r._$z2,n=o*this._$D0/1e3,s=0|n,_=n-s,a=0;a<this.motions.length;a++){var h=this.motions[a],l=h._$I0.length,$=h._$4P;if(h._$RP==B._$hs){var u=h._$I0[s>=l?l-1:s];t.setParamFloat($,u)}else if(B._$ws<=h._$RP&&h._$RP<=B._$Ys);else{var p=t.getParamFloat($),f=h._$I0[s>=l?l-1:s],c=h._$I0[s+1>=l?l-1:s+1],d=f+(c-f)*_,g=p+(d-p)*e;t.setParamFloat($,g)}}s>=this._$yT&&(this._$E?(r._$z2=i,this.loopFadeIn&&(r._$bs=i)):r._$9L=!0)},C.prototype._$r0=function(){return this._$E},C.prototype._$aL=function(t){this._$E=t},C.prototype.isLoopFadeIn=function(){return this.loopFadeIn},C.prototype.setLoopFadeIn=function(t){this.loopFadeIn=t},N.prototype.clear=function(){this.size=0},N.prototype.add=function(t){if(this._$P.length<=this.size){var i=new Float32Array(2*this.size);w._$jT(this._$P,0,i,0,this.size),this._$P=i}this._$P[this.size++]=t},N.prototype._$BL=function(){var t=new Float32Array(this.size);return w._$jT(this._$P,0,t,0,this.size),t},B._$Fr=0,B._$hs=1,B._$ws=100,B._$Ns=101,B._$xs=102,B._$us=103,B._$qs=104,B._$Ys=105,U._$Ms=1,U._$Qs=2,U._$i2=0,U._$No=2,U._$do=U._$Ms,U._$Ls=!0,U._$1r=5,U._$Qb=65,U._$J=1e-4,U._$FT=.001,U._$Ss=3,G._$o7=6,G._$S7=7,G._$s7=8,G._$77=9,G.LIVE2D_FORMAT_VERSION_V2_10_SDK2=10,G.LIVE2D_FORMAT_VERSION_V2_11_SDK2_1=11,G._$T7=G.LIVE2D_FORMAT_VERSION_V2_11_SDK2_1,G._$Is=-2004318072,G._$h0=0,G._$4L=23,G._$7P=33,G._$uT=function(t){console.log(\"_$bo :: _$6 _$mo _$E0 : %d\\n\",t)},G._$9o=function(t){if(t<40)return G._$uT(t),null;if(t<50)return G._$uT(t),null;if(t<60)return G._$uT(t),null;if(t<100)switch(t){case 65:return new Z;case 66:return new D;case 67:return new x;case 68:return new z;case 69:return new P;case 70:return new $t;default:return G._$uT(t),null}else if(t<150)switch(t){case 131:return new st;case 133:return new tt;case 136:return new p;case 137:return new ot;case 142:return new j}return G._$uT(t),null},Y._$HP=0,Y._$_0=!0;Y._$V2=-1,Y._$W0=-1,Y._$jr=!1,Y._$ZS=!0,Y._$tr=-1e6,Y._$lr=1e6,Y._$is=32,Y._$e=!1,Y.prototype.getDrawDataIndex=function(t){for(var i=this._$aS.length-1;i>=0;--i)if(null!=this._$aS[i]&&this._$aS[i].getDrawDataID()==t)return i;return-1},Y.prototype.getDrawData=function(t){if(t instanceof b){if(null==this._$Bo){this._$Bo=new Object;for(var i=this._$aS.length,e=0;e<i;e++){var r=this._$aS[e],o=r.getDrawDataID();null!=o&&(this._$Bo[o]=r)}}return this._$Bo[id]}return t<this._$aS.length?this._$aS[t]:null},Y.prototype.release=function(){this._$3S.clear(),this._$aS.clear(),this._$F2.clear(),null!=this._$Bo&&this._$Bo.clear(),this._$db.clear(),this._$8b.clear(),this._$Hr.clear()},Y.prototype.init=function(){this._$co++,this._$F2.length>0&&this.release();for(var t=this._$Ri.getModelImpl(),i=t._$Xr(),r=i.length,o=new Array,n=new Array,s=0;s<r;++s){var _=i[s];this._$F2.push(_),this._$Hr.push(_.init(this));for(var a=_.getBaseData(),h=a.length,l=0;l<h;++l)o.push(a[l]);for(var l=0;l<h;++l){var $=a[l].init(this);$._$l2(s),n.push($)}for(var u=_.getDrawData(),p=u.length,l=0;l<p;++l){var f=u[l],c=f.init(this);c._$IP=s,this._$aS.push(f),this._$8b.push(c)}}for(var d=o.length,g=yt._$2o();;){for(var y=!1,s=0;s<d;++s){var m=o[s];if(null!=m){var T=m.getTargetBaseDataID();(null==T||T==g||this.getBaseDataIndex(T)>=0)&&(this._$3S.push(m),this._$db.push(n[s]),o[s]=null,y=!0)}}if(!y)break}var P=t._$E2();if(null!=P){var S=P._$1s();if(null!=S)for(var v=S.length,s=0;s<v;++s){var L=S[s];null!=L&&this._$02(L.getParamID(),L.getDefaultValue(),L.getMinValue(),L.getMaxValue())}}this.clipManager=new e(this.dp_webgl),this.clipManager.init(this,this._$aS,this._$8b),this._$QT=!0},Y.prototype.update=function(){Y._$e&&_.start(\"_$zL\");for(var t=this._$_2.length,i=0;i<t;i++)this._$_2[i]!=this._$vr[i]&&(this._$Js[i]=Y._$ZS,this._$vr[i]=this._$_2[i]);var e=this._$3S.length,r=this._$aS.length,o=W._$or(),n=W._$Pr(),s=n-o+1;(null==this._$Ws||this._$Ws.length<s)&&(this._$Ws=new Int16Array(s),this._$Vs=new Int16Array(s));for(var i=0;i<s;i++)this._$Ws[i]=Y._$V2,this._$Vs[i]=Y._$V2;(null==this._$Er||this._$Er.length<r)&&(this._$Er=new Int16Array(r));for(var i=0;i<r;i++)this._$Er[i]=Y._$W0;Y._$e&&_.dump(\"_$zL\"),Y._$e&&_.start(\"_$UL\");for(var a=null,h=0;h<e;++h){var l=this._$3S[h],$=this._$db[h];try{l._$Nr(this,$),l._$2b(this,$)}catch(t){null==a&&(a=t)}}null!=a&&Y._$_0&&_._$Rb(a),Y._$e&&_.dump(\"_$UL\"),Y._$e&&_.start(\"_$DL\");for(var u=null,p=0;p<r;++p){var f=this._$aS[p],c=this._$8b[p];try{if(f._$Nr(this,c),c._$u2())continue;f._$2b(this,c);var d,g=Math.floor(f._$zS(this,c)-o);try{d=this._$Vs[g]}catch(t){console.log(\"_$li :: %s / %s \\t\\t\\t\\t@@_$fS\\n\",t.toString(),f.getDrawDataID().toString()),g=Math.floor(f._$zS(this,c)-o);continue}d==Y._$V2?this._$Ws[g]=p:this._$Er[d]=p,this._$Vs[g]=p}catch(t){null==u&&(u=t,at._$sT(at._$H7))}}null!=u&&Y._$_0&&_._$Rb(u),Y._$e&&_.dump(\"_$DL\"),Y._$e&&_.start(\"_$eL\");for(var i=this._$Js.length-1;i>=0;i--)this._$Js[i]=Y._$jr;return this._$QT=!1,Y._$e&&_.dump(\"_$eL\"),!1},Y.prototype.preDraw=function(t){null!=this.clipManager&&(t._$ZT(),this.clipManager.setupClip(this,t))},Y.prototype.draw=function(t){if(null==this._$Ws)return void _._$li(\"call _$Ri.update() before _$Ri.draw() \");var i=this._$Ws.length;t._$ZT();for(var e=0;e<i;++e){var r=this._$Ws[e];if(r!=Y._$V2)for(;;){var o=this._$aS[r],n=this._$8b[r];if(n._$yo()){var s=n._$IP,a=this._$Hr[s];n._$VS=a.getPartsOpacity(),o.draw(t,this,n)}var h=this._$Er[r];if(h<=r||h==Y._$W0)break;r=h}}},Y.prototype.getParamIndex=function(t){for(var i=this._$pb.length-1;i>=0;--i)if(this._$pb[i]==t)return i;return this._$02(t,0,Y._$tr,Y._$lr)},Y.prototype._$BS=function(t){return this.getBaseDataIndex(t)},Y.prototype.getBaseDataIndex=function(t){for(var i=this._$3S.length-1;i>=0;--i)if(null!=this._$3S[i]&&this._$3S[i].getBaseDataID()==t)return i;return-1},Y.prototype._$UT=function(t,i){var e=new Float32Array(i);return w._$jT(t,0,e,0,t.length),e},Y.prototype._$02=function(t,i,e,r){if(this._$qo>=this._$pb.length){var o=this._$pb.length,n=new Array(2*o);w._$jT(this._$pb,0,n,0,o),this._$pb=n,this._$_2=this._$UT(this._$_2,2*o),this._$vr=this._$UT(this._$vr,2*o),this._$Rr=this._$UT(this._$Rr,2*o),this._$Or=this._$UT(this._$Or,2*o);var s=new Array;w._$jT(this._$Js,0,s,0,o),this._$Js=s}return this._$pb[this._$qo]=t,this._$_2[this._$qo]=i,this._$vr[this._$qo]=i,this._$Rr[this._$qo]=e,this._$Or[this._$qo]=r,this._$Js[this._$qo]=Y._$ZS,this._$qo++},Y.prototype._$Zo=function(t,i){this._$3S[t]=i},Y.prototype.setParamFloat=function(t,i){i<this._$Rr[t]&&(i=this._$Rr[t]),i>this._$Or[t]&&(i=this._$Or[t]),this._$_2[t]=i},Y.prototype.loadParam=function(){var t=this._$_2.length;t>this._$fs.length&&(t=this._$fs.length),w._$jT(this._$fs,0,this._$_2,0,t)},Y.prototype.saveParam=function(){var t=this._$_2.length;t>this._$fs.length&&(this._$fs=new Float32Array(t)),w._$jT(this._$_2,0,this._$fs,0,t)},Y.prototype._$v2=function(){return this._$co},Y.prototype._$WS=function(){return this._$QT},Y.prototype._$Xb=function(t){return this._$Js[t]==Y._$ZS},Y.prototype._$vs=function(){return this._$Es},Y.prototype._$Tr=function(){return this._$ZP},Y.prototype.getBaseData=function(t){return this._$3S[t]},Y.prototype.getParamFloat=function(t){return this._$_2[t]},Y.prototype.getParamMax=function(t){return this._$Or[t]},Y.prototype.getParamMin=function(t){return this._$Rr[t]},Y.prototype.setPartsOpacity=function(t,i){this._$Hr[t].setPartsOpacity(i)},Y.prototype.getPartsOpacity=function(t){return this._$Hr[t].getPartsOpacity()},Y.prototype.getPartsDataIndex=function(t){for(var i=this._$F2.length-1;i>=0;--i)if(null!=this._$F2[i]&&this._$F2[i]._$p2()==t)return i;return-1},Y.prototype._$q2=function(t){return this._$db[t]},Y.prototype._$C2=function(t){return this._$8b[t]},Y.prototype._$Bb=function(t){return this._$Hr[t]},Y.prototype._$5s=function(t,i){for(var e=this._$Ws.length,r=t,o=0;o<e;++o){var n=this._$Ws[o];if(n!=Y._$V2)for(;;){var s=this._$8b[n];s._$yo()&&(s._$GT()._$B2(this,s,r),r+=i);var _=this._$Er[n];if(_<=n||_==Y._$W0)break;n=_}}},Y.prototype.setDrawParam=function(t){this.dp_webgl=t},Y.prototype.getDrawParam=function(){return this.dp_webgl},k._$0T=function(t){return k._$0T(new _$5(t))},k._$0T=function(t){if(!t.exists())throw new _$ls(t._$3b());for(var i,e=t.length(),r=new Int8Array(e),o=new _$Xs(new _$kb(t),8192),n=0;(i=o.read(r,n,e-n))>0;)n+=i;return r},k._$C=function(t){var i=null,e=null;try{i=t instanceof Array?t:new _$Xs(t,8192),e=new _$js;for(var r,o=new Int8Array(1e3);(r=i.read(o))>0;)e.write(o,0,r);return e._$TS()}finally{null!=t&&t.close(),null!=e&&(e.flush(),e.close())}},V.prototype._$T2=function(){return w.getUserTimeMSec()+Math._$10()*(2*this._$Br-1)},V.prototype._$uo=function(t){this._$Br=t},V.prototype._$QS=function(t,i,e){this._$Dr=t,this._$Cb=i,this._$mr=e},V.prototype._$7T=function(t){var i,e=w.getUserTimeMSec(),r=0;switch(this._$_L){case STATE_CLOSING:r=(e-this._$bb)/this._$Dr,r>=1&&(r=1,this._$_L=wt.STATE_CLOSED,this._$bb=e),i=1-r;break;case STATE_CLOSED:r=(e-this._$bb)/this._$Cb,r>=1&&(this._$_L=wt.STATE_OPENING,this._$bb=e),i=0;break;case STATE_OPENING:r=(e-this._$bb)/this._$mr,r>=1&&(r=1,this._$_L=wt.STATE_INTERVAL,this._$12=this._$T2()),i=r;break;case STATE_INTERVAL:this._$12<e&&(this._$_L=wt.STATE_CLOSING,this._$bb=e),i=1;break;case STATE_FIRST:default:this._$_L=wt.STATE_INTERVAL,this._$12=this._$T2(),i=1}this._$jo||(i=-i),t.setParamFloat(this._$iL,i),t.setParamFloat(this._$0L,i)};var wt=function(){};wt.STATE_FIRST=\"STATE_FIRST\",wt.STATE_INTERVAL=\"STATE_INTERVAL\",wt.STATE_CLOSING=\"STATE_CLOSING\",wt.STATE_CLOSED=\"STATE_CLOSED\",wt.STATE_OPENING=\"STATE_OPENING\",X.prototype=new E,X._$As=32,X._$Gr=!1,X._$NT=null,X._$vS=null,X._$no=null,X._$9r=function(t){return new Float32Array(t)},X._$vb=function(t){return new Int16Array(t)},X._$cr=function(t,i){return null==t||t._$yL()<i.length?(t=X._$9r(2*i.length),t.put(i),t._$oT(0)):(t.clear(),t.put(i),t._$oT(0)),t},X._$mb=function(t,i){return null==t||t._$yL()<i.length?(t=X._$vb(2*i.length),t.put(i),t._$oT(0)):(t.clear(),t.put(i),t._$oT(0)),t},X._$Hs=function(){return X._$Gr},X._$as=function(t){X._$Gr=t},X.prototype.setGL=function(t){this.gl=t},X.prototype.setTransform=function(t){this.transform=t},X.prototype._$ZT=function(){},X.prototype._$Uo=function(t,i,e,r,o,n,s,_){if(!(n<.01)){var a=this._$U2[t],h=n>.9?at.EXPAND_W:0;this.gl.drawElements(a,e,r,o,n,h,this.transform,_)}},X.prototype._$Rs=function(){throw new Error(\"_$Rs\")},X.prototype._$Ds=function(t){throw new Error(\"_$Ds\")},X.prototype._$K2=function(){for(var t=0;t<this._$sb.length;t++){0!=this._$sb[t]&&(this.gl._$Sr(1,this._$sb,t),this._$sb[t]=0)}},X.prototype.setTexture=function(t,i){this._$sb.length<t+1&&this._$nS(t),this._$sb[t]=i},X.prototype.setTexture=function(t,i){this._$sb.length<t+1&&this._$nS(t),this._$U2[t]=i},X.prototype._$nS=function(t){var i=Math.max(2*this._$sb.length,t+1+10),e=new Int32Array(i);w._$jT(this._$sb,0,e,0,this._$sb.length),this._$sb=e;var r=new Array;w._$jT(this._$U2,0,r,0,this._$U2.length),this._$U2=r},z.prototype=new I,z._$Xo=new Float32Array(2),z._$io=new Float32Array(2),z._$0o=new Float32Array(2),z._$Lo=new Float32Array(2),z._$To=new Float32Array(2),z._$Po=new Float32Array(2),z._$gT=new Array,z.prototype._$zP=function(){this._$GS=new D,this._$GS._$zP(),this._$Y0=new Array},z.prototype.getType=function(){return I._$c2},z.prototype._$F0=function(t){I.prototype._$F0.call(this,t),this._$GS=t._$nP(),this._$Y0=t._$nP(),I.prototype.readV2_opacity.call(this,t)},z.prototype.init=function(t){var i=new H(this);return i._$Yr=new P,this._$32()&&(i._$Wr=new P),i},z.prototype._$Nr=function(t,i){this!=i._$GT()&&console.log(\"### assert!! ### \");var e=i;if(this._$GS._$Ur(t)){var r=z._$gT;r[0]=!1;var o=this._$GS._$Q2(t,r);i._$Ib(r[0]),this.interpolateOpacity(t,this._$GS,i,r);var n=t._$vs(),s=t._$Tr();if(this._$GS._$zr(n,s,o),o<=0){var _=this._$Y0[n[0]];e._$Yr.init(_)}else if(1==o){var _=this._$Y0[n[0]],a=this._$Y0[n[1]],h=s[0];e._$Yr._$fL=_._$fL+(a._$fL-_._$fL)*h,e._$Yr._$gL=_._$gL+(a._$gL-_._$gL)*h,e._$Yr._$B0=_._$B0+(a._$B0-_._$B0)*h,e._$Yr._$z0=_._$z0+(a._$z0-_._$z0)*h,e._$Yr._$qT=_._$qT+(a._$qT-_._$qT)*h}else if(2==o){var _=this._$Y0[n[0]],a=this._$Y0[n[1]],l=this._$Y0[n[2]],$=this._$Y0[n[3]],h=s[0],u=s[1],p=_._$fL+(a._$fL-_._$fL)*h,f=l._$fL+($._$fL-l._$fL)*h;e._$Yr._$fL=p+(f-p)*u,p=_._$gL+(a._$gL-_._$gL)*h,f=l._$gL+($._$gL-l._$gL)*h,e._$Yr._$gL=p+(f-p)*u,p=_._$B0+(a._$B0-_._$B0)*h,f=l._$B0+($._$B0-l._$B0)*h,e._$Yr._$B0=p+(f-p)*u,p=_._$z0+(a._$z0-_._$z0)*h,f=l._$z0+($._$z0-l._$z0)*h,e._$Yr._$z0=p+(f-p)*u,p=_._$qT+(a._$qT-_._$qT)*h,f=l._$qT+($._$qT-l._$qT)*h,e._$Yr._$qT=p+(f-p)*u}else if(3==o){var c=this._$Y0[n[0]],d=this._$Y0[n[1]],g=this._$Y0[n[2]],y=this._$Y0[n[3]],m=this._$Y0[n[4]],T=this._$Y0[n[5]],P=this._$Y0[n[6]],S=this._$Y0[n[7]],h=s[0],u=s[1],v=s[2],p=c._$fL+(d._$fL-c._$fL)*h,f=g._$fL+(y._$fL-g._$fL)*h,L=m._$fL+(T._$fL-m._$fL)*h,M=P._$fL+(S._$fL-P._$fL)*h;e._$Yr._$fL=(1-v)*(p+(f-p)*u)+v*(L+(M-L)*u),p=c._$gL+(d._$gL-c._$gL)*h,f=g._$gL+(y._$gL-g._$gL)*h,L=m._$gL+(T._$gL-m._$gL)*h,M=P._$gL+(S._$gL-P._$gL)*h,e._$Yr._$gL=(1-v)*(p+(f-p)*u)+v*(L+(M-L)*u),p=c._$B0+(d._$B0-c._$B0)*h,f=g._$B0+(y._$B0-g._$B0)*h,L=m._$B0+(T._$B0-m._$B0)*h,M=P._$B0+(S._$B0-P._$B0)*h,e._$Yr._$B0=(1-v)*(p+(f-p)*u)+v*(L+(M-L)*u),p=c._$z0+(d._$z0-c._$z0)*h,f=g._$z0+(y._$z0-g._$z0)*h,L=m._$z0+(T._$z0-m._$z0)*h,M=P._$z0+(S._$z0-P._$z0)*h,e._$Yr._$z0=(1-v)*(p+(f-p)*u)+v*(L+(M-L)*u),p=c._$qT+(d._$qT-c._$qT)*h,f=g._$qT+(y._$qT-g._$qT)*h,L=m._$qT+(T._$qT-m._$qT)*h,M=P._$qT+(S._$qT-P._$qT)*h,e._$Yr._$qT=(1-v)*(p+(f-p)*u)+v*(L+(M-L)*u)}else if(4==o){var E=this._$Y0[n[0]],A=this._$Y0[n[1]],I=this._$Y0[n[2]],w=this._$Y0[n[3]],x=this._$Y0[n[4]],O=this._$Y0[n[5]],D=this._$Y0[n[6]],R=this._$Y0[n[7]],b=this._$Y0[n[8]],F=this._$Y0[n[9]],C=this._$Y0[n[10]],N=this._$Y0[n[11]],B=this._$Y0[n[12]],U=this._$Y0[n[13]],G=this._$Y0[n[14]],Y=this._$Y0[n[15]],h=s[0],u=s[1],v=s[2],k=s[3],p=E._$fL+(A._$fL-E._$fL)*h,f=I._$fL+(w._$fL-I._$fL)*h,L=x._$fL+(O._$fL-x._$fL)*h,M=D._$fL+(R._$fL-D._$fL)*h,V=b._$fL+(F._$fL-b._$fL)*h,X=C._$fL+(N._$fL-C._$fL)*h,H=B._$fL+(U._$fL-B._$fL)*h,W=G._$fL+(Y._$fL-G._$fL)*h;e._$Yr._$fL=(1-k)*((1-v)*(p+(f-p)*u)+v*(L+(M-L)*u))+k*((1-v)*(V+(X-V)*u)+v*(H+(W-H)*u)),p=E._$gL+(A._$gL-E._$gL)*h,f=I._$gL+(w._$gL-I._$gL)*h,L=x._$gL+(O._$gL-x._$gL)*h,M=D._$gL+(R._$gL-D._$gL)*h,V=b._$gL+(F._$gL-b._$gL)*h,X=C._$gL+(N._$gL-C._$gL)*h,H=B._$gL+(U._$gL-B._$gL)*h,W=G._$gL+(Y._$gL-G._$gL)*h,e._$Yr._$gL=(1-k)*((1-v)*(p+(f-p)*u)+v*(L+(M-L)*u))+k*((1-v)*(V+(X-V)*u)+v*(H+(W-H)*u)),p=E._$B0+(A._$B0-E._$B0)*h,f=I._$B0+(w._$B0-I._$B0)*h,L=x._$B0+(O._$B0-x._$B0)*h,M=D._$B0+(R._$B0-D._$B0)*h,V=b._$B0+(F._$B0-b._$B0)*h,X=C._$B0+(N._$B0-C._$B0)*h,H=B._$B0+(U._$B0-B._$B0)*h,W=G._$B0+(Y._$B0-G._$B0)*h,e._$Yr._$B0=(1-k)*((1-v)*(p+(f-p)*u)+v*(L+(M-L)*u))+k*((1-v)*(V+(X-V)*u)+v*(H+(W-H)*u)),p=E._$z0+(A._$z0-E._$z0)*h,f=I._$z0+(w._$z0-I._$z0)*h,L=x._$z0+(O._$z0-x._$z0)*h,M=D._$z0+(R._$z0-D._$z0)*h,V=b._$z0+(F._$z0-b._$z0)*h,X=C._$z0+(N._$z0-C._$z0)*h,H=B._$z0+(U._$z0-B._$z0)*h,W=G._$z0+(Y._$z0-G._$z0)*h,e._$Yr._$z0=(1-k)*((1-v)*(p+(f-p)*u)+v*(L+(M-L)*u))+k*((1-v)*(V+(X-V)*u)+v*(H+(W-H)*u)),p=E._$qT+(A._$qT-E._$qT)*h,f=I._$qT+(w._$qT-I._$qT)*h,L=x._$qT+(O._$qT-x._$qT)*h,M=D._$qT+(R._$qT-D._$qT)*h,V=b._$qT+(F._$qT-b._$qT)*h,X=C._$qT+(N._$qT-C._$qT)*h,H=B._$qT+(U._$qT-B._$qT)*h,W=G._$qT+(Y._$qT-G._$qT)*h,e._$Yr._$qT=(1-k)*((1-v)*(p+(f-p)*u)+v*(L+(M-L)*u))+k*((1-v)*(V+(X-V)*u)+v*(H+(W-H)*u))}else{for(var j=0|Math.pow(2,o),q=new Float32Array(j),J=0;J<j;J++){for(var Q=J,Z=1,K=0;K<o;K++)Z*=Q%2==0?1-s[K]:s[K],Q/=2;q[J]=Z}for(var tt=new Array,it=0;it<j;it++)tt[it]=this._$Y0[n[it]];for(var et=0,rt=0,ot=0,nt=0,st=0,it=0;it<j;it++)et+=q[it]*tt[it]._$fL,rt+=q[it]*tt[it]._$gL,ot+=q[it]*tt[it]._$B0,nt+=q[it]*tt[it]._$z0,st+=q[it]*tt[it]._$qT;e._$Yr._$fL=et,e._$Yr._$gL=rt,e._$Yr._$B0=ot,e._$Yr._$z0=nt,e._$Yr._$qT=st}var _=this._$Y0[n[0]];e._$Yr.reflectX=_.reflectX,e._$Yr.reflectY=_.reflectY}},z.prototype._$2b=function(t,i){this!=i._$GT()&&console.log(\"### assert!! ### \");var e=i;if(e._$hS(!0),this._$32()){var r=this.getTargetBaseDataID();if(e._$8r==I._$ur&&(e._$8r=t.getBaseDataIndex(r)),e._$8r<0)at._$so&&_._$li(\"_$L _$0P _$G :: %s\",r),e._$hS(!1);else{var o=t.getBaseData(e._$8r);if(null!=o){var n=t._$q2(e._$8r),s=z._$Xo;s[0]=e._$Yr._$fL,s[1]=e._$Yr._$gL;var a=z._$io;a[0]=0,a[1]=-.1;n._$GT().getType()==I._$c2?a[1]=-10:a[1]=-.1;var h=z._$0o;this._$Jr(t,o,n,s,a,h);var l=Lt._$92(a,h);o._$nb(t,n,s,s,1,0,2),e._$Wr._$fL=s[0],e._$Wr._$gL=s[1],e._$Wr._$B0=e._$Yr._$B0,e._$Wr._$z0=e._$Yr._$z0,e._$Wr._$qT=e._$Yr._$qT-l*Lt._$NS;var $=n.getTotalScale();e.setTotalScale_notForClient($*e._$Wr._$B0);var u=n.getTotalOpacity();e.setTotalOpacity(u*e.getInterpolatedOpacity()),e._$Wr.reflectX=e._$Yr.reflectX,e._$Wr.reflectY=e._$Yr.reflectY,e._$hS(n._$yo())}else e._$hS(!1)}}else e.setTotalScale_notForClient(e._$Yr._$B0),e.setTotalOpacity(e.getInterpolatedOpacity())},z.prototype._$nb=function(t,i,e,r,o,n,s){this!=i._$GT()&&console.log(\"### assert!! ### \");for(var _,a,h=i,l=null!=h._$Wr?h._$Wr:h._$Yr,$=Math.sin(Lt._$bS*l._$qT),u=Math.cos(Lt._$bS*l._$qT),p=h.getTotalScale(),f=l.reflectX?-1:1,c=l.reflectY?-1:1,d=u*p*f,g=-$*p*c,y=$*p*f,m=u*p*c,T=l._$fL,P=l._$gL,S=o*s,v=n;v<S;v+=s)_=e[v],a=e[v+1],r[v]=d*_+g*a+T,r[v+1]=y*_+m*a+P},z.prototype._$Jr=function(t,i,e,r,o,n){i!=e._$GT()&&console.log(\"### assert!! ### \");var s=z._$Lo;z._$Lo[0]=r[0],z._$Lo[1]=r[1],i._$nb(t,e,s,s,1,0,2);for(var _=z._$To,a=z._$Po,h=1,l=0;l<10;l++){if(a[0]=r[0]+h*o[0],a[1]=r[1]+h*o[1],i._$nb(t,e,a,_,1,0,2),_[0]-=s[0],_[1]-=s[1],0!=_[0]||0!=_[1])return n[0]=_[0],void(n[1]=_[1]);if(a[0]=r[0]-h*o[0],a[1]=r[1]-h*o[1],i._$nb(t,e,a,_,1,0,2),_[0]-=s[0],_[1]-=s[1],0!=_[0]||0!=_[1])return _[0]=-_[0],_[0]=-_[0],n[0]=_[0],void(n[1]=_[1]);h*=.1}at._$so&&console.log(\"_$L0 to transform _$SP\\n\")},H.prototype=new _t,W.prototype=new M,W._$ur=-2,W._$ES=500,W._$wb=2,W._$8S=3,W._$os=4,W._$52=W._$ES,W._$R2=W._$ES,W._$Sb=function(t){for(var i=t.length-1;i>=0;--i){var e=t[i];e<W._$52?W._$52=e:e>W._$R2&&(W._$R2=e)}},W._$or=function(){return W._$52},W._$Pr=function(){return W._$R2},W.prototype._$F0=function(t){this._$gP=t._$nP(),this._$dr=t._$nP(),this._$GS=t._$nP(),this._$qb=t._$6L(),this._$Lb=t._$cS(),this._$mS=t._$Tb(),t.getFormatVersion()>=G._$T7?(this.clipID=t._$nP(),this.clipIDList=this.convertClipIDForV2_11(this.clipID)):this.clipIDList=null,W._$Sb(this._$Lb)},W.prototype.getClipIDList=function(){return this.clipIDList},W.prototype._$Nr=function(t,i){if(i._$IS[0]=!1,i._$Us=v._$Z2(t,this._$GS,i._$IS,this._$Lb),at._$Zs);else if(i._$IS[0])return;i._$7s=v._$br(t,this._$GS,i._$IS,this._$mS)},W.prototype._$2b=function(t){},W.prototype.getDrawDataID=function(){return this._$gP},W.prototype._$j2=function(t){this._$gP=t},W.prototype.getOpacity=function(t,i){return i._$7s},W.prototype._$zS=function(t,i){return i._$Us},W.prototype.getTargetBaseDataID=function(){return this._$dr},W.prototype._$gs=function(t){this._$dr=t},W.prototype._$32=function(){return null!=this._$dr&&this._$dr!=yt._$2o()},W.prototype.getType=function(){},j._$42=0,j.prototype._$1b=function(){return this._$3S},j.prototype.getDrawDataList=function(){return this._$aS},j.prototype._$F0=function(t){this._$NL=t._$nP(),this._$aS=t._$nP(),this._$3S=t._$nP()},j.prototype._$kr=function(t){t._$Zo(this._$3S),t._$xo(this._$aS),this._$3S=null,this._$aS=null},q.prototype=new i,q.loadModel=function(t){var e=new q;return i._$62(e,t),e},q.loadModel=function(t){var e=new q;return i._$62(e,t),e},q._$to=function(){return new q},q._$er=function(t){var i=new _$5(\"../_$_r/_$t0/_$Ri/_$_P._$d\");if(0==i.exists())throw new _$ls(\"_$t0 _$_ _$6 _$Ui :: \"+i._$PL());for(var e=[\"../_$_r/_$t0/_$Ri/_$_P.512/_$CP._$1\",\"../_$_r/_$t0/_$Ri/_$_P.512/_$vP._$1\",\"../_$_r/_$t0/_$Ri/_$_P.512/_$EP._$1\",\"../_$_r/_$t0/_$Ri/_$_P.512/_$pP._$1\"],r=q.loadModel(i._$3b()),o=0;o<e.length;o++){var n=new _$5(e[o]);if(0==n.exists())throw new _$ls(\"_$t0 _$_ _$6 _$Ui :: \"+n._$PL());r.setTexture(o,_$nL._$_o(t,n._$3b()))}return r},q.prototype.setGL=function(t){this._$zo.setGL(t)},q.prototype.setTransform=function(t){this._$zo.setTransform(t)},q.prototype.draw=function(){this._$5S.draw(this._$zo)},q.prototype._$K2=function(){this._$zo._$K2()},q.prototype.setTexture=function(t,i){null==this._$zo&&_._$li(\"_$Yi for QT _$ki / _$XS() is _$6 _$ui!!\"),this._$zo.setTexture(t,i)},q.prototype.setTexture=function(t,i){null==this._$zo&&_._$li(\"_$Yi for QT _$ki / _$XS() is _$6 _$ui!!\"),this._$zo.setTexture(t,i)},q.prototype._$Rs=function(){return this._$zo._$Rs()},q.prototype._$Ds=function(t){this._$zo._$Ds(t)},q.prototype.getDrawParam=function(){return this._$zo},J.prototype=new s,J._$cs=\"VISIBLE:\",J._$ar=\"LAYOUT:\",J.MTN_PREFIX_FADEIN=\"FADEIN:\",J.MTN_PREFIX_FADEOUT=\"FADEOUT:\",J._$Co=0,J._$1T=1,J.loadMotion=function(t){var i=k._$C(t);return J.loadMotion(i)},J.loadMotion=function(t){t instanceof ArrayBuffer&&(t=new DataView(t));var i=new J,e=[0],r=t.byteLength;i._$yT=0;for(var o=0;o<r;++o){var n=Q(t,o),s=n.charCodeAt(0);if(\"\\n\"!=n&&\"\\r\"!=n)if(\"#\"!=n)if(\"$\"!=n){if(97<=s&&s<=122||65<=s&&s<=90||\"_\"==n){for(var _=o,a=-1;o<r&&(\"\\r\"!=(n=Q(t,o))&&\"\\n\"!=n);++o)if(\"=\"==n){a=o;break}if(a>=0){var h=new B;O.startsWith(t,_,J._$cs)?(h._$RP=B._$hs,h._$4P=O.createString(t,_,a-_)):O.startsWith(t,_,J._$ar)?(h._$4P=O.createString(t,_+7,a-_-7),O.startsWith(t,_+7,\"ANCHOR_X\")?h._$RP=B._$xs:O.startsWith(t,_+7,\"ANCHOR_Y\")?h._$RP=B._$us:O.startsWith(t,_+7,\"SCALE_X\")?h._$RP=B._$qs:O.startsWith(t,_+7,\"SCALE_Y\")?h._$RP=B._$Ys:O.startsWith(t,_+7,\"X\")?h._$RP=B._$ws:O.startsWith(t,_+7,\"Y\")&&(h._$RP=B._$Ns)):(h._$RP=B._$Fr,h._$4P=O.createString(t,_,a-_)),i.motions.push(h);var l=0,$=[];for(o=a+1;o<r&&(\"\\r\"!=(n=Q(t,o))&&\"\\n\"!=n);++o)if(\",\"!=n&&\" \"!=n&&\"\\t\"!=n){var u=O._$LS(t,r,o,e);if(e[0]>0){$.push(u),l++;var p=e[0];if(p<o){console.log(\"_$n0 _$hi . @Live2DMotion loadMotion()\\n\");break}o=p-1}}h._$I0=new Float32Array($),l>i._$yT&&(i._$yT=l)}}}else{for(var _=o,a=-1;o<r&&(\"\\r\"!=(n=Q(t,o))&&\"\\n\"!=n);++o)if(\"=\"==n){a=o;break}var f=!1;if(a>=0)for(a==_+4&&\"f\"==Q(t,_+1)&&\"p\"==Q(t,_+2)&&\"s\"==Q(t,_+3)&&(f=!0),o=a+1;o<r&&(\"\\r\"!=(n=Q(t,o))&&\"\\n\"!=n);++o)if(\",\"!=n&&\" \"!=n&&\"\\t\"!=n){var u=O._$LS(t,r,o,e);e[0]>0&&f&&5<u&&u<121&&(i._$D0=u),o=e[0]}for(;o<r&&(\"\\n\"!=Q(t,o)&&\"\\r\"!=Q(t,o));++o);}else for(;o<r&&(\"\\n\"!=Q(t,o)&&\"\\r\"!=Q(t,o));++o);}return i._$rr=1e3*i._$yT/i._$D0|0,i},J.prototype.getDurationMSec=function(){return this._$E?-1:this._$rr},J.prototype.getLoopDurationMSec=function(){return this._$rr},J.prototype.dump=function(){for(var t=0;t<this.motions.length;t++){var i=this.motions[t];console.log(\"_$wL[%s] [%d]. \",i._$4P,i._$I0.length);for(var e=0;e<i._$I0.length&&e<10;e++)console.log(\"%5.2f ,\",i._$I0[e]);console.log(\"\\n\")}},J.prototype.updateParamExe=function(t,i,e,r){for(var o=i-r._$z2,n=o*this._$D0/1e3,s=0|n,_=n-s,a=0;a<this.motions.length;a++){var h=this.motions[a],l=h._$I0.length,$=h._$4P;if(h._$RP==B._$hs){var u=h._$I0[s>=l?l-1:s];t.setParamFloat($,u)}else if(B._$ws<=h._$RP&&h._$RP<=B._$Ys);else{var p,f=t.getParamIndex($),c=t.getModelContext(),d=c.getParamMax(f),g=c.getParamMin(f),y=.4*(d-g),m=c.getParamFloat(f),T=h._$I0[s>=l?l-1:s],P=h._$I0[s+1>=l?l-1:s+1];p=T<P&&P-T>y||T>P&&T-P>y?T:T+(P-T)*_;var S=m+(p-m)*e;t.setParamFloat($,S)}}s>=this._$yT&&(this._$E?(r._$z2=i,this.loopFadeIn&&(r._$bs=i)):r._$9L=!0),this._$eP=e},J.prototype._$r0=function(){return this._$E},J.prototype._$aL=function(t){this._$E=t},J.prototype._$S0=function(){return this._$D0},J.prototype._$U0=function(t){this._$D0=t},J.prototype.isLoopFadeIn=function(){return this.loopFadeIn},J.prototype.setLoopFadeIn=function(t){this.loopFadeIn=t},N.prototype.clear=function(){this.size=0},N.prototype.add=function(t){if(this._$P.length<=this.size){var i=new Float32Array(2*this.size);w._$jT(this._$P,0,i,0,this.size),this._$P=i}this._$P[this.size++]=t},N.prototype._$BL=function(){var t=new Float32Array(this.size);return w._$jT(this._$P,0,t,0,this.size),t},B._$Fr=0,B._$hs=1,B._$ws=100,B._$Ns=101,B._$xs=102,B._$us=103,B._$qs=104,B._$Ys=105,Z.prototype=new I,Z._$gT=new Array,Z.prototype._$zP=function(){this._$GS=new D,this._$GS._$zP()},Z.prototype._$F0=function(t){I.prototype._$F0.call(this,t),this._$A=t._$6L(),this._$o=t._$6L(),this._$GS=t._$nP(),this._$Eo=t._$nP(),I.prototype.readV2_opacity.call(this,t)},Z.prototype.init=function(t){var i=new K(this),e=(this._$o+1)*(this._$A+1);return null!=i._$Cr&&(i._$Cr=null),i._$Cr=new Float32Array(2*e),null!=i._$hr&&(i._$hr=null),this._$32()?i._$hr=new Float32Array(2*e):i._$hr=null,i},Z.prototype._$Nr=function(t,i){var e=i;if(this._$GS._$Ur(t)){var r=this._$VT(),o=Z._$gT;o[0]=!1,v._$Vr(t,this._$GS,o,r,this._$Eo,e._$Cr,0,2),i._$Ib(o[0]),this.interpolateOpacity(t,this._$GS,i,o)}},Z.prototype._$2b=function(t,i){var e=i;if(e._$hS(!0),this._$32()){var r=this.getTargetBaseDataID();if(e._$8r==I._$ur&&(e._$8r=t.getBaseDataIndex(r)),e._$8r<0)at._$so&&_._$li(\"_$L _$0P _$G :: %s\",r),e._$hS(!1);else{var o=t.getBaseData(e._$8r),n=t._$q2(e._$8r);if(null!=o&&n._$yo()){var s=n.getTotalScale();e.setTotalScale_notForClient(s);var a=n.getTotalOpacity();e.setTotalOpacity(a*e.getInterpolatedOpacity()),o._$nb(t,n,e._$Cr,e._$hr,this._$VT(),0,2),e._$hS(!0)}else e._$hS(!1)}}else e.setTotalOpacity(e.getInterpolatedOpacity())},Z.prototype._$nb=function(t,i,e,r,o,n,s){var _=i,a=null!=_._$hr?_._$hr:_._$Cr;Z.transformPoints_sdk2(e,r,o,n,s,a,this._$o,this._$A)},Z.transformPoints_sdk2=function(i,e,r,o,n,s,_,a){for(var h,l,$,u=r*n,p=0,f=0,c=0,d=0,g=0,y=0,m=!1,T=o;T<u;T+=n){var P,S,v,L;if(v=i[T],L=i[T+1],P=v*_,S=L*a,P<0||S<0||_<=P||a<=S){var M=_+1;if(!m){m=!0,p=.25*(s[2*(0+0*M)]+s[2*(_+0*M)]+s[2*(0+a*M)]+s[2*(_+a*M)]),f=.25*(s[2*(0+0*M)+1]+s[2*(_+0*M)+1]+s[2*(0+a*M)+1]+s[2*(_+a*M)+1]);var E=s[2*(_+a*M)]-s[2*(0+0*M)],A=s[2*(_+a*M)+1]-s[2*(0+0*M)+1],I=s[2*(_+0*M)]-s[2*(0+a*M)],w=s[2*(_+0*M)+1]-s[2*(0+a*M)+1];c=.5*(E+I),d=.5*(A+w),g=.5*(E-I),y=.5*(A-w),p-=.5*(c+g),f-=.5*(d+y)}if(-2<v&&v<3&&-2<L&&L<3)if(v<=0)if(L<=0){var x=s[2*(0+0*M)],O=s[2*(0+0*M)+1],D=p-2*c,R=f-2*d,b=p-2*g,F=f-2*y,C=p-2*c-2*g,N=f-2*d-2*y,B=.5*(v- -2),U=.5*(L- -2);B+U<=1?(e[T]=C+(b-C)*B+(D-C)*U,e[T+1]=N+(F-N)*B+(R-N)*U):(e[T]=x+(D-x)*(1-B)+(b-x)*(1-U),e[T+1]=O+(R-O)*(1-B)+(F-O)*(1-U))}else if(L>=1){var b=s[2*(0+a*M)],F=s[2*(0+a*M)+1],C=p-2*c+1*g,N=f-2*d+1*y,x=p+3*g,O=f+3*y,D=p-2*c+3*g,R=f-2*d+3*y,B=.5*(v- -2),U=.5*(L-1);B+U<=1?(e[T]=C+(b-C)*B+(D-C)*U,e[T+1]=N+(F-N)*B+(R-N)*U):(e[T]=x+(D-x)*(1-B)+(b-x)*(1-U),e[T+1]=O+(R-O)*(1-B)+(F-O)*(1-U))}else{var G=0|S;G==a&&(G=a-1);var B=.5*(v- -2),U=S-G,Y=G/a,k=(G+1)/a,b=s[2*(0+G*M)],F=s[2*(0+G*M)+1],x=s[2*(0+(G+1)*M)],O=s[2*(0+(G+1)*M)+1],C=p-2*c+Y*g,N=f-2*d+Y*y,D=p-2*c+k*g,R=f-2*d+k*y;B+U<=1?(e[T]=C+(b-C)*B+(D-C)*U,e[T+1]=N+(F-N)*B+(R-N)*U):(e[T]=x+(D-x)*(1-B)+(b-x)*(1-U),e[T+1]=O+(R-O)*(1-B)+(F-O)*(1-U))}else if(1<=v)if(L<=0){var D=s[2*(_+0*M)],R=s[2*(_+0*M)+1],x=p+3*c,O=f+3*d,C=p+1*c-2*g,N=f+1*d-2*y,b=p+3*c-2*g,F=f+3*d-2*y,B=.5*(v-1),U=.5*(L- -2);B+U<=1?(e[T]=C+(b-C)*B+(D-C)*U,e[T+1]=N+(F-N)*B+(R-N)*U):(e[T]=x+(D-x)*(1-B)+(b-x)*(1-U),e[T+1]=O+(R-O)*(1-B)+(F-O)*(1-U))}else if(L>=1){var C=s[2*(_+a*M)],N=s[2*(_+a*M)+1],b=p+3*c+1*g,F=f+3*d+1*y,D=p+1*c+3*g,R=f+1*d+3*y,x=p+3*c+3*g,O=f+3*d+3*y,B=.5*(v-1),U=.5*(L-1);B+U<=1?(e[T]=C+(b-C)*B+(D-C)*U,e[T+1]=N+(F-N)*B+(R-N)*U):(e[T]=x+(D-x)*(1-B)+(b-x)*(1-U),e[T+1]=O+(R-O)*(1-B)+(F-O)*(1-U))}else{var G=0|S;G==a&&(G=a-1);var B=.5*(v-1),U=S-G,Y=G/a,k=(G+1)/a,C=s[2*(_+G*M)],N=s[2*(_+G*M)+1],D=s[2*(_+(G+1)*M)],R=s[2*(_+(G+1)*M)+1],b=p+3*c+Y*g,F=f+3*d+Y*y,x=p+3*c+k*g,O=f+3*d+k*y;B+U<=1?(e[T]=C+(b-C)*B+(D-C)*U,e[T+1]=N+(F-N)*B+(R-N)*U):(e[T]=x+(D-x)*(1-B)+(b-x)*(1-U),e[T+1]=O+(R-O)*(1-B)+(F-O)*(1-U))}else if(L<=0){var V=0|P;V==_&&(V=_-1);var B=P-V,U=.5*(L- -2),X=V/_,z=(V+1)/_,D=s[2*(V+0*M)],R=s[2*(V+0*M)+1],x=s[2*(V+1+0*M)],O=s[2*(V+1+0*M)+1],C=p+X*c-2*g,N=f+X*d-2*y,b=p+z*c-2*g,F=f+z*d-2*y;B+U<=1?(e[T]=C+(b-C)*B+(D-C)*U,e[T+1]=N+(F-N)*B+(R-N)*U):(e[T]=x+(D-x)*(1-B)+(b-x)*(1-U),e[T+1]=O+(R-O)*(1-B)+(F-O)*(1-U))}else if(L>=1){var V=0|P;V==_&&(V=_-1);var B=P-V,U=.5*(L-1),X=V/_,z=(V+1)/_,C=s[2*(V+a*M)],N=s[2*(V+a*M)+1],b=s[2*(V+1+a*M)],F=s[2*(V+1+a*M)+1],D=p+X*c+3*g,R=f+X*d+3*y,x=p+z*c+3*g,O=f+z*d+3*y;B+U<=1?(e[T]=C+(b-C)*B+(D-C)*U,e[T+1]=N+(F-N)*B+(R-N)*U):(e[T]=x+(D-x)*(1-B)+(b-x)*(1-U),e[T+1]=O+(R-O)*(1-B)+(F-O)*(1-U))}else t.err.printf(\"_$li calc : %.4f , %.4f\\t\\t\\t\\t\\t@@BDBoxGrid\\n\",v,L);else e[T]=p+v*c+L*g,e[T+1]=f+v*d+L*y}else l=P-(0|P),$=S-(0|S),h=2*((0|P)+(0|S)*(_+1)),l+$<1?(e[T]=s[h]*(1-l-$)+s[h+2]*l+s[h+2*(_+1)]*$,e[T+1]=s[h+1]*(1-l-$)+s[h+3]*l+s[h+2*(_+1)+1]*$):(e[T]=s[h+2*(_+1)+2]*(l-1+$)+s[h+2*(_+1)]*(1-l)+s[h+2]*(1-$),e[T+1]=s[h+2*(_+1)+3]*(l-1+$)+s[h+2*(_+1)+1]*(1-l)+s[h+3]*(1-$))}},Z.prototype.transformPoints_sdk1=function(t,i,e,r,o,n,s){for(var _,a,h,l,$,u,p,f=i,c=this._$o,d=this._$A,g=o*s,y=null!=f._$hr?f._$hr:f._$Cr,m=n;m<g;m+=s)at._$ts?(_=e[m],a=e[m+1],_<0?_=0:_>1&&(_=1),a<0?a=0:a>1&&(a=1),_*=c,a*=d,h=0|_,l=0|a,h>c-1&&(h=c-1),l>d-1&&(l=d-1),u=_-h,p=a-l,$=2*(h+l*(c+1))):(_=e[m]*c,a=e[m+1]*d,u=_-(0|_),p=a-(0|a),$=2*((0|_)+(0|a)*(c+1))),u+p<1?(r[m]=y[$]*(1-u-p)+y[$+2]*u+y[$+2*(c+1)]*p,r[m+1]=y[$+1]*(1-u-p)+y[$+3]*u+y[$+2*(c+1)+1]*p):(r[m]=y[$+2*(c+1)+2]*(u-1+p)+y[$+2*(c+1)]*(1-u)+y[$+2]*(1-p),r[m+1]=y[$+2*(c+1)+3]*(u-1+p)+y[$+2*(c+1)+1]*(1-u)+y[$+3]*(1-p))},Z.prototype._$VT=function(){return(this._$o+1)*(this._$A+1)},Z.prototype.getType=function(){return I._$_b},K.prototype=new _t,tt._$42=0,tt.prototype._$zP=function(){this._$3S=new Array,this._$aS=new Array},tt.prototype._$F0=function(t){this._$g0=t._$8L(),this.visible=t._$8L(),this._$NL=t._$nP(),this._$3S=t._$nP(),this._$aS=t._$nP()},tt.prototype.init=function(t){var i=new it(this);return i.setPartsOpacity(this.isVisible()?1:0),i},tt.prototype._$6o=function(t){if(null==this._$3S)throw new Error(\"_$3S _$6 _$Wo@_$6o\");this._$3S.push(t)},tt.prototype._$3o=function(t){if(null==this._$aS)throw new Error(\"_$aS _$6 _$Wo@_$3o\");this._$aS.push(t)},tt.prototype._$Zo=function(t){this._$3S=t},tt.prototype._$xo=function(t){this._$aS=t},tt.prototype.isVisible=function(){return this.visible},tt.prototype._$uL=function(){return this._$g0},tt.prototype._$KP=function(t){this.visible=t},tt.prototype._$ET=function(t){this._$g0=t},tt.prototype.getBaseData=function(){return this._$3S},tt.prototype.getDrawData=function(){return this._$aS},tt.prototype._$p2=function(){return this._$NL},tt.prototype._$ob=function(t){this._$NL=t},tt.prototype.getPartsID=function(){return this._$NL},tt.prototype._$MP=function(t){this._$NL=t},it.prototype=new $,it.prototype.getPartsOpacity=function(){return this._$VS},it.prototype.setPartsOpacity=function(t){this._$VS=t},et._$L7=function(){u._$27(),yt._$27(),b._$27(),l._$27()},et.prototype.toString=function(){return this.id},rt.prototype._$F0=function(t){},ot.prototype._$1s=function(){return this._$4S},ot.prototype._$zP=function(){this._$4S=new Array},ot.prototype._$F0=function(t){this._$4S=t._$nP()},ot.prototype._$Ks=function(t){this._$4S.push(t)},nt.tr=new gt,nt._$50=new gt,nt._$Ti=new Array(0,0),nt._$Pi=new Array(0,0),nt._$B=new Array(0,0),nt.prototype._$lP=function(t,i,e,r){this.viewport=new Array(t,i,e,r)},nt.prototype._$bL=function(){this.context.save();var t=this.viewport;null!=t&&(this.context.beginPath(),this.context._$Li(t[0],t[1],t[2],t[3]),this.context.clip())},nt.prototype._$ei=function(){this.context.restore()},nt.prototype.drawElements=function(t,i,e,r,o,n,s,a){try{o!=this._$Qo&&(this._$Qo=o,this.context.globalAlpha=o);for(var h=i.length,l=t.width,$=t.height,u=this.context,p=this._$xP,f=this._$uP,c=this._$6r,d=this._$3r,g=nt.tr,y=nt._$Ti,m=nt._$Pi,T=nt._$B,P=0;P<h;P+=3){u.save();var S=i[P],v=i[P+1],L=i[P+2],M=p+c*e[2*S],E=f+d*e[2*S+1],A=p+c*e[2*v],I=f+d*e[2*v+1],w=p+c*e[2*L],x=f+d*e[2*L+1];s&&(s._$PS(M,E,T),M=T[0],E=T[1],s._$PS(A,I,T),A=T[0],I=T[1],s._$PS(w,x,T),w=T[0],x=T[1]);var O=l*r[2*S],D=$-$*r[2*S+1],R=l*r[2*v],b=$-$*r[2*v+1],F=l*r[2*L],C=$-$*r[2*L+1],N=Math.atan2(b-D,R-O),B=Math.atan2(I-E,A-M),U=A-M,G=I-E,Y=Math.sqrt(U*U+G*G),k=R-O,V=b-D,X=Math.sqrt(k*k+V*V),z=Y/X;It._$ni(F,C,O,D,R-O,b-D,-(b-D),R-O,y),It._$ni(w,x,M,E,A-M,I-E,-(I-E),A-M,m);var H=(m[0]-y[0])/y[1],W=Math.min(O,R,F),j=Math.max(O,R,F),q=Math.min(D,b,C),J=Math.max(D,b,C),Q=Math.floor(W),Z=Math.floor(q),K=Math.ceil(j),tt=Math.ceil(J);g.identity(),g.translate(M,E),g.rotate(B),g.scale(1,m[1]/y[1]),g.shear(H,0),g.scale(z,z),g.rotate(-N),g.translate(-O,-D),g.setContext(u);if(n||(n=1.2),at.IGNORE_EXPAND&&(n=0),at.USE_CACHED_POLYGON_IMAGE){var it=a._$e0;if(it.gl_cacheImage=it.gl_cacheImage||{},!it.gl_cacheImage[P]){var et=nt.createCanvas(K-Q,tt-Z);at.DEBUG_DATA.LDGL_CANVAS_MB=at.DEBUG_DATA.LDGL_CANVAS_MB||0,at.DEBUG_DATA.LDGL_CANVAS_MB+=(K-Q)*(tt-Z)*4;var rt=et.getContext(\"2d\");rt.translate(-Q,-Z),nt.clip(rt,g,n,Y,O,D,R,b,F,C,M,E,A,I,w,x),rt.drawImage(t,0,0),it.gl_cacheImage[P]={cacheCanvas:et,cacheContext:rt}}u.drawImage(it.gl_cacheImage[P].cacheCanvas,Q,Z)}else at.IGNORE_CLIP||nt.clip(u,g,n,Y,O,D,R,b,F,C,M,E,A,I,w,x),at.USE_ADJUST_TRANSLATION&&(W=0,j=l,q=0,J=$),u.drawImage(t,W,q,j-W,J-q,W,q,j-W,J-q);u.restore()}}catch(t){_._$Rb(t)}},nt.clip=function(t,i,e,r,o,n,s,_,a,h,l,$,u,p,f,c){e>.02?nt.expandClip(t,i,e,r,l,$,u,p,f,c):nt.clipWithTransform(t,null,o,n,s,_,a,h)},nt.expandClip=function(t,i,e,r,o,n,s,_,a,h){var l=s-o,$=_-n,u=a-o,p=h-n,f=l*p-$*u>0?e:-e,c=-$,d=l,g=a-s,y=h-_,m=-y,T=g,P=Math.sqrt(g*g+y*y),S=-p,v=u,L=Math.sqrt(u*u+p*p),M=o-f*c/r,E=n-f*d/r,A=s-f*c/r,I=_-f*d/r,w=s-f*m/P,x=_-f*T/P,O=a-f*m/P,D=h-f*T/P,R=o+f*S/L,b=n+f*v/L,F=a+f*S/L,C=h+f*v/L,N=nt._$50;return null!=i._$P2(N)&&(nt.clipWithTransform(t,N,M,E,A,I,w,x,O,D,F,C,R,b),!0)},nt.clipWithTransform=function(t,i,e,r,o,n,s,a){if(arguments.length<7)return void _._$li(\"err : @LDGL.clip()\");if(!(arguments[1]instanceof gt))return void _._$li(\"err : a[0] is _$6 LDTransform @LDGL.clip()\");var h=nt._$B,l=i,$=arguments;if(t.beginPath(),l){l._$PS($[2],$[3],h),t.moveTo(h[0],h[1]);for(var u=4;u<$.length;u+=2)l._$PS($[u],$[u+1],h),t.lineTo(h[0],h[1])}else{t.moveTo($[2],$[3]);for(var u=4;u<$.length;u+=2)t.lineTo($[u],$[u+1])}t.clip()},nt.createCanvas=function(t,i){var e=document.createElement(\"canvas\");return e.setAttribute(\"width\",t),e.setAttribute(\"height\",i),e||_._$li(\"err : \"+e),e},nt.dumpValues=function(){for(var t=\"\",i=0;i<arguments.length;i++)t+=\"[\"+i+\"]= \"+arguments[i].toFixed(3)+\" , \";console.log(t)},st.prototype._$F0=function(t){this._$TT=t._$_T(),this._$LT=t._$_T(),this._$FS=t._$_T(),this._$wL=t._$nP()},st.prototype.getMinValue=function(){return this._$TT},st.prototype.getMaxValue=function(){return this._$LT},st.prototype.getDefaultValue=function(){return this._$FS},st.prototype.getParamID=function(){return this._$wL},_t.prototype._$yo=function(){return this._$AT&&!this._$JS},_t.prototype._$hS=function(t){this._$AT=t},_t.prototype._$GT=function(){return this._$e0},_t.prototype._$l2=function(t){this._$IP=t},_t.prototype.getPartsIndex=function(){return this._$IP},_t.prototype._$x2=function(){return this._$JS},_t.prototype._$Ib=function(t){this._$JS=t},_t.prototype.getTotalScale=function(){return this.totalScale},_t.prototype.setTotalScale_notForClient=function(t){this.totalScale=t},_t.prototype.getInterpolatedOpacity=function(){return this._$7s},_t.prototype.setInterpolatedOpacity=function(t){this._$7s=t},_t.prototype.getTotalOpacity=function(t){return this.totalOpacity},_t.prototype.setTotalOpacity=function(t){this.totalOpacity=t},at._$2s=\"2.1.00_1\",at._$Kr=201001e3,at._$sP=!0,at._$so=!0,at._$cb=!1,at._$3T=!0,at._$Ts=!0,at._$fb=!0,at._$ts=!0,at.L2D_DEFORMER_EXTEND=!0,at._$Wb=!1;at._$yr=!1,at._$Zs=!1,at.L2D_NO_ERROR=0,at._$i7=1e3,at._$9s=1001,at._$es=1100,at._$r7=2e3,at._$07=2001,at._$b7=2002,at._$H7=4e3,at.L2D_COLOR_BLEND_MODE_MULT=0,at.L2D_COLOR_BLEND_MODE_ADD=1,at.L2D_COLOR_BLEND_MODE_INTERPOLATE=2,at._$6b=!0,at._$cT=0,at.clippingMaskBufferSize=256,at.glContext=new Array,at.frameBuffers=new Array,at.fTexture=new Array,at.IGNORE_CLIP=!1,at.IGNORE_EXPAND=!1,at.EXPAND_W=2,at.USE_ADJUST_TRANSLATION=!0,at.USE_CANVAS_TRANSFORM=!0,at.USE_CACHED_POLYGON_IMAGE=!1,at.DEBUG_DATA={},at.PROFILE_IOS_SPEED={PROFILE_NAME:\"iOS Speed\",USE_ADJUST_TRANSLATION:!0,USE_CACHED_POLYGON_IMAGE:!0,EXPAND_W:4},at.PROFILE_IOS_QUALITY={PROFILE_NAME:\"iOS HiQ\",USE_ADJUST_TRANSLATION:!0,USE_CACHED_POLYGON_IMAGE:!1,EXPAND_W:2},at.PROFILE_IOS_DEFAULT=at.PROFILE_IOS_QUALITY,at.PROFILE_ANDROID={PROFILE_NAME:\"Android\",USE_ADJUST_TRANSLATION:!1,USE_CACHED_POLYGON_IMAGE:!1,EXPAND_W:2},at.PROFILE_DESKTOP={PROFILE_NAME:\"Desktop\",USE_ADJUST_TRANSLATION:!1,USE_CACHED_POLYGON_IMAGE:!1,EXPAND_W:2},at.initProfile=function(){Et.isIOS()?at.setupProfile(at.PROFILE_IOS_DEFAULT):Et.isAndroid()?at.setupProfile(at.PROFILE_ANDROID):at.setupProfile(at.PROFILE_DESKTOP)},at.setupProfile=function(t,i){if(\"number\"==typeof t)switch(t){case 9901:t=at.PROFILE_IOS_SPEED;break;case 9902:t=at.PROFILE_IOS_QUALITY;break;case 9903:t=at.PROFILE_IOS_DEFAULT;break;case 9904:t=at.PROFILE_ANDROID;break;case 9905:t=at.PROFILE_DESKTOP;break;default:alert(\"profile _$6 _$Ui : \"+t)}arguments.length<2&&(i=!0),i&&console.log(\"profile : \"+t.PROFILE_NAME);for(var e in t)at[e]=t[e],i&&console.log(\"  [\"+e+\"] = \"+t[e])},at.init=function(){if(at._$6b){console.log(\"Live2D %s\",at._$2s),at._$6b=!1;!0,at.initProfile()}},at.getVersionStr=function(){return at._$2s},at.getVersionNo=function(){return at._$Kr},at._$sT=function(t){at._$cT=t},at.getError=function(){var t=at._$cT;return at._$cT=0,t},at.dispose=function(){at.glContext=[],at.frameBuffers=[],at.fTexture=[]},at.setGL=function(t,i){var e=i||0;at.glContext[e]=t},at.getGL=function(t){return at.glContext[t]},at.setClippingMaskBufferSize=function(t){at.clippingMaskBufferSize=t},at.getClippingMaskBufferSize=function(){return at.clippingMaskBufferSize},at.deleteBuffer=function(t){at.getGL(t).deleteFramebuffer(at.frameBuffers[t].framebuffer),delete at.frameBuffers[t],delete at.glContext[t]},ht._$r2=function(t){return t<0?0:t>1?1:.5-.5*Math.cos(t*Lt.PI_F)},lt._$fr=-1,lt.prototype.toString=function(){return this._$ib},$t.prototype=new W,$t._$42=0,$t._$Os=30,$t._$ms=0,$t._$ns=1,$t._$_s=2,$t._$gT=new Array,$t.prototype._$_S=function(t){this._$LP=t},$t.prototype.getTextureNo=function(){return this._$LP},$t.prototype._$ZL=function(){return this._$Qi},$t.prototype._$H2=function(){return this._$JP},$t.prototype.getNumPoints=function(){return this._$d0},$t.prototype.getType=function(){return W._$wb},$t.prototype._$B2=function(t,i,e){var r=i,o=null!=r._$hr?r._$hr:r._$Cr;switch(U._$do){default:case U._$Ms:throw new Error(\"_$L _$ro \");case U._$Qs:for(var n=this._$d0-1;n>=0;--n)o[n*U._$No+4]=e}},$t.prototype._$zP=function(){this._$GS=new D,this._$GS._$zP()},$t.prototype._$F0=function(t){W.prototype._$F0.call(this,t),this._$LP=t._$6L(),this._$d0=t._$6L(),this._$Yo=t._$6L();var i=t._$nP();this._$BP=new Int16Array(3*this._$Yo);for(var e=3*this._$Yo-1;e>=0;--e)this._$BP[e]=i[e];if(this._$Eo=t._$nP(),this._$Qi=t._$nP(),t.getFormatVersion()>=G._$s7){if(this._$JP=t._$6L(),0!=this._$JP){if(0!=(1&this._$JP)){var r=t._$6L();null==this._$5P&&(this._$5P=new Object),this._$5P._$Hb=parseInt(r)}0!=(this._$JP&$t._$Os)?this._$6s=(this._$JP&$t._$Os)>>1:this._$6s=$t._$ms,0!=(32&this._$JP)&&(this.culling=!1)}}else this._$JP=0},$t.prototype.init=function(t){var i=new ut(this),e=this._$d0*U._$No,r=this._$32();switch(null!=i._$Cr&&(i._$Cr=null),i._$Cr=new Float32Array(e),null!=i._$hr&&(i._$hr=null),i._$hr=r?new Float32Array(e):null,U._$do){default:case U._$Ms:if(U._$Ls)for(var o=this._$d0-1;o>=0;--o){var n=o<<1;this._$Qi[n+1]=1-this._$Qi[n+1]}break;case U._$Qs:for(var o=this._$d0-1;o>=0;--o){var n=o<<1,s=o*U._$No,_=this._$Qi[n],a=this._$Qi[n+1];i._$Cr[s]=_,i._$Cr[s+1]=a,i._$Cr[s+4]=0,r&&(i._$hr[s]=_,i._$hr[s+1]=a,i._$hr[s+4]=0)}}return i},$t.prototype._$Nr=function(t,i){var e=i;if(this!=e._$GT()&&console.log(\"### assert!! ### \"),this._$GS._$Ur(t)&&(W.prototype._$Nr.call(this,t,e),!e._$IS[0])){var r=$t._$gT;r[0]=!1,v._$Vr(t,this._$GS,r,this._$d0,this._$Eo,e._$Cr,U._$i2,U._$No)}},$t.prototype._$2b=function(t,i){try{this!=i._$GT()&&console.log(\"### assert!! ### \");var e=!1;i._$IS[0]&&(e=!0);var r=i;if(!e&&(W.prototype._$2b.call(this,t),this._$32())){var o=this.getTargetBaseDataID();if(r._$8r==W._$ur&&(r._$8r=t.getBaseDataIndex(o)),r._$8r<0)at._$so&&_._$li(\"_$L _$0P _$G :: %s\",o);else{var n=t.getBaseData(r._$8r),s=t._$q2(r._$8r);null==n||s._$x2()?r._$AT=!1:(n._$nb(t,s,r._$Cr,r._$hr,this._$d0,U._$i2,U._$No),r._$AT=!0),r.baseOpacity=s.getTotalOpacity()}}}catch(t){throw t}},$t.prototype.draw=function(t,i,e){if(this!=e._$GT()&&console.log(\"### assert!! ### \"),!e._$IS[0]){var r=e,o=this._$LP;o<0&&(o=1);var n=this.getOpacity(i,r)*e._$VS*e.baseOpacity,s=null!=r._$hr?r._$hr:r._$Cr;t.setClipBufPre_clipContextForDraw(e.clipBufPre_clipContext),t._$WP(this.culling),t._$Uo(o,3*this._$Yo,this._$BP,s,this._$Qi,n,this._$6s,r)}},$t.prototype.dump=function(){console.log(\"  _$yi( %d ) , _$d0( %d ) , _$Yo( %d ) \\n\",this._$LP,this._$d0,this._$Yo),console.log(\"  _$Oi _$di = { \");for(var t=0;t<this._$BP.length;t++)console.log(\"%5d ,\",this._$BP[t]);console.log(\"\\n  _$5i _$30\");for(var t=0;t<this._$Eo.length;t++){console.log(\"\\n    _$30[%d] = \",t);for(var i=this._$Eo[t],e=0;e<i.length;e++)console.log(\"%6.2f, \",i[e])}console.log(\"\\n\")},$t.prototype._$72=function(t){return null==this._$5P?null:this._$5P[t]},$t.prototype.getIndexArray=function(){return this._$BP},ut.prototype=new Mt,ut.prototype.getTransformedPoints=function(){return null!=this._$hr?this._$hr:this._$Cr},pt.prototype._$HT=function(t){this.x=t.x,this.y=t.y},pt.prototype._$HT=function(t,i){this.x=t,this.y=i},ft.prototype=new i,ft.loadModel=function(t){var e=new ft;return i._$62(e,t),e},ft.loadModel=function(t,e){var r=e||0,o=new ft(r);return i._$62(o,t),o},ft._$to=function(){return new ft},ft._$er=function(t){var i=new _$5(\"../_$_r/_$t0/_$Ri/_$_P._$d\");if(0==i.exists())throw new _$ls(\"_$t0 _$_ _$6 _$Ui :: \"+i._$PL());for(var e=[\"../_$_r/_$t0/_$Ri/_$_P.512/_$CP._$1\",\"../_$_r/_$t0/_$Ri/_$_P.512/_$vP._$1\",\"../_$_r/_$t0/_$Ri/_$_P.512/_$EP._$1\",\"../_$_r/_$t0/_$Ri/_$_P.512/_$pP._$1\"],r=ft.loadModel(i._$3b()),o=0;o<e.length;o++){var n=new _$5(e[o]);if(0==n.exists())throw new _$ls(\"_$t0 _$_ _$6 _$Ui :: \"+n._$PL());r.setTexture(o,_$nL._$_o(t,n._$3b()))}return r},ft.prototype.setGL=function(t){at.setGL(t)},ft.prototype.setTransform=function(t){this.drawParamWebGL.setTransform(t)},ft.prototype.update=function(){this._$5S.update(),this._$5S.preDraw(this.drawParamWebGL)},ft.prototype.draw=function(){this._$5S.draw(this.drawParamWebGL)},ft.prototype._$K2=function(){this.drawParamWebGL._$K2()},ft.prototype.setTexture=function(t,i){null==this.drawParamWebGL&&_._$li(\"_$Yi for QT _$ki / _$XS() is _$6 _$ui!!\"),this.drawParamWebGL.setTexture(t,i)},ft.prototype.setTexture=function(t,i){null==this.drawParamWebGL&&_._$li(\"_$Yi for QT _$ki / _$XS() is _$6 _$ui!!\"),this.drawParamWebGL.setTexture(t,i)},ft.prototype._$Rs=function(){return this.drawParamWebGL._$Rs()},ft.prototype._$Ds=function(t){this.drawParamWebGL._$Ds(t)},ft.prototype.getDrawParam=function(){return this.drawParamWebGL},ft.prototype.setMatrix=function(t){this.drawParamWebGL.setMatrix(t)},ft.prototype.setPremultipliedAlpha=function(t){this.drawParamWebGL.setPremultipliedAlpha(t)},ft.prototype.isPremultipliedAlpha=function(){return this.drawParamWebGL.isPremultipliedAlpha()},ft.prototype.setAnisotropy=function(t){this.drawParamWebGL.setAnisotropy(t)},ft.prototype.getAnisotropy=function(){return this.drawParamWebGL.getAnisotropy()},ct.prototype._$tb=function(){return this.motions},ct.prototype.startMotion=function(t,i){for(var e=null,r=this.motions.length,o=0;o<r;++o)null!=(e=this.motions[o])&&(e._$qS(e._$w0.getFadeOut()),this._$eb&&_._$Ji(\"MotionQueueManager[size:%2d]->startMotion() / start _$K _$3 (m%d)\\n\",r,e._$sr));if(null==t)return-1;e=new dt,e._$w0=t,this.motions.push(e);var n=e._$sr;return this._$eb&&_._$Ji(\"MotionQueueManager[size:%2d]->startMotion() / new _$w0 (m%d)\\n\",r,n),n},ct.prototype.updateParam=function(t){try{for(var i=!1,e=0;e<this.motions.length;e++){var r=this.motions[e];if(null!=r){var o=r._$w0;null!=o?(o.updateParam(t,r),i=!0,r.isFinished()&&(this._$eb&&_._$Ji(\"MotionQueueManager[size:%2d]->updateParam() / _$T0 _$w0 (m%d)\\n\",this.motions.length-1,r._$sr),this.motions.splice(e,1),e--)):(this.motions=this.motions.splice(e,1),e--)}else this.motions.splice(e,1),e--}return i}catch(t){return _._$li(t),!0}},ct.prototype.isFinished=function(t){if(arguments.length>=1){for(var i=0;i<this.motions.length;i++){var e=this.motions[i];if(null!=e&&(e._$sr==t&&!e.isFinished()))return!1}return!0}for(var i=0;i<this.motions.length;i++){var e=this.motions[i];if(null!=e){if(null!=e._$w0){if(!e.isFinished())return!1}else this.motions.splice(i,1),i--}else this.motions.splice(i,1),i--}return!0},ct.prototype.stopAllMotions=function(){for(var t=0;t<this.motions.length;t++){var i=this.motions[t];if(null!=i){i._$w0;this.motions.splice(t,1),t--}else this.motions.splice(t,1),t--}},ct.prototype._$Zr=function(t){this._$eb=t},ct.prototype._$e=function(){console.log(\"-- _$R --\\n\");for(var t=0;t<this.motions.length;t++){var i=this.motions[t],e=i._$w0;console.log(\"MotionQueueEnt[%d] :: %s\\n\",this.motions.length,e.toString())}},dt._$Gs=0,dt.prototype.isFinished=function(){return this._$9L},dt.prototype._$qS=function(t){var i=w.getUserTimeMSec(),e=i+t;(this._$Do<0||e<this._$Do)&&(this._$Do=e)},dt.prototype._$Bs=function(){return this._$sr},gt.prototype.setContext=function(t){var i=this.m;t.transform(i[0],i[1],i[3],i[4],i[6],i[7])},gt.prototype.toString=function(){for(var t=\"LDTransform { \",i=0;i<9;i++)t+=this.m[i].toFixed(2)+\" ,\";return t+=\" }\"},gt.prototype.identity=function(){var t=this.m;t[0]=t[4]=t[8]=1,t[1]=t[2]=t[3]=t[5]=t[6]=t[7]=0},gt.prototype._$PS=function(t,i,e){null==e&&(e=new Array(0,0));var r=this.m;return e[0]=r[0]*t+r[3]*i+r[6],e[1]=r[1]*t+r[4]*i+r[7],e},gt.prototype._$P2=function(t){t||(t=new gt);var i=this.m,e=i[0],r=i[1],o=i[2],n=i[3],s=i[4],_=i[5],a=i[6],h=i[7],l=i[8],$=e*s*l+r*_*a+o*n*h-e*_*h-o*s*a-r*n*l;if(0==$)return null;var u=1/$;return t.m[0]=u*(s*l-h*_),t.m[1]=u*(h*o-r*l),t.m[2]=u*(r*_-s*o),t.m[3]=u*(a*_-n*l),t.m[4]=u*(e*l-a*o),t.m[5]=u*(n*o-e*_),t.m[6]=u*(n*h-a*s),t.m[7]=u*(a*r-e*h),t.m[8]=u*(e*s-n*r),t},gt.prototype.transform=function(t,i,e){null==e&&(e=new Array(0,0));var r=this.m;return e[0]=r[0]*t+r[3]*i+r[6],e[1]=r[1]*t+r[4]*i+r[7],e},gt.prototype.translate=function(t,i){var e=this.m;e[6]=e[0]*t+e[3]*i+e[6],e[7]=e[1]*t+e[4]*i+e[7],e[8]=e[2]*t+e[5]*i+e[8]},gt.prototype.scale=function(t,i){var e=this.m;e[0]*=t,e[1]*=t,e[2]*=t,e[3]*=i,e[4]*=i,e[5]*=i},gt.prototype.shear=function(t,i){var e=this.m,r=e[0]+e[3]*i,o=e[1]+e[4]*i,n=e[2]+e[5]*i;e[3]=e[0]*t+e[3],e[4]=e[1]*t+e[4],e[5]=e[2]*t+e[5],e[0]=r,e[1]=o,e[2]=n},gt.prototype.rotate=function(t){var i=this.m,e=Math.cos(t),r=Math.sin(t),o=i[0]*e+i[3]*r,n=i[1]*e+i[4]*r,s=i[2]*e+i[5]*r;i[3]=-i[0]*r+i[3]*e,i[4]=-i[1]*r+i[4]*e,i[5]=-i[2]*r+i[5]*e,i[0]=o,i[1]=n,i[2]=s},gt.prototype.concatenate=function(t){var i=this.m,e=t.m,r=i[0]*e[0]+i[3]*e[1]+i[6]*e[2],o=i[1]*e[0]+i[4]*e[1]+i[7]*e[2],n=i[2]*e[0]+i[5]*e[1]+i[8]*e[2],s=i[0]*e[3]+i[3]*e[4]+i[6]*e[5],_=i[1]*e[3]+i[4]*e[4]+i[7]*e[5],a=i[2]*e[3]+i[5]*e[4]+i[8]*e[5],h=i[0]*e[6]+i[3]*e[7]+i[6]*e[8],l=i[1]*e[6]+i[4]*e[7]+i[7]*e[8],$=i[2]*e[6]+i[5]*e[7]+i[8]*e[8];m[0]=r,m[1]=o,m[2]=n,m[3]=s,m[4]=_,m[5]=a,m[6]=h,m[7]=l,m[8]=$},yt.prototype=new et,yt._$eT=null,yt._$tP=new Object,yt._$2o=function(){return null==yt._$eT&&(yt._$eT=yt.getID(\"DST_BASE\")),yt._$eT},yt._$27=function(){yt._$tP.clear(),yt._$eT=null},yt.getID=function(t){var i=yt._$tP[t];return null==i&&(i=new yt(t),yt._$tP[t]=i),i},yt.prototype._$3s=function(){return new yt},mt.prototype=new E,mt._$9r=function(t){return new Float32Array(t)},mt._$vb=function(t){return new Int16Array(t)},mt._$cr=function(t,i){return null==t||t._$yL()<i.length?(t=mt._$9r(2*i.length),t.put(i),t._$oT(0)):(t.clear(),t.put(i),t._$oT(0)),t},mt._$mb=function(t,i){return null==t||t._$yL()<i.length?(t=mt._$vb(2*i.length),t.put(i),t._$oT(0)):(t.clear(),t.put(i),t._$oT(0)),t},mt._$Hs=function(){return this._$Gr},mt._$as=function(t){this._$Gr=t},mt.prototype.getGL=function(){return this.gl},mt.prototype.setGL=function(t){this.gl=t},mt.prototype.setTransform=function(t){this.transform=t},mt.prototype._$ZT=function(){var t=this.gl;this.firstDraw&&(this.initShader(),this.firstDraw=!1,this.anisotropyExt=t.getExtension(\"EXT_texture_filter_anisotropic\")||t.getExtension(\"WEBKIT_EXT_texture_filter_anisotropic\")||t.getExtension(\"MOZ_EXT_texture_filter_anisotropic\"),this.anisotropyExt&&(this.maxAnisotropy=t.getParameter(this.anisotropyExt.MAX_TEXTURE_MAX_ANISOTROPY_EXT))),t.disable(t.SCISSOR_TEST),t.disable(t.STENCIL_TEST),t.disable(t.DEPTH_TEST),t.frontFace(t.CW),t.enable(t.BLEND),t.colorMask(1,1,1,1),t.bindBuffer(t.ARRAY_BUFFER,null),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null)},mt.prototype._$Uo=function(t,i,e,r,o,n,s,_){if(!(n<.01&&null==this.clipBufPre_clipContextMask)){var a=(n>.9&&at.EXPAND_W,this.gl);if(null==this.gl)throw new Error(\"gl is null\");var h=1*this._$C0*n,l=1*this._$tT*n,$=1*this._$WL*n,u=this._$lT*n;if(null!=this.clipBufPre_clipContextMask){a.frontFace(a.CCW),a.useProgram(this.shaderProgram),this._$vS=Tt(a,this._$vS,r),this._$no=Pt(a,this._$no,e),a.enableVertexAttribArray(this.a_position_Loc),a.vertexAttribPointer(this.a_position_Loc,2,a.FLOAT,!1,0,0),this._$NT=Tt(a,this._$NT,o),a.activeTexture(a.TEXTURE1),a.bindTexture(a.TEXTURE_2D,this.textures[t]),a.uniform1i(this.s_texture0_Loc,1),a.enableVertexAttribArray(this.a_texCoord_Loc),a.vertexAttribPointer(this.a_texCoord_Loc,2,a.FLOAT,!1,0,0),a.uniformMatrix4fv(this.u_matrix_Loc,!1,this.getClipBufPre_clipContextMask().matrixForMask);var p=this.getClipBufPre_clipContextMask().layoutChannelNo,f=this.getChannelFlagAsColor(p);a.uniform4f(this.u_channelFlag,f.r,f.g,f.b,f.a);var c=this.getClipBufPre_clipContextMask().layoutBounds;a.uniform4f(this.u_baseColor_Loc,2*c.x-1,2*c.y-1,2*c._$EL()-1,2*c._$5T()-1),a.uniform1i(this.u_maskFlag_Loc,!0)}else if(null!=this.getClipBufPre_clipContextDraw()){a.useProgram(this.shaderProgramOff),this._$vS=Tt(a,this._$vS,r),this._$no=Pt(a,this._$no,e),a.enableVertexAttribArray(this.a_position_Loc_Off),a.vertexAttribPointer(this.a_position_Loc_Off,2,a.FLOAT,!1,0,0),this._$NT=Tt(a,this._$NT,o),a.activeTexture(a.TEXTURE1),a.bindTexture(a.TEXTURE_2D,this.textures[t]),a.uniform1i(this.s_texture0_Loc_Off,1),a.enableVertexAttribArray(this.a_texCoord_Loc_Off),a.vertexAttribPointer(this.a_texCoord_Loc_Off,2,a.FLOAT,!1,0,0),a.uniformMatrix4fv(this.u_clipMatrix_Loc_Off,!1,this.getClipBufPre_clipContextDraw().matrixForDraw),a.uniformMatrix4fv(this.u_matrix_Loc_Off,!1,this.matrix4x4),a.activeTexture(a.TEXTURE2),a.bindTexture(a.TEXTURE_2D,at.fTexture[this.glno]),a.uniform1i(this.s_texture1_Loc_Off,2);var p=this.getClipBufPre_clipContextDraw().layoutChannelNo,f=this.getChannelFlagAsColor(p);a.uniform4f(this.u_channelFlag_Loc_Off,f.r,f.g,f.b,f.a),a.uniform4f(this.u_baseColor_Loc_Off,h,l,$,u)}else a.useProgram(this.shaderProgram),this._$vS=Tt(a,this._$vS,r),this._$no=Pt(a,this._$no,e),a.enableVertexAttribArray(this.a_position_Loc),a.vertexAttribPointer(this.a_position_Loc,2,a.FLOAT,!1,0,0),this._$NT=Tt(a,this._$NT,o),a.activeTexture(a.TEXTURE1),a.bindTexture(a.TEXTURE_2D,this.textures[t]),a.uniform1i(this.s_texture0_Loc,1),a.enableVertexAttribArray(this.a_texCoord_Loc),a.vertexAttribPointer(this.a_texCoord_Loc,2,a.FLOAT,!1,0,0),a.uniformMatrix4fv(this.u_matrix_Loc,!1,this.matrix4x4),a.uniform4f(this.u_baseColor_Loc,h,l,$,u),a.uniform1i(this.u_maskFlag_Loc,!1);this.culling?this.gl.enable(a.CULL_FACE):this.gl.disable(a.CULL_FACE),this.gl.enable(a.BLEND);var d,g,y,m;if(null!=this.clipBufPre_clipContextMask)d=a.ONE,g=a.ONE_MINUS_SRC_ALPHA,y=a.ONE,m=a.ONE_MINUS_SRC_ALPHA;else switch(s){case $t._$ms:d=a.ONE,g=a.ONE_MINUS_SRC_ALPHA,y=a.ONE,m=a.ONE_MINUS_SRC_ALPHA;break;case $t._$ns:d=a.ONE,g=a.ONE,y=a.ZERO,m=a.ONE;break;case $t._$_s:d=a.DST_COLOR,g=a.ONE_MINUS_SRC_ALPHA,y=a.ZERO,m=a.ONE}a.blendEquationSeparate(a.FUNC_ADD,a.FUNC_ADD),a.blendFuncSeparate(d,g,y,m),this.anisotropyExt&&a.texParameteri(a.TEXTURE_2D,this.anisotropyExt.TEXTURE_MAX_ANISOTROPY_EXT,this.maxAnisotropy);var T=e.length;a.drawElements(a.TRIANGLES,T,a.UNSIGNED_SHORT,0),a.bindTexture(a.TEXTURE_2D,null)}},mt.prototype._$Rs=function(){throw new Error(\"_$Rs\")},mt.prototype._$Ds=function(t){throw new Error(\"_$Ds\")},mt.prototype._$K2=function(){for(var t=0;t<this.textures.length;t++){0!=this.textures[t]&&(this.gl._$K2(1,this.textures,t),this.textures[t]=null)}},mt.prototype.setTexture=function(t,i){this.textures[t]=i},mt.prototype.initShader=function(){var t=this.gl;this.loadShaders2(),this.a_position_Loc=t.getAttribLocation(this.shaderProgram,\"a_position\"),this.a_texCoord_Loc=t.getAttribLocation(this.shaderProgram,\"a_texCoord\"),this.u_matrix_Loc=t.getUniformLocation(this.shaderProgram,\"u_mvpMatrix\"),this.s_texture0_Loc=t.getUniformLocation(this.shaderProgram,\"s_texture0\"),this.u_channelFlag=t.getUniformLocation(this.shaderProgram,\"u_channelFlag\"),this.u_baseColor_Loc=t.getUniformLocation(this.shaderProgram,\"u_baseColor\"),this.u_maskFlag_Loc=t.getUniformLocation(this.shaderProgram,\"u_maskFlag\"),this.a_position_Loc_Off=t.getAttribLocation(this.shaderProgramOff,\"a_position\"),this.a_texCoord_Loc_Off=t.getAttribLocation(this.shaderProgramOff,\"a_texCoord\"),this.u_matrix_Loc_Off=t.getUniformLocation(this.shaderProgramOff,\"u_mvpMatrix\"),this.u_clipMatrix_Loc_Off=t.getUniformLocation(this.shaderProgramOff,\"u_ClipMatrix\"),this.s_texture0_Loc_Off=t.getUniformLocation(this.shaderProgramOff,\"s_texture0\"),this.s_texture1_Loc_Off=t.getUniformLocation(this.shaderProgramOff,\"s_texture1\"),this.u_channelFlag_Loc_Off=t.getUniformLocation(this.shaderProgramOff,\"u_channelFlag\"),this.u_baseColor_Loc_Off=t.getUniformLocation(this.shaderProgramOff,\"u_baseColor\")},mt.prototype.disposeShader=function(){var t=this.gl;this.shaderProgram&&(t.deleteProgram(this.shaderProgram),this.shaderProgram=null),this.shaderProgramOff&&(t.deleteProgram(this.shaderProgramOff),this.shaderProgramOff=null)},mt.prototype.compileShader=function(t,i){var e=this.gl,r=i,o=e.createShader(t);if(null==o)return _._$Ji(\"_$L0 to create shader\"),null;if(e.shaderSource(o,r),e.compileShader(o),!e.getShaderParameter(o,e.COMPILE_STATUS)){var n=e.getShaderInfoLog(o);return _._$Ji(\"_$L0 to compile shader : \"+n),e.deleteShader(o),null}return o},mt.prototype.loadShaders2=function(){var t=this.gl;if(this.shaderProgram=t.createProgram(),!this.shaderProgram)return!1;if(this.shaderProgramOff=t.createProgram(),!this.shaderProgramOff)return!1;if(this.vertShader=this.compileShader(t.VERTEX_SHADER,\"attribute vec4     a_position;attribute vec2     a_texCoord;varying vec2       v_texCoord;varying vec4       v_ClipPos;uniform mat4       u_mvpMatrix;void main(){    gl_Position = u_mvpMatrix * a_position;    v_ClipPos = u_mvpMatrix * a_position;    v_texCoord = a_texCoord;}\"),!this.vertShader)return _._$Ji(\"Vertex shader compile _$li!\"),!1;if(this.vertShaderOff=this.compileShader(t.VERTEX_SHADER,\"attribute vec4     a_position;attribute vec2     a_texCoord;varying vec2       v_texCoord;varying vec4       v_ClipPos;uniform mat4       u_mvpMatrix;uniform mat4       u_ClipMatrix;void main(){    gl_Position = u_mvpMatrix * a_position;    v_ClipPos = u_ClipMatrix * a_position;    v_texCoord = a_texCoord ;}\"),!this.vertShaderOff)return _._$Ji(\"OffVertex shader compile _$li!\"),!1;if(this.fragShader=this.compileShader(t.FRAGMENT_SHADER,\"precision mediump float;varying vec2       v_texCoord;varying vec4       v_ClipPos;uniform sampler2D  s_texture0;uniform vec4       u_channelFlag;uniform vec4       u_baseColor;uniform bool       u_maskFlag;void main(){    vec4 smpColor;     if(u_maskFlag){        float isInside =             step(u_baseColor.x, v_ClipPos.x/v_ClipPos.w)          * step(u_baseColor.y, v_ClipPos.y/v_ClipPos.w)          * step(v_ClipPos.x/v_ClipPos.w, u_baseColor.z)          * step(v_ClipPos.y/v_ClipPos.w, u_baseColor.w);        smpColor = u_channelFlag * texture2D(s_texture0 , v_texCoord).a * isInside;    }else{        smpColor = texture2D(s_texture0 , v_texCoord) * u_baseColor;    }    gl_FragColor = smpColor;}\"),!this.fragShader)return _._$Ji(\"Fragment shader compile _$li!\"),!1;if(this.fragShaderOff=this.compileShader(t.FRAGMENT_SHADER,\"precision mediump float ;varying vec2       v_texCoord;varying vec4       v_ClipPos;uniform sampler2D  s_texture0;uniform sampler2D  s_texture1;uniform vec4       u_channelFlag;uniform vec4       u_baseColor ;void main(){    vec4 col_formask = texture2D(s_texture0, v_texCoord) * u_baseColor;    vec4 clipMask = texture2D(s_texture1, v_ClipPos.xy / v_ClipPos.w) * u_channelFlag;    float maskVal = clipMask.r + clipMask.g + clipMask.b + clipMask.a;    col_formask = col_formask * maskVal;    gl_FragColor = col_formask;}\"),!this.fragShaderOff)return _._$Ji(\"OffFragment shader compile _$li!\"),!1;if(t.attachShader(this.shaderProgram,this.vertShader),t.attachShader(this.shaderProgram,this.fragShader),t.attachShader(this.shaderProgramOff,this.vertShaderOff),t.attachShader(this.shaderProgramOff,this.fragShaderOff),t.linkProgram(this.shaderProgram),t.linkProgram(this.shaderProgramOff),!t.getProgramParameter(this.shaderProgram,t.LINK_STATUS)){var i=t.getProgramInfoLog(this.shaderProgram);return _._$Ji(\"_$L0 to link program: \"+i),this.vertShader&&(t.deleteShader(this.vertShader),this.vertShader=0),this.fragShader&&(t.deleteShader(this.fragShader),this.fragShader=0),this.shaderProgram&&(t.deleteProgram(this.shaderProgram),this.shaderProgram=0),this.vertShaderOff&&(t.deleteShader(this.vertShaderOff),this.vertShaderOff=0),this.fragShaderOff&&(t.deleteShader(this.fragShaderOff),this.fragShaderOff=0),this.shaderProgramOff&&(t.deleteProgram(this.shaderProgramOff),this.shaderProgramOff=0),!1}return!0},mt.prototype.createFramebuffer=function(){var t=this.gl,i=at.clippingMaskBufferSize,e=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,e);var r=t.createRenderbuffer();t.bindRenderbuffer(t.RENDERBUFFER,r),t.renderbufferStorage(t.RENDERBUFFER,t.RGBA4,i,i),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.RENDERBUFFER,r);var o=t.createTexture();return t.bindTexture(t.TEXTURE_2D,o),t.texImage2D(t.TEXTURE_2D,0,t.RGBA,i,i,0,t.RGBA,t.UNSIGNED_BYTE,null),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.LINEAR),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.LINEAR),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,o,0),t.bindTexture(t.TEXTURE_2D,null),t.bindRenderbuffer(t.RENDERBUFFER,null),t.bindFramebuffer(t.FRAMEBUFFER,null),at.fTexture[this.glno]=o,{framebuffer:e,renderbuffer:r,texture:at.fTexture[this.glno]}},St.prototype._$fP=function(){var t,i,e,r=this._$ST();if(0==(128&r))return 255&r;if(0==(128&(t=this._$ST())))return(127&r)<<7|127&t;if(0==(128&(i=this._$ST())))return(127&r)<<14|(127&t)<<7|255&i;if(0==(128&(e=this._$ST())))return(127&r)<<21|(127&t)<<14|(127&i)<<7|255&e;throw new lt(\"_$L _$0P  _\")},St.prototype.getFormatVersion=function(){return this._$S2},St.prototype._$gr=function(t){this._$S2=t},St.prototype._$3L=function(){return this._$fP()},St.prototype._$mP=function(){return this._$zT(),this._$F+=8,this._$T.getFloat64(this._$F-8)},St.prototype._$_T=function(){return this._$zT(),this._$F+=4,this._$T.getFloat32(this._$F-4)},St.prototype._$6L=function(){return this._$zT(),this._$F+=4,this._$T.getInt32(this._$F-4)},St.prototype._$ST=function(){return this._$zT(),this._$T.getInt8(this._$F++)},St.prototype._$9T=function(){return this._$zT(),this._$F+=2,this._$T.getInt16(this._$F-2)},St.prototype._$2T=function(){throw this._$zT(),this._$F+=8,new lt(\"_$L _$q read long\")},St.prototype._$po=function(){return this._$zT(),0!=this._$T.getInt8(this._$F++)};var xt=!0;St.prototype._$bT=function(){this._$zT();var t=this._$3L(),i=null;if(xt)try{var e=new ArrayBuffer(2*t);i=new Uint16Array(e);for(var r=0;r<t;++r)i[r]=this._$T.getUint8(this._$F++);return String.fromCharCode.apply(null,i)}catch(t){xt=!1}try{var o=new Array;if(null==i)for(var r=0;r<t;++r)o[r]=this._$T.getUint8(this._$F++);else for(var r=0;r<t;++r)o[r]=i[r];return String.fromCharCode.apply(null,o)}catch(t){console.log(\"read utf8 / _$rT _$L0 !! : \"+t)}},St.prototype._$cS=function(){this._$zT();for(var t=this._$3L(),i=new Int32Array(t),e=0;e<t;e++)i[e]=this._$T.getInt32(this._$F),this._$F+=4;return i},St.prototype._$Tb=function(){this._$zT();for(var t=this._$3L(),i=new Float32Array(t),e=0;e<t;e++)i[e]=this._$T.getFloat32(this._$F),this._$F+=4;return i},St.prototype._$5b=function(){this._$zT();for(var t=this._$3L(),i=new Float64Array(t),e=0;e<t;e++)i[e]=this._$T.getFloat64(this._$F),this._$F+=8;return i},St.prototype._$nP=function(){return this._$Jb(-1)},St.prototype._$Jb=function(t){if(this._$zT(),t<0&&(t=this._$3L()),t==G._$7P){var i=this._$6L();if(0<=i&&i<this._$Ko.length)return this._$Ko[i];throw new lt(\"_$sL _$4i @_$m0\")}var e=this._$4b(t);return this._$Ko.push(e),e},St.prototype._$4b=function(t){if(0==t)return null;if(50==t){var i=this._$bT(),e=b.getID(i);return e}if(51==t){var i=this._$bT(),e=yt.getID(i);return e}if(134==t){var i=this._$bT(),e=l.getID(i);return e}if(60==t){var i=this._$bT(),e=u.getID(i);return e}if(t>=48){var r=G._$9o(t);return null!=r?(r._$F0(this),r):null}switch(t){case 1:return this._$bT();case 10:return new n(this._$6L(),!0);case 11:return new S(this._$mP(),this._$mP(),this._$mP(),this._$mP());case 12:return new S(this._$_T(),this._$_T(),this._$_T(),this._$_T());case 13:return new L(this._$mP(),this._$mP());case 14:return new L(this._$_T(),this._$_T());case 15:for(var o=this._$3L(),e=new Array(o),s=0;s<o;s++)e[s]=this._$nP();return e;case 17:var e=new F(this._$mP(),this._$mP(),this._$mP(),this._$mP(),this._$mP(),this._$mP());return e;case 21:return new h(this._$6L(),this._$6L(),this._$6L(),this._$6L());case 22:return new pt(this._$6L(),this._$6L());case 23:throw new Error(\"_$L _$ro \");case 16:case 25:return this._$cS();case 26:return this._$5b();case 27:return this._$Tb();case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 18:case 19:case 20:case 24:case 28:throw new lt(\"_$6 _$q : _$nP() of 2-9 ,18,19,20,24,28 : \"+t);default:throw new lt(\"_$6 _$q : _$nP() NO _$i : \"+t)}},St.prototype._$8L=function(){return 0==this._$hL?this._$v0=this._$ST():8==this._$hL&&(this._$v0=this._$ST(),this._$hL=0),1==(this._$v0>>7-this._$hL++&1)},St.prototype._$zT=function(){0!=this._$hL&&(this._$hL=0)},vt.prototype._$wP=function(t,i,e){for(var r=0;r<e;r++){for(var o=0;o<i;o++){var n=2*(o+r*i);console.log(\"(% 7.3f , % 7.3f) , \",t[n],t[n+1])}console.log(\"\\n\")}console.log(\"\\n\")},Lt._$2S=Math.PI/180,Lt._$bS=Math.PI/180,Lt._$wS=180/Math.PI,Lt._$NS=180/Math.PI,Lt.PI_F=Math.PI,Lt._$kT=[0,.012368,.024734,.037097,.049454,.061803,.074143,.086471,.098786,.111087,.12337,.135634,.147877,.160098,.172295,.184465,.196606,.208718,.220798,.232844,.244854,.256827,.268761,.280654,.292503,.304308,.316066,.327776,.339436,.351044,.362598,.374097,.385538,.396921,.408243,.419502,.430697,.441826,.452888,.463881,.474802,.485651,.496425,.507124,.517745,.528287,.538748,.549126,.559421,.56963,.579752,.589785,.599728,.609579,.619337,.629,.638567,.648036,.657406,.666676,.675843,.684908,.693867,.70272,.711466,.720103,.72863,.737045,.745348,.753536,.76161,.769566,.777405,.785125,.792725,.800204,.807561,.814793,.821901,.828884,.835739,.842467,.849066,.855535,.861873,.868079,.874153,.880093,.885898,.891567,.897101,.902497,.907754,.912873,.917853,.922692,.92739,.931946,.936359,.940629,.944755,.948737,.952574,.956265,.959809,.963207,.966457,.96956,.972514,.97532,.977976,.980482,.982839,.985045,.987101,.989006,.990759,.992361,.993811,.995109,.996254,.997248,.998088,.998776,.999312,.999694,.999924,1],Lt._$92=function(t,i){var e=Math.atan2(t[1],t[0]),r=Math.atan2(i[1],i[0]);return Lt._$tS(e,r)},Lt._$tS=function(t,i){for(var e=t-i;e<-Math.PI;)e+=2*Math.PI;for(;e>Math.PI;)e-=2*Math.PI;return e},Lt._$9=function(t){return Math.sin(t)},Lt.fcos=function(t){return Math.cos(t)},Mt.prototype._$u2=function(){return this._$IS[0]},Mt.prototype._$yo=function(){return this._$AT&&!this._$IS[0]},Mt.prototype._$GT=function(){return this._$e0},Et._$W2=0,Et.SYSTEM_INFO=null,Et.USER_AGENT=navigator.userAgent,Et.isIPhone=function(){return Et.SYSTEM_INFO||Et.setup(),Et.SYSTEM_INFO._isIPhone},Et.isIOS=function(){return Et.SYSTEM_INFO||Et.setup(),Et.SYSTEM_INFO._isIPhone||Et.SYSTEM_INFO._isIPad},Et.isAndroid=function(){return Et.SYSTEM_INFO||Et.setup(),Et.SYSTEM_INFO._isAndroid},Et.getOSVersion=function(){return Et.SYSTEM_INFO||Et.setup(),Et.SYSTEM_INFO.version},Et.getOS=function(){return Et.SYSTEM_INFO||Et.setup(),Et.SYSTEM_INFO._isIPhone||Et.SYSTEM_INFO._isIPad?\"iOS\":Et.SYSTEM_INFO._isAndroid?\"Android\":\"_$Q0 OS\"},Et.setup=function(){function t(t,i){for(var e=t.substring(i).split(/[ _,;\\.]/),r=0,o=0;o<=2&&!isNaN(e[o]);o++){var n=parseInt(e[o]);if(n<0||n>999){_._$li(\"err : \"+n+\" @UtHtml5.setup()\"),r=0;break}r+=n*Math.pow(1e3,2-o)}return r}var i,e=Et.USER_AGENT,r=Et.SYSTEM_INFO={userAgent:e};if((i=e.indexOf(\"iPhone OS \"))>=0)r.os=\"iPhone\",r._isIPhone=!0,r.version=t(e,i+\"iPhone OS \".length);else if((i=e.indexOf(\"iPad\"))>=0){if((i=e.indexOf(\"CPU OS\"))<0)return void _._$li(\" err : \"+e+\" @UtHtml5.setup()\");r.os=\"iPad\",r._isIPad=!0,r.version=t(e,i+\"CPU OS \".length)}else(i=e.indexOf(\"Android\"))>=0?(r.os=\"Android\",r._isAndroid=!0,r.version=t(e,i+\"Android \".length)):(r.os=\"-\",r.version=-1)},window.UtSystem=w,window.UtDebug=_,window.LDTransform=gt,window.LDGL=nt,window.Live2D=at,window.Live2DModelWebGL=ft,window.Live2DModelJS=q,window.Live2DMotion=J,window.MotionQueueManager=ct,window.PhysicsHair=f,window.AMotion=s,window.PartsDataID=l,window.DrawDataID=b,window.BaseDataID=yt,window.ParamID=u,at.init();var At=!1}()}).call(i,e(7))},function(t,i){t.exports={import:function(){throw new Error(\"System.import cannot be used indirectly\")}}},function(t,i,e){\"use strict\";function r(t){return t&&t.__esModule?t:{default:t}}function o(){this.models=[],this.count=-1,this.reloadFlg=!1,Live2D.init(),n.Live2DFramework.setPlatformManager(new _.default)}Object.defineProperty(i,\"__esModule\",{value:!0}),i.default=o;var n=e(0),s=e(9),_=r(s),a=e(10),h=r(a),l=e(1),$=r(l);o.prototype.createModel=function(){var t=new h.default;return this.models.push(t),t},o.prototype.changeModel=function(t,i){if(this.reloadFlg){this.reloadFlg=!1;this.releaseModel(0,t),this.createModel(),this.models[0].load(t,i)}},o.prototype.getModel=function(t){return t>=this.models.length?null:this.models[t]},o.prototype.releaseModel=function(t,i){this.models.length<=t||(this.models[t].release(i),delete this.models[t],this.models.splice(t,1))},o.prototype.numModels=function(){return this.models.length},o.prototype.setDrag=function(t,i){for(var e=0;e<this.models.length;e++)this.models[e].setDrag(t,i)},o.prototype.maxScaleEvent=function(){$.default.DEBUG_LOG&&console.log(\"Max scale event.\");for(var t=0;t<this.models.length;t++)this.models[t].startRandomMotion($.default.MOTION_GROUP_PINCH_IN,$.default.PRIORITY_NORMAL)},o.prototype.minScaleEvent=function(){$.default.DEBUG_LOG&&console.log(\"Min scale event.\");for(var t=0;t<this.models.length;t++)this.models[t].startRandomMotion($.default.MOTION_GROUP_PINCH_OUT,$.default.PRIORITY_NORMAL)},o.prototype.tapEvent=function(t,i){$.default.DEBUG_LOG&&console.log(\"tapEvent view x:\"+t+\" y:\"+i);for(var e=0;e<this.models.length;e++)this.models[e].hitTest($.default.HIT_AREA_HEAD,t,i)?($.default.DEBUG_LOG&&console.log(\"Tap face.\"),this.models[e].setRandomExpression()):this.models[e].hitTest($.default.HIT_AREA_BODY,t,i)?($.default.DEBUG_LOG&&console.log(\"Tap body. models[\"+e+\"]\"),this.models[e].startRandomMotion($.default.MOTION_GROUP_TAP_BODY,$.default.PRIORITY_NORMAL)):this.models[e].hitTestCustom(\"head\",t,i)?($.default.DEBUG_LOG&&console.log(\"Tap face.\"),this.models[e].startRandomMotion($.default.MOTION_GROUP_FLICK_HEAD,$.default.PRIORITY_NORMAL)):this.models[e].hitTestCustom(\"body\",t,i)&&($.default.DEBUG_LOG&&console.log(\"Tap body. models[\"+e+\"]\"),this.models[e].startRandomMotion($.default.MOTION_GROUP_TAP_BODY,$.default.PRIORITY_NORMAL));return!0}},function(t,i,e){\"use strict\";function r(){}Object.defineProperty(i,\"__esModule\",{value:!0}),i.default=r;var o=e(2);var requestCache={};r.prototype.loadBytes=function(t,i){if(requestCache[t]!==undefined){i(requestCache[t]);return;}var e=new XMLHttpRequest;e.open(\"GET\",t,!0),e.responseType=\"arraybuffer\",e.onload=function(){switch(e.status){case 200:requestCache[t]=e.response;i(e.response);break;default:console.error(\"Failed to load (\"+e.status+\") : \"+t)}},e.send(null)},r.prototype.loadString=function(t){this.loadBytes(t,function(t){return t})},r.prototype.loadLive2DModel=function(t,i){var e=null;this.loadBytes(t,function(t){e=Live2DModelWebGL.loadModel(t),i(e)})},r.prototype.loadTexture=function(t,i,e,r){var n=new Image;n.crossOrigin=\"Anonymous\",n.src=e;n.onload=function(){var e=(0,o.getContext)(),s=e.createTexture();if(!s)return console.error(\"Failed to generate gl texture name.\"),-1;0==t.isPremultipliedAlpha()&&e.pixelStorei(e.UNPACK_PREMULTIPLY_ALPHA_WEBGL,1),e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,1),e.activeTexture(e.TEXTURE0),e.bindTexture(e.TEXTURE_2D,s),e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.LINEAR),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.LINEAR_MIPMAP_NEAREST),e.generateMipmap(e.TEXTURE_2D),t.setTexture(i,s),s=null,\"function\"==typeof r&&r()},n.onerror=function(){console.error(\"Failed to load image : \"+e)}},r.prototype.jsonParseFromBytes=function(t){var i,e=new Uint8Array(t,0,3);return i=239==e[0]&&187==e[1]&&191==e[2]?String.fromCharCode.apply(null,new Uint8Array(t,3)):String.fromCharCode.apply(null,new Uint8Array(t)),JSON.parse(i)},r.prototype.log=function(t){}},function(t,i,e){\"use strict\";function r(t){return t&&t.__esModule?t:{default:t}}function o(){n.L2DBaseModel.prototype.constructor.call(this),this.modelHomeDir=\"\",this.modelSetting=null,this.tmpMatrix=[]}Object.defineProperty(i,\"__esModule\",{value:!0}),i.default=o;var n=e(0),s=e(11),_=r(s),a=e(1),h=r(a),l=e(3),$=r(l);o.prototype=new n.L2DBaseModel,o.prototype.load=function(t,i,e){this.setUpdating(!0),this.setInitialized(!1),this.modelHomeDir=i.substring(0,i.lastIndexOf(\"/\")+1),this.modelSetting=new _.default;var r=this;this.modelSetting.loadModelSetting(i,function(){var t=r.modelHomeDir+r.modelSetting.getModelFile();r.loadModelData(t,function(t){for(var i=0;i<r.modelSetting.getTextureNum();i++){if(/^https?:\\/\\/|^\\/\\//i.test(r.modelSetting.getTextureFile(i)))var o=r.modelSetting.getTextureFile(i);else var o=r.modelHomeDir+r.modelSetting.getTextureFile(i);r.loadTexture(i,o,function(){if(r.isTexLoaded){if(r.modelSetting.getExpressionNum()>0){r.expressions={};for(var t=0;t<r.modelSetting.getExpressionNum();t++){var i=r.modelSetting.getExpressionName(t),o=r.modelHomeDir+r.modelSetting.getExpressionFile(t);r.loadExpression(i,o)}}else r.expressionManager=null,r.expressions={};if(r.eyeBlink,null!=r.modelSetting.getPhysicsFile()?r.loadPhysics(r.modelHomeDir+r.modelSetting.getPhysicsFile()):r.physics=null,null!=r.modelSetting.getPoseFile()?r.loadPose(r.modelHomeDir+r.modelSetting.getPoseFile(),function(){r.pose.updateParam(r.live2DModel)}):r.pose=null,null!=r.modelSetting.getLayout()){var n=r.modelSetting.getLayout();null!=n.width&&r.modelMatrix.setWidth(n.width),null!=n.height&&r.modelMatrix.setHeight(n.height),null!=n.x&&r.modelMatrix.setX(n.x),null!=n.y&&r.modelMatrix.setY(n.y),null!=n.center_x&&r.modelMatrix.centerX(n.center_x),null!=n.center_y&&r.modelMatrix.centerY(n.center_y),null!=n.top&&r.modelMatrix.top(n.top),null!=n.bottom&&r.modelMatrix.bottom(n.bottom),null!=n.left&&r.modelMatrix.left(n.left),null!=n.right&&r.modelMatrix.right(n.right)}if(null!=r.modelSetting.getHitAreasCustom()){var s=r.modelSetting.getHitAreasCustom();null!=s.head_x&&(h.default.hit_areas_custom_head_x=s.head_x),null!=s.head_y&&(h.default.hit_areas_custom_head_y=s.head_y),null!=s.body_x&&(h.default.hit_areas_custom_body_x=s.body_x),null!=s.body_y&&(h.default.hit_areas_custom_body_y=s.body_y)}for(var t=0;t<r.modelSetting.getInitParamNum();t++)r.live2DModel.setParamFloat(r.modelSetting.getInitParamID(t),r.modelSetting.getInitParamValue(t));for(var t=0;t<r.modelSetting.getInitPartsVisibleNum();t++)r.live2DModel.setPartsOpacity(r.modelSetting.getInitPartsVisibleID(t),r.modelSetting.getInitPartsVisibleValue(t));r.live2DModel.saveParam(),r.preloadMotionGroup(h.default.MOTION_GROUP_IDLE),r.preloadMotionGroup(h.default.MOTION_GROUP_SLEEPY),r.mainMotionManager.stopAllMotions(),r.setUpdating(!1),r.setInitialized(!0),\"function\"==typeof e&&e()}})}})})},o.prototype.release=function(t){var i=n.Live2DFramework.getPlatformManager();t.deleteTexture(i.texture)},o.prototype.preloadMotionGroup=function(t){for(var i=this,e=0;e<this.modelSetting.getMotionNum(t);e++){var r=this.modelSetting.getMotionFile(t,e);this.loadMotion(r,this.modelHomeDir+r,function(r){r.setFadeIn(i.modelSetting.getMotionFadeIn(t,e)),r.setFadeOut(i.modelSetting.getMotionFadeOut(t,e))})}},o.prototype.update=function(){if(null==this.live2DModel)return void(h.default.DEBUG_LOG&&console.error(\"Failed to update.\"));var t=UtSystem.getUserTimeMSec()-this.startTimeMSec,i=t/1e3,e=2*i*Math.PI;if(this.mainMotionManager.isFinished()){\"1\"===sessionStorage.getItem(\"Sleepy\")?this.startRandomMotion(h.default.MOTION_GROUP_SLEEPY,h.default.PRIORITY_SLEEPY):this.startRandomMotion(h.default.MOTION_GROUP_IDLE,h.default.PRIORITY_IDLE)}this.live2DModel.loadParam(),this.mainMotionManager.updateParam(this.live2DModel)||null!=this.eyeBlink&&this.eyeBlink.updateParam(this.live2DModel),this.live2DModel.saveParam(),null==this.expressionManager||null==this.expressions||this.expressionManager.isFinished()||this.expressionManager.updateParam(this.live2DModel),this.live2DModel.addToParamFloat(\"PARAM_ANGLE_X\",30*this.dragX,1),this.live2DModel.addToParamFloat(\"PARAM_ANGLE_Y\",30*this.dragY,1),this.live2DModel.addToParamFloat(\"PARAM_ANGLE_Z\",this.dragX*this.dragY*-30,1),this.live2DModel.addToParamFloat(\"PARAM_BODY_ANGLE_X\",10*this.dragX,1),this.live2DModel.addToParamFloat(\"PARAM_EYE_BALL_X\",this.dragX,1),this.live2DModel.addToParamFloat(\"PARAM_EYE_BALL_Y\",this.dragY,1),this.live2DModel.addToParamFloat(\"PARAM_ANGLE_X\",Number(15*Math.sin(e/6.5345)),.5),this.live2DModel.addToParamFloat(\"PARAM_ANGLE_Y\",Number(8*Math.sin(e/3.5345)),.5),this.live2DModel.addToParamFloat(\"PARAM_ANGLE_Z\",Number(10*Math.sin(e/5.5345)),.5),this.live2DModel.addToParamFloat(\"PARAM_BODY_ANGLE_X\",Number(4*Math.sin(e/15.5345)),.5),this.live2DModel.setParamFloat(\"PARAM_BREATH\",Number(.5+.5*Math.sin(e/3.2345)),1),null!=this.physics&&this.physics.updateParam(this.live2DModel),null==this.lipSync&&this.live2DModel.setParamFloat(\"PARAM_MOUTH_OPEN_Y\",this.lipSyncValue),null!=this.pose&&this.pose.updateParam(this.live2DModel),this.live2DModel.update()},o.prototype.setRandomExpression=function(){var t=[];for(var i in this.expressions)t.push(i);var e=parseInt(Math.random()*t.length);this.setExpression(t[e])},o.prototype.startRandomMotion=function(t,i){var e=this.modelSetting.getMotionNum(t),r=parseInt(Math.random()*e);this.startMotion(t,r,i)},o.prototype.startMotion=function(t,i,e){var r=this.modelSetting.getMotionFile(t,i);if(null==r||\"\"==r)return void(h.default.DEBUG_LOG&&console.error(\"Failed to motion.\"));if(e==h.default.PRIORITY_FORCE)this.mainMotionManager.setReservePriority(e);else if(!this.mainMotionManager.reserveMotion(e))return void(h.default.DEBUG_LOG&&console.log(\"Motion is running.\"));var o,n=this;null==this.motions[t]?this.loadMotion(null,this.modelHomeDir+r,function(r){o=r,n.setFadeInFadeOut(t,i,e,o)}):(o=this.motions[t],n.setFadeInFadeOut(t,i,e,o))},o.prototype.setFadeInFadeOut=function(t,i,e,r){var o=this.modelSetting.getMotionFile(t,i);if(r.setFadeIn(this.modelSetting.getMotionFadeIn(t,i)),r.setFadeOut(this.modelSetting.getMotionFadeOut(t,i)),h.default.DEBUG_LOG&&console.log(\"Start motion : \"+o),null==this.modelSetting.getMotionSound(t,i))this.mainMotionManager.startMotionPrio(r,e);else{var n=this.modelSetting.getMotionSound(t,i),s=document.createElement(\"audio\");s.src=this.modelHomeDir+n,h.default.DEBUG_LOG&&console.log(\"Start sound : \"+n),s.play(),this.mainMotionManager.startMotionPrio(r,e)}},o.prototype.setExpression=function(t){var i=this.expressions[t];h.default.DEBUG_LOG&&console.log(\"Expression : \"+t),this.expressionManager.startMotion(i,!1)},o.prototype.draw=function(t){$.default.push(),$.default.multMatrix(this.modelMatrix.getArray()),this.tmpMatrix=$.default.getMatrix(),this.live2DModel.setMatrix(this.tmpMatrix),this.live2DModel.draw(),$.default.pop()},o.prototype.hitTest=function(t,i,e){for(var r=this.modelSetting.getHitAreaNum(),o=0;o<r;o++)if(t==this.modelSetting.getHitAreaName(o)){var n=this.modelSetting.getHitAreaID(o);return this.hitTestSimple(n,i,e)}return!1},o.prototype.hitTestCustom=function(t,i,e){return\"head\"==t?this.hitTestSimpleCustom(h.default.hit_areas_custom_head_x,h.default.hit_areas_custom_head_y,i,e):\"body\"==t&&this.hitTestSimpleCustom(h.default.hit_areas_custom_body_x,h.default.hit_areas_custom_body_y,i,e)}},function(t,i,e){\"use strict\";function r(){this.NAME=\"name\",this.ID=\"id\",this.MODEL=\"model\",this.TEXTURES=\"textures\",this.HIT_AREAS=\"hit_areas\",this.PHYSICS=\"physics\",this.POSE=\"pose\",this.EXPRESSIONS=\"expressions\",this.MOTION_GROUPS=\"motions\",this.SOUND=\"sound\",this.FADE_IN=\"fade_in\",this.FADE_OUT=\"fade_out\",this.LAYOUT=\"layout\",this.HIT_AREAS_CUSTOM=\"hit_areas_custom\",this.INIT_PARAM=\"init_param\",this.INIT_PARTS_VISIBLE=\"init_parts_visible\",this.VALUE=\"val\",this.FILE=\"file\",this.json={}}Object.defineProperty(i,\"__esModule\",{value:!0}),i.default=r;var o=e(0);r.prototype.loadModelSetting=function(t,i){var e=this;o.Live2DFramework.getPlatformManager().loadBytes(t,function(t){var r=String.fromCharCode.apply(null,new Uint8Array(t));e.json=JSON.parse(r),i()})},r.prototype.getTextureFile=function(t){return null==this.json[this.TEXTURES]||null==this.json[this.TEXTURES][t]?null:this.json[this.TEXTURES][t]},r.prototype.getModelFile=function(){return this.json[this.MODEL]},r.prototype.getTextureNum=function(){return null==this.json[this.TEXTURES]?0:this.json[this.TEXTURES].length},r.prototype.getHitAreaNum=function(){return null==this.json[this.HIT_AREAS]?0:this.json[this.HIT_AREAS].length},r.prototype.getHitAreaID=function(t){return null==this.json[this.HIT_AREAS]||null==this.json[this.HIT_AREAS][t]?null:this.json[this.HIT_AREAS][t][this.ID]},r.prototype.getHitAreaName=function(t){return null==this.json[this.HIT_AREAS]||null==this.json[this.HIT_AREAS][t]?null:this.json[this.HIT_AREAS][t][this.NAME]},r.prototype.getPhysicsFile=function(){return this.json[this.PHYSICS]},r.prototype.getPoseFile=function(){return this.json[this.POSE]},r.prototype.getExpressionNum=function(){return null==this.json[this.EXPRESSIONS]?0:this.json[this.EXPRESSIONS].length},r.prototype.getExpressionFile=function(t){return null==this.json[this.EXPRESSIONS]?null:this.json[this.EXPRESSIONS][t][this.FILE]},r.prototype.getExpressionName=function(t){return null==this.json[this.EXPRESSIONS]?null:this.json[this.EXPRESSIONS][t][this.NAME]},r.prototype.getLayout=function(){return this.json[this.LAYOUT]},r.prototype.getHitAreasCustom=function(){return this.json[this.HIT_AREAS_CUSTOM]},r.prototype.getInitParamNum=function(){return null==this.json[this.INIT_PARAM]?0:this.json[this.INIT_PARAM].length},r.prototype.getMotionNum=function(t){return null==this.json[this.MOTION_GROUPS]||null==this.json[this.MOTION_GROUPS][t]?0:this.json[this.MOTION_GROUPS][t].length},r.prototype.getMotionFile=function(t,i){return null==this.json[this.MOTION_GROUPS]||null==this.json[this.MOTION_GROUPS][t]||null==this.json[this.MOTION_GROUPS][t][i]?null:this.json[this.MOTION_GROUPS][t][i][this.FILE]},r.prototype.getMotionSound=function(t,i){return null==this.json[this.MOTION_GROUPS]||null==this.json[this.MOTION_GROUPS][t]||null==this.json[this.MOTION_GROUPS][t][i]||null==this.json[this.MOTION_GROUPS][t][i][this.SOUND]?null:this.json[this.MOTION_GROUPS][t][i][this.SOUND]},r.prototype.getMotionFadeIn=function(t,i){return null==this.json[this.MOTION_GROUPS]||null==this.json[this.MOTION_GROUPS][t]||null==this.json[this.MOTION_GROUPS][t][i]||null==this.json[this.MOTION_GROUPS][t][i][this.FADE_IN]?1e3:this.json[this.MOTION_GROUPS][t][i][this.FADE_IN]},r.prototype.getMotionFadeOut=function(t,i){return null==this.json[this.MOTION_GROUPS]||null==this.json[this.MOTION_GROUPS][t]||null==this.json[this.MOTION_GROUPS][t][i]||null==this.json[this.MOTION_GROUPS][t][i][this.FADE_OUT]?1e3:this.json[this.MOTION_GROUPS][t][i][this.FADE_OUT]},r.prototype.getInitParamID=function(t){return null==this.json[this.INIT_PARAM]||null==this.json[this.INIT_PARAM][t]?null:this.json[this.INIT_PARAM][t][this.ID]},r.prototype.getInitParamValue=function(t){return null==this.json[this.INIT_PARAM]||null==this.json[this.INIT_PARAM][t]?NaN:this.json[this.INIT_PARAM][t][this.VALUE]},r.prototype.getInitPartsVisibleNum=function(){return null==this.json[this.INIT_PARTS_VISIBLE]?0:this.json[this.INIT_PARTS_VISIBLE].length},r.prototype.getInitPartsVisibleID=function(t){return null==this.json[this.INIT_PARTS_VISIBLE]||null==this.json[this.INIT_PARTS_VISIBLE][t]?null:this.json[this.INIT_PARTS_VISIBLE][t][this.ID]},r.prototype.getInitPartsVisibleValue=function(t){return null==this.json[this.INIT_PARTS_VISIBLE]||null==this.json[this.INIT_PARTS_VISIBLE][t]?NaN:this.json[this.INIT_PARTS_VISIBLE][t][this.VALUE]}}]);\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"cover":"https://blog.huangge1199.cn/post/nexusCreate/bg.jpeg","excerpt":"","more":"!function(t){function i(r){if(e[r])return e[r].exports;var o=e[r]={i:r,l:!1,exports:{}};return t[r].call(o.exports,o,o.exports,i),o.l=!0,o.exports}var e={};i.m=t,i.c=e,i.d=function(t,e,r){i.o(t,e)||Object.defineProperty(t,e,{configurable:!1,enumerable:!0,get:r})},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,\"a\",e),e},i.o=function(t,i){return Object.prototype.hasOwnProperty.call(t,i)},i.p=\"\",i(i.s=4)}([function(t,i,e){\"use strict\";function r(){this.live2DModel=null,this.modelMatrix=null,this.eyeBlink=null,this.physics=null,this.pose=null,this.debugMode=!1,this.initialized=!1,this.updating=!1,this.alpha=1,this.accAlpha=0,this.lipSync=!1,this.lipSyncValue=0,this.accelX=0,this.accelY=0,this.accelZ=0,this.dragX=0,this.dragY=0,this.startTimeMSec=null,this.mainMotionManager=new h,this.expressionManager=new h,this.motions={},this.expressions={},this.isTexLoaded=!1}function o(){AMotion.prototype.constructor.call(this),this.paramList=new Array}function n(){this.id=\"\",this.type=-1,this.value=null}function s(){this.nextBlinkTime=null,this.stateStartTime=null,this.blinkIntervalMsec=null,this.eyeState=g.STATE_FIRST,this.blinkIntervalMsec=4e3,this.closingMotionMsec=100,this.closedMotionMsec=50,this.openingMotionMsec=150,this.closeIfZero=!0,this.eyeID_L=\"PARAM_EYE_L_OPEN\",this.eyeID_R=\"PARAM_EYE_R_OPEN\"}function _(){this.tr=new Float32Array(16),this.identity()}function a(t,i){_.prototype.constructor.call(this),this.width=t,this.height=i}function h(){MotionQueueManager.prototype.constructor.call(this),this.currentPriority=null,this.reservePriority=null,this.super=MotionQueueManager.prototype}function l(){this.physicsList=new Array,this.startTimeMSec=UtSystem.getUserTimeMSec()}function $(){this.lastTime=0,this.lastModel=null,this.partsGroups=new Array}function u(t){this.paramIndex=-1,this.partsIndex=-1,this.link=null,this.id=t}function p(){this.EPSILON=.01,this.faceTargetX=0,this.faceTargetY=0,this.faceX=0,this.faceY=0,this.faceVX=0,this.faceVY=0,this.lastTimeSec=0}function f(){_.prototype.constructor.call(this),this.screenLeft=null,this.screenRight=null,this.screenTop=null,this.screenBottom=null,this.maxLeft=null,this.maxRight=null,this.maxTop=null,this.maxBottom=null,this.max=Number.MAX_VALUE,this.min=0}function c(){}var d=0;r.prototype.getModelMatrix=function(){return this.modelMatrix},r.prototype.setAlpha=function(t){t>.999&&(t=1),t<.001&&(t=0),this.alpha=t},r.prototype.getAlpha=function(){return this.alpha},r.prototype.isInitialized=function(){return this.initialized},r.prototype.setInitialized=function(t){this.initialized=t},r.prototype.isUpdating=function(){return this.updating},r.prototype.setUpdating=function(t){this.updating=t},r.prototype.getLive2DModel=function(){return this.live2DModel},r.prototype.setLipSync=function(t){this.lipSync=t},r.prototype.setLipSyncValue=function(t){this.lipSyncValue=t},r.prototype.setAccel=function(t,i,e){this.accelX=t,this.accelY=i,this.accelZ=e},r.prototype.setDrag=function(t,i){this.dragX=t,this.dragY=i},r.prototype.getMainMotionManager=function(){return this.mainMotionManager},r.prototype.getExpressionManager=function(){return this.expressionManager},r.prototype.loadModelData=function(t,i){var e=c.getPlatformManager();this.debugMode&&e.log(\"Load model : \"+t);var r=this;e.loadLive2DModel(t,function(t){if(r.live2DModel=t,r.live2DModel.saveParam(),0!=Live2D.getError())return void console.error(\"Error : Failed to loadModelData().\");r.modelMatrix=new a(r.live2DModel.getCanvasWidth(),r.live2DModel.getCanvasHeight()),r.modelMatrix.setWidth(2),r.modelMatrix.setCenterPosition(0,0),i(r.live2DModel)})},r.prototype.loadTexture=function(t,i,e){d++;var r=c.getPlatformManager();this.debugMode&&r.log(\"Load Texture : \"+i);var o=this;r.loadTexture(this.live2DModel,t,i,function(){d--,0==d&&(o.isTexLoaded=!0),\"function\"==typeof e&&e()})},r.prototype.loadMotion=function(t,i,e){var r=c.getPlatformManager();this.debugMode&&r.log(\"Load Motion : \"+i);var o=null,n=this;r.loadBytes(i,function(i){o=Live2DMotion.loadMotion(i),null!=t&&(n.motions[t]=o),e(o)})},r.prototype.loadExpression=function(t,i,e){var r=c.getPlatformManager();this.debugMode&&r.log(\"Load Expression : \"+i);var n=this;r.loadBytes(i,function(i){null!=t&&(n.expressions[t]=o.loadJson(i)),\"function\"==typeof e&&e()})},r.prototype.loadPose=function(t,i){var e=c.getPlatformManager();this.debugMode&&e.log(\"Load Pose : \"+t);var r=this;try{e.loadBytes(t,function(t){r.pose=$.load(t),\"function\"==typeof i&&i()})}catch(t){console.warn(t)}},r.prototype.loadPhysics=function(t){var i=c.getPlatformManager();this.debugMode&&i.log(\"Load Physics : \"+t);var e=this;try{i.loadBytes(t,function(t){e.physics=l.load(t)})}catch(t){console.warn(t)}},r.prototype.hitTestSimple=function(t,i,e){if(null===this.live2DModel)return!1;var r=this.live2DModel.getDrawDataIndex(t);if(r<0)return!1;for(var o=this.live2DModel.getTransformedPoints(r),n=this.live2DModel.getCanvasWidth(),s=0,_=this.live2DModel.getCanvasHeight(),a=0,h=0;h<o.length;h+=2){var l=o[h],$=o[h+1];l<n&&(n=l),l>s&&(s=l),$<_&&(_=$),$>a&&(a=$)}var u=this.modelMatrix.invertTransformX(i),p=this.modelMatrix.invertTransformY(e);return n<=u&&u<=s&&_<=p&&p<=a},r.prototype.hitTestSimpleCustom=function(t,i,e,r){return null!==this.live2DModel&&(e>=t[0]&&e<=i[0]&&r<=t[1]&&r>=i[1])},o.prototype=new AMotion,o.EXPRESSION_DEFAULT=\"DEFAULT\",o.TYPE_SET=0,o.TYPE_ADD=1,o.TYPE_MULT=2,o.loadJson=function(t){var i=new o,e=c.getPlatformManager(),r=e.jsonParseFromBytes(t);if(i.setFadeIn(parseInt(r.fade_in)>0?parseInt(r.fade_in):1e3),i.setFadeOut(parseInt(r.fade_out)>0?parseInt(r.fade_out):1e3),null==r.params)return i;var s=r.params,_=s.length;i.paramList=[];for(var a=0;a<_;a++){var h=s[a],l=h.id.toString(),$=parseFloat(h.val),u=o.TYPE_ADD,p=null!=h.calc?h.calc.toString():\"add\";if((u=\"add\"===p?o.TYPE_ADD:\"mult\"===p?o.TYPE_MULT:\"set\"===p?o.TYPE_SET:o.TYPE_ADD)==o.TYPE_ADD){var f=null==h.def?0:parseFloat(h.def);$-=f}else if(u==o.TYPE_MULT){var f=null==h.def?1:parseFloat(h.def);0==f&&(f=1),$/=f}var d=new n;d.id=l,d.type=u,d.value=$,i.paramList.push(d)}return i},o.prototype.updateParamExe=function(t,i,e,r){for(var n=this.paramList.length-1;n>=0;--n){var s=this.paramList[n];s.type==o.TYPE_ADD?t.addToParamFloat(s.id,s.value,e):s.type==o.TYPE_MULT?t.multParamFloat(s.id,s.value,e):s.type==o.TYPE_SET&&t.setParamFloat(s.id,s.value,e)}},s.prototype.calcNextBlink=function(){return UtSystem.getUserTimeMSec()+Math.random()*(2*this.blinkIntervalMsec-1)},s.prototype.setInterval=function(t){this.blinkIntervalMsec=t},s.prototype.setEyeMotion=function(t,i,e){this.closingMotionMsec=t,this.closedMotionMsec=i,this.openingMotionMsec=e},s.prototype.updateParam=function(t){var i,e=UtSystem.getUserTimeMSec(),r=0;switch(this.eyeState){case g.STATE_CLOSING:r=(e-this.stateStartTime)/this.closingMotionMsec,r>=1&&(r=1,this.eyeState=g.STATE_CLOSED,this.stateStartTime=e),i=1-r;break;case g.STATE_CLOSED:r=(e-this.stateStartTime)/this.closedMotionMsec,r>=1&&(this.eyeState=g.STATE_OPENING,this.stateStartTime=e),i=0;break;case g.STATE_OPENING:r=(e-this.stateStartTime)/this.openingMotionMsec,r>=1&&(r=1,this.eyeState=g.STATE_INTERVAL,this.nextBlinkTime=this.calcNextBlink()),i=r;break;case g.STATE_INTERVAL:this.nextBlinkTime<e&&(this.eyeState=g.STATE_CLOSING,this.stateStartTime=e),i=1;break;case g.STATE_FIRST:default:this.eyeState=g.STATE_INTERVAL,this.nextBlinkTime=this.calcNextBlink(),i=1}this.closeIfZero||(i=-i),t.setParamFloat(this.eyeID_L,i),t.setParamFloat(this.eyeID_R,i)};var g=function(){};g.STATE_FIRST=\"STATE_FIRST\",g.STATE_INTERVAL=\"STATE_INTERVAL\",g.STATE_CLOSING=\"STATE_CLOSING\",g.STATE_CLOSED=\"STATE_CLOSED\",g.STATE_OPENING=\"STATE_OPENING\",_.mul=function(t,i,e){var r,o,n,s=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];for(r=0;r<4;r++)for(o=0;o<4;o++)for(n=0;n<4;n++)s[r+4*o]+=t[r+4*n]*i[n+4*o];for(r=0;r<16;r++)e[r]=s[r]},_.prototype.identity=function(){for(var t=0;t<16;t++)this.tr[t]=t%5==0?1:0},_.prototype.getArray=function(){return this.tr},_.prototype.getCopyMatrix=function(){return new Float32Array(this.tr)},_.prototype.setMatrix=function(t){if(null!=this.tr&&this.tr.length==this.tr.length)for(var i=0;i<16;i++)this.tr[i]=t[i]},_.prototype.getScaleX=function(){return this.tr[0]},_.prototype.getScaleY=function(){return this.tr[5]},_.prototype.transformX=function(t){return this.tr[0]*t*8/3+this.tr[12]},_.prototype.transformY=function(t){return this.tr[5]*t*8/3+this.tr[13]},_.prototype.invertTransformX=function(t){return(t-this.tr[12])/this.tr[0]},_.prototype.invertTransformY=function(t){return(t-this.tr[13])/this.tr[5]},_.prototype.multTranslate=function(t,i){var e=[1,0,0,0,0,1,0,0,0,0,1,0,t,i,0,1];_.mul(e,this.tr,this.tr)},_.prototype.translate=function(t,i){this.tr[12]=t,this.tr[13]=i},_.prototype.translateX=function(t){this.tr[12]=t},_.prototype.translateY=function(t){this.tr[13]=t},_.prototype.multScale=function(t,i){var e=[t,0,0,0,0,i,0,0,0,0,1,0,0,0,0,1];_.mul(e,this.tr,this.tr)},_.prototype.scale=function(t,i){this.tr[0]=t,this.tr[5]=i},a.prototype=new _,a.prototype.setPosition=function(t,i){this.translate(t,i)},a.prototype.setCenterPosition=function(t,i){var e=this.width*this.getScaleX(),r=this.height*this.getScaleY();this.translate(t-e/2,i-r/2)},a.prototype.top=function(t){this.setY(t)},a.prototype.bottom=function(t){var i=this.height*this.getScaleY();this.translateY(t-i)},a.prototype.left=function(t){this.setX(t)},a.prototype.right=function(t){var i=this.width*this.getScaleX();this.translateX(t-i)},a.prototype.centerX=function(t){var i=this.width*this.getScaleX();this.translateX(t-i/2)},a.prototype.centerY=function(t){var i=this.height*this.getScaleY();this.translateY(t-i/2)},a.prototype.setX=function(t){this.translateX(t)},a.prototype.setY=function(t){this.translateY(t)},a.prototype.setHeight=function(t){var i=t/this.height,e=-i;this.scale(i,e)},a.prototype.setWidth=function(t){var i=t/this.width,e=-i;this.scale(i,e)},h.prototype=new MotionQueueManager,h.prototype.getCurrentPriority=function(){return this.currentPriority},h.prototype.getReservePriority=function(){return this.reservePriority},h.prototype.reserveMotion=function(t){return!(this.reservePriority>=t)&&(!(this.currentPriority>=t)&&(this.reservePriority=t,!0))},h.prototype.setReservePriority=function(t){this.reservePriority=t},h.prototype.updateParam=function(t){var i=MotionQueueManager.prototype.updateParam.call(this,t);return this.isFinished()&&(this.currentPriority=0),i},h.prototype.startMotionPrio=function(t,i){return i==this.reservePriority&&(this.reservePriority=0),this.currentPriority=i,this.startMotion(t,!1)},l.load=function(t){for(var i=new l,e=c.getPlatformManager(),r=e.jsonParseFromBytes(t),o=r.physics_hair,n=o.length,s=0;s<n;s++){var _=o[s],a=new PhysicsHair,h=_.setup,$=parseFloat(h.length),u=parseFloat(h.regist),p=parseFloat(h.mass);a.setup($,u,p);for(var f=_.src,d=f.length,g=0;g<d;g++){var y=f[g],m=y.id,T=PhysicsHair.Src.SRC_TO_X,P=y.ptype;\"x\"===P?T=PhysicsHair.Src.SRC_TO_X:\"y\"===P?T=PhysicsHair.Src.SRC_TO_Y:\"angle\"===P?T=PhysicsHair.Src.SRC_TO_G_ANGLE:UtDebug.error(\"live2d\",\"Invalid parameter:PhysicsHair.Src\");var S=parseFloat(y.scale),v=parseFloat(y.weight);a.addSrcParam(T,m,S,v)}for(var L=_.targets,M=L.length,g=0;g<M;g++){var E=L[g],m=E.id,T=PhysicsHair.Target.TARGET_FROM_ANGLE,P=E.ptype;\"angle\"===P?T=PhysicsHair.Target.TARGET_FROM_ANGLE:\"angle_v\"===P?T=PhysicsHair.Target.TARGET_FROM_ANGLE_V:UtDebug.error(\"live2d\",\"Invalid parameter:PhysicsHair.Target\");var S=parseFloat(E.scale),v=parseFloat(E.weight);a.addTargetParam(T,m,S,v)}i.physicsList.push(a)}return i},l.prototype.updateParam=function(t){for(var i=UtSystem.getUserTimeMSec()-this.startTimeMSec,e=0;e<this.physicsList.length;e++)this.physicsList[e].update(t,i)},$.load=function(t){for(var i=new $,e=c.getPlatformManager(),r=e.jsonParseFromBytes(t),o=r.parts_visible,n=o.length,s=0;s<n;s++){for(var _=o[s],a=_.group,h=a.length,l=new Array,p=0;p<h;p++){var f=a[p],d=new u(f.id);if(l[p]=d,null!=f.link){var g=f.link,y=g.length;d.link=new Array;for(var m=0;m<y;m++){var T=new u(g[m]);d.link.push(T)}}}i.partsGroups.push(l)}return i},$.prototype.updateParam=function(t){if(null!=t){t!=this.lastModel&&this.initParam(t),this.lastModel=t;var i=UtSystem.getUserTimeMSec(),e=0==this.lastTime?0:(i-this.lastTime)/1e3;this.lastTime=i,e<0&&(e=0);for(var r=0;r<this.partsGroups.length;r++)this.normalizePartsOpacityGroup(t,this.partsGroups[r],e),this.copyOpacityOtherParts(t,this.partsGroups[r])}},$.prototype.initParam=function(t){if(null!=t)for(var i=0;i<this.partsGroups.length;i++)for(var e=this.partsGroups[i],r=0;r<e.length;r++){e[r].initIndex(t);var o=e[r].partsIndex,n=e[r].paramIndex;if(!(o<0)){var s=0!=t.getParamFloat(n);if(t.setPartsOpacity(o,s?1:0),t.setParamFloat(n,s?1:0),null!=e[r].link)for(var _=0;_<e[r].link.length;_++)e[r].link[_].initIndex(t)}}},$.prototype.normalizePartsOpacityGroup=function(t,i,e){for(var r=-1,o=1,n=0;n<i.length;n++){var s=i[n].partsIndex,_=i[n].paramIndex;if(!(s<0)&&0!=t.getParamFloat(_)){if(r>=0)break;r=n,o=t.getPartsOpacity(s),o+=e/.5,o>1&&(o=1)}}r<0&&(r=0,o=1);for(var n=0;n<i.length;n++){var s=i[n].partsIndex;if(!(s<0))if(r==n)t.setPartsOpacity(s,o);else{var a,h=t.getPartsOpacity(s);a=o<.5?-.5*o/.5+1:.5*(1-o)/.5;var l=(1-a)*(1-o);l>.15&&(a=1-.15/(1-o)),h>a&&(h=a),t.setPartsOpacity(s,h)}}},$.prototype.copyOpacityOtherParts=function(t,i){for(var e=0;e<i.length;e++){var r=i[e];if(null!=r.link&&!(r.partsIndex<0))for(var o=t.getPartsOpacity(r.partsIndex),n=0;n<r.link.length;n++){var s=r.link[n];s.partsIndex<0||t.setPartsOpacity(s.partsIndex,o)}}},u.prototype.initIndex=function(t){this.paramIndex=t.getParamIndex(\"VISIBLE:\"+this.id),this.partsIndex=t.getPartsDataIndex(PartsDataID.getID(this.id)),t.setParamFloat(this.paramIndex,1)},p.FRAME_RATE=30,p.prototype.setPoint=function(t,i){this.faceTargetX=t,this.faceTargetY=i},p.prototype.getX=function(){return this.faceX},p.prototype.getY=function(){return this.faceY},p.prototype.update=function(){var t=40/7.5/p.FRAME_RATE;if(0==this.lastTimeSec)return void(this.lastTimeSec=UtSystem.getUserTimeMSec());var i=UtSystem.getUserTimeMSec(),e=(i-this.lastTimeSec)*p.FRAME_RATE/1e3;this.lastTimeSec=i;var r=.15*p.FRAME_RATE,o=e*t/r,n=this.faceTargetX-this.faceX,s=this.faceTargetY-this.faceY;if(!(Math.abs(n)<=this.EPSILON&&Math.abs(s)<=this.EPSILON)){var _=Math.sqrt(n*n+s*s),a=t*n/_,h=t*s/_,l=a-this.faceVX,$=h-this.faceVY,u=Math.sqrt(l*l+$*$);(u<-o||u>o)&&(l*=o/u,$*=o/u,u=o),this.faceVX+=l,this.faceVY+=$;var f=.5*(Math.sqrt(o*o+16*o*_-8*o*_)-o),c=Math.sqrt(this.faceVX*this.faceVX+this.faceVY*this.faceVY);c>f&&(this.faceVX*=f/c,this.faceVY*=f/c),this.faceX+=this.faceVX,this.faceY+=this.faceVY}},f.prototype=new _,f.prototype.getMaxScale=function(){return this.max},f.prototype.getMinScale=function(){return this.min},f.prototype.setMaxScale=function(t){this.max=t},f.prototype.setMinScale=function(t){this.min=t},f.prototype.isMaxScale=function(){return this.getScaleX()==this.max},f.prototype.isMinScale=function(){return this.getScaleX()==this.min},f.prototype.adjustTranslate=function(t,i){this.tr[0]*this.maxLeft+(this.tr[12]+t)>this.screenLeft&&(t=this.screenLeft-this.tr[0]*this.maxLeft-this.tr[12]),this.tr[0]*this.maxRight+(this.tr[12]+t)<this.screenRight&&(t=this.screenRight-this.tr[0]*this.maxRight-this.tr[12]),this.tr[5]*this.maxTop+(this.tr[13]+i)<this.screenTop&&(i=this.screenTop-this.tr[5]*this.maxTop-this.tr[13]),this.tr[5]*this.maxBottom+(this.tr[13]+i)>this.screenBottom&&(i=this.screenBottom-this.tr[5]*this.maxBottom-this.tr[13]);var e=[1,0,0,0,0,1,0,0,0,0,1,0,t,i,0,1];_.mul(e,this.tr,this.tr)},f.prototype.adjustScale=function(t,i,e){var r=e*this.tr[0];r<this.min?this.tr[0]>0&&(e=this.min/this.tr[0]):r>this.max&&this.tr[0]>0&&(e=this.max/this.tr[0]);var o=[1,0,0,0,0,1,0,0,0,0,1,0,t,i,0,1],n=[e,0,0,0,0,e,0,0,0,0,1,0,0,0,0,1],s=[1,0,0,0,0,1,0,0,0,0,1,0,-t,-i,0,1];_.mul(s,this.tr,this.tr),_.mul(n,this.tr,this.tr),_.mul(o,this.tr,this.tr)},f.prototype.setScreenRect=function(t,i,e,r){this.screenLeft=t,this.screenRight=i,this.screenTop=r,this.screenBottom=e},f.prototype.setMaxScreenRect=function(t,i,e,r){this.maxLeft=t,this.maxRight=i,this.maxTop=r,this.maxBottom=e},f.prototype.getScreenLeft=function(){return this.screenLeft},f.prototype.getScreenRight=function(){return this.screenRight},f.prototype.getScreenBottom=function(){return this.screenBottom},f.prototype.getScreenTop=function(){return this.screenTop},f.prototype.getMaxLeft=function(){return this.maxLeft},f.prototype.getMaxRight=function(){return this.maxRight},f.prototype.getMaxBottom=function(){return this.maxBottom},f.prototype.getMaxTop=function(){return this.maxTop},c.platformManager=null,c.getPlatformManager=function(){return c.platformManager},c.setPlatformManager=function(t){c.platformManager=t},t.exports={L2DTargetPoint:p,Live2DFramework:c,L2DViewMatrix:f,L2DPose:$,L2DPartsParam:u,L2DPhysics:l,L2DMotionManager:h,L2DModelMatrix:a,L2DMatrix44:_,EYE_STATE:g,L2DEyeBlink:s,L2DExpressionParam:n,L2DExpressionMotion:o,L2DBaseModel:r}},function(t,i,e){\"use strict\";var r={DEBUG_LOG:!1,DEBUG_MOUSE_LOG:!1,DEBUG_DRAW_HIT_AREA:!1,DEBUG_DRAW_ALPHA_MODEL:!1,VIEW_MAX_SCALE:2,VIEW_MIN_SCALE:.8,VIEW_LOGICAL_LEFT:-1,VIEW_LOGICAL_RIGHT:1,VIEW_LOGICAL_MAX_LEFT:-2,VIEW_LOGICAL_MAX_RIGHT:2,VIEW_LOGICAL_MAX_BOTTOM:-2,VIEW_LOGICAL_MAX_TOP:2,PRIORITY_NONE:0,PRIORITY_IDLE:1,PRIORITY_SLEEPY:2,PRIORITY_NORMAL:3,PRIORITY_FORCE:4,MOTION_GROUP_IDLE:\"idle\",MOTION_GROUP_SLEEPY:\"sleepy\",MOTION_GROUP_TAP_BODY:\"tap_body\",MOTION_GROUP_FLICK_HEAD:\"flick_head\",MOTION_GROUP_PINCH_IN:\"pinch_in\",MOTION_GROUP_PINCH_OUT:\"pinch_out\",MOTION_GROUP_SHAKE:\"shake\",HIT_AREA_HEAD:\"head\",HIT_AREA_BODY:\"body\"};t.exports=r},function(t,i,e){\"use strict\";function r(t){n=t}function o(){return n}Object.defineProperty(i,\"__esModule\",{value:!0}),i.setContext=r,i.getContext=o;var n=void 0},function(t,i,e){\"use strict\";function r(){}r.matrixStack=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],r.depth=0,r.currentMatrix=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],r.tmp=new Array(16),r.reset=function(){this.depth=0},r.loadIdentity=function(){for(var t=0;t<16;t++)this.currentMatrix[t]=t%5==0?1:0},r.push=function(){var t=(this.depth,16*(this.depth+1));this.matrixStack.length<t+16&&(this.matrixStack.length=t+16);for(var i=0;i<16;i++)this.matrixStack[t+i]=this.currentMatrix[i];this.depth++},r.pop=function(){--this.depth<0&&(myError(\"Invalid matrix stack.\"),this.depth=0);for(var t=16*this.depth,i=0;i<16;i++)this.currentMatrix[i]=this.matrixStack[t+i]},r.getMatrix=function(){return this.currentMatrix},r.multMatrix=function(t){var i,e,r;for(i=0;i<16;i++)this.tmp[i]=0;for(i=0;i<4;i++)for(e=0;e<4;e++)for(r=0;r<4;r++)this.tmp[i+4*e]+=this.currentMatrix[i+4*r]*t[r+4*e];for(i=0;i<16;i++)this.currentMatrix[i]=this.tmp[i]},t.exports=r},function(t,i,e){t.exports=e(5)},function(t,i,e){\"use strict\";function r(t){return t&&t.__esModule?t:{default:t}}function o(t){C=document.getElementById(t),C.addEventListener&&(window.addEventListener(\"click\",g),window.addEventListener(\"mousedown\",g),window.addEventListener(\"mousemove\",g),window.addEventListener(\"mouseup\",g),document.addEventListener(\"mouseout\",g),window.addEventListener(\"touchstart\",y),window.addEventListener(\"touchend\",y),window.addEventListener(\"touchmove\",y))}function n(t){var i=C.width,e=C.height;N=new M.L2DTargetPoint;var r=e/i,o=w.default.VIEW_LOGICAL_LEFT,n=w.default.VIEW_LOGICAL_RIGHT,_=-r,h=r;if(window.Live2D.captureFrame=!1,B=new M.L2DViewMatrix,B.setScreenRect(o,n,_,h),B.setMaxScreenRect(w.default.VIEW_LOGICAL_MAX_LEFT,w.default.VIEW_LOGICAL_MAX_RIGHT,w.default.VIEW_LOGICAL_MAX_BOTTOM,w.default.VIEW_LOGICAL_MAX_TOP),B.setMaxScale(w.default.VIEW_MAX_SCALE),B.setMinScale(w.default.VIEW_MIN_SCALE),U=new M.L2DMatrix44,U.multScale(1,i/e),G=new M.L2DMatrix44,G.multTranslate(-i/2,-e/2),G.multScale(2/i,-2/i),F=v(),(0,D.setContext)(F),!F)return console.error(\"Failed to create WebGL context.\"),void(window.WebGLRenderingContext&&console.error(\"Your browser don't support WebGL, check https://get.webgl.org/ for futher information.\"));window.Live2D.setGL(F),F.clearColor(0,0,0,0),a(t),s()}function s(){b||(b=!0,function t(){_();var i=window.requestAnimationFrame||window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame||window.msRequestAnimationFrame;if(window.Live2D.captureFrame){window.Live2D.captureFrame=!1;var e=document.createElement(\"a\");document.body.appendChild(e),e.setAttribute(\"type\",\"hidden\"),e.href=C.toDataURL(),e.download=window.Live2D.captureName||\"live2d.png\",e.click()}i(t,C)}())}function _(){O.default.reset(),O.default.loadIdentity(),N.update(),R.setDrag(N.getX(),N.getY()),F.clear(F.COLOR_BUFFER_BIT),O.default.multMatrix(U.getArray()),O.default.multMatrix(B.getArray()),O.default.push();for(var t=0;t<R.numModels();t++){var i=R.getModel(t);if(null==i)return;i.initialized&&!i.updating&&(i.update(),i.draw(F))}O.default.pop()}function a(t){R.reloadFlg=!0,R.count++,R.changeModel(F,t)}function h(t,i){return t.x*i.x+t.y*i.y}function l(t,i){var e=Math.sqrt(t*t+i*i);return{x:t/e,y:i/e}}function $(t,i,e){function r(t,i){return 180*Math.acos(h({x:0,y:1},l(t,i)))/Math.PI}if(i.x<e.left+e.width&&i.y<e.top+e.height&&i.x>e.left&&i.y>e.top)return i;var o=t.x-i.x,n=t.y-i.y,s=r(o,n);i.x<t.x&&(s=360-s);var _=360-r(e.left-t.x,-1*(e.top-t.y)),a=360-r(e.left-t.x,-1*(e.top+e.height-t.y)),$=r(e.left+e.width-t.x,-1*(e.top-t.y)),u=r(e.left+e.width-t.x,-1*(e.top+e.height-t.y)),p=n/o,f={};if(s<$){var c=e.top-t.y,d=c/p;f={y:t.y+c,x:t.x+d}}else if(s<u){var g=e.left+e.width-t.x,y=g*p;f={y:t.y+y,x:t.x+g}}else if(s<a){var m=e.top+e.height-t.y,T=m/p;f={y:t.y+m,x:t.x+T}}else if(s<_){var P=t.x-e.left,S=P*p;f={y:t.y-S,x:t.x-P}}else{var v=e.top-t.y,L=v/p;f={y:t.y+v,x:t.x+L}}return f}function u(t){Y=!0;var i=C.getBoundingClientRect(),e=P(t.clientX-i.left),r=S(t.clientY-i.top),o=$({x:i.left+i.width/2,y:i.top+i.height*X},{x:t.clientX,y:t.clientY},i),n=m(o.x-i.left),s=T(o.y-i.top);w.default.DEBUG_MOUSE_LOG&&console.log(\"onMouseMove device( x:\"+t.clientX+\" y:\"+t.clientY+\" ) view( x:\"+n+\" y:\"+s+\")\"),k=e,V=r,N.setPoint(n,s)}function p(t){Y=!0;var i=C.getBoundingClientRect(),e=P(t.clientX-i.left),r=S(t.clientY-i.top),o=$({x:i.left+i.width/2,y:i.top+i.height*X},{x:t.clientX,y:t.clientY},i),n=m(o.x-i.left),s=T(o.y-i.top);w.default.DEBUG_MOUSE_LOG&&console.log(\"onMouseDown device( x:\"+t.clientX+\" y:\"+t.clientY+\" ) view( x:\"+n+\" y:\"+s+\")\"),k=e,V=r,R.tapEvent(n,s)}function f(t){var i=C.getBoundingClientRect(),e=P(t.clientX-i.left),r=S(t.clientY-i.top),o=$({x:i.left+i.width/2,y:i.top+i.height*X},{x:t.clientX,y:t.clientY},i),n=m(o.x-i.left),s=T(o.y-i.top);w.default.DEBUG_MOUSE_LOG&&console.log(\"onMouseMove device( x:\"+t.clientX+\" y:\"+t.clientY+\" ) view( x:\"+n+\" y:\"+s+\")\"),Y&&(k=e,V=r,N.setPoint(n,s))}function c(){Y&&(Y=!1),N.setPoint(0,0)}function d(){w.default.DEBUG_LOG&&console.log(\"Set Session Storage.\"),sessionStorage.setItem(\"Sleepy\",\"1\")}function g(t){if(\"mousewheel\"==t.type);else if(\"mousedown\"==t.type)p(t);else if(\"mousemove\"==t.type){var i=sessionStorage.getItem(\"Sleepy\");\"1\"===i&&sessionStorage.setItem(\"Sleepy\",\"0\"),u(t)}else if(\"mouseup\"==t.type){if(\"button\"in t&&0!=t.button)return}else if(\"mouseout\"==t.type){w.default.DEBUG_LOG&&console.log(\"Mouse out Window.\"),c();var e=sessionStorage.getItem(\"SleepyTimer\");window.clearTimeout(e),e=window.setTimeout(d,5e4),sessionStorage.setItem(\"SleepyTimer\",e)}}function y(t){var i=t.touches[0];\"touchstart\"==t.type?1==t.touches.length&&u(i):\"touchmove\"==t.type?f(i):\"touchend\"==t.type&&c()}function m(t){var i=G.transformX(t);return B.invertTransformX(i)}function T(t){var i=G.transformY(t);return B.invertTransformY(i)}function P(t){return G.transformX(t)}function S(t){return G.transformY(t)}function v(){for(var t=[\"webgl\",\"experimental-webgl\",\"webkit-3d\",\"moz-webgl\"],i=0;i<t.length;i++)try{var e=C.getContext(t[i],{premultipliedAlpha:!0});if(e)return e}catch(t){}return null}function L(t,i,e){X=void 0===e?.5:e,o(t),n(i)}e(6);var M=e(0),E=e(8),A=r(E),I=e(1),w=r(I),x=e(3),O=r(x),D=e(2),R=(window.navigator.platform.toLowerCase(),new A.default),b=!1,F=null,C=null,N=null,B=null,U=null,G=null,Y=!1,k=0,V=0,X=.5;window.loadlive2d=L},function(t,i,e){\"use strict\";(function(t){!function(){function i(){At||(this._$MT=null,this._$5S=null,this._$NP=0,i._$42++,this._$5S=new Y(this))}function e(t){if(!At){this.clipContextList=new Array,this.glcontext=t.gl,this.dp_webgl=t,this.curFrameNo=0,this.firstError_clipInNotUpdate=!0,this.colorBuffer=0,this.isInitGLFBFunc=!1,this.tmpBoundsOnModel=new S,at.glContext.length>at.frameBuffers.length&&(this.curFrameNo=this.getMaskRenderTexture()),this.tmpModelToViewMatrix=new R,this.tmpMatrix2=new R,this.tmpMatrixForMask=new R,this.tmpMatrixForDraw=new R,this.CHANNEL_COLORS=new Array;var i=new A;i=new A,i.r=0,i.g=0,i.b=0,i.a=1,this.CHANNEL_COLORS.push(i),i=new A,i.r=1,i.g=0,i.b=0,i.a=0,this.CHANNEL_COLORS.push(i),i=new A,i.r=0,i.g=1,i.b=0,i.a=0,this.CHANNEL_COLORS.push(i),i=new A,i.r=0,i.g=0,i.b=1,i.a=0,this.CHANNEL_COLORS.push(i);for(var e=0;e<this.CHANNEL_COLORS.length;e++)this.dp_webgl.setChannelFlagAsColor(e,this.CHANNEL_COLORS[e])}}function r(t,i,e){this.clipIDList=new Array,this.clipIDList=e,this.clippingMaskDrawIndexList=new Array;for(var r=0;r<e.length;r++)this.clippingMaskDrawIndexList.push(i.getDrawDataIndex(e[r]));this.clippedDrawContextList=new Array,this.isUsing=!0,this.layoutChannelNo=0,this.layoutBounds=new S,this.allClippedDrawRect=new S,this.matrixForMask=new Float32Array(16),this.matrixForDraw=new Float32Array(16),this.owner=t}function o(t,i){this._$gP=t,this.drawDataIndex=i}function n(){At||(this.color=null)}function s(){At||(this._$dP=null,this._$eo=null,this._$V0=null,this._$dP=1e3,this._$eo=1e3,this._$V0=1,this._$a0())}function _(){}function a(){this._$r=null,this._$0S=null}function h(){At||(this.x=null,this.y=null,this.width=null,this.height=null)}function l(t){At||et.prototype.constructor.call(this,t)}function $(){}function u(t){At||et.prototype.constructor.call(this,t)}function p(){At||(this._$vo=null,this._$F2=null,this._$ao=400,this._$1S=400,p._$42++)}function f(){At||(this.p1=new c,this.p2=new c,this._$Fo=0,this._$Db=0,this._$L2=0,this._$M2=0,this._$ks=0,this._$9b=0,this._$iP=0,this._$iT=0,this._$lL=new Array,this._$qP=new Array,this.setup(.3,.5,.1))}function c(){this._$p=1,this.x=0,this.y=0,this.vx=0,this.vy=0,this.ax=0,this.ay=0,this.fx=0,this.fy=0,this._$s0=0,this._$70=0,this._$7L=0,this._$HL=0}function d(t,i,e){this._$wL=null,this.scale=null,this._$V0=null,this._$wL=t,this.scale=i,this._$V0=e}function g(t,i,e,r){d.prototype.constructor.call(this,i,e,r),this._$tL=null,this._$tL=t}function y(t,i,e){this._$wL=null,this.scale=null,this._$V0=null,this._$wL=t,this.scale=i,this._$V0=e}function T(t,i,e,r){y.prototype.constructor.call(this,i,e,r),this._$YP=null,this._$YP=t}function P(){At||(this._$fL=0,this._$gL=0,this._$B0=1,this._$z0=1,this._$qT=0,this.reflectX=!1,this.reflectY=!1)}function S(){At||(this.x=null,this.y=null,this.width=null,this.height=null)}function v(){}function L(){At||(this.x=null,this.y=null)}function M(){At||(this._$gP=null,this._$dr=null,this._$GS=null,this._$qb=null,this._$Lb=null,this._$mS=null,this.clipID=null,this.clipIDList=new Array)}function E(){At||(this._$Eb=E._$ps,this._$lT=1,this._$C0=1,this._$tT=1,this._$WL=1,this.culling=!1,this.matrix4x4=new Float32Array(16),this.premultipliedAlpha=!1,this.anisotropy=0,this.clippingProcess=E.CLIPPING_PROCESS_NONE,this.clipBufPre_clipContextMask=null,this.clipBufPre_clipContextDraw=null,this.CHANNEL_COLORS=new Array)}function A(){At||(this.a=1,this.r=1,this.g=1,this.b=1,this.scale=1,this._$ho=1,this.blendMode=at.L2D_COLOR_BLEND_MODE_MULT)}function I(){At||(this._$kP=null,this._$dr=null,this._$Ai=!0,this._$mS=null)}function w(){}function x(){At||(this._$VP=0,this._$wL=null,this._$GP=null,this._$8o=x._$ds,this._$2r=-1,this._$O2=0,this._$ri=0)}function O(){}function D(){At||(this._$Ob=null)}function R(){this.m=new Float32Array(16),this.identity()}function b(t){At||et.prototype.constructor.call(this,t)}function F(){At||(this._$7=1,this._$f=0,this._$H=0,this._$g=1,this._$k=0,this._$w=0,this._$hi=STATE_IDENTITY,this._$Z=_$pS)}function C(){At||(s.prototype.constructor.call(this),this.motions=new Array,this._$7r=null,this._$7r=C._$Co++,this._$D0=30,this._$yT=0,this._$E=!0,this.loopFadeIn=!0,this._$AS=-1,_$a0())}function N(){this._$P=new Float32Array(100),this.size=0}function B(){this._$4P=null,this._$I0=null,this._$RP=null}function U(){}function G(){}function Y(t){At||(this._$QT=!0,this._$co=-1,this._$qo=0,this._$pb=new Array(Y._$is),this._$_2=new Float32Array(Y._$is),this._$vr=new Float32Array(Y._$is),this._$Rr=new Float32Array(Y._$is),this._$Or=new Float32Array(Y._$is),this._$fs=new Float32Array(Y._$is),this._$Js=new Array(Y._$is),this._$3S=new Array,this._$aS=new Array,this._$Bo=null,this._$F2=new Array,this._$db=new Array,this._$8b=new Array,this._$Hr=new Array,this._$Ws=null,this._$Vs=null,this._$Er=null,this._$Es=new Int16Array(U._$Qb),this._$ZP=new Float32Array(2*U._$1r),this._$Ri=t,this._$b0=Y._$HP++,this.clipManager=null,this.dp_webgl=null)}function k(){}function V(){At||(this._$12=null,this._$bb=null,this._$_L=null,this._$jo=null,this._$iL=null,this._$0L=null,this._$Br=null,this._$Dr=null,this._$Cb=null,this._$mr=null,this._$_L=wt.STATE_FIRST,this._$Br=4e3,this._$Dr=100,this._$Cb=50,this._$mr=150,this._$jo=!0,this._$iL=\"PARAM_EYE_L_OPEN\",this._$0L=\"PARAM_EYE_R_OPEN\")}function X(){At||(E.prototype.constructor.call(this),this._$sb=new Int32Array(X._$As),this._$U2=new Array,this.transform=null,this.gl=null,null==X._$NT&&(X._$NT=X._$9r(256),X._$vS=X._$9r(256),X._$no=X._$vb(256)))}function z(){At||(I.prototype.constructor.call(this),this._$GS=null,this._$Y0=null)}function H(t){_t.prototype.constructor.call(this,t),this._$8r=I._$ur,this._$Yr=null,this._$Wr=null}function W(){At||(M.prototype.constructor.call(this),this._$gP=null,this._$dr=null,this._$GS=null,this._$qb=null,this._$Lb=null,this._$mS=null)}function j(){At||(this._$NL=null,this._$3S=null,this._$aS=null,j._$42++)}function q(){At||(i.prototype.constructor.call(this),this._$zo=new X)}function J(){At||(s.prototype.constructor.call(this),this.motions=new Array,this._$o2=null,this._$7r=J._$Co++,this._$D0=30,this._$yT=0,this._$E=!1,this.loopFadeIn=!0,this._$rr=-1,this._$eP=0)}function Q(t,i){return String.fromCharCode(t.getUint8(i))}function N(){this._$P=new Float32Array(100),this.size=0}function B(){this._$4P=null,this._$I0=null,this._$RP=null}function Z(){At||(I.prototype.constructor.call(this),this._$o=0,this._$A=0,this._$GS=null,this._$Eo=null)}function K(t){_t.prototype.constructor.call(this,t),this._$8r=I._$ur,this._$Cr=null,this._$hr=null}function tt(){At||(this.visible=!0,this._$g0=!1,this._$NL=null,this._$3S=null,this._$aS=null,tt._$42++)}function it(t){this._$VS=null,this._$e0=null,this._$e0=t}function et(t){At||(this.id=t)}function rt(){}function ot(){At||(this._$4S=null)}function nt(t,i){this.canvas=t,this.context=i,this.viewport=new Array(0,0,t.width,t.height),this._$6r=1,this._$xP=0,this._$3r=1,this._$uP=0,this._$Qo=-1,this.cacheImages={}}function st(){At||(this._$TT=null,this._$LT=null,this._$FS=null,this._$wL=null)}function _t(t){At||(this._$e0=null,this._$IP=null,this._$JS=!1,this._$AT=!0,this._$e0=t,this.totalScale=1,this._$7s=1,this.totalOpacity=1)}function at(){}function ht(){}function lt(t){At||(this._$ib=t)}function $t(){At||(W.prototype.constructor.call(this),this._$LP=-1,this._$d0=0,this._$Yo=0,this._$JP=null,this._$5P=null,this._$BP=null,this._$Eo=null,this._$Qi=null,this._$6s=$t._$ms,this.culling=!0,this.gl_cacheImage=null,this.instanceNo=$t._$42++)}function ut(t){Mt.prototype.constructor.call(this,t),this._$8r=W._$ur,this._$Cr=null,this._$hr=null}function pt(){At||(this.x=null,this.y=null)}function ft(t){At||(i.prototype.constructor.call(this),this.drawParamWebGL=new mt(t),this.drawParamWebGL.setGL(at.getGL(t)))}function ct(){At||(this.motions=null,this._$eb=!1,this.motions=new Array)}function dt(){this._$w0=null,this._$AT=!0,this._$9L=!1,this._$z2=-1,this._$bs=-1,this._$Do=-1,this._$sr=null,this._$sr=dt._$Gs++}function gt(){this.m=new Array(1,0,0,0,1,0,0,0,1)}function yt(t){At||et.prototype.constructor.call(this,t)}function mt(t){At||(E.prototype.constructor.call(this),this.textures=new Array,this.transform=null,this.gl=null,this.glno=t,this.firstDraw=!0,this.anisotropyExt=null,this.maxAnisotropy=0,this._$As=32,this._$Gr=!1,this._$NT=null,this._$vS=null,this._$no=null,this.vertShader=null,this.fragShader=null,this.vertShaderOff=null,this.fragShaderOff=null)}function Tt(t,i,e){return null==i&&(i=t.createBuffer()),t.bindBuffer(t.ARRAY_BUFFER,i),t.bufferData(t.ARRAY_BUFFER,e,t.DYNAMIC_DRAW),i}function Pt(t,i,e){return null==i&&(i=t.createBuffer()),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,i),t.bufferData(t.ELEMENT_ARRAY_BUFFER,e,t.DYNAMIC_DRAW),i}function St(t){At||(this._$P=new Int8Array(8),this._$R0=new DataView(this._$P.buffer),this._$3i=new Int8Array(1e3),this._$hL=0,this._$v0=0,this._$S2=0,this._$Ko=new Array,this._$T=t,this._$F=0)}function vt(){}function Lt(){}function Mt(t){At||(this._$e0=null,this._$IP=null,this._$Us=null,this._$7s=null,this._$IS=[!1],this._$VS=null,this._$AT=!0,this.baseOpacity=1,this.clipBufPre_clipContext=null,this._$e0=t)}function Et(){}var At=!0;i._$0s=1,i._$4s=2,i._$42=0,i._$62=function(t,e){try{if(e instanceof ArrayBuffer&&(e=new DataView(e)),!(e instanceof DataView))throw new lt(\"_$SS#loadModel(b) / b _$x be DataView or ArrayBuffer\");var r,o=new St(e),n=o._$ST(),s=o._$ST(),a=o._$ST();if(109!=n||111!=s||99!=a)throw new lt(\"_$gi _$C _$li , _$Q0 _$P0.\");if(r=o._$ST(),o._$gr(r),r>G._$T7){t._$NP|=i._$4s;throw new lt(\"_$gi _$C _$li , _$n0 _$_ version _$li ( SDK : \"+G._$T7+\" < _$f0 : \"+r+\" )@_$SS#loadModel()\\n\")}var h=o._$nP();if(r>=G._$s7){var l=o._$9T(),$=o._$9T();if(-30584!=l||-30584!=$)throw t._$NP|=i._$0s,new lt(\"_$gi _$C _$li , _$0 _$6 _$Ui.\")}t._$KS(h);var u=t.getModelContext();u.setDrawParam(t.getDrawParam()),u.init()}catch(t){_._$Rb(t)}},i.prototype._$KS=function(t){this._$MT=t},i.prototype.getModelImpl=function(){return null==this._$MT&&(this._$MT=new p,this._$MT._$zP()),this._$MT},i.prototype.getCanvasWidth=function(){return null==this._$MT?0:this._$MT.getCanvasWidth()},i.prototype.getCanvasHeight=function(){return null==this._$MT?0:this._$MT.getCanvasHeight()},i.prototype.getParamFloat=function(t){return\"number\"!=typeof t&&(t=this._$5S.getParamIndex(u.getID(t))),this._$5S.getParamFloat(t)},i.prototype.setParamFloat=function(t,i,e){\"number\"!=typeof t&&(t=this._$5S.getParamIndex(u.getID(t))),arguments.length<3&&(e=1),this._$5S.setParamFloat(t,this._$5S.getParamFloat(t)*(1-e)+i*e)},i.prototype.addToParamFloat=function(t,i,e){\"number\"!=typeof t&&(t=this._$5S.getParamIndex(u.getID(t))),arguments.length<3&&(e=1),this._$5S.setParamFloat(t,this._$5S.getParamFloat(t)+i*e)},i.prototype.multParamFloat=function(t,i,e){\"number\"!=typeof t&&(t=this._$5S.getParamIndex(u.getID(t))),arguments.length<3&&(e=1),this._$5S.setParamFloat(t,this._$5S.getParamFloat(t)*(1+(i-1)*e))},i.prototype.getParamIndex=function(t){return this._$5S.getParamIndex(u.getID(t))},i.prototype.loadParam=function(){this._$5S.loadParam()},i.prototype.saveParam=function(){this._$5S.saveParam()},i.prototype.init=function(){this._$5S.init()},i.prototype.update=function(){this._$5S.update()},i.prototype._$Rs=function(){return _._$li(\"_$60 _$PT _$Rs()\"),-1},i.prototype._$Ds=function(t){_._$li(\"_$60 _$PT _$SS#_$Ds() \\n\")},i.prototype._$K2=function(){},i.prototype.draw=function(){},i.prototype.getModelContext=function(){return this._$5S},i.prototype._$s2=function(){return this._$NP},i.prototype._$P7=function(t,i,e,r){var o=-1,n=0,s=this;if(0!=e)if(1==t.length){var _=t[0],a=0!=s.getParamFloat(_),h=i[0],l=s.getPartsOpacity(h),$=e/r;a?(l+=$)>1&&(l=1):(l-=$)<0&&(l=0),s.setPartsOpacity(h,l)}else{for(var u=0;u<t.length;u++){var _=t[u],p=0!=s.getParamFloat(_);if(p){if(o>=0)break;o=u;var h=i[u];n=s.getPartsOpacity(h),n+=e/r,n>1&&(n=1)}}o<0&&(console.log(\"No _$wi _$q0/ _$U default[%s]\",t[0]),o=0,n=1,s.loadParam(),s.setParamFloat(t[o],n),s.saveParam());for(var u=0;u<t.length;u++){var h=i[u];if(o==u)s.setPartsOpacity(h,n);else{var f,c=s.getPartsOpacity(h);f=n<.5?-.5*n/.5+1:.5*(1-n)/.5;var d=(1-f)*(1-n);d>.15&&(f=1-.15/(1-n)),c>f&&(c=f),s.setPartsOpacity(h,c)}}}else for(var u=0;u<t.length;u++){var _=t[u],h=i[u],p=0!=s.getParamFloat(_);s.setPartsOpacity(h,p?1:0)}},i.prototype.setPartsOpacity=function(t,i){\"number\"!=typeof t&&(t=this._$5S.getPartsDataIndex(l.getID(t))),this._$5S.setPartsOpacity(t,i)},i.prototype.getPartsDataIndex=function(t){return t instanceof l||(t=l.getID(t)),this._$5S.getPartsDataIndex(t)},i.prototype.getPartsOpacity=function(t){return\"number\"!=typeof t&&(t=this._$5S.getPartsDataIndex(l.getID(t))),t<0?0:this._$5S.getPartsOpacity(t)},i.prototype.getDrawParam=function(){},i.prototype.getDrawDataIndex=function(t){return this._$5S.getDrawDataIndex(b.getID(t))},i.prototype.getDrawData=function(t){return this._$5S.getDrawData(t)},i.prototype.getTransformedPoints=function(t){var i=this._$5S._$C2(t);return i instanceof ut?i.getTransformedPoints():null},i.prototype.getIndexArray=function(t){if(t<0||t>=this._$5S._$aS.length)return null;var i=this._$5S._$aS[t];return null!=i&&i.getType()==W._$wb&&i instanceof $t?i.getIndexArray():null},e.CHANNEL_COUNT=4,e.RENDER_TEXTURE_USE_MIPMAP=!1,e.NOT_USED_FRAME=-100,e.prototype._$L7=function(){if(this.tmpModelToViewMatrix&&(this.tmpModelToViewMatrix=null),this.tmpMatrix2&&(this.tmpMatrix2=null),this.tmpMatrixForMask&&(this.tmpMatrixForMask=null),this.tmpMatrixForDraw&&(this.tmpMatrixForDraw=null),this.tmpBoundsOnModel&&(this.tmpBoundsOnModel=null),this.CHANNEL_COLORS){for(var t=this.CHANNEL_COLORS.length-1;t>=0;--t)this.CHANNEL_COLORS.splice(t,1);this.CHANNEL_COLORS=[]}this.releaseShader()},e.prototype.releaseShader=function(){for(var t=at.frameBuffers.length,i=0;i<t;i++)this.gl.deleteFramebuffer(at.frameBuffers[i].framebuffer);at.frameBuffers=[],at.glContext=[]},e.prototype.init=function(t,i,e){for(var o=0;o<i.length;o++){var n=i[o].getClipIDList();if(null!=n){var s=this.findSameClip(n);null==s&&(s=new r(this,t,n),this.clipContextList.push(s));var _=i[o].getDrawDataID(),a=t.getDrawDataIndex(_);s.addClippedDrawData(_,a);e[o].clipBufPre_clipContext=s}}},e.prototype.getMaskRenderTexture=function(){var t=null;return t=this.dp_webgl.createFramebuffer(),at.frameBuffers[this.dp_webgl.glno]=t,this.dp_webgl.glno},e.prototype.setupClip=function(t,i){for(var e=0,r=0;r<this.clipContextList.length;r++){var o=this.clipContextList[r];this.calcClippedDrawTotalBounds(t,o),o.isUsing&&e++}if(e>0){var n=i.gl.getParameter(i.gl.FRAMEBUFFER_BINDING),s=new Array(4);s[0]=0,s[1]=0,s[2]=i.gl.canvas.width,s[3]=i.gl.canvas.height,i.gl.viewport(0,0,at.clippingMaskBufferSize,at.clippingMaskBufferSize),this.setupLayoutBounds(e),i.gl.bindFramebuffer(i.gl.FRAMEBUFFER,at.frameBuffers[this.curFrameNo].framebuffer),i.gl.clearColor(0,0,0,0),i.gl.clear(i.gl.COLOR_BUFFER_BIT);for(var r=0;r<this.clipContextList.length;r++){var o=this.clipContextList[r],_=o.allClippedDrawRect,a=(o.layoutChannelNo,o.layoutBounds);this.tmpBoundsOnModel._$jL(_),this.tmpBoundsOnModel.expand(.05*_.width,.05*_.height);var h=a.width/this.tmpBoundsOnModel.width,l=a.height/this.tmpBoundsOnModel.height;this.tmpMatrix2.identity(),this.tmpMatrix2.translate(-1,-1,0),this.tmpMatrix2.scale(2,2,1),this.tmpMatrix2.translate(a.x,a.y,0),this.tmpMatrix2.scale(h,l,1),this.tmpMatrix2.translate(-this.tmpBoundsOnModel.x,-this.tmpBoundsOnModel.y,0),this.tmpMatrixForMask.setMatrix(this.tmpMatrix2.m),this.tmpMatrix2.identity(),this.tmpMatrix2.translate(a.x,a.y,0),this.tmpMatrix2.scale(h,l,1),this.tmpMatrix2.translate(-this.tmpBoundsOnModel.x,-this.tmpBoundsOnModel.y,0),this.tmpMatrixForDraw.setMatrix(this.tmpMatrix2.m);for(var $=this.tmpMatrixForMask.getArray(),u=0;u<16;u++)o.matrixForMask[u]=$[u];for(var p=this.tmpMatrixForDraw.getArray(),u=0;u<16;u++)o.matrixForDraw[u]=p[u];for(var f=o.clippingMaskDrawIndexList.length,c=0;c<f;c++){var d=o.clippingMaskDrawIndexList[c],g=t.getDrawData(d),y=t._$C2(d);i.setClipBufPre_clipContextForMask(o),g.draw(i,t,y)}}i.gl.bindFramebuffer(i.gl.FRAMEBUFFER,n),i.setClipBufPre_clipContextForMask(null),i.gl.viewport(s[0],s[1],s[2],s[3])}},e.prototype.getColorBuffer=function(){return this.colorBuffer},e.prototype.findSameClip=function(t){for(var i=0;i<this.clipContextList.length;i++){var e=this.clipContextList[i],r=e.clipIDList.length;if(r==t.length){for(var o=0,n=0;n<r;n++)for(var s=e.clipIDList[n],_=0;_<r;_++)if(t[_]==s){o++;break}if(o==r)return e}}return null},e.prototype.calcClippedDrawTotalBounds=function(t,i){for(var e=t._$Ri.getModelImpl().getCanvasWidth(),r=t._$Ri.getModelImpl().getCanvasHeight(),o=e>r?e:r,n=o,s=o,_=0,a=0,h=i.clippedDrawContextList.length,l=0;l<h;l++){var $=i.clippedDrawContextList[l],u=$.drawDataIndex,p=t._$C2(u);if(p._$yo()){for(var f=p.getTransformedPoints(),c=f.length,d=[],g=[],y=0,m=U._$i2;m<c;m+=U._$No)d[y]=f[m],g[y]=f[m+1],y++;var T=Math.min.apply(null,d),P=Math.min.apply(null,g),S=Math.max.apply(null,d),v=Math.max.apply(null,g);T<n&&(n=T),P<s&&(s=P),S>_&&(_=S),v>a&&(a=v)}}if(n==o)i.allClippedDrawRect.x=0,i.allClippedDrawRect.y=0,i.allClippedDrawRect.width=0,i.allClippedDrawRect.height=0,i.isUsing=!1;else{var L=_-n,M=a-s;i.allClippedDrawRect.x=n,i.allClippedDrawRect.y=s,i.allClippedDrawRect.width=L,i.allClippedDrawRect.height=M,i.isUsing=!0}},e.prototype.setupLayoutBounds=function(t){var i=t/e.CHANNEL_COUNT,r=t%e.CHANNEL_COUNT;i=~~i,r=~~r;for(var o=0,n=0;n<e.CHANNEL_COUNT;n++){var s=i+(n<r?1:0);if(0==s);else if(1==s){var a=this.clipContextList[o++];a.layoutChannelNo=n,a.layoutBounds.x=0,a.layoutBounds.y=0,a.layoutBounds.width=1,a.layoutBounds.height=1}else if(2==s)for(var h=0;h<s;h++){var l=h%2,$=0;l=~~l;var a=this.clipContextList[o++];a.layoutChannelNo=n,a.layoutBounds.x=.5*l,a.layoutBounds.y=0,a.layoutBounds.width=.5,a.layoutBounds.height=1}else if(s<=4)for(var h=0;h<s;h++){var l=h%2,$=h/2;l=~~l,$=~~$;var a=this.clipContextList[o++];a.layoutChannelNo=n,a.layoutBounds.x=.5*l,a.layoutBounds.y=.5*$,a.layoutBounds.width=.5,a.layoutBounds.height=.5}else if(s<=9)for(var h=0;h<s;h++){var l=h%3,$=h/3;l=~~l,$=~~$;var a=this.clipContextList[o++];a.layoutChannelNo=n,a.layoutBounds.x=l/3,a.layoutBounds.y=$/3,a.layoutBounds.width=1/3,a.layoutBounds.height=1/3}else _._$li(\"_$6 _$0P mask count : %d\",s)}},r.prototype.addClippedDrawData=function(t,i){var e=new o(t,i);this.clippedDrawContextList.push(e)},s._$JT=function(t,i,e){var r=t/i,o=e/i,n=o,s=1-(1-o)*(1-o),_=1-(1-n)*(1-n),a=1/3*(1-o)*s+(n*(2/3)+1/3*(1-n))*(1-s),h=(n+2/3*(1-n))*_+(o*(1/3)+2/3*(1-o))*(1-_),l=1-3*h+3*a-0,$=3*h-6*a+0,u=3*a-0;if(r<=0)return 0;if(r>=1)return 1;var p=r,f=p*p;return l*(p*f)+$*f+u*p+0},s.prototype._$a0=function(){},s.prototype.setFadeIn=function(t){this._$dP=t},s.prototype.setFadeOut=function(t){this._$eo=t},s.prototype._$pT=function(t){this._$V0=t},s.prototype.getFadeOut=function(){return this._$eo},s.prototype._$4T=function(){return this._$eo},s.prototype._$mT=function(){return this._$V0},s.prototype.getDurationMSec=function(){return-1},s.prototype.getLoopDurationMSec=function(){return-1},s.prototype.updateParam=function(t,i){if(i._$AT&&!i._$9L){var e=w.getUserTimeMSec();if(i._$z2<0){i._$z2=e,i._$bs=e;var r=this.getDurationMSec();i._$Do<0&&(i._$Do=r<=0?-1:i._$z2+r)}var o=this._$V0;o=o*(0==this._$dP?1:ht._$r2((e-i._$bs)/this._$dP))*(0==this._$eo||i._$Do<0?1:ht._$r2((i._$Do-e)/this._$eo)),0<=o&&o<=1||console.log(\"### assert!! ### \"),this.updateParamExe(t,e,o,i),i._$Do>0&&i._$Do<e&&(i._$9L=!0)}},s.prototype.updateParamExe=function(t,i,e,r){},_._$8s=0,_._$fT=new Object,_.start=function(t){var i=_._$fT[t];null==i&&(i=new a,i._$r=t,_._$fT[t]=i),i._$0S=w.getSystemTimeMSec()},_.dump=function(t){var i=_._$fT[t];if(null!=i){var e=w.getSystemTimeMSec(),r=e-i._$0S;return console.log(t+\" : \"+r+\"ms\"),r}return-1},_.end=function(t){var i=_._$fT[t];if(null!=i){return w.getSystemTimeMSec()-i._$0S}return-1},_._$li=function(t,i){console.log(\"_$li : \"+t+\"\\n\",i)},_._$Ji=function(t,i){console.log(t,i)},_._$dL=function(t,i){console.log(t,i),console.log(\"\\n\")},_._$KL=function(t,i){for(var e=0;e<i;e++)e%16==0&&e>0?console.log(\"\\n\"):e%8==0&&e>0&&console.log(\"  \"),console.log(\"%02X \",255&t[e]);console.log(\"\\n\")},_._$nr=function(t,i,e){console.log(\"%s\\n\",t);for(var r=i.length,o=0;o<r;++o)console.log(\"%5d\",i[o]),console.log(\"%s\\n\",e),console.log(\",\");console.log(\"\\n\")},_._$Rb=function(t){console.log(\"dump exception : \"+t),console.log(\"stack :: \"+t.stack)},h.prototype._$8P=function(){return.5*(this.x+this.x+this.width)},h.prototype._$6P=function(){return.5*(this.y+this.y+this.height)},h.prototype._$EL=function(){return this.x+this.width},h.prototype._$5T=function(){return this.y+this.height},h.prototype._$jL=function(t,i,e,r){this.x=t,this.y=i,this.width=e,this.height=r},h.prototype._$jL=function(t){this.x=t.x,this.y=t.y,this.width=t.width,this.height=t.height},l.prototype=new et,l._$tP=new Object,l._$27=function(){l._$tP.clear()},l.getID=function(t){var i=l._$tP[t];return null==i&&(i=new l(t),l._$tP[t]=i),i},l.prototype._$3s=function(){return new l},u.prototype=new et,u._$tP=new Object,u._$27=function(){u._$tP.clear()},u.getID=function(t){var i=u._$tP[t];return null==i&&(i=new u(t),u._$tP[t]=i),i},u.prototype._$3s=function(){return new u},p._$42=0,p.prototype._$zP=function(){null==this._$vo&&(this._$vo=new ot),null==this._$F2&&(this._$F2=new Array)},p.prototype.getCanvasWidth=function(){return this._$ao},p.prototype.getCanvasHeight=function(){return this._$1S},p.prototype._$F0=function(t){this._$vo=t._$nP(),this._$F2=t._$nP(),this._$ao=t._$6L(),this._$1S=t._$6L()},p.prototype._$6S=function(t){this._$F2.push(t)},p.prototype._$Xr=function(){return this._$F2},p.prototype._$E2=function(){return this._$vo},f.prototype.setup=function(t,i,e){this._$ks=this._$Yb(),this.p2._$xT(),3==arguments.length&&(this._$Fo=t,this._$L2=i,this.p1._$p=e,this.p2._$p=e,this.p2.y=t,this.setup())},f.prototype.getPhysicsPoint1=function(){return this.p1},f.prototype.getPhysicsPoint2=function(){return this.p2},f.prototype._$qr=function(){return this._$Db},f.prototype._$pr=function(t){this._$Db=t},f.prototype._$5r=function(){return this._$M2},f.prototype._$Cs=function(){return this._$9b},f.prototype._$Yb=function(){return-180*Math.atan2(this.p1.x-this.p2.x,-(this.p1.y-this.p2.y))/Math.PI},f.prototype.addSrcParam=function(t,i,e,r){var o=new g(t,i,e,r);this._$lL.push(o)},f.prototype.addTargetParam=function(t,i,e,r){var o=new T(t,i,e,r);this._$qP.push(o)},f.prototype.update=function(t,i){if(0==this._$iP)return this._$iP=this._$iT=i,void(this._$Fo=Math.sqrt((this.p1.x-this.p2.x)*(this.p1.x-this.p2.x)+(this.p1.y-this.p2.y)*(this.p1.y-this.p2.y)));var e=(i-this._$iT)/1e3;if(0!=e){for(var r=this._$lL.length-1;r>=0;--r){this._$lL[r]._$oP(t,this)}this._$oo(t,e),this._$M2=this._$Yb(),this._$9b=(this._$M2-this._$ks)/e,this._$ks=this._$M2}for(var r=this._$qP.length-1;r>=0;--r){this._$qP[r]._$YS(t,this)}this._$iT=i},f.prototype._$oo=function(t,i){i<.033&&(i=.033);var e=1/i;this.p1.vx=(this.p1.x-this.p1._$s0)*e,this.p1.vy=(this.p1.y-this.p1._$70)*e,this.p1.ax=(this.p1.vx-this.p1._$7L)*e,this.p1.ay=(this.p1.vy-this.p1._$HL)*e,this.p1.fx=this.p1.ax*this.p1._$p,this.p1.fy=this.p1.ay*this.p1._$p,this.p1._$xT();var r,o,n=-Math.atan2(this.p1.y-this.p2.y,this.p1.x-this.p2.x),s=Math.cos(n),_=Math.sin(n),a=9.8*this.p2._$p,h=this._$Db*Lt._$bS,l=a*Math.cos(n-h);r=l*_,o=l*s;var $=-this.p1.fx*_*_,u=-this.p1.fy*_*s,p=-this.p2.vx*this._$L2,f=-this.p2.vy*this._$L2;this.p2.fx=r+$+p,this.p2.fy=o+u+f,this.p2.ax=this.p2.fx/this.p2._$p,this.p2.ay=this.p2.fy/this.p2._$p,this.p2.vx+=this.p2.ax*i,this.p2.vy+=this.p2.ay*i,this.p2.x+=this.p2.vx*i,this.p2.y+=this.p2.vy*i;var c=Math.sqrt((this.p1.x-this.p2.x)*(this.p1.x-this.p2.x)+(this.p1.y-this.p2.y)*(this.p1.y-this.p2.y));this.p2.x=this.p1.x+this._$Fo*(this.p2.x-this.p1.x)/c,this.p2.y=this.p1.y+this._$Fo*(this.p2.y-this.p1.y)/c,this.p2.vx=(this.p2.x-this.p2._$s0)*e,this.p2.vy=(this.p2.y-this.p2._$70)*e,this.p2._$xT()},c.prototype._$xT=function(){this._$s0=this.x,this._$70=this.y,this._$7L=this.vx,this._$HL=this.vy},d.prototype._$oP=function(t,i){},g.prototype=new d,g.prototype._$oP=function(t,i){var e=this.scale*t.getParamFloat(this._$wL),r=i.getPhysicsPoint1();switch(this._$tL){default:case f.Src.SRC_TO_X:r.x=r.x+(e-r.x)*this._$V0;break;case f.Src.SRC_TO_Y:r.y=r.y+(e-r.y)*this._$V0;break;case f.Src.SRC_TO_G_ANGLE:var o=i._$qr();o+=(e-o)*this._$V0,i._$pr(o)}},y.prototype._$YS=function(t,i){},T.prototype=new y,T.prototype._$YS=function(t,i){switch(this._$YP){default:case f.Target.TARGET_FROM_ANGLE:t.setParamFloat(this._$wL,this.scale*i._$5r(),this._$V0);break;case f.Target.TARGET_FROM_ANGLE_V:t.setParamFloat(this._$wL,this.scale*i._$Cs(),this._$V0)}},f.Src=function(){},f.Src.SRC_TO_X=\"SRC_TO_X\",f.Src.SRC_TO_Y=\"SRC_TO_Y\",f.Src.SRC_TO_G_ANGLE=\"SRC_TO_G_ANGLE\",f.Target=function(){},f.Target.TARGET_FROM_ANGLE=\"TARGET_FROM_ANGLE\",f.Target.TARGET_FROM_ANGLE_V=\"TARGET_FROM_ANGLE_V\",P.prototype.init=function(t){this._$fL=t._$fL,this._$gL=t._$gL,this._$B0=t._$B0,this._$z0=t._$z0,this._$qT=t._$qT,this.reflectX=t.reflectX,this.reflectY=t.reflectY},P.prototype._$F0=function(t){this._$fL=t._$_T(),this._$gL=t._$_T(),this._$B0=t._$_T(),this._$z0=t._$_T(),this._$qT=t._$_T(),t.getFormatVersion()>=G.LIVE2D_FORMAT_VERSION_V2_10_SDK2&&(this.reflectX=t._$po(),this.reflectY=t._$po())},P.prototype._$e=function(){};var It=function(){};It._$ni=function(t,i,e,r,o,n,s,_,a){var h=s*n-_*o;if(0==h)return null;var l,$=((t-e)*n-(i-r)*o)/h;return l=0!=o?(t-e-$*s)/o:(i-r-$*_)/n,isNaN(l)&&(l=(t-e-$*s)/o,isNaN(l)&&(l=(i-r-$*_)/n),isNaN(l)&&(console.log(\"a is NaN @UtVector#_$ni() \"),console.log(\"v1x : \"+o),console.log(\"v1x != 0 ? \"+(0!=o)))),null==a?new Array(l,$):(a[0]=l,a[1]=$,a)},S.prototype._$8P=function(){return this.x+.5*this.width},S.prototype._$6P=function(){return this.y+.5*this.height},S.prototype._$EL=function(){return this.x+this.width},S.prototype._$5T=function(){return this.y+this.height},S.prototype._$jL=function(t,i,e,r){this.x=t,this.y=i,this.width=e,this.height=r},S.prototype._$jL=function(t){this.x=t.x,this.y=t.y,this.width=t.width,this.height=t.height},S.prototype.contains=function(t,i){return this.x<=this.x&&this.y<=this.y&&this.x<=this.x+this.width&&this.y<=this.y+this.height},S.prototype.expand=function(t,i){this.x-=t,this.y-=i,this.width+=2*t,this.height+=2*i},v._$Z2=function(t,i,e,r){var o=i._$Q2(t,e),n=t._$vs(),s=t._$Tr();if(i._$zr(n,s,o),o<=0)return r[n[0]];if(1==o){var _=r[n[0]],a=r[n[1]],h=s[0];return _+(a-_)*h|0}if(2==o){var _=r[n[0]],a=r[n[1]],l=r[n[2]],$=r[n[3]],h=s[0],u=s[1],p=_+(a-_)*h|0,f=l+($-l)*h|0;return p+(f-p)*u|0}if(3==o){var c=r[n[0]],d=r[n[1]],g=r[n[2]],y=r[n[3]],m=r[n[4]],T=r[n[5]],P=r[n[6]],S=r[n[7]],h=s[0],u=s[1],v=s[2],_=c+(d-c)*h|0,a=g+(y-g)*h|0,l=m+(T-m)*h|0,$=P+(S-P)*h|0,p=_+(a-_)*u|0,f=l+($-l)*u|0;return p+(f-p)*v|0}if(4==o){var L=r[n[0]],M=r[n[1]],E=r[n[2]],A=r[n[3]],I=r[n[4]],w=r[n[5]],x=r[n[6]],O=r[n[7]],D=r[n[8]],R=r[n[9]],b=r[n[10]],F=r[n[11]],C=r[n[12]],N=r[n[13]],B=r[n[14]],U=r[n[15]],h=s[0],u=s[1],v=s[2],G=s[3],c=L+(M-L)*h|0,d=E+(A-E)*h|0,g=I+(w-I)*h|0,y=x+(O-x)*h|0,m=D+(R-D)*h|0,T=b+(F-b)*h|0,P=C+(N-C)*h|0,S=B+(U-B)*h|0,_=c+(d-c)*u|0,a=g+(y-g)*u|0,l=m+(T-m)*u|0,$=P+(S-P)*u|0,p=_+(a-_)*v|0,f=l+($-l)*v|0;return p+(f-p)*G|0}for(var Y=1<<o,k=new Float32Array(Y),V=0;V<Y;V++){for(var X=V,z=1,H=0;H<o;H++)z*=X%2==0?1-s[H]:s[H],X/=2;k[V]=z}for(var W=new Float32Array(Y),j=0;j<Y;j++)W[j]=r[n[j]];for(var q=0,j=0;j<Y;j++)q+=k[j]*W[j];return q+.5|0},v._$br=function(t,i,e,r){var o=i._$Q2(t,e),n=t._$vs(),s=t._$Tr();if(i._$zr(n,s,o),o<=0)return r[n[0]];if(1==o){var _=r[n[0]],a=r[n[1]],h=s[0];return _+(a-_)*h}if(2==o){var _=r[n[0]],a=r[n[1]],l=r[n[2]],$=r[n[3]],h=s[0],u=s[1];return(1-u)*(_+(a-_)*h)+u*(l+($-l)*h)}if(3==o){var p=r[n[0]],f=r[n[1]],c=r[n[2]],d=r[n[3]],g=r[n[4]],y=r[n[5]],m=r[n[6]],T=r[n[7]],h=s[0],u=s[1],P=s[2];return(1-P)*((1-u)*(p+(f-p)*h)+u*(c+(d-c)*h))+P*((1-u)*(g+(y-g)*h)+u*(m+(T-m)*h))}if(4==o){var S=r[n[0]],v=r[n[1]],L=r[n[2]],M=r[n[3]],E=r[n[4]],A=r[n[5]],I=r[n[6]],w=r[n[7]],x=r[n[8]],O=r[n[9]],D=r[n[10]],R=r[n[11]],b=r[n[12]],F=r[n[13]],C=r[n[14]],N=r[n[15]],h=s[0],u=s[1],P=s[2],B=s[3];return(1-B)*((1-P)*((1-u)*(S+(v-S)*h)+u*(L+(M-L)*h))+P*((1-u)*(E+(A-E)*h)+u*(I+(w-I)*h)))+B*((1-P)*((1-u)*(x+(O-x)*h)+u*(D+(R-D)*h))+P*((1-u)*(b+(F-b)*h)+u*(C+(N-C)*h)))}for(var U=1<<o,G=new Float32Array(U),Y=0;Y<U;Y++){for(var k=Y,V=1,X=0;X<o;X++)V*=k%2==0?1-s[X]:s[X],k/=2;G[Y]=V}for(var z=new Float32Array(U),H=0;H<U;H++)z[H]=r[n[H]];for(var W=0,H=0;H<U;H++)W+=G[H]*z[H];return W},v._$Vr=function(t,i,e,r,o,n,s,_){var a=i._$Q2(t,e),h=t._$vs(),l=t._$Tr();i._$zr(h,l,a);var $=2*r,u=s;if(a<=0){var p=h[0],f=o[p];if(2==_&&0==s)w._$jT(f,0,n,0,$);else for(var c=0;c<$;)n[u]=f[c++],n[u+1]=f[c++],u+=_}else if(1==a)for(var f=o[h[0]],d=o[h[1]],g=l[0],y=1-g,c=0;c<$;)n[u]=f[c]*y+d[c]*g,++c,n[u+1]=f[c]*y+d[c]*g,++c,u+=_;else if(2==a)for(var f=o[h[0]],d=o[h[1]],m=o[h[2]],T=o[h[3]],g=l[0],P=l[1],y=1-g,S=1-P,v=S*y,L=S*g,M=P*y,E=P*g,c=0;c<$;)n[u]=v*f[c]+L*d[c]+M*m[c]+E*T[c],++c,n[u+1]=v*f[c]+L*d[c]+M*m[c]+E*T[c],++c,u+=_;else if(3==a)for(var A=o[h[0]],I=o[h[1]],x=o[h[2]],O=o[h[3]],D=o[h[4]],R=o[h[5]],b=o[h[6]],F=o[h[7]],g=l[0],P=l[1],C=l[2],y=1-g,S=1-P,N=1-C,B=N*S*y,U=N*S*g,G=N*P*y,Y=N*P*g,k=C*S*y,V=C*S*g,X=C*P*y,z=C*P*g,c=0;c<$;)n[u]=B*A[c]+U*I[c]+G*x[c]+Y*O[c]+k*D[c]+V*R[c]+X*b[c]+z*F[c],++c,n[u+1]=B*A[c]+U*I[c]+G*x[c]+Y*O[c]+k*D[c]+V*R[c]+X*b[c]+z*F[c],++c,u+=_;else if(4==a)for(var H=o[h[0]],W=o[h[1]],j=o[h[2]],q=o[h[3]],J=o[h[4]],Q=o[h[5]],Z=o[h[6]],K=o[h[7]],tt=o[h[8]],it=o[h[9]],et=o[h[10]],rt=o[h[11]],ot=o[h[12]],nt=o[h[13]],st=o[h[14]],_t=o[h[15]],g=l[0],P=l[1],C=l[2],at=l[3],y=1-g,S=1-P,N=1-C,ht=1-at,lt=ht*N*S*y,$t=ht*N*S*g,ut=ht*N*P*y,pt=ht*N*P*g,ft=ht*C*S*y,ct=ht*C*S*g,dt=ht*C*P*y,gt=ht*C*P*g,yt=at*N*S*y,mt=at*N*S*g,Tt=at*N*P*y,Pt=at*N*P*g,St=at*C*S*y,vt=at*C*S*g,Lt=at*C*P*y,Mt=at*C*P*g,c=0;c<$;)n[u]=lt*H[c]+$t*W[c]+ut*j[c]+pt*q[c]+ft*J[c]+ct*Q[c]+dt*Z[c]+gt*K[c]+yt*tt[c]+mt*it[c]+Tt*et[c]+Pt*rt[c]+St*ot[c]+vt*nt[c]+Lt*st[c]+Mt*_t[c],++c,n[u+1]=lt*H[c]+$t*W[c]+ut*j[c]+pt*q[c]+ft*J[c]+ct*Q[c]+dt*Z[c]+gt*K[c]+yt*tt[c]+mt*it[c]+Tt*et[c]+Pt*rt[c]+St*ot[c]+vt*nt[c]+Lt*st[c]+Mt*_t[c],++c,u+=_;else{for(var Et=1<<a,At=new Float32Array(Et),It=0;It<Et;It++){for(var wt=It,xt=1,Ot=0;Ot<a;Ot++)xt*=wt%2==0?1-l[Ot]:l[Ot],wt/=2;At[It]=xt}for(var Dt=new Float32Array(Et),Rt=0;Rt<Et;Rt++)Dt[Rt]=o[h[Rt]];for(var c=0;c<$;){for(var bt=0,Ft=0,Ct=c+1,Rt=0;Rt<Et;Rt++)bt+=At[Rt]*Dt[Rt][c],Ft+=At[Rt]*Dt[Rt][Ct];c+=2,n[u]=bt,n[u+1]=Ft,u+=_}}},L.prototype._$HT=function(t,i){this.x=t,this.y=i},L.prototype._$HT=function(t){this.x=t.x,this.y=t.y},M._$ur=-2,M._$ES=500,M._$wb=2,M._$8S=3,M._$52=M._$ES,M._$R2=M._$ES,M._$or=function(){return M._$52},M._$Pr=function(){return M._$R2},M.prototype.convertClipIDForV2_11=function(t){var i=[];return null==t?null:0==t.length?null:/,/.test(t)?i=t.id.split(\",\"):(i.push(t.id),i)},M.prototype._$F0=function(t){this._$gP=t._$nP(),this._$dr=t._$nP(),this._$GS=t._$nP(),this._$qb=t._$6L(),this._$Lb=t._$cS(),this._$mS=t._$Tb(),t.getFormatVersion()>=G._$T7?(this.clipID=t._$nP(),this.clipIDList=this.convertClipIDForV2_11(this.clipID)):this.clipIDList=[],this._$MS(this._$Lb)},M.prototype.getClipIDList=function(){return this.clipIDList},M.prototype.init=function(t){},M.prototype._$Nr=function(t,i){if(i._$IS[0]=!1,i._$Us=v._$Z2(t,this._$GS,i._$IS,this._$Lb),at._$Zs);else if(i._$IS[0])return;i._$7s=v._$br(t,this._$GS,i._$IS,this._$mS)},M.prototype._$2b=function(t,i){},M.prototype.getDrawDataID=function(){return this._$gP},M.prototype._$j2=function(t){this._$gP=t},M.prototype.getOpacity=function(t,i){return i._$7s},M.prototype._$zS=function(t,i){return i._$Us},M.prototype._$MS=function(t){for(var i=t.length-1;i>=0;--i){var e=t[i];e<M._$52?M._$52=e:e>M._$R2&&(M._$R2=e)}},M.prototype.getTargetBaseDataID=function(){return this._$dr},M.prototype._$gs=function(t){this._$dr=t},M.prototype._$32=function(){return null!=this._$dr&&this._$dr!=yt._$2o()},M.prototype.preDraw=function(t,i,e){},M.prototype.draw=function(t,i,e){},M.prototype.getType=function(){},M.prototype._$B2=function(t,i,e){},E._$ps=32,E.CLIPPING_PROCESS_NONE=0,E.CLIPPING_PROCESS_OVERWRITE_ALPHA=1,E.CLIPPING_PROCESS_MULTIPLY_ALPHA=2,E.CLIPPING_PROCESS_DRAW=3,E.CLIPPING_PROCESS_CLEAR_ALPHA=4,E.prototype.setChannelFlagAsColor=function(t,i){this.CHANNEL_COLORS[t]=i},E.prototype.getChannelFlagAsColor=function(t){return this.CHANNEL_COLORS[t]},E.prototype._$ZT=function(){},E.prototype._$Uo=function(t,i,e,r,o,n,s){},E.prototype._$Rs=function(){return-1},E.prototype._$Ds=function(t){},E.prototype.setBaseColor=function(t,i,e,r){t<0?t=0:t>1&&(t=1),i<0?i=0:i>1&&(i=1),e<0?e=0:e>1&&(e=1),r<0?r=0:r>1&&(r=1),this._$lT=t,this._$C0=i,this._$tT=e,this._$WL=r},E.prototype._$WP=function(t){this.culling=t},E.prototype.setMatrix=function(t){for(var i=0;i<16;i++)this.matrix4x4[i]=t[i]},E.prototype._$IT=function(){return this.matrix4x4},E.prototype.setPremultipliedAlpha=function(t){this.premultipliedAlpha=t},E.prototype.isPremultipliedAlpha=function(){return this.premultipliedAlpha},E.prototype.setAnisotropy=function(t){this.anisotropy=t},E.prototype.getAnisotropy=function(){return this.anisotropy},E.prototype.getClippingProcess=function(){return this.clippingProcess},E.prototype.setClippingProcess=function(t){this.clippingProcess=t},E.prototype.setClipBufPre_clipContextForMask=function(t){this.clipBufPre_clipContextMask=t},E.prototype.getClipBufPre_clipContextMask=function(){return this.clipBufPre_clipContextMask},E.prototype.setClipBufPre_clipContextForDraw=function(t){this.clipBufPre_clipContextDraw=t},E.prototype.getClipBufPre_clipContextDraw=function(){return this.clipBufPre_clipContextDraw},I._$ur=-2,I._$c2=1,I._$_b=2,I.prototype._$F0=function(t){this._$kP=t._$nP(),this._$dr=t._$nP()},I.prototype.readV2_opacity=function(t){t.getFormatVersion()>=G.LIVE2D_FORMAT_VERSION_V2_10_SDK2&&(this._$mS=t._$Tb())},I.prototype.init=function(t){},I.prototype._$Nr=function(t,i){},I.prototype.interpolateOpacity=function(t,i,e,r){null==this._$mS?e.setInterpolatedOpacity(1):e.setInterpolatedOpacity(v._$br(t,i,r,this._$mS))},I.prototype._$2b=function(t,i){},I.prototype._$nb=function(t,i,e,r,o,n,s){},I.prototype.getType=function(){},I.prototype._$gs=function(t){this._$dr=t},I.prototype._$a2=function(t){this._$kP=t},I.prototype.getTargetBaseDataID=function(){return this._$dr},I.prototype.getBaseDataID=function(){return this._$kP},I.prototype._$32=function(){return null!=this._$dr&&this._$dr!=yt._$2o()},w._$W2=0,w._$CS=w._$W2,w._$Mo=function(){return!0},w._$XP=function(t){try{for(var i=getTimeMSec();getTimeMSec()-i<t;);}catch(t){t._$Rb()}},w.getUserTimeMSec=function(){return w._$CS==w._$W2?w.getSystemTimeMSec():w._$CS},w.setUserTimeMSec=function(t){w._$CS=t},w.updateUserTimeMSec=function(){return w._$CS=w.getSystemTimeMSec()},w.getTimeMSec=function(){return(new Date).getTime()},w.getSystemTimeMSec=function(){return(new Date).getTime()},w._$Q=function(t){},w._$jT=function(t,i,e,r,o){for(var n=0;n<o;n++)e[r+n]=t[i+n]},x._$ds=-2,x.prototype._$F0=function(t){this._$wL=t._$nP(),this._$VP=t._$6L(),this._$GP=t._$nP()},x.prototype.getParamIndex=function(t){return this._$2r!=t&&(this._$8o=x._$ds),this._$8o},x.prototype._$Pb=function(t,i){this._$8o=t,this._$2r=i},x.prototype.getParamID=function(){return this._$wL},x.prototype._$yP=function(t){this._$wL=t},x.prototype._$N2=function(){return this._$VP},x.prototype._$d2=function(){return this._$GP},x.prototype._$t2=function(t,i){this._$VP=t,this._$GP=i},x.prototype._$Lr=function(){return this._$O2},x.prototype._$wr=function(t){this._$O2=t},x.prototype._$SL=function(){return this._$ri},x.prototype._$AL=function(t){this._$ri=t},O.startsWith=function(t,i,e){var r=i+e.length;if(r>=t.length)return!1;for(var o=i;o<r;o++)if(O.getChar(t,o)!=e.charAt(o-i))return!1;return!0},O.getChar=function(t,i){return String.fromCharCode(t.getUint8(i))},O.createString=function(t,i,e){for(var r=new ArrayBuffer(2*e),o=new Uint16Array(r),n=0;n<e;n++)o[n]=t.getUint8(i+n);return String.fromCharCode.apply(null,o)},O._$LS=function(t,i,e,r){t instanceof ArrayBuffer&&(t=new DataView(t));var o=e,n=!1,s=!1,_=0,a=O.getChar(t,o);\"-\"==a&&(n=!0,o++);for(var h=!1;o<i;o++){switch(a=O.getChar(t,o)){case\"0\":_*=10;break;case\"1\":_=10*_+1;break;case\"2\":_=10*_+2;break;case\"3\":_=10*_+3;break;case\"4\":_=10*_+4;break;case\"5\":_=10*_+5;break;case\"6\":_=10*_+6;break;case\"7\":_=10*_+7;break;case\"8\":_=10*_+8;break;case\"9\":_=10*_+9;break;case\".\":s=!0,o++,h=!0;break;default:h=!0}if(h)break}if(s)for(var l=.1,$=!1;o<i;o++){switch(a=O.getChar(t,o)){case\"0\":break;case\"1\":_+=1*l;break;case\"2\":_+=2*l;break;case\"3\":_+=3*l;break;case\"4\":_+=4*l;break;case\"5\":_+=5*l;break;case\"6\":_+=6*l;break;case\"7\":_+=7*l;break;case\"8\":_+=8*l;break;case\"9\":_+=9*l;break;default:$=!0}if(l*=.1,$)break}return n&&(_=-_),r[0]=o,_},D.prototype._$zP=function(){this._$Ob=new Array},D.prototype._$F0=function(t){this._$Ob=t._$nP()},D.prototype._$Ur=function(t){if(t._$WS())return!0;for(var i=t._$v2(),e=this._$Ob.length-1;e>=0;--e){var r=this._$Ob[e].getParamIndex(i);if(r==x._$ds&&(r=t.getParamIndex(this._$Ob[e].getParamID())),t._$Xb(r))return!0}return!1},D.prototype._$Q2=function(t,i){for(var e,r,o=this._$Ob.length,n=t._$v2(),s=0,_=0;_<o;_++){var a=this._$Ob[_];if(e=a.getParamIndex(n),e==x._$ds&&(e=t.getParamIndex(a.getParamID()),a._$Pb(e,n)),e<0)throw new Exception(\"err 23242 : \"+a.getParamID());var h=e<0?0:t.getParamFloat(e);r=a._$N2();var l,$,u=a._$d2(),p=-1,f=0;if(r<1);else if(1==r)l=u[0],l-U._$J<h&&h<l+U._$J?(p=0,f=0):(p=0,i[0]=!0);else if(l=u[0],h<l-U._$J)p=0,i[0]=!0;else if(h<l+U._$J)p=0;else{for(var c=!1,d=1;d<r;++d){if($=u[d],h<$+U._$J){$-U._$J<h?p=d:(p=d-1,f=(h-l)/($-l),s++),c=!0;break}l=$}c||(p=r-1,f=0,i[0]=!0)}a._$wr(p),a._$AL(f)}return s},D.prototype._$zr=function(t,i,e){var r=1<<e;r+1>U._$Qb&&console.log(\"err 23245\\n\");for(var o=this._$Ob.length,n=1,s=1,_=0,a=0;a<r;++a)t[a]=0;for(var h=0;h<o;++h){var l=this._$Ob[h];if(0==l._$SL()){var $=l._$Lr()*n;if($<0&&at._$3T)throw new Exception(\"err 23246\");for(var a=0;a<r;++a)t[a]+=$}else{for(var $=n*l._$Lr(),u=n*(l._$Lr()+1),a=0;a<r;++a)t[a]+=(a/s|0)%2==0?$:u;i[_++]=l._$SL(),s*=2}n*=l._$N2()}t[r]=65535,i[_]=-1},D.prototype._$h2=function(t,i,e){for(var r=new Float32Array(i),o=0;o<i;++o)r[o]=e[o];var n=new x;n._$yP(t),n._$t2(i,r),this._$Ob.push(n)},D.prototype._$J2=function(t){for(var i=t,e=this._$Ob.length,r=0;r<e;++r){var o=this._$Ob[r],n=o._$N2(),s=i%o._$N2(),_=o._$d2()[s];console.log(\"%s[%d]=%7.2f / \",o.getParamID(),s,_),i/=n}console.log(\"\\n\")},D.prototype.getParamCount=function(){return this._$Ob.length},D.prototype._$zs=function(){return this._$Ob},R.prototype.identity=function(){for(var t=0;t<16;t++)this.m[t]=t%5==0?1:0},R.prototype.getArray=function(){return this.m},R.prototype.getCopyMatrix=function(){return new Float32Array(this.m)},R.prototype.setMatrix=function(t){if(null!=t&&16==t.length)for(var i=0;i<16;i++)this.m[i]=t[i]},R.prototype.mult=function(t,i,e){return null==i?null:(this==i?this.mult_safe(this.m,t.m,i.m,e):this.mult_fast(this.m,t.m,i.m,e),i)},R.prototype.mult_safe=function(t,i,e,r){if(t==e){var o=new Array(16);this.mult_fast(t,i,o,r);for(var n=15;n>=0;--n)e[n]=o[n]}else this.mult_fast(t,i,e,r)},R.prototype.mult_fast=function(t,i,e,r){r?(e[0]=t[0]*i[0]+t[4]*i[1]+t[8]*i[2],e[4]=t[0]*i[4]+t[4]*i[5]+t[8]*i[6],e[8]=t[0]*i[8]+t[4]*i[9]+t[8]*i[10],e[12]=t[0]*i[12]+t[4]*i[13]+t[8]*i[14]+t[12],e[1]=t[1]*i[0]+t[5]*i[1]+t[9]*i[2],e[5]=t[1]*i[4]+t[5]*i[5]+t[9]*i[6],e[9]=t[1]*i[8]+t[5]*i[9]+t[9]*i[10],e[13]=t[1]*i[12]+t[5]*i[13]+t[9]*i[14]+t[13],e[2]=t[2]*i[0]+t[6]*i[1]+t[10]*i[2],e[6]=t[2]*i[4]+t[6]*i[5]+t[10]*i[6],e[10]=t[2]*i[8]+t[6]*i[9]+t[10]*i[10],e[14]=t[2]*i[12]+t[6]*i[13]+t[10]*i[14]+t[14],e[3]=e[7]=e[11]=0,e[15]=1):(e[0]=t[0]*i[0]+t[4]*i[1]+t[8]*i[2]+t[12]*i[3],e[4]=t[0]*i[4]+t[4]*i[5]+t[8]*i[6]+t[12]*i[7],e[8]=t[0]*i[8]+t[4]*i[9]+t[8]*i[10]+t[12]*i[11],e[12]=t[0]*i[12]+t[4]*i[13]+t[8]*i[14]+t[12]*i[15],e[1]=t[1]*i[0]+t[5]*i[1]+t[9]*i[2]+t[13]*i[3],e[5]=t[1]*i[4]+t[5]*i[5]+t[9]*i[6]+t[13]*i[7],e[9]=t[1]*i[8]+t[5]*i[9]+t[9]*i[10]+t[13]*i[11],e[13]=t[1]*i[12]+t[5]*i[13]+t[9]*i[14]+t[13]*i[15],e[2]=t[2]*i[0]+t[6]*i[1]+t[10]*i[2]+t[14]*i[3],e[6]=t[2]*i[4]+t[6]*i[5]+t[10]*i[6]+t[14]*i[7],e[10]=t[2]*i[8]+t[6]*i[9]+t[10]*i[10]+t[14]*i[11],e[14]=t[2]*i[12]+t[6]*i[13]+t[10]*i[14]+t[14]*i[15],e[3]=t[3]*i[0]+t[7]*i[1]+t[11]*i[2]+t[15]*i[3],e[7]=t[3]*i[4]+t[7]*i[5]+t[11]*i[6]+t[15]*i[7],e[11]=t[3]*i[8]+t[7]*i[9]+t[11]*i[10]+t[15]*i[11],e[15]=t[3]*i[12]+t[7]*i[13]+t[11]*i[14]+t[15]*i[15])},R.prototype.translate=function(t,i,e){this.m[12]=this.m[0]*t+this.m[4]*i+this.m[8]*e+this.m[12],this.m[13]=this.m[1]*t+this.m[5]*i+this.m[9]*e+this.m[13],this.m[14]=this.m[2]*t+this.m[6]*i+this.m[10]*e+this.m[14],this.m[15]=this.m[3]*t+this.m[7]*i+this.m[11]*e+this.m[15]},R.prototype.scale=function(t,i,e){this.m[0]*=t,this.m[4]*=i,this.m[8]*=e,this.m[1]*=t,this.m[5]*=i,this.m[9]*=e,this.m[2]*=t,this.m[6]*=i,this.m[10]*=e,this.m[3]*=t,this.m[7]*=i,this.m[11]*=e},R.prototype.rotateX=function(t){var i=Lt.fcos(t),e=Lt._$9(t),r=this.m[4];this.m[4]=r*i+this.m[8]*e,this.m[8]=r*-e+this.m[8]*i,r=this.m[5],this.m[5]=r*i+this.m[9]*e,this.m[9]=r*-e+this.m[9]*i,r=this.m[6],this.m[6]=r*i+this.m[10]*e,this.m[10]=r*-e+this.m[10]*i,r=this.m[7],this.m[7]=r*i+this.m[11]*e,this.m[11]=r*-e+this.m[11]*i},R.prototype.rotateY=function(t){var i=Lt.fcos(t),e=Lt._$9(t),r=this.m[0];this.m[0]=r*i+this.m[8]*-e,this.m[8]=r*e+this.m[8]*i,r=this.m[1],this.m[1]=r*i+this.m[9]*-e,this.m[9]=r*e+this.m[9]*i,r=m[2],this.m[2]=r*i+this.m[10]*-e,this.m[10]=r*e+this.m[10]*i,r=m[3],this.m[3]=r*i+this.m[11]*-e,this.m[11]=r*e+this.m[11]*i},R.prototype.rotateZ=function(t){var i=Lt.fcos(t),e=Lt._$9(t),r=this.m[0];this.m[0]=r*i+this.m[4]*e,this.m[4]=r*-e+this.m[4]*i,r=this.m[1],this.m[1]=r*i+this.m[5]*e,this.m[5]=r*-e+this.m[5]*i,r=this.m[2],this.m[2]=r*i+this.m[6]*e,this.m[6]=r*-e+this.m[6]*i,r=this.m[3],this.m[3]=r*i+this.m[7]*e,this.m[7]=r*-e+this.m[7]*i},b.prototype=new et,b._$tP=new Object,b._$27=function(){b._$tP.clear()},b.getID=function(t){var i=b._$tP[t];return null==i&&(i=new b(t),b._$tP[t]=i),i},b.prototype._$3s=function(){return new b},F._$kS=-1,F._$pS=0,F._$hb=1,F.STATE_IDENTITY=0,F._$gb=1,F._$fo=2,F._$go=4,F.prototype.transform=function(t,i,e){var r,o,n,s,_,a,h=0,l=0;switch(this._$hi){default:return;case F._$go|F._$fo|F._$gb:for(r=this._$7,o=this._$H,n=this._$k,s=this._$f,_=this._$g,a=this._$w;--e>=0;){var $=t[h++],u=t[h++];i[l++]=r*$+o*u+n,i[l++]=s*$+_*u+a}return;case F._$go|F._$fo:for(r=this._$7,o=this._$H,s=this._$f,_=this._$g;--e>=0;){var $=t[h++],u=t[h++];i[l++]=r*$+o*u,i[l++]=s*$+_*u}return;case F._$go|F._$gb:for(o=this._$H,n=this._$k,s=this._$f,a=this._$w;--e>=0;){var $=t[h++];i[l++]=o*t[h++]+n,i[l++]=s*$+a}return;case F._$go:for(o=this._$H,s=this._$f;--e>=0;){var $=t[h++];i[l++]=o*t[h++],i[l++]=s*$}return;case F._$fo|F._$gb:for(r=this._$7,n=this._$k,_=this._$g,a=this._$w;--e>=0;)i[l++]=r*t[h++]+n,i[l++]=_*t[h++]+a;return;case F._$fo:for(r=this._$7,_=this._$g;--e>=0;)i[l++]=r*t[h++],i[l++]=_*t[h++];return;case F._$gb:for(n=this._$k,a=this._$w;--e>=0;)i[l++]=t[h++]+n,i[l++]=t[h++]+a;return;case F.STATE_IDENTITY:return void(t==i&&h==l||w._$jT(t,h,i,l,2*e))}},F.prototype.update=function(){0==this._$H&&0==this._$f?1==this._$7&&1==this._$g?0==this._$k&&0==this._$w?(this._$hi=F.STATE_IDENTITY,this._$Z=F._$pS):(this._$hi=F._$gb,this._$Z=F._$hb):0==this._$k&&0==this._$w?(this._$hi=F._$fo,this._$Z=F._$kS):(this._$hi=F._$fo|F._$gb,this._$Z=F._$kS):0==this._$7&&0==this._$g?0==this._$k&&0==this._$w?(this._$hi=F._$go,this._$Z=F._$kS):(this._$hi=F._$go|F._$gb,this._$Z=F._$kS):0==this._$k&&0==this._$w?(this._$hi=F._$go|F._$fo,this._$Z=F._$kS):(this._$hi=F._$go|F._$fo|F._$gb,this._$Z=F._$kS)},F.prototype._$RT=function(t){this._$IT(t);var i=t[0],e=t[2],r=t[1],o=t[3],n=Math.sqrt(i*i+r*r),s=i*o-e*r;0==n?at._$so&&console.log(\"affine._$RT() / rt==0\"):(t[0]=n,t[1]=s/n,t[2]=(r*o+i*e)/s,t[3]=Math.atan2(r,i))},F.prototype._$ho=function(t,i,e,r){var o=new Float32Array(6),n=new Float32Array(6);t._$RT(o),i._$RT(n);var s=new Float32Array(6);s[0]=o[0]+(n[0]-o[0])*e,s[1]=o[1]+(n[1]-o[1])*e,s[2]=o[2]+(n[2]-o[2])*e,s[3]=o[3]+(n[3]-o[3])*e,s[4]=o[4]+(n[4]-o[4])*e,s[5]=o[5]+(n[5]-o[5])*e,r._$CT(s)},F.prototype._$CT=function(t){var i=Math.cos(t[3]),e=Math.sin(t[3]);this._$7=t[0]*i,this._$f=t[0]*e,this._$H=t[1]*(t[2]*i-e),this._$g=t[1]*(t[2]*e+i),this._$k=t[4],this._$w=t[5],this.update()},F.prototype._$IT=function(t){t[0]=this._$7,t[1]=this._$f,t[2]=this._$H,t[3]=this._$g,t[4]=this._$k,t[5]=this._$w},C.prototype=new s,C._$cs=\"VISIBLE:\",C._$ar=\"LAYOUT:\",C._$Co=0,C._$D2=[],C._$1T=1,C.loadMotion=function(t){var i=new C,e=[0],r=t.length;i._$yT=0;for(var o=0;o<r;++o){var n=255&t[o];if(\"\\n\"!=n&&\"\\r\"!=n)if(\"#\"!=n)if(\"$\"!=n){if(\"a\"<=n&&n<=\"z\"||\"A\"<=n&&n<=\"Z\"||\"_\"==n){for(var s=o,_=-1;o<r&&(\"\\r\"!=(n=255&t[o])&&\"\\n\"!=n);++o)if(\"=\"==n){_=o;break}if(_>=0){var a=new B;O.startsWith(t,s,C._$cs)?(a._$RP=B._$hs,a._$4P=new String(t,s,_-s)):O.startsWith(t,s,C._$ar)?(a._$4P=new String(t,s+7,_-s-7),O.startsWith(t,s+7,\"ANCHOR_X\")?a._$RP=B._$xs:O.startsWith(t,s+7,\"ANCHOR_Y\")?a._$RP=B._$us:O.startsWith(t,s+7,\"SCALE_X\")?a._$RP=B._$qs:O.startsWith(t,s+7,\"SCALE_Y\")?a._$RP=B._$Ys:O.startsWith(t,s+7,\"X\")?a._$RP=B._$ws:O.startsWith(t,s+7,\"Y\")&&(a._$RP=B._$Ns)):(a._$RP=B._$Fr,a._$4P=new String(t,s,_-s)),i.motions.push(a);var h=0;for(C._$D2.clear(),o=_+1;o<r&&(\"\\r\"!=(n=255&t[o])&&\"\\n\"!=n);++o)if(\",\"!=n&&\" \"!=n&&\"\\t\"!=n){var l=O._$LS(t,r,o,e);if(e[0]>0){C._$D2.push(l),h++;var $=e[0];if($<o){console.log(\"_$n0 _$hi . @Live2DMotion loadMotion()\\n\");break}o=$}}a._$I0=C._$D2._$BL(),h>i._$yT&&(i._$yT=h)}}}else{for(var s=o,_=-1;o<r&&(\"\\r\"!=(n=255&t[o])&&\"\\n\"!=n);++o)if(\"=\"==n){_=o;break}var u=!1;if(_>=0)for(_==s+4&&\"f\"==t[s+1]&&\"p\"==t[s+2]&&\"s\"==t[s+3]&&(u=!0),o=_+1;o<r&&(\"\\r\"!=(n=255&t[o])&&\"\\n\"!=n);++o)if(\",\"!=n&&\" \"!=n&&\"\\t\"!=n){var l=O._$LS(t,r,o,e);e[0]>0&&u&&5<l&&l<121&&(i._$D0=l),o=e[0]}for(;o<r&&(\"\\n\"!=t[o]&&\"\\r\"!=t[o]);++o);}else for(;o<r&&(\"\\n\"!=t[o]&&\"\\r\"!=t[o]);++o);}return i._$AS=1e3*i._$yT/i._$D0|0,i},C.prototype.getDurationMSec=function(){return this._$AS},C.prototype.dump=function(){for(var t=0;t<this.motions.length;t++){var i=this.motions[t];console.log(\"_$wL[%s] [%d]. \",i._$4P,i._$I0.length);for(var e=0;e<i._$I0.length&&e<10;e++)console.log(\"%5.2f ,\",i._$I0[e]);console.log(\"\\n\")}},C.prototype.updateParamExe=function(t,i,e,r){for(var o=i-r._$z2,n=o*this._$D0/1e3,s=0|n,_=n-s,a=0;a<this.motions.length;a++){var h=this.motions[a],l=h._$I0.length,$=h._$4P;if(h._$RP==B._$hs){var u=h._$I0[s>=l?l-1:s];t.setParamFloat($,u)}else if(B._$ws<=h._$RP&&h._$RP<=B._$Ys);else{var p=t.getParamFloat($),f=h._$I0[s>=l?l-1:s],c=h._$I0[s+1>=l?l-1:s+1],d=f+(c-f)*_,g=p+(d-p)*e;t.setParamFloat($,g)}}s>=this._$yT&&(this._$E?(r._$z2=i,this.loopFadeIn&&(r._$bs=i)):r._$9L=!0)},C.prototype._$r0=function(){return this._$E},C.prototype._$aL=function(t){this._$E=t},C.prototype.isLoopFadeIn=function(){return this.loopFadeIn},C.prototype.setLoopFadeIn=function(t){this.loopFadeIn=t},N.prototype.clear=function(){this.size=0},N.prototype.add=function(t){if(this._$P.length<=this.size){var i=new Float32Array(2*this.size);w._$jT(this._$P,0,i,0,this.size),this._$P=i}this._$P[this.size++]=t},N.prototype._$BL=function(){var t=new Float32Array(this.size);return w._$jT(this._$P,0,t,0,this.size),t},B._$Fr=0,B._$hs=1,B._$ws=100,B._$Ns=101,B._$xs=102,B._$us=103,B._$qs=104,B._$Ys=105,U._$Ms=1,U._$Qs=2,U._$i2=0,U._$No=2,U._$do=U._$Ms,U._$Ls=!0,U._$1r=5,U._$Qb=65,U._$J=1e-4,U._$FT=.001,U._$Ss=3,G._$o7=6,G._$S7=7,G._$s7=8,G._$77=9,G.LIVE2D_FORMAT_VERSION_V2_10_SDK2=10,G.LIVE2D_FORMAT_VERSION_V2_11_SDK2_1=11,G._$T7=G.LIVE2D_FORMAT_VERSION_V2_11_SDK2_1,G._$Is=-2004318072,G._$h0=0,G._$4L=23,G._$7P=33,G._$uT=function(t){console.log(\"_$bo :: _$6 _$mo _$E0 : %d\\n\",t)},G._$9o=function(t){if(t<40)return G._$uT(t),null;if(t<50)return G._$uT(t),null;if(t<60)return G._$uT(t),null;if(t<100)switch(t){case 65:return new Z;case 66:return new D;case 67:return new x;case 68:return new z;case 69:return new P;case 70:return new $t;default:return G._$uT(t),null}else if(t<150)switch(t){case 131:return new st;case 133:return new tt;case 136:return new p;case 137:return new ot;case 142:return new j}return G._$uT(t),null},Y._$HP=0,Y._$_0=!0;Y._$V2=-1,Y._$W0=-1,Y._$jr=!1,Y._$ZS=!0,Y._$tr=-1e6,Y._$lr=1e6,Y._$is=32,Y._$e=!1,Y.prototype.getDrawDataIndex=function(t){for(var i=this._$aS.length-1;i>=0;--i)if(null!=this._$aS[i]&&this._$aS[i].getDrawDataID()==t)return i;return-1},Y.prototype.getDrawData=function(t){if(t instanceof b){if(null==this._$Bo){this._$Bo=new Object;for(var i=this._$aS.length,e=0;e<i;e++){var r=this._$aS[e],o=r.getDrawDataID();null!=o&&(this._$Bo[o]=r)}}return this._$Bo[id]}return t<this._$aS.length?this._$aS[t]:null},Y.prototype.release=function(){this._$3S.clear(),this._$aS.clear(),this._$F2.clear(),null!=this._$Bo&&this._$Bo.clear(),this._$db.clear(),this._$8b.clear(),this._$Hr.clear()},Y.prototype.init=function(){this._$co++,this._$F2.length>0&&this.release();for(var t=this._$Ri.getModelImpl(),i=t._$Xr(),r=i.length,o=new Array,n=new Array,s=0;s<r;++s){var _=i[s];this._$F2.push(_),this._$Hr.push(_.init(this));for(var a=_.getBaseData(),h=a.length,l=0;l<h;++l)o.push(a[l]);for(var l=0;l<h;++l){var $=a[l].init(this);$._$l2(s),n.push($)}for(var u=_.getDrawData(),p=u.length,l=0;l<p;++l){var f=u[l],c=f.init(this);c._$IP=s,this._$aS.push(f),this._$8b.push(c)}}for(var d=o.length,g=yt._$2o();;){for(var y=!1,s=0;s<d;++s){var m=o[s];if(null!=m){var T=m.getTargetBaseDataID();(null==T||T==g||this.getBaseDataIndex(T)>=0)&&(this._$3S.push(m),this._$db.push(n[s]),o[s]=null,y=!0)}}if(!y)break}var P=t._$E2();if(null!=P){var S=P._$1s();if(null!=S)for(var v=S.length,s=0;s<v;++s){var L=S[s];null!=L&&this._$02(L.getParamID(),L.getDefaultValue(),L.getMinValue(),L.getMaxValue())}}this.clipManager=new e(this.dp_webgl),this.clipManager.init(this,this._$aS,this._$8b),this._$QT=!0},Y.prototype.update=function(){Y._$e&&_.start(\"_$zL\");for(var t=this._$_2.length,i=0;i<t;i++)this._$_2[i]!=this._$vr[i]&&(this._$Js[i]=Y._$ZS,this._$vr[i]=this._$_2[i]);var e=this._$3S.length,r=this._$aS.length,o=W._$or(),n=W._$Pr(),s=n-o+1;(null==this._$Ws||this._$Ws.length<s)&&(this._$Ws=new Int16Array(s),this._$Vs=new Int16Array(s));for(var i=0;i<s;i++)this._$Ws[i]=Y._$V2,this._$Vs[i]=Y._$V2;(null==this._$Er||this._$Er.length<r)&&(this._$Er=new Int16Array(r));for(var i=0;i<r;i++)this._$Er[i]=Y._$W0;Y._$e&&_.dump(\"_$zL\"),Y._$e&&_.start(\"_$UL\");for(var a=null,h=0;h<e;++h){var l=this._$3S[h],$=this._$db[h];try{l._$Nr(this,$),l._$2b(this,$)}catch(t){null==a&&(a=t)}}null!=a&&Y._$_0&&_._$Rb(a),Y._$e&&_.dump(\"_$UL\"),Y._$e&&_.start(\"_$DL\");for(var u=null,p=0;p<r;++p){var f=this._$aS[p],c=this._$8b[p];try{if(f._$Nr(this,c),c._$u2())continue;f._$2b(this,c);var d,g=Math.floor(f._$zS(this,c)-o);try{d=this._$Vs[g]}catch(t){console.log(\"_$li :: %s / %s \\t\\t\\t\\t@@_$fS\\n\",t.toString(),f.getDrawDataID().toString()),g=Math.floor(f._$zS(this,c)-o);continue}d==Y._$V2?this._$Ws[g]=p:this._$Er[d]=p,this._$Vs[g]=p}catch(t){null==u&&(u=t,at._$sT(at._$H7))}}null!=u&&Y._$_0&&_._$Rb(u),Y._$e&&_.dump(\"_$DL\"),Y._$e&&_.start(\"_$eL\");for(var i=this._$Js.length-1;i>=0;i--)this._$Js[i]=Y._$jr;return this._$QT=!1,Y._$e&&_.dump(\"_$eL\"),!1},Y.prototype.preDraw=function(t){null!=this.clipManager&&(t._$ZT(),this.clipManager.setupClip(this,t))},Y.prototype.draw=function(t){if(null==this._$Ws)return void _._$li(\"call _$Ri.update() before _$Ri.draw() \");var i=this._$Ws.length;t._$ZT();for(var e=0;e<i;++e){var r=this._$Ws[e];if(r!=Y._$V2)for(;;){var o=this._$aS[r],n=this._$8b[r];if(n._$yo()){var s=n._$IP,a=this._$Hr[s];n._$VS=a.getPartsOpacity(),o.draw(t,this,n)}var h=this._$Er[r];if(h<=r||h==Y._$W0)break;r=h}}},Y.prototype.getParamIndex=function(t){for(var i=this._$pb.length-1;i>=0;--i)if(this._$pb[i]==t)return i;return this._$02(t,0,Y._$tr,Y._$lr)},Y.prototype._$BS=function(t){return this.getBaseDataIndex(t)},Y.prototype.getBaseDataIndex=function(t){for(var i=this._$3S.length-1;i>=0;--i)if(null!=this._$3S[i]&&this._$3S[i].getBaseDataID()==t)return i;return-1},Y.prototype._$UT=function(t,i){var e=new Float32Array(i);return w._$jT(t,0,e,0,t.length),e},Y.prototype._$02=function(t,i,e,r){if(this._$qo>=this._$pb.length){var o=this._$pb.length,n=new Array(2*o);w._$jT(this._$pb,0,n,0,o),this._$pb=n,this._$_2=this._$UT(this._$_2,2*o),this._$vr=this._$UT(this._$vr,2*o),this._$Rr=this._$UT(this._$Rr,2*o),this._$Or=this._$UT(this._$Or,2*o);var s=new Array;w._$jT(this._$Js,0,s,0,o),this._$Js=s}return this._$pb[this._$qo]=t,this._$_2[this._$qo]=i,this._$vr[this._$qo]=i,this._$Rr[this._$qo]=e,this._$Or[this._$qo]=r,this._$Js[this._$qo]=Y._$ZS,this._$qo++},Y.prototype._$Zo=function(t,i){this._$3S[t]=i},Y.prototype.setParamFloat=function(t,i){i<this._$Rr[t]&&(i=this._$Rr[t]),i>this._$Or[t]&&(i=this._$Or[t]),this._$_2[t]=i},Y.prototype.loadParam=function(){var t=this._$_2.length;t>this._$fs.length&&(t=this._$fs.length),w._$jT(this._$fs,0,this._$_2,0,t)},Y.prototype.saveParam=function(){var t=this._$_2.length;t>this._$fs.length&&(this._$fs=new Float32Array(t)),w._$jT(this._$_2,0,this._$fs,0,t)},Y.prototype._$v2=function(){return this._$co},Y.prototype._$WS=function(){return this._$QT},Y.prototype._$Xb=function(t){return this._$Js[t]==Y._$ZS},Y.prototype._$vs=function(){return this._$Es},Y.prototype._$Tr=function(){return this._$ZP},Y.prototype.getBaseData=function(t){return this._$3S[t]},Y.prototype.getParamFloat=function(t){return this._$_2[t]},Y.prototype.getParamMax=function(t){return this._$Or[t]},Y.prototype.getParamMin=function(t){return this._$Rr[t]},Y.prototype.setPartsOpacity=function(t,i){this._$Hr[t].setPartsOpacity(i)},Y.prototype.getPartsOpacity=function(t){return this._$Hr[t].getPartsOpacity()},Y.prototype.getPartsDataIndex=function(t){for(var i=this._$F2.length-1;i>=0;--i)if(null!=this._$F2[i]&&this._$F2[i]._$p2()==t)return i;return-1},Y.prototype._$q2=function(t){return this._$db[t]},Y.prototype._$C2=function(t){return this._$8b[t]},Y.prototype._$Bb=function(t){return this._$Hr[t]},Y.prototype._$5s=function(t,i){for(var e=this._$Ws.length,r=t,o=0;o<e;++o){var n=this._$Ws[o];if(n!=Y._$V2)for(;;){var s=this._$8b[n];s._$yo()&&(s._$GT()._$B2(this,s,r),r+=i);var _=this._$Er[n];if(_<=n||_==Y._$W0)break;n=_}}},Y.prototype.setDrawParam=function(t){this.dp_webgl=t},Y.prototype.getDrawParam=function(){return this.dp_webgl},k._$0T=function(t){return k._$0T(new _$5(t))},k._$0T=function(t){if(!t.exists())throw new _$ls(t._$3b());for(var i,e=t.length(),r=new Int8Array(e),o=new _$Xs(new _$kb(t),8192),n=0;(i=o.read(r,n,e-n))>0;)n+=i;return r},k._$C=function(t){var i=null,e=null;try{i=t instanceof Array?t:new _$Xs(t,8192),e=new _$js;for(var r,o=new Int8Array(1e3);(r=i.read(o))>0;)e.write(o,0,r);return e._$TS()}finally{null!=t&&t.close(),null!=e&&(e.flush(),e.close())}},V.prototype._$T2=function(){return w.getUserTimeMSec()+Math._$10()*(2*this._$Br-1)},V.prototype._$uo=function(t){this._$Br=t},V.prototype._$QS=function(t,i,e){this._$Dr=t,this._$Cb=i,this._$mr=e},V.prototype._$7T=function(t){var i,e=w.getUserTimeMSec(),r=0;switch(this._$_L){case STATE_CLOSING:r=(e-this._$bb)/this._$Dr,r>=1&&(r=1,this._$_L=wt.STATE_CLOSED,this._$bb=e),i=1-r;break;case STATE_CLOSED:r=(e-this._$bb)/this._$Cb,r>=1&&(this._$_L=wt.STATE_OPENING,this._$bb=e),i=0;break;case STATE_OPENING:r=(e-this._$bb)/this._$mr,r>=1&&(r=1,this._$_L=wt.STATE_INTERVAL,this._$12=this._$T2()),i=r;break;case STATE_INTERVAL:this._$12<e&&(this._$_L=wt.STATE_CLOSING,this._$bb=e),i=1;break;case STATE_FIRST:default:this._$_L=wt.STATE_INTERVAL,this._$12=this._$T2(),i=1}this._$jo||(i=-i),t.setParamFloat(this._$iL,i),t.setParamFloat(this._$0L,i)};var wt=function(){};wt.STATE_FIRST=\"STATE_FIRST\",wt.STATE_INTERVAL=\"STATE_INTERVAL\",wt.STATE_CLOSING=\"STATE_CLOSING\",wt.STATE_CLOSED=\"STATE_CLOSED\",wt.STATE_OPENING=\"STATE_OPENING\",X.prototype=new E,X._$As=32,X._$Gr=!1,X._$NT=null,X._$vS=null,X._$no=null,X._$9r=function(t){return new Float32Array(t)},X._$vb=function(t){return new Int16Array(t)},X._$cr=function(t,i){return null==t||t._$yL()<i.length?(t=X._$9r(2*i.length),t.put(i),t._$oT(0)):(t.clear(),t.put(i),t._$oT(0)),t},X._$mb=function(t,i){return null==t||t._$yL()<i.length?(t=X._$vb(2*i.length),t.put(i),t._$oT(0)):(t.clear(),t.put(i),t._$oT(0)),t},X._$Hs=function(){return X._$Gr},X._$as=function(t){X._$Gr=t},X.prototype.setGL=function(t){this.gl=t},X.prototype.setTransform=function(t){this.transform=t},X.prototype._$ZT=function(){},X.prototype._$Uo=function(t,i,e,r,o,n,s,_){if(!(n<.01)){var a=this._$U2[t],h=n>.9?at.EXPAND_W:0;this.gl.drawElements(a,e,r,o,n,h,this.transform,_)}},X.prototype._$Rs=function(){throw new Error(\"_$Rs\")},X.prototype._$Ds=function(t){throw new Error(\"_$Ds\")},X.prototype._$K2=function(){for(var t=0;t<this._$sb.length;t++){0!=this._$sb[t]&&(this.gl._$Sr(1,this._$sb,t),this._$sb[t]=0)}},X.prototype.setTexture=function(t,i){this._$sb.length<t+1&&this._$nS(t),this._$sb[t]=i},X.prototype.setTexture=function(t,i){this._$sb.length<t+1&&this._$nS(t),this._$U2[t]=i},X.prototype._$nS=function(t){var i=Math.max(2*this._$sb.length,t+1+10),e=new Int32Array(i);w._$jT(this._$sb,0,e,0,this._$sb.length),this._$sb=e;var r=new Array;w._$jT(this._$U2,0,r,0,this._$U2.length),this._$U2=r},z.prototype=new I,z._$Xo=new Float32Array(2),z._$io=new Float32Array(2),z._$0o=new Float32Array(2),z._$Lo=new Float32Array(2),z._$To=new Float32Array(2),z._$Po=new Float32Array(2),z._$gT=new Array,z.prototype._$zP=function(){this._$GS=new D,this._$GS._$zP(),this._$Y0=new Array},z.prototype.getType=function(){return I._$c2},z.prototype._$F0=function(t){I.prototype._$F0.call(this,t),this._$GS=t._$nP(),this._$Y0=t._$nP(),I.prototype.readV2_opacity.call(this,t)},z.prototype.init=function(t){var i=new H(this);return i._$Yr=new P,this._$32()&&(i._$Wr=new P),i},z.prototype._$Nr=function(t,i){this!=i._$GT()&&console.log(\"### assert!! ### \");var e=i;if(this._$GS._$Ur(t)){var r=z._$gT;r[0]=!1;var o=this._$GS._$Q2(t,r);i._$Ib(r[0]),this.interpolateOpacity(t,this._$GS,i,r);var n=t._$vs(),s=t._$Tr();if(this._$GS._$zr(n,s,o),o<=0){var _=this._$Y0[n[0]];e._$Yr.init(_)}else if(1==o){var _=this._$Y0[n[0]],a=this._$Y0[n[1]],h=s[0];e._$Yr._$fL=_._$fL+(a._$fL-_._$fL)*h,e._$Yr._$gL=_._$gL+(a._$gL-_._$gL)*h,e._$Yr._$B0=_._$B0+(a._$B0-_._$B0)*h,e._$Yr._$z0=_._$z0+(a._$z0-_._$z0)*h,e._$Yr._$qT=_._$qT+(a._$qT-_._$qT)*h}else if(2==o){var _=this._$Y0[n[0]],a=this._$Y0[n[1]],l=this._$Y0[n[2]],$=this._$Y0[n[3]],h=s[0],u=s[1],p=_._$fL+(a._$fL-_._$fL)*h,f=l._$fL+($._$fL-l._$fL)*h;e._$Yr._$fL=p+(f-p)*u,p=_._$gL+(a._$gL-_._$gL)*h,f=l._$gL+($._$gL-l._$gL)*h,e._$Yr._$gL=p+(f-p)*u,p=_._$B0+(a._$B0-_._$B0)*h,f=l._$B0+($._$B0-l._$B0)*h,e._$Yr._$B0=p+(f-p)*u,p=_._$z0+(a._$z0-_._$z0)*h,f=l._$z0+($._$z0-l._$z0)*h,e._$Yr._$z0=p+(f-p)*u,p=_._$qT+(a._$qT-_._$qT)*h,f=l._$qT+($._$qT-l._$qT)*h,e._$Yr._$qT=p+(f-p)*u}else if(3==o){var c=this._$Y0[n[0]],d=this._$Y0[n[1]],g=this._$Y0[n[2]],y=this._$Y0[n[3]],m=this._$Y0[n[4]],T=this._$Y0[n[5]],P=this._$Y0[n[6]],S=this._$Y0[n[7]],h=s[0],u=s[1],v=s[2],p=c._$fL+(d._$fL-c._$fL)*h,f=g._$fL+(y._$fL-g._$fL)*h,L=m._$fL+(T._$fL-m._$fL)*h,M=P._$fL+(S._$fL-P._$fL)*h;e._$Yr._$fL=(1-v)*(p+(f-p)*u)+v*(L+(M-L)*u),p=c._$gL+(d._$gL-c._$gL)*h,f=g._$gL+(y._$gL-g._$gL)*h,L=m._$gL+(T._$gL-m._$gL)*h,M=P._$gL+(S._$gL-P._$gL)*h,e._$Yr._$gL=(1-v)*(p+(f-p)*u)+v*(L+(M-L)*u),p=c._$B0+(d._$B0-c._$B0)*h,f=g._$B0+(y._$B0-g._$B0)*h,L=m._$B0+(T._$B0-m._$B0)*h,M=P._$B0+(S._$B0-P._$B0)*h,e._$Yr._$B0=(1-v)*(p+(f-p)*u)+v*(L+(M-L)*u),p=c._$z0+(d._$z0-c._$z0)*h,f=g._$z0+(y._$z0-g._$z0)*h,L=m._$z0+(T._$z0-m._$z0)*h,M=P._$z0+(S._$z0-P._$z0)*h,e._$Yr._$z0=(1-v)*(p+(f-p)*u)+v*(L+(M-L)*u),p=c._$qT+(d._$qT-c._$qT)*h,f=g._$qT+(y._$qT-g._$qT)*h,L=m._$qT+(T._$qT-m._$qT)*h,M=P._$qT+(S._$qT-P._$qT)*h,e._$Yr._$qT=(1-v)*(p+(f-p)*u)+v*(L+(M-L)*u)}else if(4==o){var E=this._$Y0[n[0]],A=this._$Y0[n[1]],I=this._$Y0[n[2]],w=this._$Y0[n[3]],x=this._$Y0[n[4]],O=this._$Y0[n[5]],D=this._$Y0[n[6]],R=this._$Y0[n[7]],b=this._$Y0[n[8]],F=this._$Y0[n[9]],C=this._$Y0[n[10]],N=this._$Y0[n[11]],B=this._$Y0[n[12]],U=this._$Y0[n[13]],G=this._$Y0[n[14]],Y=this._$Y0[n[15]],h=s[0],u=s[1],v=s[2],k=s[3],p=E._$fL+(A._$fL-E._$fL)*h,f=I._$fL+(w._$fL-I._$fL)*h,L=x._$fL+(O._$fL-x._$fL)*h,M=D._$fL+(R._$fL-D._$fL)*h,V=b._$fL+(F._$fL-b._$fL)*h,X=C._$fL+(N._$fL-C._$fL)*h,H=B._$fL+(U._$fL-B._$fL)*h,W=G._$fL+(Y._$fL-G._$fL)*h;e._$Yr._$fL=(1-k)*((1-v)*(p+(f-p)*u)+v*(L+(M-L)*u))+k*((1-v)*(V+(X-V)*u)+v*(H+(W-H)*u)),p=E._$gL+(A._$gL-E._$gL)*h,f=I._$gL+(w._$gL-I._$gL)*h,L=x._$gL+(O._$gL-x._$gL)*h,M=D._$gL+(R._$gL-D._$gL)*h,V=b._$gL+(F._$gL-b._$gL)*h,X=C._$gL+(N._$gL-C._$gL)*h,H=B._$gL+(U._$gL-B._$gL)*h,W=G._$gL+(Y._$gL-G._$gL)*h,e._$Yr._$gL=(1-k)*((1-v)*(p+(f-p)*u)+v*(L+(M-L)*u))+k*((1-v)*(V+(X-V)*u)+v*(H+(W-H)*u)),p=E._$B0+(A._$B0-E._$B0)*h,f=I._$B0+(w._$B0-I._$B0)*h,L=x._$B0+(O._$B0-x._$B0)*h,M=D._$B0+(R._$B0-D._$B0)*h,V=b._$B0+(F._$B0-b._$B0)*h,X=C._$B0+(N._$B0-C._$B0)*h,H=B._$B0+(U._$B0-B._$B0)*h,W=G._$B0+(Y._$B0-G._$B0)*h,e._$Yr._$B0=(1-k)*((1-v)*(p+(f-p)*u)+v*(L+(M-L)*u))+k*((1-v)*(V+(X-V)*u)+v*(H+(W-H)*u)),p=E._$z0+(A._$z0-E._$z0)*h,f=I._$z0+(w._$z0-I._$z0)*h,L=x._$z0+(O._$z0-x._$z0)*h,M=D._$z0+(R._$z0-D._$z0)*h,V=b._$z0+(F._$z0-b._$z0)*h,X=C._$z0+(N._$z0-C._$z0)*h,H=B._$z0+(U._$z0-B._$z0)*h,W=G._$z0+(Y._$z0-G._$z0)*h,e._$Yr._$z0=(1-k)*((1-v)*(p+(f-p)*u)+v*(L+(M-L)*u))+k*((1-v)*(V+(X-V)*u)+v*(H+(W-H)*u)),p=E._$qT+(A._$qT-E._$qT)*h,f=I._$qT+(w._$qT-I._$qT)*h,L=x._$qT+(O._$qT-x._$qT)*h,M=D._$qT+(R._$qT-D._$qT)*h,V=b._$qT+(F._$qT-b._$qT)*h,X=C._$qT+(N._$qT-C._$qT)*h,H=B._$qT+(U._$qT-B._$qT)*h,W=G._$qT+(Y._$qT-G._$qT)*h,e._$Yr._$qT=(1-k)*((1-v)*(p+(f-p)*u)+v*(L+(M-L)*u))+k*((1-v)*(V+(X-V)*u)+v*(H+(W-H)*u))}else{for(var j=0|Math.pow(2,o),q=new Float32Array(j),J=0;J<j;J++){for(var Q=J,Z=1,K=0;K<o;K++)Z*=Q%2==0?1-s[K]:s[K],Q/=2;q[J]=Z}for(var tt=new Array,it=0;it<j;it++)tt[it]=this._$Y0[n[it]];for(var et=0,rt=0,ot=0,nt=0,st=0,it=0;it<j;it++)et+=q[it]*tt[it]._$fL,rt+=q[it]*tt[it]._$gL,ot+=q[it]*tt[it]._$B0,nt+=q[it]*tt[it]._$z0,st+=q[it]*tt[it]._$qT;e._$Yr._$fL=et,e._$Yr._$gL=rt,e._$Yr._$B0=ot,e._$Yr._$z0=nt,e._$Yr._$qT=st}var _=this._$Y0[n[0]];e._$Yr.reflectX=_.reflectX,e._$Yr.reflectY=_.reflectY}},z.prototype._$2b=function(t,i){this!=i._$GT()&&console.log(\"### assert!! ### \");var e=i;if(e._$hS(!0),this._$32()){var r=this.getTargetBaseDataID();if(e._$8r==I._$ur&&(e._$8r=t.getBaseDataIndex(r)),e._$8r<0)at._$so&&_._$li(\"_$L _$0P _$G :: %s\",r),e._$hS(!1);else{var o=t.getBaseData(e._$8r);if(null!=o){var n=t._$q2(e._$8r),s=z._$Xo;s[0]=e._$Yr._$fL,s[1]=e._$Yr._$gL;var a=z._$io;a[0]=0,a[1]=-.1;n._$GT().getType()==I._$c2?a[1]=-10:a[1]=-.1;var h=z._$0o;this._$Jr(t,o,n,s,a,h);var l=Lt._$92(a,h);o._$nb(t,n,s,s,1,0,2),e._$Wr._$fL=s[0],e._$Wr._$gL=s[1],e._$Wr._$B0=e._$Yr._$B0,e._$Wr._$z0=e._$Yr._$z0,e._$Wr._$qT=e._$Yr._$qT-l*Lt._$NS;var $=n.getTotalScale();e.setTotalScale_notForClient($*e._$Wr._$B0);var u=n.getTotalOpacity();e.setTotalOpacity(u*e.getInterpolatedOpacity()),e._$Wr.reflectX=e._$Yr.reflectX,e._$Wr.reflectY=e._$Yr.reflectY,e._$hS(n._$yo())}else e._$hS(!1)}}else e.setTotalScale_notForClient(e._$Yr._$B0),e.setTotalOpacity(e.getInterpolatedOpacity())},z.prototype._$nb=function(t,i,e,r,o,n,s){this!=i._$GT()&&console.log(\"### assert!! ### \");for(var _,a,h=i,l=null!=h._$Wr?h._$Wr:h._$Yr,$=Math.sin(Lt._$bS*l._$qT),u=Math.cos(Lt._$bS*l._$qT),p=h.getTotalScale(),f=l.reflectX?-1:1,c=l.reflectY?-1:1,d=u*p*f,g=-$*p*c,y=$*p*f,m=u*p*c,T=l._$fL,P=l._$gL,S=o*s,v=n;v<S;v+=s)_=e[v],a=e[v+1],r[v]=d*_+g*a+T,r[v+1]=y*_+m*a+P},z.prototype._$Jr=function(t,i,e,r,o,n){i!=e._$GT()&&console.log(\"### assert!! ### \");var s=z._$Lo;z._$Lo[0]=r[0],z._$Lo[1]=r[1],i._$nb(t,e,s,s,1,0,2);for(var _=z._$To,a=z._$Po,h=1,l=0;l<10;l++){if(a[0]=r[0]+h*o[0],a[1]=r[1]+h*o[1],i._$nb(t,e,a,_,1,0,2),_[0]-=s[0],_[1]-=s[1],0!=_[0]||0!=_[1])return n[0]=_[0],void(n[1]=_[1]);if(a[0]=r[0]-h*o[0],a[1]=r[1]-h*o[1],i._$nb(t,e,a,_,1,0,2),_[0]-=s[0],_[1]-=s[1],0!=_[0]||0!=_[1])return _[0]=-_[0],_[0]=-_[0],n[0]=_[0],void(n[1]=_[1]);h*=.1}at._$so&&console.log(\"_$L0 to transform _$SP\\n\")},H.prototype=new _t,W.prototype=new M,W._$ur=-2,W._$ES=500,W._$wb=2,W._$8S=3,W._$os=4,W._$52=W._$ES,W._$R2=W._$ES,W._$Sb=function(t){for(var i=t.length-1;i>=0;--i){var e=t[i];e<W._$52?W._$52=e:e>W._$R2&&(W._$R2=e)}},W._$or=function(){return W._$52},W._$Pr=function(){return W._$R2},W.prototype._$F0=function(t){this._$gP=t._$nP(),this._$dr=t._$nP(),this._$GS=t._$nP(),this._$qb=t._$6L(),this._$Lb=t._$cS(),this._$mS=t._$Tb(),t.getFormatVersion()>=G._$T7?(this.clipID=t._$nP(),this.clipIDList=this.convertClipIDForV2_11(this.clipID)):this.clipIDList=null,W._$Sb(this._$Lb)},W.prototype.getClipIDList=function(){return this.clipIDList},W.prototype._$Nr=function(t,i){if(i._$IS[0]=!1,i._$Us=v._$Z2(t,this._$GS,i._$IS,this._$Lb),at._$Zs);else if(i._$IS[0])return;i._$7s=v._$br(t,this._$GS,i._$IS,this._$mS)},W.prototype._$2b=function(t){},W.prototype.getDrawDataID=function(){return this._$gP},W.prototype._$j2=function(t){this._$gP=t},W.prototype.getOpacity=function(t,i){return i._$7s},W.prototype._$zS=function(t,i){return i._$Us},W.prototype.getTargetBaseDataID=function(){return this._$dr},W.prototype._$gs=function(t){this._$dr=t},W.prototype._$32=function(){return null!=this._$dr&&this._$dr!=yt._$2o()},W.prototype.getType=function(){},j._$42=0,j.prototype._$1b=function(){return this._$3S},j.prototype.getDrawDataList=function(){return this._$aS},j.prototype._$F0=function(t){this._$NL=t._$nP(),this._$aS=t._$nP(),this._$3S=t._$nP()},j.prototype._$kr=function(t){t._$Zo(this._$3S),t._$xo(this._$aS),this._$3S=null,this._$aS=null},q.prototype=new i,q.loadModel=function(t){var e=new q;return i._$62(e,t),e},q.loadModel=function(t){var e=new q;return i._$62(e,t),e},q._$to=function(){return new q},q._$er=function(t){var i=new _$5(\"../_$_r/_$t0/_$Ri/_$_P._$d\");if(0==i.exists())throw new _$ls(\"_$t0 _$_ _$6 _$Ui :: \"+i._$PL());for(var e=[\"../_$_r/_$t0/_$Ri/_$_P.512/_$CP._$1\",\"../_$_r/_$t0/_$Ri/_$_P.512/_$vP._$1\",\"../_$_r/_$t0/_$Ri/_$_P.512/_$EP._$1\",\"../_$_r/_$t0/_$Ri/_$_P.512/_$pP._$1\"],r=q.loadModel(i._$3b()),o=0;o<e.length;o++){var n=new _$5(e[o]);if(0==n.exists())throw new _$ls(\"_$t0 _$_ _$6 _$Ui :: \"+n._$PL());r.setTexture(o,_$nL._$_o(t,n._$3b()))}return r},q.prototype.setGL=function(t){this._$zo.setGL(t)},q.prototype.setTransform=function(t){this._$zo.setTransform(t)},q.prototype.draw=function(){this._$5S.draw(this._$zo)},q.prototype._$K2=function(){this._$zo._$K2()},q.prototype.setTexture=function(t,i){null==this._$zo&&_._$li(\"_$Yi for QT _$ki / _$XS() is _$6 _$ui!!\"),this._$zo.setTexture(t,i)},q.prototype.setTexture=function(t,i){null==this._$zo&&_._$li(\"_$Yi for QT _$ki / _$XS() is _$6 _$ui!!\"),this._$zo.setTexture(t,i)},q.prototype._$Rs=function(){return this._$zo._$Rs()},q.prototype._$Ds=function(t){this._$zo._$Ds(t)},q.prototype.getDrawParam=function(){return this._$zo},J.prototype=new s,J._$cs=\"VISIBLE:\",J._$ar=\"LAYOUT:\",J.MTN_PREFIX_FADEIN=\"FADEIN:\",J.MTN_PREFIX_FADEOUT=\"FADEOUT:\",J._$Co=0,J._$1T=1,J.loadMotion=function(t){var i=k._$C(t);return J.loadMotion(i)},J.loadMotion=function(t){t instanceof ArrayBuffer&&(t=new DataView(t));var i=new J,e=[0],r=t.byteLength;i._$yT=0;for(var o=0;o<r;++o){var n=Q(t,o),s=n.charCodeAt(0);if(\"\\n\"!=n&&\"\\r\"!=n)if(\"#\"!=n)if(\"$\"!=n){if(97<=s&&s<=122||65<=s&&s<=90||\"_\"==n){for(var _=o,a=-1;o<r&&(\"\\r\"!=(n=Q(t,o))&&\"\\n\"!=n);++o)if(\"=\"==n){a=o;break}if(a>=0){var h=new B;O.startsWith(t,_,J._$cs)?(h._$RP=B._$hs,h._$4P=O.createString(t,_,a-_)):O.startsWith(t,_,J._$ar)?(h._$4P=O.createString(t,_+7,a-_-7),O.startsWith(t,_+7,\"ANCHOR_X\")?h._$RP=B._$xs:O.startsWith(t,_+7,\"ANCHOR_Y\")?h._$RP=B._$us:O.startsWith(t,_+7,\"SCALE_X\")?h._$RP=B._$qs:O.startsWith(t,_+7,\"SCALE_Y\")?h._$RP=B._$Ys:O.startsWith(t,_+7,\"X\")?h._$RP=B._$ws:O.startsWith(t,_+7,\"Y\")&&(h._$RP=B._$Ns)):(h._$RP=B._$Fr,h._$4P=O.createString(t,_,a-_)),i.motions.push(h);var l=0,$=[];for(o=a+1;o<r&&(\"\\r\"!=(n=Q(t,o))&&\"\\n\"!=n);++o)if(\",\"!=n&&\" \"!=n&&\"\\t\"!=n){var u=O._$LS(t,r,o,e);if(e[0]>0){$.push(u),l++;var p=e[0];if(p<o){console.log(\"_$n0 _$hi . @Live2DMotion loadMotion()\\n\");break}o=p-1}}h._$I0=new Float32Array($),l>i._$yT&&(i._$yT=l)}}}else{for(var _=o,a=-1;o<r&&(\"\\r\"!=(n=Q(t,o))&&\"\\n\"!=n);++o)if(\"=\"==n){a=o;break}var f=!1;if(a>=0)for(a==_+4&&\"f\"==Q(t,_+1)&&\"p\"==Q(t,_+2)&&\"s\"==Q(t,_+3)&&(f=!0),o=a+1;o<r&&(\"\\r\"!=(n=Q(t,o))&&\"\\n\"!=n);++o)if(\",\"!=n&&\" \"!=n&&\"\\t\"!=n){var u=O._$LS(t,r,o,e);e[0]>0&&f&&5<u&&u<121&&(i._$D0=u),o=e[0]}for(;o<r&&(\"\\n\"!=Q(t,o)&&\"\\r\"!=Q(t,o));++o);}else for(;o<r&&(\"\\n\"!=Q(t,o)&&\"\\r\"!=Q(t,o));++o);}return i._$rr=1e3*i._$yT/i._$D0|0,i},J.prototype.getDurationMSec=function(){return this._$E?-1:this._$rr},J.prototype.getLoopDurationMSec=function(){return this._$rr},J.prototype.dump=function(){for(var t=0;t<this.motions.length;t++){var i=this.motions[t];console.log(\"_$wL[%s] [%d]. \",i._$4P,i._$I0.length);for(var e=0;e<i._$I0.length&&e<10;e++)console.log(\"%5.2f ,\",i._$I0[e]);console.log(\"\\n\")}},J.prototype.updateParamExe=function(t,i,e,r){for(var o=i-r._$z2,n=o*this._$D0/1e3,s=0|n,_=n-s,a=0;a<this.motions.length;a++){var h=this.motions[a],l=h._$I0.length,$=h._$4P;if(h._$RP==B._$hs){var u=h._$I0[s>=l?l-1:s];t.setParamFloat($,u)}else if(B._$ws<=h._$RP&&h._$RP<=B._$Ys);else{var p,f=t.getParamIndex($),c=t.getModelContext(),d=c.getParamMax(f),g=c.getParamMin(f),y=.4*(d-g),m=c.getParamFloat(f),T=h._$I0[s>=l?l-1:s],P=h._$I0[s+1>=l?l-1:s+1];p=T<P&&P-T>y||T>P&&T-P>y?T:T+(P-T)*_;var S=m+(p-m)*e;t.setParamFloat($,S)}}s>=this._$yT&&(this._$E?(r._$z2=i,this.loopFadeIn&&(r._$bs=i)):r._$9L=!0),this._$eP=e},J.prototype._$r0=function(){return this._$E},J.prototype._$aL=function(t){this._$E=t},J.prototype._$S0=function(){return this._$D0},J.prototype._$U0=function(t){this._$D0=t},J.prototype.isLoopFadeIn=function(){return this.loopFadeIn},J.prototype.setLoopFadeIn=function(t){this.loopFadeIn=t},N.prototype.clear=function(){this.size=0},N.prototype.add=function(t){if(this._$P.length<=this.size){var i=new Float32Array(2*this.size);w._$jT(this._$P,0,i,0,this.size),this._$P=i}this._$P[this.size++]=t},N.prototype._$BL=function(){var t=new Float32Array(this.size);return w._$jT(this._$P,0,t,0,this.size),t},B._$Fr=0,B._$hs=1,B._$ws=100,B._$Ns=101,B._$xs=102,B._$us=103,B._$qs=104,B._$Ys=105,Z.prototype=new I,Z._$gT=new Array,Z.prototype._$zP=function(){this._$GS=new D,this._$GS._$zP()},Z.prototype._$F0=function(t){I.prototype._$F0.call(this,t),this._$A=t._$6L(),this._$o=t._$6L(),this._$GS=t._$nP(),this._$Eo=t._$nP(),I.prototype.readV2_opacity.call(this,t)},Z.prototype.init=function(t){var i=new K(this),e=(this._$o+1)*(this._$A+1);return null!=i._$Cr&&(i._$Cr=null),i._$Cr=new Float32Array(2*e),null!=i._$hr&&(i._$hr=null),this._$32()?i._$hr=new Float32Array(2*e):i._$hr=null,i},Z.prototype._$Nr=function(t,i){var e=i;if(this._$GS._$Ur(t)){var r=this._$VT(),o=Z._$gT;o[0]=!1,v._$Vr(t,this._$GS,o,r,this._$Eo,e._$Cr,0,2),i._$Ib(o[0]),this.interpolateOpacity(t,this._$GS,i,o)}},Z.prototype._$2b=function(t,i){var e=i;if(e._$hS(!0),this._$32()){var r=this.getTargetBaseDataID();if(e._$8r==I._$ur&&(e._$8r=t.getBaseDataIndex(r)),e._$8r<0)at._$so&&_._$li(\"_$L _$0P _$G :: %s\",r),e._$hS(!1);else{var o=t.getBaseData(e._$8r),n=t._$q2(e._$8r);if(null!=o&&n._$yo()){var s=n.getTotalScale();e.setTotalScale_notForClient(s);var a=n.getTotalOpacity();e.setTotalOpacity(a*e.getInterpolatedOpacity()),o._$nb(t,n,e._$Cr,e._$hr,this._$VT(),0,2),e._$hS(!0)}else e._$hS(!1)}}else e.setTotalOpacity(e.getInterpolatedOpacity())},Z.prototype._$nb=function(t,i,e,r,o,n,s){var _=i,a=null!=_._$hr?_._$hr:_._$Cr;Z.transformPoints_sdk2(e,r,o,n,s,a,this._$o,this._$A)},Z.transformPoints_sdk2=function(i,e,r,o,n,s,_,a){for(var h,l,$,u=r*n,p=0,f=0,c=0,d=0,g=0,y=0,m=!1,T=o;T<u;T+=n){var P,S,v,L;if(v=i[T],L=i[T+1],P=v*_,S=L*a,P<0||S<0||_<=P||a<=S){var M=_+1;if(!m){m=!0,p=.25*(s[2*(0+0*M)]+s[2*(_+0*M)]+s[2*(0+a*M)]+s[2*(_+a*M)]),f=.25*(s[2*(0+0*M)+1]+s[2*(_+0*M)+1]+s[2*(0+a*M)+1]+s[2*(_+a*M)+1]);var E=s[2*(_+a*M)]-s[2*(0+0*M)],A=s[2*(_+a*M)+1]-s[2*(0+0*M)+1],I=s[2*(_+0*M)]-s[2*(0+a*M)],w=s[2*(_+0*M)+1]-s[2*(0+a*M)+1];c=.5*(E+I),d=.5*(A+w),g=.5*(E-I),y=.5*(A-w),p-=.5*(c+g),f-=.5*(d+y)}if(-2<v&&v<3&&-2<L&&L<3)if(v<=0)if(L<=0){var x=s[2*(0+0*M)],O=s[2*(0+0*M)+1],D=p-2*c,R=f-2*d,b=p-2*g,F=f-2*y,C=p-2*c-2*g,N=f-2*d-2*y,B=.5*(v- -2),U=.5*(L- -2);B+U<=1?(e[T]=C+(b-C)*B+(D-C)*U,e[T+1]=N+(F-N)*B+(R-N)*U):(e[T]=x+(D-x)*(1-B)+(b-x)*(1-U),e[T+1]=O+(R-O)*(1-B)+(F-O)*(1-U))}else if(L>=1){var b=s[2*(0+a*M)],F=s[2*(0+a*M)+1],C=p-2*c+1*g,N=f-2*d+1*y,x=p+3*g,O=f+3*y,D=p-2*c+3*g,R=f-2*d+3*y,B=.5*(v- -2),U=.5*(L-1);B+U<=1?(e[T]=C+(b-C)*B+(D-C)*U,e[T+1]=N+(F-N)*B+(R-N)*U):(e[T]=x+(D-x)*(1-B)+(b-x)*(1-U),e[T+1]=O+(R-O)*(1-B)+(F-O)*(1-U))}else{var G=0|S;G==a&&(G=a-1);var B=.5*(v- -2),U=S-G,Y=G/a,k=(G+1)/a,b=s[2*(0+G*M)],F=s[2*(0+G*M)+1],x=s[2*(0+(G+1)*M)],O=s[2*(0+(G+1)*M)+1],C=p-2*c+Y*g,N=f-2*d+Y*y,D=p-2*c+k*g,R=f-2*d+k*y;B+U<=1?(e[T]=C+(b-C)*B+(D-C)*U,e[T+1]=N+(F-N)*B+(R-N)*U):(e[T]=x+(D-x)*(1-B)+(b-x)*(1-U),e[T+1]=O+(R-O)*(1-B)+(F-O)*(1-U))}else if(1<=v)if(L<=0){var D=s[2*(_+0*M)],R=s[2*(_+0*M)+1],x=p+3*c,O=f+3*d,C=p+1*c-2*g,N=f+1*d-2*y,b=p+3*c-2*g,F=f+3*d-2*y,B=.5*(v-1),U=.5*(L- -2);B+U<=1?(e[T]=C+(b-C)*B+(D-C)*U,e[T+1]=N+(F-N)*B+(R-N)*U):(e[T]=x+(D-x)*(1-B)+(b-x)*(1-U),e[T+1]=O+(R-O)*(1-B)+(F-O)*(1-U))}else if(L>=1){var C=s[2*(_+a*M)],N=s[2*(_+a*M)+1],b=p+3*c+1*g,F=f+3*d+1*y,D=p+1*c+3*g,R=f+1*d+3*y,x=p+3*c+3*g,O=f+3*d+3*y,B=.5*(v-1),U=.5*(L-1);B+U<=1?(e[T]=C+(b-C)*B+(D-C)*U,e[T+1]=N+(F-N)*B+(R-N)*U):(e[T]=x+(D-x)*(1-B)+(b-x)*(1-U),e[T+1]=O+(R-O)*(1-B)+(F-O)*(1-U))}else{var G=0|S;G==a&&(G=a-1);var B=.5*(v-1),U=S-G,Y=G/a,k=(G+1)/a,C=s[2*(_+G*M)],N=s[2*(_+G*M)+1],D=s[2*(_+(G+1)*M)],R=s[2*(_+(G+1)*M)+1],b=p+3*c+Y*g,F=f+3*d+Y*y,x=p+3*c+k*g,O=f+3*d+k*y;B+U<=1?(e[T]=C+(b-C)*B+(D-C)*U,e[T+1]=N+(F-N)*B+(R-N)*U):(e[T]=x+(D-x)*(1-B)+(b-x)*(1-U),e[T+1]=O+(R-O)*(1-B)+(F-O)*(1-U))}else if(L<=0){var V=0|P;V==_&&(V=_-1);var B=P-V,U=.5*(L- -2),X=V/_,z=(V+1)/_,D=s[2*(V+0*M)],R=s[2*(V+0*M)+1],x=s[2*(V+1+0*M)],O=s[2*(V+1+0*M)+1],C=p+X*c-2*g,N=f+X*d-2*y,b=p+z*c-2*g,F=f+z*d-2*y;B+U<=1?(e[T]=C+(b-C)*B+(D-C)*U,e[T+1]=N+(F-N)*B+(R-N)*U):(e[T]=x+(D-x)*(1-B)+(b-x)*(1-U),e[T+1]=O+(R-O)*(1-B)+(F-O)*(1-U))}else if(L>=1){var V=0|P;V==_&&(V=_-1);var B=P-V,U=.5*(L-1),X=V/_,z=(V+1)/_,C=s[2*(V+a*M)],N=s[2*(V+a*M)+1],b=s[2*(V+1+a*M)],F=s[2*(V+1+a*M)+1],D=p+X*c+3*g,R=f+X*d+3*y,x=p+z*c+3*g,O=f+z*d+3*y;B+U<=1?(e[T]=C+(b-C)*B+(D-C)*U,e[T+1]=N+(F-N)*B+(R-N)*U):(e[T]=x+(D-x)*(1-B)+(b-x)*(1-U),e[T+1]=O+(R-O)*(1-B)+(F-O)*(1-U))}else t.err.printf(\"_$li calc : %.4f , %.4f\\t\\t\\t\\t\\t@@BDBoxGrid\\n\",v,L);else e[T]=p+v*c+L*g,e[T+1]=f+v*d+L*y}else l=P-(0|P),$=S-(0|S),h=2*((0|P)+(0|S)*(_+1)),l+$<1?(e[T]=s[h]*(1-l-$)+s[h+2]*l+s[h+2*(_+1)]*$,e[T+1]=s[h+1]*(1-l-$)+s[h+3]*l+s[h+2*(_+1)+1]*$):(e[T]=s[h+2*(_+1)+2]*(l-1+$)+s[h+2*(_+1)]*(1-l)+s[h+2]*(1-$),e[T+1]=s[h+2*(_+1)+3]*(l-1+$)+s[h+2*(_+1)+1]*(1-l)+s[h+3]*(1-$))}},Z.prototype.transformPoints_sdk1=function(t,i,e,r,o,n,s){for(var _,a,h,l,$,u,p,f=i,c=this._$o,d=this._$A,g=o*s,y=null!=f._$hr?f._$hr:f._$Cr,m=n;m<g;m+=s)at._$ts?(_=e[m],a=e[m+1],_<0?_=0:_>1&&(_=1),a<0?a=0:a>1&&(a=1),_*=c,a*=d,h=0|_,l=0|a,h>c-1&&(h=c-1),l>d-1&&(l=d-1),u=_-h,p=a-l,$=2*(h+l*(c+1))):(_=e[m]*c,a=e[m+1]*d,u=_-(0|_),p=a-(0|a),$=2*((0|_)+(0|a)*(c+1))),u+p<1?(r[m]=y[$]*(1-u-p)+y[$+2]*u+y[$+2*(c+1)]*p,r[m+1]=y[$+1]*(1-u-p)+y[$+3]*u+y[$+2*(c+1)+1]*p):(r[m]=y[$+2*(c+1)+2]*(u-1+p)+y[$+2*(c+1)]*(1-u)+y[$+2]*(1-p),r[m+1]=y[$+2*(c+1)+3]*(u-1+p)+y[$+2*(c+1)+1]*(1-u)+y[$+3]*(1-p))},Z.prototype._$VT=function(){return(this._$o+1)*(this._$A+1)},Z.prototype.getType=function(){return I._$_b},K.prototype=new _t,tt._$42=0,tt.prototype._$zP=function(){this._$3S=new Array,this._$aS=new Array},tt.prototype._$F0=function(t){this._$g0=t._$8L(),this.visible=t._$8L(),this._$NL=t._$nP(),this._$3S=t._$nP(),this._$aS=t._$nP()},tt.prototype.init=function(t){var i=new it(this);return i.setPartsOpacity(this.isVisible()?1:0),i},tt.prototype._$6o=function(t){if(null==this._$3S)throw new Error(\"_$3S _$6 _$Wo@_$6o\");this._$3S.push(t)},tt.prototype._$3o=function(t){if(null==this._$aS)throw new Error(\"_$aS _$6 _$Wo@_$3o\");this._$aS.push(t)},tt.prototype._$Zo=function(t){this._$3S=t},tt.prototype._$xo=function(t){this._$aS=t},tt.prototype.isVisible=function(){return this.visible},tt.prototype._$uL=function(){return this._$g0},tt.prototype._$KP=function(t){this.visible=t},tt.prototype._$ET=function(t){this._$g0=t},tt.prototype.getBaseData=function(){return this._$3S},tt.prototype.getDrawData=function(){return this._$aS},tt.prototype._$p2=function(){return this._$NL},tt.prototype._$ob=function(t){this._$NL=t},tt.prototype.getPartsID=function(){return this._$NL},tt.prototype._$MP=function(t){this._$NL=t},it.prototype=new $,it.prototype.getPartsOpacity=function(){return this._$VS},it.prototype.setPartsOpacity=function(t){this._$VS=t},et._$L7=function(){u._$27(),yt._$27(),b._$27(),l._$27()},et.prototype.toString=function(){return this.id},rt.prototype._$F0=function(t){},ot.prototype._$1s=function(){return this._$4S},ot.prototype._$zP=function(){this._$4S=new Array},ot.prototype._$F0=function(t){this._$4S=t._$nP()},ot.prototype._$Ks=function(t){this._$4S.push(t)},nt.tr=new gt,nt._$50=new gt,nt._$Ti=new Array(0,0),nt._$Pi=new Array(0,0),nt._$B=new Array(0,0),nt.prototype._$lP=function(t,i,e,r){this.viewport=new Array(t,i,e,r)},nt.prototype._$bL=function(){this.context.save();var t=this.viewport;null!=t&&(this.context.beginPath(),this.context._$Li(t[0],t[1],t[2],t[3]),this.context.clip())},nt.prototype._$ei=function(){this.context.restore()},nt.prototype.drawElements=function(t,i,e,r,o,n,s,a){try{o!=this._$Qo&&(this._$Qo=o,this.context.globalAlpha=o);for(var h=i.length,l=t.width,$=t.height,u=this.context,p=this._$xP,f=this._$uP,c=this._$6r,d=this._$3r,g=nt.tr,y=nt._$Ti,m=nt._$Pi,T=nt._$B,P=0;P<h;P+=3){u.save();var S=i[P],v=i[P+1],L=i[P+2],M=p+c*e[2*S],E=f+d*e[2*S+1],A=p+c*e[2*v],I=f+d*e[2*v+1],w=p+c*e[2*L],x=f+d*e[2*L+1];s&&(s._$PS(M,E,T),M=T[0],E=T[1],s._$PS(A,I,T),A=T[0],I=T[1],s._$PS(w,x,T),w=T[0],x=T[1]);var O=l*r[2*S],D=$-$*r[2*S+1],R=l*r[2*v],b=$-$*r[2*v+1],F=l*r[2*L],C=$-$*r[2*L+1],N=Math.atan2(b-D,R-O),B=Math.atan2(I-E,A-M),U=A-M,G=I-E,Y=Math.sqrt(U*U+G*G),k=R-O,V=b-D,X=Math.sqrt(k*k+V*V),z=Y/X;It._$ni(F,C,O,D,R-O,b-D,-(b-D),R-O,y),It._$ni(w,x,M,E,A-M,I-E,-(I-E),A-M,m);var H=(m[0]-y[0])/y[1],W=Math.min(O,R,F),j=Math.max(O,R,F),q=Math.min(D,b,C),J=Math.max(D,b,C),Q=Math.floor(W),Z=Math.floor(q),K=Math.ceil(j),tt=Math.ceil(J);g.identity(),g.translate(M,E),g.rotate(B),g.scale(1,m[1]/y[1]),g.shear(H,0),g.scale(z,z),g.rotate(-N),g.translate(-O,-D),g.setContext(u);if(n||(n=1.2),at.IGNORE_EXPAND&&(n=0),at.USE_CACHED_POLYGON_IMAGE){var it=a._$e0;if(it.gl_cacheImage=it.gl_cacheImage||{},!it.gl_cacheImage[P]){var et=nt.createCanvas(K-Q,tt-Z);at.DEBUG_DATA.LDGL_CANVAS_MB=at.DEBUG_DATA.LDGL_CANVAS_MB||0,at.DEBUG_DATA.LDGL_CANVAS_MB+=(K-Q)*(tt-Z)*4;var rt=et.getContext(\"2d\");rt.translate(-Q,-Z),nt.clip(rt,g,n,Y,O,D,R,b,F,C,M,E,A,I,w,x),rt.drawImage(t,0,0),it.gl_cacheImage[P]={cacheCanvas:et,cacheContext:rt}}u.drawImage(it.gl_cacheImage[P].cacheCanvas,Q,Z)}else at.IGNORE_CLIP||nt.clip(u,g,n,Y,O,D,R,b,F,C,M,E,A,I,w,x),at.USE_ADJUST_TRANSLATION&&(W=0,j=l,q=0,J=$),u.drawImage(t,W,q,j-W,J-q,W,q,j-W,J-q);u.restore()}}catch(t){_._$Rb(t)}},nt.clip=function(t,i,e,r,o,n,s,_,a,h,l,$,u,p,f,c){e>.02?nt.expandClip(t,i,e,r,l,$,u,p,f,c):nt.clipWithTransform(t,null,o,n,s,_,a,h)},nt.expandClip=function(t,i,e,r,o,n,s,_,a,h){var l=s-o,$=_-n,u=a-o,p=h-n,f=l*p-$*u>0?e:-e,c=-$,d=l,g=a-s,y=h-_,m=-y,T=g,P=Math.sqrt(g*g+y*y),S=-p,v=u,L=Math.sqrt(u*u+p*p),M=o-f*c/r,E=n-f*d/r,A=s-f*c/r,I=_-f*d/r,w=s-f*m/P,x=_-f*T/P,O=a-f*m/P,D=h-f*T/P,R=o+f*S/L,b=n+f*v/L,F=a+f*S/L,C=h+f*v/L,N=nt._$50;return null!=i._$P2(N)&&(nt.clipWithTransform(t,N,M,E,A,I,w,x,O,D,F,C,R,b),!0)},nt.clipWithTransform=function(t,i,e,r,o,n,s,a){if(arguments.length<7)return void _._$li(\"err : @LDGL.clip()\");if(!(arguments[1]instanceof gt))return void _._$li(\"err : a[0] is _$6 LDTransform @LDGL.clip()\");var h=nt._$B,l=i,$=arguments;if(t.beginPath(),l){l._$PS($[2],$[3],h),t.moveTo(h[0],h[1]);for(var u=4;u<$.length;u+=2)l._$PS($[u],$[u+1],h),t.lineTo(h[0],h[1])}else{t.moveTo($[2],$[3]);for(var u=4;u<$.length;u+=2)t.lineTo($[u],$[u+1])}t.clip()},nt.createCanvas=function(t,i){var e=document.createElement(\"canvas\");return e.setAttribute(\"width\",t),e.setAttribute(\"height\",i),e||_._$li(\"err : \"+e),e},nt.dumpValues=function(){for(var t=\"\",i=0;i<arguments.length;i++)t+=\"[\"+i+\"]= \"+arguments[i].toFixed(3)+\" , \";console.log(t)},st.prototype._$F0=function(t){this._$TT=t._$_T(),this._$LT=t._$_T(),this._$FS=t._$_T(),this._$wL=t._$nP()},st.prototype.getMinValue=function(){return this._$TT},st.prototype.getMaxValue=function(){return this._$LT},st.prototype.getDefaultValue=function(){return this._$FS},st.prototype.getParamID=function(){return this._$wL},_t.prototype._$yo=function(){return this._$AT&&!this._$JS},_t.prototype._$hS=function(t){this._$AT=t},_t.prototype._$GT=function(){return this._$e0},_t.prototype._$l2=function(t){this._$IP=t},_t.prototype.getPartsIndex=function(){return this._$IP},_t.prototype._$x2=function(){return this._$JS},_t.prototype._$Ib=function(t){this._$JS=t},_t.prototype.getTotalScale=function(){return this.totalScale},_t.prototype.setTotalScale_notForClient=function(t){this.totalScale=t},_t.prototype.getInterpolatedOpacity=function(){return this._$7s},_t.prototype.setInterpolatedOpacity=function(t){this._$7s=t},_t.prototype.getTotalOpacity=function(t){return this.totalOpacity},_t.prototype.setTotalOpacity=function(t){this.totalOpacity=t},at._$2s=\"2.1.00_1\",at._$Kr=201001e3,at._$sP=!0,at._$so=!0,at._$cb=!1,at._$3T=!0,at._$Ts=!0,at._$fb=!0,at._$ts=!0,at.L2D_DEFORMER_EXTEND=!0,at._$Wb=!1;at._$yr=!1,at._$Zs=!1,at.L2D_NO_ERROR=0,at._$i7=1e3,at._$9s=1001,at._$es=1100,at._$r7=2e3,at._$07=2001,at._$b7=2002,at._$H7=4e3,at.L2D_COLOR_BLEND_MODE_MULT=0,at.L2D_COLOR_BLEND_MODE_ADD=1,at.L2D_COLOR_BLEND_MODE_INTERPOLATE=2,at._$6b=!0,at._$cT=0,at.clippingMaskBufferSize=256,at.glContext=new Array,at.frameBuffers=new Array,at.fTexture=new Array,at.IGNORE_CLIP=!1,at.IGNORE_EXPAND=!1,at.EXPAND_W=2,at.USE_ADJUST_TRANSLATION=!0,at.USE_CANVAS_TRANSFORM=!0,at.USE_CACHED_POLYGON_IMAGE=!1,at.DEBUG_DATA={},at.PROFILE_IOS_SPEED={PROFILE_NAME:\"iOS Speed\",USE_ADJUST_TRANSLATION:!0,USE_CACHED_POLYGON_IMAGE:!0,EXPAND_W:4},at.PROFILE_IOS_QUALITY={PROFILE_NAME:\"iOS HiQ\",USE_ADJUST_TRANSLATION:!0,USE_CACHED_POLYGON_IMAGE:!1,EXPAND_W:2},at.PROFILE_IOS_DEFAULT=at.PROFILE_IOS_QUALITY,at.PROFILE_ANDROID={PROFILE_NAME:\"Android\",USE_ADJUST_TRANSLATION:!1,USE_CACHED_POLYGON_IMAGE:!1,EXPAND_W:2},at.PROFILE_DESKTOP={PROFILE_NAME:\"Desktop\",USE_ADJUST_TRANSLATION:!1,USE_CACHED_POLYGON_IMAGE:!1,EXPAND_W:2},at.initProfile=function(){Et.isIOS()?at.setupProfile(at.PROFILE_IOS_DEFAULT):Et.isAndroid()?at.setupProfile(at.PROFILE_ANDROID):at.setupProfile(at.PROFILE_DESKTOP)},at.setupProfile=function(t,i){if(\"number\"==typeof t)switch(t){case 9901:t=at.PROFILE_IOS_SPEED;break;case 9902:t=at.PROFILE_IOS_QUALITY;break;case 9903:t=at.PROFILE_IOS_DEFAULT;break;case 9904:t=at.PROFILE_ANDROID;break;case 9905:t=at.PROFILE_DESKTOP;break;default:alert(\"profile _$6 _$Ui : \"+t)}arguments.length<2&&(i=!0),i&&console.log(\"profile : \"+t.PROFILE_NAME);for(var e in t)at[e]=t[e],i&&console.log(\"  [\"+e+\"] = \"+t[e])},at.init=function(){if(at._$6b){console.log(\"Live2D %s\",at._$2s),at._$6b=!1;!0,at.initProfile()}},at.getVersionStr=function(){return at._$2s},at.getVersionNo=function(){return at._$Kr},at._$sT=function(t){at._$cT=t},at.getError=function(){var t=at._$cT;return at._$cT=0,t},at.dispose=function(){at.glContext=[],at.frameBuffers=[],at.fTexture=[]},at.setGL=function(t,i){var e=i||0;at.glContext[e]=t},at.getGL=function(t){return at.glContext[t]},at.setClippingMaskBufferSize=function(t){at.clippingMaskBufferSize=t},at.getClippingMaskBufferSize=function(){return at.clippingMaskBufferSize},at.deleteBuffer=function(t){at.getGL(t).deleteFramebuffer(at.frameBuffers[t].framebuffer),delete at.frameBuffers[t],delete at.glContext[t]},ht._$r2=function(t){return t<0?0:t>1?1:.5-.5*Math.cos(t*Lt.PI_F)},lt._$fr=-1,lt.prototype.toString=function(){return this._$ib},$t.prototype=new W,$t._$42=0,$t._$Os=30,$t._$ms=0,$t._$ns=1,$t._$_s=2,$t._$gT=new Array,$t.prototype._$_S=function(t){this._$LP=t},$t.prototype.getTextureNo=function(){return this._$LP},$t.prototype._$ZL=function(){return this._$Qi},$t.prototype._$H2=function(){return this._$JP},$t.prototype.getNumPoints=function(){return this._$d0},$t.prototype.getType=function(){return W._$wb},$t.prototype._$B2=function(t,i,e){var r=i,o=null!=r._$hr?r._$hr:r._$Cr;switch(U._$do){default:case U._$Ms:throw new Error(\"_$L _$ro \");case U._$Qs:for(var n=this._$d0-1;n>=0;--n)o[n*U._$No+4]=e}},$t.prototype._$zP=function(){this._$GS=new D,this._$GS._$zP()},$t.prototype._$F0=function(t){W.prototype._$F0.call(this,t),this._$LP=t._$6L(),this._$d0=t._$6L(),this._$Yo=t._$6L();var i=t._$nP();this._$BP=new Int16Array(3*this._$Yo);for(var e=3*this._$Yo-1;e>=0;--e)this._$BP[e]=i[e];if(this._$Eo=t._$nP(),this._$Qi=t._$nP(),t.getFormatVersion()>=G._$s7){if(this._$JP=t._$6L(),0!=this._$JP){if(0!=(1&this._$JP)){var r=t._$6L();null==this._$5P&&(this._$5P=new Object),this._$5P._$Hb=parseInt(r)}0!=(this._$JP&$t._$Os)?this._$6s=(this._$JP&$t._$Os)>>1:this._$6s=$t._$ms,0!=(32&this._$JP)&&(this.culling=!1)}}else this._$JP=0},$t.prototype.init=function(t){var i=new ut(this),e=this._$d0*U._$No,r=this._$32();switch(null!=i._$Cr&&(i._$Cr=null),i._$Cr=new Float32Array(e),null!=i._$hr&&(i._$hr=null),i._$hr=r?new Float32Array(e):null,U._$do){default:case U._$Ms:if(U._$Ls)for(var o=this._$d0-1;o>=0;--o){var n=o<<1;this._$Qi[n+1]=1-this._$Qi[n+1]}break;case U._$Qs:for(var o=this._$d0-1;o>=0;--o){var n=o<<1,s=o*U._$No,_=this._$Qi[n],a=this._$Qi[n+1];i._$Cr[s]=_,i._$Cr[s+1]=a,i._$Cr[s+4]=0,r&&(i._$hr[s]=_,i._$hr[s+1]=a,i._$hr[s+4]=0)}}return i},$t.prototype._$Nr=function(t,i){var e=i;if(this!=e._$GT()&&console.log(\"### assert!! ### \"),this._$GS._$Ur(t)&&(W.prototype._$Nr.call(this,t,e),!e._$IS[0])){var r=$t._$gT;r[0]=!1,v._$Vr(t,this._$GS,r,this._$d0,this._$Eo,e._$Cr,U._$i2,U._$No)}},$t.prototype._$2b=function(t,i){try{this!=i._$GT()&&console.log(\"### assert!! ### \");var e=!1;i._$IS[0]&&(e=!0);var r=i;if(!e&&(W.prototype._$2b.call(this,t),this._$32())){var o=this.getTargetBaseDataID();if(r._$8r==W._$ur&&(r._$8r=t.getBaseDataIndex(o)),r._$8r<0)at._$so&&_._$li(\"_$L _$0P _$G :: %s\",o);else{var n=t.getBaseData(r._$8r),s=t._$q2(r._$8r);null==n||s._$x2()?r._$AT=!1:(n._$nb(t,s,r._$Cr,r._$hr,this._$d0,U._$i2,U._$No),r._$AT=!0),r.baseOpacity=s.getTotalOpacity()}}}catch(t){throw t}},$t.prototype.draw=function(t,i,e){if(this!=e._$GT()&&console.log(\"### assert!! ### \"),!e._$IS[0]){var r=e,o=this._$LP;o<0&&(o=1);var n=this.getOpacity(i,r)*e._$VS*e.baseOpacity,s=null!=r._$hr?r._$hr:r._$Cr;t.setClipBufPre_clipContextForDraw(e.clipBufPre_clipContext),t._$WP(this.culling),t._$Uo(o,3*this._$Yo,this._$BP,s,this._$Qi,n,this._$6s,r)}},$t.prototype.dump=function(){console.log(\"  _$yi( %d ) , _$d0( %d ) , _$Yo( %d ) \\n\",this._$LP,this._$d0,this._$Yo),console.log(\"  _$Oi _$di = { \");for(var t=0;t<this._$BP.length;t++)console.log(\"%5d ,\",this._$BP[t]);console.log(\"\\n  _$5i _$30\");for(var t=0;t<this._$Eo.length;t++){console.log(\"\\n    _$30[%d] = \",t);for(var i=this._$Eo[t],e=0;e<i.length;e++)console.log(\"%6.2f, \",i[e])}console.log(\"\\n\")},$t.prototype._$72=function(t){return null==this._$5P?null:this._$5P[t]},$t.prototype.getIndexArray=function(){return this._$BP},ut.prototype=new Mt,ut.prototype.getTransformedPoints=function(){return null!=this._$hr?this._$hr:this._$Cr},pt.prototype._$HT=function(t){this.x=t.x,this.y=t.y},pt.prototype._$HT=function(t,i){this.x=t,this.y=i},ft.prototype=new i,ft.loadModel=function(t){var e=new ft;return i._$62(e,t),e},ft.loadModel=function(t,e){var r=e||0,o=new ft(r);return i._$62(o,t),o},ft._$to=function(){return new ft},ft._$er=function(t){var i=new _$5(\"../_$_r/_$t0/_$Ri/_$_P._$d\");if(0==i.exists())throw new _$ls(\"_$t0 _$_ _$6 _$Ui :: \"+i._$PL());for(var e=[\"../_$_r/_$t0/_$Ri/_$_P.512/_$CP._$1\",\"../_$_r/_$t0/_$Ri/_$_P.512/_$vP._$1\",\"../_$_r/_$t0/_$Ri/_$_P.512/_$EP._$1\",\"../_$_r/_$t0/_$Ri/_$_P.512/_$pP._$1\"],r=ft.loadModel(i._$3b()),o=0;o<e.length;o++){var n=new _$5(e[o]);if(0==n.exists())throw new _$ls(\"_$t0 _$_ _$6 _$Ui :: \"+n._$PL());r.setTexture(o,_$nL._$_o(t,n._$3b()))}return r},ft.prototype.setGL=function(t){at.setGL(t)},ft.prototype.setTransform=function(t){this.drawParamWebGL.setTransform(t)},ft.prototype.update=function(){this._$5S.update(),this._$5S.preDraw(this.drawParamWebGL)},ft.prototype.draw=function(){this._$5S.draw(this.drawParamWebGL)},ft.prototype._$K2=function(){this.drawParamWebGL._$K2()},ft.prototype.setTexture=function(t,i){null==this.drawParamWebGL&&_._$li(\"_$Yi for QT _$ki / _$XS() is _$6 _$ui!!\"),this.drawParamWebGL.setTexture(t,i)},ft.prototype.setTexture=function(t,i){null==this.drawParamWebGL&&_._$li(\"_$Yi for QT _$ki / _$XS() is _$6 _$ui!!\"),this.drawParamWebGL.setTexture(t,i)},ft.prototype._$Rs=function(){return this.drawParamWebGL._$Rs()},ft.prototype._$Ds=function(t){this.drawParamWebGL._$Ds(t)},ft.prototype.getDrawParam=function(){return this.drawParamWebGL},ft.prototype.setMatrix=function(t){this.drawParamWebGL.setMatrix(t)},ft.prototype.setPremultipliedAlpha=function(t){this.drawParamWebGL.setPremultipliedAlpha(t)},ft.prototype.isPremultipliedAlpha=function(){return this.drawParamWebGL.isPremultipliedAlpha()},ft.prototype.setAnisotropy=function(t){this.drawParamWebGL.setAnisotropy(t)},ft.prototype.getAnisotropy=function(){return this.drawParamWebGL.getAnisotropy()},ct.prototype._$tb=function(){return this.motions},ct.prototype.startMotion=function(t,i){for(var e=null,r=this.motions.length,o=0;o<r;++o)null!=(e=this.motions[o])&&(e._$qS(e._$w0.getFadeOut()),this._$eb&&_._$Ji(\"MotionQueueManager[size:%2d]->startMotion() / start _$K _$3 (m%d)\\n\",r,e._$sr));if(null==t)return-1;e=new dt,e._$w0=t,this.motions.push(e);var n=e._$sr;return this._$eb&&_._$Ji(\"MotionQueueManager[size:%2d]->startMotion() / new _$w0 (m%d)\\n\",r,n),n},ct.prototype.updateParam=function(t){try{for(var i=!1,e=0;e<this.motions.length;e++){var r=this.motions[e];if(null!=r){var o=r._$w0;null!=o?(o.updateParam(t,r),i=!0,r.isFinished()&&(this._$eb&&_._$Ji(\"MotionQueueManager[size:%2d]->updateParam() / _$T0 _$w0 (m%d)\\n\",this.motions.length-1,r._$sr),this.motions.splice(e,1),e--)):(this.motions=this.motions.splice(e,1),e--)}else this.motions.splice(e,1),e--}return i}catch(t){return _._$li(t),!0}},ct.prototype.isFinished=function(t){if(arguments.length>=1){for(var i=0;i<this.motions.length;i++){var e=this.motions[i];if(null!=e&&(e._$sr==t&&!e.isFinished()))return!1}return!0}for(var i=0;i<this.motions.length;i++){var e=this.motions[i];if(null!=e){if(null!=e._$w0){if(!e.isFinished())return!1}else this.motions.splice(i,1),i--}else this.motions.splice(i,1),i--}return!0},ct.prototype.stopAllMotions=function(){for(var t=0;t<this.motions.length;t++){var i=this.motions[t];if(null!=i){i._$w0;this.motions.splice(t,1),t--}else this.motions.splice(t,1),t--}},ct.prototype._$Zr=function(t){this._$eb=t},ct.prototype._$e=function(){console.log(\"-- _$R --\\n\");for(var t=0;t<this.motions.length;t++){var i=this.motions[t],e=i._$w0;console.log(\"MotionQueueEnt[%d] :: %s\\n\",this.motions.length,e.toString())}},dt._$Gs=0,dt.prototype.isFinished=function(){return this._$9L},dt.prototype._$qS=function(t){var i=w.getUserTimeMSec(),e=i+t;(this._$Do<0||e<this._$Do)&&(this._$Do=e)},dt.prototype._$Bs=function(){return this._$sr},gt.prototype.setContext=function(t){var i=this.m;t.transform(i[0],i[1],i[3],i[4],i[6],i[7])},gt.prototype.toString=function(){for(var t=\"LDTransform { \",i=0;i<9;i++)t+=this.m[i].toFixed(2)+\" ,\";return t+=\" }\"},gt.prototype.identity=function(){var t=this.m;t[0]=t[4]=t[8]=1,t[1]=t[2]=t[3]=t[5]=t[6]=t[7]=0},gt.prototype._$PS=function(t,i,e){null==e&&(e=new Array(0,0));var r=this.m;return e[0]=r[0]*t+r[3]*i+r[6],e[1]=r[1]*t+r[4]*i+r[7],e},gt.prototype._$P2=function(t){t||(t=new gt);var i=this.m,e=i[0],r=i[1],o=i[2],n=i[3],s=i[4],_=i[5],a=i[6],h=i[7],l=i[8],$=e*s*l+r*_*a+o*n*h-e*_*h-o*s*a-r*n*l;if(0==$)return null;var u=1/$;return t.m[0]=u*(s*l-h*_),t.m[1]=u*(h*o-r*l),t.m[2]=u*(r*_-s*o),t.m[3]=u*(a*_-n*l),t.m[4]=u*(e*l-a*o),t.m[5]=u*(n*o-e*_),t.m[6]=u*(n*h-a*s),t.m[7]=u*(a*r-e*h),t.m[8]=u*(e*s-n*r),t},gt.prototype.transform=function(t,i,e){null==e&&(e=new Array(0,0));var r=this.m;return e[0]=r[0]*t+r[3]*i+r[6],e[1]=r[1]*t+r[4]*i+r[7],e},gt.prototype.translate=function(t,i){var e=this.m;e[6]=e[0]*t+e[3]*i+e[6],e[7]=e[1]*t+e[4]*i+e[7],e[8]=e[2]*t+e[5]*i+e[8]},gt.prototype.scale=function(t,i){var e=this.m;e[0]*=t,e[1]*=t,e[2]*=t,e[3]*=i,e[4]*=i,e[5]*=i},gt.prototype.shear=function(t,i){var e=this.m,r=e[0]+e[3]*i,o=e[1]+e[4]*i,n=e[2]+e[5]*i;e[3]=e[0]*t+e[3],e[4]=e[1]*t+e[4],e[5]=e[2]*t+e[5],e[0]=r,e[1]=o,e[2]=n},gt.prototype.rotate=function(t){var i=this.m,e=Math.cos(t),r=Math.sin(t),o=i[0]*e+i[3]*r,n=i[1]*e+i[4]*r,s=i[2]*e+i[5]*r;i[3]=-i[0]*r+i[3]*e,i[4]=-i[1]*r+i[4]*e,i[5]=-i[2]*r+i[5]*e,i[0]=o,i[1]=n,i[2]=s},gt.prototype.concatenate=function(t){var i=this.m,e=t.m,r=i[0]*e[0]+i[3]*e[1]+i[6]*e[2],o=i[1]*e[0]+i[4]*e[1]+i[7]*e[2],n=i[2]*e[0]+i[5]*e[1]+i[8]*e[2],s=i[0]*e[3]+i[3]*e[4]+i[6]*e[5],_=i[1]*e[3]+i[4]*e[4]+i[7]*e[5],a=i[2]*e[3]+i[5]*e[4]+i[8]*e[5],h=i[0]*e[6]+i[3]*e[7]+i[6]*e[8],l=i[1]*e[6]+i[4]*e[7]+i[7]*e[8],$=i[2]*e[6]+i[5]*e[7]+i[8]*e[8];m[0]=r,m[1]=o,m[2]=n,m[3]=s,m[4]=_,m[5]=a,m[6]=h,m[7]=l,m[8]=$},yt.prototype=new et,yt._$eT=null,yt._$tP=new Object,yt._$2o=function(){return null==yt._$eT&&(yt._$eT=yt.getID(\"DST_BASE\")),yt._$eT},yt._$27=function(){yt._$tP.clear(),yt._$eT=null},yt.getID=function(t){var i=yt._$tP[t];return null==i&&(i=new yt(t),yt._$tP[t]=i),i},yt.prototype._$3s=function(){return new yt},mt.prototype=new E,mt._$9r=function(t){return new Float32Array(t)},mt._$vb=function(t){return new Int16Array(t)},mt._$cr=function(t,i){return null==t||t._$yL()<i.length?(t=mt._$9r(2*i.length),t.put(i),t._$oT(0)):(t.clear(),t.put(i),t._$oT(0)),t},mt._$mb=function(t,i){return null==t||t._$yL()<i.length?(t=mt._$vb(2*i.length),t.put(i),t._$oT(0)):(t.clear(),t.put(i),t._$oT(0)),t},mt._$Hs=function(){return this._$Gr},mt._$as=function(t){this._$Gr=t},mt.prototype.getGL=function(){return this.gl},mt.prototype.setGL=function(t){this.gl=t},mt.prototype.setTransform=function(t){this.transform=t},mt.prototype._$ZT=function(){var t=this.gl;this.firstDraw&&(this.initShader(),this.firstDraw=!1,this.anisotropyExt=t.getExtension(\"EXT_texture_filter_anisotropic\")||t.getExtension(\"WEBKIT_EXT_texture_filter_anisotropic\")||t.getExtension(\"MOZ_EXT_texture_filter_anisotropic\"),this.anisotropyExt&&(this.maxAnisotropy=t.getParameter(this.anisotropyExt.MAX_TEXTURE_MAX_ANISOTROPY_EXT))),t.disable(t.SCISSOR_TEST),t.disable(t.STENCIL_TEST),t.disable(t.DEPTH_TEST),t.frontFace(t.CW),t.enable(t.BLEND),t.colorMask(1,1,1,1),t.bindBuffer(t.ARRAY_BUFFER,null),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null)},mt.prototype._$Uo=function(t,i,e,r,o,n,s,_){if(!(n<.01&&null==this.clipBufPre_clipContextMask)){var a=(n>.9&&at.EXPAND_W,this.gl);if(null==this.gl)throw new Error(\"gl is null\");var h=1*this._$C0*n,l=1*this._$tT*n,$=1*this._$WL*n,u=this._$lT*n;if(null!=this.clipBufPre_clipContextMask){a.frontFace(a.CCW),a.useProgram(this.shaderProgram),this._$vS=Tt(a,this._$vS,r),this._$no=Pt(a,this._$no,e),a.enableVertexAttribArray(this.a_position_Loc),a.vertexAttribPointer(this.a_position_Loc,2,a.FLOAT,!1,0,0),this._$NT=Tt(a,this._$NT,o),a.activeTexture(a.TEXTURE1),a.bindTexture(a.TEXTURE_2D,this.textures[t]),a.uniform1i(this.s_texture0_Loc,1),a.enableVertexAttribArray(this.a_texCoord_Loc),a.vertexAttribPointer(this.a_texCoord_Loc,2,a.FLOAT,!1,0,0),a.uniformMatrix4fv(this.u_matrix_Loc,!1,this.getClipBufPre_clipContextMask().matrixForMask);var p=this.getClipBufPre_clipContextMask().layoutChannelNo,f=this.getChannelFlagAsColor(p);a.uniform4f(this.u_channelFlag,f.r,f.g,f.b,f.a);var c=this.getClipBufPre_clipContextMask().layoutBounds;a.uniform4f(this.u_baseColor_Loc,2*c.x-1,2*c.y-1,2*c._$EL()-1,2*c._$5T()-1),a.uniform1i(this.u_maskFlag_Loc,!0)}else if(null!=this.getClipBufPre_clipContextDraw()){a.useProgram(this.shaderProgramOff),this._$vS=Tt(a,this._$vS,r),this._$no=Pt(a,this._$no,e),a.enableVertexAttribArray(this.a_position_Loc_Off),a.vertexAttribPointer(this.a_position_Loc_Off,2,a.FLOAT,!1,0,0),this._$NT=Tt(a,this._$NT,o),a.activeTexture(a.TEXTURE1),a.bindTexture(a.TEXTURE_2D,this.textures[t]),a.uniform1i(this.s_texture0_Loc_Off,1),a.enableVertexAttribArray(this.a_texCoord_Loc_Off),a.vertexAttribPointer(this.a_texCoord_Loc_Off,2,a.FLOAT,!1,0,0),a.uniformMatrix4fv(this.u_clipMatrix_Loc_Off,!1,this.getClipBufPre_clipContextDraw().matrixForDraw),a.uniformMatrix4fv(this.u_matrix_Loc_Off,!1,this.matrix4x4),a.activeTexture(a.TEXTURE2),a.bindTexture(a.TEXTURE_2D,at.fTexture[this.glno]),a.uniform1i(this.s_texture1_Loc_Off,2);var p=this.getClipBufPre_clipContextDraw().layoutChannelNo,f=this.getChannelFlagAsColor(p);a.uniform4f(this.u_channelFlag_Loc_Off,f.r,f.g,f.b,f.a),a.uniform4f(this.u_baseColor_Loc_Off,h,l,$,u)}else a.useProgram(this.shaderProgram),this._$vS=Tt(a,this._$vS,r),this._$no=Pt(a,this._$no,e),a.enableVertexAttribArray(this.a_position_Loc),a.vertexAttribPointer(this.a_position_Loc,2,a.FLOAT,!1,0,0),this._$NT=Tt(a,this._$NT,o),a.activeTexture(a.TEXTURE1),a.bindTexture(a.TEXTURE_2D,this.textures[t]),a.uniform1i(this.s_texture0_Loc,1),a.enableVertexAttribArray(this.a_texCoord_Loc),a.vertexAttribPointer(this.a_texCoord_Loc,2,a.FLOAT,!1,0,0),a.uniformMatrix4fv(this.u_matrix_Loc,!1,this.matrix4x4),a.uniform4f(this.u_baseColor_Loc,h,l,$,u),a.uniform1i(this.u_maskFlag_Loc,!1);this.culling?this.gl.enable(a.CULL_FACE):this.gl.disable(a.CULL_FACE),this.gl.enable(a.BLEND);var d,g,y,m;if(null!=this.clipBufPre_clipContextMask)d=a.ONE,g=a.ONE_MINUS_SRC_ALPHA,y=a.ONE,m=a.ONE_MINUS_SRC_ALPHA;else switch(s){case $t._$ms:d=a.ONE,g=a.ONE_MINUS_SRC_ALPHA,y=a.ONE,m=a.ONE_MINUS_SRC_ALPHA;break;case $t._$ns:d=a.ONE,g=a.ONE,y=a.ZERO,m=a.ONE;break;case $t._$_s:d=a.DST_COLOR,g=a.ONE_MINUS_SRC_ALPHA,y=a.ZERO,m=a.ONE}a.blendEquationSeparate(a.FUNC_ADD,a.FUNC_ADD),a.blendFuncSeparate(d,g,y,m),this.anisotropyExt&&a.texParameteri(a.TEXTURE_2D,this.anisotropyExt.TEXTURE_MAX_ANISOTROPY_EXT,this.maxAnisotropy);var T=e.length;a.drawElements(a.TRIANGLES,T,a.UNSIGNED_SHORT,0),a.bindTexture(a.TEXTURE_2D,null)}},mt.prototype._$Rs=function(){throw new Error(\"_$Rs\")},mt.prototype._$Ds=function(t){throw new Error(\"_$Ds\")},mt.prototype._$K2=function(){for(var t=0;t<this.textures.length;t++){0!=this.textures[t]&&(this.gl._$K2(1,this.textures,t),this.textures[t]=null)}},mt.prototype.setTexture=function(t,i){this.textures[t]=i},mt.prototype.initShader=function(){var t=this.gl;this.loadShaders2(),this.a_position_Loc=t.getAttribLocation(this.shaderProgram,\"a_position\"),this.a_texCoord_Loc=t.getAttribLocation(this.shaderProgram,\"a_texCoord\"),this.u_matrix_Loc=t.getUniformLocation(this.shaderProgram,\"u_mvpMatrix\"),this.s_texture0_Loc=t.getUniformLocation(this.shaderProgram,\"s_texture0\"),this.u_channelFlag=t.getUniformLocation(this.shaderProgram,\"u_channelFlag\"),this.u_baseColor_Loc=t.getUniformLocation(this.shaderProgram,\"u_baseColor\"),this.u_maskFlag_Loc=t.getUniformLocation(this.shaderProgram,\"u_maskFlag\"),this.a_position_Loc_Off=t.getAttribLocation(this.shaderProgramOff,\"a_position\"),this.a_texCoord_Loc_Off=t.getAttribLocation(this.shaderProgramOff,\"a_texCoord\"),this.u_matrix_Loc_Off=t.getUniformLocation(this.shaderProgramOff,\"u_mvpMatrix\"),this.u_clipMatrix_Loc_Off=t.getUniformLocation(this.shaderProgramOff,\"u_ClipMatrix\"),this.s_texture0_Loc_Off=t.getUniformLocation(this.shaderProgramOff,\"s_texture0\"),this.s_texture1_Loc_Off=t.getUniformLocation(this.shaderProgramOff,\"s_texture1\"),this.u_channelFlag_Loc_Off=t.getUniformLocation(this.shaderProgramOff,\"u_channelFlag\"),this.u_baseColor_Loc_Off=t.getUniformLocation(this.shaderProgramOff,\"u_baseColor\")},mt.prototype.disposeShader=function(){var t=this.gl;this.shaderProgram&&(t.deleteProgram(this.shaderProgram),this.shaderProgram=null),this.shaderProgramOff&&(t.deleteProgram(this.shaderProgramOff),this.shaderProgramOff=null)},mt.prototype.compileShader=function(t,i){var e=this.gl,r=i,o=e.createShader(t);if(null==o)return _._$Ji(\"_$L0 to create shader\"),null;if(e.shaderSource(o,r),e.compileShader(o),!e.getShaderParameter(o,e.COMPILE_STATUS)){var n=e.getShaderInfoLog(o);return _._$Ji(\"_$L0 to compile shader : \"+n),e.deleteShader(o),null}return o},mt.prototype.loadShaders2=function(){var t=this.gl;if(this.shaderProgram=t.createProgram(),!this.shaderProgram)return!1;if(this.shaderProgramOff=t.createProgram(),!this.shaderProgramOff)return!1;if(this.vertShader=this.compileShader(t.VERTEX_SHADER,\"attribute vec4     a_position;attribute vec2     a_texCoord;varying vec2       v_texCoord;varying vec4       v_ClipPos;uniform mat4       u_mvpMatrix;void main(){    gl_Position = u_mvpMatrix * a_position;    v_ClipPos = u_mvpMatrix * a_position;    v_texCoord = a_texCoord;}\"),!this.vertShader)return _._$Ji(\"Vertex shader compile _$li!\"),!1;if(this.vertShaderOff=this.compileShader(t.VERTEX_SHADER,\"attribute vec4     a_position;attribute vec2     a_texCoord;varying vec2       v_texCoord;varying vec4       v_ClipPos;uniform mat4       u_mvpMatrix;uniform mat4       u_ClipMatrix;void main(){    gl_Position = u_mvpMatrix * a_position;    v_ClipPos = u_ClipMatrix * a_position;    v_texCoord = a_texCoord ;}\"),!this.vertShaderOff)return _._$Ji(\"OffVertex shader compile _$li!\"),!1;if(this.fragShader=this.compileShader(t.FRAGMENT_SHADER,\"precision mediump float;varying vec2       v_texCoord;varying vec4       v_ClipPos;uniform sampler2D  s_texture0;uniform vec4       u_channelFlag;uniform vec4       u_baseColor;uniform bool       u_maskFlag;void main(){    vec4 smpColor;     if(u_maskFlag){        float isInside =             step(u_baseColor.x, v_ClipPos.x/v_ClipPos.w)          * step(u_baseColor.y, v_ClipPos.y/v_ClipPos.w)          * step(v_ClipPos.x/v_ClipPos.w, u_baseColor.z)          * step(v_ClipPos.y/v_ClipPos.w, u_baseColor.w);        smpColor = u_channelFlag * texture2D(s_texture0 , v_texCoord).a * isInside;    }else{        smpColor = texture2D(s_texture0 , v_texCoord) * u_baseColor;    }    gl_FragColor = smpColor;}\"),!this.fragShader)return _._$Ji(\"Fragment shader compile _$li!\"),!1;if(this.fragShaderOff=this.compileShader(t.FRAGMENT_SHADER,\"precision mediump float ;varying vec2       v_texCoord;varying vec4       v_ClipPos;uniform sampler2D  s_texture0;uniform sampler2D  s_texture1;uniform vec4       u_channelFlag;uniform vec4       u_baseColor ;void main(){    vec4 col_formask = texture2D(s_texture0, v_texCoord) * u_baseColor;    vec4 clipMask = texture2D(s_texture1, v_ClipPos.xy / v_ClipPos.w) * u_channelFlag;    float maskVal = clipMask.r + clipMask.g + clipMask.b + clipMask.a;    col_formask = col_formask * maskVal;    gl_FragColor = col_formask;}\"),!this.fragShaderOff)return _._$Ji(\"OffFragment shader compile _$li!\"),!1;if(t.attachShader(this.shaderProgram,this.vertShader),t.attachShader(this.shaderProgram,this.fragShader),t.attachShader(this.shaderProgramOff,this.vertShaderOff),t.attachShader(this.shaderProgramOff,this.fragShaderOff),t.linkProgram(this.shaderProgram),t.linkProgram(this.shaderProgramOff),!t.getProgramParameter(this.shaderProgram,t.LINK_STATUS)){var i=t.getProgramInfoLog(this.shaderProgram);return _._$Ji(\"_$L0 to link program: \"+i),this.vertShader&&(t.deleteShader(this.vertShader),this.vertShader=0),this.fragShader&&(t.deleteShader(this.fragShader),this.fragShader=0),this.shaderProgram&&(t.deleteProgram(this.shaderProgram),this.shaderProgram=0),this.vertShaderOff&&(t.deleteShader(this.vertShaderOff),this.vertShaderOff=0),this.fragShaderOff&&(t.deleteShader(this.fragShaderOff),this.fragShaderOff=0),this.shaderProgramOff&&(t.deleteProgram(this.shaderProgramOff),this.shaderProgramOff=0),!1}return!0},mt.prototype.createFramebuffer=function(){var t=this.gl,i=at.clippingMaskBufferSize,e=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,e);var r=t.createRenderbuffer();t.bindRenderbuffer(t.RENDERBUFFER,r),t.renderbufferStorage(t.RENDERBUFFER,t.RGBA4,i,i),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.RENDERBUFFER,r);var o=t.createTexture();return t.bindTexture(t.TEXTURE_2D,o),t.texImage2D(t.TEXTURE_2D,0,t.RGBA,i,i,0,t.RGBA,t.UNSIGNED_BYTE,null),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.LINEAR),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.LINEAR),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,o,0),t.bindTexture(t.TEXTURE_2D,null),t.bindRenderbuffer(t.RENDERBUFFER,null),t.bindFramebuffer(t.FRAMEBUFFER,null),at.fTexture[this.glno]=o,{framebuffer:e,renderbuffer:r,texture:at.fTexture[this.glno]}},St.prototype._$fP=function(){var t,i,e,r=this._$ST();if(0==(128&r))return 255&r;if(0==(128&(t=this._$ST())))return(127&r)<<7|127&t;if(0==(128&(i=this._$ST())))return(127&r)<<14|(127&t)<<7|255&i;if(0==(128&(e=this._$ST())))return(127&r)<<21|(127&t)<<14|(127&i)<<7|255&e;throw new lt(\"_$L _$0P  _\")},St.prototype.getFormatVersion=function(){return this._$S2},St.prototype._$gr=function(t){this._$S2=t},St.prototype._$3L=function(){return this._$fP()},St.prototype._$mP=function(){return this._$zT(),this._$F+=8,this._$T.getFloat64(this._$F-8)},St.prototype._$_T=function(){return this._$zT(),this._$F+=4,this._$T.getFloat32(this._$F-4)},St.prototype._$6L=function(){return this._$zT(),this._$F+=4,this._$T.getInt32(this._$F-4)},St.prototype._$ST=function(){return this._$zT(),this._$T.getInt8(this._$F++)},St.prototype._$9T=function(){return this._$zT(),this._$F+=2,this._$T.getInt16(this._$F-2)},St.prototype._$2T=function(){throw this._$zT(),this._$F+=8,new lt(\"_$L _$q read long\")},St.prototype._$po=function(){return this._$zT(),0!=this._$T.getInt8(this._$F++)};var xt=!0;St.prototype._$bT=function(){this._$zT();var t=this._$3L(),i=null;if(xt)try{var e=new ArrayBuffer(2*t);i=new Uint16Array(e);for(var r=0;r<t;++r)i[r]=this._$T.getUint8(this._$F++);return String.fromCharCode.apply(null,i)}catch(t){xt=!1}try{var o=new Array;if(null==i)for(var r=0;r<t;++r)o[r]=this._$T.getUint8(this._$F++);else for(var r=0;r<t;++r)o[r]=i[r];return String.fromCharCode.apply(null,o)}catch(t){console.log(\"read utf8 / _$rT _$L0 !! : \"+t)}},St.prototype._$cS=function(){this._$zT();for(var t=this._$3L(),i=new Int32Array(t),e=0;e<t;e++)i[e]=this._$T.getInt32(this._$F),this._$F+=4;return i},St.prototype._$Tb=function(){this._$zT();for(var t=this._$3L(),i=new Float32Array(t),e=0;e<t;e++)i[e]=this._$T.getFloat32(this._$F),this._$F+=4;return i},St.prototype._$5b=function(){this._$zT();for(var t=this._$3L(),i=new Float64Array(t),e=0;e<t;e++)i[e]=this._$T.getFloat64(this._$F),this._$F+=8;return i},St.prototype._$nP=function(){return this._$Jb(-1)},St.prototype._$Jb=function(t){if(this._$zT(),t<0&&(t=this._$3L()),t==G._$7P){var i=this._$6L();if(0<=i&&i<this._$Ko.length)return this._$Ko[i];throw new lt(\"_$sL _$4i @_$m0\")}var e=this._$4b(t);return this._$Ko.push(e),e},St.prototype._$4b=function(t){if(0==t)return null;if(50==t){var i=this._$bT(),e=b.getID(i);return e}if(51==t){var i=this._$bT(),e=yt.getID(i);return e}if(134==t){var i=this._$bT(),e=l.getID(i);return e}if(60==t){var i=this._$bT(),e=u.getID(i);return e}if(t>=48){var r=G._$9o(t);return null!=r?(r._$F0(this),r):null}switch(t){case 1:return this._$bT();case 10:return new n(this._$6L(),!0);case 11:return new S(this._$mP(),this._$mP(),this._$mP(),this._$mP());case 12:return new S(this._$_T(),this._$_T(),this._$_T(),this._$_T());case 13:return new L(this._$mP(),this._$mP());case 14:return new L(this._$_T(),this._$_T());case 15:for(var o=this._$3L(),e=new Array(o),s=0;s<o;s++)e[s]=this._$nP();return e;case 17:var e=new F(this._$mP(),this._$mP(),this._$mP(),this._$mP(),this._$mP(),this._$mP());return e;case 21:return new h(this._$6L(),this._$6L(),this._$6L(),this._$6L());case 22:return new pt(this._$6L(),this._$6L());case 23:throw new Error(\"_$L _$ro \");case 16:case 25:return this._$cS();case 26:return this._$5b();case 27:return this._$Tb();case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 18:case 19:case 20:case 24:case 28:throw new lt(\"_$6 _$q : _$nP() of 2-9 ,18,19,20,24,28 : \"+t);default:throw new lt(\"_$6 _$q : _$nP() NO _$i : \"+t)}},St.prototype._$8L=function(){return 0==this._$hL?this._$v0=this._$ST():8==this._$hL&&(this._$v0=this._$ST(),this._$hL=0),1==(this._$v0>>7-this._$hL++&1)},St.prototype._$zT=function(){0!=this._$hL&&(this._$hL=0)},vt.prototype._$wP=function(t,i,e){for(var r=0;r<e;r++){for(var o=0;o<i;o++){var n=2*(o+r*i);console.log(\"(% 7.3f , % 7.3f) , \",t[n],t[n+1])}console.log(\"\\n\")}console.log(\"\\n\")},Lt._$2S=Math.PI/180,Lt._$bS=Math.PI/180,Lt._$wS=180/Math.PI,Lt._$NS=180/Math.PI,Lt.PI_F=Math.PI,Lt._$kT=[0,.012368,.024734,.037097,.049454,.061803,.074143,.086471,.098786,.111087,.12337,.135634,.147877,.160098,.172295,.184465,.196606,.208718,.220798,.232844,.244854,.256827,.268761,.280654,.292503,.304308,.316066,.327776,.339436,.351044,.362598,.374097,.385538,.396921,.408243,.419502,.430697,.441826,.452888,.463881,.474802,.485651,.496425,.507124,.517745,.528287,.538748,.549126,.559421,.56963,.579752,.589785,.599728,.609579,.619337,.629,.638567,.648036,.657406,.666676,.675843,.684908,.693867,.70272,.711466,.720103,.72863,.737045,.745348,.753536,.76161,.769566,.777405,.785125,.792725,.800204,.807561,.814793,.821901,.828884,.835739,.842467,.849066,.855535,.861873,.868079,.874153,.880093,.885898,.891567,.897101,.902497,.907754,.912873,.917853,.922692,.92739,.931946,.936359,.940629,.944755,.948737,.952574,.956265,.959809,.963207,.966457,.96956,.972514,.97532,.977976,.980482,.982839,.985045,.987101,.989006,.990759,.992361,.993811,.995109,.996254,.997248,.998088,.998776,.999312,.999694,.999924,1],Lt._$92=function(t,i){var e=Math.atan2(t[1],t[0]),r=Math.atan2(i[1],i[0]);return Lt._$tS(e,r)},Lt._$tS=function(t,i){for(var e=t-i;e<-Math.PI;)e+=2*Math.PI;for(;e>Math.PI;)e-=2*Math.PI;return e},Lt._$9=function(t){return Math.sin(t)},Lt.fcos=function(t){return Math.cos(t)},Mt.prototype._$u2=function(){return this._$IS[0]},Mt.prototype._$yo=function(){return this._$AT&&!this._$IS[0]},Mt.prototype._$GT=function(){return this._$e0},Et._$W2=0,Et.SYSTEM_INFO=null,Et.USER_AGENT=navigator.userAgent,Et.isIPhone=function(){return Et.SYSTEM_INFO||Et.setup(),Et.SYSTEM_INFO._isIPhone},Et.isIOS=function(){return Et.SYSTEM_INFO||Et.setup(),Et.SYSTEM_INFO._isIPhone||Et.SYSTEM_INFO._isIPad},Et.isAndroid=function(){return Et.SYSTEM_INFO||Et.setup(),Et.SYSTEM_INFO._isAndroid},Et.getOSVersion=function(){return Et.SYSTEM_INFO||Et.setup(),Et.SYSTEM_INFO.version},Et.getOS=function(){return Et.SYSTEM_INFO||Et.setup(),Et.SYSTEM_INFO._isIPhone||Et.SYSTEM_INFO._isIPad?\"iOS\":Et.SYSTEM_INFO._isAndroid?\"Android\":\"_$Q0 OS\"},Et.setup=function(){function t(t,i){for(var e=t.substring(i).split(/[ _,;\\.]/),r=0,o=0;o<=2&&!isNaN(e[o]);o++){var n=parseInt(e[o]);if(n<0||n>999){_._$li(\"err : \"+n+\" @UtHtml5.setup()\"),r=0;break}r+=n*Math.pow(1e3,2-o)}return r}var i,e=Et.USER_AGENT,r=Et.SYSTEM_INFO={userAgent:e};if((i=e.indexOf(\"iPhone OS \"))>=0)r.os=\"iPhone\",r._isIPhone=!0,r.version=t(e,i+\"iPhone OS \".length);else if((i=e.indexOf(\"iPad\"))>=0){if((i=e.indexOf(\"CPU OS\"))<0)return void _._$li(\" err : \"+e+\" @UtHtml5.setup()\");r.os=\"iPad\",r._isIPad=!0,r.version=t(e,i+\"CPU OS \".length)}else(i=e.indexOf(\"Android\"))>=0?(r.os=\"Android\",r._isAndroid=!0,r.version=t(e,i+\"Android \".length)):(r.os=\"-\",r.version=-1)},window.UtSystem=w,window.UtDebug=_,window.LDTransform=gt,window.LDGL=nt,window.Live2D=at,window.Live2DModelWebGL=ft,window.Live2DModelJS=q,window.Live2DMotion=J,window.MotionQueueManager=ct,window.PhysicsHair=f,window.AMotion=s,window.PartsDataID=l,window.DrawDataID=b,window.BaseDataID=yt,window.ParamID=u,at.init();var At=!1}()}).call(i,e(7))},function(t,i){t.exports={import:function(){throw new Error(\"System.import cannot be used indirectly\")}}},function(t,i,e){\"use strict\";function r(t){return t&&t.__esModule?t:{default:t}}function o(){this.models=[],this.count=-1,this.reloadFlg=!1,Live2D.init(),n.Live2DFramework.setPlatformManager(new _.default)}Object.defineProperty(i,\"__esModule\",{value:!0}),i.default=o;var n=e(0),s=e(9),_=r(s),a=e(10),h=r(a),l=e(1),$=r(l);o.prototype.createModel=function(){var t=new h.default;return this.models.push(t),t},o.prototype.changeModel=function(t,i){if(this.reloadFlg){this.reloadFlg=!1;this.releaseModel(0,t),this.createModel(),this.models[0].load(t,i)}},o.prototype.getModel=function(t){return t>=this.models.length?null:this.models[t]},o.prototype.releaseModel=function(t,i){this.models.length<=t||(this.models[t].release(i),delete this.models[t],this.models.splice(t,1))},o.prototype.numModels=function(){return this.models.length},o.prototype.setDrag=function(t,i){for(var e=0;e<this.models.length;e++)this.models[e].setDrag(t,i)},o.prototype.maxScaleEvent=function(){$.default.DEBUG_LOG&&console.log(\"Max scale event.\");for(var t=0;t<this.models.length;t++)this.models[t].startRandomMotion($.default.MOTION_GROUP_PINCH_IN,$.default.PRIORITY_NORMAL)},o.prototype.minScaleEvent=function(){$.default.DEBUG_LOG&&console.log(\"Min scale event.\");for(var t=0;t<this.models.length;t++)this.models[t].startRandomMotion($.default.MOTION_GROUP_PINCH_OUT,$.default.PRIORITY_NORMAL)},o.prototype.tapEvent=function(t,i){$.default.DEBUG_LOG&&console.log(\"tapEvent view x:\"+t+\" y:\"+i);for(var e=0;e<this.models.length;e++)this.models[e].hitTest($.default.HIT_AREA_HEAD,t,i)?($.default.DEBUG_LOG&&console.log(\"Tap face.\"),this.models[e].setRandomExpression()):this.models[e].hitTest($.default.HIT_AREA_BODY,t,i)?($.default.DEBUG_LOG&&console.log(\"Tap body. models[\"+e+\"]\"),this.models[e].startRandomMotion($.default.MOTION_GROUP_TAP_BODY,$.default.PRIORITY_NORMAL)):this.models[e].hitTestCustom(\"head\",t,i)?($.default.DEBUG_LOG&&console.log(\"Tap face.\"),this.models[e].startRandomMotion($.default.MOTION_GROUP_FLICK_HEAD,$.default.PRIORITY_NORMAL)):this.models[e].hitTestCustom(\"body\",t,i)&&($.default.DEBUG_LOG&&console.log(\"Tap body. models[\"+e+\"]\"),this.models[e].startRandomMotion($.default.MOTION_GROUP_TAP_BODY,$.default.PRIORITY_NORMAL));return!0}},function(t,i,e){\"use strict\";function r(){}Object.defineProperty(i,\"__esModule\",{value:!0}),i.default=r;var o=e(2);var requestCache={};r.prototype.loadBytes=function(t,i){if(requestCache[t]!==undefined){i(requestCache[t]);return;}var e=new XMLHttpRequest;e.open(\"GET\",t,!0),e.responseType=\"arraybuffer\",e.onload=function(){switch(e.status){case 200:requestCache[t]=e.response;i(e.response);break;default:console.error(\"Failed to load (\"+e.status+\") : \"+t)}},e.send(null)},r.prototype.loadString=function(t){this.loadBytes(t,function(t){return t})},r.prototype.loadLive2DModel=function(t,i){var e=null;this.loadBytes(t,function(t){e=Live2DModelWebGL.loadModel(t),i(e)})},r.prototype.loadTexture=function(t,i,e,r){var n=new Image;n.crossOrigin=\"Anonymous\",n.src=e;n.onload=function(){var e=(0,o.getContext)(),s=e.createTexture();if(!s)return console.error(\"Failed to generate gl texture name.\"),-1;0==t.isPremultipliedAlpha()&&e.pixelStorei(e.UNPACK_PREMULTIPLY_ALPHA_WEBGL,1),e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,1),e.activeTexture(e.TEXTURE0),e.bindTexture(e.TEXTURE_2D,s),e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.LINEAR),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.LINEAR_MIPMAP_NEAREST),e.generateMipmap(e.TEXTURE_2D),t.setTexture(i,s),s=null,\"function\"==typeof r&&r()},n.onerror=function(){console.error(\"Failed to load image : \"+e)}},r.prototype.jsonParseFromBytes=function(t){var i,e=new Uint8Array(t,0,3);return i=239==e[0]&&187==e[1]&&191==e[2]?String.fromCharCode.apply(null,new Uint8Array(t,3)):String.fromCharCode.apply(null,new Uint8Array(t)),JSON.parse(i)},r.prototype.log=function(t){}},function(t,i,e){\"use strict\";function r(t){return t&&t.__esModule?t:{default:t}}function o(){n.L2DBaseModel.prototype.constructor.call(this),this.modelHomeDir=\"\",this.modelSetting=null,this.tmpMatrix=[]}Object.defineProperty(i,\"__esModule\",{value:!0}),i.default=o;var n=e(0),s=e(11),_=r(s),a=e(1),h=r(a),l=e(3),$=r(l);o.prototype=new n.L2DBaseModel,o.prototype.load=function(t,i,e){this.setUpdating(!0),this.setInitialized(!1),this.modelHomeDir=i.substring(0,i.lastIndexOf(\"/\")+1),this.modelSetting=new _.default;var r=this;this.modelSetting.loadModelSetting(i,function(){var t=r.modelHomeDir+r.modelSetting.getModelFile();r.loadModelData(t,function(t){for(var i=0;i<r.modelSetting.getTextureNum();i++){if(/^https?:\\/\\/|^\\/\\//i.test(r.modelSetting.getTextureFile(i)))var o=r.modelSetting.getTextureFile(i);else var o=r.modelHomeDir+r.modelSetting.getTextureFile(i);r.loadTexture(i,o,function(){if(r.isTexLoaded){if(r.modelSetting.getExpressionNum()>0){r.expressions={};for(var t=0;t<r.modelSetting.getExpressionNum();t++){var i=r.modelSetting.getExpressionName(t),o=r.modelHomeDir+r.modelSetting.getExpressionFile(t);r.loadExpression(i,o)}}else r.expressionManager=null,r.expressions={};if(r.eyeBlink,null!=r.modelSetting.getPhysicsFile()?r.loadPhysics(r.modelHomeDir+r.modelSetting.getPhysicsFile()):r.physics=null,null!=r.modelSetting.getPoseFile()?r.loadPose(r.modelHomeDir+r.modelSetting.getPoseFile(),function(){r.pose.updateParam(r.live2DModel)}):r.pose=null,null!=r.modelSetting.getLayout()){var n=r.modelSetting.getLayout();null!=n.width&&r.modelMatrix.setWidth(n.width),null!=n.height&&r.modelMatrix.setHeight(n.height),null!=n.x&&r.modelMatrix.setX(n.x),null!=n.y&&r.modelMatrix.setY(n.y),null!=n.center_x&&r.modelMatrix.centerX(n.center_x),null!=n.center_y&&r.modelMatrix.centerY(n.center_y),null!=n.top&&r.modelMatrix.top(n.top),null!=n.bottom&&r.modelMatrix.bottom(n.bottom),null!=n.left&&r.modelMatrix.left(n.left),null!=n.right&&r.modelMatrix.right(n.right)}if(null!=r.modelSetting.getHitAreasCustom()){var s=r.modelSetting.getHitAreasCustom();null!=s.head_x&&(h.default.hit_areas_custom_head_x=s.head_x),null!=s.head_y&&(h.default.hit_areas_custom_head_y=s.head_y),null!=s.body_x&&(h.default.hit_areas_custom_body_x=s.body_x),null!=s.body_y&&(h.default.hit_areas_custom_body_y=s.body_y)}for(var t=0;t<r.modelSetting.getInitParamNum();t++)r.live2DModel.setParamFloat(r.modelSetting.getInitParamID(t),r.modelSetting.getInitParamValue(t));for(var t=0;t<r.modelSetting.getInitPartsVisibleNum();t++)r.live2DModel.setPartsOpacity(r.modelSetting.getInitPartsVisibleID(t),r.modelSetting.getInitPartsVisibleValue(t));r.live2DModel.saveParam(),r.preloadMotionGroup(h.default.MOTION_GROUP_IDLE),r.preloadMotionGroup(h.default.MOTION_GROUP_SLEEPY),r.mainMotionManager.stopAllMotions(),r.setUpdating(!1),r.setInitialized(!0),\"function\"==typeof e&&e()}})}})})},o.prototype.release=function(t){var i=n.Live2DFramework.getPlatformManager();t.deleteTexture(i.texture)},o.prototype.preloadMotionGroup=function(t){for(var i=this,e=0;e<this.modelSetting.getMotionNum(t);e++){var r=this.modelSetting.getMotionFile(t,e);this.loadMotion(r,this.modelHomeDir+r,function(r){r.setFadeIn(i.modelSetting.getMotionFadeIn(t,e)),r.setFadeOut(i.modelSetting.getMotionFadeOut(t,e))})}},o.prototype.update=function(){if(null==this.live2DModel)return void(h.default.DEBUG_LOG&&console.error(\"Failed to update.\"));var t=UtSystem.getUserTimeMSec()-this.startTimeMSec,i=t/1e3,e=2*i*Math.PI;if(this.mainMotionManager.isFinished()){\"1\"===sessionStorage.getItem(\"Sleepy\")?this.startRandomMotion(h.default.MOTION_GROUP_SLEEPY,h.default.PRIORITY_SLEEPY):this.startRandomMotion(h.default.MOTION_GROUP_IDLE,h.default.PRIORITY_IDLE)}this.live2DModel.loadParam(),this.mainMotionManager.updateParam(this.live2DModel)||null!=this.eyeBlink&&this.eyeBlink.updateParam(this.live2DModel),this.live2DModel.saveParam(),null==this.expressionManager||null==this.expressions||this.expressionManager.isFinished()||this.expressionManager.updateParam(this.live2DModel),this.live2DModel.addToParamFloat(\"PARAM_ANGLE_X\",30*this.dragX,1),this.live2DModel.addToParamFloat(\"PARAM_ANGLE_Y\",30*this.dragY,1),this.live2DModel.addToParamFloat(\"PARAM_ANGLE_Z\",this.dragX*this.dragY*-30,1),this.live2DModel.addToParamFloat(\"PARAM_BODY_ANGLE_X\",10*this.dragX,1),this.live2DModel.addToParamFloat(\"PARAM_EYE_BALL_X\",this.dragX,1),this.live2DModel.addToParamFloat(\"PARAM_EYE_BALL_Y\",this.dragY,1),this.live2DModel.addToParamFloat(\"PARAM_ANGLE_X\",Number(15*Math.sin(e/6.5345)),.5),this.live2DModel.addToParamFloat(\"PARAM_ANGLE_Y\",Number(8*Math.sin(e/3.5345)),.5),this.live2DModel.addToParamFloat(\"PARAM_ANGLE_Z\",Number(10*Math.sin(e/5.5345)),.5),this.live2DModel.addToParamFloat(\"PARAM_BODY_ANGLE_X\",Number(4*Math.sin(e/15.5345)),.5),this.live2DModel.setParamFloat(\"PARAM_BREATH\",Number(.5+.5*Math.sin(e/3.2345)),1),null!=this.physics&&this.physics.updateParam(this.live2DModel),null==this.lipSync&&this.live2DModel.setParamFloat(\"PARAM_MOUTH_OPEN_Y\",this.lipSyncValue),null!=this.pose&&this.pose.updateParam(this.live2DModel),this.live2DModel.update()},o.prototype.setRandomExpression=function(){var t=[];for(var i in this.expressions)t.push(i);var e=parseInt(Math.random()*t.length);this.setExpression(t[e])},o.prototype.startRandomMotion=function(t,i){var e=this.modelSetting.getMotionNum(t),r=parseInt(Math.random()*e);this.startMotion(t,r,i)},o.prototype.startMotion=function(t,i,e){var r=this.modelSetting.getMotionFile(t,i);if(null==r||\"\"==r)return void(h.default.DEBUG_LOG&&console.error(\"Failed to motion.\"));if(e==h.default.PRIORITY_FORCE)this.mainMotionManager.setReservePriority(e);else if(!this.mainMotionManager.reserveMotion(e))return void(h.default.DEBUG_LOG&&console.log(\"Motion is running.\"));var o,n=this;null==this.motions[t]?this.loadMotion(null,this.modelHomeDir+r,function(r){o=r,n.setFadeInFadeOut(t,i,e,o)}):(o=this.motions[t],n.setFadeInFadeOut(t,i,e,o))},o.prototype.setFadeInFadeOut=function(t,i,e,r){var o=this.modelSetting.getMotionFile(t,i);if(r.setFadeIn(this.modelSetting.getMotionFadeIn(t,i)),r.setFadeOut(this.modelSetting.getMotionFadeOut(t,i)),h.default.DEBUG_LOG&&console.log(\"Start motion : \"+o),null==this.modelSetting.getMotionSound(t,i))this.mainMotionManager.startMotionPrio(r,e);else{var n=this.modelSetting.getMotionSound(t,i),s=document.createElement(\"audio\");s.src=this.modelHomeDir+n,h.default.DEBUG_LOG&&console.log(\"Start sound : \"+n),s.play(),this.mainMotionManager.startMotionPrio(r,e)}},o.prototype.setExpression=function(t){var i=this.expressions[t];h.default.DEBUG_LOG&&console.log(\"Expression : \"+t),this.expressionManager.startMotion(i,!1)},o.prototype.draw=function(t){$.default.push(),$.default.multMatrix(this.modelMatrix.getArray()),this.tmpMatrix=$.default.getMatrix(),this.live2DModel.setMatrix(this.tmpMatrix),this.live2DModel.draw(),$.default.pop()},o.prototype.hitTest=function(t,i,e){for(var r=this.modelSetting.getHitAreaNum(),o=0;o<r;o++)if(t==this.modelSetting.getHitAreaName(o)){var n=this.modelSetting.getHitAreaID(o);return this.hitTestSimple(n,i,e)}return!1},o.prototype.hitTestCustom=function(t,i,e){return\"head\"==t?this.hitTestSimpleCustom(h.default.hit_areas_custom_head_x,h.default.hit_areas_custom_head_y,i,e):\"body\"==t&&this.hitTestSimpleCustom(h.default.hit_areas_custom_body_x,h.default.hit_areas_custom_body_y,i,e)}},function(t,i,e){\"use strict\";function r(){this.NAME=\"name\",this.ID=\"id\",this.MODEL=\"model\",this.TEXTURES=\"textures\",this.HIT_AREAS=\"hit_areas\",this.PHYSICS=\"physics\",this.POSE=\"pose\",this.EXPRESSIONS=\"expressions\",this.MOTION_GROUPS=\"motions\",this.SOUND=\"sound\",this.FADE_IN=\"fade_in\",this.FADE_OUT=\"fade_out\",this.LAYOUT=\"layout\",this.HIT_AREAS_CUSTOM=\"hit_areas_custom\",this.INIT_PARAM=\"init_param\",this.INIT_PARTS_VISIBLE=\"init_parts_visible\",this.VALUE=\"val\",this.FILE=\"file\",this.json={}}Object.defineProperty(i,\"__esModule\",{value:!0}),i.default=r;var o=e(0);r.prototype.loadModelSetting=function(t,i){var e=this;o.Live2DFramework.getPlatformManager().loadBytes(t,function(t){var r=String.fromCharCode.apply(null,new Uint8Array(t));e.json=JSON.parse(r),i()})},r.prototype.getTextureFile=function(t){return null==this.json[this.TEXTURES]||null==this.json[this.TEXTURES][t]?null:this.json[this.TEXTURES][t]},r.prototype.getModelFile=function(){return this.json[this.MODEL]},r.prototype.getTextureNum=function(){return null==this.json[this.TEXTURES]?0:this.json[this.TEXTURES].length},r.prototype.getHitAreaNum=function(){return null==this.json[this.HIT_AREAS]?0:this.json[this.HIT_AREAS].length},r.prototype.getHitAreaID=function(t){return null==this.json[this.HIT_AREAS]||null==this.json[this.HIT_AREAS][t]?null:this.json[this.HIT_AREAS][t][this.ID]},r.prototype.getHitAreaName=function(t){return null==this.json[this.HIT_AREAS]||null==this.json[this.HIT_AREAS][t]?null:this.json[this.HIT_AREAS][t][this.NAME]},r.prototype.getPhysicsFile=function(){return this.json[this.PHYSICS]},r.prototype.getPoseFile=function(){return this.json[this.POSE]},r.prototype.getExpressionNum=function(){return null==this.json[this.EXPRESSIONS]?0:this.json[this.EXPRESSIONS].length},r.prototype.getExpressionFile=function(t){return null==this.json[this.EXPRESSIONS]?null:this.json[this.EXPRESSIONS][t][this.FILE]},r.prototype.getExpressionName=function(t){return null==this.json[this.EXPRESSIONS]?null:this.json[this.EXPRESSIONS][t][this.NAME]},r.prototype.getLayout=function(){return this.json[this.LAYOUT]},r.prototype.getHitAreasCustom=function(){return this.json[this.HIT_AREAS_CUSTOM]},r.prototype.getInitParamNum=function(){return null==this.json[this.INIT_PARAM]?0:this.json[this.INIT_PARAM].length},r.prototype.getMotionNum=function(t){return null==this.json[this.MOTION_GROUPS]||null==this.json[this.MOTION_GROUPS][t]?0:this.json[this.MOTION_GROUPS][t].length},r.prototype.getMotionFile=function(t,i){return null==this.json[this.MOTION_GROUPS]||null==this.json[this.MOTION_GROUPS][t]||null==this.json[this.MOTION_GROUPS][t][i]?null:this.json[this.MOTION_GROUPS][t][i][this.FILE]},r.prototype.getMotionSound=function(t,i){return null==this.json[this.MOTION_GROUPS]||null==this.json[this.MOTION_GROUPS][t]||null==this.json[this.MOTION_GROUPS][t][i]||null==this.json[this.MOTION_GROUPS][t][i][this.SOUND]?null:this.json[this.MOTION_GROUPS][t][i][this.SOUND]},r.prototype.getMotionFadeIn=function(t,i){return null==this.json[this.MOTION_GROUPS]||null==this.json[this.MOTION_GROUPS][t]||null==this.json[this.MOTION_GROUPS][t][i]||null==this.json[this.MOTION_GROUPS][t][i][this.FADE_IN]?1e3:this.json[this.MOTION_GROUPS][t][i][this.FADE_IN]},r.prototype.getMotionFadeOut=function(t,i){return null==this.json[this.MOTION_GROUPS]||null==this.json[this.MOTION_GROUPS][t]||null==this.json[this.MOTION_GROUPS][t][i]||null==this.json[this.MOTION_GROUPS][t][i][this.FADE_OUT]?1e3:this.json[this.MOTION_GROUPS][t][i][this.FADE_OUT]},r.prototype.getInitParamID=function(t){return null==this.json[this.INIT_PARAM]||null==this.json[this.INIT_PARAM][t]?null:this.json[this.INIT_PARAM][t][this.ID]},r.prototype.getInitParamValue=function(t){return null==this.json[this.INIT_PARAM]||null==this.json[this.INIT_PARAM][t]?NaN:this.json[this.INIT_PARAM][t][this.VALUE]},r.prototype.getInitPartsVisibleNum=function(){return null==this.json[this.INIT_PARTS_VISIBLE]?0:this.json[this.INIT_PARTS_VISIBLE].length},r.prototype.getInitPartsVisibleID=function(t){return null==this.json[this.INIT_PARTS_VISIBLE]||null==this.json[this.INIT_PARTS_VISIBLE][t]?null:this.json[this.INIT_PARTS_VISIBLE][t][this.ID]},r.prototype.getInitPartsVisibleValue=function(t){return null==this.json[this.INIT_PARTS_VISIBLE]||null==this.json[this.INIT_PARTS_VISIBLE][t]?NaN:this.json[this.INIT_PARTS_VISIBLE][t][this.VALUE]}}]);\n"},{"_content":"{\n  \"mouseover\": [\n    {\n      \"selector\": \"#waifu #live2d\",\n      \"text\": [\n        \"干嘛呢你，快把手拿开～～\",\n        \"鼠…鼠标放错地方了！\",\n        \"你要干嘛呀？\",\n        \"喵喵喵？\",\n        \"怕怕(ノ≧∇≦)ノ\",\n        \"非礼呀！救命！\",\n        \"这样的话，只能使用武力了！\",\n        \"我要生气了哦\",\n        \"不要动手动脚的！\",\n        \"真…真的是不知羞耻！\",\n        \"Hentai！\"\n      ]\n    },\n    {\n      \"selector\": \"#waifu-tool .fa-comment\",\n      \"text\": [\n        \"猜猜我要说些什么？\",\n        \"我从青蛙王子那里听到了不少人生经验。\"\n      ]\n    },\n    {\n      \"selector\": \"#waifu-tool .fa-paper-plane\",\n      \"text\": [\n        \"要不要来玩飞机大战？\",\n        \"这个按钮上写着「不要点击」。\",\n        \"怎么，你想来和我玩个游戏？\",\n        \"听说这样可以蹦迪！\"\n      ]\n    },\n    {\n      \"selector\": \"#waifu-tool .fa-user-circle\",\n      \"text\": [\n        \"你是不是不爱人家了呀，呜呜呜～\",\n        \"要见见我的姐姐嘛？\",\n        \"想要看我妹妹嘛？\",\n        \"要切换看板娘吗？\"\n      ]\n    },\n    {\n      \"selector\": \"#waifu-tool .fa-street-view\",\n      \"text\": [\n        \"喜欢换装 PLAY 吗？\",\n        \"这次要扮演什么呢？\",\n        \"变装！\",\n        \"让我们看看接下来会发生什么！\"\n      ]\n    },\n    {\n      \"selector\": \"#waifu-tool .fa-camera-retro\",\n      \"text\": [\n        \"你要给我拍照呀？一二三～茄子～\",\n        \"要不，我们来合影吧！\",\n        \"保持微笑就好了～\"\n      ]\n    },\n    {\n      \"selector\": \"#waifu-tool .fa-info-circle\",\n      \"text\": [\n        \"想要知道更多关于我的事么？\",\n        \"这里记录着我搬家的历史呢。\",\n        \"你想深入了解我什么呢？\"\n      ]\n    },\n    {\n      \"selector\": \"#waifu-tool .fa-times\",\n      \"text\": [\n        \"到了要说再见的时候了吗？\",\n        \"呜呜 QAQ 后会有期……\",\n        \"不要抛弃我呀……\",\n        \"我们，还能再见面吗……\",\n        \"哼，你会后悔的！\"\n      ]\n    },\n    {\n      \"selector\": \"#waifu-tool .fa-chevron-left\",\n      \"text\": [\n        \"可以去左边吗？\",\n        \"要搬家吗？\"\n      ]\n    },\n    {\n      \"selector\": \"#waifu-tool .fa-chevron-right\",\n      \"text\": [\n        \"可以去左右吗？\",\n        \"要搬家吗？\"\n      ]\n    },\n    {\n      \"selector\": \".menu-item-home a\",\n      \"text\": [\n        \"点击前往首页，想回到上一页可以使用浏览器的后退功能哦。\",\n        \"点它就可以回到首页啦！\",\n        \"回首页看看吧。\"\n      ]\n    },\n    {\n      \"selector\": \".menu-item-about a\",\n      \"text\": [\n        \"你想知道我家主人是谁吗？\",\n        \"这里有一些关于我家主人的秘密哦，要不要看看呢？\",\n        \"发现主人出没地点！\"\n      ]\n    },\n    {\n      \"selector\": \".menu-item-tags a\",\n      \"text\": [\n        \"点击就可以看文章的标签啦！\",\n        \"点击来查看所有标签哦。\"\n      ]\n    },\n    {\n      \"selector\": \".menu-item-categories a\",\n      \"text\": [\n        \"文章都分类好啦～\",\n        \"点击来查看文章分类哦。\"\n      ]\n    },\n    {\n      \"selector\": \".menu-item-archives a\",\n      \"text\": [\n        \"翻页比较麻烦吗，那就来看看文章归档吧。\",\n        \"文章目录都整理在这里啦！\"\n      ]\n    },\n    {\n      \"selector\": \".menu-item-friends a\",\n      \"text\": [\n        \"这是我的朋友们哦ヾ(◍°∇°◍)ﾉﾞ\",\n        \"要去大佬们的家看看吗？\",\n        \"要去拜访一下我的朋友们吗？\"\n      ]\n    },\n    {\n      \"selector\": \".menu-item-search a\",\n      \"text\": [\n        \"找不到想看的内容？搜索看看吧！\",\n        \"在找什么东西呢，需要帮忙吗？\"\n      ]\n    },\n    {\n      \"selector\": \".menu-item a\",\n      \"text\": [\n        \"快看看这里都有什么呢？\"\n      ]\n    },\n    {\n      \"selector\": \".site-author\",\n      \"text\": [\n        \"我家主人好看吗？\",\n        \"这是我家主人(*´∇｀*)\"\n      ]\n    },\n    {\n      \"selector\": \".site-state\",\n      \"text\": [\n        \"这是文章的统计信息～\",\n        \"要不要点进去看看？\"\n      ]\n    },\n    {\n      \"selector\": \".feed-link a\",\n      \"text\": [\n        \"这里可以使用 RSS 订阅呢！\",\n        \"利用 feed 订阅器，就能快速知道博客有没有更新了呢。\"\n      ]\n    },\n    {\n      \"selector\": \".cc-opacity, .post-copyright-author\",\n      \"text\": [\n        \"要记得规范转载哦。\",\n        \"所有文章均采用 CC BY-NC-SA 4.0 许可协议～\",\n        \"转载前要先注意下文章的版权协议呢。\"\n      ]\n    },\n    {\n      \"selector\": \".links-of-author\",\n      \"text\": [\n        \"这里是主人的常驻地址哦。\",\n        \"这里有主人的联系方式！\"\n      ]\n    },\n    {\n      \"selector\": \"#qrcode\",\n      \"text\": [\n        \"手机扫一下就能继续看，很方便呢～\",\n        \"扫一扫，打开新世界的大门！\"\n      ]\n    },\n    {\n      \"selector\": \".fancybox img, img.medium-zoom-image\",\n      \"text\": [\n        \"点击图片可以放大呢！\"\n      ]\n    },\n    {\n      \"selector\": \".copy-btn\",\n      \"text\": [\n        \"代码可以直接点击复制哟。\"\n      ]\n    },\n    {\n      \"selector\": \".highlight .table-container, .gist\",\n      \"text\": [\n        \"GitHub！我是新手！\",\n        \"PHP 是最好的语言！\"\n      ]\n    },\n    {\n      \"selector\": \"a[href^='mailto']\",\n      \"text\": [\n        \"邮件我会及时回复的！\",\n        \"点击就可以发送邮件啦～\"\n      ]\n    },\n    {\n      \"selector\": \"a[href^='/tags/']\",\n      \"text\": [\n        \"要去看看 <span>{text}</span> 标签么？\",\n        \"点它可以查看此标签下的所有文章哟！\"\n      ]\n    },\n    {\n      \"selector\": \"a[href^='/categories/']\",\n      \"text\": [\n        \"要去看看 <span>{text}</span> 分类么？\",\n        \"点它可以查看此分类下的所有文章哟！\"\n      ]\n    },\n    {\n      \"selector\": \".post-title-link\",\n      \"text\": [\n        \"要看看 <span>{text}</span> 这篇文章吗？\"\n      ]\n    },\n    {\n      \"selector\": \"a[rel='contents']\",\n      \"text\": [\n        \"点击来阅读全文哦。\"\n      ]\n    },\n    {\n      \"selector\": \"a[itemprop='discussionUrl']\",\n      \"text\": [\n        \"要去看看评论吗？\"\n      ]\n    },\n    {\n      \"selector\": \".beian a\",\n      \"text\": [\n        \"我也是有户口的人哦。\",\n        \"我的主人可是遵纪守法的好主人。\"\n      ]\n    },\n    {\n      \"selector\": \".container a[href^='http'], .nav-link .nav-text\",\n      \"text\": [\n        \"要去看看 <span>{text}</span> 么？\",\n        \"去 <span>{text}</span> 逛逛吧。\",\n        \"到 <span>{text}</span> 看看吧。\"\n      ]\n    },\n    {\n      \"selector\": \".back-to-top\",\n      \"text\": [\n        \"点它就可以回到顶部啦！\",\n        \"又回到最初的起点～\",\n        \"要回到开始的地方么？\"\n      ]\n    },\n    {\n      \"selector\": \".reward-container\",\n      \"text\": [\n        \"我是不是棒棒哒～快给我点赞吧！\",\n        \"要打赏我嘛？好期待啊～\",\n        \"主人最近在吃土呢，很辛苦的样子，给他一些钱钱吧～\"\n      ]\n    },\n    {\n      \"selector\": \"#wechat\",\n      \"text\": [\n        \"这是我的微信二维码～\"\n      ]\n    },\n    {\n      \"selector\": \"#alipay\",\n      \"text\": [\n        \"这是我的支付宝哦！\"\n      ]\n    },\n    {\n      \"selector\": \"#bitcoin\",\n      \"text\": [\n        \"这是我的比特币账号！\"\n      ]\n    },\n    {\n      \"selector\": \"#needsharebutton-postbottom .btn\",\n      \"text\": [\n        \"好东西要让更多人知道才行哦。\",\n        \"觉得文章有帮助的话，可以分享给更多需要的朋友呢。\"\n      ]\n    },\n    {\n      \"selector\": \".need-share-button_weibo\",\n      \"text\": [\n        \"微博？来分享一波喵！\"\n      ]\n    },\n    {\n      \"selector\": \".need-share-button_wechat\",\n      \"text\": [\n        \"分享到微信吧！\"\n      ]\n    },\n    {\n      \"selector\": \".need-share-button_douban\",\n      \"text\": [\n        \"分享到豆瓣好像也不错！\"\n      ]\n    },\n    {\n      \"selector\": \".need-share-button_qqzone\",\n      \"text\": [\n        \"QQ 空间，一键转发，耶～\"\n      ]\n    },\n    {\n      \"selector\": \".need-share-button_twitter\",\n      \"text\": [\n        \"Twitter？好像是不存在的东西？\"\n      ]\n    },\n    {\n      \"selector\": \".need-share-button_facebook\",\n      \"text\": [\n        \"emmm…FB 好像也是不存在的东西？\"\n      ]\n    },\n    {\n      \"selector\": \".post-nav-item a[rel='next']\",\n      \"text\": [\n        \"来看看下一篇文章吧。\",\n        \"点它可以看下一篇文章哦！\",\n        \"要翻到下一篇文章吗？\"\n      ]\n    },\n    {\n      \"selector\": \".post-nav-item a[rel='prev']\",\n      \"text\": [\n        \"来看看上一篇文章吧。\",\n        \"点它可以看上一篇文章哦！\",\n        \"要翻到上一篇文章吗？\"\n      ]\n    },\n    {\n      \"selector\": \".extend.next\",\n      \"text\": [\n        \"去下一页看看吧。\",\n        \"点它可以前进哦！\",\n        \"要翻到下一页吗？\"\n      ]\n    },\n    {\n      \"selector\": \".extend.prev\",\n      \"text\": [\n        \"去上一页看看吧。\",\n        \"点它可以后退哦！\",\n        \"要翻到上一页吗？\"\n      ]\n    },\n    {\n      \"selector\": \"input.vnick\",\n      \"text\": [\n        \"该怎么称呼你呢？\",\n        \"留下你的尊姓大名！\"\n      ]\n    },\n    {\n      \"selector\": \".vmail\",\n      \"text\": [\n        \"留下你的邮箱，不然就是无头像人士了！\",\n        \"记得设置好 Gravatar 头像哦！\",\n        \"为了方便通知你最新消息，一定要留下邮箱！\"\n      ]\n    },\n    {\n      \"selector\": \".vlink\",\n      \"text\": [\n        \"快快告诉我你的家在哪里，好让我去参观参观！\"\n      ]\n    },\n    {\n      \"selector\": \".veditor\",\n      \"text\": [\n        \"想要去评论些什么吗？\",\n        \"要说点什么吗？\",\n        \"觉得博客不错？快来留言和主人交流吧！\"\n      ]\n    },\n    {\n      \"selector\": \".vcontrol a\",\n      \"text\": [\n        \"你会不会熟练使用 Markdown 呀？\",\n        \"使用 Markdown 让评论更美观吧～\"\n      ]\n    },\n    {\n      \"selector\": \".vemoji-btn\",\n      \"text\": [\n        \"要插入一个萌萌哒的表情吗？\",\n        \"要来一发表情吗？\"\n      ]\n    },\n    {\n      \"selector\": \".vpreview-btn\",\n      \"text\": [\n        \"要预览一下你的发言吗？\",\n        \"快看看你的评论有多少负熵！\"\n      ]\n    },\n    {\n      \"selector\": \".vsubmit\",\n      \"text\": [\n        \"评论没有审核，要对自己的发言负责哦～\",\n        \"要提交了吗，请耐心等待回复哦～\"\n      ]\n    },\n    {\n      \"selector\": \".vcontent\",\n      \"text\": [\n        \"哇，快看看这个精彩评论！\",\n        \"如果有疑问，请尽快留言哦～\"\n      ]\n    }\n  ],\n  \"click\": [\n    {\n      \"selector\": \"#waifu #live2d\",\n      \"text\": [\n        \"是…是不小心碰到了吧…\",\n        \"萝莉控是什么呀？\",\n        \"你看到我的小熊了吗？\",\n        \"再摸的话我可要报警了！⌇●﹏●⌇\",\n        \"110 吗，这里有个变态一直在摸我(ó﹏ò｡)\",\n        \"不要摸我了，我会告诉你老婆来打你哦！\",\n        \"干嘛动我呀！小心我咬你！\",\n        \"别摸我，有什么好摸的！\"\n      ]\n    },\n    {\n      \"selector\": \".veditor\",\n      \"text\": [\n        \"要吐槽些什么呢？\",\n        \"一定要认真填写喵～\",\n        \"有什么想说的吗？\"\n      ]\n    },\n    {\n      \"selector\": \".vsubmit\",\n      \"text\": [\n        \"输入验证码就可以提交评论啦～\"\n      ]\n    }\n  ],\n  \"seasons\": [\n    {\n      \"date\": \"01/01\",\n      \"text\": \"<span>元旦</span>了呢，新的一年又开始了，今年是{year}年～\"\n    },\n    {\n      \"date\": \"02/14\",\n      \"text\": \"又是一年<span>情人节</span>，{year}年找到对象了嘛～\"\n    },\n    {\n      \"date\": \"03/08\",\n      \"text\": \"今天是<span>国际妇女节</span>！\"\n    },\n    {\n      \"date\": \"03/12\",\n      \"text\": \"今天是<span>植树节</span>，要保护环境呀！\"\n    },\n    {\n      \"date\": \"04/01\",\n      \"text\": \"悄悄告诉你一个秘密～<span>今天是愚人节，不要被骗了哦～</span>\"\n    },\n    {\n      \"date\": \"05/01\",\n      \"text\": \"今天是<span>五一劳动节</span>，计划好假期去哪里了吗～\"\n    },\n    {\n      \"date\": \"06/01\",\n      \"text\": \"<span>儿童节</span>了呢，快活的时光总是短暂，要是永远长不大该多好啊…\"\n    },\n    {\n      \"date\": \"09/03\",\n      \"text\": \"<span>中国人民抗日战争胜利纪念日</span>，铭记历史、缅怀先烈、珍爱和平、开创未来。\"\n    },\n    {\n      \"date\": \"09/10\",\n      \"text\": \"<span>教师节</span>，在学校要给老师问声好呀～\"\n    },\n    {\n      \"date\": \"10/01\",\n      \"text\": \"<span>国庆节</span>到了，为祖国母亲庆生！\"\n    },\n    {\n      \"date\": \"11/05-11/12\",\n      \"text\": \"今年的<span>双十一</span>是和谁一起过的呢～\"\n    },\n    {\n      \"date\": \"12/20-12/31\",\n      \"text\": \"这几天是<span>圣诞节</span>，主人肯定又去剁手买买买了～\"\n    }\n  ]\n}\n","source":"live2d-widget/waifu-tips.json","raw":"{\n  \"mouseover\": [\n    {\n      \"selector\": \"#waifu #live2d\",\n      \"text\": [\n        \"干嘛呢你，快把手拿开～～\",\n        \"鼠…鼠标放错地方了！\",\n        \"你要干嘛呀？\",\n        \"喵喵喵？\",\n        \"怕怕(ノ≧∇≦)ノ\",\n        \"非礼呀！救命！\",\n        \"这样的话，只能使用武力了！\",\n        \"我要生气了哦\",\n        \"不要动手动脚的！\",\n        \"真…真的是不知羞耻！\",\n        \"Hentai！\"\n      ]\n    },\n    {\n      \"selector\": \"#waifu-tool .fa-comment\",\n      \"text\": [\n        \"猜猜我要说些什么？\",\n        \"我从青蛙王子那里听到了不少人生经验。\"\n      ]\n    },\n    {\n      \"selector\": \"#waifu-tool .fa-paper-plane\",\n      \"text\": [\n        \"要不要来玩飞机大战？\",\n        \"这个按钮上写着「不要点击」。\",\n        \"怎么，你想来和我玩个游戏？\",\n        \"听说这样可以蹦迪！\"\n      ]\n    },\n    {\n      \"selector\": \"#waifu-tool .fa-user-circle\",\n      \"text\": [\n        \"你是不是不爱人家了呀，呜呜呜～\",\n        \"要见见我的姐姐嘛？\",\n        \"想要看我妹妹嘛？\",\n        \"要切换看板娘吗？\"\n      ]\n    },\n    {\n      \"selector\": \"#waifu-tool .fa-street-view\",\n      \"text\": [\n        \"喜欢换装 PLAY 吗？\",\n        \"这次要扮演什么呢？\",\n        \"变装！\",\n        \"让我们看看接下来会发生什么！\"\n      ]\n    },\n    {\n      \"selector\": \"#waifu-tool .fa-camera-retro\",\n      \"text\": [\n        \"你要给我拍照呀？一二三～茄子～\",\n        \"要不，我们来合影吧！\",\n        \"保持微笑就好了～\"\n      ]\n    },\n    {\n      \"selector\": \"#waifu-tool .fa-info-circle\",\n      \"text\": [\n        \"想要知道更多关于我的事么？\",\n        \"这里记录着我搬家的历史呢。\",\n        \"你想深入了解我什么呢？\"\n      ]\n    },\n    {\n      \"selector\": \"#waifu-tool .fa-times\",\n      \"text\": [\n        \"到了要说再见的时候了吗？\",\n        \"呜呜 QAQ 后会有期……\",\n        \"不要抛弃我呀……\",\n        \"我们，还能再见面吗……\",\n        \"哼，你会后悔的！\"\n      ]\n    },\n    {\n      \"selector\": \"#waifu-tool .fa-chevron-left\",\n      \"text\": [\n        \"可以去左边吗？\",\n        \"要搬家吗？\"\n      ]\n    },\n    {\n      \"selector\": \"#waifu-tool .fa-chevron-right\",\n      \"text\": [\n        \"可以去左右吗？\",\n        \"要搬家吗？\"\n      ]\n    },\n    {\n      \"selector\": \".menu-item-home a\",\n      \"text\": [\n        \"点击前往首页，想回到上一页可以使用浏览器的后退功能哦。\",\n        \"点它就可以回到首页啦！\",\n        \"回首页看看吧。\"\n      ]\n    },\n    {\n      \"selector\": \".menu-item-about a\",\n      \"text\": [\n        \"你想知道我家主人是谁吗？\",\n        \"这里有一些关于我家主人的秘密哦，要不要看看呢？\",\n        \"发现主人出没地点！\"\n      ]\n    },\n    {\n      \"selector\": \".menu-item-tags a\",\n      \"text\": [\n        \"点击就可以看文章的标签啦！\",\n        \"点击来查看所有标签哦。\"\n      ]\n    },\n    {\n      \"selector\": \".menu-item-categories a\",\n      \"text\": [\n        \"文章都分类好啦～\",\n        \"点击来查看文章分类哦。\"\n      ]\n    },\n    {\n      \"selector\": \".menu-item-archives a\",\n      \"text\": [\n        \"翻页比较麻烦吗，那就来看看文章归档吧。\",\n        \"文章目录都整理在这里啦！\"\n      ]\n    },\n    {\n      \"selector\": \".menu-item-friends a\",\n      \"text\": [\n        \"这是我的朋友们哦ヾ(◍°∇°◍)ﾉﾞ\",\n        \"要去大佬们的家看看吗？\",\n        \"要去拜访一下我的朋友们吗？\"\n      ]\n    },\n    {\n      \"selector\": \".menu-item-search a\",\n      \"text\": [\n        \"找不到想看的内容？搜索看看吧！\",\n        \"在找什么东西呢，需要帮忙吗？\"\n      ]\n    },\n    {\n      \"selector\": \".menu-item a\",\n      \"text\": [\n        \"快看看这里都有什么呢？\"\n      ]\n    },\n    {\n      \"selector\": \".site-author\",\n      \"text\": [\n        \"我家主人好看吗？\",\n        \"这是我家主人(*´∇｀*)\"\n      ]\n    },\n    {\n      \"selector\": \".site-state\",\n      \"text\": [\n        \"这是文章的统计信息～\",\n        \"要不要点进去看看？\"\n      ]\n    },\n    {\n      \"selector\": \".feed-link a\",\n      \"text\": [\n        \"这里可以使用 RSS 订阅呢！\",\n        \"利用 feed 订阅器，就能快速知道博客有没有更新了呢。\"\n      ]\n    },\n    {\n      \"selector\": \".cc-opacity, .post-copyright-author\",\n      \"text\": [\n        \"要记得规范转载哦。\",\n        \"所有文章均采用 CC BY-NC-SA 4.0 许可协议～\",\n        \"转载前要先注意下文章的版权协议呢。\"\n      ]\n    },\n    {\n      \"selector\": \".links-of-author\",\n      \"text\": [\n        \"这里是主人的常驻地址哦。\",\n        \"这里有主人的联系方式！\"\n      ]\n    },\n    {\n      \"selector\": \"#qrcode\",\n      \"text\": [\n        \"手机扫一下就能继续看，很方便呢～\",\n        \"扫一扫，打开新世界的大门！\"\n      ]\n    },\n    {\n      \"selector\": \".fancybox img, img.medium-zoom-image\",\n      \"text\": [\n        \"点击图片可以放大呢！\"\n      ]\n    },\n    {\n      \"selector\": \".copy-btn\",\n      \"text\": [\n        \"代码可以直接点击复制哟。\"\n      ]\n    },\n    {\n      \"selector\": \".highlight .table-container, .gist\",\n      \"text\": [\n        \"GitHub！我是新手！\",\n        \"PHP 是最好的语言！\"\n      ]\n    },\n    {\n      \"selector\": \"a[href^='mailto']\",\n      \"text\": [\n        \"邮件我会及时回复的！\",\n        \"点击就可以发送邮件啦～\"\n      ]\n    },\n    {\n      \"selector\": \"a[href^='/tags/']\",\n      \"text\": [\n        \"要去看看 <span>{text}</span> 标签么？\",\n        \"点它可以查看此标签下的所有文章哟！\"\n      ]\n    },\n    {\n      \"selector\": \"a[href^='/categories/']\",\n      \"text\": [\n        \"要去看看 <span>{text}</span> 分类么？\",\n        \"点它可以查看此分类下的所有文章哟！\"\n      ]\n    },\n    {\n      \"selector\": \".post-title-link\",\n      \"text\": [\n        \"要看看 <span>{text}</span> 这篇文章吗？\"\n      ]\n    },\n    {\n      \"selector\": \"a[rel='contents']\",\n      \"text\": [\n        \"点击来阅读全文哦。\"\n      ]\n    },\n    {\n      \"selector\": \"a[itemprop='discussionUrl']\",\n      \"text\": [\n        \"要去看看评论吗？\"\n      ]\n    },\n    {\n      \"selector\": \".beian a\",\n      \"text\": [\n        \"我也是有户口的人哦。\",\n        \"我的主人可是遵纪守法的好主人。\"\n      ]\n    },\n    {\n      \"selector\": \".container a[href^='http'], .nav-link .nav-text\",\n      \"text\": [\n        \"要去看看 <span>{text}</span> 么？\",\n        \"去 <span>{text}</span> 逛逛吧。\",\n        \"到 <span>{text}</span> 看看吧。\"\n      ]\n    },\n    {\n      \"selector\": \".back-to-top\",\n      \"text\": [\n        \"点它就可以回到顶部啦！\",\n        \"又回到最初的起点～\",\n        \"要回到开始的地方么？\"\n      ]\n    },\n    {\n      \"selector\": \".reward-container\",\n      \"text\": [\n        \"我是不是棒棒哒～快给我点赞吧！\",\n        \"要打赏我嘛？好期待啊～\",\n        \"主人最近在吃土呢，很辛苦的样子，给他一些钱钱吧～\"\n      ]\n    },\n    {\n      \"selector\": \"#wechat\",\n      \"text\": [\n        \"这是我的微信二维码～\"\n      ]\n    },\n    {\n      \"selector\": \"#alipay\",\n      \"text\": [\n        \"这是我的支付宝哦！\"\n      ]\n    },\n    {\n      \"selector\": \"#bitcoin\",\n      \"text\": [\n        \"这是我的比特币账号！\"\n      ]\n    },\n    {\n      \"selector\": \"#needsharebutton-postbottom .btn\",\n      \"text\": [\n        \"好东西要让更多人知道才行哦。\",\n        \"觉得文章有帮助的话，可以分享给更多需要的朋友呢。\"\n      ]\n    },\n    {\n      \"selector\": \".need-share-button_weibo\",\n      \"text\": [\n        \"微博？来分享一波喵！\"\n      ]\n    },\n    {\n      \"selector\": \".need-share-button_wechat\",\n      \"text\": [\n        \"分享到微信吧！\"\n      ]\n    },\n    {\n      \"selector\": \".need-share-button_douban\",\n      \"text\": [\n        \"分享到豆瓣好像也不错！\"\n      ]\n    },\n    {\n      \"selector\": \".need-share-button_qqzone\",\n      \"text\": [\n        \"QQ 空间，一键转发，耶～\"\n      ]\n    },\n    {\n      \"selector\": \".need-share-button_twitter\",\n      \"text\": [\n        \"Twitter？好像是不存在的东西？\"\n      ]\n    },\n    {\n      \"selector\": \".need-share-button_facebook\",\n      \"text\": [\n        \"emmm…FB 好像也是不存在的东西？\"\n      ]\n    },\n    {\n      \"selector\": \".post-nav-item a[rel='next']\",\n      \"text\": [\n        \"来看看下一篇文章吧。\",\n        \"点它可以看下一篇文章哦！\",\n        \"要翻到下一篇文章吗？\"\n      ]\n    },\n    {\n      \"selector\": \".post-nav-item a[rel='prev']\",\n      \"text\": [\n        \"来看看上一篇文章吧。\",\n        \"点它可以看上一篇文章哦！\",\n        \"要翻到上一篇文章吗？\"\n      ]\n    },\n    {\n      \"selector\": \".extend.next\",\n      \"text\": [\n        \"去下一页看看吧。\",\n        \"点它可以前进哦！\",\n        \"要翻到下一页吗？\"\n      ]\n    },\n    {\n      \"selector\": \".extend.prev\",\n      \"text\": [\n        \"去上一页看看吧。\",\n        \"点它可以后退哦！\",\n        \"要翻到上一页吗？\"\n      ]\n    },\n    {\n      \"selector\": \"input.vnick\",\n      \"text\": [\n        \"该怎么称呼你呢？\",\n        \"留下你的尊姓大名！\"\n      ]\n    },\n    {\n      \"selector\": \".vmail\",\n      \"text\": [\n        \"留下你的邮箱，不然就是无头像人士了！\",\n        \"记得设置好 Gravatar 头像哦！\",\n        \"为了方便通知你最新消息，一定要留下邮箱！\"\n      ]\n    },\n    {\n      \"selector\": \".vlink\",\n      \"text\": [\n        \"快快告诉我你的家在哪里，好让我去参观参观！\"\n      ]\n    },\n    {\n      \"selector\": \".veditor\",\n      \"text\": [\n        \"想要去评论些什么吗？\",\n        \"要说点什么吗？\",\n        \"觉得博客不错？快来留言和主人交流吧！\"\n      ]\n    },\n    {\n      \"selector\": \".vcontrol a\",\n      \"text\": [\n        \"你会不会熟练使用 Markdown 呀？\",\n        \"使用 Markdown 让评论更美观吧～\"\n      ]\n    },\n    {\n      \"selector\": \".vemoji-btn\",\n      \"text\": [\n        \"要插入一个萌萌哒的表情吗？\",\n        \"要来一发表情吗？\"\n      ]\n    },\n    {\n      \"selector\": \".vpreview-btn\",\n      \"text\": [\n        \"要预览一下你的发言吗？\",\n        \"快看看你的评论有多少负熵！\"\n      ]\n    },\n    {\n      \"selector\": \".vsubmit\",\n      \"text\": [\n        \"评论没有审核，要对自己的发言负责哦～\",\n        \"要提交了吗，请耐心等待回复哦～\"\n      ]\n    },\n    {\n      \"selector\": \".vcontent\",\n      \"text\": [\n        \"哇，快看看这个精彩评论！\",\n        \"如果有疑问，请尽快留言哦～\"\n      ]\n    }\n  ],\n  \"click\": [\n    {\n      \"selector\": \"#waifu #live2d\",\n      \"text\": [\n        \"是…是不小心碰到了吧…\",\n        \"萝莉控是什么呀？\",\n        \"你看到我的小熊了吗？\",\n        \"再摸的话我可要报警了！⌇●﹏●⌇\",\n        \"110 吗，这里有个变态一直在摸我(ó﹏ò｡)\",\n        \"不要摸我了，我会告诉你老婆来打你哦！\",\n        \"干嘛动我呀！小心我咬你！\",\n        \"别摸我，有什么好摸的！\"\n      ]\n    },\n    {\n      \"selector\": \".veditor\",\n      \"text\": [\n        \"要吐槽些什么呢？\",\n        \"一定要认真填写喵～\",\n        \"有什么想说的吗？\"\n      ]\n    },\n    {\n      \"selector\": \".vsubmit\",\n      \"text\": [\n        \"输入验证码就可以提交评论啦～\"\n      ]\n    }\n  ],\n  \"seasons\": [\n    {\n      \"date\": \"01/01\",\n      \"text\": \"<span>元旦</span>了呢，新的一年又开始了，今年是{year}年～\"\n    },\n    {\n      \"date\": \"02/14\",\n      \"text\": \"又是一年<span>情人节</span>，{year}年找到对象了嘛～\"\n    },\n    {\n      \"date\": \"03/08\",\n      \"text\": \"今天是<span>国际妇女节</span>！\"\n    },\n    {\n      \"date\": \"03/12\",\n      \"text\": \"今天是<span>植树节</span>，要保护环境呀！\"\n    },\n    {\n      \"date\": \"04/01\",\n      \"text\": \"悄悄告诉你一个秘密～<span>今天是愚人节，不要被骗了哦～</span>\"\n    },\n    {\n      \"date\": \"05/01\",\n      \"text\": \"今天是<span>五一劳动节</span>，计划好假期去哪里了吗～\"\n    },\n    {\n      \"date\": \"06/01\",\n      \"text\": \"<span>儿童节</span>了呢，快活的时光总是短暂，要是永远长不大该多好啊…\"\n    },\n    {\n      \"date\": \"09/03\",\n      \"text\": \"<span>中国人民抗日战争胜利纪念日</span>，铭记历史、缅怀先烈、珍爱和平、开创未来。\"\n    },\n    {\n      \"date\": \"09/10\",\n      \"text\": \"<span>教师节</span>，在学校要给老师问声好呀～\"\n    },\n    {\n      \"date\": \"10/01\",\n      \"text\": \"<span>国庆节</span>到了，为祖国母亲庆生！\"\n    },\n    {\n      \"date\": \"11/05-11/12\",\n      \"text\": \"今年的<span>双十一</span>是和谁一起过的呢～\"\n    },\n    {\n      \"date\": \"12/20-12/31\",\n      \"text\": \"这几天是<span>圣诞节</span>，主人肯定又去剁手买买买了～\"\n    }\n  ]\n}\n","date":"2022-06-06T15:39:11.497Z","updated":"2022-06-03T06:00:55.633Z","path":"live2d-widget/waifu-tips.json","layout":"false","title":"","comments":1,"_id":"cl42z5h6400143gn6a9mshwh6","content":"{\"mouseover\":[{\"selector\":\"#waifu #live2d\",\"text\":[\"干嘛呢你，快把手拿开～～\",\"鼠…鼠标放错地方了！\",\"你要干嘛呀？\",\"喵喵喵？\",\"怕怕(ノ≧∇≦)ノ\",\"非礼呀！救命！\",\"这样的话，只能使用武力了！\",\"我要生气了哦\",\"不要动手动脚的！\",\"真…真的是不知羞耻！\",\"Hentai！\"]},{\"selector\":\"#waifu-tool .fa-comment\",\"text\":[\"猜猜我要说些什么？\",\"我从青蛙王子那里听到了不少人生经验。\"]},{\"selector\":\"#waifu-tool .fa-paper-plane\",\"text\":[\"要不要来玩飞机大战？\",\"这个按钮上写着「不要点击」。\",\"怎么，你想来和我玩个游戏？\",\"听说这样可以蹦迪！\"]},{\"selector\":\"#waifu-tool .fa-user-circle\",\"text\":[\"你是不是不爱人家了呀，呜呜呜～\",\"要见见我的姐姐嘛？\",\"想要看我妹妹嘛？\",\"要切换看板娘吗？\"]},{\"selector\":\"#waifu-tool .fa-street-view\",\"text\":[\"喜欢换装 PLAY 吗？\",\"这次要扮演什么呢？\",\"变装！\",\"让我们看看接下来会发生什么！\"]},{\"selector\":\"#waifu-tool .fa-camera-retro\",\"text\":[\"你要给我拍照呀？一二三～茄子～\",\"要不，我们来合影吧！\",\"保持微笑就好了～\"]},{\"selector\":\"#waifu-tool .fa-info-circle\",\"text\":[\"想要知道更多关于我的事么？\",\"这里记录着我搬家的历史呢。\",\"你想深入了解我什么呢？\"]},{\"selector\":\"#waifu-tool .fa-times\",\"text\":[\"到了要说再见的时候了吗？\",\"呜呜 QAQ 后会有期……\",\"不要抛弃我呀……\",\"我们，还能再见面吗……\",\"哼，你会后悔的！\"]},{\"selector\":\"#waifu-tool .fa-chevron-left\",\"text\":[\"可以去左边吗？\",\"要搬家吗？\"]},{\"selector\":\"#waifu-tool .fa-chevron-right\",\"text\":[\"可以去左右吗？\",\"要搬家吗？\"]},{\"selector\":\".menu-item-home a\",\"text\":[\"点击前往首页，想回到上一页可以使用浏览器的后退功能哦。\",\"点它就可以回到首页啦！\",\"回首页看看吧。\"]},{\"selector\":\".menu-item-about a\",\"text\":[\"你想知道我家主人是谁吗？\",\"这里有一些关于我家主人的秘密哦，要不要看看呢？\",\"发现主人出没地点！\"]},{\"selector\":\".menu-item-tags a\",\"text\":[\"点击就可以看文章的标签啦！\",\"点击来查看所有标签哦。\"]},{\"selector\":\".menu-item-categories a\",\"text\":[\"文章都分类好啦～\",\"点击来查看文章分类哦。\"]},{\"selector\":\".menu-item-archives a\",\"text\":[\"翻页比较麻烦吗，那就来看看文章归档吧。\",\"文章目录都整理在这里啦！\"]},{\"selector\":\".menu-item-friends a\",\"text\":[\"这是我的朋友们哦ヾ(◍°∇°◍)ﾉﾞ\",\"要去大佬们的家看看吗？\",\"要去拜访一下我的朋友们吗？\"]},{\"selector\":\".menu-item-search a\",\"text\":[\"找不到想看的内容？搜索看看吧！\",\"在找什么东西呢，需要帮忙吗？\"]},{\"selector\":\".menu-item a\",\"text\":[\"快看看这里都有什么呢？\"]},{\"selector\":\".site-author\",\"text\":[\"我家主人好看吗？\",\"这是我家主人(*´∇｀*)\"]},{\"selector\":\".site-state\",\"text\":[\"这是文章的统计信息～\",\"要不要点进去看看？\"]},{\"selector\":\".feed-link a\",\"text\":[\"这里可以使用 RSS 订阅呢！\",\"利用 feed 订阅器，就能快速知道博客有没有更新了呢。\"]},{\"selector\":\".cc-opacity, .post-copyright-author\",\"text\":[\"要记得规范转载哦。\",\"所有文章均采用 CC BY-NC-SA 4.0 许可协议～\",\"转载前要先注意下文章的版权协议呢。\"]},{\"selector\":\".links-of-author\",\"text\":[\"这里是主人的常驻地址哦。\",\"这里有主人的联系方式！\"]},{\"selector\":\"#qrcode\",\"text\":[\"手机扫一下就能继续看，很方便呢～\",\"扫一扫，打开新世界的大门！\"]},{\"selector\":\".fancybox img, img.medium-zoom-image\",\"text\":[\"点击图片可以放大呢！\"]},{\"selector\":\".copy-btn\",\"text\":[\"代码可以直接点击复制哟。\"]},{\"selector\":\".highlight .table-container, .gist\",\"text\":[\"GitHub！我是新手！\",\"PHP 是最好的语言！\"]},{\"selector\":\"a[href^='mailto']\",\"text\":[\"邮件我会及时回复的！\",\"点击就可以发送邮件啦～\"]},{\"selector\":\"a[href^='/tags/']\",\"text\":[\"要去看看 <span>{text}</span> 标签么？\",\"点它可以查看此标签下的所有文章哟！\"]},{\"selector\":\"a[href^='/categories/']\",\"text\":[\"要去看看 <span>{text}</span> 分类么？\",\"点它可以查看此分类下的所有文章哟！\"]},{\"selector\":\".post-title-link\",\"text\":[\"要看看 <span>{text}</span> 这篇文章吗？\"]},{\"selector\":\"a[rel='contents']\",\"text\":[\"点击来阅读全文哦。\"]},{\"selector\":\"a[itemprop='discussionUrl']\",\"text\":[\"要去看看评论吗？\"]},{\"selector\":\".beian a\",\"text\":[\"我也是有户口的人哦。\",\"我的主人可是遵纪守法的好主人。\"]},{\"selector\":\".container a[href^='http'], .nav-link .nav-text\",\"text\":[\"要去看看 <span>{text}</span> 么？\",\"去 <span>{text}</span> 逛逛吧。\",\"到 <span>{text}</span> 看看吧。\"]},{\"selector\":\".back-to-top\",\"text\":[\"点它就可以回到顶部啦！\",\"又回到最初的起点～\",\"要回到开始的地方么？\"]},{\"selector\":\".reward-container\",\"text\":[\"我是不是棒棒哒～快给我点赞吧！\",\"要打赏我嘛？好期待啊～\",\"主人最近在吃土呢，很辛苦的样子，给他一些钱钱吧～\"]},{\"selector\":\"#wechat\",\"text\":[\"这是我的微信二维码～\"]},{\"selector\":\"#alipay\",\"text\":[\"这是我的支付宝哦！\"]},{\"selector\":\"#bitcoin\",\"text\":[\"这是我的比特币账号！\"]},{\"selector\":\"#needsharebutton-postbottom .btn\",\"text\":[\"好东西要让更多人知道才行哦。\",\"觉得文章有帮助的话，可以分享给更多需要的朋友呢。\"]},{\"selector\":\".need-share-button_weibo\",\"text\":[\"微博？来分享一波喵！\"]},{\"selector\":\".need-share-button_wechat\",\"text\":[\"分享到微信吧！\"]},{\"selector\":\".need-share-button_douban\",\"text\":[\"分享到豆瓣好像也不错！\"]},{\"selector\":\".need-share-button_qqzone\",\"text\":[\"QQ 空间，一键转发，耶～\"]},{\"selector\":\".need-share-button_twitter\",\"text\":[\"Twitter？好像是不存在的东西？\"]},{\"selector\":\".need-share-button_facebook\",\"text\":[\"emmm…FB 好像也是不存在的东西？\"]},{\"selector\":\".post-nav-item a[rel='next']\",\"text\":[\"来看看下一篇文章吧。\",\"点它可以看下一篇文章哦！\",\"要翻到下一篇文章吗？\"]},{\"selector\":\".post-nav-item a[rel='prev']\",\"text\":[\"来看看上一篇文章吧。\",\"点它可以看上一篇文章哦！\",\"要翻到上一篇文章吗？\"]},{\"selector\":\".extend.next\",\"text\":[\"去下一页看看吧。\",\"点它可以前进哦！\",\"要翻到下一页吗？\"]},{\"selector\":\".extend.prev\",\"text\":[\"去上一页看看吧。\",\"点它可以后退哦！\",\"要翻到上一页吗？\"]},{\"selector\":\"input.vnick\",\"text\":[\"该怎么称呼你呢？\",\"留下你的尊姓大名！\"]},{\"selector\":\".vmail\",\"text\":[\"留下你的邮箱，不然就是无头像人士了！\",\"记得设置好 Gravatar 头像哦！\",\"为了方便通知你最新消息，一定要留下邮箱！\"]},{\"selector\":\".vlink\",\"text\":[\"快快告诉我你的家在哪里，好让我去参观参观！\"]},{\"selector\":\".veditor\",\"text\":[\"想要去评论些什么吗？\",\"要说点什么吗？\",\"觉得博客不错？快来留言和主人交流吧！\"]},{\"selector\":\".vcontrol a\",\"text\":[\"你会不会熟练使用 Markdown 呀？\",\"使用 Markdown 让评论更美观吧～\"]},{\"selector\":\".vemoji-btn\",\"text\":[\"要插入一个萌萌哒的表情吗？\",\"要来一发表情吗？\"]},{\"selector\":\".vpreview-btn\",\"text\":[\"要预览一下你的发言吗？\",\"快看看你的评论有多少负熵！\"]},{\"selector\":\".vsubmit\",\"text\":[\"评论没有审核，要对自己的发言负责哦～\",\"要提交了吗，请耐心等待回复哦～\"]},{\"selector\":\".vcontent\",\"text\":[\"哇，快看看这个精彩评论！\",\"如果有疑问，请尽快留言哦～\"]}],\"click\":[{\"selector\":\"#waifu #live2d\",\"text\":[\"是…是不小心碰到了吧…\",\"萝莉控是什么呀？\",\"你看到我的小熊了吗？\",\"再摸的话我可要报警了！⌇●﹏●⌇\",\"110 吗，这里有个变态一直在摸我(ó﹏ò｡)\",\"不要摸我了，我会告诉你老婆来打你哦！\",\"干嘛动我呀！小心我咬你！\",\"别摸我，有什么好摸的！\"]},{\"selector\":\".veditor\",\"text\":[\"要吐槽些什么呢？\",\"一定要认真填写喵～\",\"有什么想说的吗？\"]},{\"selector\":\".vsubmit\",\"text\":[\"输入验证码就可以提交评论啦～\"]}],\"seasons\":[{\"date\":\"01/01\",\"text\":\"<span>元旦</span>了呢，新的一年又开始了，今年是{year}年～\"},{\"date\":\"02/14\",\"text\":\"又是一年<span>情人节</span>，{year}年找到对象了嘛～\"},{\"date\":\"03/08\",\"text\":\"今天是<span>国际妇女节</span>！\"},{\"date\":\"03/12\",\"text\":\"今天是<span>植树节</span>，要保护环境呀！\"},{\"date\":\"04/01\",\"text\":\"悄悄告诉你一个秘密～<span>今天是愚人节，不要被骗了哦～</span>\"},{\"date\":\"05/01\",\"text\":\"今天是<span>五一劳动节</span>，计划好假期去哪里了吗～\"},{\"date\":\"06/01\",\"text\":\"<span>儿童节</span>了呢，快活的时光总是短暂，要是永远长不大该多好啊…\"},{\"date\":\"09/03\",\"text\":\"<span>中国人民抗日战争胜利纪念日</span>，铭记历史、缅怀先烈、珍爱和平、开创未来。\"},{\"date\":\"09/10\",\"text\":\"<span>教师节</span>，在学校要给老师问声好呀～\"},{\"date\":\"10/01\",\"text\":\"<span>国庆节</span>到了，为祖国母亲庆生！\"},{\"date\":\"11/05-11/12\",\"text\":\"今年的<span>双十一</span>是和谁一起过的呢～\"},{\"date\":\"12/20-12/31\",\"text\":\"这几天是<span>圣诞节</span>，主人肯定又去剁手买买买了～\"}]}","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"cover":"https://blog.huangge1199.cn/post/pyListSort/bg.jpeg","excerpt":"","more":"{\"mouseover\":[{\"selector\":\"#waifu #live2d\",\"text\":[\"干嘛呢你，快把手拿开～～\",\"鼠…鼠标放错地方了！\",\"你要干嘛呀？\",\"喵喵喵？\",\"怕怕(ノ≧∇≦)ノ\",\"非礼呀！救命！\",\"这样的话，只能使用武力了！\",\"我要生气了哦\",\"不要动手动脚的！\",\"真…真的是不知羞耻！\",\"Hentai！\"]},{\"selector\":\"#waifu-tool .fa-comment\",\"text\":[\"猜猜我要说些什么？\",\"我从青蛙王子那里听到了不少人生经验。\"]},{\"selector\":\"#waifu-tool .fa-paper-plane\",\"text\":[\"要不要来玩飞机大战？\",\"这个按钮上写着「不要点击」。\",\"怎么，你想来和我玩个游戏？\",\"听说这样可以蹦迪！\"]},{\"selector\":\"#waifu-tool .fa-user-circle\",\"text\":[\"你是不是不爱人家了呀，呜呜呜～\",\"要见见我的姐姐嘛？\",\"想要看我妹妹嘛？\",\"要切换看板娘吗？\"]},{\"selector\":\"#waifu-tool .fa-street-view\",\"text\":[\"喜欢换装 PLAY 吗？\",\"这次要扮演什么呢？\",\"变装！\",\"让我们看看接下来会发生什么！\"]},{\"selector\":\"#waifu-tool .fa-camera-retro\",\"text\":[\"你要给我拍照呀？一二三～茄子～\",\"要不，我们来合影吧！\",\"保持微笑就好了～\"]},{\"selector\":\"#waifu-tool .fa-info-circle\",\"text\":[\"想要知道更多关于我的事么？\",\"这里记录着我搬家的历史呢。\",\"你想深入了解我什么呢？\"]},{\"selector\":\"#waifu-tool .fa-times\",\"text\":[\"到了要说再见的时候了吗？\",\"呜呜 QAQ 后会有期……\",\"不要抛弃我呀……\",\"我们，还能再见面吗……\",\"哼，你会后悔的！\"]},{\"selector\":\"#waifu-tool .fa-chevron-left\",\"text\":[\"可以去左边吗？\",\"要搬家吗？\"]},{\"selector\":\"#waifu-tool .fa-chevron-right\",\"text\":[\"可以去左右吗？\",\"要搬家吗？\"]},{\"selector\":\".menu-item-home a\",\"text\":[\"点击前往首页，想回到上一页可以使用浏览器的后退功能哦。\",\"点它就可以回到首页啦！\",\"回首页看看吧。\"]},{\"selector\":\".menu-item-about a\",\"text\":[\"你想知道我家主人是谁吗？\",\"这里有一些关于我家主人的秘密哦，要不要看看呢？\",\"发现主人出没地点！\"]},{\"selector\":\".menu-item-tags a\",\"text\":[\"点击就可以看文章的标签啦！\",\"点击来查看所有标签哦。\"]},{\"selector\":\".menu-item-categories a\",\"text\":[\"文章都分类好啦～\",\"点击来查看文章分类哦。\"]},{\"selector\":\".menu-item-archives a\",\"text\":[\"翻页比较麻烦吗，那就来看看文章归档吧。\",\"文章目录都整理在这里啦！\"]},{\"selector\":\".menu-item-friends a\",\"text\":[\"这是我的朋友们哦ヾ(◍°∇°◍)ﾉﾞ\",\"要去大佬们的家看看吗？\",\"要去拜访一下我的朋友们吗？\"]},{\"selector\":\".menu-item-search a\",\"text\":[\"找不到想看的内容？搜索看看吧！\",\"在找什么东西呢，需要帮忙吗？\"]},{\"selector\":\".menu-item a\",\"text\":[\"快看看这里都有什么呢？\"]},{\"selector\":\".site-author\",\"text\":[\"我家主人好看吗？\",\"这是我家主人(*´∇｀*)\"]},{\"selector\":\".site-state\",\"text\":[\"这是文章的统计信息～\",\"要不要点进去看看？\"]},{\"selector\":\".feed-link a\",\"text\":[\"这里可以使用 RSS 订阅呢！\",\"利用 feed 订阅器，就能快速知道博客有没有更新了呢。\"]},{\"selector\":\".cc-opacity, .post-copyright-author\",\"text\":[\"要记得规范转载哦。\",\"所有文章均采用 CC BY-NC-SA 4.0 许可协议～\",\"转载前要先注意下文章的版权协议呢。\"]},{\"selector\":\".links-of-author\",\"text\":[\"这里是主人的常驻地址哦。\",\"这里有主人的联系方式！\"]},{\"selector\":\"#qrcode\",\"text\":[\"手机扫一下就能继续看，很方便呢～\",\"扫一扫，打开新世界的大门！\"]},{\"selector\":\".fancybox img, img.medium-zoom-image\",\"text\":[\"点击图片可以放大呢！\"]},{\"selector\":\".copy-btn\",\"text\":[\"代码可以直接点击复制哟。\"]},{\"selector\":\".highlight .table-container, .gist\",\"text\":[\"GitHub！我是新手！\",\"PHP 是最好的语言！\"]},{\"selector\":\"a[href^='mailto']\",\"text\":[\"邮件我会及时回复的！\",\"点击就可以发送邮件啦～\"]},{\"selector\":\"a[href^='/tags/']\",\"text\":[\"要去看看 <span>{text}</span> 标签么？\",\"点它可以查看此标签下的所有文章哟！\"]},{\"selector\":\"a[href^='/categories/']\",\"text\":[\"要去看看 <span>{text}</span> 分类么？\",\"点它可以查看此分类下的所有文章哟！\"]},{\"selector\":\".post-title-link\",\"text\":[\"要看看 <span>{text}</span> 这篇文章吗？\"]},{\"selector\":\"a[rel='contents']\",\"text\":[\"点击来阅读全文哦。\"]},{\"selector\":\"a[itemprop='discussionUrl']\",\"text\":[\"要去看看评论吗？\"]},{\"selector\":\".beian a\",\"text\":[\"我也是有户口的人哦。\",\"我的主人可是遵纪守法的好主人。\"]},{\"selector\":\".container a[href^='http'], .nav-link .nav-text\",\"text\":[\"要去看看 <span>{text}</span> 么？\",\"去 <span>{text}</span> 逛逛吧。\",\"到 <span>{text}</span> 看看吧。\"]},{\"selector\":\".back-to-top\",\"text\":[\"点它就可以回到顶部啦！\",\"又回到最初的起点～\",\"要回到开始的地方么？\"]},{\"selector\":\".reward-container\",\"text\":[\"我是不是棒棒哒～快给我点赞吧！\",\"要打赏我嘛？好期待啊～\",\"主人最近在吃土呢，很辛苦的样子，给他一些钱钱吧～\"]},{\"selector\":\"#wechat\",\"text\":[\"这是我的微信二维码～\"]},{\"selector\":\"#alipay\",\"text\":[\"这是我的支付宝哦！\"]},{\"selector\":\"#bitcoin\",\"text\":[\"这是我的比特币账号！\"]},{\"selector\":\"#needsharebutton-postbottom .btn\",\"text\":[\"好东西要让更多人知道才行哦。\",\"觉得文章有帮助的话，可以分享给更多需要的朋友呢。\"]},{\"selector\":\".need-share-button_weibo\",\"text\":[\"微博？来分享一波喵！\"]},{\"selector\":\".need-share-button_wechat\",\"text\":[\"分享到微信吧！\"]},{\"selector\":\".need-share-button_douban\",\"text\":[\"分享到豆瓣好像也不错！\"]},{\"selector\":\".need-share-button_qqzone\",\"text\":[\"QQ 空间，一键转发，耶～\"]},{\"selector\":\".need-share-button_twitter\",\"text\":[\"Twitter？好像是不存在的东西？\"]},{\"selector\":\".need-share-button_facebook\",\"text\":[\"emmm…FB 好像也是不存在的东西？\"]},{\"selector\":\".post-nav-item a[rel='next']\",\"text\":[\"来看看下一篇文章吧。\",\"点它可以看下一篇文章哦！\",\"要翻到下一篇文章吗？\"]},{\"selector\":\".post-nav-item a[rel='prev']\",\"text\":[\"来看看上一篇文章吧。\",\"点它可以看上一篇文章哦！\",\"要翻到上一篇文章吗？\"]},{\"selector\":\".extend.next\",\"text\":[\"去下一页看看吧。\",\"点它可以前进哦！\",\"要翻到下一页吗？\"]},{\"selector\":\".extend.prev\",\"text\":[\"去上一页看看吧。\",\"点它可以后退哦！\",\"要翻到上一页吗？\"]},{\"selector\":\"input.vnick\",\"text\":[\"该怎么称呼你呢？\",\"留下你的尊姓大名！\"]},{\"selector\":\".vmail\",\"text\":[\"留下你的邮箱，不然就是无头像人士了！\",\"记得设置好 Gravatar 头像哦！\",\"为了方便通知你最新消息，一定要留下邮箱！\"]},{\"selector\":\".vlink\",\"text\":[\"快快告诉我你的家在哪里，好让我去参观参观！\"]},{\"selector\":\".veditor\",\"text\":[\"想要去评论些什么吗？\",\"要说点什么吗？\",\"觉得博客不错？快来留言和主人交流吧！\"]},{\"selector\":\".vcontrol a\",\"text\":[\"你会不会熟练使用 Markdown 呀？\",\"使用 Markdown 让评论更美观吧～\"]},{\"selector\":\".vemoji-btn\",\"text\":[\"要插入一个萌萌哒的表情吗？\",\"要来一发表情吗？\"]},{\"selector\":\".vpreview-btn\",\"text\":[\"要预览一下你的发言吗？\",\"快看看你的评论有多少负熵！\"]},{\"selector\":\".vsubmit\",\"text\":[\"评论没有审核，要对自己的发言负责哦～\",\"要提交了吗，请耐心等待回复哦～\"]},{\"selector\":\".vcontent\",\"text\":[\"哇，快看看这个精彩评论！\",\"如果有疑问，请尽快留言哦～\"]}],\"click\":[{\"selector\":\"#waifu #live2d\",\"text\":[\"是…是不小心碰到了吧…\",\"萝莉控是什么呀？\",\"你看到我的小熊了吗？\",\"再摸的话我可要报警了！⌇●﹏●⌇\",\"110 吗，这里有个变态一直在摸我(ó﹏ò｡)\",\"不要摸我了，我会告诉你老婆来打你哦！\",\"干嘛动我呀！小心我咬你！\",\"别摸我，有什么好摸的！\"]},{\"selector\":\".veditor\",\"text\":[\"要吐槽些什么呢？\",\"一定要认真填写喵～\",\"有什么想说的吗？\"]},{\"selector\":\".vsubmit\",\"text\":[\"输入验证码就可以提交评论啦～\"]}],\"seasons\":[{\"date\":\"01/01\",\"text\":\"<span>元旦</span>了呢，新的一年又开始了，今年是{year}年～\"},{\"date\":\"02/14\",\"text\":\"又是一年<span>情人节</span>，{year}年找到对象了嘛～\"},{\"date\":\"03/08\",\"text\":\"今天是<span>国际妇女节</span>！\"},{\"date\":\"03/12\",\"text\":\"今天是<span>植树节</span>，要保护环境呀！\"},{\"date\":\"04/01\",\"text\":\"悄悄告诉你一个秘密～<span>今天是愚人节，不要被骗了哦～</span>\"},{\"date\":\"05/01\",\"text\":\"今天是<span>五一劳动节</span>，计划好假期去哪里了吗～\"},{\"date\":\"06/01\",\"text\":\"<span>儿童节</span>了呢，快活的时光总是短暂，要是永远长不大该多好啊…\"},{\"date\":\"09/03\",\"text\":\"<span>中国人民抗日战争胜利纪念日</span>，铭记历史、缅怀先烈、珍爱和平、开创未来。\"},{\"date\":\"09/10\",\"text\":\"<span>教师节</span>，在学校要给老师问声好呀～\"},{\"date\":\"10/01\",\"text\":\"<span>国庆节</span>到了，为祖国母亲庆生！\"},{\"date\":\"11/05-11/12\",\"text\":\"今年的<span>双十一</span>是和谁一起过的呢～\"},{\"date\":\"12/20-12/31\",\"text\":\"这几天是<span>圣诞节</span>，主人肯定又去剁手买买买了～\"}]}"},{"_content":"#waifu-toggle {\n\tbackground-color: #fa0;\n\tborder-radius: 5px;\n\tbottom: 66px;\n\tcolor: #fff;\n\tcursor: pointer;\n\tfont-size: 12px;\n\tleft: 0;\n\tmargin-left: -100px;\n\tpadding: 5px 2px 5px 5px;\n\tposition: fixed;\n\ttransition: margin-left 1s;\n\twidth: 60px;\n\twriting-mode: vertical-rl;\n\tz-index: 1000;\n}\n\n#waifu-toggle.waifu-toggle-active {\n\tmargin-left: -50px;\n}\n\n#waifu-toggle.waifu-toggle-active:hover {\n\tmargin-left: -30px;\n}\n\n#waifu {\n\tbottom: -1000px;\n\tleft: 100px;\n\tline-height: 0;\n\tmargin-bottom: -10px;\n\tposition: fixed;\n\ttransform: translateY(3px);\n\ttransition: transform .3s ease-in-out, bottom 3s ease-in-out;\n\tz-index: 1000;\n}\n\n#waifu:hover {\n\ttransform: translateY(0);\n}\n\n#waifu-tips {\n\tanimation: shake 50s ease-in-out 5s infinite;\n\tbackground-color: rgba(236, 217, 188, .5);\n\tborder: 1px solid rgba(224, 186, 140, .62);\n\tborder-radius: 12px;\n\tbox-shadow: 0 3px 15px 2px rgba(191, 158, 118, .2);\n\tfont-size: 14px;\n\tline-height: 24px;\n\tmargin: -30px 20px;\n\tmin-height: 70px;\n\topacity: 0;\n\toverflow: hidden;\n\tpadding: 5px 10px;\n\tposition: absolute;\n\ttext-overflow: ellipsis;\n\ttransition: opacity 1s;\n\twidth: 250px;\n\tword-break: break-all;\n}\n\n#waifu-tips.waifu-tips-active {\n\topacity: 1;\n\ttransition: opacity .2s;\n}\n\n#waifu-tips span {\n\tcolor: #0099cc;\n}\n\n#waifu #live2d {\n\tcursor: grab;\n\theight: 300px;\n\tposition: relative;\n\twidth: 300px;\n}\n\n#waifu #live2d:active {\n\tcursor: grabbing;\n}\n\n#waifu-tool {\n\tcolor: #aaa;\n\topacity: 0;\n\tposition: absolute;\n\tright: -10px;\n\ttop: 55px;\n\ttransition: opacity 1s;\n}\n\n#waifu:hover #waifu-tool {\n\topacity: 1;\n}\n\n#waifu-tool span {\n\tcolor: #7b8c9d;\n\tcursor: pointer;\n\tdisplay: block;\n\tline-height: 30px;\n\ttext-align: center;\n\ttransition: color .3s;\n}\n\n#waifu-tool span:hover {\n\tcolor: #0684bd; /* #34495e */\n}\n\n@keyframes shake {\n\t2% {\n\t\ttransform: translate(.5px, -1.5px) rotate(-.5deg);\n\t}\n\n\t4% {\n\t\ttransform: translate(.5px, 1.5px) rotate(1.5deg);\n\t}\n\n\t6% {\n\t\ttransform: translate(1.5px, 1.5px) rotate(1.5deg);\n\t}\n\n\t8% {\n\t\ttransform: translate(2.5px, 1.5px) rotate(.5deg);\n\t}\n\n\t10% {\n\t\ttransform: translate(.5px, 2.5px) rotate(.5deg);\n\t}\n\n\t12% {\n\t\ttransform: translate(1.5px, 1.5px) rotate(.5deg);\n\t}\n\n\t14% {\n\t\ttransform: translate(.5px, .5px) rotate(.5deg);\n\t}\n\n\t16% {\n\t\ttransform: translate(-1.5px, -.5px) rotate(1.5deg);\n\t}\n\n\t18% {\n\t\ttransform: translate(.5px, .5px) rotate(1.5deg);\n\t}\n\n\t20% {\n\t\ttransform: translate(2.5px, 2.5px) rotate(1.5deg);\n\t}\n\n\t22% {\n\t\ttransform: translate(.5px, -1.5px) rotate(1.5deg);\n\t}\n\n\t24% {\n\t\ttransform: translate(-1.5px, 1.5px) rotate(-.5deg);\n\t}\n\n\t26% {\n\t\ttransform: translate(1.5px, .5px) rotate(1.5deg);\n\t}\n\n\t28% {\n\t\ttransform: translate(-.5px, -.5px) rotate(-.5deg);\n\t}\n\n\t30% {\n\t\ttransform: translate(1.5px, -.5px) rotate(-.5deg);\n\t}\n\n\t32% {\n\t\ttransform: translate(2.5px, -1.5px) rotate(1.5deg);\n\t}\n\n\t34% {\n\t\ttransform: translate(2.5px, 2.5px) rotate(-.5deg);\n\t}\n\n\t36% {\n\t\ttransform: translate(.5px, -1.5px) rotate(.5deg);\n\t}\n\n\t38% {\n\t\ttransform: translate(2.5px, -.5px) rotate(-.5deg);\n\t}\n\n\t40% {\n\t\ttransform: translate(-.5px, 2.5px) rotate(.5deg);\n\t}\n\n\t42% {\n\t\ttransform: translate(-1.5px, 2.5px) rotate(.5deg);\n\t}\n\n\t44% {\n\t\ttransform: translate(-1.5px, 1.5px) rotate(.5deg);\n\t}\n\n\t46% {\n\t\ttransform: translate(1.5px, -.5px) rotate(-.5deg);\n\t}\n\n\t48% {\n\t\ttransform: translate(2.5px, -.5px) rotate(.5deg);\n\t}\n\n\t50% {\n\t\ttransform: translate(-1.5px, 1.5px) rotate(.5deg);\n\t}\n\n\t52% {\n\t\ttransform: translate(-.5px, 1.5px) rotate(.5deg);\n\t}\n\n\t54% {\n\t\ttransform: translate(-1.5px, 1.5px) rotate(.5deg);\n\t}\n\n\t56% {\n\t\ttransform: translate(.5px, 2.5px) rotate(1.5deg);\n\t}\n\n\t58% {\n\t\ttransform: translate(2.5px, 2.5px) rotate(.5deg);\n\t}\n\n\t60% {\n\t\ttransform: translate(2.5px, -1.5px) rotate(1.5deg);\n\t}\n\n\t62% {\n\t\ttransform: translate(-1.5px, .5px) rotate(1.5deg);\n\t}\n\n\t64% {\n\t\ttransform: translate(-1.5px, 1.5px) rotate(1.5deg);\n\t}\n\n\t66% {\n\t\ttransform: translate(.5px, 2.5px) rotate(1.5deg);\n\t}\n\n\t68% {\n\t\ttransform: translate(2.5px, -1.5px) rotate(1.5deg);\n\t}\n\n\t70% {\n\t\ttransform: translate(2.5px, 2.5px) rotate(.5deg);\n\t}\n\n\t72% {\n\t\ttransform: translate(-.5px, -1.5px) rotate(1.5deg);\n\t}\n\n\t74% {\n\t\ttransform: translate(-1.5px, 2.5px) rotate(1.5deg);\n\t}\n\n\t76% {\n\t\ttransform: translate(-1.5px, 2.5px) rotate(1.5deg);\n\t}\n\n\t78% {\n\t\ttransform: translate(-1.5px, 2.5px) rotate(.5deg);\n\t}\n\n\t80% {\n\t\ttransform: translate(-1.5px, .5px) rotate(-.5deg);\n\t}\n\n\t82% {\n\t\ttransform: translate(-1.5px, .5px) rotate(-.5deg);\n\t}\n\n\t84% {\n\t\ttransform: translate(-.5px, .5px) rotate(1.5deg);\n\t}\n\n\t86% {\n\t\ttransform: translate(2.5px, 1.5px) rotate(.5deg);\n\t}\n\n\t88% {\n\t\ttransform: translate(-1.5px, .5px) rotate(1.5deg);\n\t}\n\n\t90% {\n\t\ttransform: translate(-1.5px, -.5px) rotate(-.5deg);\n\t}\n\n\t92% {\n\t\ttransform: translate(-1.5px, -1.5px) rotate(1.5deg);\n\t}\n\n\t94% {\n\t\ttransform: translate(.5px, .5px) rotate(-.5deg);\n\t}\n\n\t96% {\n\t\ttransform: translate(2.5px, -.5px) rotate(-.5deg);\n\t}\n\n\t98% {\n\t\ttransform: translate(-1.5px, -1.5px) rotate(-.5deg);\n\t}\n\n\t0%, 100% {\n\t\ttransform: translate(0, 0) rotate(0);\n\t}\n}\n","source":"live2d-widget/waifu_left.css","raw":"#waifu-toggle {\n\tbackground-color: #fa0;\n\tborder-radius: 5px;\n\tbottom: 66px;\n\tcolor: #fff;\n\tcursor: pointer;\n\tfont-size: 12px;\n\tleft: 0;\n\tmargin-left: -100px;\n\tpadding: 5px 2px 5px 5px;\n\tposition: fixed;\n\ttransition: margin-left 1s;\n\twidth: 60px;\n\twriting-mode: vertical-rl;\n\tz-index: 1000;\n}\n\n#waifu-toggle.waifu-toggle-active {\n\tmargin-left: -50px;\n}\n\n#waifu-toggle.waifu-toggle-active:hover {\n\tmargin-left: -30px;\n}\n\n#waifu {\n\tbottom: -1000px;\n\tleft: 100px;\n\tline-height: 0;\n\tmargin-bottom: -10px;\n\tposition: fixed;\n\ttransform: translateY(3px);\n\ttransition: transform .3s ease-in-out, bottom 3s ease-in-out;\n\tz-index: 1000;\n}\n\n#waifu:hover {\n\ttransform: translateY(0);\n}\n\n#waifu-tips {\n\tanimation: shake 50s ease-in-out 5s infinite;\n\tbackground-color: rgba(236, 217, 188, .5);\n\tborder: 1px solid rgba(224, 186, 140, .62);\n\tborder-radius: 12px;\n\tbox-shadow: 0 3px 15px 2px rgba(191, 158, 118, .2);\n\tfont-size: 14px;\n\tline-height: 24px;\n\tmargin: -30px 20px;\n\tmin-height: 70px;\n\topacity: 0;\n\toverflow: hidden;\n\tpadding: 5px 10px;\n\tposition: absolute;\n\ttext-overflow: ellipsis;\n\ttransition: opacity 1s;\n\twidth: 250px;\n\tword-break: break-all;\n}\n\n#waifu-tips.waifu-tips-active {\n\topacity: 1;\n\ttransition: opacity .2s;\n}\n\n#waifu-tips span {\n\tcolor: #0099cc;\n}\n\n#waifu #live2d {\n\tcursor: grab;\n\theight: 300px;\n\tposition: relative;\n\twidth: 300px;\n}\n\n#waifu #live2d:active {\n\tcursor: grabbing;\n}\n\n#waifu-tool {\n\tcolor: #aaa;\n\topacity: 0;\n\tposition: absolute;\n\tright: -10px;\n\ttop: 55px;\n\ttransition: opacity 1s;\n}\n\n#waifu:hover #waifu-tool {\n\topacity: 1;\n}\n\n#waifu-tool span {\n\tcolor: #7b8c9d;\n\tcursor: pointer;\n\tdisplay: block;\n\tline-height: 30px;\n\ttext-align: center;\n\ttransition: color .3s;\n}\n\n#waifu-tool span:hover {\n\tcolor: #0684bd; /* #34495e */\n}\n\n@keyframes shake {\n\t2% {\n\t\ttransform: translate(.5px, -1.5px) rotate(-.5deg);\n\t}\n\n\t4% {\n\t\ttransform: translate(.5px, 1.5px) rotate(1.5deg);\n\t}\n\n\t6% {\n\t\ttransform: translate(1.5px, 1.5px) rotate(1.5deg);\n\t}\n\n\t8% {\n\t\ttransform: translate(2.5px, 1.5px) rotate(.5deg);\n\t}\n\n\t10% {\n\t\ttransform: translate(.5px, 2.5px) rotate(.5deg);\n\t}\n\n\t12% {\n\t\ttransform: translate(1.5px, 1.5px) rotate(.5deg);\n\t}\n\n\t14% {\n\t\ttransform: translate(.5px, .5px) rotate(.5deg);\n\t}\n\n\t16% {\n\t\ttransform: translate(-1.5px, -.5px) rotate(1.5deg);\n\t}\n\n\t18% {\n\t\ttransform: translate(.5px, .5px) rotate(1.5deg);\n\t}\n\n\t20% {\n\t\ttransform: translate(2.5px, 2.5px) rotate(1.5deg);\n\t}\n\n\t22% {\n\t\ttransform: translate(.5px, -1.5px) rotate(1.5deg);\n\t}\n\n\t24% {\n\t\ttransform: translate(-1.5px, 1.5px) rotate(-.5deg);\n\t}\n\n\t26% {\n\t\ttransform: translate(1.5px, .5px) rotate(1.5deg);\n\t}\n\n\t28% {\n\t\ttransform: translate(-.5px, -.5px) rotate(-.5deg);\n\t}\n\n\t30% {\n\t\ttransform: translate(1.5px, -.5px) rotate(-.5deg);\n\t}\n\n\t32% {\n\t\ttransform: translate(2.5px, -1.5px) rotate(1.5deg);\n\t}\n\n\t34% {\n\t\ttransform: translate(2.5px, 2.5px) rotate(-.5deg);\n\t}\n\n\t36% {\n\t\ttransform: translate(.5px, -1.5px) rotate(.5deg);\n\t}\n\n\t38% {\n\t\ttransform: translate(2.5px, -.5px) rotate(-.5deg);\n\t}\n\n\t40% {\n\t\ttransform: translate(-.5px, 2.5px) rotate(.5deg);\n\t}\n\n\t42% {\n\t\ttransform: translate(-1.5px, 2.5px) rotate(.5deg);\n\t}\n\n\t44% {\n\t\ttransform: translate(-1.5px, 1.5px) rotate(.5deg);\n\t}\n\n\t46% {\n\t\ttransform: translate(1.5px, -.5px) rotate(-.5deg);\n\t}\n\n\t48% {\n\t\ttransform: translate(2.5px, -.5px) rotate(.5deg);\n\t}\n\n\t50% {\n\t\ttransform: translate(-1.5px, 1.5px) rotate(.5deg);\n\t}\n\n\t52% {\n\t\ttransform: translate(-.5px, 1.5px) rotate(.5deg);\n\t}\n\n\t54% {\n\t\ttransform: translate(-1.5px, 1.5px) rotate(.5deg);\n\t}\n\n\t56% {\n\t\ttransform: translate(.5px, 2.5px) rotate(1.5deg);\n\t}\n\n\t58% {\n\t\ttransform: translate(2.5px, 2.5px) rotate(.5deg);\n\t}\n\n\t60% {\n\t\ttransform: translate(2.5px, -1.5px) rotate(1.5deg);\n\t}\n\n\t62% {\n\t\ttransform: translate(-1.5px, .5px) rotate(1.5deg);\n\t}\n\n\t64% {\n\t\ttransform: translate(-1.5px, 1.5px) rotate(1.5deg);\n\t}\n\n\t66% {\n\t\ttransform: translate(.5px, 2.5px) rotate(1.5deg);\n\t}\n\n\t68% {\n\t\ttransform: translate(2.5px, -1.5px) rotate(1.5deg);\n\t}\n\n\t70% {\n\t\ttransform: translate(2.5px, 2.5px) rotate(.5deg);\n\t}\n\n\t72% {\n\t\ttransform: translate(-.5px, -1.5px) rotate(1.5deg);\n\t}\n\n\t74% {\n\t\ttransform: translate(-1.5px, 2.5px) rotate(1.5deg);\n\t}\n\n\t76% {\n\t\ttransform: translate(-1.5px, 2.5px) rotate(1.5deg);\n\t}\n\n\t78% {\n\t\ttransform: translate(-1.5px, 2.5px) rotate(.5deg);\n\t}\n\n\t80% {\n\t\ttransform: translate(-1.5px, .5px) rotate(-.5deg);\n\t}\n\n\t82% {\n\t\ttransform: translate(-1.5px, .5px) rotate(-.5deg);\n\t}\n\n\t84% {\n\t\ttransform: translate(-.5px, .5px) rotate(1.5deg);\n\t}\n\n\t86% {\n\t\ttransform: translate(2.5px, 1.5px) rotate(.5deg);\n\t}\n\n\t88% {\n\t\ttransform: translate(-1.5px, .5px) rotate(1.5deg);\n\t}\n\n\t90% {\n\t\ttransform: translate(-1.5px, -.5px) rotate(-.5deg);\n\t}\n\n\t92% {\n\t\ttransform: translate(-1.5px, -1.5px) rotate(1.5deg);\n\t}\n\n\t94% {\n\t\ttransform: translate(.5px, .5px) rotate(-.5deg);\n\t}\n\n\t96% {\n\t\ttransform: translate(2.5px, -.5px) rotate(-.5deg);\n\t}\n\n\t98% {\n\t\ttransform: translate(-1.5px, -1.5px) rotate(-.5deg);\n\t}\n\n\t0%, 100% {\n\t\ttransform: translate(0, 0) rotate(0);\n\t}\n}\n","date":"2022-06-06T15:39:11.493Z","updated":"2022-06-03T06:00:55.633Z","path":"live2d-widget/waifu_left.css","layout":"false","title":"","comments":1,"_id":"cl42z5h6500193gn60722hbxy","content":"#waifu-toggle {\n\tbackground-color: #fa0;\n\tborder-radius: 5px;\n\tbottom: 66px;\n\tcolor: #fff;\n\tcursor: pointer;\n\tfont-size: 12px;\n\tleft: 0;\n\tmargin-left: -100px;\n\tpadding: 5px 2px 5px 5px;\n\tposition: fixed;\n\ttransition: margin-left 1s;\n\twidth: 60px;\n\twriting-mode: vertical-rl;\n\tz-index: 1000;\n}\n\n#waifu-toggle.waifu-toggle-active {\n\tmargin-left: -50px;\n}\n\n#waifu-toggle.waifu-toggle-active:hover {\n\tmargin-left: -30px;\n}\n\n#waifu {\n\tbottom: -1000px;\n\tleft: 100px;\n\tline-height: 0;\n\tmargin-bottom: -10px;\n\tposition: fixed;\n\ttransform: translateY(3px);\n\ttransition: transform .3s ease-in-out, bottom 3s ease-in-out;\n\tz-index: 1000;\n}\n\n#waifu:hover {\n\ttransform: translateY(0);\n}\n\n#waifu-tips {\n\tanimation: shake 50s ease-in-out 5s infinite;\n\tbackground-color: rgba(236, 217, 188, .5);\n\tborder: 1px solid rgba(224, 186, 140, .62);\n\tborder-radius: 12px;\n\tbox-shadow: 0 3px 15px 2px rgba(191, 158, 118, .2);\n\tfont-size: 14px;\n\tline-height: 24px;\n\tmargin: -30px 20px;\n\tmin-height: 70px;\n\topacity: 0;\n\toverflow: hidden;\n\tpadding: 5px 10px;\n\tposition: absolute;\n\ttext-overflow: ellipsis;\n\ttransition: opacity 1s;\n\twidth: 250px;\n\tword-break: break-all;\n}\n\n#waifu-tips.waifu-tips-active {\n\topacity: 1;\n\ttransition: opacity .2s;\n}\n\n#waifu-tips span {\n\tcolor: #0099cc;\n}\n\n#waifu #live2d {\n\tcursor: grab;\n\theight: 300px;\n\tposition: relative;\n\twidth: 300px;\n}\n\n#waifu #live2d:active {\n\tcursor: grabbing;\n}\n\n#waifu-tool {\n\tcolor: #aaa;\n\topacity: 0;\n\tposition: absolute;\n\tright: -10px;\n\ttop: 55px;\n\ttransition: opacity 1s;\n}\n\n#waifu:hover #waifu-tool {\n\topacity: 1;\n}\n\n#waifu-tool span {\n\tcolor: #7b8c9d;\n\tcursor: pointer;\n\tdisplay: block;\n\tline-height: 30px;\n\ttext-align: center;\n\ttransition: color .3s;\n}\n\n#waifu-tool span:hover {\n\tcolor: #0684bd; /* #34495e */\n}\n\n@keyframes shake {\n\t2% {\n\t\ttransform: translate(.5px, -1.5px) rotate(-.5deg);\n\t}\n\n\t4% {\n\t\ttransform: translate(.5px, 1.5px) rotate(1.5deg);\n\t}\n\n\t6% {\n\t\ttransform: translate(1.5px, 1.5px) rotate(1.5deg);\n\t}\n\n\t8% {\n\t\ttransform: translate(2.5px, 1.5px) rotate(.5deg);\n\t}\n\n\t10% {\n\t\ttransform: translate(.5px, 2.5px) rotate(.5deg);\n\t}\n\n\t12% {\n\t\ttransform: translate(1.5px, 1.5px) rotate(.5deg);\n\t}\n\n\t14% {\n\t\ttransform: translate(.5px, .5px) rotate(.5deg);\n\t}\n\n\t16% {\n\t\ttransform: translate(-1.5px, -.5px) rotate(1.5deg);\n\t}\n\n\t18% {\n\t\ttransform: translate(.5px, .5px) rotate(1.5deg);\n\t}\n\n\t20% {\n\t\ttransform: translate(2.5px, 2.5px) rotate(1.5deg);\n\t}\n\n\t22% {\n\t\ttransform: translate(.5px, -1.5px) rotate(1.5deg);\n\t}\n\n\t24% {\n\t\ttransform: translate(-1.5px, 1.5px) rotate(-.5deg);\n\t}\n\n\t26% {\n\t\ttransform: translate(1.5px, .5px) rotate(1.5deg);\n\t}\n\n\t28% {\n\t\ttransform: translate(-.5px, -.5px) rotate(-.5deg);\n\t}\n\n\t30% {\n\t\ttransform: translate(1.5px, -.5px) rotate(-.5deg);\n\t}\n\n\t32% {\n\t\ttransform: translate(2.5px, -1.5px) rotate(1.5deg);\n\t}\n\n\t34% {\n\t\ttransform: translate(2.5px, 2.5px) rotate(-.5deg);\n\t}\n\n\t36% {\n\t\ttransform: translate(.5px, -1.5px) rotate(.5deg);\n\t}\n\n\t38% {\n\t\ttransform: translate(2.5px, -.5px) rotate(-.5deg);\n\t}\n\n\t40% {\n\t\ttransform: translate(-.5px, 2.5px) rotate(.5deg);\n\t}\n\n\t42% {\n\t\ttransform: translate(-1.5px, 2.5px) rotate(.5deg);\n\t}\n\n\t44% {\n\t\ttransform: translate(-1.5px, 1.5px) rotate(.5deg);\n\t}\n\n\t46% {\n\t\ttransform: translate(1.5px, -.5px) rotate(-.5deg);\n\t}\n\n\t48% {\n\t\ttransform: translate(2.5px, -.5px) rotate(.5deg);\n\t}\n\n\t50% {\n\t\ttransform: translate(-1.5px, 1.5px) rotate(.5deg);\n\t}\n\n\t52% {\n\t\ttransform: translate(-.5px, 1.5px) rotate(.5deg);\n\t}\n\n\t54% {\n\t\ttransform: translate(-1.5px, 1.5px) rotate(.5deg);\n\t}\n\n\t56% {\n\t\ttransform: translate(.5px, 2.5px) rotate(1.5deg);\n\t}\n\n\t58% {\n\t\ttransform: translate(2.5px, 2.5px) rotate(.5deg);\n\t}\n\n\t60% {\n\t\ttransform: translate(2.5px, -1.5px) rotate(1.5deg);\n\t}\n\n\t62% {\n\t\ttransform: translate(-1.5px, .5px) rotate(1.5deg);\n\t}\n\n\t64% {\n\t\ttransform: translate(-1.5px, 1.5px) rotate(1.5deg);\n\t}\n\n\t66% {\n\t\ttransform: translate(.5px, 2.5px) rotate(1.5deg);\n\t}\n\n\t68% {\n\t\ttransform: translate(2.5px, -1.5px) rotate(1.5deg);\n\t}\n\n\t70% {\n\t\ttransform: translate(2.5px, 2.5px) rotate(.5deg);\n\t}\n\n\t72% {\n\t\ttransform: translate(-.5px, -1.5px) rotate(1.5deg);\n\t}\n\n\t74% {\n\t\ttransform: translate(-1.5px, 2.5px) rotate(1.5deg);\n\t}\n\n\t76% {\n\t\ttransform: translate(-1.5px, 2.5px) rotate(1.5deg);\n\t}\n\n\t78% {\n\t\ttransform: translate(-1.5px, 2.5px) rotate(.5deg);\n\t}\n\n\t80% {\n\t\ttransform: translate(-1.5px, .5px) rotate(-.5deg);\n\t}\n\n\t82% {\n\t\ttransform: translate(-1.5px, .5px) rotate(-.5deg);\n\t}\n\n\t84% {\n\t\ttransform: translate(-.5px, .5px) rotate(1.5deg);\n\t}\n\n\t86% {\n\t\ttransform: translate(2.5px, 1.5px) rotate(.5deg);\n\t}\n\n\t88% {\n\t\ttransform: translate(-1.5px, .5px) rotate(1.5deg);\n\t}\n\n\t90% {\n\t\ttransform: translate(-1.5px, -.5px) rotate(-.5deg);\n\t}\n\n\t92% {\n\t\ttransform: translate(-1.5px, -1.5px) rotate(1.5deg);\n\t}\n\n\t94% {\n\t\ttransform: translate(.5px, .5px) rotate(-.5deg);\n\t}\n\n\t96% {\n\t\ttransform: translate(2.5px, -.5px) rotate(-.5deg);\n\t}\n\n\t98% {\n\t\ttransform: translate(-1.5px, -1.5px) rotate(-.5deg);\n\t}\n\n\t0%, 100% {\n\t\ttransform: translate(0, 0) rotate(0);\n\t}\n}\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"cover":"https://blog.huangge1199.cn/images/bg.jpeg","excerpt":"","more":"#waifu-toggle {\n\tbackground-color: #fa0;\n\tborder-radius: 5px;\n\tbottom: 66px;\n\tcolor: #fff;\n\tcursor: pointer;\n\tfont-size: 12px;\n\tleft: 0;\n\tmargin-left: -100px;\n\tpadding: 5px 2px 5px 5px;\n\tposition: fixed;\n\ttransition: margin-left 1s;\n\twidth: 60px;\n\twriting-mode: vertical-rl;\n\tz-index: 1000;\n}\n\n#waifu-toggle.waifu-toggle-active {\n\tmargin-left: -50px;\n}\n\n#waifu-toggle.waifu-toggle-active:hover {\n\tmargin-left: -30px;\n}\n\n#waifu {\n\tbottom: -1000px;\n\tleft: 100px;\n\tline-height: 0;\n\tmargin-bottom: -10px;\n\tposition: fixed;\n\ttransform: translateY(3px);\n\ttransition: transform .3s ease-in-out, bottom 3s ease-in-out;\n\tz-index: 1000;\n}\n\n#waifu:hover {\n\ttransform: translateY(0);\n}\n\n#waifu-tips {\n\tanimation: shake 50s ease-in-out 5s infinite;\n\tbackground-color: rgba(236, 217, 188, .5);\n\tborder: 1px solid rgba(224, 186, 140, .62);\n\tborder-radius: 12px;\n\tbox-shadow: 0 3px 15px 2px rgba(191, 158, 118, .2);\n\tfont-size: 14px;\n\tline-height: 24px;\n\tmargin: -30px 20px;\n\tmin-height: 70px;\n\topacity: 0;\n\toverflow: hidden;\n\tpadding: 5px 10px;\n\tposition: absolute;\n\ttext-overflow: ellipsis;\n\ttransition: opacity 1s;\n\twidth: 250px;\n\tword-break: break-all;\n}\n\n#waifu-tips.waifu-tips-active {\n\topacity: 1;\n\ttransition: opacity .2s;\n}\n\n#waifu-tips span {\n\tcolor: #0099cc;\n}\n\n#waifu #live2d {\n\tcursor: grab;\n\theight: 300px;\n\tposition: relative;\n\twidth: 300px;\n}\n\n#waifu #live2d:active {\n\tcursor: grabbing;\n}\n\n#waifu-tool {\n\tcolor: #aaa;\n\topacity: 0;\n\tposition: absolute;\n\tright: -10px;\n\ttop: 55px;\n\ttransition: opacity 1s;\n}\n\n#waifu:hover #waifu-tool {\n\topacity: 1;\n}\n\n#waifu-tool span {\n\tcolor: #7b8c9d;\n\tcursor: pointer;\n\tdisplay: block;\n\tline-height: 30px;\n\ttext-align: center;\n\ttransition: color .3s;\n}\n\n#waifu-tool span:hover {\n\tcolor: #0684bd; /* #34495e */\n}\n\n@keyframes shake {\n\t2% {\n\t\ttransform: translate(.5px, -1.5px) rotate(-.5deg);\n\t}\n\n\t4% {\n\t\ttransform: translate(.5px, 1.5px) rotate(1.5deg);\n\t}\n\n\t6% {\n\t\ttransform: translate(1.5px, 1.5px) rotate(1.5deg);\n\t}\n\n\t8% {\n\t\ttransform: translate(2.5px, 1.5px) rotate(.5deg);\n\t}\n\n\t10% {\n\t\ttransform: translate(.5px, 2.5px) rotate(.5deg);\n\t}\n\n\t12% {\n\t\ttransform: translate(1.5px, 1.5px) rotate(.5deg);\n\t}\n\n\t14% {\n\t\ttransform: translate(.5px, .5px) rotate(.5deg);\n\t}\n\n\t16% {\n\t\ttransform: translate(-1.5px, -.5px) rotate(1.5deg);\n\t}\n\n\t18% {\n\t\ttransform: translate(.5px, .5px) rotate(1.5deg);\n\t}\n\n\t20% {\n\t\ttransform: translate(2.5px, 2.5px) rotate(1.5deg);\n\t}\n\n\t22% {\n\t\ttransform: translate(.5px, -1.5px) rotate(1.5deg);\n\t}\n\n\t24% {\n\t\ttransform: translate(-1.5px, 1.5px) rotate(-.5deg);\n\t}\n\n\t26% {\n\t\ttransform: translate(1.5px, .5px) rotate(1.5deg);\n\t}\n\n\t28% {\n\t\ttransform: translate(-.5px, -.5px) rotate(-.5deg);\n\t}\n\n\t30% {\n\t\ttransform: translate(1.5px, -.5px) rotate(-.5deg);\n\t}\n\n\t32% {\n\t\ttransform: translate(2.5px, -1.5px) rotate(1.5deg);\n\t}\n\n\t34% {\n\t\ttransform: translate(2.5px, 2.5px) rotate(-.5deg);\n\t}\n\n\t36% {\n\t\ttransform: translate(.5px, -1.5px) rotate(.5deg);\n\t}\n\n\t38% {\n\t\ttransform: translate(2.5px, -.5px) rotate(-.5deg);\n\t}\n\n\t40% {\n\t\ttransform: translate(-.5px, 2.5px) rotate(.5deg);\n\t}\n\n\t42% {\n\t\ttransform: translate(-1.5px, 2.5px) rotate(.5deg);\n\t}\n\n\t44% {\n\t\ttransform: translate(-1.5px, 1.5px) rotate(.5deg);\n\t}\n\n\t46% {\n\t\ttransform: translate(1.5px, -.5px) rotate(-.5deg);\n\t}\n\n\t48% {\n\t\ttransform: translate(2.5px, -.5px) rotate(.5deg);\n\t}\n\n\t50% {\n\t\ttransform: translate(-1.5px, 1.5px) rotate(.5deg);\n\t}\n\n\t52% {\n\t\ttransform: translate(-.5px, 1.5px) rotate(.5deg);\n\t}\n\n\t54% {\n\t\ttransform: translate(-1.5px, 1.5px) rotate(.5deg);\n\t}\n\n\t56% {\n\t\ttransform: translate(.5px, 2.5px) rotate(1.5deg);\n\t}\n\n\t58% {\n\t\ttransform: translate(2.5px, 2.5px) rotate(.5deg);\n\t}\n\n\t60% {\n\t\ttransform: translate(2.5px, -1.5px) rotate(1.5deg);\n\t}\n\n\t62% {\n\t\ttransform: translate(-1.5px, .5px) rotate(1.5deg);\n\t}\n\n\t64% {\n\t\ttransform: translate(-1.5px, 1.5px) rotate(1.5deg);\n\t}\n\n\t66% {\n\t\ttransform: translate(.5px, 2.5px) rotate(1.5deg);\n\t}\n\n\t68% {\n\t\ttransform: translate(2.5px, -1.5px) rotate(1.5deg);\n\t}\n\n\t70% {\n\t\ttransform: translate(2.5px, 2.5px) rotate(.5deg);\n\t}\n\n\t72% {\n\t\ttransform: translate(-.5px, -1.5px) rotate(1.5deg);\n\t}\n\n\t74% {\n\t\ttransform: translate(-1.5px, 2.5px) rotate(1.5deg);\n\t}\n\n\t76% {\n\t\ttransform: translate(-1.5px, 2.5px) rotate(1.5deg);\n\t}\n\n\t78% {\n\t\ttransform: translate(-1.5px, 2.5px) rotate(.5deg);\n\t}\n\n\t80% {\n\t\ttransform: translate(-1.5px, .5px) rotate(-.5deg);\n\t}\n\n\t82% {\n\t\ttransform: translate(-1.5px, .5px) rotate(-.5deg);\n\t}\n\n\t84% {\n\t\ttransform: translate(-.5px, .5px) rotate(1.5deg);\n\t}\n\n\t86% {\n\t\ttransform: translate(2.5px, 1.5px) rotate(.5deg);\n\t}\n\n\t88% {\n\t\ttransform: translate(-1.5px, .5px) rotate(1.5deg);\n\t}\n\n\t90% {\n\t\ttransform: translate(-1.5px, -.5px) rotate(-.5deg);\n\t}\n\n\t92% {\n\t\ttransform: translate(-1.5px, -1.5px) rotate(1.5deg);\n\t}\n\n\t94% {\n\t\ttransform: translate(.5px, .5px) rotate(-.5deg);\n\t}\n\n\t96% {\n\t\ttransform: translate(2.5px, -.5px) rotate(-.5deg);\n\t}\n\n\t98% {\n\t\ttransform: translate(-1.5px, -1.5px) rotate(-.5deg);\n\t}\n\n\t0%, 100% {\n\t\ttransform: translate(0, 0) rotate(0);\n\t}\n}\n"},{"_content":"#waifu-toggle {\n\tbackground-color: #fa0;\n\tborder-radius: 5px;\n\tbottom: 66px;\n\tcolor: #fff;\n\tcursor: pointer;\n\tfont-size: 12px;\n\tright: 0px;\n\tmargin-right: -100px;\n\tpadding: 5px 2px 5px 5px;\n\tposition: fixed;\n\ttransition: margin-right 1s;\n\twidth: 60px;\n\twriting-mode: vertical-lr;\n\tz-index: 1000;\n}\n\n#waifu-toggle.waifu-toggle-active {\n\tmargin-right: -40px;\n}\n\n#waifu-toggle.waifu-toggle-active:hover {\n\tmargin-right: -20px;\n}\n\n#waifu {\n\tbottom: -1000px;\n\tright: 100px;\n\tline-height: 0;\n\tmargin-bottom: -10px;\n\tposition: fixed;\n\ttransform: translateY(3px);\n\ttransition: transform .3s ease-in-out, bottom 3s ease-in-out;\n\tz-index: 1000;\n}\n\n#waifu:hover {\n\ttransform: translateY(0);\n}\n\n#waifu-tips {\n\tanimation: shake 50s ease-in-out 5s infinite;\n\tbackground-color: rgba(236, 217, 188, .5);\n\tborder: 1px solid rgba(224, 186, 140, .62);\n\tborder-radius: 12px;\n\tbox-shadow: 0 3px 15px 2px rgba(191, 158, 118, .2);\n\tfont-size: 14px;\n\tline-height: 24px;\n\tmargin: -30px 20px;\n\tmin-height: 70px;\n\topacity: 0;\n\toverflow: hidden;\n\tpadding: 5px 10px;\n\tposition: absolute;\n\ttext-overflow: ellipsis;\n\ttransition: opacity 1s;\n\twidth: 250px;\n\tword-break: break-all;\n}\n\n#waifu-tips.waifu-tips-active {\n\topacity: 1;\n\ttransition: opacity .2s;\n}\n\n#waifu-tips span {\n\tcolor: #0099cc;\n}\n\n#waifu #live2d {\n\tcursor: grab;\n\theight: 300px;\n\tposition: relative;\n\twidth: 300px;\n}\n\n#waifu #live2d:active {\n\tcursor: grabbing;\n}\n\n#waifu-tool {\n\tcolor: #aaa;\n\topacity: 0;\n\tposition: absolute;\n\tleft: 10px;\n\ttop: 55px;\n\ttransition: opacity 1s;\n}\n\n#waifu:hover #waifu-tool {\n\topacity: 1;\n}\n\n#waifu-tool span {\n\tcolor: #7b8c9d;\n\tcursor: pointer;\n\tdisplay: block;\n\tline-height: 30px;\n\ttext-align: center;\n\ttransition: color .3s;\n}\n\n#waifu-tool span:hover {\n\tcolor: #0684bd; /* #34495e */\n}\n\n@keyframes shake {\n\t2% {\n\t\ttransform: translate(.5px, -1.5px) rotate(-.5deg);\n\t}\n\n\t4% {\n\t\ttransform: translate(.5px, 1.5px) rotate(1.5deg);\n\t}\n\n\t6% {\n\t\ttransform: translate(1.5px, 1.5px) rotate(1.5deg);\n\t}\n\n\t8% {\n\t\ttransform: translate(2.5px, 1.5px) rotate(.5deg);\n\t}\n\n\t10% {\n\t\ttransform: translate(.5px, 2.5px) rotate(.5deg);\n\t}\n\n\t12% {\n\t\ttransform: translate(1.5px, 1.5px) rotate(.5deg);\n\t}\n\n\t14% {\n\t\ttransform: translate(.5px, .5px) rotate(.5deg);\n\t}\n\n\t16% {\n\t\ttransform: translate(-1.5px, -.5px) rotate(1.5deg);\n\t}\n\n\t18% {\n\t\ttransform: translate(.5px, .5px) rotate(1.5deg);\n\t}\n\n\t20% {\n\t\ttransform: translate(2.5px, 2.5px) rotate(1.5deg);\n\t}\n\n\t22% {\n\t\ttransform: translate(.5px, -1.5px) rotate(1.5deg);\n\t}\n\n\t24% {\n\t\ttransform: translate(-1.5px, 1.5px) rotate(-.5deg);\n\t}\n\n\t26% {\n\t\ttransform: translate(1.5px, .5px) rotate(1.5deg);\n\t}\n\n\t28% {\n\t\ttransform: translate(-.5px, -.5px) rotate(-.5deg);\n\t}\n\n\t30% {\n\t\ttransform: translate(1.5px, -.5px) rotate(-.5deg);\n\t}\n\n\t32% {\n\t\ttransform: translate(2.5px, -1.5px) rotate(1.5deg);\n\t}\n\n\t34% {\n\t\ttransform: translate(2.5px, 2.5px) rotate(-.5deg);\n\t}\n\n\t36% {\n\t\ttransform: translate(.5px, -1.5px) rotate(.5deg);\n\t}\n\n\t38% {\n\t\ttransform: translate(2.5px, -.5px) rotate(-.5deg);\n\t}\n\n\t40% {\n\t\ttransform: translate(-.5px, 2.5px) rotate(.5deg);\n\t}\n\n\t42% {\n\t\ttransform: translate(-1.5px, 2.5px) rotate(.5deg);\n\t}\n\n\t44% {\n\t\ttransform: translate(-1.5px, 1.5px) rotate(.5deg);\n\t}\n\n\t46% {\n\t\ttransform: translate(1.5px, -.5px) rotate(-.5deg);\n\t}\n\n\t48% {\n\t\ttransform: translate(2.5px, -.5px) rotate(.5deg);\n\t}\n\n\t50% {\n\t\ttransform: translate(-1.5px, 1.5px) rotate(.5deg);\n\t}\n\n\t52% {\n\t\ttransform: translate(-.5px, 1.5px) rotate(.5deg);\n\t}\n\n\t54% {\n\t\ttransform: translate(-1.5px, 1.5px) rotate(.5deg);\n\t}\n\n\t56% {\n\t\ttransform: translate(.5px, 2.5px) rotate(1.5deg);\n\t}\n\n\t58% {\n\t\ttransform: translate(2.5px, 2.5px) rotate(.5deg);\n\t}\n\n\t60% {\n\t\ttransform: translate(2.5px, -1.5px) rotate(1.5deg);\n\t}\n\n\t62% {\n\t\ttransform: translate(-1.5px, .5px) rotate(1.5deg);\n\t}\n\n\t64% {\n\t\ttransform: translate(-1.5px, 1.5px) rotate(1.5deg);\n\t}\n\n\t66% {\n\t\ttransform: translate(.5px, 2.5px) rotate(1.5deg);\n\t}\n\n\t68% {\n\t\ttransform: translate(2.5px, -1.5px) rotate(1.5deg);\n\t}\n\n\t70% {\n\t\ttransform: translate(2.5px, 2.5px) rotate(.5deg);\n\t}\n\n\t72% {\n\t\ttransform: translate(-.5px, -1.5px) rotate(1.5deg);\n\t}\n\n\t74% {\n\t\ttransform: translate(-1.5px, 2.5px) rotate(1.5deg);\n\t}\n\n\t76% {\n\t\ttransform: translate(-1.5px, 2.5px) rotate(1.5deg);\n\t}\n\n\t78% {\n\t\ttransform: translate(-1.5px, 2.5px) rotate(.5deg);\n\t}\n\n\t80% {\n\t\ttransform: translate(-1.5px, .5px) rotate(-.5deg);\n\t}\n\n\t82% {\n\t\ttransform: translate(-1.5px, .5px) rotate(-.5deg);\n\t}\n\n\t84% {\n\t\ttransform: translate(-.5px, .5px) rotate(1.5deg);\n\t}\n\n\t86% {\n\t\ttransform: translate(2.5px, 1.5px) rotate(.5deg);\n\t}\n\n\t88% {\n\t\ttransform: translate(-1.5px, .5px) rotate(1.5deg);\n\t}\n\n\t90% {\n\t\ttransform: translate(-1.5px, -.5px) rotate(-.5deg);\n\t}\n\n\t92% {\n\t\ttransform: translate(-1.5px, -1.5px) rotate(1.5deg);\n\t}\n\n\t94% {\n\t\ttransform: translate(.5px, .5px) rotate(-.5deg);\n\t}\n\n\t96% {\n\t\ttransform: translate(2.5px, -.5px) rotate(-.5deg);\n\t}\n\n\t98% {\n\t\ttransform: translate(-1.5px, -1.5px) rotate(-.5deg);\n\t}\n\n\t0%, 100% {\n\t\ttransform: translate(0, 0) rotate(0);\n\t}\n}\n","source":"live2d-widget/waifu_right.css","raw":"#waifu-toggle {\n\tbackground-color: #fa0;\n\tborder-radius: 5px;\n\tbottom: 66px;\n\tcolor: #fff;\n\tcursor: pointer;\n\tfont-size: 12px;\n\tright: 0px;\n\tmargin-right: -100px;\n\tpadding: 5px 2px 5px 5px;\n\tposition: fixed;\n\ttransition: margin-right 1s;\n\twidth: 60px;\n\twriting-mode: vertical-lr;\n\tz-index: 1000;\n}\n\n#waifu-toggle.waifu-toggle-active {\n\tmargin-right: -40px;\n}\n\n#waifu-toggle.waifu-toggle-active:hover {\n\tmargin-right: -20px;\n}\n\n#waifu {\n\tbottom: -1000px;\n\tright: 100px;\n\tline-height: 0;\n\tmargin-bottom: -10px;\n\tposition: fixed;\n\ttransform: translateY(3px);\n\ttransition: transform .3s ease-in-out, bottom 3s ease-in-out;\n\tz-index: 1000;\n}\n\n#waifu:hover {\n\ttransform: translateY(0);\n}\n\n#waifu-tips {\n\tanimation: shake 50s ease-in-out 5s infinite;\n\tbackground-color: rgba(236, 217, 188, .5);\n\tborder: 1px solid rgba(224, 186, 140, .62);\n\tborder-radius: 12px;\n\tbox-shadow: 0 3px 15px 2px rgba(191, 158, 118, .2);\n\tfont-size: 14px;\n\tline-height: 24px;\n\tmargin: -30px 20px;\n\tmin-height: 70px;\n\topacity: 0;\n\toverflow: hidden;\n\tpadding: 5px 10px;\n\tposition: absolute;\n\ttext-overflow: ellipsis;\n\ttransition: opacity 1s;\n\twidth: 250px;\n\tword-break: break-all;\n}\n\n#waifu-tips.waifu-tips-active {\n\topacity: 1;\n\ttransition: opacity .2s;\n}\n\n#waifu-tips span {\n\tcolor: #0099cc;\n}\n\n#waifu #live2d {\n\tcursor: grab;\n\theight: 300px;\n\tposition: relative;\n\twidth: 300px;\n}\n\n#waifu #live2d:active {\n\tcursor: grabbing;\n}\n\n#waifu-tool {\n\tcolor: #aaa;\n\topacity: 0;\n\tposition: absolute;\n\tleft: 10px;\n\ttop: 55px;\n\ttransition: opacity 1s;\n}\n\n#waifu:hover #waifu-tool {\n\topacity: 1;\n}\n\n#waifu-tool span {\n\tcolor: #7b8c9d;\n\tcursor: pointer;\n\tdisplay: block;\n\tline-height: 30px;\n\ttext-align: center;\n\ttransition: color .3s;\n}\n\n#waifu-tool span:hover {\n\tcolor: #0684bd; /* #34495e */\n}\n\n@keyframes shake {\n\t2% {\n\t\ttransform: translate(.5px, -1.5px) rotate(-.5deg);\n\t}\n\n\t4% {\n\t\ttransform: translate(.5px, 1.5px) rotate(1.5deg);\n\t}\n\n\t6% {\n\t\ttransform: translate(1.5px, 1.5px) rotate(1.5deg);\n\t}\n\n\t8% {\n\t\ttransform: translate(2.5px, 1.5px) rotate(.5deg);\n\t}\n\n\t10% {\n\t\ttransform: translate(.5px, 2.5px) rotate(.5deg);\n\t}\n\n\t12% {\n\t\ttransform: translate(1.5px, 1.5px) rotate(.5deg);\n\t}\n\n\t14% {\n\t\ttransform: translate(.5px, .5px) rotate(.5deg);\n\t}\n\n\t16% {\n\t\ttransform: translate(-1.5px, -.5px) rotate(1.5deg);\n\t}\n\n\t18% {\n\t\ttransform: translate(.5px, .5px) rotate(1.5deg);\n\t}\n\n\t20% {\n\t\ttransform: translate(2.5px, 2.5px) rotate(1.5deg);\n\t}\n\n\t22% {\n\t\ttransform: translate(.5px, -1.5px) rotate(1.5deg);\n\t}\n\n\t24% {\n\t\ttransform: translate(-1.5px, 1.5px) rotate(-.5deg);\n\t}\n\n\t26% {\n\t\ttransform: translate(1.5px, .5px) rotate(1.5deg);\n\t}\n\n\t28% {\n\t\ttransform: translate(-.5px, -.5px) rotate(-.5deg);\n\t}\n\n\t30% {\n\t\ttransform: translate(1.5px, -.5px) rotate(-.5deg);\n\t}\n\n\t32% {\n\t\ttransform: translate(2.5px, -1.5px) rotate(1.5deg);\n\t}\n\n\t34% {\n\t\ttransform: translate(2.5px, 2.5px) rotate(-.5deg);\n\t}\n\n\t36% {\n\t\ttransform: translate(.5px, -1.5px) rotate(.5deg);\n\t}\n\n\t38% {\n\t\ttransform: translate(2.5px, -.5px) rotate(-.5deg);\n\t}\n\n\t40% {\n\t\ttransform: translate(-.5px, 2.5px) rotate(.5deg);\n\t}\n\n\t42% {\n\t\ttransform: translate(-1.5px, 2.5px) rotate(.5deg);\n\t}\n\n\t44% {\n\t\ttransform: translate(-1.5px, 1.5px) rotate(.5deg);\n\t}\n\n\t46% {\n\t\ttransform: translate(1.5px, -.5px) rotate(-.5deg);\n\t}\n\n\t48% {\n\t\ttransform: translate(2.5px, -.5px) rotate(.5deg);\n\t}\n\n\t50% {\n\t\ttransform: translate(-1.5px, 1.5px) rotate(.5deg);\n\t}\n\n\t52% {\n\t\ttransform: translate(-.5px, 1.5px) rotate(.5deg);\n\t}\n\n\t54% {\n\t\ttransform: translate(-1.5px, 1.5px) rotate(.5deg);\n\t}\n\n\t56% {\n\t\ttransform: translate(.5px, 2.5px) rotate(1.5deg);\n\t}\n\n\t58% {\n\t\ttransform: translate(2.5px, 2.5px) rotate(.5deg);\n\t}\n\n\t60% {\n\t\ttransform: translate(2.5px, -1.5px) rotate(1.5deg);\n\t}\n\n\t62% {\n\t\ttransform: translate(-1.5px, .5px) rotate(1.5deg);\n\t}\n\n\t64% {\n\t\ttransform: translate(-1.5px, 1.5px) rotate(1.5deg);\n\t}\n\n\t66% {\n\t\ttransform: translate(.5px, 2.5px) rotate(1.5deg);\n\t}\n\n\t68% {\n\t\ttransform: translate(2.5px, -1.5px) rotate(1.5deg);\n\t}\n\n\t70% {\n\t\ttransform: translate(2.5px, 2.5px) rotate(.5deg);\n\t}\n\n\t72% {\n\t\ttransform: translate(-.5px, -1.5px) rotate(1.5deg);\n\t}\n\n\t74% {\n\t\ttransform: translate(-1.5px, 2.5px) rotate(1.5deg);\n\t}\n\n\t76% {\n\t\ttransform: translate(-1.5px, 2.5px) rotate(1.5deg);\n\t}\n\n\t78% {\n\t\ttransform: translate(-1.5px, 2.5px) rotate(.5deg);\n\t}\n\n\t80% {\n\t\ttransform: translate(-1.5px, .5px) rotate(-.5deg);\n\t}\n\n\t82% {\n\t\ttransform: translate(-1.5px, .5px) rotate(-.5deg);\n\t}\n\n\t84% {\n\t\ttransform: translate(-.5px, .5px) rotate(1.5deg);\n\t}\n\n\t86% {\n\t\ttransform: translate(2.5px, 1.5px) rotate(.5deg);\n\t}\n\n\t88% {\n\t\ttransform: translate(-1.5px, .5px) rotate(1.5deg);\n\t}\n\n\t90% {\n\t\ttransform: translate(-1.5px, -.5px) rotate(-.5deg);\n\t}\n\n\t92% {\n\t\ttransform: translate(-1.5px, -1.5px) rotate(1.5deg);\n\t}\n\n\t94% {\n\t\ttransform: translate(.5px, .5px) rotate(-.5deg);\n\t}\n\n\t96% {\n\t\ttransform: translate(2.5px, -.5px) rotate(-.5deg);\n\t}\n\n\t98% {\n\t\ttransform: translate(-1.5px, -1.5px) rotate(-.5deg);\n\t}\n\n\t0%, 100% {\n\t\ttransform: translate(0, 0) rotate(0);\n\t}\n}\n","date":"2022-06-06T15:39:11.497Z","updated":"2022-06-03T06:00:55.633Z","path":"live2d-widget/waifu_right.css","layout":"false","title":"","comments":1,"_id":"cl42z5h66001c3gn67fah2ibk","content":"#waifu-toggle {\n\tbackground-color: #fa0;\n\tborder-radius: 5px;\n\tbottom: 66px;\n\tcolor: #fff;\n\tcursor: pointer;\n\tfont-size: 12px;\n\tright: 0px;\n\tmargin-right: -100px;\n\tpadding: 5px 2px 5px 5px;\n\tposition: fixed;\n\ttransition: margin-right 1s;\n\twidth: 60px;\n\twriting-mode: vertical-lr;\n\tz-index: 1000;\n}\n\n#waifu-toggle.waifu-toggle-active {\n\tmargin-right: -40px;\n}\n\n#waifu-toggle.waifu-toggle-active:hover {\n\tmargin-right: -20px;\n}\n\n#waifu {\n\tbottom: -1000px;\n\tright: 100px;\n\tline-height: 0;\n\tmargin-bottom: -10px;\n\tposition: fixed;\n\ttransform: translateY(3px);\n\ttransition: transform .3s ease-in-out, bottom 3s ease-in-out;\n\tz-index: 1000;\n}\n\n#waifu:hover {\n\ttransform: translateY(0);\n}\n\n#waifu-tips {\n\tanimation: shake 50s ease-in-out 5s infinite;\n\tbackground-color: rgba(236, 217, 188, .5);\n\tborder: 1px solid rgba(224, 186, 140, .62);\n\tborder-radius: 12px;\n\tbox-shadow: 0 3px 15px 2px rgba(191, 158, 118, .2);\n\tfont-size: 14px;\n\tline-height: 24px;\n\tmargin: -30px 20px;\n\tmin-height: 70px;\n\topacity: 0;\n\toverflow: hidden;\n\tpadding: 5px 10px;\n\tposition: absolute;\n\ttext-overflow: ellipsis;\n\ttransition: opacity 1s;\n\twidth: 250px;\n\tword-break: break-all;\n}\n\n#waifu-tips.waifu-tips-active {\n\topacity: 1;\n\ttransition: opacity .2s;\n}\n\n#waifu-tips span {\n\tcolor: #0099cc;\n}\n\n#waifu #live2d {\n\tcursor: grab;\n\theight: 300px;\n\tposition: relative;\n\twidth: 300px;\n}\n\n#waifu #live2d:active {\n\tcursor: grabbing;\n}\n\n#waifu-tool {\n\tcolor: #aaa;\n\topacity: 0;\n\tposition: absolute;\n\tleft: 10px;\n\ttop: 55px;\n\ttransition: opacity 1s;\n}\n\n#waifu:hover #waifu-tool {\n\topacity: 1;\n}\n\n#waifu-tool span {\n\tcolor: #7b8c9d;\n\tcursor: pointer;\n\tdisplay: block;\n\tline-height: 30px;\n\ttext-align: center;\n\ttransition: color .3s;\n}\n\n#waifu-tool span:hover {\n\tcolor: #0684bd; /* #34495e */\n}\n\n@keyframes shake {\n\t2% {\n\t\ttransform: translate(.5px, -1.5px) rotate(-.5deg);\n\t}\n\n\t4% {\n\t\ttransform: translate(.5px, 1.5px) rotate(1.5deg);\n\t}\n\n\t6% {\n\t\ttransform: translate(1.5px, 1.5px) rotate(1.5deg);\n\t}\n\n\t8% {\n\t\ttransform: translate(2.5px, 1.5px) rotate(.5deg);\n\t}\n\n\t10% {\n\t\ttransform: translate(.5px, 2.5px) rotate(.5deg);\n\t}\n\n\t12% {\n\t\ttransform: translate(1.5px, 1.5px) rotate(.5deg);\n\t}\n\n\t14% {\n\t\ttransform: translate(.5px, .5px) rotate(.5deg);\n\t}\n\n\t16% {\n\t\ttransform: translate(-1.5px, -.5px) rotate(1.5deg);\n\t}\n\n\t18% {\n\t\ttransform: translate(.5px, .5px) rotate(1.5deg);\n\t}\n\n\t20% {\n\t\ttransform: translate(2.5px, 2.5px) rotate(1.5deg);\n\t}\n\n\t22% {\n\t\ttransform: translate(.5px, -1.5px) rotate(1.5deg);\n\t}\n\n\t24% {\n\t\ttransform: translate(-1.5px, 1.5px) rotate(-.5deg);\n\t}\n\n\t26% {\n\t\ttransform: translate(1.5px, .5px) rotate(1.5deg);\n\t}\n\n\t28% {\n\t\ttransform: translate(-.5px, -.5px) rotate(-.5deg);\n\t}\n\n\t30% {\n\t\ttransform: translate(1.5px, -.5px) rotate(-.5deg);\n\t}\n\n\t32% {\n\t\ttransform: translate(2.5px, -1.5px) rotate(1.5deg);\n\t}\n\n\t34% {\n\t\ttransform: translate(2.5px, 2.5px) rotate(-.5deg);\n\t}\n\n\t36% {\n\t\ttransform: translate(.5px, -1.5px) rotate(.5deg);\n\t}\n\n\t38% {\n\t\ttransform: translate(2.5px, -.5px) rotate(-.5deg);\n\t}\n\n\t40% {\n\t\ttransform: translate(-.5px, 2.5px) rotate(.5deg);\n\t}\n\n\t42% {\n\t\ttransform: translate(-1.5px, 2.5px) rotate(.5deg);\n\t}\n\n\t44% {\n\t\ttransform: translate(-1.5px, 1.5px) rotate(.5deg);\n\t}\n\n\t46% {\n\t\ttransform: translate(1.5px, -.5px) rotate(-.5deg);\n\t}\n\n\t48% {\n\t\ttransform: translate(2.5px, -.5px) rotate(.5deg);\n\t}\n\n\t50% {\n\t\ttransform: translate(-1.5px, 1.5px) rotate(.5deg);\n\t}\n\n\t52% {\n\t\ttransform: translate(-.5px, 1.5px) rotate(.5deg);\n\t}\n\n\t54% {\n\t\ttransform: translate(-1.5px, 1.5px) rotate(.5deg);\n\t}\n\n\t56% {\n\t\ttransform: translate(.5px, 2.5px) rotate(1.5deg);\n\t}\n\n\t58% {\n\t\ttransform: translate(2.5px, 2.5px) rotate(.5deg);\n\t}\n\n\t60% {\n\t\ttransform: translate(2.5px, -1.5px) rotate(1.5deg);\n\t}\n\n\t62% {\n\t\ttransform: translate(-1.5px, .5px) rotate(1.5deg);\n\t}\n\n\t64% {\n\t\ttransform: translate(-1.5px, 1.5px) rotate(1.5deg);\n\t}\n\n\t66% {\n\t\ttransform: translate(.5px, 2.5px) rotate(1.5deg);\n\t}\n\n\t68% {\n\t\ttransform: translate(2.5px, -1.5px) rotate(1.5deg);\n\t}\n\n\t70% {\n\t\ttransform: translate(2.5px, 2.5px) rotate(.5deg);\n\t}\n\n\t72% {\n\t\ttransform: translate(-.5px, -1.5px) rotate(1.5deg);\n\t}\n\n\t74% {\n\t\ttransform: translate(-1.5px, 2.5px) rotate(1.5deg);\n\t}\n\n\t76% {\n\t\ttransform: translate(-1.5px, 2.5px) rotate(1.5deg);\n\t}\n\n\t78% {\n\t\ttransform: translate(-1.5px, 2.5px) rotate(.5deg);\n\t}\n\n\t80% {\n\t\ttransform: translate(-1.5px, .5px) rotate(-.5deg);\n\t}\n\n\t82% {\n\t\ttransform: translate(-1.5px, .5px) rotate(-.5deg);\n\t}\n\n\t84% {\n\t\ttransform: translate(-.5px, .5px) rotate(1.5deg);\n\t}\n\n\t86% {\n\t\ttransform: translate(2.5px, 1.5px) rotate(.5deg);\n\t}\n\n\t88% {\n\t\ttransform: translate(-1.5px, .5px) rotate(1.5deg);\n\t}\n\n\t90% {\n\t\ttransform: translate(-1.5px, -.5px) rotate(-.5deg);\n\t}\n\n\t92% {\n\t\ttransform: translate(-1.5px, -1.5px) rotate(1.5deg);\n\t}\n\n\t94% {\n\t\ttransform: translate(.5px, .5px) rotate(-.5deg);\n\t}\n\n\t96% {\n\t\ttransform: translate(2.5px, -.5px) rotate(-.5deg);\n\t}\n\n\t98% {\n\t\ttransform: translate(-1.5px, -1.5px) rotate(-.5deg);\n\t}\n\n\t0%, 100% {\n\t\ttransform: translate(0, 0) rotate(0);\n\t}\n}\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"cover":"https://blog.huangge1199.cn/post/pyControl/bg.jpeg","excerpt":"","more":"#waifu-toggle {\n\tbackground-color: #fa0;\n\tborder-radius: 5px;\n\tbottom: 66px;\n\tcolor: #fff;\n\tcursor: pointer;\n\tfont-size: 12px;\n\tright: 0px;\n\tmargin-right: -100px;\n\tpadding: 5px 2px 5px 5px;\n\tposition: fixed;\n\ttransition: margin-right 1s;\n\twidth: 60px;\n\twriting-mode: vertical-lr;\n\tz-index: 1000;\n}\n\n#waifu-toggle.waifu-toggle-active {\n\tmargin-right: -40px;\n}\n\n#waifu-toggle.waifu-toggle-active:hover {\n\tmargin-right: -20px;\n}\n\n#waifu {\n\tbottom: -1000px;\n\tright: 100px;\n\tline-height: 0;\n\tmargin-bottom: -10px;\n\tposition: fixed;\n\ttransform: translateY(3px);\n\ttransition: transform .3s ease-in-out, bottom 3s ease-in-out;\n\tz-index: 1000;\n}\n\n#waifu:hover {\n\ttransform: translateY(0);\n}\n\n#waifu-tips {\n\tanimation: shake 50s ease-in-out 5s infinite;\n\tbackground-color: rgba(236, 217, 188, .5);\n\tborder: 1px solid rgba(224, 186, 140, .62);\n\tborder-radius: 12px;\n\tbox-shadow: 0 3px 15px 2px rgba(191, 158, 118, .2);\n\tfont-size: 14px;\n\tline-height: 24px;\n\tmargin: -30px 20px;\n\tmin-height: 70px;\n\topacity: 0;\n\toverflow: hidden;\n\tpadding: 5px 10px;\n\tposition: absolute;\n\ttext-overflow: ellipsis;\n\ttransition: opacity 1s;\n\twidth: 250px;\n\tword-break: break-all;\n}\n\n#waifu-tips.waifu-tips-active {\n\topacity: 1;\n\ttransition: opacity .2s;\n}\n\n#waifu-tips span {\n\tcolor: #0099cc;\n}\n\n#waifu #live2d {\n\tcursor: grab;\n\theight: 300px;\n\tposition: relative;\n\twidth: 300px;\n}\n\n#waifu #live2d:active {\n\tcursor: grabbing;\n}\n\n#waifu-tool {\n\tcolor: #aaa;\n\topacity: 0;\n\tposition: absolute;\n\tleft: 10px;\n\ttop: 55px;\n\ttransition: opacity 1s;\n}\n\n#waifu:hover #waifu-tool {\n\topacity: 1;\n}\n\n#waifu-tool span {\n\tcolor: #7b8c9d;\n\tcursor: pointer;\n\tdisplay: block;\n\tline-height: 30px;\n\ttext-align: center;\n\ttransition: color .3s;\n}\n\n#waifu-tool span:hover {\n\tcolor: #0684bd; /* #34495e */\n}\n\n@keyframes shake {\n\t2% {\n\t\ttransform: translate(.5px, -1.5px) rotate(-.5deg);\n\t}\n\n\t4% {\n\t\ttransform: translate(.5px, 1.5px) rotate(1.5deg);\n\t}\n\n\t6% {\n\t\ttransform: translate(1.5px, 1.5px) rotate(1.5deg);\n\t}\n\n\t8% {\n\t\ttransform: translate(2.5px, 1.5px) rotate(.5deg);\n\t}\n\n\t10% {\n\t\ttransform: translate(.5px, 2.5px) rotate(.5deg);\n\t}\n\n\t12% {\n\t\ttransform: translate(1.5px, 1.5px) rotate(.5deg);\n\t}\n\n\t14% {\n\t\ttransform: translate(.5px, .5px) rotate(.5deg);\n\t}\n\n\t16% {\n\t\ttransform: translate(-1.5px, -.5px) rotate(1.5deg);\n\t}\n\n\t18% {\n\t\ttransform: translate(.5px, .5px) rotate(1.5deg);\n\t}\n\n\t20% {\n\t\ttransform: translate(2.5px, 2.5px) rotate(1.5deg);\n\t}\n\n\t22% {\n\t\ttransform: translate(.5px, -1.5px) rotate(1.5deg);\n\t}\n\n\t24% {\n\t\ttransform: translate(-1.5px, 1.5px) rotate(-.5deg);\n\t}\n\n\t26% {\n\t\ttransform: translate(1.5px, .5px) rotate(1.5deg);\n\t}\n\n\t28% {\n\t\ttransform: translate(-.5px, -.5px) rotate(-.5deg);\n\t}\n\n\t30% {\n\t\ttransform: translate(1.5px, -.5px) rotate(-.5deg);\n\t}\n\n\t32% {\n\t\ttransform: translate(2.5px, -1.5px) rotate(1.5deg);\n\t}\n\n\t34% {\n\t\ttransform: translate(2.5px, 2.5px) rotate(-.5deg);\n\t}\n\n\t36% {\n\t\ttransform: translate(.5px, -1.5px) rotate(.5deg);\n\t}\n\n\t38% {\n\t\ttransform: translate(2.5px, -.5px) rotate(-.5deg);\n\t}\n\n\t40% {\n\t\ttransform: translate(-.5px, 2.5px) rotate(.5deg);\n\t}\n\n\t42% {\n\t\ttransform: translate(-1.5px, 2.5px) rotate(.5deg);\n\t}\n\n\t44% {\n\t\ttransform: translate(-1.5px, 1.5px) rotate(.5deg);\n\t}\n\n\t46% {\n\t\ttransform: translate(1.5px, -.5px) rotate(-.5deg);\n\t}\n\n\t48% {\n\t\ttransform: translate(2.5px, -.5px) rotate(.5deg);\n\t}\n\n\t50% {\n\t\ttransform: translate(-1.5px, 1.5px) rotate(.5deg);\n\t}\n\n\t52% {\n\t\ttransform: translate(-.5px, 1.5px) rotate(.5deg);\n\t}\n\n\t54% {\n\t\ttransform: translate(-1.5px, 1.5px) rotate(.5deg);\n\t}\n\n\t56% {\n\t\ttransform: translate(.5px, 2.5px) rotate(1.5deg);\n\t}\n\n\t58% {\n\t\ttransform: translate(2.5px, 2.5px) rotate(.5deg);\n\t}\n\n\t60% {\n\t\ttransform: translate(2.5px, -1.5px) rotate(1.5deg);\n\t}\n\n\t62% {\n\t\ttransform: translate(-1.5px, .5px) rotate(1.5deg);\n\t}\n\n\t64% {\n\t\ttransform: translate(-1.5px, 1.5px) rotate(1.5deg);\n\t}\n\n\t66% {\n\t\ttransform: translate(.5px, 2.5px) rotate(1.5deg);\n\t}\n\n\t68% {\n\t\ttransform: translate(2.5px, -1.5px) rotate(1.5deg);\n\t}\n\n\t70% {\n\t\ttransform: translate(2.5px, 2.5px) rotate(.5deg);\n\t}\n\n\t72% {\n\t\ttransform: translate(-.5px, -1.5px) rotate(1.5deg);\n\t}\n\n\t74% {\n\t\ttransform: translate(-1.5px, 2.5px) rotate(1.5deg);\n\t}\n\n\t76% {\n\t\ttransform: translate(-1.5px, 2.5px) rotate(1.5deg);\n\t}\n\n\t78% {\n\t\ttransform: translate(-1.5px, 2.5px) rotate(.5deg);\n\t}\n\n\t80% {\n\t\ttransform: translate(-1.5px, .5px) rotate(-.5deg);\n\t}\n\n\t82% {\n\t\ttransform: translate(-1.5px, .5px) rotate(-.5deg);\n\t}\n\n\t84% {\n\t\ttransform: translate(-.5px, .5px) rotate(1.5deg);\n\t}\n\n\t86% {\n\t\ttransform: translate(2.5px, 1.5px) rotate(.5deg);\n\t}\n\n\t88% {\n\t\ttransform: translate(-1.5px, .5px) rotate(1.5deg);\n\t}\n\n\t90% {\n\t\ttransform: translate(-1.5px, -.5px) rotate(-.5deg);\n\t}\n\n\t92% {\n\t\ttransform: translate(-1.5px, -1.5px) rotate(1.5deg);\n\t}\n\n\t94% {\n\t\ttransform: translate(.5px, .5px) rotate(-.5deg);\n\t}\n\n\t96% {\n\t\ttransform: translate(2.5px, -.5px) rotate(-.5deg);\n\t}\n\n\t98% {\n\t\ttransform: translate(-1.5px, -1.5px) rotate(-.5deg);\n\t}\n\n\t0%, 100% {\n\t\ttransform: translate(0, 0) rotate(0);\n\t}\n}\n"},{"title":"音乐","date":"2022-03-15T09:49:32.000Z","aplayer":true,"_content":"{% meting \"8108589105\" \"tencent\" \"playlist\" \"theme:#e6b422\" \"mode:circulation\" \"mutex:true\" \"listmaxheight:340px\" \"preload:auto\" %}\n","source":"music/index.md","raw":"---\ntitle: 音乐\ndate: 2022-03-15 17:49:32\naplayer: true\n---\n{% meting \"8108589105\" \"tencent\" \"playlist\" \"theme:#e6b422\" \"mode:circulation\" \"mutex:true\" \"listmaxheight:340px\" \"preload:auto\" %}\n","updated":"2022-06-03T06:00:55.633Z","path":"music/index.html","comments":1,"layout":"page","_id":"cl42z5h68001h3gn6gnhqak9x","content":"\n    <div id=\"aplayer-XChgmguV\" class=\"aplayer aplayer-tag-marker meting-tag-marker\"\n         data-id=\"8108589105\" data-server=\"tencent\" data-type=\"playlist\" data-mode=\"circulation\" data-autoplay=\"false\" data-mutex=\"true\" data-listmaxheight=\"340px\" data-preload=\"auto\" data-theme=\"#e6b422\"\n    ></div>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"cover":"https://blog.huangge1199.cn/post/day20220120/bg.jpeg","excerpt":"","more":"\n    <div id=\"aplayer-XChgmguV\" class=\"aplayer aplayer-tag-marker meting-tag-marker\"\n         data-id=\"8108589105\" data-server=\"tencent\" data-type=\"playlist\" data-mode=\"circulation\" data-autoplay=\"false\" data-mutex=\"true\" data-listmaxheight=\"340px\" data-preload=\"auto\" data-theme=\"#e6b422\"\n    ></div>\n"},{"title":"steam游戏库","date":"2022-05-11T03:29:26.000Z","_content":"{% steamgames %}\n788100\n1863750\n1293830\n1551360\n{% endsteamgames %}\n","source":"steamgames/index.md","raw":"---\ntitle: steam游戏库\ndate: 2022-05-11 11:29:26\n---\n{% steamgames %}\n788100\n1863750\n1293830\n1551360\n{% endsteamgames %}\n","updated":"2022-06-03T06:00:55.633Z","path":"steamgames/index.html","comments":1,"layout":"page","_id":"cl42z5h69001k3gn63u2l5j4w","content":"<iframe src=\"https://store.steampowered.com/widget/788100/\" frameborder=\"0\" width=\"100%\" height=\"190\"></iframe><iframe src=\"https://store.steampowered.com/widget/1863750/\" frameborder=\"0\" width=\"100%\" height=\"190\"></iframe><iframe src=\"https://store.steampowered.com/widget/1293830/\" frameborder=\"0\" width=\"100%\" height=\"190\"></iframe><iframe src=\"https://store.steampowered.com/widget/1551360/\" frameborder=\"0\" width=\"100%\" height=\"190\"></iframe>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"cover":"https://blog.huangge1199.cn/images/bg.jpeg","excerpt":"","more":"<iframe src=\"https://store.steampowered.com/widget/788100/\" frameborder=\"0\" width=\"100%\" height=\"190\"></iframe><iframe src=\"https://store.steampowered.com/widget/1863750/\" frameborder=\"0\" width=\"100%\" height=\"190\"></iframe><iframe src=\"https://store.steampowered.com/widget/1293830/\" frameborder=\"0\" width=\"100%\" height=\"190\"></iframe><iframe src=\"https://store.steampowered.com/widget/1551360/\" frameborder=\"0\" width=\"100%\" height=\"190\"></iframe>\n"},{"title":"壁纸","date":"2021-12-09T04:22:02.000Z","_content":"{% gallery %}\n![](https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg)\n![](https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg)\n![](https://i.loli.net/2019/12/25/gEy5Zc1Ai6VuO4N.jpg)\n![](https://i.loli.net/2019/12/25/d6QHbytlSYO4FBG.jpg)\n![](https://i.loli.net/2019/12/25/6nepIJ1xTgufatZ.jpg)\n![](https://i.loli.net/2019/12/25/E7Jvr4eIPwUNmzq.jpg)\n![](https://i.loli.net/2019/12/25/mh19anwBSWIkGlH.jpg)\n![](https://i.loli.net/2019/12/25/2tu9JC8ewpBFagv.jpg)\n{% endgallery %}\n","source":"wallpaper/index.md","raw":"---\ntitle: 壁纸\ndate: 2021-12-09 12:22:02\n---\n{% gallery %}\n![](https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg)\n![](https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg)\n![](https://i.loli.net/2019/12/25/gEy5Zc1Ai6VuO4N.jpg)\n![](https://i.loli.net/2019/12/25/d6QHbytlSYO4FBG.jpg)\n![](https://i.loli.net/2019/12/25/6nepIJ1xTgufatZ.jpg)\n![](https://i.loli.net/2019/12/25/E7Jvr4eIPwUNmzq.jpg)\n![](https://i.loli.net/2019/12/25/mh19anwBSWIkGlH.jpg)\n![](https://i.loli.net/2019/12/25/2tu9JC8ewpBFagv.jpg)\n{% endgallery %}\n","updated":"2022-06-03T06:00:55.633Z","path":"wallpaper/index.html","comments":1,"layout":"page","_id":"cl42z5h6b001p3gn66mmy7nhq","content":"<div class=\"fj-gallery\"><p><img src=\"https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg\" alt=\"\"><br><img src=\"https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg\" alt=\"\"><br><img src=\"https://i.loli.net/2019/12/25/gEy5Zc1Ai6VuO4N.jpg\" alt=\"\"><br><img src=\"https://i.loli.net/2019/12/25/d6QHbytlSYO4FBG.jpg\" alt=\"\"><br><img src=\"https://i.loli.net/2019/12/25/6nepIJ1xTgufatZ.jpg\" alt=\"\"><br><img src=\"https://i.loli.net/2019/12/25/E7Jvr4eIPwUNmzq.jpg\" alt=\"\"><br><img src=\"https://i.loli.net/2019/12/25/mh19anwBSWIkGlH.jpg\" alt=\"\"><br><img src=\"https://i.loli.net/2019/12/25/2tu9JC8ewpBFagv.jpg\" alt=\"\"></p>\n          </div>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"cover":"https://blog.huangge1199.cn/post/day20220120/bg.jpeg","excerpt":"","more":"<div class=\"fj-gallery\"><p><img src=\"https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg\" alt=\"\"><br><img src=\"https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg\" alt=\"\"><br><img src=\"https://i.loli.net/2019/12/25/gEy5Zc1Ai6VuO4N.jpg\" alt=\"\"><br><img src=\"https://i.loli.net/2019/12/25/d6QHbytlSYO4FBG.jpg\" alt=\"\"><br><img src=\"https://i.loli.net/2019/12/25/6nepIJ1xTgufatZ.jpg\" alt=\"\"><br><img src=\"https://i.loli.net/2019/12/25/E7Jvr4eIPwUNmzq.jpg\" alt=\"\"><br><img src=\"https://i.loli.net/2019/12/25/mh19anwBSWIkGlH.jpg\" alt=\"\"><br><img src=\"https://i.loli.net/2019/12/25/2tu9JC8ewpBFagv.jpg\" alt=\"\"></p>\n          </div>\n"},{"_content":"window.addEventListener('load', () => {\n  let loadFlag = false\n  let dataObj = []\n  const $searchMask = document.getElementById('search-mask')\n\n  const openSearch = () => {\n    const bodyStyle = document.body.style\n    bodyStyle.width = '100%'\n    bodyStyle.overflow = 'hidden'\n    btf.animateIn($searchMask, 'to_show 0.5s')\n    btf.animateIn(document.querySelector('#local-search .search-dialog'), 'titleScale 0.5s')\n    setTimeout(() => { document.querySelector('#local-search-input input').focus() }, 100)\n    if (!loadFlag) {\n      search()\n      loadFlag = true\n    }\n    // shortcut: ESC\n    document.addEventListener('keydown', function f (event) {\n      if (event.code === 'Escape') {\n        closeSearch()\n        document.removeEventListener('keydown', f)\n      }\n    })\n  }\n\n  const closeSearch = () => {\n    const bodyStyle = document.body.style\n    bodyStyle.width = ''\n    bodyStyle.overflow = ''\n    btf.animateOut(document.querySelector('#local-search .search-dialog'), 'search_close .5s')\n    btf.animateOut($searchMask, 'to_hide 0.5s')\n  }\n\n  const searchClickFn = () => {\n    document.querySelector('#search-button > .search').addEventListener('click', openSearch)\n  }\n\n  const searchClickFnOnce = () => {\n    document.querySelector('#local-search .search-close-button').addEventListener('click', closeSearch)\n    $searchMask.addEventListener('click', closeSearch)\n    if (GLOBAL_CONFIG.localSearch.preload) dataObj = fetchData(GLOBAL_CONFIG.localSearch.path)\n  }\n\n  // check url is json or not\n  const isJson = url => {\n    const reg = /\\.json$/\n    return reg.test(url)\n  }\n\n  const fetchData = async (path) => {\n    let data = []\n    const response = await fetch(path)\n    if (isJson(path)) {\n      data = await response.json()\n    } else {\n      const res = await response.text()\n      const t = await new window.DOMParser().parseFromString(res, 'text/xml')\n      const a = await t\n      data = [...a.querySelectorAll('entry')].map(item =>{\n        return {\n          title: item.querySelector('title').textContent,\n          content: item.querySelector('content') && item.querySelector('content').textContent,\n          url: item.querySelector('url').textContent\n        }\n      })\n    }\n    if (response.ok) {\n      const $loadDataItem = document.getElementById('loading-database')\n      $loadDataItem.nextElementSibling.style.display = 'block'\n      $loadDataItem.remove()\n    }\n    return data\n  }\n\n  const search = () => {\n    if (!GLOBAL_CONFIG.localSearch.preload) {\n      dataObj = fetchData(GLOBAL_CONFIG.localSearch.path)\n    }\n\n    const $input = document.querySelector('#local-search-input input')\n    const $resultContent = document.getElementById('local-search-results')\n    const $loadingStatus = document.getElementById('loading-status')\n\n    $input.addEventListener('input', function () {\n      const keywords = this.value.trim().toLowerCase().split(/[\\s]+/)\n      if (keywords[0] !== '') $loadingStatus.innerHTML = '<i class=\"fas fa-spinner fa-pulse\"></i>'\n\n      $resultContent.innerHTML = ''\n      let str = '<div class=\"search-result-list\">'\n      if (keywords.length <= 0) return\n      let count = 0\n      // perform local searching\n      dataObj.then(data => {\n        data.forEach(data => {\n          let isMatch = true\n          let dataTitle = data.title ? data.title.trim().toLowerCase() : ''\n          const dataContent = data.content ? data.content.trim().replace(/<[^>]+>/g, '').toLowerCase() : ''\n          const dataUrl = data.url.substring(1).startsWith('/') ? data.url.substring(1) : GLOBAL_CONFIG.root + data.url\n          let indexTitle = -1\n          let indexContent = -1\n          let firstOccur = -1\n          // only match articles with not empty titles and contents\n          if (dataTitle !== '' || dataContent !== '') {\n            keywords.forEach((keyword, i) => {\n              indexTitle = dataTitle.indexOf(keyword)\n              indexContent = dataContent.indexOf(keyword)\n              if (indexTitle < 0 && indexContent < 0) {\n                isMatch = false\n              } else {\n                if (indexContent < 0) {\n                  indexContent = 0\n                }\n                if (i === 0) {\n                  firstOccur = indexContent\n                }\n              }\n            })\n          } else {\n            isMatch = false\n          }\n\n          // show search results\n          if (isMatch) {\n            if (firstOccur >= 0) {\n              // cut out 130 characters\n              // let start = firstOccur - 30 < 0 ? 0 : firstOccur - 30\n              // let end = firstOccur + 50 > dataContent.length ? dataContent.length : firstOccur + 50\n              let start = firstOccur - 30\n              let end = firstOccur + 100\n              let pre = ''\n              let post = ''\n\n              if (start < 0) {\n                start = 0\n              }\n\n              if (start === 0) {\n                end = 100\n              } else {\n                pre = '...'\n              }\n\n              if (end > dataContent.length) {\n                end = dataContent.length\n              } else {\n                post = '...'\n              }\n\n              let matchContent = dataContent.substring(start, end)\n\n              // highlight all keywords\n              keywords.forEach(keyword => {\n                const regS = new RegExp(keyword, 'gi')\n                matchContent = matchContent.replace(regS, '<span class=\"search-keyword\">' + keyword + '</span>')\n                dataTitle = dataTitle.replace(regS, '<span class=\"search-keyword\">' + keyword + '</span>')\n              })\n\n              str += '<div class=\"local-search__hit-item\"><a href=\"' + dataUrl + '\" class=\"search-result-title\">' + dataTitle + '</a>'\n              count += 1\n\n              if (dataContent !== '') {\n                str += '<p class=\"search-result\">' + pre + matchContent + post + '</p>'\n              }\n            }\n            str += '</div>'\n          }\n        })\n        if (count === 0) {\n          str += '<div id=\"local-search__hits-empty\">' + GLOBAL_CONFIG.localSearch.languages.hits_empty.replace(/\\$\\{query}/, this.value.trim()) +\n            '</div>'\n        }\n        str += '</div>'\n        $resultContent.innerHTML = str\n        if (keywords[0] !== '') $loadingStatus.innerHTML = ''\n        window.pjax && window.pjax.refresh($resultContent)\n      })\n    })\n  }\n\n  searchClickFn()\n  searchClickFnOnce()\n\n  // pjax\n  window.addEventListener('pjax:complete', () => {\n    !btf.isHidden($searchMask) && closeSearch()\n    searchClickFn()\n  })\n})\n","source":"js/search/local-search.js","raw":"window.addEventListener('load', () => {\n  let loadFlag = false\n  let dataObj = []\n  const $searchMask = document.getElementById('search-mask')\n\n  const openSearch = () => {\n    const bodyStyle = document.body.style\n    bodyStyle.width = '100%'\n    bodyStyle.overflow = 'hidden'\n    btf.animateIn($searchMask, 'to_show 0.5s')\n    btf.animateIn(document.querySelector('#local-search .search-dialog'), 'titleScale 0.5s')\n    setTimeout(() => { document.querySelector('#local-search-input input').focus() }, 100)\n    if (!loadFlag) {\n      search()\n      loadFlag = true\n    }\n    // shortcut: ESC\n    document.addEventListener('keydown', function f (event) {\n      if (event.code === 'Escape') {\n        closeSearch()\n        document.removeEventListener('keydown', f)\n      }\n    })\n  }\n\n  const closeSearch = () => {\n    const bodyStyle = document.body.style\n    bodyStyle.width = ''\n    bodyStyle.overflow = ''\n    btf.animateOut(document.querySelector('#local-search .search-dialog'), 'search_close .5s')\n    btf.animateOut($searchMask, 'to_hide 0.5s')\n  }\n\n  const searchClickFn = () => {\n    document.querySelector('#search-button > .search').addEventListener('click', openSearch)\n  }\n\n  const searchClickFnOnce = () => {\n    document.querySelector('#local-search .search-close-button').addEventListener('click', closeSearch)\n    $searchMask.addEventListener('click', closeSearch)\n    if (GLOBAL_CONFIG.localSearch.preload) dataObj = fetchData(GLOBAL_CONFIG.localSearch.path)\n  }\n\n  // check url is json or not\n  const isJson = url => {\n    const reg = /\\.json$/\n    return reg.test(url)\n  }\n\n  const fetchData = async (path) => {\n    let data = []\n    const response = await fetch(path)\n    if (isJson(path)) {\n      data = await response.json()\n    } else {\n      const res = await response.text()\n      const t = await new window.DOMParser().parseFromString(res, 'text/xml')\n      const a = await t\n      data = [...a.querySelectorAll('entry')].map(item =>{\n        return {\n          title: item.querySelector('title').textContent,\n          content: item.querySelector('content') && item.querySelector('content').textContent,\n          url: item.querySelector('url').textContent\n        }\n      })\n    }\n    if (response.ok) {\n      const $loadDataItem = document.getElementById('loading-database')\n      $loadDataItem.nextElementSibling.style.display = 'block'\n      $loadDataItem.remove()\n    }\n    return data\n  }\n\n  const search = () => {\n    if (!GLOBAL_CONFIG.localSearch.preload) {\n      dataObj = fetchData(GLOBAL_CONFIG.localSearch.path)\n    }\n\n    const $input = document.querySelector('#local-search-input input')\n    const $resultContent = document.getElementById('local-search-results')\n    const $loadingStatus = document.getElementById('loading-status')\n\n    $input.addEventListener('input', function () {\n      const keywords = this.value.trim().toLowerCase().split(/[\\s]+/)\n      if (keywords[0] !== '') $loadingStatus.innerHTML = '<i class=\"fas fa-spinner fa-pulse\"></i>'\n\n      $resultContent.innerHTML = ''\n      let str = '<div class=\"search-result-list\">'\n      if (keywords.length <= 0) return\n      let count = 0\n      // perform local searching\n      dataObj.then(data => {\n        data.forEach(data => {\n          let isMatch = true\n          let dataTitle = data.title ? data.title.trim().toLowerCase() : ''\n          const dataContent = data.content ? data.content.trim().replace(/<[^>]+>/g, '').toLowerCase() : ''\n          const dataUrl = data.url.substring(1).startsWith('/') ? data.url.substring(1) : GLOBAL_CONFIG.root + data.url\n          let indexTitle = -1\n          let indexContent = -1\n          let firstOccur = -1\n          // only match articles with not empty titles and contents\n          if (dataTitle !== '' || dataContent !== '') {\n            keywords.forEach((keyword, i) => {\n              indexTitle = dataTitle.indexOf(keyword)\n              indexContent = dataContent.indexOf(keyword)\n              if (indexTitle < 0 && indexContent < 0) {\n                isMatch = false\n              } else {\n                if (indexContent < 0) {\n                  indexContent = 0\n                }\n                if (i === 0) {\n                  firstOccur = indexContent\n                }\n              }\n            })\n          } else {\n            isMatch = false\n          }\n\n          // show search results\n          if (isMatch) {\n            if (firstOccur >= 0) {\n              // cut out 130 characters\n              // let start = firstOccur - 30 < 0 ? 0 : firstOccur - 30\n              // let end = firstOccur + 50 > dataContent.length ? dataContent.length : firstOccur + 50\n              let start = firstOccur - 30\n              let end = firstOccur + 100\n              let pre = ''\n              let post = ''\n\n              if (start < 0) {\n                start = 0\n              }\n\n              if (start === 0) {\n                end = 100\n              } else {\n                pre = '...'\n              }\n\n              if (end > dataContent.length) {\n                end = dataContent.length\n              } else {\n                post = '...'\n              }\n\n              let matchContent = dataContent.substring(start, end)\n\n              // highlight all keywords\n              keywords.forEach(keyword => {\n                const regS = new RegExp(keyword, 'gi')\n                matchContent = matchContent.replace(regS, '<span class=\"search-keyword\">' + keyword + '</span>')\n                dataTitle = dataTitle.replace(regS, '<span class=\"search-keyword\">' + keyword + '</span>')\n              })\n\n              str += '<div class=\"local-search__hit-item\"><a href=\"' + dataUrl + '\" class=\"search-result-title\">' + dataTitle + '</a>'\n              count += 1\n\n              if (dataContent !== '') {\n                str += '<p class=\"search-result\">' + pre + matchContent + post + '</p>'\n              }\n            }\n            str += '</div>'\n          }\n        })\n        if (count === 0) {\n          str += '<div id=\"local-search__hits-empty\">' + GLOBAL_CONFIG.localSearch.languages.hits_empty.replace(/\\$\\{query}/, this.value.trim()) +\n            '</div>'\n        }\n        str += '</div>'\n        $resultContent.innerHTML = str\n        if (keywords[0] !== '') $loadingStatus.innerHTML = ''\n        window.pjax && window.pjax.refresh($resultContent)\n      })\n    })\n  }\n\n  searchClickFn()\n  searchClickFnOnce()\n\n  // pjax\n  window.addEventListener('pjax:complete', () => {\n    !btf.isHidden($searchMask) && closeSearch()\n    searchClickFn()\n  })\n})\n","date":"2022-06-06T15:13:51.717Z","updated":"2022-06-03T06:00:55.621Z","path":"js/search/local-search.js","layout":"false","title":"","comments":1,"_id":"cl42z5h6c001s3gn6gtxfah2c","content":"window.addEventListener('load', () => {\n  let loadFlag = false\n  let dataObj = []\n  const $searchMask = document.getElementById('search-mask')\n\n  const openSearch = () => {\n    const bodyStyle = document.body.style\n    bodyStyle.width = '100%'\n    bodyStyle.overflow = 'hidden'\n    btf.animateIn($searchMask, 'to_show 0.5s')\n    btf.animateIn(document.querySelector('#local-search .search-dialog'), 'titleScale 0.5s')\n    setTimeout(() => { document.querySelector('#local-search-input input').focus() }, 100)\n    if (!loadFlag) {\n      search()\n      loadFlag = true\n    }\n    // shortcut: ESC\n    document.addEventListener('keydown', function f (event) {\n      if (event.code === 'Escape') {\n        closeSearch()\n        document.removeEventListener('keydown', f)\n      }\n    })\n  }\n\n  const closeSearch = () => {\n    const bodyStyle = document.body.style\n    bodyStyle.width = ''\n    bodyStyle.overflow = ''\n    btf.animateOut(document.querySelector('#local-search .search-dialog'), 'search_close .5s')\n    btf.animateOut($searchMask, 'to_hide 0.5s')\n  }\n\n  const searchClickFn = () => {\n    document.querySelector('#search-button > .search').addEventListener('click', openSearch)\n  }\n\n  const searchClickFnOnce = () => {\n    document.querySelector('#local-search .search-close-button').addEventListener('click', closeSearch)\n    $searchMask.addEventListener('click', closeSearch)\n    if (GLOBAL_CONFIG.localSearch.preload) dataObj = fetchData(GLOBAL_CONFIG.localSearch.path)\n  }\n\n  // check url is json or not\n  const isJson = url => {\n    const reg = /\\.json$/\n    return reg.test(url)\n  }\n\n  const fetchData = async (path) => {\n    let data = []\n    const response = await fetch(path)\n    if (isJson(path)) {\n      data = await response.json()\n    } else {\n      const res = await response.text()\n      const t = await new window.DOMParser().parseFromString(res, 'text/xml')\n      const a = await t\n      data = [...a.querySelectorAll('entry')].map(item =>{\n        return {\n          title: item.querySelector('title').textContent,\n          content: item.querySelector('content') && item.querySelector('content').textContent,\n          url: item.querySelector('url').textContent\n        }\n      })\n    }\n    if (response.ok) {\n      const $loadDataItem = document.getElementById('loading-database')\n      $loadDataItem.nextElementSibling.style.display = 'block'\n      $loadDataItem.remove()\n    }\n    return data\n  }\n\n  const search = () => {\n    if (!GLOBAL_CONFIG.localSearch.preload) {\n      dataObj = fetchData(GLOBAL_CONFIG.localSearch.path)\n    }\n\n    const $input = document.querySelector('#local-search-input input')\n    const $resultContent = document.getElementById('local-search-results')\n    const $loadingStatus = document.getElementById('loading-status')\n\n    $input.addEventListener('input', function () {\n      const keywords = this.value.trim().toLowerCase().split(/[\\s]+/)\n      if (keywords[0] !== '') $loadingStatus.innerHTML = '<i class=\"fas fa-spinner fa-pulse\"></i>'\n\n      $resultContent.innerHTML = ''\n      let str = '<div class=\"search-result-list\">'\n      if (keywords.length <= 0) return\n      let count = 0\n      // perform local searching\n      dataObj.then(data => {\n        data.forEach(data => {\n          let isMatch = true\n          let dataTitle = data.title ? data.title.trim().toLowerCase() : ''\n          const dataContent = data.content ? data.content.trim().replace(/<[^>]+>/g, '').toLowerCase() : ''\n          const dataUrl = data.url.substring(1).startsWith('/') ? data.url.substring(1) : GLOBAL_CONFIG.root + data.url\n          let indexTitle = -1\n          let indexContent = -1\n          let firstOccur = -1\n          // only match articles with not empty titles and contents\n          if (dataTitle !== '' || dataContent !== '') {\n            keywords.forEach((keyword, i) => {\n              indexTitle = dataTitle.indexOf(keyword)\n              indexContent = dataContent.indexOf(keyword)\n              if (indexTitle < 0 && indexContent < 0) {\n                isMatch = false\n              } else {\n                if (indexContent < 0) {\n                  indexContent = 0\n                }\n                if (i === 0) {\n                  firstOccur = indexContent\n                }\n              }\n            })\n          } else {\n            isMatch = false\n          }\n\n          // show search results\n          if (isMatch) {\n            if (firstOccur >= 0) {\n              // cut out 130 characters\n              // let start = firstOccur - 30 < 0 ? 0 : firstOccur - 30\n              // let end = firstOccur + 50 > dataContent.length ? dataContent.length : firstOccur + 50\n              let start = firstOccur - 30\n              let end = firstOccur + 100\n              let pre = ''\n              let post = ''\n\n              if (start < 0) {\n                start = 0\n              }\n\n              if (start === 0) {\n                end = 100\n              } else {\n                pre = '...'\n              }\n\n              if (end > dataContent.length) {\n                end = dataContent.length\n              } else {\n                post = '...'\n              }\n\n              let matchContent = dataContent.substring(start, end)\n\n              // highlight all keywords\n              keywords.forEach(keyword => {\n                const regS = new RegExp(keyword, 'gi')\n                matchContent = matchContent.replace(regS, '<span class=\"search-keyword\">' + keyword + '</span>')\n                dataTitle = dataTitle.replace(regS, '<span class=\"search-keyword\">' + keyword + '</span>')\n              })\n\n              str += '<div class=\"local-search__hit-item\"><a href=\"' + dataUrl + '\" class=\"search-result-title\">' + dataTitle + '</a>'\n              count += 1\n\n              if (dataContent !== '') {\n                str += '<p class=\"search-result\">' + pre + matchContent + post + '</p>'\n              }\n            }\n            str += '</div>'\n          }\n        })\n        if (count === 0) {\n          str += '<div id=\"local-search__hits-empty\">' + GLOBAL_CONFIG.localSearch.languages.hits_empty.replace(/\\$\\{query}/, this.value.trim()) +\n            '</div>'\n        }\n        str += '</div>'\n        $resultContent.innerHTML = str\n        if (keywords[0] !== '') $loadingStatus.innerHTML = ''\n        window.pjax && window.pjax.refresh($resultContent)\n      })\n    })\n  }\n\n  searchClickFn()\n  searchClickFnOnce()\n\n  // pjax\n  window.addEventListener('pjax:complete', () => {\n    !btf.isHidden($searchMask) && closeSearch()\n    searchClickFn()\n  })\n})\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"cover":"https://blog.huangge1199.cn/post/day20220120/bg.jpeg","excerpt":"","more":"window.addEventListener('load', () => {\n  let loadFlag = false\n  let dataObj = []\n  const $searchMask = document.getElementById('search-mask')\n\n  const openSearch = () => {\n    const bodyStyle = document.body.style\n    bodyStyle.width = '100%'\n    bodyStyle.overflow = 'hidden'\n    btf.animateIn($searchMask, 'to_show 0.5s')\n    btf.animateIn(document.querySelector('#local-search .search-dialog'), 'titleScale 0.5s')\n    setTimeout(() => { document.querySelector('#local-search-input input').focus() }, 100)\n    if (!loadFlag) {\n      search()\n      loadFlag = true\n    }\n    // shortcut: ESC\n    document.addEventListener('keydown', function f (event) {\n      if (event.code === 'Escape') {\n        closeSearch()\n        document.removeEventListener('keydown', f)\n      }\n    })\n  }\n\n  const closeSearch = () => {\n    const bodyStyle = document.body.style\n    bodyStyle.width = ''\n    bodyStyle.overflow = ''\n    btf.animateOut(document.querySelector('#local-search .search-dialog'), 'search_close .5s')\n    btf.animateOut($searchMask, 'to_hide 0.5s')\n  }\n\n  const searchClickFn = () => {\n    document.querySelector('#search-button > .search').addEventListener('click', openSearch)\n  }\n\n  const searchClickFnOnce = () => {\n    document.querySelector('#local-search .search-close-button').addEventListener('click', closeSearch)\n    $searchMask.addEventListener('click', closeSearch)\n    if (GLOBAL_CONFIG.localSearch.preload) dataObj = fetchData(GLOBAL_CONFIG.localSearch.path)\n  }\n\n  // check url is json or not\n  const isJson = url => {\n    const reg = /\\.json$/\n    return reg.test(url)\n  }\n\n  const fetchData = async (path) => {\n    let data = []\n    const response = await fetch(path)\n    if (isJson(path)) {\n      data = await response.json()\n    } else {\n      const res = await response.text()\n      const t = await new window.DOMParser().parseFromString(res, 'text/xml')\n      const a = await t\n      data = [...a.querySelectorAll('entry')].map(item =>{\n        return {\n          title: item.querySelector('title').textContent,\n          content: item.querySelector('content') && item.querySelector('content').textContent,\n          url: item.querySelector('url').textContent\n        }\n      })\n    }\n    if (response.ok) {\n      const $loadDataItem = document.getElementById('loading-database')\n      $loadDataItem.nextElementSibling.style.display = 'block'\n      $loadDataItem.remove()\n    }\n    return data\n  }\n\n  const search = () => {\n    if (!GLOBAL_CONFIG.localSearch.preload) {\n      dataObj = fetchData(GLOBAL_CONFIG.localSearch.path)\n    }\n\n    const $input = document.querySelector('#local-search-input input')\n    const $resultContent = document.getElementById('local-search-results')\n    const $loadingStatus = document.getElementById('loading-status')\n\n    $input.addEventListener('input', function () {\n      const keywords = this.value.trim().toLowerCase().split(/[\\s]+/)\n      if (keywords[0] !== '') $loadingStatus.innerHTML = '<i class=\"fas fa-spinner fa-pulse\"></i>'\n\n      $resultContent.innerHTML = ''\n      let str = '<div class=\"search-result-list\">'\n      if (keywords.length <= 0) return\n      let count = 0\n      // perform local searching\n      dataObj.then(data => {\n        data.forEach(data => {\n          let isMatch = true\n          let dataTitle = data.title ? data.title.trim().toLowerCase() : ''\n          const dataContent = data.content ? data.content.trim().replace(/<[^>]+>/g, '').toLowerCase() : ''\n          const dataUrl = data.url.substring(1).startsWith('/') ? data.url.substring(1) : GLOBAL_CONFIG.root + data.url\n          let indexTitle = -1\n          let indexContent = -1\n          let firstOccur = -1\n          // only match articles with not empty titles and contents\n          if (dataTitle !== '' || dataContent !== '') {\n            keywords.forEach((keyword, i) => {\n              indexTitle = dataTitle.indexOf(keyword)\n              indexContent = dataContent.indexOf(keyword)\n              if (indexTitle < 0 && indexContent < 0) {\n                isMatch = false\n              } else {\n                if (indexContent < 0) {\n                  indexContent = 0\n                }\n                if (i === 0) {\n                  firstOccur = indexContent\n                }\n              }\n            })\n          } else {\n            isMatch = false\n          }\n\n          // show search results\n          if (isMatch) {\n            if (firstOccur >= 0) {\n              // cut out 130 characters\n              // let start = firstOccur - 30 < 0 ? 0 : firstOccur - 30\n              // let end = firstOccur + 50 > dataContent.length ? dataContent.length : firstOccur + 50\n              let start = firstOccur - 30\n              let end = firstOccur + 100\n              let pre = ''\n              let post = ''\n\n              if (start < 0) {\n                start = 0\n              }\n\n              if (start === 0) {\n                end = 100\n              } else {\n                pre = '...'\n              }\n\n              if (end > dataContent.length) {\n                end = dataContent.length\n              } else {\n                post = '...'\n              }\n\n              let matchContent = dataContent.substring(start, end)\n\n              // highlight all keywords\n              keywords.forEach(keyword => {\n                const regS = new RegExp(keyword, 'gi')\n                matchContent = matchContent.replace(regS, '<span class=\"search-keyword\">' + keyword + '</span>')\n                dataTitle = dataTitle.replace(regS, '<span class=\"search-keyword\">' + keyword + '</span>')\n              })\n\n              str += '<div class=\"local-search__hit-item\"><a href=\"' + dataUrl + '\" class=\"search-result-title\">' + dataTitle + '</a>'\n              count += 1\n\n              if (dataContent !== '') {\n                str += '<p class=\"search-result\">' + pre + matchContent + post + '</p>'\n              }\n            }\n            str += '</div>'\n          }\n        })\n        if (count === 0) {\n          str += '<div id=\"local-search__hits-empty\">' + GLOBAL_CONFIG.localSearch.languages.hits_empty.replace(/\\$\\{query}/, this.value.trim()) +\n            '</div>'\n        }\n        str += '</div>'\n        $resultContent.innerHTML = str\n        if (keywords[0] !== '') $loadingStatus.innerHTML = ''\n        window.pjax && window.pjax.refresh($resultContent)\n      })\n    })\n  }\n\n  searchClickFn()\n  searchClickFnOnce()\n\n  // pjax\n  window.addEventListener('pjax:complete', () => {\n    !btf.isHidden($searchMask) && closeSearch()\n    searchClickFn()\n  })\n})\n"},{"title":"标签","date":"2021-11-29T09:24:09.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2021-11-29 17:24:09\ntype: \"tags\"\ncomments: false\n---\n","updated":"2022-06-03T06:00:55.633Z","path":"tags/index.html","layout":"page","_id":"cl42z5h6d001w3gn612q6hx83","content":"","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"cover":"https://blog.huangge1199.cn/images/bg.jpeg","excerpt":"","more":""},{"_content":"<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"UTF-8\">\n<title>Live2D 看板娘 / Demo</title>\n<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/font-awesome/css/font-awesome.min.css\">\n<style>\n#github svg {\n\ttransition: all 1s;\n\tfill: #222;\n\tcolor: #fff;\n\tposition: absolute;\n\ttop: 0;\n\tright: 0;\n\tborder: 0;\n\twidth: 80px;\n\theight: 80px;\n}\n#github:hover svg {\n\twidth: 160px;\n\theight: 160px;\n}\n</style>\n</head>\n<body>\n<a id=\"github\" href=\"https://github.com/stevenjoezhang/live2d-widget\" target=\"_blank\" title=\"Visit the open-source code on GitHub!\">\n\t<svg viewBox=\"0 0 250 250\" aria-hidden=\"true\">\n\t\t<path d=\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\"></path>\n\t\t<path d=\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\" fill=\"currentColor\" class=\"octo-arm\"></path>\n\t\t<path d=\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\" fill=\"currentColor\" class=\"octo-body\"></path>\n\t</svg>\n</a>\n<script src=\"../autoload.js\"></script>\n</body>\n</html>\n","source":"live2d-widget/demo/demo.html","raw":"<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"UTF-8\">\n<title>Live2D 看板娘 / Demo</title>\n<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/font-awesome/css/font-awesome.min.css\">\n<style>\n#github svg {\n\ttransition: all 1s;\n\tfill: #222;\n\tcolor: #fff;\n\tposition: absolute;\n\ttop: 0;\n\tright: 0;\n\tborder: 0;\n\twidth: 80px;\n\theight: 80px;\n}\n#github:hover svg {\n\twidth: 160px;\n\theight: 160px;\n}\n</style>\n</head>\n<body>\n<a id=\"github\" href=\"https://github.com/stevenjoezhang/live2d-widget\" target=\"_blank\" title=\"Visit the open-source code on GitHub!\">\n\t<svg viewBox=\"0 0 250 250\" aria-hidden=\"true\">\n\t\t<path d=\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\"></path>\n\t\t<path d=\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\" fill=\"currentColor\" class=\"octo-arm\"></path>\n\t\t<path d=\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\" fill=\"currentColor\" class=\"octo-body\"></path>\n\t</svg>\n</a>\n<script src=\"../autoload.js\"></script>\n</body>\n</html>\n","date":"2022-06-06T15:39:11.465Z","updated":"2022-06-03T06:00:55.625Z","path":"live2d-widget/demo/demo.html","title":"","comments":1,"layout":"page","_id":"cl42z5h6h00213gn6exm7bu7a","content":"<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"UTF-8\">\n<title>Live2D 看板娘 / Demo</title>\n<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/font-awesome/css/font-awesome.min.css\">\n<style>\n#github svg {\n\ttransition: all 1s;\n\tfill: #222;\n\tcolor: #fff;\n\tposition: absolute;\n\ttop: 0;\n\tright: 0;\n\tborder: 0;\n\twidth: 80px;\n\theight: 80px;\n}\n#github:hover svg {\n\twidth: 160px;\n\theight: 160px;\n}\n</style>\n</head>\n<body>\n<a id=\"github\" href=\"https://github.com/stevenjoezhang/live2d-widget\" target=\"_blank\" title=\"Visit the open-source code on GitHub!\">\n\t<svg viewBox=\"0 0 250 250\" aria-hidden=\"true\">\n\t\t<path d=\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\"></path>\n\t\t<path d=\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\" fill=\"currentColor\" class=\"octo-arm\"></path>\n\t\t<path d=\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\" fill=\"currentColor\" class=\"octo-body\"></path>\n\t</svg>\n</a>\n<script src=\"../autoload.js\"></script>\n</body>\n</html>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"cover":"https://blog.huangge1199.cn/post/day20220119/bg.jpeg","excerpt":"","more":"<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"UTF-8\">\n<title>Live2D 看板娘 / Demo</title>\n<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/font-awesome/css/font-awesome.min.css\">\n<style>\n#github svg {\n\ttransition: all 1s;\n\tfill: #222;\n\tcolor: #fff;\n\tposition: absolute;\n\ttop: 0;\n\tright: 0;\n\tborder: 0;\n\twidth: 80px;\n\theight: 80px;\n}\n#github:hover svg {\n\twidth: 160px;\n\theight: 160px;\n}\n</style>\n</head>\n<body>\n<a id=\"github\" href=\"https://github.com/stevenjoezhang/live2d-widget\" target=\"_blank\" title=\"Visit the open-source code on GitHub!\">\n\t<svg viewBox=\"0 0 250 250\" aria-hidden=\"true\">\n\t\t<path d=\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\"></path>\n\t\t<path d=\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\" fill=\"currentColor\" class=\"octo-arm\"></path>\n\t\t<path d=\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\" fill=\"currentColor\" class=\"octo-body\"></path>\n\t</svg>\n</a>\n<script src=\"../autoload.js\"></script>\n</body>\n</html>\n"},{"_content":"<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"UTF-8\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n<title>看板娘登陆平台</title>\n<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@4/dist/css/bootstrap.min.css\">\n<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/font-awesome/css/font-awesome.min.css\">\n<script src=\"../live2d.min.js\"></script>\n<style>\nhtml, body {\n\theight: 100%;\n}\nbody {\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tpadding-top: 40px;\n\tpadding-bottom: 40px;\n\tbackground-color: #f5f5f5;\n}\n.form-signin {\n\twidth: 100%;\n\tmax-width: 330px;\n\tpadding: 15px;\n\tmargin: 0 auto;\n}\n.form-signin .checkbox {\n\tfont-weight: 400;\n}\n.form-signin .form-control {\n\tposition: relative;\n\tbox-sizing: border-box;\n\theight: auto;\n\tpadding: 10px;\n\tfont-size: 16px;\n}\n.form-signin .form-control:focus {\n\tz-index: 2;\n}\n.form-signin input[type=text] {\n\tmargin-bottom: -1px;\n\tborder-bottom-right-radius: 0;\n\tborder-bottom-left-radius: 0;\n}\n.form-signin input[type=password] {\n\tmargin-bottom: 10px;\n\tborder-top-left-radius: 0;\n\tborder-top-right-radius: 0;\n}\n#stage {\n\tposition: relative;\n}\n#stage img {\n\twidth: 100%;\n\tmargin-bottom: 20px;\n\tborder-radius: 20px;\n}\n#stage a {\n\tposition: absolute;\n\twidth: 2em;\n\theight: 2em;\n\tborder-radius: 50%;\n}\n#inner {\n\tposition: relative;\n\tbackground-color: #999;\n\tclip-path: circle(120px at center);\n}\n#cover {\n\tposition: absolute;\n\tbackground-color: #CB3837;\n\twidth: 100%;\n\theight: 100%;\n\tbottom: 10%;\n\ttransition: all 1s;\n\tbox-shadow: 0 0 0 5px rgba(0, 0, 0, .1);\n}\n#text {\n\tposition: absolute;\n\tbottom: 30%;\n\tfont-size: 2em;\n\tleft: 50%;\n\ttransform: translateX(-50%);\n\topacity: 0.4;\n\tfont-weight: bold;\n}\n#detail {\n\tposition: absolute;\n\tbackground: rgba(255, 255, 255, .1);\n\twidth: 100%;\n\theight: 10px;\n\tbottom: 0;\n}\n#handle {\n\tposition: absolute;\n\tbackground: #ccc;\n\tbottom: -2px;\n\tbox-shadow: 0 1px 0 1px rgba(0, 0, 0, .1);\n\theight: 8px;\n\tleft: 50%;\n\tmargin-left: -15px;\n\twidth: 30px;\n\tcursor: pointer;\n}\n#info {\n\tleft: 40px;\n\tbottom: 20px;\n}\n#refresh {\n\tright: 40px;\n\tbottom: 20px;\n}\n#live2d {\n\tcursor: grab;\n\theight: 300px;\n\twidth: 300px;\n}\n#live2d:active {\n\tcursor: grabbing;\n}\n</style>\n</head>\n<body class=\"text-center\">\n<form class=\"form-signin\" action=\"login.php\" method=\"post\">\n\t<div id=\"stage\">\n\t\t<div id=\"inner\">\n\t\t\t<div id=\"cover\">\n\t\t\t\t<div id=\"text\">\n\t\t\t\t\t<span style=\"color: cyan;\">MIMI</span><span style=\"color: white;\">POWERED</span>\n\t\t\t\t</div>\n\t\t\t\t<div id=\"detail\"></div>\n\t\t\t\t<div id=\"handle\"></div>\n\t\t\t</div>\n\t\t\t<canvas class=\"mb-4\" id=\"live2d\" width=\"800\" height=\"800\"></canvas>\n\t\t</div>\n\t\t<a id=\"info\" href=\"javascript:info()\"><i class=\"fa fa-lg fa-info\"></i></a>\n\t\t<a id=\"refresh\" href=\"javascript:refresh()\"><i class=\"fa fa-lg fa-refresh\"></i></a>\n\t</div>\n\t<h1 class=\"h3 mb-3 font-weight-normal\">看板娘登陆平台</h1>\n\t<label for=\"room\" class=\"sr-only\">用户名</label>\n\t<input type=\"text\" name=\"room\" class=\"form-control\" placeholder=\"用户名\" required autofocus>\n\t<label for=\"pass\" class=\"sr-only\">密码</label>\n\t<input type=\"password\" name=\"pass\" class=\"form-control\" placeholder=\"密码\" required>\n\t<div class=\"checkbox mb-3\">\n\t\t<label>\n\t\t\t<input type=\"checkbox\" value=\"remember-me\"> 记住我\n\t\t</label>\n\t</div>\n\t<button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">登录</button>\n\t<p class=\"mt-5 mb-3 text-muted\">Copyleft &copy; Mimi 2019</p>\n</form>\n<script>\n/*\n * _(:з」∠)_\n * Created by Shuqiao Zhang in 2019.\n * https://zhangshuqiao.org\n */\n\n/*\n * This program is free software: you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n */\nwindow.addEventListener(\"load\", () => {\n\t\"use strict\";\n\n\tif (!CSS.supports(\"clip-path\", \"circle(120px at center)\")) {\n\t\tdocument.getElementById(\"stage\").innerHTML = '<img src=\"../assets/screenshot-1.png\">';\n\t\treturn;\n\t}\n\n\tlet apiPath = \"https://live2d.fghrsh.net/api\", state = 0,\n\t\tmodelId = localStorage.getItem(\"modelId\"),\n\t\tmodelTexturesId = localStorage.getItem(\"modelTexturesId\");\n\tif (modelId === null) {\n\t\tmodelId = 1;\n\t\tmodelTexturesId = 53;\n\t}\n\tloadModel(modelId, modelTexturesId);\n\n\tfunction loadModel(modelId, modelTexturesId) {\n\t\tlocalStorage.setItem(\"modelId\", modelId);\n\t\tif (modelTexturesId === undefined) modelTexturesId = 0;\n\t\tlocalStorage.setItem(\"modelTexturesId\", modelTexturesId);\n\t\tloadlive2d(\"live2d\", `${apiPath}/get/?id=${modelId}-${modelTexturesId}`, null);\n\t\tconsole.log(\"live2d\", `模型 ${modelId}-${modelTexturesId} 加载完成`);\n\t\tsetTimeout(() => {\n\t\t\tcoverPosition(\"80%\");\n\t\t\tstate = 2;\n\t\t}, 2000);\n\t}\n\n\tfunction loadRandModel() {\n\t\tconst modelId = localStorage.getItem(\"modelId\"),\n\t\t\tmodelTexturesId = localStorage.getItem(\"modelTexturesId\");\n\t\tfetch(`${apiPath}/rand_textures/?id=${modelId}-${modelTexturesId}`)\n\t\t\t.then(response => response.json())\n\t\t\t.then(result => {\n\t\t\t\tloadModel(modelId, result.textures.id);\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tstate = 2;\n\t\t\t\t\tcoverPosition(\"80%\");\n\t\t\t\t\tdocument.getElementById(\"refresh\").setAttribute(\"href\", \"javascript:refresh()\");\n\t\t\t\t}, 1000);\n\t\t\t});\n\t}\n\n\tfunction loadOtherModel() {\n\t\tconst modelId = localStorage.getItem(\"modelId\");\n\t\tfetch(`${apiPath}/switch/?id=${modelId}`)\n\t\t\t.then(response => response.json())\n\t\t\t.then(result => {\n\t\t\t\tloadModel(result.model.id);\n\t\t\t});\n\t}\n\n\tfunction coverPosition(pos) {\n\t\tdocument.getElementById(\"cover\").style.bottom = pos;\n\t}\n\n\twindow.info = function() {\n\t\tfetch(\"https://v1.hitokoto.cn\")\n\t\t\t.then(response => response.json())\n\t\t\t.then(result => {\n\t\t\t\talert(\"「\" + result.hitokoto + \"」——\" + result.from);\n\t\t\t});\n\t};\n\n\twindow.refresh = function() {\n\t\tstate = 0;\n\t\tcoverPosition(\"10%\");\n\t\tdocument.getElementById(\"refresh\").setAttribute(\"href\", \"javascript:void(0)\");\n\t\tsetTimeout(loadRandModel, 1000);\n\t};\n\n\tdocument.getElementById(\"handle\").addEventListener(\"click\", () => {\n\t\tif (state === 1) {\n\t\t\tstate = 2;\n\t\t\tcoverPosition(\"80%\");\n\t\t}\n\t\telse if (state === 2) {\n\t\t\tstate = 1;\n\t\t\tcoverPosition(\"20%\");\n\t\t}\n\t});\n\n\tdocument.querySelector(\"input[type=password]\").addEventListener(\"focus\", () => {\n\t\tif (state === 2) {\n\t\t\tstate = 1;\n\t\t\tcoverPosition(\"20%\");\n\t\t}\n\t});\n\tdocument.querySelector(\"input[type=password]\").addEventListener(\"blur\", () => {\n\t\tif (state === 1) {\n\t\t\tstate = 2;\n\t\t\tcoverPosition(\"80%\");\n\t\t}\n\t});\n});\n</script>\n</body>\n</html>\n","source":"live2d-widget/demo/login.html","raw":"<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"UTF-8\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n<title>看板娘登陆平台</title>\n<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@4/dist/css/bootstrap.min.css\">\n<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/font-awesome/css/font-awesome.min.css\">\n<script src=\"../live2d.min.js\"></script>\n<style>\nhtml, body {\n\theight: 100%;\n}\nbody {\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tpadding-top: 40px;\n\tpadding-bottom: 40px;\n\tbackground-color: #f5f5f5;\n}\n.form-signin {\n\twidth: 100%;\n\tmax-width: 330px;\n\tpadding: 15px;\n\tmargin: 0 auto;\n}\n.form-signin .checkbox {\n\tfont-weight: 400;\n}\n.form-signin .form-control {\n\tposition: relative;\n\tbox-sizing: border-box;\n\theight: auto;\n\tpadding: 10px;\n\tfont-size: 16px;\n}\n.form-signin .form-control:focus {\n\tz-index: 2;\n}\n.form-signin input[type=text] {\n\tmargin-bottom: -1px;\n\tborder-bottom-right-radius: 0;\n\tborder-bottom-left-radius: 0;\n}\n.form-signin input[type=password] {\n\tmargin-bottom: 10px;\n\tborder-top-left-radius: 0;\n\tborder-top-right-radius: 0;\n}\n#stage {\n\tposition: relative;\n}\n#stage img {\n\twidth: 100%;\n\tmargin-bottom: 20px;\n\tborder-radius: 20px;\n}\n#stage a {\n\tposition: absolute;\n\twidth: 2em;\n\theight: 2em;\n\tborder-radius: 50%;\n}\n#inner {\n\tposition: relative;\n\tbackground-color: #999;\n\tclip-path: circle(120px at center);\n}\n#cover {\n\tposition: absolute;\n\tbackground-color: #CB3837;\n\twidth: 100%;\n\theight: 100%;\n\tbottom: 10%;\n\ttransition: all 1s;\n\tbox-shadow: 0 0 0 5px rgba(0, 0, 0, .1);\n}\n#text {\n\tposition: absolute;\n\tbottom: 30%;\n\tfont-size: 2em;\n\tleft: 50%;\n\ttransform: translateX(-50%);\n\topacity: 0.4;\n\tfont-weight: bold;\n}\n#detail {\n\tposition: absolute;\n\tbackground: rgba(255, 255, 255, .1);\n\twidth: 100%;\n\theight: 10px;\n\tbottom: 0;\n}\n#handle {\n\tposition: absolute;\n\tbackground: #ccc;\n\tbottom: -2px;\n\tbox-shadow: 0 1px 0 1px rgba(0, 0, 0, .1);\n\theight: 8px;\n\tleft: 50%;\n\tmargin-left: -15px;\n\twidth: 30px;\n\tcursor: pointer;\n}\n#info {\n\tleft: 40px;\n\tbottom: 20px;\n}\n#refresh {\n\tright: 40px;\n\tbottom: 20px;\n}\n#live2d {\n\tcursor: grab;\n\theight: 300px;\n\twidth: 300px;\n}\n#live2d:active {\n\tcursor: grabbing;\n}\n</style>\n</head>\n<body class=\"text-center\">\n<form class=\"form-signin\" action=\"login.php\" method=\"post\">\n\t<div id=\"stage\">\n\t\t<div id=\"inner\">\n\t\t\t<div id=\"cover\">\n\t\t\t\t<div id=\"text\">\n\t\t\t\t\t<span style=\"color: cyan;\">MIMI</span><span style=\"color: white;\">POWERED</span>\n\t\t\t\t</div>\n\t\t\t\t<div id=\"detail\"></div>\n\t\t\t\t<div id=\"handle\"></div>\n\t\t\t</div>\n\t\t\t<canvas class=\"mb-4\" id=\"live2d\" width=\"800\" height=\"800\"></canvas>\n\t\t</div>\n\t\t<a id=\"info\" href=\"javascript:info()\"><i class=\"fa fa-lg fa-info\"></i></a>\n\t\t<a id=\"refresh\" href=\"javascript:refresh()\"><i class=\"fa fa-lg fa-refresh\"></i></a>\n\t</div>\n\t<h1 class=\"h3 mb-3 font-weight-normal\">看板娘登陆平台</h1>\n\t<label for=\"room\" class=\"sr-only\">用户名</label>\n\t<input type=\"text\" name=\"room\" class=\"form-control\" placeholder=\"用户名\" required autofocus>\n\t<label for=\"pass\" class=\"sr-only\">密码</label>\n\t<input type=\"password\" name=\"pass\" class=\"form-control\" placeholder=\"密码\" required>\n\t<div class=\"checkbox mb-3\">\n\t\t<label>\n\t\t\t<input type=\"checkbox\" value=\"remember-me\"> 记住我\n\t\t</label>\n\t</div>\n\t<button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">登录</button>\n\t<p class=\"mt-5 mb-3 text-muted\">Copyleft &copy; Mimi 2019</p>\n</form>\n<script>\n/*\n * _(:з」∠)_\n * Created by Shuqiao Zhang in 2019.\n * https://zhangshuqiao.org\n */\n\n/*\n * This program is free software: you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n */\nwindow.addEventListener(\"load\", () => {\n\t\"use strict\";\n\n\tif (!CSS.supports(\"clip-path\", \"circle(120px at center)\")) {\n\t\tdocument.getElementById(\"stage\").innerHTML = '<img src=\"../assets/screenshot-1.png\">';\n\t\treturn;\n\t}\n\n\tlet apiPath = \"https://live2d.fghrsh.net/api\", state = 0,\n\t\tmodelId = localStorage.getItem(\"modelId\"),\n\t\tmodelTexturesId = localStorage.getItem(\"modelTexturesId\");\n\tif (modelId === null) {\n\t\tmodelId = 1;\n\t\tmodelTexturesId = 53;\n\t}\n\tloadModel(modelId, modelTexturesId);\n\n\tfunction loadModel(modelId, modelTexturesId) {\n\t\tlocalStorage.setItem(\"modelId\", modelId);\n\t\tif (modelTexturesId === undefined) modelTexturesId = 0;\n\t\tlocalStorage.setItem(\"modelTexturesId\", modelTexturesId);\n\t\tloadlive2d(\"live2d\", `${apiPath}/get/?id=${modelId}-${modelTexturesId}`, null);\n\t\tconsole.log(\"live2d\", `模型 ${modelId}-${modelTexturesId} 加载完成`);\n\t\tsetTimeout(() => {\n\t\t\tcoverPosition(\"80%\");\n\t\t\tstate = 2;\n\t\t}, 2000);\n\t}\n\n\tfunction loadRandModel() {\n\t\tconst modelId = localStorage.getItem(\"modelId\"),\n\t\t\tmodelTexturesId = localStorage.getItem(\"modelTexturesId\");\n\t\tfetch(`${apiPath}/rand_textures/?id=${modelId}-${modelTexturesId}`)\n\t\t\t.then(response => response.json())\n\t\t\t.then(result => {\n\t\t\t\tloadModel(modelId, result.textures.id);\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tstate = 2;\n\t\t\t\t\tcoverPosition(\"80%\");\n\t\t\t\t\tdocument.getElementById(\"refresh\").setAttribute(\"href\", \"javascript:refresh()\");\n\t\t\t\t}, 1000);\n\t\t\t});\n\t}\n\n\tfunction loadOtherModel() {\n\t\tconst modelId = localStorage.getItem(\"modelId\");\n\t\tfetch(`${apiPath}/switch/?id=${modelId}`)\n\t\t\t.then(response => response.json())\n\t\t\t.then(result => {\n\t\t\t\tloadModel(result.model.id);\n\t\t\t});\n\t}\n\n\tfunction coverPosition(pos) {\n\t\tdocument.getElementById(\"cover\").style.bottom = pos;\n\t}\n\n\twindow.info = function() {\n\t\tfetch(\"https://v1.hitokoto.cn\")\n\t\t\t.then(response => response.json())\n\t\t\t.then(result => {\n\t\t\t\talert(\"「\" + result.hitokoto + \"」——\" + result.from);\n\t\t\t});\n\t};\n\n\twindow.refresh = function() {\n\t\tstate = 0;\n\t\tcoverPosition(\"10%\");\n\t\tdocument.getElementById(\"refresh\").setAttribute(\"href\", \"javascript:void(0)\");\n\t\tsetTimeout(loadRandModel, 1000);\n\t};\n\n\tdocument.getElementById(\"handle\").addEventListener(\"click\", () => {\n\t\tif (state === 1) {\n\t\t\tstate = 2;\n\t\t\tcoverPosition(\"80%\");\n\t\t}\n\t\telse if (state === 2) {\n\t\t\tstate = 1;\n\t\t\tcoverPosition(\"20%\");\n\t\t}\n\t});\n\n\tdocument.querySelector(\"input[type=password]\").addEventListener(\"focus\", () => {\n\t\tif (state === 2) {\n\t\t\tstate = 1;\n\t\t\tcoverPosition(\"20%\");\n\t\t}\n\t});\n\tdocument.querySelector(\"input[type=password]\").addEventListener(\"blur\", () => {\n\t\tif (state === 1) {\n\t\t\tstate = 2;\n\t\t\tcoverPosition(\"80%\");\n\t\t}\n\t});\n});\n</script>\n</body>\n</html>\n","date":"2022-06-06T15:39:11.469Z","updated":"2022-06-03T06:00:55.625Z","path":"live2d-widget/demo/login.html","title":"","comments":1,"layout":"page","_id":"cl42z5h6j00243gn6d1ax5fvg","content":"<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"UTF-8\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n<title>看板娘登陆平台</title>\n<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@4/dist/css/bootstrap.min.css\">\n<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/font-awesome/css/font-awesome.min.css\">\n<script src=\"../live2d.min.js\"></script>\n<style>\nhtml, body {\n\theight: 100%;\n}\nbody {\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tpadding-top: 40px;\n\tpadding-bottom: 40px;\n\tbackground-color: #f5f5f5;\n}\n.form-signin {\n\twidth: 100%;\n\tmax-width: 330px;\n\tpadding: 15px;\n\tmargin: 0 auto;\n}\n.form-signin .checkbox {\n\tfont-weight: 400;\n}\n.form-signin .form-control {\n\tposition: relative;\n\tbox-sizing: border-box;\n\theight: auto;\n\tpadding: 10px;\n\tfont-size: 16px;\n}\n.form-signin .form-control:focus {\n\tz-index: 2;\n}\n.form-signin input[type=text] {\n\tmargin-bottom: -1px;\n\tborder-bottom-right-radius: 0;\n\tborder-bottom-left-radius: 0;\n}\n.form-signin input[type=password] {\n\tmargin-bottom: 10px;\n\tborder-top-left-radius: 0;\n\tborder-top-right-radius: 0;\n}\n#stage {\n\tposition: relative;\n}\n#stage img {\n\twidth: 100%;\n\tmargin-bottom: 20px;\n\tborder-radius: 20px;\n}\n#stage a {\n\tposition: absolute;\n\twidth: 2em;\n\theight: 2em;\n\tborder-radius: 50%;\n}\n#inner {\n\tposition: relative;\n\tbackground-color: #999;\n\tclip-path: circle(120px at center);\n}\n#cover {\n\tposition: absolute;\n\tbackground-color: #CB3837;\n\twidth: 100%;\n\theight: 100%;\n\tbottom: 10%;\n\ttransition: all 1s;\n\tbox-shadow: 0 0 0 5px rgba(0, 0, 0, .1);\n}\n#text {\n\tposition: absolute;\n\tbottom: 30%;\n\tfont-size: 2em;\n\tleft: 50%;\n\ttransform: translateX(-50%);\n\topacity: 0.4;\n\tfont-weight: bold;\n}\n#detail {\n\tposition: absolute;\n\tbackground: rgba(255, 255, 255, .1);\n\twidth: 100%;\n\theight: 10px;\n\tbottom: 0;\n}\n#handle {\n\tposition: absolute;\n\tbackground: #ccc;\n\tbottom: -2px;\n\tbox-shadow: 0 1px 0 1px rgba(0, 0, 0, .1);\n\theight: 8px;\n\tleft: 50%;\n\tmargin-left: -15px;\n\twidth: 30px;\n\tcursor: pointer;\n}\n#info {\n\tleft: 40px;\n\tbottom: 20px;\n}\n#refresh {\n\tright: 40px;\n\tbottom: 20px;\n}\n#live2d {\n\tcursor: grab;\n\theight: 300px;\n\twidth: 300px;\n}\n#live2d:active {\n\tcursor: grabbing;\n}\n</style>\n</head>\n<body class=\"text-center\">\n<form class=\"form-signin\" action=\"login.php\" method=\"post\">\n\t<div id=\"stage\">\n\t\t<div id=\"inner\">\n\t\t\t<div id=\"cover\">\n\t\t\t\t<div id=\"text\">\n\t\t\t\t\t<span style=\"color: cyan;\">MIMI</span><span style=\"color: white;\">POWERED</span>\n\t\t\t\t</div>\n\t\t\t\t<div id=\"detail\"></div>\n\t\t\t\t<div id=\"handle\"></div>\n\t\t\t</div>\n\t\t\t<canvas class=\"mb-4\" id=\"live2d\" width=\"800\" height=\"800\"></canvas>\n\t\t</div>\n\t\t<a id=\"info\" href=\"javascript:info()\"><i class=\"fa fa-lg fa-info\"></i></a>\n\t\t<a id=\"refresh\" href=\"javascript:refresh()\"><i class=\"fa fa-lg fa-refresh\"></i></a>\n\t</div>\n\t<h1 class=\"h3 mb-3 font-weight-normal\">看板娘登陆平台</h1>\n\t<label for=\"room\" class=\"sr-only\">用户名</label>\n\t<input type=\"text\" name=\"room\" class=\"form-control\" placeholder=\"用户名\" required autofocus>\n\t<label for=\"pass\" class=\"sr-only\">密码</label>\n\t<input type=\"password\" name=\"pass\" class=\"form-control\" placeholder=\"密码\" required>\n\t<div class=\"checkbox mb-3\">\n\t\t<label>\n\t\t\t<input type=\"checkbox\" value=\"remember-me\"> 记住我\n\t\t</label>\n\t</div>\n\t<button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">登录</button>\n\t<p class=\"mt-5 mb-3 text-muted\">Copyleft &copy; Mimi 2019</p>\n</form>\n<script>\n/*\n * _(:з」∠)_\n * Created by Shuqiao Zhang in 2019.\n * https://zhangshuqiao.org\n */\n\n/*\n * This program is free software: you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n */\nwindow.addEventListener(\"load\", () => {\n\t\"use strict\";\n\n\tif (!CSS.supports(\"clip-path\", \"circle(120px at center)\")) {\n\t\tdocument.getElementById(\"stage\").innerHTML = '<img src=\"../assets/screenshot-1.png\">';\n\t\treturn;\n\t}\n\n\tlet apiPath = \"https://live2d.fghrsh.net/api\", state = 0,\n\t\tmodelId = localStorage.getItem(\"modelId\"),\n\t\tmodelTexturesId = localStorage.getItem(\"modelTexturesId\");\n\tif (modelId === null) {\n\t\tmodelId = 1;\n\t\tmodelTexturesId = 53;\n\t}\n\tloadModel(modelId, modelTexturesId);\n\n\tfunction loadModel(modelId, modelTexturesId) {\n\t\tlocalStorage.setItem(\"modelId\", modelId);\n\t\tif (modelTexturesId === undefined) modelTexturesId = 0;\n\t\tlocalStorage.setItem(\"modelTexturesId\", modelTexturesId);\n\t\tloadlive2d(\"live2d\", `${apiPath}/get/?id=${modelId}-${modelTexturesId}`, null);\n\t\tconsole.log(\"live2d\", `模型 ${modelId}-${modelTexturesId} 加载完成`);\n\t\tsetTimeout(() => {\n\t\t\tcoverPosition(\"80%\");\n\t\t\tstate = 2;\n\t\t}, 2000);\n\t}\n\n\tfunction loadRandModel() {\n\t\tconst modelId = localStorage.getItem(\"modelId\"),\n\t\t\tmodelTexturesId = localStorage.getItem(\"modelTexturesId\");\n\t\tfetch(`${apiPath}/rand_textures/?id=${modelId}-${modelTexturesId}`)\n\t\t\t.then(response => response.json())\n\t\t\t.then(result => {\n\t\t\t\tloadModel(modelId, result.textures.id);\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tstate = 2;\n\t\t\t\t\tcoverPosition(\"80%\");\n\t\t\t\t\tdocument.getElementById(\"refresh\").setAttribute(\"href\", \"javascript:refresh()\");\n\t\t\t\t}, 1000);\n\t\t\t});\n\t}\n\n\tfunction loadOtherModel() {\n\t\tconst modelId = localStorage.getItem(\"modelId\");\n\t\tfetch(`${apiPath}/switch/?id=${modelId}`)\n\t\t\t.then(response => response.json())\n\t\t\t.then(result => {\n\t\t\t\tloadModel(result.model.id);\n\t\t\t});\n\t}\n\n\tfunction coverPosition(pos) {\n\t\tdocument.getElementById(\"cover\").style.bottom = pos;\n\t}\n\n\twindow.info = function() {\n\t\tfetch(\"https://v1.hitokoto.cn\")\n\t\t\t.then(response => response.json())\n\t\t\t.then(result => {\n\t\t\t\talert(\"「\" + result.hitokoto + \"」——\" + result.from);\n\t\t\t});\n\t};\n\n\twindow.refresh = function() {\n\t\tstate = 0;\n\t\tcoverPosition(\"10%\");\n\t\tdocument.getElementById(\"refresh\").setAttribute(\"href\", \"javascript:void(0)\");\n\t\tsetTimeout(loadRandModel, 1000);\n\t};\n\n\tdocument.getElementById(\"handle\").addEventListener(\"click\", () => {\n\t\tif (state === 1) {\n\t\t\tstate = 2;\n\t\t\tcoverPosition(\"80%\");\n\t\t}\n\t\telse if (state === 2) {\n\t\t\tstate = 1;\n\t\t\tcoverPosition(\"20%\");\n\t\t}\n\t});\n\n\tdocument.querySelector(\"input[type=password]\").addEventListener(\"focus\", () => {\n\t\tif (state === 2) {\n\t\t\tstate = 1;\n\t\t\tcoverPosition(\"20%\");\n\t\t}\n\t});\n\tdocument.querySelector(\"input[type=password]\").addEventListener(\"blur\", () => {\n\t\tif (state === 1) {\n\t\t\tstate = 2;\n\t\t\tcoverPosition(\"80%\");\n\t\t}\n\t});\n});\n</script>\n</body>\n</html>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"cover":"https://blog.huangge1199.cn/post/day20220121/bg.jpeg","excerpt":"","more":"<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"UTF-8\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n<title>看板娘登陆平台</title>\n<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@4/dist/css/bootstrap.min.css\">\n<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/font-awesome/css/font-awesome.min.css\">\n<script src=\"../live2d.min.js\"></script>\n<style>\nhtml, body {\n\theight: 100%;\n}\nbody {\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tpadding-top: 40px;\n\tpadding-bottom: 40px;\n\tbackground-color: #f5f5f5;\n}\n.form-signin {\n\twidth: 100%;\n\tmax-width: 330px;\n\tpadding: 15px;\n\tmargin: 0 auto;\n}\n.form-signin .checkbox {\n\tfont-weight: 400;\n}\n.form-signin .form-control {\n\tposition: relative;\n\tbox-sizing: border-box;\n\theight: auto;\n\tpadding: 10px;\n\tfont-size: 16px;\n}\n.form-signin .form-control:focus {\n\tz-index: 2;\n}\n.form-signin input[type=text] {\n\tmargin-bottom: -1px;\n\tborder-bottom-right-radius: 0;\n\tborder-bottom-left-radius: 0;\n}\n.form-signin input[type=password] {\n\tmargin-bottom: 10px;\n\tborder-top-left-radius: 0;\n\tborder-top-right-radius: 0;\n}\n#stage {\n\tposition: relative;\n}\n#stage img {\n\twidth: 100%;\n\tmargin-bottom: 20px;\n\tborder-radius: 20px;\n}\n#stage a {\n\tposition: absolute;\n\twidth: 2em;\n\theight: 2em;\n\tborder-radius: 50%;\n}\n#inner {\n\tposition: relative;\n\tbackground-color: #999;\n\tclip-path: circle(120px at center);\n}\n#cover {\n\tposition: absolute;\n\tbackground-color: #CB3837;\n\twidth: 100%;\n\theight: 100%;\n\tbottom: 10%;\n\ttransition: all 1s;\n\tbox-shadow: 0 0 0 5px rgba(0, 0, 0, .1);\n}\n#text {\n\tposition: absolute;\n\tbottom: 30%;\n\tfont-size: 2em;\n\tleft: 50%;\n\ttransform: translateX(-50%);\n\topacity: 0.4;\n\tfont-weight: bold;\n}\n#detail {\n\tposition: absolute;\n\tbackground: rgba(255, 255, 255, .1);\n\twidth: 100%;\n\theight: 10px;\n\tbottom: 0;\n}\n#handle {\n\tposition: absolute;\n\tbackground: #ccc;\n\tbottom: -2px;\n\tbox-shadow: 0 1px 0 1px rgba(0, 0, 0, .1);\n\theight: 8px;\n\tleft: 50%;\n\tmargin-left: -15px;\n\twidth: 30px;\n\tcursor: pointer;\n}\n#info {\n\tleft: 40px;\n\tbottom: 20px;\n}\n#refresh {\n\tright: 40px;\n\tbottom: 20px;\n}\n#live2d {\n\tcursor: grab;\n\theight: 300px;\n\twidth: 300px;\n}\n#live2d:active {\n\tcursor: grabbing;\n}\n</style>\n</head>\n<body class=\"text-center\">\n<form class=\"form-signin\" action=\"login.php\" method=\"post\">\n\t<div id=\"stage\">\n\t\t<div id=\"inner\">\n\t\t\t<div id=\"cover\">\n\t\t\t\t<div id=\"text\">\n\t\t\t\t\t<span style=\"color: cyan;\">MIMI</span><span style=\"color: white;\">POWERED</span>\n\t\t\t\t</div>\n\t\t\t\t<div id=\"detail\"></div>\n\t\t\t\t<div id=\"handle\"></div>\n\t\t\t</div>\n\t\t\t<canvas class=\"mb-4\" id=\"live2d\" width=\"800\" height=\"800\"></canvas>\n\t\t</div>\n\t\t<a id=\"info\" href=\"javascript:info()\"><i class=\"fa fa-lg fa-info\"></i></a>\n\t\t<a id=\"refresh\" href=\"javascript:refresh()\"><i class=\"fa fa-lg fa-refresh\"></i></a>\n\t</div>\n\t<h1 class=\"h3 mb-3 font-weight-normal\">看板娘登陆平台</h1>\n\t<label for=\"room\" class=\"sr-only\">用户名</label>\n\t<input type=\"text\" name=\"room\" class=\"form-control\" placeholder=\"用户名\" required autofocus>\n\t<label for=\"pass\" class=\"sr-only\">密码</label>\n\t<input type=\"password\" name=\"pass\" class=\"form-control\" placeholder=\"密码\" required>\n\t<div class=\"checkbox mb-3\">\n\t\t<label>\n\t\t\t<input type=\"checkbox\" value=\"remember-me\"> 记住我\n\t\t</label>\n\t</div>\n\t<button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">登录</button>\n\t<p class=\"mt-5 mb-3 text-muted\">Copyleft &copy; Mimi 2019</p>\n</form>\n<script>\n/*\n * _(:з」∠)_\n * Created by Shuqiao Zhang in 2019.\n * https://zhangshuqiao.org\n */\n\n/*\n * This program is free software: you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n */\nwindow.addEventListener(\"load\", () => {\n\t\"use strict\";\n\n\tif (!CSS.supports(\"clip-path\", \"circle(120px at center)\")) {\n\t\tdocument.getElementById(\"stage\").innerHTML = '<img src=\"../assets/screenshot-1.png\">';\n\t\treturn;\n\t}\n\n\tlet apiPath = \"https://live2d.fghrsh.net/api\", state = 0,\n\t\tmodelId = localStorage.getItem(\"modelId\"),\n\t\tmodelTexturesId = localStorage.getItem(\"modelTexturesId\");\n\tif (modelId === null) {\n\t\tmodelId = 1;\n\t\tmodelTexturesId = 53;\n\t}\n\tloadModel(modelId, modelTexturesId);\n\n\tfunction loadModel(modelId, modelTexturesId) {\n\t\tlocalStorage.setItem(\"modelId\", modelId);\n\t\tif (modelTexturesId === undefined) modelTexturesId = 0;\n\t\tlocalStorage.setItem(\"modelTexturesId\", modelTexturesId);\n\t\tloadlive2d(\"live2d\", `${apiPath}/get/?id=${modelId}-${modelTexturesId}`, null);\n\t\tconsole.log(\"live2d\", `模型 ${modelId}-${modelTexturesId} 加载完成`);\n\t\tsetTimeout(() => {\n\t\t\tcoverPosition(\"80%\");\n\t\t\tstate = 2;\n\t\t}, 2000);\n\t}\n\n\tfunction loadRandModel() {\n\t\tconst modelId = localStorage.getItem(\"modelId\"),\n\t\t\tmodelTexturesId = localStorage.getItem(\"modelTexturesId\");\n\t\tfetch(`${apiPath}/rand_textures/?id=${modelId}-${modelTexturesId}`)\n\t\t\t.then(response => response.json())\n\t\t\t.then(result => {\n\t\t\t\tloadModel(modelId, result.textures.id);\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tstate = 2;\n\t\t\t\t\tcoverPosition(\"80%\");\n\t\t\t\t\tdocument.getElementById(\"refresh\").setAttribute(\"href\", \"javascript:refresh()\");\n\t\t\t\t}, 1000);\n\t\t\t});\n\t}\n\n\tfunction loadOtherModel() {\n\t\tconst modelId = localStorage.getItem(\"modelId\");\n\t\tfetch(`${apiPath}/switch/?id=${modelId}`)\n\t\t\t.then(response => response.json())\n\t\t\t.then(result => {\n\t\t\t\tloadModel(result.model.id);\n\t\t\t});\n\t}\n\n\tfunction coverPosition(pos) {\n\t\tdocument.getElementById(\"cover\").style.bottom = pos;\n\t}\n\n\twindow.info = function() {\n\t\tfetch(\"https://v1.hitokoto.cn\")\n\t\t\t.then(response => response.json())\n\t\t\t.then(result => {\n\t\t\t\talert(\"「\" + result.hitokoto + \"」——\" + result.from);\n\t\t\t});\n\t};\n\n\twindow.refresh = function() {\n\t\tstate = 0;\n\t\tcoverPosition(\"10%\");\n\t\tdocument.getElementById(\"refresh\").setAttribute(\"href\", \"javascript:void(0)\");\n\t\tsetTimeout(loadRandModel, 1000);\n\t};\n\n\tdocument.getElementById(\"handle\").addEventListener(\"click\", () => {\n\t\tif (state === 1) {\n\t\t\tstate = 2;\n\t\t\tcoverPosition(\"80%\");\n\t\t}\n\t\telse if (state === 2) {\n\t\t\tstate = 1;\n\t\t\tcoverPosition(\"20%\");\n\t\t}\n\t});\n\n\tdocument.querySelector(\"input[type=password]\").addEventListener(\"focus\", () => {\n\t\tif (state === 2) {\n\t\t\tstate = 1;\n\t\t\tcoverPosition(\"20%\");\n\t\t}\n\t});\n\tdocument.querySelector(\"input[type=password]\").addEventListener(\"blur\", () => {\n\t\tif (state === 1) {\n\t\t\tstate = 2;\n\t\t\tcoverPosition(\"80%\");\n\t\t}\n\t});\n});\n</script>\n</body>\n</html>\n"}],"Post":[{"title":"Autowired注解警告的解决办法","date":"2022-03-28T03:20:43.000Z","_content":"\n# @AutoWired 在idea报警告\n\n近期，发现@AutoWired注解在idea中总是报警告\n\n## java代码\n\n如下：\n\n```java\n@Controller\npublic class UserController {\n\n    @Autowired\n    private UserService userService;\n\n}\n```\n\n## 警告内容\n\n如下：\n\n![](2022-03-28-11-30-49-1648438205(1).png)\n\n## 解决办法\n\n于是乎，关联性的在网上找了找资料，用以下的写法不会报警告，同时这种写法也是spring官方推荐的写法，代码如下：\n\n```java\n@Controller\npublic class UserController {\n\n    private final UserService userService;\n\n    public UserController(UserService userService){\n        this.userService = userService;\n    }\n\n}\n```\n\n## Lombok优雅写法\n\n```java\n@Controller\n@RequiredArgsConstructor(onConstructor = @__(@Autowired))\npublic clas UserController {\n    //这里必须是final,若不使用final,用@NotNull注解也是可以的\n    private final UserService userService;\n\n}\n```\n\n# 拓展学习\n\n由此，我这边拓展到了spring的三种依赖注入方式：\n\n- Field Injection\n\n- Constructor Injection\n\n- Setter Injection\n\n## Field Injection\n\n`@Autowired`注解的一大使用场景就是`Field Injection`。\n\n具体形式如下：\n\n```java\n@Controller\npublic class UserController {\n\n    @Autowired\n    private UserService userService;\n\n}\n```\n\n这种注入方式通过Java的反射机制实现，所以private的成员也可以被注入具体的对象。\n\n## Constructor Injection\n\n`Constructor Injection`是构造器注入，是我们日常最为推荐的一种使用方式。\n\n具体形式如下：\n\n```java\n@Controller\npublic class UserController {\n\n    private final UserService userService;\n\n    public UserController(UserService userService){\n        this.userService = userService;\n    }\n\n}\n```\n\n这种注入方式很直接，通过对象构建的时候建立关系，所以这种方式对对象创建的顺序会有要求，当然Spring会为你搞定这样的先后顺序，除非你出现循环依赖，然后就会抛出异常。\n\n## Setter Injection\n\n`Setter Injection`也会用到`@Autowired`注解，但使用方式与`Field Injection`有所不同，`Field Injection`是用在成员变量上，而`Setter Injection`的时候，是用在成员变量的Setter函数上。\n\n具体形式如下：\n\n```java\n@Controller\npublic class UserController {\n\n    private UserService userService;\n\n    @Autowired\n    public void setUserService(UserService userService){\n        this.userService = userService;\n    }\n}\n```\n\n这种注入方式也很好理解，就是通过调用成员变量的set方法来注入想要使用的依赖对象。\n\n## 三种依赖注入方式比较\n\n| 注入方式        | 可靠性 | 可维护性 | 可测试性 | 灵活性 | 循环关系的检测 | 性能影响 |\n| ----------- | --- | ---- | ---- | --- | ------- | ---- |\n| Field       | 不可靠 | 低    | 差    | 很灵活 | 不检测     | 启动快  |\n| Constructor | 可靠  | 高    | 好    | 不灵活 | 自动检测    | 启动慢  |\n| Setter      | 不可靠 | 低    | 好    | 很灵活 | 不检测     | 启动快  |\n\n# 参考：\n\n1. https://docs.spring.io/spring-framework/docs/current/reference/html/core.html#beans-constructor-injection\n\n2. https://docs.spring.io/spring-framework/docs/current/reference/html/core.html#beans-setter-injection\n\n3. [利用Lombok编写优雅的spring依赖注入代码,去掉繁人的@Autowired_路遥知码农的博客-CSDN博客_lombok 依赖注入](https://blog.csdn.net/weixin_43203497/article/details/104193350)\n\n4. https://segmentfault.com/a/1190000040914633\n","source":"_posts/autowiredWaring.md","raw":"---\ntitle: Autowired注解警告的解决办法\ndate: 2022-03-28 11:20:43\ntags: [java]\ncategories: [java]\n---\n\n# @AutoWired 在idea报警告\n\n近期，发现@AutoWired注解在idea中总是报警告\n\n## java代码\n\n如下：\n\n```java\n@Controller\npublic class UserController {\n\n    @Autowired\n    private UserService userService;\n\n}\n```\n\n## 警告内容\n\n如下：\n\n![](2022-03-28-11-30-49-1648438205(1).png)\n\n## 解决办法\n\n于是乎，关联性的在网上找了找资料，用以下的写法不会报警告，同时这种写法也是spring官方推荐的写法，代码如下：\n\n```java\n@Controller\npublic class UserController {\n\n    private final UserService userService;\n\n    public UserController(UserService userService){\n        this.userService = userService;\n    }\n\n}\n```\n\n## Lombok优雅写法\n\n```java\n@Controller\n@RequiredArgsConstructor(onConstructor = @__(@Autowired))\npublic clas UserController {\n    //这里必须是final,若不使用final,用@NotNull注解也是可以的\n    private final UserService userService;\n\n}\n```\n\n# 拓展学习\n\n由此，我这边拓展到了spring的三种依赖注入方式：\n\n- Field Injection\n\n- Constructor Injection\n\n- Setter Injection\n\n## Field Injection\n\n`@Autowired`注解的一大使用场景就是`Field Injection`。\n\n具体形式如下：\n\n```java\n@Controller\npublic class UserController {\n\n    @Autowired\n    private UserService userService;\n\n}\n```\n\n这种注入方式通过Java的反射机制实现，所以private的成员也可以被注入具体的对象。\n\n## Constructor Injection\n\n`Constructor Injection`是构造器注入，是我们日常最为推荐的一种使用方式。\n\n具体形式如下：\n\n```java\n@Controller\npublic class UserController {\n\n    private final UserService userService;\n\n    public UserController(UserService userService){\n        this.userService = userService;\n    }\n\n}\n```\n\n这种注入方式很直接，通过对象构建的时候建立关系，所以这种方式对对象创建的顺序会有要求，当然Spring会为你搞定这样的先后顺序，除非你出现循环依赖，然后就会抛出异常。\n\n## Setter Injection\n\n`Setter Injection`也会用到`@Autowired`注解，但使用方式与`Field Injection`有所不同，`Field Injection`是用在成员变量上，而`Setter Injection`的时候，是用在成员变量的Setter函数上。\n\n具体形式如下：\n\n```java\n@Controller\npublic class UserController {\n\n    private UserService userService;\n\n    @Autowired\n    public void setUserService(UserService userService){\n        this.userService = userService;\n    }\n}\n```\n\n这种注入方式也很好理解，就是通过调用成员变量的set方法来注入想要使用的依赖对象。\n\n## 三种依赖注入方式比较\n\n| 注入方式        | 可靠性 | 可维护性 | 可测试性 | 灵活性 | 循环关系的检测 | 性能影响 |\n| ----------- | --- | ---- | ---- | --- | ------- | ---- |\n| Field       | 不可靠 | 低    | 差    | 很灵活 | 不检测     | 启动快  |\n| Constructor | 可靠  | 高    | 好    | 不灵活 | 自动检测    | 启动慢  |\n| Setter      | 不可靠 | 低    | 好    | 很灵活 | 不检测     | 启动快  |\n\n# 参考：\n\n1. https://docs.spring.io/spring-framework/docs/current/reference/html/core.html#beans-constructor-injection\n\n2. https://docs.spring.io/spring-framework/docs/current/reference/html/core.html#beans-setter-injection\n\n3. [利用Lombok编写优雅的spring依赖注入代码,去掉繁人的@Autowired_路遥知码农的博客-CSDN博客_lombok 依赖注入](https://blog.csdn.net/weixin_43203497/article/details/104193350)\n\n4. https://segmentfault.com/a/1190000040914633\n","slug":"autowiredWaring","published":1,"updated":"2022-06-03T06:00:55.557Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl42z5h5b00013gn65c895mqk","content":"<h1>@AutoWired 在idea报警告</h1>\n<p>近期，发现@AutoWired注解在idea中总是报警告</p>\n<h2 id=\"java代码\">java代码</h2>\n<p>如下：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">@Controller\npublic class UserController &#123;\n\n    @Autowired\n    private UserService userService;\n\n&#125;</code></pre>\n<h2 id=\"警告内容\">警告内容</h2>\n<p>如下：</p>\n<p><img src=\"2022-03-28-11-30-49-1648438205(1).png\" alt=\"\"></p>\n<h2 id=\"解决办法\">解决办法</h2>\n<p>于是乎，关联性的在网上找了找资料，用以下的写法不会报警告，同时这种写法也是spring官方推荐的写法，代码如下：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">@Controller\npublic class UserController &#123;\n\n    private final UserService userService;\n\n    public UserController(UserService userService)&#123;\n        this.userService &#x3D; userService;\n    &#125;\n\n&#125;</code></pre>\n<h2 id=\"Lombok优雅写法\">Lombok优雅写法</h2>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">@Controller\n@RequiredArgsConstructor(onConstructor &#x3D; @__(@Autowired))\npublic clas UserController &#123;\n    &#x2F;&#x2F;这里必须是final,若不使用final,用@NotNull注解也是可以的\n    private final UserService userService;\n\n&#125;</code></pre>\n<h1>拓展学习</h1>\n<p>由此，我这边拓展到了spring的三种依赖注入方式：</p>\n<ul>\n<li>\n<p>Field Injection</p>\n</li>\n<li>\n<p>Constructor Injection</p>\n</li>\n<li>\n<p>Setter Injection</p>\n</li>\n</ul>\n<h2 id=\"Field-Injection\">Field Injection</h2>\n<p><code>@Autowired</code>注解的一大使用场景就是<code>Field Injection</code>。</p>\n<p>具体形式如下：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">@Controller\npublic class UserController &#123;\n\n    @Autowired\n    private UserService userService;\n\n&#125;</code></pre>\n<p>这种注入方式通过Java的反射机制实现，所以private的成员也可以被注入具体的对象。</p>\n<h2 id=\"Constructor-Injection\">Constructor Injection</h2>\n<p><code>Constructor Injection</code>是构造器注入，是我们日常最为推荐的一种使用方式。</p>\n<p>具体形式如下：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">@Controller\npublic class UserController &#123;\n\n    private final UserService userService;\n\n    public UserController(UserService userService)&#123;\n        this.userService &#x3D; userService;\n    &#125;\n\n&#125;</code></pre>\n<p>这种注入方式很直接，通过对象构建的时候建立关系，所以这种方式对对象创建的顺序会有要求，当然Spring会为你搞定这样的先后顺序，除非你出现循环依赖，然后就会抛出异常。</p>\n<h2 id=\"Setter-Injection\">Setter Injection</h2>\n<p><code>Setter Injection</code>也会用到<code>@Autowired</code>注解，但使用方式与<code>Field Injection</code>有所不同，<code>Field Injection</code>是用在成员变量上，而<code>Setter Injection</code>的时候，是用在成员变量的Setter函数上。</p>\n<p>具体形式如下：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">@Controller\npublic class UserController &#123;\n\n    private UserService userService;\n\n    @Autowired\n    public void setUserService(UserService userService)&#123;\n        this.userService &#x3D; userService;\n    &#125;\n&#125;</code></pre>\n<p>这种注入方式也很好理解，就是通过调用成员变量的set方法来注入想要使用的依赖对象。</p>\n<h2 id=\"三种依赖注入方式比较\">三种依赖注入方式比较</h2>\n<table>\n<thead>\n<tr>\n<th>注入方式</th>\n<th>可靠性</th>\n<th>可维护性</th>\n<th>可测试性</th>\n<th>灵活性</th>\n<th>循环关系的检测</th>\n<th>性能影响</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Field</td>\n<td>不可靠</td>\n<td>低</td>\n<td>差</td>\n<td>很灵活</td>\n<td>不检测</td>\n<td>启动快</td>\n</tr>\n<tr>\n<td>Constructor</td>\n<td>可靠</td>\n<td>高</td>\n<td>好</td>\n<td>不灵活</td>\n<td>自动检测</td>\n<td>启动慢</td>\n</tr>\n<tr>\n<td>Setter</td>\n<td>不可靠</td>\n<td>低</td>\n<td>好</td>\n<td>很灵活</td>\n<td>不检测</td>\n<td>启动快</td>\n</tr>\n</tbody>\n</table>\n<h1>参考：</h1>\n<ol>\n<li>\n<p><a href=\"https://docs.spring.io/spring-framework/docs/current/reference/html/core.html#beans-constructor-injection\">https://docs.spring.io/spring-framework/docs/current/reference/html/core.html#beans-constructor-injection</a></p>\n</li>\n<li>\n<p><a href=\"https://docs.spring.io/spring-framework/docs/current/reference/html/core.html#beans-setter-injection\">https://docs.spring.io/spring-framework/docs/current/reference/html/core.html#beans-setter-injection</a></p>\n</li>\n<li>\n<p><a href=\"https://blog.csdn.net/weixin_43203497/article/details/104193350\">利用Lombok编写优雅的spring依赖注入代码,去掉繁人的@Autowired_路遥知码农的博客-CSDN博客_lombok 依赖注入</a></p>\n</li>\n<li>\n<p><a href=\"https://segmentfault.com/a/1190000040914633\">https://segmentfault.com/a/1190000040914633</a></p>\n</li>\n</ol>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"cover":"https://blog.huangge1199.cn/post/pyControl/bg.jpeg","excerpt":"","more":"<h1>@AutoWired 在idea报警告</h1>\n<p>近期，发现@AutoWired注解在idea中总是报警告</p>\n<h2 id=\"java代码\">java代码</h2>\n<p>如下：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">@Controller\npublic class UserController &#123;\n\n    @Autowired\n    private UserService userService;\n\n&#125;</code></pre>\n<h2 id=\"警告内容\">警告内容</h2>\n<p>如下：</p>\n<p><img src=\"2022-03-28-11-30-49-1648438205(1).png\" alt=\"\"></p>\n<h2 id=\"解决办法\">解决办法</h2>\n<p>于是乎，关联性的在网上找了找资料，用以下的写法不会报警告，同时这种写法也是spring官方推荐的写法，代码如下：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">@Controller\npublic class UserController &#123;\n\n    private final UserService userService;\n\n    public UserController(UserService userService)&#123;\n        this.userService &#x3D; userService;\n    &#125;\n\n&#125;</code></pre>\n<h2 id=\"Lombok优雅写法\">Lombok优雅写法</h2>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">@Controller\n@RequiredArgsConstructor(onConstructor &#x3D; @__(@Autowired))\npublic clas UserController &#123;\n    &#x2F;&#x2F;这里必须是final,若不使用final,用@NotNull注解也是可以的\n    private final UserService userService;\n\n&#125;</code></pre>\n<h1>拓展学习</h1>\n<p>由此，我这边拓展到了spring的三种依赖注入方式：</p>\n<ul>\n<li>\n<p>Field Injection</p>\n</li>\n<li>\n<p>Constructor Injection</p>\n</li>\n<li>\n<p>Setter Injection</p>\n</li>\n</ul>\n<h2 id=\"Field-Injection\">Field Injection</h2>\n<p><code>@Autowired</code>注解的一大使用场景就是<code>Field Injection</code>。</p>\n<p>具体形式如下：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">@Controller\npublic class UserController &#123;\n\n    @Autowired\n    private UserService userService;\n\n&#125;</code></pre>\n<p>这种注入方式通过Java的反射机制实现，所以private的成员也可以被注入具体的对象。</p>\n<h2 id=\"Constructor-Injection\">Constructor Injection</h2>\n<p><code>Constructor Injection</code>是构造器注入，是我们日常最为推荐的一种使用方式。</p>\n<p>具体形式如下：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">@Controller\npublic class UserController &#123;\n\n    private final UserService userService;\n\n    public UserController(UserService userService)&#123;\n        this.userService &#x3D; userService;\n    &#125;\n\n&#125;</code></pre>\n<p>这种注入方式很直接，通过对象构建的时候建立关系，所以这种方式对对象创建的顺序会有要求，当然Spring会为你搞定这样的先后顺序，除非你出现循环依赖，然后就会抛出异常。</p>\n<h2 id=\"Setter-Injection\">Setter Injection</h2>\n<p><code>Setter Injection</code>也会用到<code>@Autowired</code>注解，但使用方式与<code>Field Injection</code>有所不同，<code>Field Injection</code>是用在成员变量上，而<code>Setter Injection</code>的时候，是用在成员变量的Setter函数上。</p>\n<p>具体形式如下：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">@Controller\npublic class UserController &#123;\n\n    private UserService userService;\n\n    @Autowired\n    public void setUserService(UserService userService)&#123;\n        this.userService &#x3D; userService;\n    &#125;\n&#125;</code></pre>\n<p>这种注入方式也很好理解，就是通过调用成员变量的set方法来注入想要使用的依赖对象。</p>\n<h2 id=\"三种依赖注入方式比较\">三种依赖注入方式比较</h2>\n<table>\n<thead>\n<tr>\n<th>注入方式</th>\n<th>可靠性</th>\n<th>可维护性</th>\n<th>可测试性</th>\n<th>灵活性</th>\n<th>循环关系的检测</th>\n<th>性能影响</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Field</td>\n<td>不可靠</td>\n<td>低</td>\n<td>差</td>\n<td>很灵活</td>\n<td>不检测</td>\n<td>启动快</td>\n</tr>\n<tr>\n<td>Constructor</td>\n<td>可靠</td>\n<td>高</td>\n<td>好</td>\n<td>不灵活</td>\n<td>自动检测</td>\n<td>启动慢</td>\n</tr>\n<tr>\n<td>Setter</td>\n<td>不可靠</td>\n<td>低</td>\n<td>好</td>\n<td>很灵活</td>\n<td>不检测</td>\n<td>启动快</td>\n</tr>\n</tbody>\n</table>\n<h1>参考：</h1>\n<ol>\n<li>\n<p><a href=\"https://docs.spring.io/spring-framework/docs/current/reference/html/core.html#beans-constructor-injection\">https://docs.spring.io/spring-framework/docs/current/reference/html/core.html#beans-constructor-injection</a></p>\n</li>\n<li>\n<p><a href=\"https://docs.spring.io/spring-framework/docs/current/reference/html/core.html#beans-setter-injection\">https://docs.spring.io/spring-framework/docs/current/reference/html/core.html#beans-setter-injection</a></p>\n</li>\n<li>\n<p><a href=\"https://blog.csdn.net/weixin_43203497/article/details/104193350\">利用Lombok编写优雅的spring依赖注入代码,去掉繁人的@Autowired_路遥知码农的博客-CSDN博客_lombok 依赖注入</a></p>\n</li>\n<li>\n<p><a href=\"https://segmentfault.com/a/1190000040914633\">https://segmentfault.com/a/1190000040914633</a></p>\n</li>\n</ol>\n"},{"title":"建造者模式","date":"2022-04-26T09:10:11.000Z","_content":"# 定义\n建造者模式是将一个复杂对象的构建与它的表示分离，使得同样的构建过程可以创建不同的表示\n\n特征：用户只需指定需要建造的类型就可以获得对象，建造过程及细节不需要了解\n\n属于创建型模式\n\n# 设计中四个角色\n- 产品（Product）：要创建的产品类对象\n- 建造者抽象（Builder）：建造者的抽象类，规范产品对象的各个组成部分的构建，一般由子类实现具体的建造过程\n- 建造者（ConcreBuilder）：具体的Builder类，根据不同的业务逻辑，具体化对象的各个组成部分的创建\n- 调用者（Director）：调用具体的建造者，来创建对象的各个部分，在指导者中不涉及具体产品的信息，只负责保证对象各部分完整创建或按某种顺序创建\n\n# 适用场景\n- 相同的方法，不同的执行顺序，产生不同的结果时\n- 多个部件或零件，都可以装配到一个对象中，但是产生的结果又不同时\n- 产品类非常复杂，或者产品类中的调用顺序不同产生不同的作用\n- 当初始化一个对象特别复杂，参数多，而且很多参数都具有默认值时\n\n# 优点\n- 封装性好，创建和使用分离\n- 拓展性好，建造类之间独立、一定程度上解耦 \n# 缺点\n- 产生多余的Builder对象\n- 产品内部发生变化，建造者都要修改，成本较大\n\n# 建造者模式和工厂模式的区别\n\n1. 建造者模式更加注重方法的调用顺序，工厂模式注重于创建对象。\n2. 创建对象的力度不同，建造者模式创建复杂的对象，由各种复杂的部件组成，工厂模式创建出来的都一样。\n3. 关注点：工厂模式模式只需要把对象创建出来就可以了，而建造者模式中不仅要创建出这个对象，还要知道这个对象由哪些部件组成。\n4. 建造者模式根据建造过程中的顺序不一样，最终的对象部件组成也不一样。\n\n","source":"_posts/builder.md","raw":"---\ntitle: 建造者模式\ndate: 2022-04-26 17:10:11\ntags: [学习笔记,设计模式]\ncategories: [设计模式]\n---\n# 定义\n建造者模式是将一个复杂对象的构建与它的表示分离，使得同样的构建过程可以创建不同的表示\n\n特征：用户只需指定需要建造的类型就可以获得对象，建造过程及细节不需要了解\n\n属于创建型模式\n\n# 设计中四个角色\n- 产品（Product）：要创建的产品类对象\n- 建造者抽象（Builder）：建造者的抽象类，规范产品对象的各个组成部分的构建，一般由子类实现具体的建造过程\n- 建造者（ConcreBuilder）：具体的Builder类，根据不同的业务逻辑，具体化对象的各个组成部分的创建\n- 调用者（Director）：调用具体的建造者，来创建对象的各个部分，在指导者中不涉及具体产品的信息，只负责保证对象各部分完整创建或按某种顺序创建\n\n# 适用场景\n- 相同的方法，不同的执行顺序，产生不同的结果时\n- 多个部件或零件，都可以装配到一个对象中，但是产生的结果又不同时\n- 产品类非常复杂，或者产品类中的调用顺序不同产生不同的作用\n- 当初始化一个对象特别复杂，参数多，而且很多参数都具有默认值时\n\n# 优点\n- 封装性好，创建和使用分离\n- 拓展性好，建造类之间独立、一定程度上解耦 \n# 缺点\n- 产生多余的Builder对象\n- 产品内部发生变化，建造者都要修改，成本较大\n\n# 建造者模式和工厂模式的区别\n\n1. 建造者模式更加注重方法的调用顺序，工厂模式注重于创建对象。\n2. 创建对象的力度不同，建造者模式创建复杂的对象，由各种复杂的部件组成，工厂模式创建出来的都一样。\n3. 关注点：工厂模式模式只需要把对象创建出来就可以了，而建造者模式中不仅要创建出这个对象，还要知道这个对象由哪些部件组成。\n4. 建造者模式根据建造过程中的顺序不一样，最终的对象部件组成也不一样。\n\n","slug":"builder","published":1,"updated":"2022-06-03T06:00:55.557Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl42z5h5e00033gn68tizfhla","content":"<h1>定义</h1>\n<p>建造者模式是将一个复杂对象的构建与它的表示分离，使得同样的构建过程可以创建不同的表示</p>\n<p>特征：用户只需指定需要建造的类型就可以获得对象，建造过程及细节不需要了解</p>\n<p>属于创建型模式</p>\n<h1>设计中四个角色</h1>\n<ul>\n<li>产品（Product）：要创建的产品类对象</li>\n<li>建造者抽象（Builder）：建造者的抽象类，规范产品对象的各个组成部分的构建，一般由子类实现具体的建造过程</li>\n<li>建造者（ConcreBuilder）：具体的Builder类，根据不同的业务逻辑，具体化对象的各个组成部分的创建</li>\n<li>调用者（Director）：调用具体的建造者，来创建对象的各个部分，在指导者中不涉及具体产品的信息，只负责保证对象各部分完整创建或按某种顺序创建</li>\n</ul>\n<h1>适用场景</h1>\n<ul>\n<li>相同的方法，不同的执行顺序，产生不同的结果时</li>\n<li>多个部件或零件，都可以装配到一个对象中，但是产生的结果又不同时</li>\n<li>产品类非常复杂，或者产品类中的调用顺序不同产生不同的作用</li>\n<li>当初始化一个对象特别复杂，参数多，而且很多参数都具有默认值时</li>\n</ul>\n<h1>优点</h1>\n<ul>\n<li>封装性好，创建和使用分离</li>\n<li>拓展性好，建造类之间独立、一定程度上解耦</li>\n</ul>\n<h1>缺点</h1>\n<ul>\n<li>产生多余的Builder对象</li>\n<li>产品内部发生变化，建造者都要修改，成本较大</li>\n</ul>\n<h1>建造者模式和工厂模式的区别</h1>\n<ol>\n<li>建造者模式更加注重方法的调用顺序，工厂模式注重于创建对象。</li>\n<li>创建对象的力度不同，建造者模式创建复杂的对象，由各种复杂的部件组成，工厂模式创建出来的都一样。</li>\n<li>关注点：工厂模式模式只需要把对象创建出来就可以了，而建造者模式中不仅要创建出这个对象，还要知道这个对象由哪些部件组成。</li>\n<li>建造者模式根据建造过程中的顺序不一样，最终的对象部件组成也不一样。</li>\n</ol>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"cover":"https://blog.huangge1199.cn/post/pyControl/bg.jpeg","excerpt":"","more":"<h1>定义</h1>\n<p>建造者模式是将一个复杂对象的构建与它的表示分离，使得同样的构建过程可以创建不同的表示</p>\n<p>特征：用户只需指定需要建造的类型就可以获得对象，建造过程及细节不需要了解</p>\n<p>属于创建型模式</p>\n<h1>设计中四个角色</h1>\n<ul>\n<li>产品（Product）：要创建的产品类对象</li>\n<li>建造者抽象（Builder）：建造者的抽象类，规范产品对象的各个组成部分的构建，一般由子类实现具体的建造过程</li>\n<li>建造者（ConcreBuilder）：具体的Builder类，根据不同的业务逻辑，具体化对象的各个组成部分的创建</li>\n<li>调用者（Director）：调用具体的建造者，来创建对象的各个部分，在指导者中不涉及具体产品的信息，只负责保证对象各部分完整创建或按某种顺序创建</li>\n</ul>\n<h1>适用场景</h1>\n<ul>\n<li>相同的方法，不同的执行顺序，产生不同的结果时</li>\n<li>多个部件或零件，都可以装配到一个对象中，但是产生的结果又不同时</li>\n<li>产品类非常复杂，或者产品类中的调用顺序不同产生不同的作用</li>\n<li>当初始化一个对象特别复杂，参数多，而且很多参数都具有默认值时</li>\n</ul>\n<h1>优点</h1>\n<ul>\n<li>封装性好，创建和使用分离</li>\n<li>拓展性好，建造类之间独立、一定程度上解耦</li>\n</ul>\n<h1>缺点</h1>\n<ul>\n<li>产生多余的Builder对象</li>\n<li>产品内部发生变化，建造者都要修改，成本较大</li>\n</ul>\n<h1>建造者模式和工厂模式的区别</h1>\n<ol>\n<li>建造者模式更加注重方法的调用顺序，工厂模式注重于创建对象。</li>\n<li>创建对象的力度不同，建造者模式创建复杂的对象，由各种复杂的部件组成，工厂模式创建出来的都一样。</li>\n<li>关注点：工厂模式模式只需要把对象创建出来就可以了，而建造者模式中不仅要创建出这个对象，还要知道这个对象由哪些部件组成。</li>\n<li>建造者模式根据建造过程中的顺序不一样，最终的对象部件组成也不一样。</li>\n</ol>\n"},{"title":"力扣2267. 检查是否有合法括号字符串路径","date":"2022-05-10T02:50:21.000Z","_content":"\n力扣周赛292--第四题\n\n[2267. 检查是否有合法括号字符串路径](https://leetcode.cn/problems/check-if-there-is-a-valid-parentheses-string-path/)\n\n# 题目\n\n<p>一个括号字符串是一个 <strong>非空</strong> 且只包含 <code>'('</code> 和 <code>')'</code> 的字符串。如果下面 <strong>任意</strong> 条件为 <strong>真</strong> ，那么这个括号字符串就是 <strong>合法的</strong> 。</p>\n\n<ul>  \n   <li>字符串是 <code>()</code> 。</li>  \n   <li>字符串可以表示为 <code>AB</code>（<code>A</code> 连接 <code>B</code>），<code>A</code> 和 <code>B</code> 都是合法括号序列。</li>  \n   <li>字符串可以表示为 <code>(A)</code> ，其中 <code>A</code> 是合法括号序列。</li>  \n</ul>\n\n<p>给你一个 <code>m x n</code> 的括号网格图矩阵 <code>grid</code> 。网格图中一个 <strong>合法括号路径</strong> 是满足以下所有条件的一条路径：</p>\n\n<ul>  \n   <li>路径开始于左上角格子 <code>(0, 0)</code> 。</li>  \n   <li>路径结束于右下角格子 <code>(m - 1, n - 1)</code> 。</li>  \n   <li>路径每次只会向 <strong>下</strong> 或者向 <strong>右</strong> 移动。</li>  \n   <li>路径经过的格子组成的括号字符串是<strong> 合法</strong> 的。</li>  \n</ul>\n\n<p>如果网格图中存在一条 <strong>合法括号路径</strong> ，请返回 <code>true</code> ，否则返回 <code>false</code> 。</p>\n\n<p> </p>\n\n<p><strong>示例 1：</strong></p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2022/03/15/example1drawio.png\" style=\"width: 521px; height: 300px;\" /></p>\n\n<pre>  \n<b>输入：</b>grid = [[\"(\",\"(\",\"(\"],[\")\",\"(\",\")\"],[\"(\",\"(\",\")\"],[\"(\",\"(\",\")\"]]  \n<b>输出：</b>true  \n<b>解释：</b>上图展示了两条路径，它们都是合法括号字符串路径。  \n第一条路径得到的合法字符串是 \"()(())\" 。  \n第二条路径得到的合法字符串是 \"((()))\" 。  \n注意可能有其他的合法括号字符串路径。  \n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2022/03/15/example2drawio.png\" style=\"width: 165px; height: 165px;\" /></p>\n\n<pre>  \n<b>输入：</b>grid = [[\")\",\")\"],[\"(\",\"(\"]]  \n<b>输出：</b>false  \n<b>解释：</b>两条可行路径分别得到 \"))(\" 和 \")((\" 。由于它们都不是合法括号字符串，我们返回 false 。  \n</pre>\n\n<p> </p>\n\n<p><strong>提示：</strong></p>\n\n<ul>  \n   <li><code>m == grid.length</code></li>  \n   <li><code>n == grid[i].length</code></li>  \n   <li><code>1 <= m, n <= 100</code></li>  \n   <li><code>grid[i][j]</code> 要么是 <code>'('</code> ，要么是 <code>')'</code> 。</li>  \n</ul>\n\n# 思路\n\n从左上角到右下角，依次路过，下一个坐标一定是该坐标的右侧或者下侧的坐标，同时玩吗记录下路过到该坐标时未配对的’`'('`的个数，如果是负数则这条路不对旧不用继续下去了。然后一直到右下角的时候，如果个数为1，则满足条件\n\n# 代码\n\nJava\n\n```java\nclass Solution {\n    public boolean hasValidPath(char[][] grid) {\n        xl = grid.length;\n        yl = grid[0].length;\n        use = new boolean[xl][yl][xl * yl];\n        if ((xl + yl) % 2 == 0 || grid[0][0] == ')' || grid[xl - 1][yl - \n            return false;\n        }\n        dfs(grid, 0, 0, 0);\n        return bl;\n    }\n    int xl;\n    int yl;\n    boolean bl = false;\n    boolean[][][] use;\n    private void dfs(char[][] grid, int x, int y, int cnt) {\n        if (x >= xl || y >= yl || cnt > xl - x + yl - y - 1) {\n            return;\n        }\n        if (x == xl - 1 && y == yl - 1) {\n            bl = cnt == 1;\n        }\n        if (use[x][y][cnt]) {\n            return;\n        }\n        use[x][y][cnt] = true;\n        cnt += grid[x][y] == '(' ? 1 : -1;\n        if (cnt < 0) {\n            return;\n        }\n        if (!bl) {\n            dfs(grid, x + 1, y, cnt);\n        }\n        if (!bl) {\n            dfs(grid, x, y + 1, cnt);\n        }\n    }\n}\n```\n","source":"_posts/check-if-there-is-a-valid-parentheses-string-path.md","raw":"---\ntitle: 力扣2267. 检查是否有合法括号字符串路径\ndate: 2022-05-10 10:50:21\ntags: [力扣]\ncategories: [算法,力扣]\n---\n\n力扣周赛292--第四题\n\n[2267. 检查是否有合法括号字符串路径](https://leetcode.cn/problems/check-if-there-is-a-valid-parentheses-string-path/)\n\n# 题目\n\n<p>一个括号字符串是一个 <strong>非空</strong> 且只包含 <code>'('</code> 和 <code>')'</code> 的字符串。如果下面 <strong>任意</strong> 条件为 <strong>真</strong> ，那么这个括号字符串就是 <strong>合法的</strong> 。</p>\n\n<ul>  \n   <li>字符串是 <code>()</code> 。</li>  \n   <li>字符串可以表示为 <code>AB</code>（<code>A</code> 连接 <code>B</code>），<code>A</code> 和 <code>B</code> 都是合法括号序列。</li>  \n   <li>字符串可以表示为 <code>(A)</code> ，其中 <code>A</code> 是合法括号序列。</li>  \n</ul>\n\n<p>给你一个 <code>m x n</code> 的括号网格图矩阵 <code>grid</code> 。网格图中一个 <strong>合法括号路径</strong> 是满足以下所有条件的一条路径：</p>\n\n<ul>  \n   <li>路径开始于左上角格子 <code>(0, 0)</code> 。</li>  \n   <li>路径结束于右下角格子 <code>(m - 1, n - 1)</code> 。</li>  \n   <li>路径每次只会向 <strong>下</strong> 或者向 <strong>右</strong> 移动。</li>  \n   <li>路径经过的格子组成的括号字符串是<strong> 合法</strong> 的。</li>  \n</ul>\n\n<p>如果网格图中存在一条 <strong>合法括号路径</strong> ，请返回 <code>true</code> ，否则返回 <code>false</code> 。</p>\n\n<p> </p>\n\n<p><strong>示例 1：</strong></p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2022/03/15/example1drawio.png\" style=\"width: 521px; height: 300px;\" /></p>\n\n<pre>  \n<b>输入：</b>grid = [[\"(\",\"(\",\"(\"],[\")\",\"(\",\")\"],[\"(\",\"(\",\")\"],[\"(\",\"(\",\")\"]]  \n<b>输出：</b>true  \n<b>解释：</b>上图展示了两条路径，它们都是合法括号字符串路径。  \n第一条路径得到的合法字符串是 \"()(())\" 。  \n第二条路径得到的合法字符串是 \"((()))\" 。  \n注意可能有其他的合法括号字符串路径。  \n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2022/03/15/example2drawio.png\" style=\"width: 165px; height: 165px;\" /></p>\n\n<pre>  \n<b>输入：</b>grid = [[\")\",\")\"],[\"(\",\"(\"]]  \n<b>输出：</b>false  \n<b>解释：</b>两条可行路径分别得到 \"))(\" 和 \")((\" 。由于它们都不是合法括号字符串，我们返回 false 。  \n</pre>\n\n<p> </p>\n\n<p><strong>提示：</strong></p>\n\n<ul>  \n   <li><code>m == grid.length</code></li>  \n   <li><code>n == grid[i].length</code></li>  \n   <li><code>1 <= m, n <= 100</code></li>  \n   <li><code>grid[i][j]</code> 要么是 <code>'('</code> ，要么是 <code>')'</code> 。</li>  \n</ul>\n\n# 思路\n\n从左上角到右下角，依次路过，下一个坐标一定是该坐标的右侧或者下侧的坐标，同时玩吗记录下路过到该坐标时未配对的’`'('`的个数，如果是负数则这条路不对旧不用继续下去了。然后一直到右下角的时候，如果个数为1，则满足条件\n\n# 代码\n\nJava\n\n```java\nclass Solution {\n    public boolean hasValidPath(char[][] grid) {\n        xl = grid.length;\n        yl = grid[0].length;\n        use = new boolean[xl][yl][xl * yl];\n        if ((xl + yl) % 2 == 0 || grid[0][0] == ')' || grid[xl - 1][yl - \n            return false;\n        }\n        dfs(grid, 0, 0, 0);\n        return bl;\n    }\n    int xl;\n    int yl;\n    boolean bl = false;\n    boolean[][][] use;\n    private void dfs(char[][] grid, int x, int y, int cnt) {\n        if (x >= xl || y >= yl || cnt > xl - x + yl - y - 1) {\n            return;\n        }\n        if (x == xl - 1 && y == yl - 1) {\n            bl = cnt == 1;\n        }\n        if (use[x][y][cnt]) {\n            return;\n        }\n        use[x][y][cnt] = true;\n        cnt += grid[x][y] == '(' ? 1 : -1;\n        if (cnt < 0) {\n            return;\n        }\n        if (!bl) {\n            dfs(grid, x + 1, y, cnt);\n        }\n        if (!bl) {\n            dfs(grid, x, y + 1, cnt);\n        }\n    }\n}\n```\n","slug":"check-if-there-is-a-valid-parentheses-string-path","published":1,"updated":"2022-06-03T06:00:55.557Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl42z5h5j00073gn6ec3g7e9j","content":"<p>力扣周赛292–第四题</p>\n<p><a href=\"https://leetcode.cn/problems/check-if-there-is-a-valid-parentheses-string-path/\">2267. 检查是否有合法括号字符串路径</a></p>\n<h1>题目</h1>\n<p>一个括号字符串是一个 <strong>非空</strong> 且只包含 <code>'('</code> 和 <code>')'</code> 的字符串。如果下面 <strong>任意</strong> 条件为 <strong>真</strong> ，那么这个括号字符串就是 <strong>合法的</strong> 。</p>\n<ul>  \n   <li>字符串是 <code>()</code> 。</li>  \n   <li>字符串可以表示为 <code>AB</code>（<code>A</code> 连接 <code>B</code>），<code>A</code> 和 <code>B</code> 都是合法括号序列。</li>  \n   <li>字符串可以表示为 <code>(A)</code> ，其中 <code>A</code> 是合法括号序列。</li>  \n</ul>\n<p>给你一个 <code>m x n</code> 的括号网格图矩阵 <code>grid</code> 。网格图中一个 <strong>合法括号路径</strong> 是满足以下所有条件的一条路径：</p>\n<ul>  \n   <li>路径开始于左上角格子 <code>(0, 0)</code> 。</li>  \n   <li>路径结束于右下角格子 <code>(m - 1, n - 1)</code> 。</li>  \n   <li>路径每次只会向 <strong>下</strong> 或者向 <strong>右</strong> 移动。</li>  \n   <li>路径经过的格子组成的括号字符串是<strong> 合法</strong> 的。</li>  \n</ul>\n<p>如果网格图中存在一条 <strong>合法括号路径</strong> ，请返回 <code>true</code> ，否则返回 <code>false</code> 。</p>\n<p> </p>\n<p><strong>示例 1：</strong></p>\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2022/03/15/example1drawio.png\" style=\"width: 521px; height: 300px;\" /></p>\n<pre>  \n<b>输入：</b>grid = [[\"(\",\"(\",\"(\"],[\")\",\"(\",\")\"],[\"(\",\"(\",\")\"],[\"(\",\"(\",\")\"]]  \n<b>输出：</b>true  \n<b>解释：</b>上图展示了两条路径，它们都是合法括号字符串路径。  \n第一条路径得到的合法字符串是 \"()(())\" 。  \n第二条路径得到的合法字符串是 \"((()))\" 。  \n注意可能有其他的合法括号字符串路径。  \n</pre>\n<p><strong>示例 2：</strong></p>\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2022/03/15/example2drawio.png\" style=\"width: 165px; height: 165px;\" /></p>\n<pre>  \n<b>输入：</b>grid = [[\")\",\")\"],[\"(\",\"(\"]]  \n<b>输出：</b>false  \n<b>解释：</b>两条可行路径分别得到 \"))(\" 和 \")((\" 。由于它们都不是合法括号字符串，我们返回 false 。  \n</pre>\n<p> </p>\n<p><strong>提示：</strong></p>\n<ul>  \n   <li><code>m == grid.length</code></li>  \n   <li><code>n == grid[i].length</code></li>  \n   <li><code>1 <= m, n <= 100</code></li>  \n   <li><code>grid[i][j]</code> 要么是 <code>'('</code> ，要么是 <code>')'</code> 。</li>  \n</ul>\n<h1>思路</h1>\n<p>从左上角到右下角，依次路过，下一个坐标一定是该坐标的右侧或者下侧的坐标，同时玩吗记录下路过到该坐标时未配对的’<code>'('</code>的个数，如果是负数则这条路不对旧不用继续下去了。然后一直到右下角的时候，如果个数为1，则满足条件</p>\n<h1>代码</h1>\n<p>Java</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">class Solution &#123;\n    public boolean hasValidPath(char[][] grid) &#123;\n        xl &#x3D; grid.length;\n        yl &#x3D; grid[0].length;\n        use &#x3D; new boolean[xl][yl][xl * yl];\n        if ((xl + yl) % 2 &#x3D;&#x3D; 0 || grid[0][0] &#x3D;&#x3D; &#39;)&#39; || grid[xl - 1][yl - \n            return false;\n        &#125;\n        dfs(grid, 0, 0, 0);\n        return bl;\n    &#125;\n    int xl;\n    int yl;\n    boolean bl &#x3D; false;\n    boolean[][][] use;\n    private void dfs(char[][] grid, int x, int y, int cnt) &#123;\n        if (x &gt;&#x3D; xl || y &gt;&#x3D; yl || cnt &gt; xl - x + yl - y - 1) &#123;\n            return;\n        &#125;\n        if (x &#x3D;&#x3D; xl - 1 &amp;&amp; y &#x3D;&#x3D; yl - 1) &#123;\n            bl &#x3D; cnt &#x3D;&#x3D; 1;\n        &#125;\n        if (use[x][y][cnt]) &#123;\n            return;\n        &#125;\n        use[x][y][cnt] &#x3D; true;\n        cnt +&#x3D; grid[x][y] &#x3D;&#x3D; &#39;(&#39; ? 1 : -1;\n        if (cnt &lt; 0) &#123;\n            return;\n        &#125;\n        if (!bl) &#123;\n            dfs(grid, x + 1, y, cnt);\n        &#125;\n        if (!bl) &#123;\n            dfs(grid, x, y + 1, cnt);\n        &#125;\n    &#125;\n&#125;</code></pre>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"cover":"https://blog.huangge1199.cn/post/pyControl/bg.jpeg","excerpt":"","more":"<p>力扣周赛292–第四题</p>\n<p><a href=\"https://leetcode.cn/problems/check-if-there-is-a-valid-parentheses-string-path/\">2267. 检查是否有合法括号字符串路径</a></p>\n<h1>题目</h1>\n<p>一个括号字符串是一个 <strong>非空</strong> 且只包含 <code>'('</code> 和 <code>')'</code> 的字符串。如果下面 <strong>任意</strong> 条件为 <strong>真</strong> ，那么这个括号字符串就是 <strong>合法的</strong> 。</p>\n<ul>  \n   <li>字符串是 <code>()</code> 。</li>  \n   <li>字符串可以表示为 <code>AB</code>（<code>A</code> 连接 <code>B</code>），<code>A</code> 和 <code>B</code> 都是合法括号序列。</li>  \n   <li>字符串可以表示为 <code>(A)</code> ，其中 <code>A</code> 是合法括号序列。</li>  \n</ul>\n<p>给你一个 <code>m x n</code> 的括号网格图矩阵 <code>grid</code> 。网格图中一个 <strong>合法括号路径</strong> 是满足以下所有条件的一条路径：</p>\n<ul>  \n   <li>路径开始于左上角格子 <code>(0, 0)</code> 。</li>  \n   <li>路径结束于右下角格子 <code>(m - 1, n - 1)</code> 。</li>  \n   <li>路径每次只会向 <strong>下</strong> 或者向 <strong>右</strong> 移动。</li>  \n   <li>路径经过的格子组成的括号字符串是<strong> 合法</strong> 的。</li>  \n</ul>\n<p>如果网格图中存在一条 <strong>合法括号路径</strong> ，请返回 <code>true</code> ，否则返回 <code>false</code> 。</p>\n<p> </p>\n<p><strong>示例 1：</strong></p>\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2022/03/15/example1drawio.png\" style=\"width: 521px; height: 300px;\" /></p>\n<pre>  \n<b>输入：</b>grid = [[\"(\",\"(\",\"(\"],[\")\",\"(\",\")\"],[\"(\",\"(\",\")\"],[\"(\",\"(\",\")\"]]  \n<b>输出：</b>true  \n<b>解释：</b>上图展示了两条路径，它们都是合法括号字符串路径。  \n第一条路径得到的合法字符串是 \"()(())\" 。  \n第二条路径得到的合法字符串是 \"((()))\" 。  \n注意可能有其他的合法括号字符串路径。  \n</pre>\n<p><strong>示例 2：</strong></p>\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2022/03/15/example2drawio.png\" style=\"width: 165px; height: 165px;\" /></p>\n<pre>  \n<b>输入：</b>grid = [[\")\",\")\"],[\"(\",\"(\"]]  \n<b>输出：</b>false  \n<b>解释：</b>两条可行路径分别得到 \"))(\" 和 \")((\" 。由于它们都不是合法括号字符串，我们返回 false 。  \n</pre>\n<p> </p>\n<p><strong>提示：</strong></p>\n<ul>  \n   <li><code>m == grid.length</code></li>  \n   <li><code>n == grid[i].length</code></li>  \n   <li><code>1 <= m, n <= 100</code></li>  \n   <li><code>grid[i][j]</code> 要么是 <code>'('</code> ，要么是 <code>')'</code> 。</li>  \n</ul>\n<h1>思路</h1>\n<p>从左上角到右下角，依次路过，下一个坐标一定是该坐标的右侧或者下侧的坐标，同时玩吗记录下路过到该坐标时未配对的’<code>'('</code>的个数，如果是负数则这条路不对旧不用继续下去了。然后一直到右下角的时候，如果个数为1，则满足条件</p>\n<h1>代码</h1>\n<p>Java</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">class Solution &#123;\n    public boolean hasValidPath(char[][] grid) &#123;\n        xl &#x3D; grid.length;\n        yl &#x3D; grid[0].length;\n        use &#x3D; new boolean[xl][yl][xl * yl];\n        if ((xl + yl) % 2 &#x3D;&#x3D; 0 || grid[0][0] &#x3D;&#x3D; &#39;)&#39; || grid[xl - 1][yl - \n            return false;\n        &#125;\n        dfs(grid, 0, 0, 0);\n        return bl;\n    &#125;\n    int xl;\n    int yl;\n    boolean bl &#x3D; false;\n    boolean[][][] use;\n    private void dfs(char[][] grid, int x, int y, int cnt) &#123;\n        if (x &gt;&#x3D; xl || y &gt;&#x3D; yl || cnt &gt; xl - x + yl - y - 1) &#123;\n            return;\n        &#125;\n        if (x &#x3D;&#x3D; xl - 1 &amp;&amp; y &#x3D;&#x3D; yl - 1) &#123;\n            bl &#x3D; cnt &#x3D;&#x3D; 1;\n        &#125;\n        if (use[x][y][cnt]) &#123;\n            return;\n        &#125;\n        use[x][y][cnt] &#x3D; true;\n        cnt +&#x3D; grid[x][y] &#x3D;&#x3D; &#39;(&#39; ? 1 : -1;\n        if (cnt &lt; 0) &#123;\n            return;\n        &#125;\n        if (!bl) &#123;\n            dfs(grid, x + 1, y, cnt);\n        &#125;\n        if (!bl) &#123;\n            dfs(grid, x, y + 1, cnt);\n        &#125;\n    &#125;\n&#125;</code></pre>\n"},{"title":"力扣2276. 统计区间中的整数数目","date":"2022-05-19T05:54:33.000Z","_content":"\n力扣周赛293--第四题\n\n[2276. 统计区间中的整数数目](https://leetcode.cn/problems/count-integers-in-intervals/)\n\n# 题目\n\n<p>给你区间的 <strong>空</strong> 集，请你设计并实现满足要求的数据结构：</p>\n\n<ul>\n\t<li><strong>新增：</strong>添加一个区间到这个区间集合中。</li>\n\t<li><strong>统计：</strong>计算出现在 <strong>至少一个</strong> 区间中的整数个数。</li>\n</ul>\n\n<p>实现 <code>CountIntervals</code> 类：</p>\n\n<ul>\n\t<li><code>CountIntervals()</code> 使用区间的空集初始化对象</li>\n\t<li><code>void add(int left, int right)</code> 添加区间 <code>[left, right]</code> 到区间集合之中。</li>\n\t<li><code>int count()</code> 返回出现在 <strong>至少一个</strong> 区间中的整数个数。</li>\n</ul>\n\n<p><strong>注意：</strong>区间 <code>[left, right]</code> 表示满足 <code>left &lt;= x &lt;= right</code> 的所有整数 <code>x</code> 。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入</strong>\n[\"CountIntervals\", \"add\", \"add\", \"count\", \"add\", \"count\"]\n[[], [2, 3], [7, 10], [], [5, 8], []]\n<strong>输出</strong>\n[null, null, null, 6, null, 8]\n\n<strong>解释</strong>\nCountIntervals countIntervals = new CountIntervals(); // 用一个区间空集初始化对象\ncountIntervals.add(2, 3);  // 将 [2, 3] 添加到区间集合中\ncountIntervals.add(7, 10); // 将 [7, 10] 添加到区间集合中\ncountIntervals.count();    // 返回 6\n                           // 整数 2 和 3 出现在区间 [2, 3] 中\n                           // 整数 7、8、9、10 出现在区间 [7, 10] 中\ncountIntervals.add(5, 8);  // 将 [5, 8] 添加到区间集合中\ncountIntervals.count();    // 返回 8\n                           // 整数 2 和 3 出现在区间 [2, 3] 中\n                           // 整数 5 和 6 出现在区间 [5, 8] 中\n                           // 整数 7 和 8 出现在区间 [5, 8] 和区间 [7, 10] 中\n                           // 整数 9 和 10 出现在区间 [7, 10] 中</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= left &lt;= right &lt;= 10<sup>9</sup></code></li>\n\t<li>最多调用&nbsp; <code>add</code> 和 <code>count</code> 方法 <strong>总计</strong> <code>10<sup>5</sup></code> 次</li>\n\t<li>调用 <code>count</code> 方法至少一次</li>\n</ul>\n\n# 思路\n\n这题我的思路是添加一次整理一次并同时计数，利用java的TreeSet结构，可以快速的定位数据。\n典型的模板题\n\n# 代码\n\njava：\n```java\nclass CountIntervals {\n    TreeSet<Interval> ranges;\n    int cnt;\n    public CountIntervals() {\n        ranges = new TreeSet();\n        cnt = 0;\n    }\n    public void add(int left, int right) {\n        Iterator<Interval> itr = ranges.tailSet(new Interval(0, left - 1)).iterator();\n        while (itr.hasNext()) {\n            Interval iv = itr.next();\n            if (right < iv.left) {\n                break;\n            }\n            left = Math.min(left, iv.left);\n            right = Math.max(right, iv.right);\n            cnt -= iv.right - iv.left + 1;\n            itr.remove();\n        }\n        ranges.add(new Interval(left, right));\n        cnt += right - left + 1;\n    }\n    public int count() {\n        return cnt;\n    }\n}\npublic class Interval implements Comparable<Interval> {\n    int left;\n    int right;\n    public Interval(int left, int right) {\n        this.left = left;\n        this.right = right;\n    }\n    public int compareTo(Interval that) {\n        if (this.right == that.right) return this.left - that.left;\n        return this.right - that.right;\n    }\n}\n```\n","source":"_posts/count-integers-in-intervals.md","raw":"---\ntitle: 力扣2276. 统计区间中的整数数目\ndate: 2022-05-19 13:54:33\ntags: [力扣]\ncategories: [算法,力扣]\n---\n\n力扣周赛293--第四题\n\n[2276. 统计区间中的整数数目](https://leetcode.cn/problems/count-integers-in-intervals/)\n\n# 题目\n\n<p>给你区间的 <strong>空</strong> 集，请你设计并实现满足要求的数据结构：</p>\n\n<ul>\n\t<li><strong>新增：</strong>添加一个区间到这个区间集合中。</li>\n\t<li><strong>统计：</strong>计算出现在 <strong>至少一个</strong> 区间中的整数个数。</li>\n</ul>\n\n<p>实现 <code>CountIntervals</code> 类：</p>\n\n<ul>\n\t<li><code>CountIntervals()</code> 使用区间的空集初始化对象</li>\n\t<li><code>void add(int left, int right)</code> 添加区间 <code>[left, right]</code> 到区间集合之中。</li>\n\t<li><code>int count()</code> 返回出现在 <strong>至少一个</strong> 区间中的整数个数。</li>\n</ul>\n\n<p><strong>注意：</strong>区间 <code>[left, right]</code> 表示满足 <code>left &lt;= x &lt;= right</code> 的所有整数 <code>x</code> 。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入</strong>\n[\"CountIntervals\", \"add\", \"add\", \"count\", \"add\", \"count\"]\n[[], [2, 3], [7, 10], [], [5, 8], []]\n<strong>输出</strong>\n[null, null, null, 6, null, 8]\n\n<strong>解释</strong>\nCountIntervals countIntervals = new CountIntervals(); // 用一个区间空集初始化对象\ncountIntervals.add(2, 3);  // 将 [2, 3] 添加到区间集合中\ncountIntervals.add(7, 10); // 将 [7, 10] 添加到区间集合中\ncountIntervals.count();    // 返回 6\n                           // 整数 2 和 3 出现在区间 [2, 3] 中\n                           // 整数 7、8、9、10 出现在区间 [7, 10] 中\ncountIntervals.add(5, 8);  // 将 [5, 8] 添加到区间集合中\ncountIntervals.count();    // 返回 8\n                           // 整数 2 和 3 出现在区间 [2, 3] 中\n                           // 整数 5 和 6 出现在区间 [5, 8] 中\n                           // 整数 7 和 8 出现在区间 [5, 8] 和区间 [7, 10] 中\n                           // 整数 9 和 10 出现在区间 [7, 10] 中</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= left &lt;= right &lt;= 10<sup>9</sup></code></li>\n\t<li>最多调用&nbsp; <code>add</code> 和 <code>count</code> 方法 <strong>总计</strong> <code>10<sup>5</sup></code> 次</li>\n\t<li>调用 <code>count</code> 方法至少一次</li>\n</ul>\n\n# 思路\n\n这题我的思路是添加一次整理一次并同时计数，利用java的TreeSet结构，可以快速的定位数据。\n典型的模板题\n\n# 代码\n\njava：\n```java\nclass CountIntervals {\n    TreeSet<Interval> ranges;\n    int cnt;\n    public CountIntervals() {\n        ranges = new TreeSet();\n        cnt = 0;\n    }\n    public void add(int left, int right) {\n        Iterator<Interval> itr = ranges.tailSet(new Interval(0, left - 1)).iterator();\n        while (itr.hasNext()) {\n            Interval iv = itr.next();\n            if (right < iv.left) {\n                break;\n            }\n            left = Math.min(left, iv.left);\n            right = Math.max(right, iv.right);\n            cnt -= iv.right - iv.left + 1;\n            itr.remove();\n        }\n        ranges.add(new Interval(left, right));\n        cnt += right - left + 1;\n    }\n    public int count() {\n        return cnt;\n    }\n}\npublic class Interval implements Comparable<Interval> {\n    int left;\n    int right;\n    public Interval(int left, int right) {\n        this.left = left;\n        this.right = right;\n    }\n    public int compareTo(Interval that) {\n        if (this.right == that.right) return this.left - that.left;\n        return this.right - that.right;\n    }\n}\n```\n","slug":"count-integers-in-intervals","published":1,"updated":"2022-06-03T06:00:55.557Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl42z5h5l00093gn69gggera3","content":"<p>力扣周赛293–第四题</p>\n<p><a href=\"https://leetcode.cn/problems/count-integers-in-intervals/\">2276. 统计区间中的整数数目</a></p>\n<h1>题目</h1>\n<p>给你区间的 <strong>空</strong> 集，请你设计并实现满足要求的数据结构：</p>\n<ul>\n\t<li><strong>新增：</strong>添加一个区间到这个区间集合中。</li>\n\t<li><strong>统计：</strong>计算出现在 <strong>至少一个</strong> 区间中的整数个数。</li>\n</ul>\n<p>实现 <code>CountIntervals</code> 类：</p>\n<ul>\n\t<li><code>CountIntervals()</code> 使用区间的空集初始化对象</li>\n\t<li><code>void add(int left, int right)</code> 添加区间 <code>[left, right]</code> 到区间集合之中。</li>\n\t<li><code>int count()</code> 返回出现在 <strong>至少一个</strong> 区间中的整数个数。</li>\n</ul>\n<p><strong>注意：</strong>区间 <code>[left, right]</code> 表示满足 <code>left &lt;= x &lt;= right</code> 的所有整数 <code>x</code> 。</p>\n<p>&nbsp;</p>\n<p><strong>示例 1：</strong></p>\n<pre>\n<strong>输入</strong>\n[\"CountIntervals\", \"add\", \"add\", \"count\", \"add\", \"count\"]\n[[], [2, 3], [7, 10], [], [5, 8], []]\n<strong>输出</strong>\n[null, null, null, 6, null, 8]\n\n<strong>解释</strong>\nCountIntervals countIntervals = new CountIntervals(); // 用一个区间空集初始化对象\ncountIntervals.add(2, 3);  // 将 [2, 3] 添加到区间集合中\ncountIntervals.add(7, 10); // 将 [7, 10] 添加到区间集合中\ncountIntervals.count();    // 返回 6\n                           // 整数 2 和 3 出现在区间 [2, 3] 中\n                           // 整数 7、8、9、10 出现在区间 [7, 10] 中\ncountIntervals.add(5, 8);  // 将 [5, 8] 添加到区间集合中\ncountIntervals.count();    // 返回 8\n                           // 整数 2 和 3 出现在区间 [2, 3] 中\n                           // 整数 5 和 6 出现在区间 [5, 8] 中\n                           // 整数 7 和 8 出现在区间 [5, 8] 和区间 [7, 10] 中\n                           // 整数 9 和 10 出现在区间 [7, 10] 中</pre>\n<p>&nbsp;</p>\n<p><strong>提示：</strong></p>\n<ul>\n\t<li><code>1 &lt;= left &lt;= right &lt;= 10<sup>9</sup></code></li>\n\t<li>最多调用&nbsp; <code>add</code> 和 <code>count</code> 方法 <strong>总计</strong> <code>10<sup>5</sup></code> 次</li>\n\t<li>调用 <code>count</code> 方法至少一次</li>\n</ul>\n<h1>思路</h1>\n<p>这题我的思路是添加一次整理一次并同时计数，利用java的TreeSet结构，可以快速的定位数据。<br>\n典型的模板题</p>\n<h1>代码</h1>\n<p>java：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">class CountIntervals &#123;\n    TreeSet&lt;Interval&gt; ranges;\n    int cnt;\n    public CountIntervals() &#123;\n        ranges &#x3D; new TreeSet();\n        cnt &#x3D; 0;\n    &#125;\n    public void add(int left, int right) &#123;\n        Iterator&lt;Interval&gt; itr &#x3D; ranges.tailSet(new Interval(0, left - 1)).iterator();\n        while (itr.hasNext()) &#123;\n            Interval iv &#x3D; itr.next();\n            if (right &lt; iv.left) &#123;\n                break;\n            &#125;\n            left &#x3D; Math.min(left, iv.left);\n            right &#x3D; Math.max(right, iv.right);\n            cnt -&#x3D; iv.right - iv.left + 1;\n            itr.remove();\n        &#125;\n        ranges.add(new Interval(left, right));\n        cnt +&#x3D; right - left + 1;\n    &#125;\n    public int count() &#123;\n        return cnt;\n    &#125;\n&#125;\npublic class Interval implements Comparable&lt;Interval&gt; &#123;\n    int left;\n    int right;\n    public Interval(int left, int right) &#123;\n        this.left &#x3D; left;\n        this.right &#x3D; right;\n    &#125;\n    public int compareTo(Interval that) &#123;\n        if (this.right &#x3D;&#x3D; that.right) return this.left - that.left;\n        return this.right - that.right;\n    &#125;\n&#125;</code></pre>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"cover":"https://blog.huangge1199.cn/post/day20220120/bg.jpeg","excerpt":"","more":"<p>力扣周赛293–第四题</p>\n<p><a href=\"https://leetcode.cn/problems/count-integers-in-intervals/\">2276. 统计区间中的整数数目</a></p>\n<h1>题目</h1>\n<p>给你区间的 <strong>空</strong> 集，请你设计并实现满足要求的数据结构：</p>\n<ul>\n\t<li><strong>新增：</strong>添加一个区间到这个区间集合中。</li>\n\t<li><strong>统计：</strong>计算出现在 <strong>至少一个</strong> 区间中的整数个数。</li>\n</ul>\n<p>实现 <code>CountIntervals</code> 类：</p>\n<ul>\n\t<li><code>CountIntervals()</code> 使用区间的空集初始化对象</li>\n\t<li><code>void add(int left, int right)</code> 添加区间 <code>[left, right]</code> 到区间集合之中。</li>\n\t<li><code>int count()</code> 返回出现在 <strong>至少一个</strong> 区间中的整数个数。</li>\n</ul>\n<p><strong>注意：</strong>区间 <code>[left, right]</code> 表示满足 <code>left &lt;= x &lt;= right</code> 的所有整数 <code>x</code> 。</p>\n<p>&nbsp;</p>\n<p><strong>示例 1：</strong></p>\n<pre>\n<strong>输入</strong>\n[\"CountIntervals\", \"add\", \"add\", \"count\", \"add\", \"count\"]\n[[], [2, 3], [7, 10], [], [5, 8], []]\n<strong>输出</strong>\n[null, null, null, 6, null, 8]\n\n<strong>解释</strong>\nCountIntervals countIntervals = new CountIntervals(); // 用一个区间空集初始化对象\ncountIntervals.add(2, 3);  // 将 [2, 3] 添加到区间集合中\ncountIntervals.add(7, 10); // 将 [7, 10] 添加到区间集合中\ncountIntervals.count();    // 返回 6\n                           // 整数 2 和 3 出现在区间 [2, 3] 中\n                           // 整数 7、8、9、10 出现在区间 [7, 10] 中\ncountIntervals.add(5, 8);  // 将 [5, 8] 添加到区间集合中\ncountIntervals.count();    // 返回 8\n                           // 整数 2 和 3 出现在区间 [2, 3] 中\n                           // 整数 5 和 6 出现在区间 [5, 8] 中\n                           // 整数 7 和 8 出现在区间 [5, 8] 和区间 [7, 10] 中\n                           // 整数 9 和 10 出现在区间 [7, 10] 中</pre>\n<p>&nbsp;</p>\n<p><strong>提示：</strong></p>\n<ul>\n\t<li><code>1 &lt;= left &lt;= right &lt;= 10<sup>9</sup></code></li>\n\t<li>最多调用&nbsp; <code>add</code> 和 <code>count</code> 方法 <strong>总计</strong> <code>10<sup>5</sup></code> 次</li>\n\t<li>调用 <code>count</code> 方法至少一次</li>\n</ul>\n<h1>思路</h1>\n<p>这题我的思路是添加一次整理一次并同时计数，利用java的TreeSet结构，可以快速的定位数据。<br>\n典型的模板题</p>\n<h1>代码</h1>\n<p>java：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">class CountIntervals &#123;\n    TreeSet&lt;Interval&gt; ranges;\n    int cnt;\n    public CountIntervals() &#123;\n        ranges &#x3D; new TreeSet();\n        cnt &#x3D; 0;\n    &#125;\n    public void add(int left, int right) &#123;\n        Iterator&lt;Interval&gt; itr &#x3D; ranges.tailSet(new Interval(0, left - 1)).iterator();\n        while (itr.hasNext()) &#123;\n            Interval iv &#x3D; itr.next();\n            if (right &lt; iv.left) &#123;\n                break;\n            &#125;\n            left &#x3D; Math.min(left, iv.left);\n            right &#x3D; Math.max(right, iv.right);\n            cnt -&#x3D; iv.right - iv.left + 1;\n            itr.remove();\n        &#125;\n        ranges.add(new Interval(left, right));\n        cnt +&#x3D; right - left + 1;\n    &#125;\n    public int count() &#123;\n        return cnt;\n    &#125;\n&#125;\npublic class Interval implements Comparable&lt;Interval&gt; &#123;\n    int left;\n    int right;\n    public Interval(int left, int right) &#123;\n        this.left &#x3D; left;\n        this.right &#x3D; right;\n    &#125;\n    public int compareTo(Interval that) &#123;\n        if (this.right &#x3D;&#x3D; that.right) return this.left - that.left;\n        return this.right - that.right;\n    &#125;\n&#125;</code></pre>\n"},{"title":"力扣6057. 统计值等于子树平均值的节点数","date":"2022-05-09T07:57:48.000Z","_content":"\n力扣周赛292--第二题\n\n[6057. 统计值等于子树平均值的节点数](https://leetcode.cn/problems/count-nodes-equal-to-average-of-subtree/)\n\n# 题目\n\n<p>给你一棵二叉树的根节点 <code>root</code> ，找出并返回满足要求的节点数，要求节点的值等于其 <strong>子树</strong> 中值的 <strong>平均值</strong> 。</p>\n\n<p><strong>注意：</strong></p>\n\n<ul>  \n   <li><code>n</code> 个元素的平均值可以由 <code>n</code> 个元素 <strong>求和</strong> 然后再除以 <code>n</code> ，并 <strong>向下舍入</strong> 到最近的整数。</li>  \n   <li><code>root</code> 的 <strong>子树</strong> 由 <code>root</code> 和它的所有后代组成。</li>  \n</ul>\n\n<p> </p>\n\n<p><strong>示例 1：</strong></p>  \n<img src=\"https://huangge1199-1303833695.cos.ap-beijing.myqcloud.com/blog/count-nodes-equal-to-average-of-subtree/20220426172421.png\" style=\"width: 300px; height: 212px;\">  \n<pre><strong>输入：</strong>root = [4,8,5,0,1,null,6]  \n<strong>输出：</strong>5  \n<strong>解释：</strong>  \n对值为 4 的节点：子树的平均值 (4 + 8 + 5 + 0 + 1 + 6) / 6 = 24 / 6 = 4 。  \n对值为 5 的节点：子树的平均值 (5 + 6) / 2 = 11 / 2 = 5 。  \n对值为 0 的节点：子树的平均值 0 / 1 = 0 。  \n对值为 1 的节点：子树的平均值 1 / 1 = 1 。  \n对值为 6 的节点：子树的平均值 6 / 1 = 6 。  \n</pre>\n\n<p><strong>示例 2：</strong></p>  \n<img src=\"https://huangge1199-1303833695.cos.ap-beijing.myqcloud.com/blog/count-nodes-equal-to-average-of-subtree/image-20220326133920.png\" style=\"width: 80px; height: 76px;\">  \n<pre><strong>输入：</strong>root = [1]  \n<strong>输出：</strong>1  \n<strong>解释：</strong>对值为 1 的节点：子树的平均值 1 / 1 = 1。  \n</pre>\n\n<p> </p>\n\n<p><strong>提示：</strong></p>\n\n<ul>  \n   <li>树中节点数目在范围 <code>[1, 1000]</code> 内</li>  \n   <li><code>0 <= Node.val <= 1000</code></li>  \n</ul>\n\n# 思路\n\n这题的思路：\n\n- 先深度遍历树，统计出每个节点包含的节点数，并将其放入队列中\n\n- 再深度遍历一次树，这次计算出每个节点的元素和，并从队列中取到该节点的节点数，然后求平均值做判断\n\n# 代码\n\nJava：\n\n```java\nclass Solution {\n    public int averageOfSubtree(TreeNode root) {\n        counts(root);\n        sums(root);\n        return count;\n    }\n    Queue<Integer> queue = new LinkedList<>();\n    int count = 0;\n    private int counts(TreeNode root) {\n        if (root == null) {\n            return 0;\n        }\n        int cnt = counts(root.left) + counts(root.right) + 1;\n        queue.add(cnt);\n        return cnt;\n    }\n    private int sums(TreeNode root) {\n        if (root == null) {\n            return 0;\n        }\n        int sum = root.val;\n        sum += sums(root.left);\n        sum += sums(root.right);\n        if (sum / queue.poll() == root.val) {\n            count++;\n        }\n        return sum;\n    }\n}\n```\n","source":"_posts/count-nodes-equal-to-average-of-subtree.md","raw":"---\ntitle: 力扣6057. 统计值等于子树平均值的节点数\ndate: 2022-05-09 15:57:48\ntags: [力扣]\ncategories: [算法,力扣]\n---\n\n力扣周赛292--第二题\n\n[6057. 统计值等于子树平均值的节点数](https://leetcode.cn/problems/count-nodes-equal-to-average-of-subtree/)\n\n# 题目\n\n<p>给你一棵二叉树的根节点 <code>root</code> ，找出并返回满足要求的节点数，要求节点的值等于其 <strong>子树</strong> 中值的 <strong>平均值</strong> 。</p>\n\n<p><strong>注意：</strong></p>\n\n<ul>  \n   <li><code>n</code> 个元素的平均值可以由 <code>n</code> 个元素 <strong>求和</strong> 然后再除以 <code>n</code> ，并 <strong>向下舍入</strong> 到最近的整数。</li>  \n   <li><code>root</code> 的 <strong>子树</strong> 由 <code>root</code> 和它的所有后代组成。</li>  \n</ul>\n\n<p> </p>\n\n<p><strong>示例 1：</strong></p>  \n<img src=\"https://huangge1199-1303833695.cos.ap-beijing.myqcloud.com/blog/count-nodes-equal-to-average-of-subtree/20220426172421.png\" style=\"width: 300px; height: 212px;\">  \n<pre><strong>输入：</strong>root = [4,8,5,0,1,null,6]  \n<strong>输出：</strong>5  \n<strong>解释：</strong>  \n对值为 4 的节点：子树的平均值 (4 + 8 + 5 + 0 + 1 + 6) / 6 = 24 / 6 = 4 。  \n对值为 5 的节点：子树的平均值 (5 + 6) / 2 = 11 / 2 = 5 。  \n对值为 0 的节点：子树的平均值 0 / 1 = 0 。  \n对值为 1 的节点：子树的平均值 1 / 1 = 1 。  \n对值为 6 的节点：子树的平均值 6 / 1 = 6 。  \n</pre>\n\n<p><strong>示例 2：</strong></p>  \n<img src=\"https://huangge1199-1303833695.cos.ap-beijing.myqcloud.com/blog/count-nodes-equal-to-average-of-subtree/image-20220326133920.png\" style=\"width: 80px; height: 76px;\">  \n<pre><strong>输入：</strong>root = [1]  \n<strong>输出：</strong>1  \n<strong>解释：</strong>对值为 1 的节点：子树的平均值 1 / 1 = 1。  \n</pre>\n\n<p> </p>\n\n<p><strong>提示：</strong></p>\n\n<ul>  \n   <li>树中节点数目在范围 <code>[1, 1000]</code> 内</li>  \n   <li><code>0 <= Node.val <= 1000</code></li>  \n</ul>\n\n# 思路\n\n这题的思路：\n\n- 先深度遍历树，统计出每个节点包含的节点数，并将其放入队列中\n\n- 再深度遍历一次树，这次计算出每个节点的元素和，并从队列中取到该节点的节点数，然后求平均值做判断\n\n# 代码\n\nJava：\n\n```java\nclass Solution {\n    public int averageOfSubtree(TreeNode root) {\n        counts(root);\n        sums(root);\n        return count;\n    }\n    Queue<Integer> queue = new LinkedList<>();\n    int count = 0;\n    private int counts(TreeNode root) {\n        if (root == null) {\n            return 0;\n        }\n        int cnt = counts(root.left) + counts(root.right) + 1;\n        queue.add(cnt);\n        return cnt;\n    }\n    private int sums(TreeNode root) {\n        if (root == null) {\n            return 0;\n        }\n        int sum = root.val;\n        sum += sums(root.left);\n        sum += sums(root.right);\n        if (sum / queue.poll() == root.val) {\n            count++;\n        }\n        return sum;\n    }\n}\n```\n","slug":"count-nodes-equal-to-average-of-subtree","published":1,"updated":"2022-06-03T06:00:55.557Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl42z5h5n000b3gn6137sbqec","content":"<p>力扣周赛292–第二题</p>\n<p><a href=\"https://leetcode.cn/problems/count-nodes-equal-to-average-of-subtree/\">6057. 统计值等于子树平均值的节点数</a></p>\n<h1>题目</h1>\n<p>给你一棵二叉树的根节点 <code>root</code> ，找出并返回满足要求的节点数，要求节点的值等于其 <strong>子树</strong> 中值的 <strong>平均值</strong> 。</p>\n<p><strong>注意：</strong></p>\n<ul>  \n   <li><code>n</code> 个元素的平均值可以由 <code>n</code> 个元素 <strong>求和</strong> 然后再除以 <code>n</code> ，并 <strong>向下舍入</strong> 到最近的整数。</li>  \n   <li><code>root</code> 的 <strong>子树</strong> 由 <code>root</code> 和它的所有后代组成。</li>  \n</ul>\n<p> </p>\n<p><strong>示例 1：</strong></p>  \n<img src=\"https://huangge1199-1303833695.cos.ap-beijing.myqcloud.com/blog/count-nodes-equal-to-average-of-subtree/20220426172421.png\" style=\"width: 300px; height: 212px;\">  \n<pre><strong>输入：</strong>root = [4,8,5,0,1,null,6]  \n<strong>输出：</strong>5  \n<strong>解释：</strong>  \n对值为 4 的节点：子树的平均值 (4 + 8 + 5 + 0 + 1 + 6) / 6 = 24 / 6 = 4 。  \n对值为 5 的节点：子树的平均值 (5 + 6) / 2 = 11 / 2 = 5 。  \n对值为 0 的节点：子树的平均值 0 / 1 = 0 。  \n对值为 1 的节点：子树的平均值 1 / 1 = 1 。  \n对值为 6 的节点：子树的平均值 6 / 1 = 6 。  \n</pre>\n<p><strong>示例 2：</strong></p>  \n<img src=\"https://huangge1199-1303833695.cos.ap-beijing.myqcloud.com/blog/count-nodes-equal-to-average-of-subtree/image-20220326133920.png\" style=\"width: 80px; height: 76px;\">  \n<pre><strong>输入：</strong>root = [1]  \n<strong>输出：</strong>1  \n<strong>解释：</strong>对值为 1 的节点：子树的平均值 1 / 1 = 1。  \n</pre>\n<p> </p>\n<p><strong>提示：</strong></p>\n<ul>  \n   <li>树中节点数目在范围 <code>[1, 1000]</code> 内</li>  \n   <li><code>0 <= Node.val <= 1000</code></li>  \n</ul>\n<h1>思路</h1>\n<p>这题的思路：</p>\n<ul>\n<li>\n<p>先深度遍历树，统计出每个节点包含的节点数，并将其放入队列中</p>\n</li>\n<li>\n<p>再深度遍历一次树，这次计算出每个节点的元素和，并从队列中取到该节点的节点数，然后求平均值做判断</p>\n</li>\n</ul>\n<h1>代码</h1>\n<p>Java：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">class Solution &#123;\n    public int averageOfSubtree(TreeNode root) &#123;\n        counts(root);\n        sums(root);\n        return count;\n    &#125;\n    Queue&lt;Integer&gt; queue &#x3D; new LinkedList&lt;&gt;();\n    int count &#x3D; 0;\n    private int counts(TreeNode root) &#123;\n        if (root &#x3D;&#x3D; null) &#123;\n            return 0;\n        &#125;\n        int cnt &#x3D; counts(root.left) + counts(root.right) + 1;\n        queue.add(cnt);\n        return cnt;\n    &#125;\n    private int sums(TreeNode root) &#123;\n        if (root &#x3D;&#x3D; null) &#123;\n            return 0;\n        &#125;\n        int sum &#x3D; root.val;\n        sum +&#x3D; sums(root.left);\n        sum +&#x3D; sums(root.right);\n        if (sum &#x2F; queue.poll() &#x3D;&#x3D; root.val) &#123;\n            count++;\n        &#125;\n        return sum;\n    &#125;\n&#125;</code></pre>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"cover":"https://blog.huangge1199.cn/post/pyControl/bg.jpeg","excerpt":"","more":"<p>力扣周赛292–第二题</p>\n<p><a href=\"https://leetcode.cn/problems/count-nodes-equal-to-average-of-subtree/\">6057. 统计值等于子树平均值的节点数</a></p>\n<h1>题目</h1>\n<p>给你一棵二叉树的根节点 <code>root</code> ，找出并返回满足要求的节点数，要求节点的值等于其 <strong>子树</strong> 中值的 <strong>平均值</strong> 。</p>\n<p><strong>注意：</strong></p>\n<ul>  \n   <li><code>n</code> 个元素的平均值可以由 <code>n</code> 个元素 <strong>求和</strong> 然后再除以 <code>n</code> ，并 <strong>向下舍入</strong> 到最近的整数。</li>  \n   <li><code>root</code> 的 <strong>子树</strong> 由 <code>root</code> 和它的所有后代组成。</li>  \n</ul>\n<p> </p>\n<p><strong>示例 1：</strong></p>  \n<img src=\"https://huangge1199-1303833695.cos.ap-beijing.myqcloud.com/blog/count-nodes-equal-to-average-of-subtree/20220426172421.png\" style=\"width: 300px; height: 212px;\">  \n<pre><strong>输入：</strong>root = [4,8,5,0,1,null,6]  \n<strong>输出：</strong>5  \n<strong>解释：</strong>  \n对值为 4 的节点：子树的平均值 (4 + 8 + 5 + 0 + 1 + 6) / 6 = 24 / 6 = 4 。  \n对值为 5 的节点：子树的平均值 (5 + 6) / 2 = 11 / 2 = 5 。  \n对值为 0 的节点：子树的平均值 0 / 1 = 0 。  \n对值为 1 的节点：子树的平均值 1 / 1 = 1 。  \n对值为 6 的节点：子树的平均值 6 / 1 = 6 。  \n</pre>\n<p><strong>示例 2：</strong></p>  \n<img src=\"https://huangge1199-1303833695.cos.ap-beijing.myqcloud.com/blog/count-nodes-equal-to-average-of-subtree/image-20220326133920.png\" style=\"width: 80px; height: 76px;\">  \n<pre><strong>输入：</strong>root = [1]  \n<strong>输出：</strong>1  \n<strong>解释：</strong>对值为 1 的节点：子树的平均值 1 / 1 = 1。  \n</pre>\n<p> </p>\n<p><strong>提示：</strong></p>\n<ul>  \n   <li>树中节点数目在范围 <code>[1, 1000]</code> 内</li>  \n   <li><code>0 <= Node.val <= 1000</code></li>  \n</ul>\n<h1>思路</h1>\n<p>这题的思路：</p>\n<ul>\n<li>\n<p>先深度遍历树，统计出每个节点包含的节点数，并将其放入队列中</p>\n</li>\n<li>\n<p>再深度遍历一次树，这次计算出每个节点的元素和，并从队列中取到该节点的节点数，然后求平均值做判断</p>\n</li>\n</ul>\n<h1>代码</h1>\n<p>Java：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">class Solution &#123;\n    public int averageOfSubtree(TreeNode root) &#123;\n        counts(root);\n        sums(root);\n        return count;\n    &#125;\n    Queue&lt;Integer&gt; queue &#x3D; new LinkedList&lt;&gt;();\n    int count &#x3D; 0;\n    private int counts(TreeNode root) &#123;\n        if (root &#x3D;&#x3D; null) &#123;\n            return 0;\n        &#125;\n        int cnt &#x3D; counts(root.left) + counts(root.right) + 1;\n        queue.add(cnt);\n        return cnt;\n    &#125;\n    private int sums(TreeNode root) &#123;\n        if (root &#x3D;&#x3D; null) &#123;\n            return 0;\n        &#125;\n        int sum &#x3D; root.val;\n        sum +&#x3D; sums(root.left);\n        sum +&#x3D; sums(root.right);\n        if (sum &#x2F; queue.poll() &#x3D;&#x3D; root.val) &#123;\n            count++;\n        &#125;\n        return sum;\n    &#125;\n&#125;</code></pre>\n"},{"title":"力扣2266. 统计打字方案数","date":"2022-05-10T01:32:53.000Z","_content":"\n力扣周赛292--第三题\n\n[2266. 统计打字方案数](https://leetcode.cn/problems/count-number-of-texts/)\n\n# 题目\n\n<p>Alice 在给 Bob 用手机打字。数字到字母的 <strong>对应</strong> 如下图所示。</p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2022/03/15/1200px-telephone-keypad2svg.png\" style=\"width: 200px; height: 162px;\"></p>\n\n<p>为了 <strong>打出</strong> 一个字母，Alice 需要 <strong>按</strong> 对应字母 <code>i</code> 次，<code>i</code> 是该字母在这个按键上所处的位置。</p>\n\n<ul>  \n   <li>比方说，为了按出字母 <code>'s'</code> ，Alice 需要按 <code>'7'</code> 四次。类似的， Alice 需要按 <code>'5'</code> 两次得到字母  <code>'k'</code> 。</li>  \n   <li>注意，数字 <code>'0'</code> 和 <code>'1'</code> 不映射到任何字母，所以 Alice <strong>不</strong> 使用它们。</li>  \n</ul>\n\n<p>但是，由于传输的错误，Bob 没有收到 Alice 打字的字母信息，反而收到了 <strong>按键的字符串信息</strong> 。</p>\n\n<ul>  \n   <li>比方说，Alice 发出的信息为 <code>\"bob\"</code> ，Bob 将收到字符串 <code>\"2266622\"</code> 。</li>  \n</ul>\n\n<p>给你一个字符串 <code>pressedKeys</code> ，表示 Bob 收到的字符串，请你返回 Alice <strong>总共可能发出多少种文字信息</strong> 。</p>\n\n<p>由于答案可能很大，将它对 <code>10<sup>9</sup> + 7</code> <strong>取余</strong> 后返回。</p>\n\n<p> </p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><b>输入：</b>pressedKeys = \"22233\"  \n<b>输出：</b>8  \n<strong>解释：</strong>  \nAlice 可能发出的文字信息包括：  \n\"aaadd\", \"abdd\", \"badd\", \"cdd\", \"aaae\", \"abe\", \"bae\" 和 \"ce\" 。  \n由于总共有 8 种可能的信息，所以我们返回 8 。  \n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><b>输入：</b>pressedKeys = \"222222222222222222222222222222222222\"  \n<b>输出：</b>82876089  \n<strong>解释：</strong>  \n总共有 2082876103 种 Alice 可能发出的文字信息。  \n由于我们需要将答案对 10<sup>9</sup> + 7 取余，所以我们返回 2082876103 % (10<sup>9</sup> + 7) = 82876089 。  \n</pre>\n\n<p> </p>\n\n<p><strong>提示：</strong></p>\n\n<ul>  \n   <li><code>1 <= pressedKeys.length <= 10<sup>5</sup></code></li>  \n   <li><code>pressedKeys</code> 只包含数字 <code>'2'</code> 到 <code>'9'</code> 。</li>  \n</ul>\n\n# 思路\n\n这题标的是中等题，个人觉得解题方法有点取巧，怎么取巧尼，因为重复的数最多4个，我完全可以嵌套3层if来处理，当然我也是这么干的。只要遍历一遍就可以了。\n\n在遍历到索引`i`时，有如下情况：\n\n1. 当前数字不和前面的组合，自己单独成一个新的\n   \n   索引`i`的种数 = 索引`i-1`的种数\n\n2. 当前数字与前一个相等，那么该数字的组合就有两种情况\n   \n   - 直接和前一个数字凑一起\n     \n     索引`i`的种数=索引`i-2`的种数\n   \n   - 索引`i`的数字和索引`i-2`的数字也相等，这也有2种情况\n     \n     - 把索引`i`,`i-1`,`i-2`都凑一起\n       \n       索引`i`的种数=索引`i-3`的种数\n     \n     - 索引`i`是7或者9，最多可以连续4个，把索引`i`,`i-1`,`i-2`,`i-3`都凑一起\n       \n       索引`i`的种数=索引`i-4`的种数\n\n同时，为了保证数据没有超过int的最大值，这里对于每一次的结果都对<span>10<sup>9</sup>+7</span>取余\n\n# 代码\n\nJava：\n\n```java\nclass Solution {\n    public int countTexts(String pressedKeys) {\n        int[] cnts = new int[pressedKeys.length() + 1];\n        cnts[0] = 1;\n        cnts[1] = 1;\n        int mod = 1000000007;\n        for (int i = 1; i < pressedKeys.length(); i++) {\n            cnts[i + 1] = cnts[i];\n            if (pressdKeys.charAt(i) == pressedKeys.charAt(i - 1)) {\n                cnts[i + 1] += cnts[i - 1];\n                cnts[i + 1] %= mod;\n                if (i > 1 && pressedKeys.charAt(i) == pressedKeys.charAt(i - 2)) {\n                    cnts[i + 1] += cnts[i - 2];\n                    cnts[i + 1] %= mod;\n                    if (i > 2 && pressedKeys.charAt(i) == pressedKeys.charAt(i - 3) && (pressedKeys.charAt(i) == '7' || pressedKeys.charAt(i) == '\n                        cnts[i + 1] += cnts[i - 3];\n                        cnts[i + 1] %= mod;\n                    }\n                }\n            }\n        }\n        return cnts[pressedKeys.length()];\n    }\n}\n```\n","source":"_posts/count-number-of-texts.md","raw":"---\ntitle: 力扣2266. 统计打字方案数\ndate: 2022-05-10 09:32:53\ntags: [力扣]\ncategories: [算法,力扣]\n---\n\n力扣周赛292--第三题\n\n[2266. 统计打字方案数](https://leetcode.cn/problems/count-number-of-texts/)\n\n# 题目\n\n<p>Alice 在给 Bob 用手机打字。数字到字母的 <strong>对应</strong> 如下图所示。</p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2022/03/15/1200px-telephone-keypad2svg.png\" style=\"width: 200px; height: 162px;\"></p>\n\n<p>为了 <strong>打出</strong> 一个字母，Alice 需要 <strong>按</strong> 对应字母 <code>i</code> 次，<code>i</code> 是该字母在这个按键上所处的位置。</p>\n\n<ul>  \n   <li>比方说，为了按出字母 <code>'s'</code> ，Alice 需要按 <code>'7'</code> 四次。类似的， Alice 需要按 <code>'5'</code> 两次得到字母  <code>'k'</code> 。</li>  \n   <li>注意，数字 <code>'0'</code> 和 <code>'1'</code> 不映射到任何字母，所以 Alice <strong>不</strong> 使用它们。</li>  \n</ul>\n\n<p>但是，由于传输的错误，Bob 没有收到 Alice 打字的字母信息，反而收到了 <strong>按键的字符串信息</strong> 。</p>\n\n<ul>  \n   <li>比方说，Alice 发出的信息为 <code>\"bob\"</code> ，Bob 将收到字符串 <code>\"2266622\"</code> 。</li>  \n</ul>\n\n<p>给你一个字符串 <code>pressedKeys</code> ，表示 Bob 收到的字符串，请你返回 Alice <strong>总共可能发出多少种文字信息</strong> 。</p>\n\n<p>由于答案可能很大，将它对 <code>10<sup>9</sup> + 7</code> <strong>取余</strong> 后返回。</p>\n\n<p> </p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><b>输入：</b>pressedKeys = \"22233\"  \n<b>输出：</b>8  \n<strong>解释：</strong>  \nAlice 可能发出的文字信息包括：  \n\"aaadd\", \"abdd\", \"badd\", \"cdd\", \"aaae\", \"abe\", \"bae\" 和 \"ce\" 。  \n由于总共有 8 种可能的信息，所以我们返回 8 。  \n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><b>输入：</b>pressedKeys = \"222222222222222222222222222222222222\"  \n<b>输出：</b>82876089  \n<strong>解释：</strong>  \n总共有 2082876103 种 Alice 可能发出的文字信息。  \n由于我们需要将答案对 10<sup>9</sup> + 7 取余，所以我们返回 2082876103 % (10<sup>9</sup> + 7) = 82876089 。  \n</pre>\n\n<p> </p>\n\n<p><strong>提示：</strong></p>\n\n<ul>  \n   <li><code>1 <= pressedKeys.length <= 10<sup>5</sup></code></li>  \n   <li><code>pressedKeys</code> 只包含数字 <code>'2'</code> 到 <code>'9'</code> 。</li>  \n</ul>\n\n# 思路\n\n这题标的是中等题，个人觉得解题方法有点取巧，怎么取巧尼，因为重复的数最多4个，我完全可以嵌套3层if来处理，当然我也是这么干的。只要遍历一遍就可以了。\n\n在遍历到索引`i`时，有如下情况：\n\n1. 当前数字不和前面的组合，自己单独成一个新的\n   \n   索引`i`的种数 = 索引`i-1`的种数\n\n2. 当前数字与前一个相等，那么该数字的组合就有两种情况\n   \n   - 直接和前一个数字凑一起\n     \n     索引`i`的种数=索引`i-2`的种数\n   \n   - 索引`i`的数字和索引`i-2`的数字也相等，这也有2种情况\n     \n     - 把索引`i`,`i-1`,`i-2`都凑一起\n       \n       索引`i`的种数=索引`i-3`的种数\n     \n     - 索引`i`是7或者9，最多可以连续4个，把索引`i`,`i-1`,`i-2`,`i-3`都凑一起\n       \n       索引`i`的种数=索引`i-4`的种数\n\n同时，为了保证数据没有超过int的最大值，这里对于每一次的结果都对<span>10<sup>9</sup>+7</span>取余\n\n# 代码\n\nJava：\n\n```java\nclass Solution {\n    public int countTexts(String pressedKeys) {\n        int[] cnts = new int[pressedKeys.length() + 1];\n        cnts[0] = 1;\n        cnts[1] = 1;\n        int mod = 1000000007;\n        for (int i = 1; i < pressedKeys.length(); i++) {\n            cnts[i + 1] = cnts[i];\n            if (pressdKeys.charAt(i) == pressedKeys.charAt(i - 1)) {\n                cnts[i + 1] += cnts[i - 1];\n                cnts[i + 1] %= mod;\n                if (i > 1 && pressedKeys.charAt(i) == pressedKeys.charAt(i - 2)) {\n                    cnts[i + 1] += cnts[i - 2];\n                    cnts[i + 1] %= mod;\n                    if (i > 2 && pressedKeys.charAt(i) == pressedKeys.charAt(i - 3) && (pressedKeys.charAt(i) == '7' || pressedKeys.charAt(i) == '\n                        cnts[i + 1] += cnts[i - 3];\n                        cnts[i + 1] %= mod;\n                    }\n                }\n            }\n        }\n        return cnts[pressedKeys.length()];\n    }\n}\n```\n","slug":"count-number-of-texts","published":1,"updated":"2022-06-03T06:00:55.557Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl42z5h5p000g3gn65xqq0k2t","content":"<p>力扣周赛292–第三题</p>\n<p><a href=\"https://leetcode.cn/problems/count-number-of-texts/\">2266. 统计打字方案数</a></p>\n<h1>题目</h1>\n<p>Alice 在给 Bob 用手机打字。数字到字母的 <strong>对应</strong> 如下图所示。</p>\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2022/03/15/1200px-telephone-keypad2svg.png\" style=\"width: 200px; height: 162px;\"></p>\n<p>为了 <strong>打出</strong> 一个字母，Alice 需要 <strong>按</strong> 对应字母 <code>i</code> 次，<code>i</code> 是该字母在这个按键上所处的位置。</p>\n<ul>  \n   <li>比方说，为了按出字母 <code>'s'</code> ，Alice 需要按 <code>'7'</code> 四次。类似的， Alice 需要按 <code>'5'</code> 两次得到字母  <code>'k'</code> 。</li>  \n   <li>注意，数字 <code>'0'</code> 和 <code>'1'</code> 不映射到任何字母，所以 Alice <strong>不</strong> 使用它们。</li>  \n</ul>\n<p>但是，由于传输的错误，Bob 没有收到 Alice 打字的字母信息，反而收到了 <strong>按键的字符串信息</strong> 。</p>\n<ul>  \n   <li>比方说，Alice 发出的信息为 <code>\"bob\"</code> ，Bob 将收到字符串 <code>\"2266622\"</code> 。</li>  \n</ul>\n<p>给你一个字符串 <code>pressedKeys</code> ，表示 Bob 收到的字符串，请你返回 Alice <strong>总共可能发出多少种文字信息</strong> 。</p>\n<p>由于答案可能很大，将它对 <code>10<sup>9</sup> + 7</code> <strong>取余</strong> 后返回。</p>\n<p> </p>\n<p><strong>示例 1：</strong></p>\n<pre><b>输入：</b>pressedKeys = \"22233\"  \n<b>输出：</b>8  \n<strong>解释：</strong>  \nAlice 可能发出的文字信息包括：  \n\"aaadd\", \"abdd\", \"badd\", \"cdd\", \"aaae\", \"abe\", \"bae\" 和 \"ce\" 。  \n由于总共有 8 种可能的信息，所以我们返回 8 。  \n</pre>\n<p><strong>示例 2：</strong></p>\n<pre><b>输入：</b>pressedKeys = \"222222222222222222222222222222222222\"  \n<b>输出：</b>82876089  \n<strong>解释：</strong>  \n总共有 2082876103 种 Alice 可能发出的文字信息。  \n由于我们需要将答案对 10<sup>9</sup> + 7 取余，所以我们返回 2082876103 % (10<sup>9</sup> + 7) = 82876089 。  \n</pre>\n<p> </p>\n<p><strong>提示：</strong></p>\n<ul>  \n   <li><code>1 <= pressedKeys.length <= 10<sup>5</sup></code></li>  \n   <li><code>pressedKeys</code> 只包含数字 <code>'2'</code> 到 <code>'9'</code> 。</li>  \n</ul>\n<h1>思路</h1>\n<p>这题标的是中等题，个人觉得解题方法有点取巧，怎么取巧尼，因为重复的数最多4个，我完全可以嵌套3层if来处理，当然我也是这么干的。只要遍历一遍就可以了。</p>\n<p>在遍历到索引<code>i</code>时，有如下情况：</p>\n<ol>\n<li>\n<p>当前数字不和前面的组合，自己单独成一个新的</p>\n<p>索引<code>i</code>的种数 = 索引<code>i-1</code>的种数</p>\n</li>\n<li>\n<p>当前数字与前一个相等，那么该数字的组合就有两种情况</p>\n<ul>\n<li>\n<p>直接和前一个数字凑一起</p>\n<p>索引<code>i</code>的种数=索引<code>i-2</code>的种数</p>\n</li>\n<li>\n<p>索引<code>i</code>的数字和索引<code>i-2</code>的数字也相等，这也有2种情况</p>\n<ul>\n<li>\n<p>把索引<code>i</code>,<code>i-1</code>,<code>i-2</code>都凑一起</p>\n<p>索引<code>i</code>的种数=索引<code>i-3</code>的种数</p>\n</li>\n<li>\n<p>索引<code>i</code>是7或者9，最多可以连续4个，把索引<code>i</code>,<code>i-1</code>,<code>i-2</code>,<code>i-3</code>都凑一起</p>\n<p>索引<code>i</code>的种数=索引<code>i-4</code>的种数</p>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n<p>同时，为了保证数据没有超过int的最大值，这里对于每一次的结果都对<span>10<sup>9</sup>+7</span>取余</p>\n<h1>代码</h1>\n<p>Java：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">class Solution &#123;\n    public int countTexts(String pressedKeys) &#123;\n        int[] cnts &#x3D; new int[pressedKeys.length() + 1];\n        cnts[0] &#x3D; 1;\n        cnts[1] &#x3D; 1;\n        int mod &#x3D; 1000000007;\n        for (int i &#x3D; 1; i &lt; pressedKeys.length(); i++) &#123;\n            cnts[i + 1] &#x3D; cnts[i];\n            if (pressdKeys.charAt(i) &#x3D;&#x3D; pressedKeys.charAt(i - 1)) &#123;\n                cnts[i + 1] +&#x3D; cnts[i - 1];\n                cnts[i + 1] %&#x3D; mod;\n                if (i &gt; 1 &amp;&amp; pressedKeys.charAt(i) &#x3D;&#x3D; pressedKeys.charAt(i - 2)) &#123;\n                    cnts[i + 1] +&#x3D; cnts[i - 2];\n                    cnts[i + 1] %&#x3D; mod;\n                    if (i &gt; 2 &amp;&amp; pressedKeys.charAt(i) &#x3D;&#x3D; pressedKeys.charAt(i - 3) &amp;&amp; (pressedKeys.charAt(i) &#x3D;&#x3D; &#39;7&#39; || pressedKeys.charAt(i) &#x3D;&#x3D; &#39;\n                        cnts[i + 1] +&#x3D; cnts[i - 3];\n                        cnts[i + 1] %&#x3D; mod;\n                    &#125;\n                &#125;\n            &#125;\n        &#125;\n        return cnts[pressedKeys.length()];\n    &#125;\n&#125;</code></pre>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"cover":"https://blog.huangge1199.cn/post/nexusCreate/bg.jpeg","excerpt":"","more":"<p>力扣周赛292–第三题</p>\n<p><a href=\"https://leetcode.cn/problems/count-number-of-texts/\">2266. 统计打字方案数</a></p>\n<h1>题目</h1>\n<p>Alice 在给 Bob 用手机打字。数字到字母的 <strong>对应</strong> 如下图所示。</p>\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2022/03/15/1200px-telephone-keypad2svg.png\" style=\"width: 200px; height: 162px;\"></p>\n<p>为了 <strong>打出</strong> 一个字母，Alice 需要 <strong>按</strong> 对应字母 <code>i</code> 次，<code>i</code> 是该字母在这个按键上所处的位置。</p>\n<ul>  \n   <li>比方说，为了按出字母 <code>'s'</code> ，Alice 需要按 <code>'7'</code> 四次。类似的， Alice 需要按 <code>'5'</code> 两次得到字母  <code>'k'</code> 。</li>  \n   <li>注意，数字 <code>'0'</code> 和 <code>'1'</code> 不映射到任何字母，所以 Alice <strong>不</strong> 使用它们。</li>  \n</ul>\n<p>但是，由于传输的错误，Bob 没有收到 Alice 打字的字母信息，反而收到了 <strong>按键的字符串信息</strong> 。</p>\n<ul>  \n   <li>比方说，Alice 发出的信息为 <code>\"bob\"</code> ，Bob 将收到字符串 <code>\"2266622\"</code> 。</li>  \n</ul>\n<p>给你一个字符串 <code>pressedKeys</code> ，表示 Bob 收到的字符串，请你返回 Alice <strong>总共可能发出多少种文字信息</strong> 。</p>\n<p>由于答案可能很大，将它对 <code>10<sup>9</sup> + 7</code> <strong>取余</strong> 后返回。</p>\n<p> </p>\n<p><strong>示例 1：</strong></p>\n<pre><b>输入：</b>pressedKeys = \"22233\"  \n<b>输出：</b>8  \n<strong>解释：</strong>  \nAlice 可能发出的文字信息包括：  \n\"aaadd\", \"abdd\", \"badd\", \"cdd\", \"aaae\", \"abe\", \"bae\" 和 \"ce\" 。  \n由于总共有 8 种可能的信息，所以我们返回 8 。  \n</pre>\n<p><strong>示例 2：</strong></p>\n<pre><b>输入：</b>pressedKeys = \"222222222222222222222222222222222222\"  \n<b>输出：</b>82876089  \n<strong>解释：</strong>  \n总共有 2082876103 种 Alice 可能发出的文字信息。  \n由于我们需要将答案对 10<sup>9</sup> + 7 取余，所以我们返回 2082876103 % (10<sup>9</sup> + 7) = 82876089 。  \n</pre>\n<p> </p>\n<p><strong>提示：</strong></p>\n<ul>  \n   <li><code>1 <= pressedKeys.length <= 10<sup>5</sup></code></li>  \n   <li><code>pressedKeys</code> 只包含数字 <code>'2'</code> 到 <code>'9'</code> 。</li>  \n</ul>\n<h1>思路</h1>\n<p>这题标的是中等题，个人觉得解题方法有点取巧，怎么取巧尼，因为重复的数最多4个，我完全可以嵌套3层if来处理，当然我也是这么干的。只要遍历一遍就可以了。</p>\n<p>在遍历到索引<code>i</code>时，有如下情况：</p>\n<ol>\n<li>\n<p>当前数字不和前面的组合，自己单独成一个新的</p>\n<p>索引<code>i</code>的种数 = 索引<code>i-1</code>的种数</p>\n</li>\n<li>\n<p>当前数字与前一个相等，那么该数字的组合就有两种情况</p>\n<ul>\n<li>\n<p>直接和前一个数字凑一起</p>\n<p>索引<code>i</code>的种数=索引<code>i-2</code>的种数</p>\n</li>\n<li>\n<p>索引<code>i</code>的数字和索引<code>i-2</code>的数字也相等，这也有2种情况</p>\n<ul>\n<li>\n<p>把索引<code>i</code>,<code>i-1</code>,<code>i-2</code>都凑一起</p>\n<p>索引<code>i</code>的种数=索引<code>i-3</code>的种数</p>\n</li>\n<li>\n<p>索引<code>i</code>是7或者9，最多可以连续4个，把索引<code>i</code>,<code>i-1</code>,<code>i-2</code>,<code>i-3</code>都凑一起</p>\n<p>索引<code>i</code>的种数=索引<code>i-4</code>的种数</p>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n<p>同时，为了保证数据没有超过int的最大值，这里对于每一次的结果都对<span>10<sup>9</sup>+7</span>取余</p>\n<h1>代码</h1>\n<p>Java：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">class Solution &#123;\n    public int countTexts(String pressedKeys) &#123;\n        int[] cnts &#x3D; new int[pressedKeys.length() + 1];\n        cnts[0] &#x3D; 1;\n        cnts[1] &#x3D; 1;\n        int mod &#x3D; 1000000007;\n        for (int i &#x3D; 1; i &lt; pressedKeys.length(); i++) &#123;\n            cnts[i + 1] &#x3D; cnts[i];\n            if (pressdKeys.charAt(i) &#x3D;&#x3D; pressedKeys.charAt(i - 1)) &#123;\n                cnts[i + 1] +&#x3D; cnts[i - 1];\n                cnts[i + 1] %&#x3D; mod;\n                if (i &gt; 1 &amp;&amp; pressedKeys.charAt(i) &#x3D;&#x3D; pressedKeys.charAt(i - 2)) &#123;\n                    cnts[i + 1] +&#x3D; cnts[i - 2];\n                    cnts[i + 1] %&#x3D; mod;\n                    if (i &gt; 2 &amp;&amp; pressedKeys.charAt(i) &#x3D;&#x3D; pressedKeys.charAt(i - 3) &amp;&amp; (pressedKeys.charAt(i) &#x3D;&#x3D; &#39;7&#39; || pressedKeys.charAt(i) &#x3D;&#x3D; &#39;\n                        cnts[i + 1] +&#x3D; cnts[i - 3];\n                        cnts[i + 1] %&#x3D; mod;\n                    &#125;\n                &#125;\n            &#125;\n        &#125;\n        return cnts[pressedKeys.length()];\n    &#125;\n&#125;</code></pre>\n"},{"title":"docker构建自定义镜像","date":"2022-05-31T07:07:55.000Z","_content":"\n# 1、编写Dockerfile\n\nDockerfile\n\n```\nFROM nginx\nRUN apt update && apt install -y vim\n```\n\n# 2、构建镜像\n\n执行命令：\n\n```shell\ndocker build -t vim-nginx:1 .\n```\n\n> 注：要在Dockerfile所在目录下执行\n\n这步时间较长，多等等，出现下面红框表示安装成功\n\n![](createMyImage/2022-05-31-16-21-41-image.png)\n\n完成后，执行命令确认镜像生成：\n\n```shell\ndocker images\n```\n\n![](createMyImage/2022-05-31-16-28-07-image.png)\n\n# 3、测试镜像\n\n启动容器：\n\n```shell\ndocker run -d --name new-nginx vim-nginx:1\ndocker ps -a\n```\n\n下面红框内是执行过程，中间的部分我命令敲错了，忽略掉\n\n![](createMyImage/2022-05-31-16-32-54-image.png)\n\n进入容器使用vim命令：\n\n```shell\ndocker exec -it new-nginx bash\nvim 123.txt\nexit\n```\n\n![](createMyImage/2022-05-31-17-08-23-image.png)\n\n停止容器：\n\n```shell\ndocker stop new-nginx\ndocker ps -a\n```\n\n![](createMyImage/2022-05-31-17-11-22-image.png)\n\n删除容器：\n\n```shell\ndocker rm new-nginx\ndocker ps -a\n```\n\n![](createMyImage/2022-05-31-17-12-17-image.png)\n\n# 4、docker登录\n\n执行命令：\n\n```shell\ndocker login\n```\n\n然后输入用户名和密码\n\n> 注：用户名不是登录的邮箱\n\n![](createMyImage/2022-05-31-17-22-07-image.png)\n\n# 5、镜像修改\n\ntag命令修改为规范的镜像：\n\n```shell\ndocker tag vim-nginx:1 huangge1199/vim-nginx:1\ndocker images\n```\n\n![](createMyImage/2022-05-31-17-30-38-image.png)\n\n# 6、推送镜像\n\n```shell\ndocker push huangge1199/vim-nginx:1\n```\n\n![](createMyImage/2022-06-01-08-37-12-image.png)\n\n网页进入自己的docker仓库：\n\n![](createMyImage/2022-06-01-08-38-34-image.png)\n\n# 7、删除本地镜像\n\n```shell\ndocker rmi huangge1199/vim-nginx:1\ndocker images\n```\n\n![](createMyImage/2022-06-01-08-39-28-image.png)\n\n# 8、拉取镜像\n\n```shell\ndocker pull huangge1199/vim-nginx:1\ndocker images\n```\n\n![](createMyImage/2022-06-01-08-42-46-image.png) \n\n# 9、重复3的步骤测试镜像\n\n> 注意步骤3和现在的镜像名可能不同，记得替换\n","source":"_posts/createMyImage.md","raw":"---\ntitle: docker构建自定义镜像\ndate: 2022-05-31 15:07:55\ntags: [docker]\ncategories: [docker]\n---\n\n# 1、编写Dockerfile\n\nDockerfile\n\n```\nFROM nginx\nRUN apt update && apt install -y vim\n```\n\n# 2、构建镜像\n\n执行命令：\n\n```shell\ndocker build -t vim-nginx:1 .\n```\n\n> 注：要在Dockerfile所在目录下执行\n\n这步时间较长，多等等，出现下面红框表示安装成功\n\n![](createMyImage/2022-05-31-16-21-41-image.png)\n\n完成后，执行命令确认镜像生成：\n\n```shell\ndocker images\n```\n\n![](createMyImage/2022-05-31-16-28-07-image.png)\n\n# 3、测试镜像\n\n启动容器：\n\n```shell\ndocker run -d --name new-nginx vim-nginx:1\ndocker ps -a\n```\n\n下面红框内是执行过程，中间的部分我命令敲错了，忽略掉\n\n![](createMyImage/2022-05-31-16-32-54-image.png)\n\n进入容器使用vim命令：\n\n```shell\ndocker exec -it new-nginx bash\nvim 123.txt\nexit\n```\n\n![](createMyImage/2022-05-31-17-08-23-image.png)\n\n停止容器：\n\n```shell\ndocker stop new-nginx\ndocker ps -a\n```\n\n![](createMyImage/2022-05-31-17-11-22-image.png)\n\n删除容器：\n\n```shell\ndocker rm new-nginx\ndocker ps -a\n```\n\n![](createMyImage/2022-05-31-17-12-17-image.png)\n\n# 4、docker登录\n\n执行命令：\n\n```shell\ndocker login\n```\n\n然后输入用户名和密码\n\n> 注：用户名不是登录的邮箱\n\n![](createMyImage/2022-05-31-17-22-07-image.png)\n\n# 5、镜像修改\n\ntag命令修改为规范的镜像：\n\n```shell\ndocker tag vim-nginx:1 huangge1199/vim-nginx:1\ndocker images\n```\n\n![](createMyImage/2022-05-31-17-30-38-image.png)\n\n# 6、推送镜像\n\n```shell\ndocker push huangge1199/vim-nginx:1\n```\n\n![](createMyImage/2022-06-01-08-37-12-image.png)\n\n网页进入自己的docker仓库：\n\n![](createMyImage/2022-06-01-08-38-34-image.png)\n\n# 7、删除本地镜像\n\n```shell\ndocker rmi huangge1199/vim-nginx:1\ndocker images\n```\n\n![](createMyImage/2022-06-01-08-39-28-image.png)\n\n# 8、拉取镜像\n\n```shell\ndocker pull huangge1199/vim-nginx:1\ndocker images\n```\n\n![](createMyImage/2022-06-01-08-42-46-image.png) \n\n# 9、重复3的步骤测试镜像\n\n> 注意步骤3和现在的镜像名可能不同，记得替换\n","slug":"createMyImage","published":1,"updated":"2022-06-06T15:32:17.011Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl42z5h5q000i3gn68gspc9so","content":"<h1>1、编写Dockerfile</h1>\n<p>Dockerfile</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">FROM nginx\nRUN apt update &amp;&amp; apt install -y vim</code></pre>\n<h1>2、构建镜像</h1>\n<p>执行命令：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">docker build -t vim-nginx:1 .</code></pre>\n<blockquote>\n<p>注：要在Dockerfile所在目录下执行</p>\n</blockquote>\n<p>这步时间较长，多等等，出现下面红框表示安装成功</p>\n<p><img src=\"createMyImage/2022-05-31-16-21-41-image.png\" alt=\"\"></p>\n<p>完成后，执行命令确认镜像生成：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">docker images</code></pre>\n<p><img src=\"createMyImage/2022-05-31-16-28-07-image.png\" alt=\"\"></p>\n<h1>3、测试镜像</h1>\n<p>启动容器：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">docker run -d --name new-nginx vim-nginx:1\ndocker ps -a</code></pre>\n<p>下面红框内是执行过程，中间的部分我命令敲错了，忽略掉</p>\n<p><img src=\"createMyImage/2022-05-31-16-32-54-image.png\" alt=\"\"></p>\n<p>进入容器使用vim命令：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">docker exec -it new-nginx bash\nvim 123.txt\nexit</code></pre>\n<p><img src=\"createMyImage/2022-05-31-17-08-23-image.png\" alt=\"\"></p>\n<p>停止容器：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">docker stop new-nginx\ndocker ps -a</code></pre>\n<p><img src=\"createMyImage/2022-05-31-17-11-22-image.png\" alt=\"\"></p>\n<p>删除容器：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">docker rm new-nginx\ndocker ps -a</code></pre>\n<p><img src=\"createMyImage/2022-05-31-17-12-17-image.png\" alt=\"\"></p>\n<h1>4、docker登录</h1>\n<p>执行命令：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">docker login</code></pre>\n<p>然后输入用户名和密码</p>\n<blockquote>\n<p>注：用户名不是登录的邮箱</p>\n</blockquote>\n<p><img src=\"createMyImage/2022-05-31-17-22-07-image.png\" alt=\"\"></p>\n<h1>5、镜像修改</h1>\n<p>tag命令修改为规范的镜像：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">docker tag vim-nginx:1 huangge1199&#x2F;vim-nginx:1\ndocker images</code></pre>\n<p><img src=\"createMyImage/2022-05-31-17-30-38-image.png\" alt=\"\"></p>\n<h1>6、推送镜像</h1>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">docker push huangge1199&#x2F;vim-nginx:1</code></pre>\n<p><img src=\"createMyImage/2022-06-01-08-37-12-image.png\" alt=\"\"></p>\n<p>网页进入自己的docker仓库：</p>\n<p><img src=\"createMyImage/2022-06-01-08-38-34-image.png\" alt=\"\"></p>\n<h1>7、删除本地镜像</h1>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">docker rmi huangge1199&#x2F;vim-nginx:1\ndocker images</code></pre>\n<p><img src=\"createMyImage/2022-06-01-08-39-28-image.png\" alt=\"\"></p>\n<h1>8、拉取镜像</h1>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">docker pull huangge1199&#x2F;vim-nginx:1\ndocker images</code></pre>\n<p><img src=\"createMyImage/2022-06-01-08-42-46-image.png\" alt=\"\"></p>\n<h1>9、重复3的步骤测试镜像</h1>\n<blockquote>\n<p>注意步骤3和现在的镜像名可能不同，记得替换</p>\n</blockquote>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"cover":"https://blog.huangge1199.cn/post/nexusCreate/bg.jpeg","excerpt":"","more":"<h1>1、编写Dockerfile</h1>\n<p>Dockerfile</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">FROM nginx\nRUN apt update &amp;&amp; apt install -y vim</code></pre>\n<h1>2、构建镜像</h1>\n<p>执行命令：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">docker build -t vim-nginx:1 .</code></pre>\n<blockquote>\n<p>注：要在Dockerfile所在目录下执行</p>\n</blockquote>\n<p>这步时间较长，多等等，出现下面红框表示安装成功</p>\n<p><img src=\"createMyImage/2022-05-31-16-21-41-image.png\" alt=\"\"></p>\n<p>完成后，执行命令确认镜像生成：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">docker images</code></pre>\n<p><img src=\"createMyImage/2022-05-31-16-28-07-image.png\" alt=\"\"></p>\n<h1>3、测试镜像</h1>\n<p>启动容器：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">docker run -d --name new-nginx vim-nginx:1\ndocker ps -a</code></pre>\n<p>下面红框内是执行过程，中间的部分我命令敲错了，忽略掉</p>\n<p><img src=\"createMyImage/2022-05-31-16-32-54-image.png\" alt=\"\"></p>\n<p>进入容器使用vim命令：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">docker exec -it new-nginx bash\nvim 123.txt\nexit</code></pre>\n<p><img src=\"createMyImage/2022-05-31-17-08-23-image.png\" alt=\"\"></p>\n<p>停止容器：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">docker stop new-nginx\ndocker ps -a</code></pre>\n<p><img src=\"createMyImage/2022-05-31-17-11-22-image.png\" alt=\"\"></p>\n<p>删除容器：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">docker rm new-nginx\ndocker ps -a</code></pre>\n<p><img src=\"createMyImage/2022-05-31-17-12-17-image.png\" alt=\"\"></p>\n<h1>4、docker登录</h1>\n<p>执行命令：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">docker login</code></pre>\n<p>然后输入用户名和密码</p>\n<blockquote>\n<p>注：用户名不是登录的邮箱</p>\n</blockquote>\n<p><img src=\"createMyImage/2022-05-31-17-22-07-image.png\" alt=\"\"></p>\n<h1>5、镜像修改</h1>\n<p>tag命令修改为规范的镜像：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">docker tag vim-nginx:1 huangge1199&#x2F;vim-nginx:1\ndocker images</code></pre>\n<p><img src=\"createMyImage/2022-05-31-17-30-38-image.png\" alt=\"\"></p>\n<h1>6、推送镜像</h1>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">docker push huangge1199&#x2F;vim-nginx:1</code></pre>\n<p><img src=\"createMyImage/2022-06-01-08-37-12-image.png\" alt=\"\"></p>\n<p>网页进入自己的docker仓库：</p>\n<p><img src=\"createMyImage/2022-06-01-08-38-34-image.png\" alt=\"\"></p>\n<h1>7、删除本地镜像</h1>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">docker rmi huangge1199&#x2F;vim-nginx:1\ndocker images</code></pre>\n<p><img src=\"createMyImage/2022-06-01-08-39-28-image.png\" alt=\"\"></p>\n<h1>8、拉取镜像</h1>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">docker pull huangge1199&#x2F;vim-nginx:1\ndocker images</code></pre>\n<p><img src=\"createMyImage/2022-06-01-08-42-46-image.png\" alt=\"\"></p>\n<h1>9、重复3的步骤测试镜像</h1>\n<blockquote>\n<p>注意步骤3和现在的镜像名可能不同，记得替换</p>\n</blockquote>\n"},{"title":"darwin是什么？","date":"2022-03-30T01:16:32.000Z","_content":"今天，在学习NPS时，看到服务端启动命令时，它的分类是linux|darwin和windows两种，之前没有见过darwin，实在是好奇。\n通过网络的查找，学习到了以下知识：\n- Darwin 是一个由苹果公司（Apple Inc.）开发的 UNIX 操作系统\n- 自2000年后，Darwin 是苹果所有操作系统的基础，包括 macOS（原名 Mac OS X ，后缩写为 OS X，至 WWDC 2016 改名为 macOS）、iOS、watchOS 和 tvOS。\n- Darwin是xnu架构的实现，基本可以视作Mac的命令行部分。而xnu是乔布斯结合mach和bsd做出来的操作系统架构，是他被踢出苹果，自己开next公司时发明的，当时叫nextstep，后来被买回苹果\n","source":"_posts/darwin.md","raw":"---\ntitle: darwin是什么？\ndate: 2022-03-30 09:16:32\ntags: [it百科]\ncategories: [it百科]\n---\n今天，在学习NPS时，看到服务端启动命令时，它的分类是linux|darwin和windows两种，之前没有见过darwin，实在是好奇。\n通过网络的查找，学习到了以下知识：\n- Darwin 是一个由苹果公司（Apple Inc.）开发的 UNIX 操作系统\n- 自2000年后，Darwin 是苹果所有操作系统的基础，包括 macOS（原名 Mac OS X ，后缩写为 OS X，至 WWDC 2016 改名为 macOS）、iOS、watchOS 和 tvOS。\n- Darwin是xnu架构的实现，基本可以视作Mac的命令行部分。而xnu是乔布斯结合mach和bsd做出来的操作系统架构，是他被踢出苹果，自己开next公司时发明的，当时叫nextstep，后来被买回苹果\n","slug":"darwin","published":1,"updated":"2022-06-03T06:00:55.557Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl42z5h5s000n3gn6e8sr4viy","content":"<p>今天，在学习NPS时，看到服务端启动命令时，它的分类是linux|darwin和windows两种，之前没有见过darwin，实在是好奇。<br>\n通过网络的查找，学习到了以下知识：</p>\n<ul>\n<li>Darwin 是一个由苹果公司（Apple Inc.）开发的 UNIX 操作系统</li>\n<li>自2000年后，Darwin 是苹果所有操作系统的基础，包括 macOS（原名 Mac OS X ，后缩写为 OS X，至 WWDC 2016 改名为 macOS）、iOS、watchOS 和 tvOS。</li>\n<li>Darwin是xnu架构的实现，基本可以视作Mac的命令行部分。而xnu是乔布斯结合mach和bsd做出来的操作系统架构，是他被踢出苹果，自己开next公司时发明的，当时叫nextstep，后来被买回苹果</li>\n</ul>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"cover":"https://blog.huangge1199.cn/post/pyListSort/bg.jpeg","excerpt":"","more":"<p>今天，在学习NPS时，看到服务端启动命令时，它的分类是linux|darwin和windows两种，之前没有见过darwin，实在是好奇。<br>\n通过网络的查找，学习到了以下知识：</p>\n<ul>\n<li>Darwin 是一个由苹果公司（Apple Inc.）开发的 UNIX 操作系统</li>\n<li>自2000年后，Darwin 是苹果所有操作系统的基础，包括 macOS（原名 Mac OS X ，后缩写为 OS X，至 WWDC 2016 改名为 macOS）、iOS、watchOS 和 tvOS。</li>\n<li>Darwin是xnu架构的实现，基本可以视作Mac的命令行部分。而xnu是乔布斯结合mach和bsd做出来的操作系统架构，是他被踢出苹果，自己开next公司时发明的，当时叫nextstep，后来被买回苹果</li>\n</ul>\n"},{"title":"力扣539:最小时间差","date":"2022-01-18T06:26:41.000Z","cover":"https://blog.huangge1199.cn/post/day20220118/bg.jpeg","_content":"\n2022年01月18日 力扣每日一题\n\n# 题目\n\n<p>给定一个 24 小时制（小时:分钟 <strong>\"HH:MM\"</strong>）的时间列表，找出列表中任意两个时间的最小时间差并以分钟数表示。</p>\n\n<p> </p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入：</strong>timePoints = [\"23:59\",\"00:00\"]\n<strong>输出：</strong>1\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>\n<strong>输入：</strong>timePoints = [\"00:00\",\"23:59\",\"00:00\"]\n<strong>输出：</strong>0\n</pre>\n\n<p> </p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n   <li><code>2 <= timePoints.length <= 2 * 10<sup>4</sup></code></li>\n   <li><code>timePoints[i]</code> 格式为 <strong>\"HH:MM\"</strong></li>\n</ul>\n<div><div>Related Topics</div><div><li>数组</li><li>数学</li><li>字符串</li><li>排序</li></div></div>\n\n# 个人解法\n\n{% tabs categories%}\n\n<!-- tab Java -->\n\n```java\nimport java.util.List;\n\nclass Solution {\n    public int findMinDifference(List<String> timePoints) {\n        int[] times = new int[2880];\n        for (String timePoint : timePoints) {\n            String[] strs = timePoint.split(\":\");\n            int time = Integer.parseInt(strs[0]) * 60 + Integer.parseInt(strs[1]);\n            if (times[time] == 1) {\n                return 0;\n            }\n            times[time] = 1;\n            times[time + 1440] = 1;\n        }\n        if (times[0] == 1 && times[1439] == 1) {\n            return 1;\n        }\n        int min = 1440;\n        int bef = 0;\n        for (int i = 1; i < 2880; i++) {\n            if (times[i] == 1) {\n                if (bef > 0) {\n                    min = Math.min(min, i - bef);\n                }\n                if (i > 1439) {\n                    break;\n                }\n                bef = i;\n            }\n        }\n        return min;\n    }\n}\n```\n\n<!-- endtab -->\n\n<!-- tab Python3 -->\n\n```python\nfrom typing import List\n\n\nclass Solution:\n    def findMinDifference(self, timePoints: List[str]) -> int:\n        times = [0] * 2880\n        for timePoint in timePoints:\n            time = int(timePoint[:2]) * 60 + int(timePoint[-2:])\n            if times[time] == 1:\n                return 0\n            times[time] = 1\n            times[time + 1440] = 1\n        result = 1440\n        bef = 0\n        for i in range(2880):\n            if times[i] == 1:\n                if bef > 0:\n                    result = min(result, i - bef)\n                if i > 1439:\n                    break\n                bef = i\n        return result\n```\n\n<!-- endtab -->\n\n{% endtabs %}\n","source":"_posts/day20220118.md","raw":"---\ntitle: 力扣539:最小时间差 \ndate: 2022-01-18 14:26:41 \ntags: [力扣]\ncategories: [算法,力扣,每日一题]\ncover: https://blog.huangge1199.cn/post/day20220118/bg.jpeg\n\n---\n\n2022年01月18日 力扣每日一题\n\n# 题目\n\n<p>给定一个 24 小时制（小时:分钟 <strong>\"HH:MM\"</strong>）的时间列表，找出列表中任意两个时间的最小时间差并以分钟数表示。</p>\n\n<p> </p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入：</strong>timePoints = [\"23:59\",\"00:00\"]\n<strong>输出：</strong>1\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>\n<strong>输入：</strong>timePoints = [\"00:00\",\"23:59\",\"00:00\"]\n<strong>输出：</strong>0\n</pre>\n\n<p> </p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n   <li><code>2 <= timePoints.length <= 2 * 10<sup>4</sup></code></li>\n   <li><code>timePoints[i]</code> 格式为 <strong>\"HH:MM\"</strong></li>\n</ul>\n<div><div>Related Topics</div><div><li>数组</li><li>数学</li><li>字符串</li><li>排序</li></div></div>\n\n# 个人解法\n\n{% tabs categories%}\n\n<!-- tab Java -->\n\n```java\nimport java.util.List;\n\nclass Solution {\n    public int findMinDifference(List<String> timePoints) {\n        int[] times = new int[2880];\n        for (String timePoint : timePoints) {\n            String[] strs = timePoint.split(\":\");\n            int time = Integer.parseInt(strs[0]) * 60 + Integer.parseInt(strs[1]);\n            if (times[time] == 1) {\n                return 0;\n            }\n            times[time] = 1;\n            times[time + 1440] = 1;\n        }\n        if (times[0] == 1 && times[1439] == 1) {\n            return 1;\n        }\n        int min = 1440;\n        int bef = 0;\n        for (int i = 1; i < 2880; i++) {\n            if (times[i] == 1) {\n                if (bef > 0) {\n                    min = Math.min(min, i - bef);\n                }\n                if (i > 1439) {\n                    break;\n                }\n                bef = i;\n            }\n        }\n        return min;\n    }\n}\n```\n\n<!-- endtab -->\n\n<!-- tab Python3 -->\n\n```python\nfrom typing import List\n\n\nclass Solution:\n    def findMinDifference(self, timePoints: List[str]) -> int:\n        times = [0] * 2880\n        for timePoint in timePoints:\n            time = int(timePoint[:2]) * 60 + int(timePoint[-2:])\n            if times[time] == 1:\n                return 0\n            times[time] = 1\n            times[time + 1440] = 1\n        result = 1440\n        bef = 0\n        for i in range(2880):\n            if times[i] == 1:\n                if bef > 0:\n                    result = min(result, i - bef)\n                if i > 1439:\n                    break\n                bef = i\n        return result\n```\n\n<!-- endtab -->\n\n{% endtabs %}\n","slug":"day20220118","published":1,"updated":"2022-06-03T06:00:55.557Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl42z5h5t000p3gn6eku8cya6","content":"<p>2022年01月18日 力扣每日一题</p>\n<h1>题目</h1>\n<p>给定一个 24 小时制（小时:分钟 <strong>\"HH:MM\"</strong>）的时间列表，找出列表中任意两个时间的最小时间差并以分钟数表示。</p>\n<p> </p>\n<p><strong>示例 1：</strong></p>\n<pre>\n<strong>输入：</strong>timePoints = [\"23:59\",\"00:00\"]\n<strong>输出：</strong>1\n</pre>\n<p><strong>示例 2：</strong></p>\n<pre>\n<strong>输入：</strong>timePoints = [\"00:00\",\"23:59\",\"00:00\"]\n<strong>输出：</strong>0\n</pre>\n<p> </p>\n<p><strong>提示：</strong></p>\n<ul>\n   <li><code>2 <= timePoints.length <= 2 * 10<sup>4</sup></code></li>\n   <li><code>timePoints[i]</code> 格式为 <strong>\"HH:MM\"</strong></li>\n</ul>\n<div><div>Related Topics</div><div><li>数组</li><li>数学</li><li>字符串</li><li>排序</li></div></div>\n<h1>个人解法</h1>\n<div class=\"tabs\" id=\"categories\"><ul class=\"nav-tabs\"><li class=\"tab active\"><button type=\"button\" data-href=\"#categories-1\">Java</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#categories-2\">Python3</button></li></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"categories-1\"><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">import java.util.List;\n\nclass Solution &#123;\n    public int findMinDifference(List&lt;String&gt; timePoints) &#123;\n        int[] times &#x3D; new int[2880];\n        for (String timePoint : timePoints) &#123;\n            String[] strs &#x3D; timePoint.split(&quot;:&quot;);\n            int time &#x3D; Integer.parseInt(strs[0]) * 60 + Integer.parseInt(strs[1]);\n            if (times[time] &#x3D;&#x3D; 1) &#123;\n                return 0;\n            &#125;\n            times[time] &#x3D; 1;\n            times[time + 1440] &#x3D; 1;\n        &#125;\n        if (times[0] &#x3D;&#x3D; 1 &amp;&amp; times[1439] &#x3D;&#x3D; 1) &#123;\n            return 1;\n        &#125;\n        int min &#x3D; 1440;\n        int bef &#x3D; 0;\n        for (int i &#x3D; 1; i &lt; 2880; i++) &#123;\n            if (times[i] &#x3D;&#x3D; 1) &#123;\n                if (bef &gt; 0) &#123;\n                    min &#x3D; Math.min(min, i - bef);\n                &#125;\n                if (i &gt; 1439) &#123;\n                    break;\n                &#125;\n                bef &#x3D; i;\n            &#125;\n        &#125;\n        return min;\n    &#125;\n&#125;</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"categories-2\"><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">from typing import List\n\n\nclass Solution:\n    def findMinDifference(self, timePoints: List[str]) -&gt; int:\n        times &#x3D; [0] * 2880\n        for timePoint in timePoints:\n            time &#x3D; int(timePoint[:2]) * 60 + int(timePoint[-2:])\n            if times[time] &#x3D;&#x3D; 1:\n                return 0\n            times[time] &#x3D; 1\n            times[time + 1440] &#x3D; 1\n        result &#x3D; 1440\n        bef &#x3D; 0\n        for i in range(2880):\n            if times[i] &#x3D;&#x3D; 1:\n                if bef &gt; 0:\n                    result &#x3D; min(result, i - bef)\n                if i &gt; 1439:\n                    break\n                bef &#x3D; i\n        return result</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div></div>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"excerpt":"","more":"<p>2022年01月18日 力扣每日一题</p>\n<h1>题目</h1>\n<p>给定一个 24 小时制（小时:分钟 <strong>\"HH:MM\"</strong>）的时间列表，找出列表中任意两个时间的最小时间差并以分钟数表示。</p>\n<p> </p>\n<p><strong>示例 1：</strong></p>\n<pre>\n<strong>输入：</strong>timePoints = [\"23:59\",\"00:00\"]\n<strong>输出：</strong>1\n</pre>\n<p><strong>示例 2：</strong></p>\n<pre>\n<strong>输入：</strong>timePoints = [\"00:00\",\"23:59\",\"00:00\"]\n<strong>输出：</strong>0\n</pre>\n<p> </p>\n<p><strong>提示：</strong></p>\n<ul>\n   <li><code>2 <= timePoints.length <= 2 * 10<sup>4</sup></code></li>\n   <li><code>timePoints[i]</code> 格式为 <strong>\"HH:MM\"</strong></li>\n</ul>\n<div><div>Related Topics</div><div><li>数组</li><li>数学</li><li>字符串</li><li>排序</li></div></div>\n<h1>个人解法</h1>\n<div class=\"tabs\" id=\"categories\"><ul class=\"nav-tabs\"><li class=\"tab active\"><button type=\"button\" data-href=\"#categories-1\">Java</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#categories-2\">Python3</button></li></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"categories-1\"><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">import java.util.List;\n\nclass Solution &#123;\n    public int findMinDifference(List&lt;String&gt; timePoints) &#123;\n        int[] times &#x3D; new int[2880];\n        for (String timePoint : timePoints) &#123;\n            String[] strs &#x3D; timePoint.split(&quot;:&quot;);\n            int time &#x3D; Integer.parseInt(strs[0]) * 60 + Integer.parseInt(strs[1]);\n            if (times[time] &#x3D;&#x3D; 1) &#123;\n                return 0;\n            &#125;\n            times[time] &#x3D; 1;\n            times[time + 1440] &#x3D; 1;\n        &#125;\n        if (times[0] &#x3D;&#x3D; 1 &amp;&amp; times[1439] &#x3D;&#x3D; 1) &#123;\n            return 1;\n        &#125;\n        int min &#x3D; 1440;\n        int bef &#x3D; 0;\n        for (int i &#x3D; 1; i &lt; 2880; i++) &#123;\n            if (times[i] &#x3D;&#x3D; 1) &#123;\n                if (bef &gt; 0) &#123;\n                    min &#x3D; Math.min(min, i - bef);\n                &#125;\n                if (i &gt; 1439) &#123;\n                    break;\n                &#125;\n                bef &#x3D; i;\n            &#125;\n        &#125;\n        return min;\n    &#125;\n&#125;</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"categories-2\"><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">from typing import List\n\n\nclass Solution:\n    def findMinDifference(self, timePoints: List[str]) -&gt; int:\n        times &#x3D; [0] * 2880\n        for timePoint in timePoints:\n            time &#x3D; int(timePoint[:2]) * 60 + int(timePoint[-2:])\n            if times[time] &#x3D;&#x3D; 1:\n                return 0\n            times[time] &#x3D; 1\n            times[time + 1440] &#x3D; 1\n        result &#x3D; 1440\n        bef &#x3D; 0\n        for i in range(2880):\n            if times[i] &#x3D;&#x3D; 1:\n                if bef &gt; 0:\n                    result &#x3D; min(result, i - bef)\n                if i &gt; 1439:\n                    break\n                bef &#x3D; i\n        return result</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div></div>\n"},{"title":"力扣219:存在重复元素 II","date":"2022-01-19T03:24:37.000Z","cover":"https://blog.huangge1199.cn/post/day20220119/bg.jpeg","_content":"2022年01月19日 力扣每日一题\n\n# 题目\n\n<p>给你一个整数数组&nbsp;<code>nums</code> 和一个整数&nbsp;<code>k</code> ，判断数组中是否存在两个 <strong>不同的索引</strong><em>&nbsp;</em><code>i</code>&nbsp;和<em>&nbsp;</em><code>j</code> ，满足 <code>nums[i] == nums[j]</code> 且 <code>abs(i - j) &lt;= k</code> 。如果存在，返回 <code>true</code> ；否则，返回 <code>false</code> 。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例&nbsp;1：</strong></p>\n\n<pre>\n<strong>输入：</strong>nums = [1,2,3,1], k<em> </em>= 3\n<strong>输出：</strong>true</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>\n<strong>输入：</strong>nums = [1,0,1,1], k<em> </em>=<em> </em>1\n<strong>输出：</strong>true</pre>\n\n<p><strong>示例 3：</strong></p>\n\n<pre>\n<strong>输入：</strong>nums = [1,2,3,1,2,3], k<em> </em>=<em> </em>2\n<strong>输出：</strong>false</pre>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>-10<sup>9</sup> &lt;= nums[i] &lt;= 10<sup>9</sup></code></li>\n\t<li><code>0 &lt;= k &lt;= 10<sup>5</sup></code></li>\n</ul>\n<div><div>Related Topics</div><div><li>数组</li><li>哈希表</li><li>滑动窗口</li></div></div>\n\n# 个人解法\n\n{% tabs categories%}\n<!-- tab Java -->\n```java\nimport java.util.HashMap;\nimport java.util.Map;\n\nclass Solution {\n    public boolean containsNearbyDuplicate(int[] nums, int k) {\n        if (k <= 0) {\n            return false;\n        }\n        Map<Integer, Integer> map = new HashMap<>();\n        for (int i = 0; i < nums.length; i++) {\n            if (map.containsKey(nums[i]) && i - map.get(nums[i]) <= k) {\n                return true;\n            }\n            map.put(nums[i], i);\n        }\n        return false;\n    }\n}\n```\n<!-- endtab -->\n\n<!-- tab Python3 -->\n```python\nfrom typing import List\n\n\nclass Solution:\n    def containsNearbyDuplicate(self, nums: List[int], k: int) -> bool:\n        map = {}\n        for i, num in enumerate(nums):\n            if num in map and i - map[num] <= k:\n                return True\n            map[num] = i\n        return False\n```\n<!-- endtab -->\n{% endtabs %}","source":"_posts/day20220119.md","raw":"---\ntitle: 力扣219:存在重复元素 II\ndate: 2022-01-19 11:24:37\ntags: [力扣]\ncategories: [算法,力扣,每日一题]\ncover: https://blog.huangge1199.cn/post/day20220119/bg.jpeg\n---\n2022年01月19日 力扣每日一题\n\n# 题目\n\n<p>给你一个整数数组&nbsp;<code>nums</code> 和一个整数&nbsp;<code>k</code> ，判断数组中是否存在两个 <strong>不同的索引</strong><em>&nbsp;</em><code>i</code>&nbsp;和<em>&nbsp;</em><code>j</code> ，满足 <code>nums[i] == nums[j]</code> 且 <code>abs(i - j) &lt;= k</code> 。如果存在，返回 <code>true</code> ；否则，返回 <code>false</code> 。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例&nbsp;1：</strong></p>\n\n<pre>\n<strong>输入：</strong>nums = [1,2,3,1], k<em> </em>= 3\n<strong>输出：</strong>true</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>\n<strong>输入：</strong>nums = [1,0,1,1], k<em> </em>=<em> </em>1\n<strong>输出：</strong>true</pre>\n\n<p><strong>示例 3：</strong></p>\n\n<pre>\n<strong>输入：</strong>nums = [1,2,3,1,2,3], k<em> </em>=<em> </em>2\n<strong>输出：</strong>false</pre>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>-10<sup>9</sup> &lt;= nums[i] &lt;= 10<sup>9</sup></code></li>\n\t<li><code>0 &lt;= k &lt;= 10<sup>5</sup></code></li>\n</ul>\n<div><div>Related Topics</div><div><li>数组</li><li>哈希表</li><li>滑动窗口</li></div></div>\n\n# 个人解法\n\n{% tabs categories%}\n<!-- tab Java -->\n```java\nimport java.util.HashMap;\nimport java.util.Map;\n\nclass Solution {\n    public boolean containsNearbyDuplicate(int[] nums, int k) {\n        if (k <= 0) {\n            return false;\n        }\n        Map<Integer, Integer> map = new HashMap<>();\n        for (int i = 0; i < nums.length; i++) {\n            if (map.containsKey(nums[i]) && i - map.get(nums[i]) <= k) {\n                return true;\n            }\n            map.put(nums[i], i);\n        }\n        return false;\n    }\n}\n```\n<!-- endtab -->\n\n<!-- tab Python3 -->\n```python\nfrom typing import List\n\n\nclass Solution:\n    def containsNearbyDuplicate(self, nums: List[int], k: int) -> bool:\n        map = {}\n        for i, num in enumerate(nums):\n            if num in map and i - map[num] <= k:\n                return True\n            map[num] = i\n        return False\n```\n<!-- endtab -->\n{% endtabs %}","slug":"day20220119","published":1,"updated":"2022-06-03T06:00:55.557Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl42z5h5w000u3gn61b3964mf","content":"<p>2022年01月19日 力扣每日一题</p>\n<h1>题目</h1>\n<p>给你一个整数数组&nbsp;<code>nums</code> 和一个整数&nbsp;<code>k</code> ，判断数组中是否存在两个 <strong>不同的索引</strong><em>&nbsp;</em><code>i</code>&nbsp;和<em>&nbsp;</em><code>j</code> ，满足 <code>nums[i] == nums[j]</code> 且 <code>abs(i - j) &lt;= k</code> 。如果存在，返回 <code>true</code> ；否则，返回 <code>false</code> 。</p>\n<p>&nbsp;</p>\n<p><strong>示例&nbsp;1：</strong></p>\n<pre>\n<strong>输入：</strong>nums = [1,2,3,1], k<em> </em>= 3\n<strong>输出：</strong>true</pre>\n<p><strong>示例 2：</strong></p>\n<pre>\n<strong>输入：</strong>nums = [1,0,1,1], k<em> </em>=<em> </em>1\n<strong>输出：</strong>true</pre>\n<p><strong>示例 3：</strong></p>\n<pre>\n<strong>输入：</strong>nums = [1,2,3,1,2,3], k<em> </em>=<em> </em>2\n<strong>输出：</strong>false</pre>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p><strong>提示：</strong></p>\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>-10<sup>9</sup> &lt;= nums[i] &lt;= 10<sup>9</sup></code></li>\n\t<li><code>0 &lt;= k &lt;= 10<sup>5</sup></code></li>\n</ul>\n<div><div>Related Topics</div><div><li>数组</li><li>哈希表</li><li>滑动窗口</li></div></div>\n<h1>个人解法</h1>\n<div class=\"tabs\" id=\"categories\"><ul class=\"nav-tabs\"><li class=\"tab active\"><button type=\"button\" data-href=\"#categories-1\">Java</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#categories-2\">Python3</button></li></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"categories-1\"><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">import java.util.HashMap;\nimport java.util.Map;\n\nclass Solution &#123;\n    public boolean containsNearbyDuplicate(int[] nums, int k) &#123;\n        if (k &lt;&#x3D; 0) &#123;\n            return false;\n        &#125;\n        Map&lt;Integer, Integer&gt; map &#x3D; new HashMap&lt;&gt;();\n        for (int i &#x3D; 0; i &lt; nums.length; i++) &#123;\n            if (map.containsKey(nums[i]) &amp;&amp; i - map.get(nums[i]) &lt;&#x3D; k) &#123;\n                return true;\n            &#125;\n            map.put(nums[i], i);\n        &#125;\n        return false;\n    &#125;\n&#125;</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"categories-2\"><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">from typing import List\n\n\nclass Solution:\n    def containsNearbyDuplicate(self, nums: List[int], k: int) -&gt; bool:\n        map &#x3D; &#123;&#125;\n        for i, num in enumerate(nums):\n            if num in map and i - map[num] &lt;&#x3D; k:\n                return True\n            map[num] &#x3D; i\n        return False</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div></div>","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"excerpt":"","more":"<p>2022年01月19日 力扣每日一题</p>\n<h1>题目</h1>\n<p>给你一个整数数组&nbsp;<code>nums</code> 和一个整数&nbsp;<code>k</code> ，判断数组中是否存在两个 <strong>不同的索引</strong><em>&nbsp;</em><code>i</code>&nbsp;和<em>&nbsp;</em><code>j</code> ，满足 <code>nums[i] == nums[j]</code> 且 <code>abs(i - j) &lt;= k</code> 。如果存在，返回 <code>true</code> ；否则，返回 <code>false</code> 。</p>\n<p>&nbsp;</p>\n<p><strong>示例&nbsp;1：</strong></p>\n<pre>\n<strong>输入：</strong>nums = [1,2,3,1], k<em> </em>= 3\n<strong>输出：</strong>true</pre>\n<p><strong>示例 2：</strong></p>\n<pre>\n<strong>输入：</strong>nums = [1,0,1,1], k<em> </em>=<em> </em>1\n<strong>输出：</strong>true</pre>\n<p><strong>示例 3：</strong></p>\n<pre>\n<strong>输入：</strong>nums = [1,2,3,1,2,3], k<em> </em>=<em> </em>2\n<strong>输出：</strong>false</pre>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p><strong>提示：</strong></p>\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>-10<sup>9</sup> &lt;= nums[i] &lt;= 10<sup>9</sup></code></li>\n\t<li><code>0 &lt;= k &lt;= 10<sup>5</sup></code></li>\n</ul>\n<div><div>Related Topics</div><div><li>数组</li><li>哈希表</li><li>滑动窗口</li></div></div>\n<h1>个人解法</h1>\n<div class=\"tabs\" id=\"categories\"><ul class=\"nav-tabs\"><li class=\"tab active\"><button type=\"button\" data-href=\"#categories-1\">Java</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#categories-2\">Python3</button></li></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"categories-1\"><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">import java.util.HashMap;\nimport java.util.Map;\n\nclass Solution &#123;\n    public boolean containsNearbyDuplicate(int[] nums, int k) &#123;\n        if (k &lt;&#x3D; 0) &#123;\n            return false;\n        &#125;\n        Map&lt;Integer, Integer&gt; map &#x3D; new HashMap&lt;&gt;();\n        for (int i &#x3D; 0; i &lt; nums.length; i++) &#123;\n            if (map.containsKey(nums[i]) &amp;&amp; i - map.get(nums[i]) &lt;&#x3D; k) &#123;\n                return true;\n            &#125;\n            map.put(nums[i], i);\n        &#125;\n        return false;\n    &#125;\n&#125;</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"categories-2\"><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">from typing import List\n\n\nclass Solution:\n    def containsNearbyDuplicate(self, nums: List[int], k: int) -&gt; bool:\n        map &#x3D; &#123;&#125;\n        for i, num in enumerate(nums):\n            if num in map and i - map[num] &lt;&#x3D; k:\n                return True\n            map[num] &#x3D; i\n        return False</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div></div>"},{"title":"力扣2029:石子游戏 IX","date":"2022-01-20T02:56:54.000Z","cover":"https://blog.huangge1199.cn/post/day20220120/bg.jpeg","_content":"2022年01月20日 力扣每日一题\n\n# 题目\n\n<p>Alice 和 Bob 再次设计了一款新的石子游戏。现有一行 n 个石子，每个石子都有一个关联的数字表示它的价值。给你一个整数数组 <code>stones</code> ，其中 <code>stones[i]</code> 是第 <code>i</code> 个石子的价值。</p>\n\n<p>Alice 和 Bob 轮流进行自己的回合，<strong>Alice</strong> 先手。每一回合，玩家需要从 <code>stones</code>&nbsp;中移除任一石子。</p>\n\n<ul>\n\t<li>如果玩家移除石子后，导致 <strong>所有已移除石子</strong> 的价值&nbsp;<strong>总和</strong> 可以被 3 整除，那么该玩家就 <strong>输掉游戏</strong> 。</li>\n\t<li>如果不满足上一条，且移除后没有任何剩余的石子，那么 Bob 将会直接获胜（即便是在 Alice 的回合）。</li>\n</ul>\n\n<p>假设两位玩家均采用&nbsp;<strong>最佳</strong> 决策。如果 Alice 获胜，返回 <code>true</code> ；如果 Bob 获胜，返回 <code>false</code> 。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入：</strong>stones = [2,1]\n<strong>输出：</strong>true\n<strong>解释：</strong>游戏进行如下：\n- 回合 1：Alice 可以移除任意一个石子。\n- 回合 2：Bob 移除剩下的石子。 \n已移除的石子的值总和为 1 + 2 = 3 且可以被 3 整除。因此，Bob 输，Alice 获胜。\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>\n<strong>输入：</strong>stones = [2]\n<strong>输出：</strong>false\n<strong>解释：</strong>Alice 会移除唯一一个石子，已移除石子的值总和为 2 。 \n由于所有石子都已移除，且值总和无法被 3 整除，Bob 获胜。\n</pre>\n\n<p><strong>示例 3：</strong></p>\n\n<pre>\n<strong>输入：</strong>stones = [5,1,2,4,3]\n<strong>输出：</strong>false\n<strong>解释：</strong>Bob 总会获胜。其中一种可能的游戏进行方式如下：\n- 回合 1：Alice 可以移除值为 1 的第 2 个石子。已移除石子值总和为 1 。\n- 回合 2：Bob 可以移除值为 3 的第 5 个石子。已移除石子值总和为 = 1 + 3 = 4 。\n- 回合 3：Alices 可以移除值为 4 的第 4 个石子。已移除石子值总和为 = 1 + 3 + 4 = 8 。\n- 回合 4：Bob 可以移除值为 2 的第 3 个石子。已移除石子值总和为 = 1 + 3 + 4 + 2 = 10.\n- 回合 5：Alice 可以移除值为 5 的第 1 个石子。已移除石子值总和为 = 1 + 3 + 4 + 2 + 5 = 15.\nAlice 输掉游戏，因为已移除石子值总和（15）可以被 3 整除，Bob 获胜。\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= stones.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= stones[i] &lt;= 10<sup>4</sup></code></li>\n</ul>\n<div><div>Related Topics</div><div><li>贪心</li><li>数组</li><li>数学</li><li>计数</li><li>博弈</li></div></div>\n\n# 个人解法\n\n{% tabs categories%}\n<!-- tab Java -->\n```java\nclass Solution {\n    public boolean stoneGameIX(int[] stones) {\n        int[] counts = new int[3];\n        for (int stone : stones) {\n            counts[stone % 3]++;\n        }\n        return counts[0] % 2 == 0 ? counts[1] > 0 && counts[2] > 0 : Math.abs(counts[1] - counts[2]) > 2;\n    }\n}\n```\n<!-- endtab -->\n\n<!-- tab Python3 -->\n```python\nfrom typing import List\n\n\nclass Solution:\n    def stoneGameIX(self, stones: List[int]) -> bool:\n        counts = [0] * 3\n        for stone in stones:\n            counts[stone % 3] += 1\n        if counts[0] % 2 == 0:\n            return counts[1] > 0 and counts[2] > 0\n        else:\n            return abs(counts[1] - counts[2]) > 2\n```\n<!-- endtab -->\n{% endtabs %}","source":"_posts/day20220120.md","raw":"---\ntitle: 力扣2029:石子游戏 IX\ndate: 2022-01-20 10:56:54\ntags: [力扣]\ncategories: [算法,力扣,每日一题]\ncover: https://blog.huangge1199.cn/post/day20220120/bg.jpeg\n---\n2022年01月20日 力扣每日一题\n\n# 题目\n\n<p>Alice 和 Bob 再次设计了一款新的石子游戏。现有一行 n 个石子，每个石子都有一个关联的数字表示它的价值。给你一个整数数组 <code>stones</code> ，其中 <code>stones[i]</code> 是第 <code>i</code> 个石子的价值。</p>\n\n<p>Alice 和 Bob 轮流进行自己的回合，<strong>Alice</strong> 先手。每一回合，玩家需要从 <code>stones</code>&nbsp;中移除任一石子。</p>\n\n<ul>\n\t<li>如果玩家移除石子后，导致 <strong>所有已移除石子</strong> 的价值&nbsp;<strong>总和</strong> 可以被 3 整除，那么该玩家就 <strong>输掉游戏</strong> 。</li>\n\t<li>如果不满足上一条，且移除后没有任何剩余的石子，那么 Bob 将会直接获胜（即便是在 Alice 的回合）。</li>\n</ul>\n\n<p>假设两位玩家均采用&nbsp;<strong>最佳</strong> 决策。如果 Alice 获胜，返回 <code>true</code> ；如果 Bob 获胜，返回 <code>false</code> 。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入：</strong>stones = [2,1]\n<strong>输出：</strong>true\n<strong>解释：</strong>游戏进行如下：\n- 回合 1：Alice 可以移除任意一个石子。\n- 回合 2：Bob 移除剩下的石子。 \n已移除的石子的值总和为 1 + 2 = 3 且可以被 3 整除。因此，Bob 输，Alice 获胜。\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>\n<strong>输入：</strong>stones = [2]\n<strong>输出：</strong>false\n<strong>解释：</strong>Alice 会移除唯一一个石子，已移除石子的值总和为 2 。 \n由于所有石子都已移除，且值总和无法被 3 整除，Bob 获胜。\n</pre>\n\n<p><strong>示例 3：</strong></p>\n\n<pre>\n<strong>输入：</strong>stones = [5,1,2,4,3]\n<strong>输出：</strong>false\n<strong>解释：</strong>Bob 总会获胜。其中一种可能的游戏进行方式如下：\n- 回合 1：Alice 可以移除值为 1 的第 2 个石子。已移除石子值总和为 1 。\n- 回合 2：Bob 可以移除值为 3 的第 5 个石子。已移除石子值总和为 = 1 + 3 = 4 。\n- 回合 3：Alices 可以移除值为 4 的第 4 个石子。已移除石子值总和为 = 1 + 3 + 4 = 8 。\n- 回合 4：Bob 可以移除值为 2 的第 3 个石子。已移除石子值总和为 = 1 + 3 + 4 + 2 = 10.\n- 回合 5：Alice 可以移除值为 5 的第 1 个石子。已移除石子值总和为 = 1 + 3 + 4 + 2 + 5 = 15.\nAlice 输掉游戏，因为已移除石子值总和（15）可以被 3 整除，Bob 获胜。\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= stones.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= stones[i] &lt;= 10<sup>4</sup></code></li>\n</ul>\n<div><div>Related Topics</div><div><li>贪心</li><li>数组</li><li>数学</li><li>计数</li><li>博弈</li></div></div>\n\n# 个人解法\n\n{% tabs categories%}\n<!-- tab Java -->\n```java\nclass Solution {\n    public boolean stoneGameIX(int[] stones) {\n        int[] counts = new int[3];\n        for (int stone : stones) {\n            counts[stone % 3]++;\n        }\n        return counts[0] % 2 == 0 ? counts[1] > 0 && counts[2] > 0 : Math.abs(counts[1] - counts[2]) > 2;\n    }\n}\n```\n<!-- endtab -->\n\n<!-- tab Python3 -->\n```python\nfrom typing import List\n\n\nclass Solution:\n    def stoneGameIX(self, stones: List[int]) -> bool:\n        counts = [0] * 3\n        for stone in stones:\n            counts[stone % 3] += 1\n        if counts[0] % 2 == 0:\n            return counts[1] > 0 and counts[2] > 0\n        else:\n            return abs(counts[1] - counts[2]) > 2\n```\n<!-- endtab -->\n{% endtabs %}","slug":"day20220120","published":1,"updated":"2022-06-03T06:00:55.557Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl42z5h5x000x3gn67501gujd","content":"<p>2022年01月20日 力扣每日一题</p>\n<h1>题目</h1>\n<p>Alice 和 Bob 再次设计了一款新的石子游戏。现有一行 n 个石子，每个石子都有一个关联的数字表示它的价值。给你一个整数数组 <code>stones</code> ，其中 <code>stones[i]</code> 是第 <code>i</code> 个石子的价值。</p>\n<p>Alice 和 Bob 轮流进行自己的回合，<strong>Alice</strong> 先手。每一回合，玩家需要从 <code>stones</code>&nbsp;中移除任一石子。</p>\n<ul>\n\t<li>如果玩家移除石子后，导致 <strong>所有已移除石子</strong> 的价值&nbsp;<strong>总和</strong> 可以被 3 整除，那么该玩家就 <strong>输掉游戏</strong> 。</li>\n\t<li>如果不满足上一条，且移除后没有任何剩余的石子，那么 Bob 将会直接获胜（即便是在 Alice 的回合）。</li>\n</ul>\n<p>假设两位玩家均采用&nbsp;<strong>最佳</strong> 决策。如果 Alice 获胜，返回 <code>true</code> ；如果 Bob 获胜，返回 <code>false</code> 。</p>\n<p>&nbsp;</p>\n<p><strong>示例 1：</strong></p>\n<pre>\n<strong>输入：</strong>stones = [2,1]\n<strong>输出：</strong>true\n<strong>解释：</strong>游戏进行如下：\n- 回合 1：Alice 可以移除任意一个石子。\n- 回合 2：Bob 移除剩下的石子。 \n已移除的石子的值总和为 1 + 2 = 3 且可以被 3 整除。因此，Bob 输，Alice 获胜。\n</pre>\n<p><strong>示例 2：</strong></p>\n<pre>\n<strong>输入：</strong>stones = [2]\n<strong>输出：</strong>false\n<strong>解释：</strong>Alice 会移除唯一一个石子，已移除石子的值总和为 2 。 \n由于所有石子都已移除，且值总和无法被 3 整除，Bob 获胜。\n</pre>\n<p><strong>示例 3：</strong></p>\n<pre>\n<strong>输入：</strong>stones = [5,1,2,4,3]\n<strong>输出：</strong>false\n<strong>解释：</strong>Bob 总会获胜。其中一种可能的游戏进行方式如下：\n- 回合 1：Alice 可以移除值为 1 的第 2 个石子。已移除石子值总和为 1 。\n- 回合 2：Bob 可以移除值为 3 的第 5 个石子。已移除石子值总和为 = 1 + 3 = 4 。\n- 回合 3：Alices 可以移除值为 4 的第 4 个石子。已移除石子值总和为 = 1 + 3 + 4 = 8 。\n- 回合 4：Bob 可以移除值为 2 的第 3 个石子。已移除石子值总和为 = 1 + 3 + 4 + 2 = 10.\n- 回合 5：Alice 可以移除值为 5 的第 1 个石子。已移除石子值总和为 = 1 + 3 + 4 + 2 + 5 = 15.\nAlice 输掉游戏，因为已移除石子值总和（15）可以被 3 整除，Bob 获胜。\n</pre>\n<p>&nbsp;</p>\n<p><strong>提示：</strong></p>\n<ul>\n\t<li><code>1 &lt;= stones.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= stones[i] &lt;= 10<sup>4</sup></code></li>\n</ul>\n<div><div>Related Topics</div><div><li>贪心</li><li>数组</li><li>数学</li><li>计数</li><li>博弈</li></div></div>\n<h1>个人解法</h1>\n<div class=\"tabs\" id=\"categories\"><ul class=\"nav-tabs\"><li class=\"tab active\"><button type=\"button\" data-href=\"#categories-1\">Java</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#categories-2\">Python3</button></li></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"categories-1\"><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">class Solution &#123;\n    public boolean stoneGameIX(int[] stones) &#123;\n        int[] counts &#x3D; new int[3];\n        for (int stone : stones) &#123;\n            counts[stone % 3]++;\n        &#125;\n        return counts[0] % 2 &#x3D;&#x3D; 0 ? counts[1] &gt; 0 &amp;&amp; counts[2] &gt; 0 : Math.abs(counts[1] - counts[2]) &gt; 2;\n    &#125;\n&#125;</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"categories-2\"><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">from typing import List\n\n\nclass Solution:\n    def stoneGameIX(self, stones: List[int]) -&gt; bool:\n        counts &#x3D; [0] * 3\n        for stone in stones:\n            counts[stone % 3] +&#x3D; 1\n        if counts[0] % 2 &#x3D;&#x3D; 0:\n            return counts[1] &gt; 0 and counts[2] &gt; 0\n        else:\n            return abs(counts[1] - counts[2]) &gt; 2</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div></div>","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"excerpt":"","more":"<p>2022年01月20日 力扣每日一题</p>\n<h1>题目</h1>\n<p>Alice 和 Bob 再次设计了一款新的石子游戏。现有一行 n 个石子，每个石子都有一个关联的数字表示它的价值。给你一个整数数组 <code>stones</code> ，其中 <code>stones[i]</code> 是第 <code>i</code> 个石子的价值。</p>\n<p>Alice 和 Bob 轮流进行自己的回合，<strong>Alice</strong> 先手。每一回合，玩家需要从 <code>stones</code>&nbsp;中移除任一石子。</p>\n<ul>\n\t<li>如果玩家移除石子后，导致 <strong>所有已移除石子</strong> 的价值&nbsp;<strong>总和</strong> 可以被 3 整除，那么该玩家就 <strong>输掉游戏</strong> 。</li>\n\t<li>如果不满足上一条，且移除后没有任何剩余的石子，那么 Bob 将会直接获胜（即便是在 Alice 的回合）。</li>\n</ul>\n<p>假设两位玩家均采用&nbsp;<strong>最佳</strong> 决策。如果 Alice 获胜，返回 <code>true</code> ；如果 Bob 获胜，返回 <code>false</code> 。</p>\n<p>&nbsp;</p>\n<p><strong>示例 1：</strong></p>\n<pre>\n<strong>输入：</strong>stones = [2,1]\n<strong>输出：</strong>true\n<strong>解释：</strong>游戏进行如下：\n- 回合 1：Alice 可以移除任意一个石子。\n- 回合 2：Bob 移除剩下的石子。 \n已移除的石子的值总和为 1 + 2 = 3 且可以被 3 整除。因此，Bob 输，Alice 获胜。\n</pre>\n<p><strong>示例 2：</strong></p>\n<pre>\n<strong>输入：</strong>stones = [2]\n<strong>输出：</strong>false\n<strong>解释：</strong>Alice 会移除唯一一个石子，已移除石子的值总和为 2 。 \n由于所有石子都已移除，且值总和无法被 3 整除，Bob 获胜。\n</pre>\n<p><strong>示例 3：</strong></p>\n<pre>\n<strong>输入：</strong>stones = [5,1,2,4,3]\n<strong>输出：</strong>false\n<strong>解释：</strong>Bob 总会获胜。其中一种可能的游戏进行方式如下：\n- 回合 1：Alice 可以移除值为 1 的第 2 个石子。已移除石子值总和为 1 。\n- 回合 2：Bob 可以移除值为 3 的第 5 个石子。已移除石子值总和为 = 1 + 3 = 4 。\n- 回合 3：Alices 可以移除值为 4 的第 4 个石子。已移除石子值总和为 = 1 + 3 + 4 = 8 。\n- 回合 4：Bob 可以移除值为 2 的第 3 个石子。已移除石子值总和为 = 1 + 3 + 4 + 2 = 10.\n- 回合 5：Alice 可以移除值为 5 的第 1 个石子。已移除石子值总和为 = 1 + 3 + 4 + 2 + 5 = 15.\nAlice 输掉游戏，因为已移除石子值总和（15）可以被 3 整除，Bob 获胜。\n</pre>\n<p>&nbsp;</p>\n<p><strong>提示：</strong></p>\n<ul>\n\t<li><code>1 &lt;= stones.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= stones[i] &lt;= 10<sup>4</sup></code></li>\n</ul>\n<div><div>Related Topics</div><div><li>贪心</li><li>数组</li><li>数学</li><li>计数</li><li>博弈</li></div></div>\n<h1>个人解法</h1>\n<div class=\"tabs\" id=\"categories\"><ul class=\"nav-tabs\"><li class=\"tab active\"><button type=\"button\" data-href=\"#categories-1\">Java</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#categories-2\">Python3</button></li></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"categories-1\"><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">class Solution &#123;\n    public boolean stoneGameIX(int[] stones) &#123;\n        int[] counts &#x3D; new int[3];\n        for (int stone : stones) &#123;\n            counts[stone % 3]++;\n        &#125;\n        return counts[0] % 2 &#x3D;&#x3D; 0 ? counts[1] &gt; 0 &amp;&amp; counts[2] &gt; 0 : Math.abs(counts[1] - counts[2]) &gt; 2;\n    &#125;\n&#125;</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"categories-2\"><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">from typing import List\n\n\nclass Solution:\n    def stoneGameIX(self, stones: List[int]) -&gt; bool:\n        counts &#x3D; [0] * 3\n        for stone in stones:\n            counts[stone % 3] +&#x3D; 1\n        if counts[0] % 2 &#x3D;&#x3D; 0:\n            return counts[1] &gt; 0 and counts[2] &gt; 0\n        else:\n            return abs(counts[1] - counts[2]) &gt; 2</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div></div>"},{"title":"力扣1345:跳跃游戏 IV","date":"2022-01-21T08:26:26.000Z","cover":"https://blog.huangge1199.cn/post/day20220121/bg.jpeg","_content":"2022年01月21日 力扣每日一题\n\n# 题目\n\n<p>给你一个整数数组&nbsp;<code>arr</code>&nbsp;，你一开始在数组的第一个元素处（下标为 0）。</p>\n\n<p>每一步，你可以从下标&nbsp;<code>i</code>&nbsp;跳到下标：</p>\n\n<ul>\n\t<li><code>i + 1</code>&nbsp;满足：<code>i + 1 &lt; arr.length</code></li>\n\t<li><code>i - 1</code>&nbsp;满足：<code>i - 1 &gt;= 0</code></li>\n\t<li><code>j</code>&nbsp;满足：<code>arr[i] == arr[j]</code>&nbsp;且&nbsp;<code>i != j</code></li>\n</ul>\n\n<p>请你返回到达数组最后一个元素的下标处所需的&nbsp;<strong>最少操作次数</strong>&nbsp;。</p>\n\n<p>注意：任何时候你都不能跳到数组外面。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入：</strong>arr = [100,-23,-23,404,100,23,23,23,3,404]\n<strong>输出：</strong>3\n<strong>解释：</strong>那你需要跳跃 3 次，下标依次为 0 --&gt; 4 --&gt; 3 --&gt; 9 。下标 9 为数组的最后一个元素的下标。\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入：</strong>arr = [7]\n<strong>输出：</strong>0\n<strong>解释：</strong>一开始就在最后一个元素处，所以你不需要跳跃。\n</pre>\n\n<p><strong>示例 3：</strong></p>\n\n<pre><strong>输入：</strong>arr = [7,6,9,6,9,6,9,7]\n<strong>输出：</strong>1\n<strong>解释：</strong>你可以直接从下标 0 处跳到下标 7 处，也就是数组的最后一个元素处。\n</pre>\n\n<p><strong>示例 4：</strong></p>\n\n<pre><strong>输入：</strong>arr = [6,1,9]\n<strong>输出：</strong>2\n</pre>\n\n<p><strong>示例 5：</strong></p>\n\n<pre><strong>输入：</strong>arr = [11,22,7,7,7,7,7,7,7,22,13]\n<strong>输出：</strong>3\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= arr.length &lt;= 5 * 10^4</code></li>\n\t<li><code>-10^8 &lt;= arr[i] &lt;= 10^8</code></li>\n</ul>\n<div><div>Related Topics</div><div><li>广度优先搜索</li><li>数组</li><li>哈希表</li></div></div>\n\n# 个人解法\n\n{% tabs categories%}\n<!-- tab Java -->\n```java\nimport java.util.*;\n\nclass Solution {\n    public int minJumps(int[] arr) {\n        if (arr.length == 1) {\n            return 0;\n        }\n        boolean[] use = new boolean[arr.length];\n        Map<Integer, List<Integer>> map = new HashMap<>();\n        for (int i = 0; i < arr.length; i++) {\n            map.computeIfAbsent(arr[i], k -> new ArrayList<>\n        }\n        use[0] = true;\n        Queue<Integer> queue = new ArrayDeque<>();\n        queue.add(0);\n        int count = 0;\n        while (!queue.isEmpty()) {\n            int size = queue.size();\n            count++;\n            for (int i = 0; i < size; i++) {\n                int index = queue.poll();\n                if (index - 1 >= 0 && !use[index - 1]) {\n                    queue.add(index - 1);\n                    use[index - 1] = true;\n                }\n                if (index + 1 == arr.length - 1) {\n                    return count;\n                }\n                if (index + 1 >= 0 && !use[index + 1]) {\n                    queue.add(index + 1);\n                    use[index + 1] = true;\n                }\n                if (map.containsKey(arr[index])) {\n                    List<Integer> list = map.get(arr[index])\n                    map.remove(arr[index]);\n                    for (int ind : list) {\n                        if (ind == arr.length - 1) {\n                            return count;\n                        }\n                        if (!use[ind]) {\n                            queue.add(ind);\n                            use[ind] = true;\n                        }\n                    }\n                }\n            }\n        }\n        return 0;\n    }\n}\n```\n<!-- endtab -->\n\n<!-- tab Python3 -->\n```python\nfrom collections import defaultdict, deque\nfrom typing import List\n\n\nclass Solution:\n    def minJumps(self, arr: List[int]) -> int:\n        if len(arr) == 1:\n            return 0\n        map = defaultdict(list)\n        for i, a in enumerate(arr):\n            map[a].append(i)\n        use = set()\n        queue = deque()\n        queue.append(0)\n        use.add(0)\n        count = 0\n        while queue:\n            count += 1\n            for i in range(len(queue)):\n                index = queue.popleft()\n                if index - 1 >= 0 and (index - 1) not in use:\n                    use.add(index - 1)\n                    queue.append(index - 1)\n                if index + 1 == len(arr) - 1:\n                    return count\n                if index + 1 < len(arr) and (index + 1) not in use:\n                    use.add(index + 1)\n                    queue.append(index + 1)\n                v = arr[index]\n                for i in map[v]:\n                    if i == len(arr) - 1:\n                        return count\n                    if i not in use:\n                        use.add(i)\n                        queue.append(i)\n                del map[v]\n```\n<!-- endtab -->\n{% endtabs %}","source":"_posts/day20220121.md","raw":"---\ntitle: 力扣1345:跳跃游戏 IV\ndate: 2022-01-21 16:26:26\ntags: [力扣]\ncategories: [算法,力扣,每日一题]\ncover: https://blog.huangge1199.cn/post/day20220121/bg.jpeg\n---\n2022年01月21日 力扣每日一题\n\n# 题目\n\n<p>给你一个整数数组&nbsp;<code>arr</code>&nbsp;，你一开始在数组的第一个元素处（下标为 0）。</p>\n\n<p>每一步，你可以从下标&nbsp;<code>i</code>&nbsp;跳到下标：</p>\n\n<ul>\n\t<li><code>i + 1</code>&nbsp;满足：<code>i + 1 &lt; arr.length</code></li>\n\t<li><code>i - 1</code>&nbsp;满足：<code>i - 1 &gt;= 0</code></li>\n\t<li><code>j</code>&nbsp;满足：<code>arr[i] == arr[j]</code>&nbsp;且&nbsp;<code>i != j</code></li>\n</ul>\n\n<p>请你返回到达数组最后一个元素的下标处所需的&nbsp;<strong>最少操作次数</strong>&nbsp;。</p>\n\n<p>注意：任何时候你都不能跳到数组外面。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入：</strong>arr = [100,-23,-23,404,100,23,23,23,3,404]\n<strong>输出：</strong>3\n<strong>解释：</strong>那你需要跳跃 3 次，下标依次为 0 --&gt; 4 --&gt; 3 --&gt; 9 。下标 9 为数组的最后一个元素的下标。\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入：</strong>arr = [7]\n<strong>输出：</strong>0\n<strong>解释：</strong>一开始就在最后一个元素处，所以你不需要跳跃。\n</pre>\n\n<p><strong>示例 3：</strong></p>\n\n<pre><strong>输入：</strong>arr = [7,6,9,6,9,6,9,7]\n<strong>输出：</strong>1\n<strong>解释：</strong>你可以直接从下标 0 处跳到下标 7 处，也就是数组的最后一个元素处。\n</pre>\n\n<p><strong>示例 4：</strong></p>\n\n<pre><strong>输入：</strong>arr = [6,1,9]\n<strong>输出：</strong>2\n</pre>\n\n<p><strong>示例 5：</strong></p>\n\n<pre><strong>输入：</strong>arr = [11,22,7,7,7,7,7,7,7,22,13]\n<strong>输出：</strong>3\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= arr.length &lt;= 5 * 10^4</code></li>\n\t<li><code>-10^8 &lt;= arr[i] &lt;= 10^8</code></li>\n</ul>\n<div><div>Related Topics</div><div><li>广度优先搜索</li><li>数组</li><li>哈希表</li></div></div>\n\n# 个人解法\n\n{% tabs categories%}\n<!-- tab Java -->\n```java\nimport java.util.*;\n\nclass Solution {\n    public int minJumps(int[] arr) {\n        if (arr.length == 1) {\n            return 0;\n        }\n        boolean[] use = new boolean[arr.length];\n        Map<Integer, List<Integer>> map = new HashMap<>();\n        for (int i = 0; i < arr.length; i++) {\n            map.computeIfAbsent(arr[i], k -> new ArrayList<>\n        }\n        use[0] = true;\n        Queue<Integer> queue = new ArrayDeque<>();\n        queue.add(0);\n        int count = 0;\n        while (!queue.isEmpty()) {\n            int size = queue.size();\n            count++;\n            for (int i = 0; i < size; i++) {\n                int index = queue.poll();\n                if (index - 1 >= 0 && !use[index - 1]) {\n                    queue.add(index - 1);\n                    use[index - 1] = true;\n                }\n                if (index + 1 == arr.length - 1) {\n                    return count;\n                }\n                if (index + 1 >= 0 && !use[index + 1]) {\n                    queue.add(index + 1);\n                    use[index + 1] = true;\n                }\n                if (map.containsKey(arr[index])) {\n                    List<Integer> list = map.get(arr[index])\n                    map.remove(arr[index]);\n                    for (int ind : list) {\n                        if (ind == arr.length - 1) {\n                            return count;\n                        }\n                        if (!use[ind]) {\n                            queue.add(ind);\n                            use[ind] = true;\n                        }\n                    }\n                }\n            }\n        }\n        return 0;\n    }\n}\n```\n<!-- endtab -->\n\n<!-- tab Python3 -->\n```python\nfrom collections import defaultdict, deque\nfrom typing import List\n\n\nclass Solution:\n    def minJumps(self, arr: List[int]) -> int:\n        if len(arr) == 1:\n            return 0\n        map = defaultdict(list)\n        for i, a in enumerate(arr):\n            map[a].append(i)\n        use = set()\n        queue = deque()\n        queue.append(0)\n        use.add(0)\n        count = 0\n        while queue:\n            count += 1\n            for i in range(len(queue)):\n                index = queue.popleft()\n                if index - 1 >= 0 and (index - 1) not in use:\n                    use.add(index - 1)\n                    queue.append(index - 1)\n                if index + 1 == len(arr) - 1:\n                    return count\n                if index + 1 < len(arr) and (index + 1) not in use:\n                    use.add(index + 1)\n                    queue.append(index + 1)\n                v = arr[index]\n                for i in map[v]:\n                    if i == len(arr) - 1:\n                        return count\n                    if i not in use:\n                        use.add(i)\n                        queue.append(i)\n                del map[v]\n```\n<!-- endtab -->\n{% endtabs %}","slug":"day20220121","published":1,"updated":"2022-06-03T06:00:55.561Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl42z5h6200123gn642q02r3u","content":"<p>2022年01月21日 力扣每日一题</p>\n<h1>题目</h1>\n<p>给你一个整数数组&nbsp;<code>arr</code>&nbsp;，你一开始在数组的第一个元素处（下标为 0）。</p>\n<p>每一步，你可以从下标&nbsp;<code>i</code>&nbsp;跳到下标：</p>\n<ul>\n\t<li><code>i + 1</code>&nbsp;满足：<code>i + 1 &lt; arr.length</code></li>\n\t<li><code>i - 1</code>&nbsp;满足：<code>i - 1 &gt;= 0</code></li>\n\t<li><code>j</code>&nbsp;满足：<code>arr[i] == arr[j]</code>&nbsp;且&nbsp;<code>i != j</code></li>\n</ul>\n<p>请你返回到达数组最后一个元素的下标处所需的&nbsp;<strong>最少操作次数</strong>&nbsp;。</p>\n<p>注意：任何时候你都不能跳到数组外面。</p>\n<p>&nbsp;</p>\n<p><strong>示例 1：</strong></p>\n<pre><strong>输入：</strong>arr = [100,-23,-23,404,100,23,23,23,3,404]\n<strong>输出：</strong>3\n<strong>解释：</strong>那你需要跳跃 3 次，下标依次为 0 --&gt; 4 --&gt; 3 --&gt; 9 。下标 9 为数组的最后一个元素的下标。\n</pre>\n<p><strong>示例 2：</strong></p>\n<pre><strong>输入：</strong>arr = [7]\n<strong>输出：</strong>0\n<strong>解释：</strong>一开始就在最后一个元素处，所以你不需要跳跃。\n</pre>\n<p><strong>示例 3：</strong></p>\n<pre><strong>输入：</strong>arr = [7,6,9,6,9,6,9,7]\n<strong>输出：</strong>1\n<strong>解释：</strong>你可以直接从下标 0 处跳到下标 7 处，也就是数组的最后一个元素处。\n</pre>\n<p><strong>示例 4：</strong></p>\n<pre><strong>输入：</strong>arr = [6,1,9]\n<strong>输出：</strong>2\n</pre>\n<p><strong>示例 5：</strong></p>\n<pre><strong>输入：</strong>arr = [11,22,7,7,7,7,7,7,7,22,13]\n<strong>输出：</strong>3\n</pre>\n<p>&nbsp;</p>\n<p><strong>提示：</strong></p>\n<ul>\n\t<li><code>1 &lt;= arr.length &lt;= 5 * 10^4</code></li>\n\t<li><code>-10^8 &lt;= arr[i] &lt;= 10^8</code></li>\n</ul>\n<div><div>Related Topics</div><div><li>广度优先搜索</li><li>数组</li><li>哈希表</li></div></div>\n<h1>个人解法</h1>\n<div class=\"tabs\" id=\"categories\"><ul class=\"nav-tabs\"><li class=\"tab active\"><button type=\"button\" data-href=\"#categories-1\">Java</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#categories-2\">Python3</button></li></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"categories-1\"><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">import java.util.*;\n\nclass Solution &#123;\n    public int minJumps(int[] arr) &#123;\n        if (arr.length &#x3D;&#x3D; 1) &#123;\n            return 0;\n        &#125;\n        boolean[] use &#x3D; new boolean[arr.length];\n        Map&lt;Integer, List&lt;Integer&gt;&gt; map &#x3D; new HashMap&lt;&gt;();\n        for (int i &#x3D; 0; i &lt; arr.length; i++) &#123;\n            map.computeIfAbsent(arr[i], k -&gt; new ArrayList&lt;&gt;\n        &#125;\n        use[0] &#x3D; true;\n        Queue&lt;Integer&gt; queue &#x3D; new ArrayDeque&lt;&gt;();\n        queue.add(0);\n        int count &#x3D; 0;\n        while (!queue.isEmpty()) &#123;\n            int size &#x3D; queue.size();\n            count++;\n            for (int i &#x3D; 0; i &lt; size; i++) &#123;\n                int index &#x3D; queue.poll();\n                if (index - 1 &gt;&#x3D; 0 &amp;&amp; !use[index - 1]) &#123;\n                    queue.add(index - 1);\n                    use[index - 1] &#x3D; true;\n                &#125;\n                if (index + 1 &#x3D;&#x3D; arr.length - 1) &#123;\n                    return count;\n                &#125;\n                if (index + 1 &gt;&#x3D; 0 &amp;&amp; !use[index + 1]) &#123;\n                    queue.add(index + 1);\n                    use[index + 1] &#x3D; true;\n                &#125;\n                if (map.containsKey(arr[index])) &#123;\n                    List&lt;Integer&gt; list &#x3D; map.get(arr[index])\n                    map.remove(arr[index]);\n                    for (int ind : list) &#123;\n                        if (ind &#x3D;&#x3D; arr.length - 1) &#123;\n                            return count;\n                        &#125;\n                        if (!use[ind]) &#123;\n                            queue.add(ind);\n                            use[ind] &#x3D; true;\n                        &#125;\n                    &#125;\n                &#125;\n            &#125;\n        &#125;\n        return 0;\n    &#125;\n&#125;</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"categories-2\"><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">from collections import defaultdict, deque\nfrom typing import List\n\n\nclass Solution:\n    def minJumps(self, arr: List[int]) -&gt; int:\n        if len(arr) &#x3D;&#x3D; 1:\n            return 0\n        map &#x3D; defaultdict(list)\n        for i, a in enumerate(arr):\n            map[a].append(i)\n        use &#x3D; set()\n        queue &#x3D; deque()\n        queue.append(0)\n        use.add(0)\n        count &#x3D; 0\n        while queue:\n            count +&#x3D; 1\n            for i in range(len(queue)):\n                index &#x3D; queue.popleft()\n                if index - 1 &gt;&#x3D; 0 and (index - 1) not in use:\n                    use.add(index - 1)\n                    queue.append(index - 1)\n                if index + 1 &#x3D;&#x3D; len(arr) - 1:\n                    return count\n                if index + 1 &lt; len(arr) and (index + 1) not in use:\n                    use.add(index + 1)\n                    queue.append(index + 1)\n                v &#x3D; arr[index]\n                for i in map[v]:\n                    if i &#x3D;&#x3D; len(arr) - 1:\n                        return count\n                    if i not in use:\n                        use.add(i)\n                        queue.append(i)\n                del map[v]</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div></div>","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"excerpt":"","more":"<p>2022年01月21日 力扣每日一题</p>\n<h1>题目</h1>\n<p>给你一个整数数组&nbsp;<code>arr</code>&nbsp;，你一开始在数组的第一个元素处（下标为 0）。</p>\n<p>每一步，你可以从下标&nbsp;<code>i</code>&nbsp;跳到下标：</p>\n<ul>\n\t<li><code>i + 1</code>&nbsp;满足：<code>i + 1 &lt; arr.length</code></li>\n\t<li><code>i - 1</code>&nbsp;满足：<code>i - 1 &gt;= 0</code></li>\n\t<li><code>j</code>&nbsp;满足：<code>arr[i] == arr[j]</code>&nbsp;且&nbsp;<code>i != j</code></li>\n</ul>\n<p>请你返回到达数组最后一个元素的下标处所需的&nbsp;<strong>最少操作次数</strong>&nbsp;。</p>\n<p>注意：任何时候你都不能跳到数组外面。</p>\n<p>&nbsp;</p>\n<p><strong>示例 1：</strong></p>\n<pre><strong>输入：</strong>arr = [100,-23,-23,404,100,23,23,23,3,404]\n<strong>输出：</strong>3\n<strong>解释：</strong>那你需要跳跃 3 次，下标依次为 0 --&gt; 4 --&gt; 3 --&gt; 9 。下标 9 为数组的最后一个元素的下标。\n</pre>\n<p><strong>示例 2：</strong></p>\n<pre><strong>输入：</strong>arr = [7]\n<strong>输出：</strong>0\n<strong>解释：</strong>一开始就在最后一个元素处，所以你不需要跳跃。\n</pre>\n<p><strong>示例 3：</strong></p>\n<pre><strong>输入：</strong>arr = [7,6,9,6,9,6,9,7]\n<strong>输出：</strong>1\n<strong>解释：</strong>你可以直接从下标 0 处跳到下标 7 处，也就是数组的最后一个元素处。\n</pre>\n<p><strong>示例 4：</strong></p>\n<pre><strong>输入：</strong>arr = [6,1,9]\n<strong>输出：</strong>2\n</pre>\n<p><strong>示例 5：</strong></p>\n<pre><strong>输入：</strong>arr = [11,22,7,7,7,7,7,7,7,22,13]\n<strong>输出：</strong>3\n</pre>\n<p>&nbsp;</p>\n<p><strong>提示：</strong></p>\n<ul>\n\t<li><code>1 &lt;= arr.length &lt;= 5 * 10^4</code></li>\n\t<li><code>-10^8 &lt;= arr[i] &lt;= 10^8</code></li>\n</ul>\n<div><div>Related Topics</div><div><li>广度优先搜索</li><li>数组</li><li>哈希表</li></div></div>\n<h1>个人解法</h1>\n<div class=\"tabs\" id=\"categories\"><ul class=\"nav-tabs\"><li class=\"tab active\"><button type=\"button\" data-href=\"#categories-1\">Java</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#categories-2\">Python3</button></li></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"categories-1\"><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">import java.util.*;\n\nclass Solution &#123;\n    public int minJumps(int[] arr) &#123;\n        if (arr.length &#x3D;&#x3D; 1) &#123;\n            return 0;\n        &#125;\n        boolean[] use &#x3D; new boolean[arr.length];\n        Map&lt;Integer, List&lt;Integer&gt;&gt; map &#x3D; new HashMap&lt;&gt;();\n        for (int i &#x3D; 0; i &lt; arr.length; i++) &#123;\n            map.computeIfAbsent(arr[i], k -&gt; new ArrayList&lt;&gt;\n        &#125;\n        use[0] &#x3D; true;\n        Queue&lt;Integer&gt; queue &#x3D; new ArrayDeque&lt;&gt;();\n        queue.add(0);\n        int count &#x3D; 0;\n        while (!queue.isEmpty()) &#123;\n            int size &#x3D; queue.size();\n            count++;\n            for (int i &#x3D; 0; i &lt; size; i++) &#123;\n                int index &#x3D; queue.poll();\n                if (index - 1 &gt;&#x3D; 0 &amp;&amp; !use[index - 1]) &#123;\n                    queue.add(index - 1);\n                    use[index - 1] &#x3D; true;\n                &#125;\n                if (index + 1 &#x3D;&#x3D; arr.length - 1) &#123;\n                    return count;\n                &#125;\n                if (index + 1 &gt;&#x3D; 0 &amp;&amp; !use[index + 1]) &#123;\n                    queue.add(index + 1);\n                    use[index + 1] &#x3D; true;\n                &#125;\n                if (map.containsKey(arr[index])) &#123;\n                    List&lt;Integer&gt; list &#x3D; map.get(arr[index])\n                    map.remove(arr[index]);\n                    for (int ind : list) &#123;\n                        if (ind &#x3D;&#x3D; arr.length - 1) &#123;\n                            return count;\n                        &#125;\n                        if (!use[ind]) &#123;\n                            queue.add(ind);\n                            use[ind] &#x3D; true;\n                        &#125;\n                    &#125;\n                &#125;\n            &#125;\n        &#125;\n        return 0;\n    &#125;\n&#125;</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"categories-2\"><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">from collections import defaultdict, deque\nfrom typing import List\n\n\nclass Solution:\n    def minJumps(self, arr: List[int]) -&gt; int:\n        if len(arr) &#x3D;&#x3D; 1:\n            return 0\n        map &#x3D; defaultdict(list)\n        for i, a in enumerate(arr):\n            map[a].append(i)\n        use &#x3D; set()\n        queue &#x3D; deque()\n        queue.append(0)\n        use.add(0)\n        count &#x3D; 0\n        while queue:\n            count +&#x3D; 1\n            for i in range(len(queue)):\n                index &#x3D; queue.popleft()\n                if index - 1 &gt;&#x3D; 0 and (index - 1) not in use:\n                    use.add(index - 1)\n                    queue.append(index - 1)\n                if index + 1 &#x3D;&#x3D; len(arr) - 1:\n                    return count\n                if index + 1 &lt; len(arr) and (index + 1) not in use:\n                    use.add(index + 1)\n                    queue.append(index + 1)\n                v &#x3D; arr[index]\n                for i in map[v]:\n                    if i &#x3D;&#x3D; len(arr) - 1:\n                        return count\n                    if i not in use:\n                        use.add(i)\n                        queue.append(i)\n                del map[v]</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div></div>"},{"title":"力扣2045:到达目的地的第二短时间","date":"2022-01-24T07:22:58.000Z","_content":"2022年01月24日 力扣每日一题\n\n# 题目\n\n<p>城市用一个 <strong>双向连通</strong> 图表示，图中有 <code>n</code> 个节点，从 <code>1</code> 到 <code>n</code> 编号（包含 <code>1</code> 和 <code>n</code>）。图中的边用一个二维整数数组 <code>edges</code> 表示，其中每个 <code>edges[i] = [u<sub>i</sub>, v<sub>i</sub>]</code>&nbsp;表示一条节点&nbsp;<code>u<sub>i</sub></code> 和节点&nbsp;<code>v<sub>i</sub></code> 之间的双向连通边。每组节点对由 <strong>最多一条</strong> 边连通，顶点不存在连接到自身的边。穿过任意一条边的时间是 <code>time</code>&nbsp;分钟。</p>\n\n<p>每个节点都有一个交通信号灯，每 <code>change</code> 分钟改变一次，从绿色变成红色，再由红色变成绿色，循环往复。所有信号灯都&nbsp;<strong>同时</strong> 改变。你可以在 <strong>任何时候</strong> 进入某个节点，但是 <strong>只能</strong> 在节点&nbsp;<strong>信号灯是绿色时</strong> 才能离开。如果信号灯是&nbsp; <strong>绿色</strong> ，你 <strong>不能</strong> 在节点等待，必须离开。</p>\n\n<p><strong>第二小的值</strong> 是&nbsp;<strong>严格大于</strong> 最小值的所有值中最小的值。</p>\n\n<ul>\n\t<li>例如，<code>[2, 3, 4]</code> 中第二小的值是 <code>3</code> ，而 <code>[2, 2, 4]</code> 中第二小的值是 <code>4</code> 。</li>\n</ul>\n\n<p>给你 <code>n</code>、<code>edges</code>、<code>time</code> 和 <code>change</code> ，返回从节点 <code>1</code> 到节点 <code>n</code> 需要的 <strong>第二短时间</strong> 。</p>\n\n<p><strong>注意：</strong></p>\n\n<ul>\n\t<li>你可以 <strong>任意次</strong> 穿过任意顶点，<strong>包括</strong> <code>1</code> 和 <code>n</code> 。</li>\n\t<li>你可以假设在 <strong>启程时</strong> ，所有信号灯刚刚变成 <strong>绿色</strong> 。</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/09/29/e1.png\" style=\"width: 200px; height: 250px;\" />        <img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/09/29/e2.png\" style=\"width: 200px; height: 250px;\" /></p>\n\n<pre>\n<strong>输入：</strong>n = 5, edges = [[1,2],[1,3],[1,4],[3,4],[4,5]], time = 3, change = 5\n<strong>输出：</strong>13\n<strong>解释：</strong>\n上面的左图展现了给出的城市交通图。\n右图中的蓝色路径是最短时间路径。\n花费的时间是：\n- 从节点 1 开始，总花费时间=0\n- 1 -&gt; 4：3 分钟，总花费时间=3\n- 4 -&gt; 5：3 分钟，总花费时间=6\n因此需要的最小时间是 6 分钟。\n\n右图中的红色路径是第二短时间路径。\n- 从节点 1 开始，总花费时间=0\n- 1 -&gt; 3：3 分钟，总花费时间=3\n- 3 -&gt; 4：3 分钟，总花费时间=6\n- 在节点 4 等待 4 分钟，总花费时间=10\n- 4 -&gt; 5：3 分钟，总花费时间=13\n因此第二短时间是 13 分钟。      \n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/09/29/eg2.png\" style=\"width: 225px; height: 50px;\" /></p>\n\n<pre>\n<strong>输入：</strong>n = 2, edges = [[1,2]], time = 3, change = 2\n<strong>输出：</strong>11\n<strong>解释：</strong>\n最短时间路径是 1 -&gt; 2 ，总花费时间 = 3 分钟\n最短时间路径是 1 -&gt; 2 -&gt; 1 -&gt; 2 ，总花费时间 = 11 分钟</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= n &lt;= 10<sup>4</sup></code></li>\n\t<li><code>n - 1 &lt;= edges.length &lt;= min(2 * 10<sup>4</sup>, n * (n - 1) / 2)</code></li>\n\t<li><code>edges[i].length == 2</code></li>\n\t<li><code>1 &lt;= u<sub>i</sub>, v<sub>i</sub> &lt;= n</code></li>\n\t<li><code>u<sub>i</sub> != v<sub>i</sub></code></li>\n\t<li>不含重复边</li>\n\t<li>每个节点都可以从其他节点直接或者间接到达</li>\n\t<li><code>1 &lt;= time, change &lt;= 10<sup>3</sup></code></li>\n</ul>\n<div><div>Related Topics</div><div><li>广度优先搜索</li><li>图</li><li>最短路</li></div></div>\n\n# 个人解法\n\n{% tabs categories%}\n<!-- tab Java -->\n```java\nimport java.util.*;\n\nclass Solution {\n    public int secondMinimum(int n, int[][] edges, int time, int change) {\n        // 统计所有节点的联通节点，并将其存入map中留着后面使用\n        Map<Integer, List<Integer>> map = new HashMap<>(n);\n        for (int i = 1; i <= n; i++) {\n            map.put(i, new ArrayList<>());\n        }\n        for (int[] edge : edges) {\n            map.get(edge[0]).add(edge[1]);\n            map.get(edge[1]).add(edge[0]);\n        }\n        Queue<Integer> queue = new LinkedList<>();\n        queue.add(1);\n        // 记录节点到达的次数\n        int[] counts = new int[n + 1];\n        // 记录到达节点的时间\n        int free = 0;\n        while (!queue.isEmpty()) {\n            // 红灯情况下加上需要等待的时间\n            if (free % (2 * change) >= change) {\n                free += change - free % change;\n            }\n            free += time;\n            // 同一时间可以到达的节点数量\n            int size = queue.size();\n            // 同一时间节点是否已经到达\n            boolean[] use = new boolean[n + 1];\n            for (int i = 0; i < size; i++) {\n                // 获取该节点接下来可以到达的节点\n                List<Integer> list = map.get(queue.poll());\n                for (int num : list) {\n                    // 同一时间未到达，并且到达该节点的总次数小于2\n                    if (!use[num] && counts[num] < 2) {\n                        queue.add(num);\n                        use[num] = true;\n                        counts[num]++;\n                    }\n                    // 如果是第二次到达最后一个节点，直接返回需要到达的诗句\n                    if (num == n && counts[num] == 2) {\n                        return free;\n                    }\n                }\n            }\n        }\n        return 0;\n    }\n}\n```\n<!-- endtab -->\n\n<!-- tab Python3 -->\n```python\nfrom collections import deque\nfrom typing import List\n\n\nclass Solution:\n    def secondMinimum(self, n: int, edges: List[List[int]], time: int, change: int) -> int:\n        # 统计所有节点的联通节点，并将其存入map中留着后面使用\n        maps = [[0] for _ in range(n + 1)]\n        for edge in edges:\n            maps[edge[0]].append(edge[1])\n            maps[edge[1]].append(edge[0])\n        queue = deque()\n        queue.append(1)\n        # 记录节点到达的次数\n        counts = [0] * (n + 1)\n        # 记录到达节点的时间\n        free = 0\n        while len(queue):\n            # 红灯情况下加上需要等待的时间\n            if free % (2 * change) >= change:\n                free += change - free % change\n            free += time\n            # 同一时间可以到达的节点数量\n            size = len(queue)\n            # 同一时间节点是否已经到达\n            use = [False] * (n + 1)\n            for i in range(size):\n                for num in maps[queue.popleft()]:\n                    # 同一时间未到达，并且到达该节点的总次数小于2\n                    if use[num] is False and counts[num] < 2:\n                        queue.append(num)\n                        use[num] = True\n                        counts[num] += 1\n\n                    # 如果是第二次到达最后一个节点，直接返回需要到达的诗句\n                    if num == n and counts[num] == 2:\n                        return free\n        return 0\n```\n<!-- endtab -->\n{% endtabs %}","source":"_posts/day20220124.md","raw":"---\ntitle: 力扣2045:到达目的地的第二短时间\ndate: 2022-01-24 15:22:58\ntags: [力扣]\ncategories: [算法,力扣,每日一题]\n---\n2022年01月24日 力扣每日一题\n\n# 题目\n\n<p>城市用一个 <strong>双向连通</strong> 图表示，图中有 <code>n</code> 个节点，从 <code>1</code> 到 <code>n</code> 编号（包含 <code>1</code> 和 <code>n</code>）。图中的边用一个二维整数数组 <code>edges</code> 表示，其中每个 <code>edges[i] = [u<sub>i</sub>, v<sub>i</sub>]</code>&nbsp;表示一条节点&nbsp;<code>u<sub>i</sub></code> 和节点&nbsp;<code>v<sub>i</sub></code> 之间的双向连通边。每组节点对由 <strong>最多一条</strong> 边连通，顶点不存在连接到自身的边。穿过任意一条边的时间是 <code>time</code>&nbsp;分钟。</p>\n\n<p>每个节点都有一个交通信号灯，每 <code>change</code> 分钟改变一次，从绿色变成红色，再由红色变成绿色，循环往复。所有信号灯都&nbsp;<strong>同时</strong> 改变。你可以在 <strong>任何时候</strong> 进入某个节点，但是 <strong>只能</strong> 在节点&nbsp;<strong>信号灯是绿色时</strong> 才能离开。如果信号灯是&nbsp; <strong>绿色</strong> ，你 <strong>不能</strong> 在节点等待，必须离开。</p>\n\n<p><strong>第二小的值</strong> 是&nbsp;<strong>严格大于</strong> 最小值的所有值中最小的值。</p>\n\n<ul>\n\t<li>例如，<code>[2, 3, 4]</code> 中第二小的值是 <code>3</code> ，而 <code>[2, 2, 4]</code> 中第二小的值是 <code>4</code> 。</li>\n</ul>\n\n<p>给你 <code>n</code>、<code>edges</code>、<code>time</code> 和 <code>change</code> ，返回从节点 <code>1</code> 到节点 <code>n</code> 需要的 <strong>第二短时间</strong> 。</p>\n\n<p><strong>注意：</strong></p>\n\n<ul>\n\t<li>你可以 <strong>任意次</strong> 穿过任意顶点，<strong>包括</strong> <code>1</code> 和 <code>n</code> 。</li>\n\t<li>你可以假设在 <strong>启程时</strong> ，所有信号灯刚刚变成 <strong>绿色</strong> 。</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/09/29/e1.png\" style=\"width: 200px; height: 250px;\" />        <img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/09/29/e2.png\" style=\"width: 200px; height: 250px;\" /></p>\n\n<pre>\n<strong>输入：</strong>n = 5, edges = [[1,2],[1,3],[1,4],[3,4],[4,5]], time = 3, change = 5\n<strong>输出：</strong>13\n<strong>解释：</strong>\n上面的左图展现了给出的城市交通图。\n右图中的蓝色路径是最短时间路径。\n花费的时间是：\n- 从节点 1 开始，总花费时间=0\n- 1 -&gt; 4：3 分钟，总花费时间=3\n- 4 -&gt; 5：3 分钟，总花费时间=6\n因此需要的最小时间是 6 分钟。\n\n右图中的红色路径是第二短时间路径。\n- 从节点 1 开始，总花费时间=0\n- 1 -&gt; 3：3 分钟，总花费时间=3\n- 3 -&gt; 4：3 分钟，总花费时间=6\n- 在节点 4 等待 4 分钟，总花费时间=10\n- 4 -&gt; 5：3 分钟，总花费时间=13\n因此第二短时间是 13 分钟。      \n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/09/29/eg2.png\" style=\"width: 225px; height: 50px;\" /></p>\n\n<pre>\n<strong>输入：</strong>n = 2, edges = [[1,2]], time = 3, change = 2\n<strong>输出：</strong>11\n<strong>解释：</strong>\n最短时间路径是 1 -&gt; 2 ，总花费时间 = 3 分钟\n最短时间路径是 1 -&gt; 2 -&gt; 1 -&gt; 2 ，总花费时间 = 11 分钟</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= n &lt;= 10<sup>4</sup></code></li>\n\t<li><code>n - 1 &lt;= edges.length &lt;= min(2 * 10<sup>4</sup>, n * (n - 1) / 2)</code></li>\n\t<li><code>edges[i].length == 2</code></li>\n\t<li><code>1 &lt;= u<sub>i</sub>, v<sub>i</sub> &lt;= n</code></li>\n\t<li><code>u<sub>i</sub> != v<sub>i</sub></code></li>\n\t<li>不含重复边</li>\n\t<li>每个节点都可以从其他节点直接或者间接到达</li>\n\t<li><code>1 &lt;= time, change &lt;= 10<sup>3</sup></code></li>\n</ul>\n<div><div>Related Topics</div><div><li>广度优先搜索</li><li>图</li><li>最短路</li></div></div>\n\n# 个人解法\n\n{% tabs categories%}\n<!-- tab Java -->\n```java\nimport java.util.*;\n\nclass Solution {\n    public int secondMinimum(int n, int[][] edges, int time, int change) {\n        // 统计所有节点的联通节点，并将其存入map中留着后面使用\n        Map<Integer, List<Integer>> map = new HashMap<>(n);\n        for (int i = 1; i <= n; i++) {\n            map.put(i, new ArrayList<>());\n        }\n        for (int[] edge : edges) {\n            map.get(edge[0]).add(edge[1]);\n            map.get(edge[1]).add(edge[0]);\n        }\n        Queue<Integer> queue = new LinkedList<>();\n        queue.add(1);\n        // 记录节点到达的次数\n        int[] counts = new int[n + 1];\n        // 记录到达节点的时间\n        int free = 0;\n        while (!queue.isEmpty()) {\n            // 红灯情况下加上需要等待的时间\n            if (free % (2 * change) >= change) {\n                free += change - free % change;\n            }\n            free += time;\n            // 同一时间可以到达的节点数量\n            int size = queue.size();\n            // 同一时间节点是否已经到达\n            boolean[] use = new boolean[n + 1];\n            for (int i = 0; i < size; i++) {\n                // 获取该节点接下来可以到达的节点\n                List<Integer> list = map.get(queue.poll());\n                for (int num : list) {\n                    // 同一时间未到达，并且到达该节点的总次数小于2\n                    if (!use[num] && counts[num] < 2) {\n                        queue.add(num);\n                        use[num] = true;\n                        counts[num]++;\n                    }\n                    // 如果是第二次到达最后一个节点，直接返回需要到达的诗句\n                    if (num == n && counts[num] == 2) {\n                        return free;\n                    }\n                }\n            }\n        }\n        return 0;\n    }\n}\n```\n<!-- endtab -->\n\n<!-- tab Python3 -->\n```python\nfrom collections import deque\nfrom typing import List\n\n\nclass Solution:\n    def secondMinimum(self, n: int, edges: List[List[int]], time: int, change: int) -> int:\n        # 统计所有节点的联通节点，并将其存入map中留着后面使用\n        maps = [[0] for _ in range(n + 1)]\n        for edge in edges:\n            maps[edge[0]].append(edge[1])\n            maps[edge[1]].append(edge[0])\n        queue = deque()\n        queue.append(1)\n        # 记录节点到达的次数\n        counts = [0] * (n + 1)\n        # 记录到达节点的时间\n        free = 0\n        while len(queue):\n            # 红灯情况下加上需要等待的时间\n            if free % (2 * change) >= change:\n                free += change - free % change\n            free += time\n            # 同一时间可以到达的节点数量\n            size = len(queue)\n            # 同一时间节点是否已经到达\n            use = [False] * (n + 1)\n            for i in range(size):\n                for num in maps[queue.popleft()]:\n                    # 同一时间未到达，并且到达该节点的总次数小于2\n                    if use[num] is False and counts[num] < 2:\n                        queue.append(num)\n                        use[num] = True\n                        counts[num] += 1\n\n                    # 如果是第二次到达最后一个节点，直接返回需要到达的诗句\n                    if num == n and counts[num] == 2:\n                        return free\n        return 0\n```\n<!-- endtab -->\n{% endtabs %}","slug":"day20220124","published":1,"updated":"2022-06-03T06:00:55.561Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl42z5h6400153gn66s5t0zpt","content":"<p>2022年01月24日 力扣每日一题</p>\n<h1>题目</h1>\n<p>城市用一个 <strong>双向连通</strong> 图表示，图中有 <code>n</code> 个节点，从 <code>1</code> 到 <code>n</code> 编号（包含 <code>1</code> 和 <code>n</code>）。图中的边用一个二维整数数组 <code>edges</code> 表示，其中每个 <code>edges[i] = [u<sub>i</sub>, v<sub>i</sub>]</code>&nbsp;表示一条节点&nbsp;<code>u<sub>i</sub></code> 和节点&nbsp;<code>v<sub>i</sub></code> 之间的双向连通边。每组节点对由 <strong>最多一条</strong> 边连通，顶点不存在连接到自身的边。穿过任意一条边的时间是 <code>time</code>&nbsp;分钟。</p>\n<p>每个节点都有一个交通信号灯，每 <code>change</code> 分钟改变一次，从绿色变成红色，再由红色变成绿色，循环往复。所有信号灯都&nbsp;<strong>同时</strong> 改变。你可以在 <strong>任何时候</strong> 进入某个节点，但是 <strong>只能</strong> 在节点&nbsp;<strong>信号灯是绿色时</strong> 才能离开。如果信号灯是&nbsp; <strong>绿色</strong> ，你 <strong>不能</strong> 在节点等待，必须离开。</p>\n<p><strong>第二小的值</strong> 是&nbsp;<strong>严格大于</strong> 最小值的所有值中最小的值。</p>\n<ul>\n\t<li>例如，<code>[2, 3, 4]</code> 中第二小的值是 <code>3</code> ，而 <code>[2, 2, 4]</code> 中第二小的值是 <code>4</code> 。</li>\n</ul>\n<p>给你 <code>n</code>、<code>edges</code>、<code>time</code> 和 <code>change</code> ，返回从节点 <code>1</code> 到节点 <code>n</code> 需要的 <strong>第二短时间</strong> 。</p>\n<p><strong>注意：</strong></p>\n<ul>\n\t<li>你可以 <strong>任意次</strong> 穿过任意顶点，<strong>包括</strong> <code>1</code> 和 <code>n</code> 。</li>\n\t<li>你可以假设在 <strong>启程时</strong> ，所有信号灯刚刚变成 <strong>绿色</strong> 。</li>\n</ul>\n<p>&nbsp;</p>\n<p><strong>示例 1：</strong></p>\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/09/29/e1.png\" style=\"width: 200px; height: 250px;\" />        <img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/09/29/e2.png\" style=\"width: 200px; height: 250px;\" /></p>\n<pre>\n<strong>输入：</strong>n = 5, edges = [[1,2],[1,3],[1,4],[3,4],[4,5]], time = 3, change = 5\n<strong>输出：</strong>13\n<strong>解释：</strong>\n上面的左图展现了给出的城市交通图。\n右图中的蓝色路径是最短时间路径。\n花费的时间是：\n- 从节点 1 开始，总花费时间=0\n- 1 -&gt; 4：3 分钟，总花费时间=3\n- 4 -&gt; 5：3 分钟，总花费时间=6\n因此需要的最小时间是 6 分钟。\n\n右图中的红色路径是第二短时间路径。\n- 从节点 1 开始，总花费时间=0\n- 1 -&gt; 3：3 分钟，总花费时间=3\n- 3 -&gt; 4：3 分钟，总花费时间=6\n- 在节点 4 等待 4 分钟，总花费时间=10\n- 4 -&gt; 5：3 分钟，总花费时间=13\n因此第二短时间是 13 分钟。      \n</pre>\n<p><strong>示例 2：</strong></p>\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/09/29/eg2.png\" style=\"width: 225px; height: 50px;\" /></p>\n<pre>\n<strong>输入：</strong>n = 2, edges = [[1,2]], time = 3, change = 2\n<strong>输出：</strong>11\n<strong>解释：</strong>\n最短时间路径是 1 -&gt; 2 ，总花费时间 = 3 分钟\n最短时间路径是 1 -&gt; 2 -&gt; 1 -&gt; 2 ，总花费时间 = 11 分钟</pre>\n<p>&nbsp;</p>\n<p><strong>提示：</strong></p>\n<ul>\n\t<li><code>2 &lt;= n &lt;= 10<sup>4</sup></code></li>\n\t<li><code>n - 1 &lt;= edges.length &lt;= min(2 * 10<sup>4</sup>, n * (n - 1) / 2)</code></li>\n\t<li><code>edges[i].length == 2</code></li>\n\t<li><code>1 &lt;= u<sub>i</sub>, v<sub>i</sub> &lt;= n</code></li>\n\t<li><code>u<sub>i</sub> != v<sub>i</sub></code></li>\n\t<li>不含重复边</li>\n\t<li>每个节点都可以从其他节点直接或者间接到达</li>\n\t<li><code>1 &lt;= time, change &lt;= 10<sup>3</sup></code></li>\n</ul>\n<div><div>Related Topics</div><div><li>广度优先搜索</li><li>图</li><li>最短路</li></div></div>\n<h1>个人解法</h1>\n<div class=\"tabs\" id=\"categories\"><ul class=\"nav-tabs\"><li class=\"tab active\"><button type=\"button\" data-href=\"#categories-1\">Java</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#categories-2\">Python3</button></li></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"categories-1\"><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">import java.util.*;\n\nclass Solution &#123;\n    public int secondMinimum(int n, int[][] edges, int time, int change) &#123;\n        &#x2F;&#x2F; 统计所有节点的联通节点，并将其存入map中留着后面使用\n        Map&lt;Integer, List&lt;Integer&gt;&gt; map &#x3D; new HashMap&lt;&gt;(n);\n        for (int i &#x3D; 1; i &lt;&#x3D; n; i++) &#123;\n            map.put(i, new ArrayList&lt;&gt;());\n        &#125;\n        for (int[] edge : edges) &#123;\n            map.get(edge[0]).add(edge[1]);\n            map.get(edge[1]).add(edge[0]);\n        &#125;\n        Queue&lt;Integer&gt; queue &#x3D; new LinkedList&lt;&gt;();\n        queue.add(1);\n        &#x2F;&#x2F; 记录节点到达的次数\n        int[] counts &#x3D; new int[n + 1];\n        &#x2F;&#x2F; 记录到达节点的时间\n        int free &#x3D; 0;\n        while (!queue.isEmpty()) &#123;\n            &#x2F;&#x2F; 红灯情况下加上需要等待的时间\n            if (free % (2 * change) &gt;&#x3D; change) &#123;\n                free +&#x3D; change - free % change;\n            &#125;\n            free +&#x3D; time;\n            &#x2F;&#x2F; 同一时间可以到达的节点数量\n            int size &#x3D; queue.size();\n            &#x2F;&#x2F; 同一时间节点是否已经到达\n            boolean[] use &#x3D; new boolean[n + 1];\n            for (int i &#x3D; 0; i &lt; size; i++) &#123;\n                &#x2F;&#x2F; 获取该节点接下来可以到达的节点\n                List&lt;Integer&gt; list &#x3D; map.get(queue.poll());\n                for (int num : list) &#123;\n                    &#x2F;&#x2F; 同一时间未到达，并且到达该节点的总次数小于2\n                    if (!use[num] &amp;&amp; counts[num] &lt; 2) &#123;\n                        queue.add(num);\n                        use[num] &#x3D; true;\n                        counts[num]++;\n                    &#125;\n                    &#x2F;&#x2F; 如果是第二次到达最后一个节点，直接返回需要到达的诗句\n                    if (num &#x3D;&#x3D; n &amp;&amp; counts[num] &#x3D;&#x3D; 2) &#123;\n                        return free;\n                    &#125;\n                &#125;\n            &#125;\n        &#125;\n        return 0;\n    &#125;\n&#125;</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"categories-2\"><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">from collections import deque\nfrom typing import List\n\n\nclass Solution:\n    def secondMinimum(self, n: int, edges: List[List[int]], time: int, change: int) -&gt; int:\n        # 统计所有节点的联通节点，并将其存入map中留着后面使用\n        maps &#x3D; [[0] for _ in range(n + 1)]\n        for edge in edges:\n            maps[edge[0]].append(edge[1])\n            maps[edge[1]].append(edge[0])\n        queue &#x3D; deque()\n        queue.append(1)\n        # 记录节点到达的次数\n        counts &#x3D; [0] * (n + 1)\n        # 记录到达节点的时间\n        free &#x3D; 0\n        while len(queue):\n            # 红灯情况下加上需要等待的时间\n            if free % (2 * change) &gt;&#x3D; change:\n                free +&#x3D; change - free % change\n            free +&#x3D; time\n            # 同一时间可以到达的节点数量\n            size &#x3D; len(queue)\n            # 同一时间节点是否已经到达\n            use &#x3D; [False] * (n + 1)\n            for i in range(size):\n                for num in maps[queue.popleft()]:\n                    # 同一时间未到达，并且到达该节点的总次数小于2\n                    if use[num] is False and counts[num] &lt; 2:\n                        queue.append(num)\n                        use[num] &#x3D; True\n                        counts[num] +&#x3D; 1\n\n                    # 如果是第二次到达最后一个节点，直接返回需要到达的诗句\n                    if num &#x3D;&#x3D; n and counts[num] &#x3D;&#x3D; 2:\n                        return free\n        return 0</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div></div>","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"cover":"https://blog.huangge1199.cn/post/pyListSort/bg.jpeg","excerpt":"","more":"<p>2022年01月24日 力扣每日一题</p>\n<h1>题目</h1>\n<p>城市用一个 <strong>双向连通</strong> 图表示，图中有 <code>n</code> 个节点，从 <code>1</code> 到 <code>n</code> 编号（包含 <code>1</code> 和 <code>n</code>）。图中的边用一个二维整数数组 <code>edges</code> 表示，其中每个 <code>edges[i] = [u<sub>i</sub>, v<sub>i</sub>]</code>&nbsp;表示一条节点&nbsp;<code>u<sub>i</sub></code> 和节点&nbsp;<code>v<sub>i</sub></code> 之间的双向连通边。每组节点对由 <strong>最多一条</strong> 边连通，顶点不存在连接到自身的边。穿过任意一条边的时间是 <code>time</code>&nbsp;分钟。</p>\n<p>每个节点都有一个交通信号灯，每 <code>change</code> 分钟改变一次，从绿色变成红色，再由红色变成绿色，循环往复。所有信号灯都&nbsp;<strong>同时</strong> 改变。你可以在 <strong>任何时候</strong> 进入某个节点，但是 <strong>只能</strong> 在节点&nbsp;<strong>信号灯是绿色时</strong> 才能离开。如果信号灯是&nbsp; <strong>绿色</strong> ，你 <strong>不能</strong> 在节点等待，必须离开。</p>\n<p><strong>第二小的值</strong> 是&nbsp;<strong>严格大于</strong> 最小值的所有值中最小的值。</p>\n<ul>\n\t<li>例如，<code>[2, 3, 4]</code> 中第二小的值是 <code>3</code> ，而 <code>[2, 2, 4]</code> 中第二小的值是 <code>4</code> 。</li>\n</ul>\n<p>给你 <code>n</code>、<code>edges</code>、<code>time</code> 和 <code>change</code> ，返回从节点 <code>1</code> 到节点 <code>n</code> 需要的 <strong>第二短时间</strong> 。</p>\n<p><strong>注意：</strong></p>\n<ul>\n\t<li>你可以 <strong>任意次</strong> 穿过任意顶点，<strong>包括</strong> <code>1</code> 和 <code>n</code> 。</li>\n\t<li>你可以假设在 <strong>启程时</strong> ，所有信号灯刚刚变成 <strong>绿色</strong> 。</li>\n</ul>\n<p>&nbsp;</p>\n<p><strong>示例 1：</strong></p>\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/09/29/e1.png\" style=\"width: 200px; height: 250px;\" />        <img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/09/29/e2.png\" style=\"width: 200px; height: 250px;\" /></p>\n<pre>\n<strong>输入：</strong>n = 5, edges = [[1,2],[1,3],[1,4],[3,4],[4,5]], time = 3, change = 5\n<strong>输出：</strong>13\n<strong>解释：</strong>\n上面的左图展现了给出的城市交通图。\n右图中的蓝色路径是最短时间路径。\n花费的时间是：\n- 从节点 1 开始，总花费时间=0\n- 1 -&gt; 4：3 分钟，总花费时间=3\n- 4 -&gt; 5：3 分钟，总花费时间=6\n因此需要的最小时间是 6 分钟。\n\n右图中的红色路径是第二短时间路径。\n- 从节点 1 开始，总花费时间=0\n- 1 -&gt; 3：3 分钟，总花费时间=3\n- 3 -&gt; 4：3 分钟，总花费时间=6\n- 在节点 4 等待 4 分钟，总花费时间=10\n- 4 -&gt; 5：3 分钟，总花费时间=13\n因此第二短时间是 13 分钟。      \n</pre>\n<p><strong>示例 2：</strong></p>\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/09/29/eg2.png\" style=\"width: 225px; height: 50px;\" /></p>\n<pre>\n<strong>输入：</strong>n = 2, edges = [[1,2]], time = 3, change = 2\n<strong>输出：</strong>11\n<strong>解释：</strong>\n最短时间路径是 1 -&gt; 2 ，总花费时间 = 3 分钟\n最短时间路径是 1 -&gt; 2 -&gt; 1 -&gt; 2 ，总花费时间 = 11 分钟</pre>\n<p>&nbsp;</p>\n<p><strong>提示：</strong></p>\n<ul>\n\t<li><code>2 &lt;= n &lt;= 10<sup>4</sup></code></li>\n\t<li><code>n - 1 &lt;= edges.length &lt;= min(2 * 10<sup>4</sup>, n * (n - 1) / 2)</code></li>\n\t<li><code>edges[i].length == 2</code></li>\n\t<li><code>1 &lt;= u<sub>i</sub>, v<sub>i</sub> &lt;= n</code></li>\n\t<li><code>u<sub>i</sub> != v<sub>i</sub></code></li>\n\t<li>不含重复边</li>\n\t<li>每个节点都可以从其他节点直接或者间接到达</li>\n\t<li><code>1 &lt;= time, change &lt;= 10<sup>3</sup></code></li>\n</ul>\n<div><div>Related Topics</div><div><li>广度优先搜索</li><li>图</li><li>最短路</li></div></div>\n<h1>个人解法</h1>\n<div class=\"tabs\" id=\"categories\"><ul class=\"nav-tabs\"><li class=\"tab active\"><button type=\"button\" data-href=\"#categories-1\">Java</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#categories-2\">Python3</button></li></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"categories-1\"><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">import java.util.*;\n\nclass Solution &#123;\n    public int secondMinimum(int n, int[][] edges, int time, int change) &#123;\n        &#x2F;&#x2F; 统计所有节点的联通节点，并将其存入map中留着后面使用\n        Map&lt;Integer, List&lt;Integer&gt;&gt; map &#x3D; new HashMap&lt;&gt;(n);\n        for (int i &#x3D; 1; i &lt;&#x3D; n; i++) &#123;\n            map.put(i, new ArrayList&lt;&gt;());\n        &#125;\n        for (int[] edge : edges) &#123;\n            map.get(edge[0]).add(edge[1]);\n            map.get(edge[1]).add(edge[0]);\n        &#125;\n        Queue&lt;Integer&gt; queue &#x3D; new LinkedList&lt;&gt;();\n        queue.add(1);\n        &#x2F;&#x2F; 记录节点到达的次数\n        int[] counts &#x3D; new int[n + 1];\n        &#x2F;&#x2F; 记录到达节点的时间\n        int free &#x3D; 0;\n        while (!queue.isEmpty()) &#123;\n            &#x2F;&#x2F; 红灯情况下加上需要等待的时间\n            if (free % (2 * change) &gt;&#x3D; change) &#123;\n                free +&#x3D; change - free % change;\n            &#125;\n            free +&#x3D; time;\n            &#x2F;&#x2F; 同一时间可以到达的节点数量\n            int size &#x3D; queue.size();\n            &#x2F;&#x2F; 同一时间节点是否已经到达\n            boolean[] use &#x3D; new boolean[n + 1];\n            for (int i &#x3D; 0; i &lt; size; i++) &#123;\n                &#x2F;&#x2F; 获取该节点接下来可以到达的节点\n                List&lt;Integer&gt; list &#x3D; map.get(queue.poll());\n                for (int num : list) &#123;\n                    &#x2F;&#x2F; 同一时间未到达，并且到达该节点的总次数小于2\n                    if (!use[num] &amp;&amp; counts[num] &lt; 2) &#123;\n                        queue.add(num);\n                        use[num] &#x3D; true;\n                        counts[num]++;\n                    &#125;\n                    &#x2F;&#x2F; 如果是第二次到达最后一个节点，直接返回需要到达的诗句\n                    if (num &#x3D;&#x3D; n &amp;&amp; counts[num] &#x3D;&#x3D; 2) &#123;\n                        return free;\n                    &#125;\n                &#125;\n            &#125;\n        &#125;\n        return 0;\n    &#125;\n&#125;</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"categories-2\"><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">from collections import deque\nfrom typing import List\n\n\nclass Solution:\n    def secondMinimum(self, n: int, edges: List[List[int]], time: int, change: int) -&gt; int:\n        # 统计所有节点的联通节点，并将其存入map中留着后面使用\n        maps &#x3D; [[0] for _ in range(n + 1)]\n        for edge in edges:\n            maps[edge[0]].append(edge[1])\n            maps[edge[1]].append(edge[0])\n        queue &#x3D; deque()\n        queue.append(1)\n        # 记录节点到达的次数\n        counts &#x3D; [0] * (n + 1)\n        # 记录到达节点的时间\n        free &#x3D; 0\n        while len(queue):\n            # 红灯情况下加上需要等待的时间\n            if free % (2 * change) &gt;&#x3D; change:\n                free +&#x3D; change - free % change\n            free +&#x3D; time\n            # 同一时间可以到达的节点数量\n            size &#x3D; len(queue)\n            # 同一时间节点是否已经到达\n            use &#x3D; [False] * (n + 1)\n            for i in range(size):\n                for num in maps[queue.popleft()]:\n                    # 同一时间未到达，并且到达该节点的总次数小于2\n                    if use[num] is False and counts[num] &lt; 2:\n                        queue.append(num)\n                        use[num] &#x3D; True\n                        counts[num] +&#x3D; 1\n\n                    # 如果是第二次到达最后一个节点，直接返回需要到达的诗句\n                    if num &#x3D;&#x3D; n and counts[num] &#x3D;&#x3D; 2:\n                        return free\n        return 0</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div></div>"},{"title":"力扣1688:比赛中的配对次数","date":"2022-01-25T05:57:48.000Z","_content":"2022年01月25日 力扣每日一题\n\n# 题目\n\n<p>给你一个整数 <code>n</code> ，表示比赛中的队伍数。比赛遵循一种独特的赛制：</p>\n\n<ul>\n\t<li>如果当前队伍数是 <strong>偶数</strong> ，那么每支队伍都会与另一支队伍配对。总共进行 <code>n / 2</code> 场比赛，且产生 <code>n / 2</code> 支队伍进入下一轮。</li>\n\t<li>如果当前队伍数为 <strong>奇数</strong> ，那么将会随机轮空并晋级一支队伍，其余的队伍配对。总共进行 <code>(n - 1) / 2</code> 场比赛，且产生 <code>(n - 1) / 2 + 1</code> 支队伍进入下一轮。</li>\n</ul>\n\n<p>返回在比赛中进行的配对次数，直到决出获胜队伍为止。</p>\n\n<p> </p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入：</strong>n = 7\n<strong>输出：</strong>6\n<strong>解释：</strong>比赛详情：\n- 第 1 轮：队伍数 = 7 ，配对次数 = 3 ，4 支队伍晋级。\n- 第 2 轮：队伍数 = 4 ，配对次数 = 2 ，2 支队伍晋级。\n- 第 3 轮：队伍数 = 2 ，配对次数 = 1 ，决出 1 支获胜队伍。\n总配对次数 = 3 + 2 + 1 = 6\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入：</strong>n = 14\n<strong>输出：</strong>13\n<strong>解释：</strong>比赛详情：\n- 第 1 轮：队伍数 = 14 ，配对次数 = 7 ，7 支队伍晋级。\n- 第 2 轮：队伍数 = 7 ，配对次数 = 3 ，4 支队伍晋级。 \n- 第 3 轮：队伍数 = 4 ，配对次数 = 2 ，2 支队伍晋级。\n- 第 4 轮：队伍数 = 2 ，配对次数 = 1 ，决出 1 支获胜队伍。\n总配对次数 = 7 + 3 + 2 + 1 = 13\n</pre>\n\n<p> </p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 200</code></li>\n</ul>\n<div><div>Related Topics</div><div><li>数学</li><li>模拟</li></div></div>\n\n# 个人解法\n\n{% tabs categories%}\n<!-- tab Java -->\n```java\nclass Solution {\n    public int numberOfMatches(int n) {\n        // 总配对次数\n        int sum = 0;\n        while (n > 1) {\n            if (n % 2 == 1) {\n                // 奇数队伍\n                // 配对次数：(n - 1) / 2\n                sum += (n - 1) / 2;\n                // 剩余队伍数：(n - 1) / 2 + 1\n                n = (n - 1) / 2 + 1;\n            } else {\n                // 偶数队伍\n                // 配对次数：n / 2\n                sum += n / 2;\n                // 剩余队伍数：n / 2\n                n /= 2;\n            }\n        }\n        return sum;\n    }\n}\n```\n<!-- endtab -->\n\n<!-- tab Python3 -->\n```python\nclass Solution:\n    def numberOfMatches(self, n: int) -> int:\n        # 总配对次数\n        sums = 0\n        while n > 1:\n            if n % 2 == 1:\n                # 奇数队伍\n                # 配对次数：(n - 1) / 2\n                sums += (n - 1) / 2\n                # 剩余队伍数：(n - 1) / 2 + 1\n                n = (n - 1) / 2 + 1\n            else:\n                # 偶数队伍\n                # 配对次数：n / 2\n                sums += n / 2\n                # 剩余队伍数：n / 2\n                n /= 2\n        return int(sums)\n```\n<!-- endtab -->\n{% endtabs %}","source":"_posts/day20220125.md","raw":"---\ntitle: 力扣1688:比赛中的配对次数\ndate: 2022-01-25 13:57:48\ntags: [力扣]\ncategories: [算法,力扣,每日一题]\n---\n2022年01月25日 力扣每日一题\n\n# 题目\n\n<p>给你一个整数 <code>n</code> ，表示比赛中的队伍数。比赛遵循一种独特的赛制：</p>\n\n<ul>\n\t<li>如果当前队伍数是 <strong>偶数</strong> ，那么每支队伍都会与另一支队伍配对。总共进行 <code>n / 2</code> 场比赛，且产生 <code>n / 2</code> 支队伍进入下一轮。</li>\n\t<li>如果当前队伍数为 <strong>奇数</strong> ，那么将会随机轮空并晋级一支队伍，其余的队伍配对。总共进行 <code>(n - 1) / 2</code> 场比赛，且产生 <code>(n - 1) / 2 + 1</code> 支队伍进入下一轮。</li>\n</ul>\n\n<p>返回在比赛中进行的配对次数，直到决出获胜队伍为止。</p>\n\n<p> </p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入：</strong>n = 7\n<strong>输出：</strong>6\n<strong>解释：</strong>比赛详情：\n- 第 1 轮：队伍数 = 7 ，配对次数 = 3 ，4 支队伍晋级。\n- 第 2 轮：队伍数 = 4 ，配对次数 = 2 ，2 支队伍晋级。\n- 第 3 轮：队伍数 = 2 ，配对次数 = 1 ，决出 1 支获胜队伍。\n总配对次数 = 3 + 2 + 1 = 6\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入：</strong>n = 14\n<strong>输出：</strong>13\n<strong>解释：</strong>比赛详情：\n- 第 1 轮：队伍数 = 14 ，配对次数 = 7 ，7 支队伍晋级。\n- 第 2 轮：队伍数 = 7 ，配对次数 = 3 ，4 支队伍晋级。 \n- 第 3 轮：队伍数 = 4 ，配对次数 = 2 ，2 支队伍晋级。\n- 第 4 轮：队伍数 = 2 ，配对次数 = 1 ，决出 1 支获胜队伍。\n总配对次数 = 7 + 3 + 2 + 1 = 13\n</pre>\n\n<p> </p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 200</code></li>\n</ul>\n<div><div>Related Topics</div><div><li>数学</li><li>模拟</li></div></div>\n\n# 个人解法\n\n{% tabs categories%}\n<!-- tab Java -->\n```java\nclass Solution {\n    public int numberOfMatches(int n) {\n        // 总配对次数\n        int sum = 0;\n        while (n > 1) {\n            if (n % 2 == 1) {\n                // 奇数队伍\n                // 配对次数：(n - 1) / 2\n                sum += (n - 1) / 2;\n                // 剩余队伍数：(n - 1) / 2 + 1\n                n = (n - 1) / 2 + 1;\n            } else {\n                // 偶数队伍\n                // 配对次数：n / 2\n                sum += n / 2;\n                // 剩余队伍数：n / 2\n                n /= 2;\n            }\n        }\n        return sum;\n    }\n}\n```\n<!-- endtab -->\n\n<!-- tab Python3 -->\n```python\nclass Solution:\n    def numberOfMatches(self, n: int) -> int:\n        # 总配对次数\n        sums = 0\n        while n > 1:\n            if n % 2 == 1:\n                # 奇数队伍\n                # 配对次数：(n - 1) / 2\n                sums += (n - 1) / 2\n                # 剩余队伍数：(n - 1) / 2 + 1\n                n = (n - 1) / 2 + 1\n            else:\n                # 偶数队伍\n                # 配对次数：n / 2\n                sums += n / 2\n                # 剩余队伍数：n / 2\n                n /= 2\n        return int(sums)\n```\n<!-- endtab -->\n{% endtabs %}","slug":"day20220125","published":1,"updated":"2022-06-03T06:00:55.561Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl42z5h65001a3gn6asb3ekoz","content":"<p>2022年01月25日 力扣每日一题</p>\n<h1>题目</h1>\n<p>给你一个整数 <code>n</code> ，表示比赛中的队伍数。比赛遵循一种独特的赛制：</p>\n<ul>\n\t<li>如果当前队伍数是 <strong>偶数</strong> ，那么每支队伍都会与另一支队伍配对。总共进行 <code>n / 2</code> 场比赛，且产生 <code>n / 2</code> 支队伍进入下一轮。</li>\n\t<li>如果当前队伍数为 <strong>奇数</strong> ，那么将会随机轮空并晋级一支队伍，其余的队伍配对。总共进行 <code>(n - 1) / 2</code> 场比赛，且产生 <code>(n - 1) / 2 + 1</code> 支队伍进入下一轮。</li>\n</ul>\n<p>返回在比赛中进行的配对次数，直到决出获胜队伍为止。</p>\n<p> </p>\n<p><strong>示例 1：</strong></p>\n<pre><strong>输入：</strong>n = 7\n<strong>输出：</strong>6\n<strong>解释：</strong>比赛详情：\n- 第 1 轮：队伍数 = 7 ，配对次数 = 3 ，4 支队伍晋级。\n- 第 2 轮：队伍数 = 4 ，配对次数 = 2 ，2 支队伍晋级。\n- 第 3 轮：队伍数 = 2 ，配对次数 = 1 ，决出 1 支获胜队伍。\n总配对次数 = 3 + 2 + 1 = 6\n</pre>\n<p><strong>示例 2：</strong></p>\n<pre><strong>输入：</strong>n = 14\n<strong>输出：</strong>13\n<strong>解释：</strong>比赛详情：\n- 第 1 轮：队伍数 = 14 ，配对次数 = 7 ，7 支队伍晋级。\n- 第 2 轮：队伍数 = 7 ，配对次数 = 3 ，4 支队伍晋级。 \n- 第 3 轮：队伍数 = 4 ，配对次数 = 2 ，2 支队伍晋级。\n- 第 4 轮：队伍数 = 2 ，配对次数 = 1 ，决出 1 支获胜队伍。\n总配对次数 = 7 + 3 + 2 + 1 = 13\n</pre>\n<p> </p>\n<p><strong>提示：</strong></p>\n<ul>\n\t<li><code>1 &lt;= n &lt;= 200</code></li>\n</ul>\n<div><div>Related Topics</div><div><li>数学</li><li>模拟</li></div></div>\n<h1>个人解法</h1>\n<div class=\"tabs\" id=\"categories\"><ul class=\"nav-tabs\"><li class=\"tab active\"><button type=\"button\" data-href=\"#categories-1\">Java</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#categories-2\">Python3</button></li></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"categories-1\"><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">class Solution &#123;\n    public int numberOfMatches(int n) &#123;\n        &#x2F;&#x2F; 总配对次数\n        int sum &#x3D; 0;\n        while (n &gt; 1) &#123;\n            if (n % 2 &#x3D;&#x3D; 1) &#123;\n                &#x2F;&#x2F; 奇数队伍\n                &#x2F;&#x2F; 配对次数：(n - 1) &#x2F; 2\n                sum +&#x3D; (n - 1) &#x2F; 2;\n                &#x2F;&#x2F; 剩余队伍数：(n - 1) &#x2F; 2 + 1\n                n &#x3D; (n - 1) &#x2F; 2 + 1;\n            &#125; else &#123;\n                &#x2F;&#x2F; 偶数队伍\n                &#x2F;&#x2F; 配对次数：n &#x2F; 2\n                sum +&#x3D; n &#x2F; 2;\n                &#x2F;&#x2F; 剩余队伍数：n &#x2F; 2\n                n &#x2F;&#x3D; 2;\n            &#125;\n        &#125;\n        return sum;\n    &#125;\n&#125;</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"categories-2\"><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">class Solution:\n    def numberOfMatches(self, n: int) -&gt; int:\n        # 总配对次数\n        sums &#x3D; 0\n        while n &gt; 1:\n            if n % 2 &#x3D;&#x3D; 1:\n                # 奇数队伍\n                # 配对次数：(n - 1) &#x2F; 2\n                sums +&#x3D; (n - 1) &#x2F; 2\n                # 剩余队伍数：(n - 1) &#x2F; 2 + 1\n                n &#x3D; (n - 1) &#x2F; 2 + 1\n            else:\n                # 偶数队伍\n                # 配对次数：n &#x2F; 2\n                sums +&#x3D; n &#x2F; 2\n                # 剩余队伍数：n &#x2F; 2\n                n &#x2F;&#x3D; 2\n        return int(sums)</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div></div>","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"cover":"https://blog.huangge1199.cn/post/nexusCreate/bg.jpeg","excerpt":"","more":"<p>2022年01月25日 力扣每日一题</p>\n<h1>题目</h1>\n<p>给你一个整数 <code>n</code> ，表示比赛中的队伍数。比赛遵循一种独特的赛制：</p>\n<ul>\n\t<li>如果当前队伍数是 <strong>偶数</strong> ，那么每支队伍都会与另一支队伍配对。总共进行 <code>n / 2</code> 场比赛，且产生 <code>n / 2</code> 支队伍进入下一轮。</li>\n\t<li>如果当前队伍数为 <strong>奇数</strong> ，那么将会随机轮空并晋级一支队伍，其余的队伍配对。总共进行 <code>(n - 1) / 2</code> 场比赛，且产生 <code>(n - 1) / 2 + 1</code> 支队伍进入下一轮。</li>\n</ul>\n<p>返回在比赛中进行的配对次数，直到决出获胜队伍为止。</p>\n<p> </p>\n<p><strong>示例 1：</strong></p>\n<pre><strong>输入：</strong>n = 7\n<strong>输出：</strong>6\n<strong>解释：</strong>比赛详情：\n- 第 1 轮：队伍数 = 7 ，配对次数 = 3 ，4 支队伍晋级。\n- 第 2 轮：队伍数 = 4 ，配对次数 = 2 ，2 支队伍晋级。\n- 第 3 轮：队伍数 = 2 ，配对次数 = 1 ，决出 1 支获胜队伍。\n总配对次数 = 3 + 2 + 1 = 6\n</pre>\n<p><strong>示例 2：</strong></p>\n<pre><strong>输入：</strong>n = 14\n<strong>输出：</strong>13\n<strong>解释：</strong>比赛详情：\n- 第 1 轮：队伍数 = 14 ，配对次数 = 7 ，7 支队伍晋级。\n- 第 2 轮：队伍数 = 7 ，配对次数 = 3 ，4 支队伍晋级。 \n- 第 3 轮：队伍数 = 4 ，配对次数 = 2 ，2 支队伍晋级。\n- 第 4 轮：队伍数 = 2 ，配对次数 = 1 ，决出 1 支获胜队伍。\n总配对次数 = 7 + 3 + 2 + 1 = 13\n</pre>\n<p> </p>\n<p><strong>提示：</strong></p>\n<ul>\n\t<li><code>1 &lt;= n &lt;= 200</code></li>\n</ul>\n<div><div>Related Topics</div><div><li>数学</li><li>模拟</li></div></div>\n<h1>个人解法</h1>\n<div class=\"tabs\" id=\"categories\"><ul class=\"nav-tabs\"><li class=\"tab active\"><button type=\"button\" data-href=\"#categories-1\">Java</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#categories-2\">Python3</button></li></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"categories-1\"><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">class Solution &#123;\n    public int numberOfMatches(int n) &#123;\n        &#x2F;&#x2F; 总配对次数\n        int sum &#x3D; 0;\n        while (n &gt; 1) &#123;\n            if (n % 2 &#x3D;&#x3D; 1) &#123;\n                &#x2F;&#x2F; 奇数队伍\n                &#x2F;&#x2F; 配对次数：(n - 1) &#x2F; 2\n                sum +&#x3D; (n - 1) &#x2F; 2;\n                &#x2F;&#x2F; 剩余队伍数：(n - 1) &#x2F; 2 + 1\n                n &#x3D; (n - 1) &#x2F; 2 + 1;\n            &#125; else &#123;\n                &#x2F;&#x2F; 偶数队伍\n                &#x2F;&#x2F; 配对次数：n &#x2F; 2\n                sum +&#x3D; n &#x2F; 2;\n                &#x2F;&#x2F; 剩余队伍数：n &#x2F; 2\n                n &#x2F;&#x3D; 2;\n            &#125;\n        &#125;\n        return sum;\n    &#125;\n&#125;</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"categories-2\"><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">class Solution:\n    def numberOfMatches(self, n: int) -&gt; int:\n        # 总配对次数\n        sums &#x3D; 0\n        while n &gt; 1:\n            if n % 2 &#x3D;&#x3D; 1:\n                # 奇数队伍\n                # 配对次数：(n - 1) &#x2F; 2\n                sums +&#x3D; (n - 1) &#x2F; 2\n                # 剩余队伍数：(n - 1) &#x2F; 2 + 1\n                n &#x3D; (n - 1) &#x2F; 2 + 1\n            else:\n                # 偶数队伍\n                # 配对次数：n &#x2F; 2\n                sums +&#x3D; n &#x2F; 2\n                # 剩余队伍数：n &#x2F; 2\n                n &#x2F;&#x3D; 2\n        return int(sums)</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div></div>"},{"title":"力扣1725:可以形成最大正方形的矩形数目","date":"2022-02-04T14:50:47.000Z","_content":"2022年02月04日 力扣每日一题\n\n# 题目\n\n<p>给你一个数组 <code>rectangles</code> ，其中 <code>rectangles[i] = [l<sub>i</sub>, w<sub>i</sub>]</code> 表示第 <code>i</code> 个矩形的长度为 <code>l<sub>i</sub></code> 、宽度为 <code>w<sub>i</sub></code> 。</p>\n\n<p>如果存在 <code>k</code> 同时满足 <code>k <= l<sub>i</sub></code> 和 <code>k <= w<sub>i</sub></code> ，就可以将第 <code>i</code> 个矩形切成边长为 <code>k</code> 的正方形。例如，矩形 <code>[4,6]</code> 可以切成边长最大为 <code>4</code> 的正方形。</p>\n\n<p>设 <code>maxLen</code> 为可以从矩形数组 <code>rectangles</code> 切分得到的 <strong>最大正方形</strong> 的边长。</p>\n\n<p>请你统计有多少个矩形能够切出边长为<em> </em><code>maxLen</code> 的正方形，并返回矩形 <strong>数目</strong> 。</p>\n\n<p> </p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入：</strong>rectangles = [[5,8],[3,9],[5,12],[16,5]]\n<strong>输出：</strong>3\n<strong>解释：</strong>能从每个矩形中切出的最大正方形边长分别是 [5,3,5,5] 。\n最大正方形的边长为 5 ，可以由 3 个矩形切分得到。\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>\n<strong>输入：</strong>rectangles = [[2,3],[3,7],[4,3],[3,7]]\n<strong>输出：</strong>3\n</pre>\n\n<p> </p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>1 <= rectangles.length <= 1000</code></li>\n\t<li><code>rectangles[i].length == 2</code></li>\n\t<li><code>1 <= l<sub>i</sub>, w<sub>i</sub> <= 10<sup>9</sup></code></li>\n\t<li><code>l<sub>i</sub> != w<sub>i</sub></code></li>\n</ul>\n<div><div>Related Topics</div><div><li>数组</li></div></div>\n\n# 个人解法\n\n{% tabs categories%}\n<!-- tab Java -->\n```java\nclass Solution {\n    public int countGoodRectangles(int[][] rectangles) {\n        int maxLength = 0;\n        int count = 0;\n        for (int[] rectangle : rectangles) {\n            int temp = Math.min(rectangle[0], rectangle[1]);\n            if (temp == maxLength) {\n                count++;\n            } else if (temp > maxLength) {\n                count = 1;\n                maxLength = temp;\n            }\n        }\n        return count;\n    }\n}\n```\n<!-- endtab -->\n\n<!-- tab Python3 -->\n```python\nfrom typing import List\n\n\nclass Solution:\n    def countGoodRectangles(self, rectangles: List[List[int]]) -> int:\n        maxLength = 0\n        count = 0\n        for rectangle in rectangles:\n            temp = min(rectangle[0], rectangle[1])\n            if temp == maxLength:\n                count = count + 1\n            elif temp > maxLength:\n                count = 1\n                maxLength = temp\n        return count\n```\n<!-- endtab -->\n{% endtabs %}\n","source":"_posts/day20220204.md","raw":"---\ntitle: 力扣1725:可以形成最大正方形的矩形数目 \ndate: 2022-02-04 22:50:47 \ntags: [力扣]\ncategories: [算法,力扣,每日一题]\n---\n2022年02月04日 力扣每日一题\n\n# 题目\n\n<p>给你一个数组 <code>rectangles</code> ，其中 <code>rectangles[i] = [l<sub>i</sub>, w<sub>i</sub>]</code> 表示第 <code>i</code> 个矩形的长度为 <code>l<sub>i</sub></code> 、宽度为 <code>w<sub>i</sub></code> 。</p>\n\n<p>如果存在 <code>k</code> 同时满足 <code>k <= l<sub>i</sub></code> 和 <code>k <= w<sub>i</sub></code> ，就可以将第 <code>i</code> 个矩形切成边长为 <code>k</code> 的正方形。例如，矩形 <code>[4,6]</code> 可以切成边长最大为 <code>4</code> 的正方形。</p>\n\n<p>设 <code>maxLen</code> 为可以从矩形数组 <code>rectangles</code> 切分得到的 <strong>最大正方形</strong> 的边长。</p>\n\n<p>请你统计有多少个矩形能够切出边长为<em> </em><code>maxLen</code> 的正方形，并返回矩形 <strong>数目</strong> 。</p>\n\n<p> </p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入：</strong>rectangles = [[5,8],[3,9],[5,12],[16,5]]\n<strong>输出：</strong>3\n<strong>解释：</strong>能从每个矩形中切出的最大正方形边长分别是 [5,3,5,5] 。\n最大正方形的边长为 5 ，可以由 3 个矩形切分得到。\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>\n<strong>输入：</strong>rectangles = [[2,3],[3,7],[4,3],[3,7]]\n<strong>输出：</strong>3\n</pre>\n\n<p> </p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>1 <= rectangles.length <= 1000</code></li>\n\t<li><code>rectangles[i].length == 2</code></li>\n\t<li><code>1 <= l<sub>i</sub>, w<sub>i</sub> <= 10<sup>9</sup></code></li>\n\t<li><code>l<sub>i</sub> != w<sub>i</sub></code></li>\n</ul>\n<div><div>Related Topics</div><div><li>数组</li></div></div>\n\n# 个人解法\n\n{% tabs categories%}\n<!-- tab Java -->\n```java\nclass Solution {\n    public int countGoodRectangles(int[][] rectangles) {\n        int maxLength = 0;\n        int count = 0;\n        for (int[] rectangle : rectangles) {\n            int temp = Math.min(rectangle[0], rectangle[1]);\n            if (temp == maxLength) {\n                count++;\n            } else if (temp > maxLength) {\n                count = 1;\n                maxLength = temp;\n            }\n        }\n        return count;\n    }\n}\n```\n<!-- endtab -->\n\n<!-- tab Python3 -->\n```python\nfrom typing import List\n\n\nclass Solution:\n    def countGoodRectangles(self, rectangles: List[List[int]]) -> int:\n        maxLength = 0\n        count = 0\n        for rectangle in rectangles:\n            temp = min(rectangle[0], rectangle[1])\n            if temp == maxLength:\n                count = count + 1\n            elif temp > maxLength:\n                count = 1\n                maxLength = temp\n        return count\n```\n<!-- endtab -->\n{% endtabs %}\n","slug":"day20220204","published":1,"updated":"2022-06-03T06:00:55.561Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl42z5h66001d3gn647x4gikg","content":"<p>2022年02月04日 力扣每日一题</p>\n<h1>题目</h1>\n<p>给你一个数组 <code>rectangles</code> ，其中 <code>rectangles[i] = [l<sub>i</sub>, w<sub>i</sub>]</code> 表示第 <code>i</code> 个矩形的长度为 <code>l<sub>i</sub></code> 、宽度为 <code>w<sub>i</sub></code> 。</p>\n<p>如果存在 <code>k</code> 同时满足 <code>k <= l<sub>i</sub></code> 和 <code>k <= w<sub>i</sub></code> ，就可以将第 <code>i</code> 个矩形切成边长为 <code>k</code> 的正方形。例如，矩形 <code>[4,6]</code> 可以切成边长最大为 <code>4</code> 的正方形。</p>\n<p>设 <code>maxLen</code> 为可以从矩形数组 <code>rectangles</code> 切分得到的 <strong>最大正方形</strong> 的边长。</p>\n<p>请你统计有多少个矩形能够切出边长为<em> </em><code>maxLen</code> 的正方形，并返回矩形 <strong>数目</strong> 。</p>\n<p> </p>\n<p><strong>示例 1：</strong></p>\n<pre>\n<strong>输入：</strong>rectangles = [[5,8],[3,9],[5,12],[16,5]]\n<strong>输出：</strong>3\n<strong>解释：</strong>能从每个矩形中切出的最大正方形边长分别是 [5,3,5,5] 。\n最大正方形的边长为 5 ，可以由 3 个矩形切分得到。\n</pre>\n<p><strong>示例 2：</strong></p>\n<pre>\n<strong>输入：</strong>rectangles = [[2,3],[3,7],[4,3],[3,7]]\n<strong>输出：</strong>3\n</pre>\n<p> </p>\n<p><strong>提示：</strong></p>\n<ul>\n\t<li><code>1 <= rectangles.length <= 1000</code></li>\n\t<li><code>rectangles[i].length == 2</code></li>\n\t<li><code>1 <= l<sub>i</sub>, w<sub>i</sub> <= 10<sup>9</sup></code></li>\n\t<li><code>l<sub>i</sub> != w<sub>i</sub></code></li>\n</ul>\n<div><div>Related Topics</div><div><li>数组</li></div></div>\n<h1>个人解法</h1>\n<div class=\"tabs\" id=\"categories\"><ul class=\"nav-tabs\"><li class=\"tab active\"><button type=\"button\" data-href=\"#categories-1\">Java</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#categories-2\">Python3</button></li></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"categories-1\"><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">class Solution &#123;\n    public int countGoodRectangles(int[][] rectangles) &#123;\n        int maxLength &#x3D; 0;\n        int count &#x3D; 0;\n        for (int[] rectangle : rectangles) &#123;\n            int temp &#x3D; Math.min(rectangle[0], rectangle[1]);\n            if (temp &#x3D;&#x3D; maxLength) &#123;\n                count++;\n            &#125; else if (temp &gt; maxLength) &#123;\n                count &#x3D; 1;\n                maxLength &#x3D; temp;\n            &#125;\n        &#125;\n        return count;\n    &#125;\n&#125;</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"categories-2\"><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">from typing import List\n\n\nclass Solution:\n    def countGoodRectangles(self, rectangles: List[List[int]]) -&gt; int:\n        maxLength &#x3D; 0\n        count &#x3D; 0\n        for rectangle in rectangles:\n            temp &#x3D; min(rectangle[0], rectangle[1])\n            if temp &#x3D;&#x3D; maxLength:\n                count &#x3D; count + 1\n            elif temp &gt; maxLength:\n                count &#x3D; 1\n                maxLength &#x3D; temp\n        return count</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div></div>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"cover":"https://blog.huangge1199.cn/images/bg.jpeg","excerpt":"","more":"<p>2022年02月04日 力扣每日一题</p>\n<h1>题目</h1>\n<p>给你一个数组 <code>rectangles</code> ，其中 <code>rectangles[i] = [l<sub>i</sub>, w<sub>i</sub>]</code> 表示第 <code>i</code> 个矩形的长度为 <code>l<sub>i</sub></code> 、宽度为 <code>w<sub>i</sub></code> 。</p>\n<p>如果存在 <code>k</code> 同时满足 <code>k <= l<sub>i</sub></code> 和 <code>k <= w<sub>i</sub></code> ，就可以将第 <code>i</code> 个矩形切成边长为 <code>k</code> 的正方形。例如，矩形 <code>[4,6]</code> 可以切成边长最大为 <code>4</code> 的正方形。</p>\n<p>设 <code>maxLen</code> 为可以从矩形数组 <code>rectangles</code> 切分得到的 <strong>最大正方形</strong> 的边长。</p>\n<p>请你统计有多少个矩形能够切出边长为<em> </em><code>maxLen</code> 的正方形，并返回矩形 <strong>数目</strong> 。</p>\n<p> </p>\n<p><strong>示例 1：</strong></p>\n<pre>\n<strong>输入：</strong>rectangles = [[5,8],[3,9],[5,12],[16,5]]\n<strong>输出：</strong>3\n<strong>解释：</strong>能从每个矩形中切出的最大正方形边长分别是 [5,3,5,5] 。\n最大正方形的边长为 5 ，可以由 3 个矩形切分得到。\n</pre>\n<p><strong>示例 2：</strong></p>\n<pre>\n<strong>输入：</strong>rectangles = [[2,3],[3,7],[4,3],[3,7]]\n<strong>输出：</strong>3\n</pre>\n<p> </p>\n<p><strong>提示：</strong></p>\n<ul>\n\t<li><code>1 <= rectangles.length <= 1000</code></li>\n\t<li><code>rectangles[i].length == 2</code></li>\n\t<li><code>1 <= l<sub>i</sub>, w<sub>i</sub> <= 10<sup>9</sup></code></li>\n\t<li><code>l<sub>i</sub> != w<sub>i</sub></code></li>\n</ul>\n<div><div>Related Topics</div><div><li>数组</li></div></div>\n<h1>个人解法</h1>\n<div class=\"tabs\" id=\"categories\"><ul class=\"nav-tabs\"><li class=\"tab active\"><button type=\"button\" data-href=\"#categories-1\">Java</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#categories-2\">Python3</button></li></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"categories-1\"><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">class Solution &#123;\n    public int countGoodRectangles(int[][] rectangles) &#123;\n        int maxLength &#x3D; 0;\n        int count &#x3D; 0;\n        for (int[] rectangle : rectangles) &#123;\n            int temp &#x3D; Math.min(rectangle[0], rectangle[1]);\n            if (temp &#x3D;&#x3D; maxLength) &#123;\n                count++;\n            &#125; else if (temp &gt; maxLength) &#123;\n                count &#x3D; 1;\n                maxLength &#x3D; temp;\n            &#125;\n        &#125;\n        return count;\n    &#125;\n&#125;</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"categories-2\"><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">from typing import List\n\n\nclass Solution:\n    def countGoodRectangles(self, rectangles: List[List[int]]) -&gt; int:\n        maxLength &#x3D; 0\n        count &#x3D; 0\n        for rectangle in rectangles:\n            temp &#x3D; min(rectangle[0], rectangle[1])\n            if temp &#x3D;&#x3D; maxLength:\n                count &#x3D; count + 1\n            elif temp &gt; maxLength:\n                count &#x3D; 1\n                maxLength &#x3D; temp\n        return count</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div></div>\n"},{"title":"力扣1219:黄金矿工","date":"2022-02-06T04:37:26.000Z","_content":"2022年02月05日 力扣每日一题\n\n# 题目\n\n<p>你要开发一座金矿，地质勘测学家已经探明了这座金矿中的资源分布，并用大小为&nbsp;<code>m * n</code> 的网格 <code>grid</code> 进行了标注。每个单元格中的整数就表示这一单元格中的黄金数量；如果该单元格是空的，那么就是 <code>0</code>。</p>\n\n<p>为了使收益最大化，矿工需要按以下规则来开采黄金：</p>\n\n<ul>\n\t<li>每当矿工进入一个单元，就会收集该单元格中的所有黄金。</li>\n\t<li>矿工每次可以从当前位置向上下左右四个方向走。</li>\n\t<li>每个单元格只能被开采（进入）一次。</li>\n\t<li><strong>不得开采</strong>（进入）黄金数目为 <code>0</code> 的单元格。</li>\n\t<li>矿工可以从网格中 <strong>任意一个</strong> 有黄金的单元格出发或者是停止。</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入：</strong>grid = [[0,6,0],[5,8,7],[0,9,0]]\n<strong>输出：</strong>24\n<strong>解释：</strong>\n[[0,6,0],\n [5,8,7],\n [0,9,0]]\n一种收集最多黄金的路线是：9 -&gt; 8 -&gt; 7。\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入：</strong>grid = [[1,0,7],[2,0,6],[3,4,5],[0,3,0],[9,0,20]]\n<strong>输出：</strong>28\n<strong>解释：</strong>\n[[1,0,7],\n [2,0,6],\n [3,4,5],\n [0,3,0],\n [9,0,20]]\n一种收集最多黄金的路线是：1 -&gt; 2 -&gt; 3 -&gt; 4 -&gt; 5 -&gt; 6 -&gt; 7。\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= grid.length,&nbsp;grid[i].length &lt;= 15</code></li>\n\t<li><code>0 &lt;= grid[i][j] &lt;= 100</code></li>\n\t<li>最多 <strong>25 </strong>个单元格中有黄金。</li>\n</ul>\n<div><div>Related Topics</div><div><li>数组</li><li>回溯</li><li>矩阵</li></div></div>\n\n# 个人解法\n\n{% tabs categories%}\n<!-- tab Java -->\n```java\nclass Solution {\n    int[] xl = new int[]{1, -1, 0, 0};\n    int[] yl = new int[]{0, 0, 1, -1};\n    public int getMaximumGold(int[][] grid) {\n        int counts = 0;\n        boolean[][] use = new boolean[grid.length][grid[0].length];\n        for (int i = 0; i < grid.length; i++) {\n            for (int j = 0; j < grid[0].length; j++) {\n                use[i][j] = true;\n                counts = Math.max(counts, dfs(i, j, grid, use));\n                use[i][j] = false;\n            }\n        }\n        return counts;\n    }\n    private int dfs(int x, int y, int[][] grid, boolean[][] use) {\n        int counts = grid[x][y];\n        for (int i = 0; i < 4; i++) {\n            int nx = x + xl[i];\n            int ny = y + yl[i];\n            if (nx < 0 || nx >= grid.length || ny < 0 || ny >= grid[0].length || grid[nx][ny] == 0 || use[nx][ny]) {\n                continue;\n            }\n            use[nx][ny] = true;\n            counts = Math.max(counts, grid[x][y] + dfs(nx, ny, grid, use));\n            use[nx][ny] = false;\n        }\n        return counts;\n    }\n}\n```\n<!-- endtab -->\n\n<!-- tab Python3 -->\n```python\nclass Solution:\n    def getMaximumGold(self, grid: List[List[int]]) -> int:\n        def dfs(x: int, y: int) -> int:\n            count = grid[x][y]\n            for nx, ny in ((x - 1, y), (x + 1, y), (x, y - 1), (x, y + 1)):\n                if nx < 0 or nx >= len(grid) or ny < 0 or ny >= len(grid[0]) or grid[nx][ny] == 0 or use[nx][ny]:\n                    continue\n                use[nx][ny] = True\n                count = max(count, grid[x][y] + dfs(nx, ny))\n                use[nx][ny] = False\n            return count\n\n        counts = 0\n        # 这种形式下，给一个元素赋值，对应的所有行相同列都会赋值\n        # use = [[False] * len(grid[0])] * len(grid)\n        use = [[False] * len(grid[0]) for _ in range(len(grid))]\n        for i in range(len(grid)):\n            for j in range(len(grid[0])):\n                if grid[i][j] != 0:\n                    use[i][j] = True\n                    counts = max(counts, dfs(i, j))\n                    use[i][j] = False\n        return counts\n```\n<!-- endtab -->\n{% endtabs %}\n","source":"_posts/day20220205.md","raw":"---\ntitle: 力扣1219:黄金矿工\ndate: 2022-02-06 12:37:26\ntags: [力扣]\ncategories: [算法,力扣,每日一题]\n---\n2022年02月05日 力扣每日一题\n\n# 题目\n\n<p>你要开发一座金矿，地质勘测学家已经探明了这座金矿中的资源分布，并用大小为&nbsp;<code>m * n</code> 的网格 <code>grid</code> 进行了标注。每个单元格中的整数就表示这一单元格中的黄金数量；如果该单元格是空的，那么就是 <code>0</code>。</p>\n\n<p>为了使收益最大化，矿工需要按以下规则来开采黄金：</p>\n\n<ul>\n\t<li>每当矿工进入一个单元，就会收集该单元格中的所有黄金。</li>\n\t<li>矿工每次可以从当前位置向上下左右四个方向走。</li>\n\t<li>每个单元格只能被开采（进入）一次。</li>\n\t<li><strong>不得开采</strong>（进入）黄金数目为 <code>0</code> 的单元格。</li>\n\t<li>矿工可以从网格中 <strong>任意一个</strong> 有黄金的单元格出发或者是停止。</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入：</strong>grid = [[0,6,0],[5,8,7],[0,9,0]]\n<strong>输出：</strong>24\n<strong>解释：</strong>\n[[0,6,0],\n [5,8,7],\n [0,9,0]]\n一种收集最多黄金的路线是：9 -&gt; 8 -&gt; 7。\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入：</strong>grid = [[1,0,7],[2,0,6],[3,4,5],[0,3,0],[9,0,20]]\n<strong>输出：</strong>28\n<strong>解释：</strong>\n[[1,0,7],\n [2,0,6],\n [3,4,5],\n [0,3,0],\n [9,0,20]]\n一种收集最多黄金的路线是：1 -&gt; 2 -&gt; 3 -&gt; 4 -&gt; 5 -&gt; 6 -&gt; 7。\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= grid.length,&nbsp;grid[i].length &lt;= 15</code></li>\n\t<li><code>0 &lt;= grid[i][j] &lt;= 100</code></li>\n\t<li>最多 <strong>25 </strong>个单元格中有黄金。</li>\n</ul>\n<div><div>Related Topics</div><div><li>数组</li><li>回溯</li><li>矩阵</li></div></div>\n\n# 个人解法\n\n{% tabs categories%}\n<!-- tab Java -->\n```java\nclass Solution {\n    int[] xl = new int[]{1, -1, 0, 0};\n    int[] yl = new int[]{0, 0, 1, -1};\n    public int getMaximumGold(int[][] grid) {\n        int counts = 0;\n        boolean[][] use = new boolean[grid.length][grid[0].length];\n        for (int i = 0; i < grid.length; i++) {\n            for (int j = 0; j < grid[0].length; j++) {\n                use[i][j] = true;\n                counts = Math.max(counts, dfs(i, j, grid, use));\n                use[i][j] = false;\n            }\n        }\n        return counts;\n    }\n    private int dfs(int x, int y, int[][] grid, boolean[][] use) {\n        int counts = grid[x][y];\n        for (int i = 0; i < 4; i++) {\n            int nx = x + xl[i];\n            int ny = y + yl[i];\n            if (nx < 0 || nx >= grid.length || ny < 0 || ny >= grid[0].length || grid[nx][ny] == 0 || use[nx][ny]) {\n                continue;\n            }\n            use[nx][ny] = true;\n            counts = Math.max(counts, grid[x][y] + dfs(nx, ny, grid, use));\n            use[nx][ny] = false;\n        }\n        return counts;\n    }\n}\n```\n<!-- endtab -->\n\n<!-- tab Python3 -->\n```python\nclass Solution:\n    def getMaximumGold(self, grid: List[List[int]]) -> int:\n        def dfs(x: int, y: int) -> int:\n            count = grid[x][y]\n            for nx, ny in ((x - 1, y), (x + 1, y), (x, y - 1), (x, y + 1)):\n                if nx < 0 or nx >= len(grid) or ny < 0 or ny >= len(grid[0]) or grid[nx][ny] == 0 or use[nx][ny]:\n                    continue\n                use[nx][ny] = True\n                count = max(count, grid[x][y] + dfs(nx, ny))\n                use[nx][ny] = False\n            return count\n\n        counts = 0\n        # 这种形式下，给一个元素赋值，对应的所有行相同列都会赋值\n        # use = [[False] * len(grid[0])] * len(grid)\n        use = [[False] * len(grid[0]) for _ in range(len(grid))]\n        for i in range(len(grid)):\n            for j in range(len(grid[0])):\n                if grid[i][j] != 0:\n                    use[i][j] = True\n                    counts = max(counts, dfs(i, j))\n                    use[i][j] = False\n        return counts\n```\n<!-- endtab -->\n{% endtabs %}\n","slug":"day20220205","published":1,"updated":"2022-06-03T06:00:55.561Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl42z5h68001i3gn6782t2dhn","content":"<p>2022年02月05日 力扣每日一题</p>\n<h1>题目</h1>\n<p>你要开发一座金矿，地质勘测学家已经探明了这座金矿中的资源分布，并用大小为&nbsp;<code>m * n</code> 的网格 <code>grid</code> 进行了标注。每个单元格中的整数就表示这一单元格中的黄金数量；如果该单元格是空的，那么就是 <code>0</code>。</p>\n<p>为了使收益最大化，矿工需要按以下规则来开采黄金：</p>\n<ul>\n\t<li>每当矿工进入一个单元，就会收集该单元格中的所有黄金。</li>\n\t<li>矿工每次可以从当前位置向上下左右四个方向走。</li>\n\t<li>每个单元格只能被开采（进入）一次。</li>\n\t<li><strong>不得开采</strong>（进入）黄金数目为 <code>0</code> 的单元格。</li>\n\t<li>矿工可以从网格中 <strong>任意一个</strong> 有黄金的单元格出发或者是停止。</li>\n</ul>\n<p>&nbsp;</p>\n<p><strong>示例 1：</strong></p>\n<pre><strong>输入：</strong>grid = [[0,6,0],[5,8,7],[0,9,0]]\n<strong>输出：</strong>24\n<strong>解释：</strong>\n[[0,6,0],\n [5,8,7],\n [0,9,0]]\n一种收集最多黄金的路线是：9 -&gt; 8 -&gt; 7。\n</pre>\n<p><strong>示例 2：</strong></p>\n<pre><strong>输入：</strong>grid = [[1,0,7],[2,0,6],[3,4,5],[0,3,0],[9,0,20]]\n<strong>输出：</strong>28\n<strong>解释：</strong>\n[[1,0,7],\n [2,0,6],\n [3,4,5],\n [0,3,0],\n [9,0,20]]\n一种收集最多黄金的路线是：1 -&gt; 2 -&gt; 3 -&gt; 4 -&gt; 5 -&gt; 6 -&gt; 7。\n</pre>\n<p>&nbsp;</p>\n<p><strong>提示：</strong></p>\n<ul>\n\t<li><code>1 &lt;= grid.length,&nbsp;grid[i].length &lt;= 15</code></li>\n\t<li><code>0 &lt;= grid[i][j] &lt;= 100</code></li>\n\t<li>最多 <strong>25 </strong>个单元格中有黄金。</li>\n</ul>\n<div><div>Related Topics</div><div><li>数组</li><li>回溯</li><li>矩阵</li></div></div>\n<h1>个人解法</h1>\n<div class=\"tabs\" id=\"categories\"><ul class=\"nav-tabs\"><li class=\"tab active\"><button type=\"button\" data-href=\"#categories-1\">Java</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#categories-2\">Python3</button></li></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"categories-1\"><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">class Solution &#123;\n    int[] xl &#x3D; new int[]&#123;1, -1, 0, 0&#125;;\n    int[] yl &#x3D; new int[]&#123;0, 0, 1, -1&#125;;\n    public int getMaximumGold(int[][] grid) &#123;\n        int counts &#x3D; 0;\n        boolean[][] use &#x3D; new boolean[grid.length][grid[0].length];\n        for (int i &#x3D; 0; i &lt; grid.length; i++) &#123;\n            for (int j &#x3D; 0; j &lt; grid[0].length; j++) &#123;\n                use[i][j] &#x3D; true;\n                counts &#x3D; Math.max(counts, dfs(i, j, grid, use));\n                use[i][j] &#x3D; false;\n            &#125;\n        &#125;\n        return counts;\n    &#125;\n    private int dfs(int x, int y, int[][] grid, boolean[][] use) &#123;\n        int counts &#x3D; grid[x][y];\n        for (int i &#x3D; 0; i &lt; 4; i++) &#123;\n            int nx &#x3D; x + xl[i];\n            int ny &#x3D; y + yl[i];\n            if (nx &lt; 0 || nx &gt;&#x3D; grid.length || ny &lt; 0 || ny &gt;&#x3D; grid[0].length || grid[nx][ny] &#x3D;&#x3D; 0 || use[nx][ny]) &#123;\n                continue;\n            &#125;\n            use[nx][ny] &#x3D; true;\n            counts &#x3D; Math.max(counts, grid[x][y] + dfs(nx, ny, grid, use));\n            use[nx][ny] &#x3D; false;\n        &#125;\n        return counts;\n    &#125;\n&#125;</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"categories-2\"><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">class Solution:\n    def getMaximumGold(self, grid: List[List[int]]) -&gt; int:\n        def dfs(x: int, y: int) -&gt; int:\n            count &#x3D; grid[x][y]\n            for nx, ny in ((x - 1, y), (x + 1, y), (x, y - 1), (x, y + 1)):\n                if nx &lt; 0 or nx &gt;&#x3D; len(grid) or ny &lt; 0 or ny &gt;&#x3D; len(grid[0]) or grid[nx][ny] &#x3D;&#x3D; 0 or use[nx][ny]:\n                    continue\n                use[nx][ny] &#x3D; True\n                count &#x3D; max(count, grid[x][y] + dfs(nx, ny))\n                use[nx][ny] &#x3D; False\n            return count\n\n        counts &#x3D; 0\n        # 这种形式下，给一个元素赋值，对应的所有行相同列都会赋值\n        # use &#x3D; [[False] * len(grid[0])] * len(grid)\n        use &#x3D; [[False] * len(grid[0]) for _ in range(len(grid))]\n        for i in range(len(grid)):\n            for j in range(len(grid[0])):\n                if grid[i][j] !&#x3D; 0:\n                    use[i][j] &#x3D; True\n                    counts &#x3D; max(counts, dfs(i, j))\n                    use[i][j] &#x3D; False\n        return counts</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div></div>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"cover":"https://blog.huangge1199.cn/post/pyListSort/bg.jpeg","excerpt":"","more":"<p>2022年02月05日 力扣每日一题</p>\n<h1>题目</h1>\n<p>你要开发一座金矿，地质勘测学家已经探明了这座金矿中的资源分布，并用大小为&nbsp;<code>m * n</code> 的网格 <code>grid</code> 进行了标注。每个单元格中的整数就表示这一单元格中的黄金数量；如果该单元格是空的，那么就是 <code>0</code>。</p>\n<p>为了使收益最大化，矿工需要按以下规则来开采黄金：</p>\n<ul>\n\t<li>每当矿工进入一个单元，就会收集该单元格中的所有黄金。</li>\n\t<li>矿工每次可以从当前位置向上下左右四个方向走。</li>\n\t<li>每个单元格只能被开采（进入）一次。</li>\n\t<li><strong>不得开采</strong>（进入）黄金数目为 <code>0</code> 的单元格。</li>\n\t<li>矿工可以从网格中 <strong>任意一个</strong> 有黄金的单元格出发或者是停止。</li>\n</ul>\n<p>&nbsp;</p>\n<p><strong>示例 1：</strong></p>\n<pre><strong>输入：</strong>grid = [[0,6,0],[5,8,7],[0,9,0]]\n<strong>输出：</strong>24\n<strong>解释：</strong>\n[[0,6,0],\n [5,8,7],\n [0,9,0]]\n一种收集最多黄金的路线是：9 -&gt; 8 -&gt; 7。\n</pre>\n<p><strong>示例 2：</strong></p>\n<pre><strong>输入：</strong>grid = [[1,0,7],[2,0,6],[3,4,5],[0,3,0],[9,0,20]]\n<strong>输出：</strong>28\n<strong>解释：</strong>\n[[1,0,7],\n [2,0,6],\n [3,4,5],\n [0,3,0],\n [9,0,20]]\n一种收集最多黄金的路线是：1 -&gt; 2 -&gt; 3 -&gt; 4 -&gt; 5 -&gt; 6 -&gt; 7。\n</pre>\n<p>&nbsp;</p>\n<p><strong>提示：</strong></p>\n<ul>\n\t<li><code>1 &lt;= grid.length,&nbsp;grid[i].length &lt;= 15</code></li>\n\t<li><code>0 &lt;= grid[i][j] &lt;= 100</code></li>\n\t<li>最多 <strong>25 </strong>个单元格中有黄金。</li>\n</ul>\n<div><div>Related Topics</div><div><li>数组</li><li>回溯</li><li>矩阵</li></div></div>\n<h1>个人解法</h1>\n<div class=\"tabs\" id=\"categories\"><ul class=\"nav-tabs\"><li class=\"tab active\"><button type=\"button\" data-href=\"#categories-1\">Java</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#categories-2\">Python3</button></li></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"categories-1\"><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">class Solution &#123;\n    int[] xl &#x3D; new int[]&#123;1, -1, 0, 0&#125;;\n    int[] yl &#x3D; new int[]&#123;0, 0, 1, -1&#125;;\n    public int getMaximumGold(int[][] grid) &#123;\n        int counts &#x3D; 0;\n        boolean[][] use &#x3D; new boolean[grid.length][grid[0].length];\n        for (int i &#x3D; 0; i &lt; grid.length; i++) &#123;\n            for (int j &#x3D; 0; j &lt; grid[0].length; j++) &#123;\n                use[i][j] &#x3D; true;\n                counts &#x3D; Math.max(counts, dfs(i, j, grid, use));\n                use[i][j] &#x3D; false;\n            &#125;\n        &#125;\n        return counts;\n    &#125;\n    private int dfs(int x, int y, int[][] grid, boolean[][] use) &#123;\n        int counts &#x3D; grid[x][y];\n        for (int i &#x3D; 0; i &lt; 4; i++) &#123;\n            int nx &#x3D; x + xl[i];\n            int ny &#x3D; y + yl[i];\n            if (nx &lt; 0 || nx &gt;&#x3D; grid.length || ny &lt; 0 || ny &gt;&#x3D; grid[0].length || grid[nx][ny] &#x3D;&#x3D; 0 || use[nx][ny]) &#123;\n                continue;\n            &#125;\n            use[nx][ny] &#x3D; true;\n            counts &#x3D; Math.max(counts, grid[x][y] + dfs(nx, ny, grid, use));\n            use[nx][ny] &#x3D; false;\n        &#125;\n        return counts;\n    &#125;\n&#125;</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"categories-2\"><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">class Solution:\n    def getMaximumGold(self, grid: List[List[int]]) -&gt; int:\n        def dfs(x: int, y: int) -&gt; int:\n            count &#x3D; grid[x][y]\n            for nx, ny in ((x - 1, y), (x + 1, y), (x, y - 1), (x, y + 1)):\n                if nx &lt; 0 or nx &gt;&#x3D; len(grid) or ny &lt; 0 or ny &gt;&#x3D; len(grid[0]) or grid[nx][ny] &#x3D;&#x3D; 0 or use[nx][ny]:\n                    continue\n                use[nx][ny] &#x3D; True\n                count &#x3D; max(count, grid[x][y] + dfs(nx, ny))\n                use[nx][ny] &#x3D; False\n            return count\n\n        counts &#x3D; 0\n        # 这种形式下，给一个元素赋值，对应的所有行相同列都会赋值\n        # use &#x3D; [[False] * len(grid[0])] * len(grid)\n        use &#x3D; [[False] * len(grid[0]) for _ in range(len(grid))]\n        for i in range(len(grid)):\n            for j in range(len(grid[0])):\n                if grid[i][j] !&#x3D; 0:\n                    use[i][j] &#x3D; True\n                    counts &#x3D; max(counts, dfs(i, j))\n                    use[i][j] &#x3D; False\n        return counts</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div></div>\n"},{"title":"力扣1984:学生分数的最小差值","date":"2022-02-11T05:35:01.000Z","_content":"2022年02月11日 力扣每日一题\n\n# 题目\n<p>给你一个 <strong>下标从 0 开始</strong> 的整数数组 <code>nums</code> ，其中 <code>nums[i]</code> 表示第 <code>i</code> 名学生的分数。另给你一个整数 <code>k</code> 。</p>\n\n<p>从数组中选出任意 <code>k</code> 名学生的分数，使这 <code>k</code> 个分数间 <strong>最高分</strong> 和 <strong>最低分</strong> 的 <strong>差值</strong> 达到<strong> 最小化</strong> 。</p>\n\n<p>返回可能的 <strong>最小差值</strong> 。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入：</strong>nums = [90], k = 1\n<strong>输出：</strong>0\n<strong>解释：</strong>选出 1 名学生的分数，仅有 1 种方法：\n- [<em><strong>90</strong></em>] 最高分和最低分之间的差值是 90 - 90 = 0\n可能的最小差值是 0\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入：</strong>nums = [9,4,1,7], k = 2\n<strong>输出：</strong>2\n<strong>解释：</strong>选出 2 名学生的分数，有 6 种方法：\n- [<em><strong>9</strong></em>,<em><strong>4</strong></em>,1,7] 最高分和最低分之间的差值是 9 - 4 = 5\n- [<em><strong>9</strong></em>,4,<em><strong>1</strong></em>,7] 最高分和最低分之间的差值是 9 - 1 = 8\n- [<em><strong>9</strong></em>,4,1,<em><strong>7</strong></em>] 最高分和最低分之间的差值是 9 - 7 = 2\n- [9,<em><strong>4</strong></em>,<em><strong>1</strong></em>,7] 最高分和最低分之间的差值是 4 - 1 = 3\n- [9,<em><strong>4</strong></em>,1,<em><strong>7</strong></em>] 最高分和最低分之间的差值是 7 - 4 = 3\n- [9,4,<em><strong>1</strong></em>,<em><strong>7</strong></em>] 最高分和最低分之间的差值是 7 - 1 = 6\n可能的最小差值是 2</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= k &lt;= nums.length &lt;= 1000</code></li>\n\t<li><code>0 &lt;= nums[i] &lt;= 10<sup>5</sup></code></li>\n</ul>\n<div><div>Related Topics</div><div><li>数组</li><li>排序</li><li>滑动窗口</li></div></div>\n\n# 个人解法\n\n排序后，使用滑动窗口\n\n{% tabs categories%}\n<!-- tab Java -->\n```java\nclass Solution {\n    public int minimumDifference(int[] nums, int k) {\n        Arrays.sort(nums);\n        int min = Integer.MAX_VALUE;\n        for (int i = 0; i <= nums.length - k; i++) {\n            min = Math.min(min, nums[i + k - 1] - nums[i]);\n        }\n        return min;\n    }\n}\n```\n<!-- endtab -->\n\n<!-- tab Python3 -->\n```python\nfrom typing import List\n\n\nclass Solution:\n    def minimumDifference(self, nums: List[int], k: int) -> int:\n        if k > 1:\n            num = sorted(nums)\n            return min(num[i + k - 1] - num[i] for i in range(len(num) - k + 1))\n        else:\n            return 0\n```\n<!-- endtab -->\n{% endtabs %}","source":"_posts/day20220211.md","raw":"---\ntitle: 力扣1984:学生分数的最小差值\ndate: 2022-02-11 13:35:01\ntags: [力扣]\ncategories: [算法,力扣,每日一题]\n---\n2022年02月11日 力扣每日一题\n\n# 题目\n<p>给你一个 <strong>下标从 0 开始</strong> 的整数数组 <code>nums</code> ，其中 <code>nums[i]</code> 表示第 <code>i</code> 名学生的分数。另给你一个整数 <code>k</code> 。</p>\n\n<p>从数组中选出任意 <code>k</code> 名学生的分数，使这 <code>k</code> 个分数间 <strong>最高分</strong> 和 <strong>最低分</strong> 的 <strong>差值</strong> 达到<strong> 最小化</strong> 。</p>\n\n<p>返回可能的 <strong>最小差值</strong> 。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入：</strong>nums = [90], k = 1\n<strong>输出：</strong>0\n<strong>解释：</strong>选出 1 名学生的分数，仅有 1 种方法：\n- [<em><strong>90</strong></em>] 最高分和最低分之间的差值是 90 - 90 = 0\n可能的最小差值是 0\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入：</strong>nums = [9,4,1,7], k = 2\n<strong>输出：</strong>2\n<strong>解释：</strong>选出 2 名学生的分数，有 6 种方法：\n- [<em><strong>9</strong></em>,<em><strong>4</strong></em>,1,7] 最高分和最低分之间的差值是 9 - 4 = 5\n- [<em><strong>9</strong></em>,4,<em><strong>1</strong></em>,7] 最高分和最低分之间的差值是 9 - 1 = 8\n- [<em><strong>9</strong></em>,4,1,<em><strong>7</strong></em>] 最高分和最低分之间的差值是 9 - 7 = 2\n- [9,<em><strong>4</strong></em>,<em><strong>1</strong></em>,7] 最高分和最低分之间的差值是 4 - 1 = 3\n- [9,<em><strong>4</strong></em>,1,<em><strong>7</strong></em>] 最高分和最低分之间的差值是 7 - 4 = 3\n- [9,4,<em><strong>1</strong></em>,<em><strong>7</strong></em>] 最高分和最低分之间的差值是 7 - 1 = 6\n可能的最小差值是 2</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= k &lt;= nums.length &lt;= 1000</code></li>\n\t<li><code>0 &lt;= nums[i] &lt;= 10<sup>5</sup></code></li>\n</ul>\n<div><div>Related Topics</div><div><li>数组</li><li>排序</li><li>滑动窗口</li></div></div>\n\n# 个人解法\n\n排序后，使用滑动窗口\n\n{% tabs categories%}\n<!-- tab Java -->\n```java\nclass Solution {\n    public int minimumDifference(int[] nums, int k) {\n        Arrays.sort(nums);\n        int min = Integer.MAX_VALUE;\n        for (int i = 0; i <= nums.length - k; i++) {\n            min = Math.min(min, nums[i + k - 1] - nums[i]);\n        }\n        return min;\n    }\n}\n```\n<!-- endtab -->\n\n<!-- tab Python3 -->\n```python\nfrom typing import List\n\n\nclass Solution:\n    def minimumDifference(self, nums: List[int], k: int) -> int:\n        if k > 1:\n            num = sorted(nums)\n            return min(num[i + k - 1] - num[i] for i in range(len(num) - k + 1))\n        else:\n            return 0\n```\n<!-- endtab -->\n{% endtabs %}","slug":"day20220211","published":1,"updated":"2022-06-03T06:00:55.561Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl42z5h69001l3gn6ex4mcdtq","content":"<p>2022年02月11日 力扣每日一题</p>\n<h1>题目</h1>\n<p>给你一个 <strong>下标从 0 开始</strong> 的整数数组 <code>nums</code> ，其中 <code>nums[i]</code> 表示第 <code>i</code> 名学生的分数。另给你一个整数 <code>k</code> 。</p>\n<p>从数组中选出任意 <code>k</code> 名学生的分数，使这 <code>k</code> 个分数间 <strong>最高分</strong> 和 <strong>最低分</strong> 的 <strong>差值</strong> 达到<strong> 最小化</strong> 。</p>\n<p>返回可能的 <strong>最小差值</strong> 。</p>\n<p>&nbsp;</p>\n<p><strong>示例 1：</strong></p>\n<pre><strong>输入：</strong>nums = [90], k = 1\n<strong>输出：</strong>0\n<strong>解释：</strong>选出 1 名学生的分数，仅有 1 种方法：\n- [<em><strong>90</strong></em>] 最高分和最低分之间的差值是 90 - 90 = 0\n可能的最小差值是 0\n</pre>\n<p><strong>示例 2：</strong></p>\n<pre><strong>输入：</strong>nums = [9,4,1,7], k = 2\n<strong>输出：</strong>2\n<strong>解释：</strong>选出 2 名学生的分数，有 6 种方法：\n- [<em><strong>9</strong></em>,<em><strong>4</strong></em>,1,7] 最高分和最低分之间的差值是 9 - 4 = 5\n- [<em><strong>9</strong></em>,4,<em><strong>1</strong></em>,7] 最高分和最低分之间的差值是 9 - 1 = 8\n- [<em><strong>9</strong></em>,4,1,<em><strong>7</strong></em>] 最高分和最低分之间的差值是 9 - 7 = 2\n- [9,<em><strong>4</strong></em>,<em><strong>1</strong></em>,7] 最高分和最低分之间的差值是 4 - 1 = 3\n- [9,<em><strong>4</strong></em>,1,<em><strong>7</strong></em>] 最高分和最低分之间的差值是 7 - 4 = 3\n- [9,4,<em><strong>1</strong></em>,<em><strong>7</strong></em>] 最高分和最低分之间的差值是 7 - 1 = 6\n可能的最小差值是 2</pre>\n<p>&nbsp;</p>\n<p><strong>提示：</strong></p>\n<ul>\n\t<li><code>1 &lt;= k &lt;= nums.length &lt;= 1000</code></li>\n\t<li><code>0 &lt;= nums[i] &lt;= 10<sup>5</sup></code></li>\n</ul>\n<div><div>Related Topics</div><div><li>数组</li><li>排序</li><li>滑动窗口</li></div></div>\n<h1>个人解法</h1>\n<p>排序后，使用滑动窗口</p>\n<div class=\"tabs\" id=\"categories\"><ul class=\"nav-tabs\"><li class=\"tab active\"><button type=\"button\" data-href=\"#categories-1\">Java</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#categories-2\">Python3</button></li></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"categories-1\"><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">class Solution &#123;\n    public int minimumDifference(int[] nums, int k) &#123;\n        Arrays.sort(nums);\n        int min &#x3D; Integer.MAX_VALUE;\n        for (int i &#x3D; 0; i &lt;&#x3D; nums.length - k; i++) &#123;\n            min &#x3D; Math.min(min, nums[i + k - 1] - nums[i]);\n        &#125;\n        return min;\n    &#125;\n&#125;</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"categories-2\"><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">from typing import List\n\n\nclass Solution:\n    def minimumDifference(self, nums: List[int], k: int) -&gt; int:\n        if k &gt; 1:\n            num &#x3D; sorted(nums)\n            return min(num[i + k - 1] - num[i] for i in range(len(num) - k + 1))\n        else:\n            return 0</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div></div>","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"cover":"https://blog.huangge1199.cn/post/sublimeText4Purchase/bg.jpeg","excerpt":"","more":"<p>2022年02月11日 力扣每日一题</p>\n<h1>题目</h1>\n<p>给你一个 <strong>下标从 0 开始</strong> 的整数数组 <code>nums</code> ，其中 <code>nums[i]</code> 表示第 <code>i</code> 名学生的分数。另给你一个整数 <code>k</code> 。</p>\n<p>从数组中选出任意 <code>k</code> 名学生的分数，使这 <code>k</code> 个分数间 <strong>最高分</strong> 和 <strong>最低分</strong> 的 <strong>差值</strong> 达到<strong> 最小化</strong> 。</p>\n<p>返回可能的 <strong>最小差值</strong> 。</p>\n<p>&nbsp;</p>\n<p><strong>示例 1：</strong></p>\n<pre><strong>输入：</strong>nums = [90], k = 1\n<strong>输出：</strong>0\n<strong>解释：</strong>选出 1 名学生的分数，仅有 1 种方法：\n- [<em><strong>90</strong></em>] 最高分和最低分之间的差值是 90 - 90 = 0\n可能的最小差值是 0\n</pre>\n<p><strong>示例 2：</strong></p>\n<pre><strong>输入：</strong>nums = [9,4,1,7], k = 2\n<strong>输出：</strong>2\n<strong>解释：</strong>选出 2 名学生的分数，有 6 种方法：\n- [<em><strong>9</strong></em>,<em><strong>4</strong></em>,1,7] 最高分和最低分之间的差值是 9 - 4 = 5\n- [<em><strong>9</strong></em>,4,<em><strong>1</strong></em>,7] 最高分和最低分之间的差值是 9 - 1 = 8\n- [<em><strong>9</strong></em>,4,1,<em><strong>7</strong></em>] 最高分和最低分之间的差值是 9 - 7 = 2\n- [9,<em><strong>4</strong></em>,<em><strong>1</strong></em>,7] 最高分和最低分之间的差值是 4 - 1 = 3\n- [9,<em><strong>4</strong></em>,1,<em><strong>7</strong></em>] 最高分和最低分之间的差值是 7 - 4 = 3\n- [9,4,<em><strong>1</strong></em>,<em><strong>7</strong></em>] 最高分和最低分之间的差值是 7 - 1 = 6\n可能的最小差值是 2</pre>\n<p>&nbsp;</p>\n<p><strong>提示：</strong></p>\n<ul>\n\t<li><code>1 &lt;= k &lt;= nums.length &lt;= 1000</code></li>\n\t<li><code>0 &lt;= nums[i] &lt;= 10<sup>5</sup></code></li>\n</ul>\n<div><div>Related Topics</div><div><li>数组</li><li>排序</li><li>滑动窗口</li></div></div>\n<h1>个人解法</h1>\n<p>排序后，使用滑动窗口</p>\n<div class=\"tabs\" id=\"categories\"><ul class=\"nav-tabs\"><li class=\"tab active\"><button type=\"button\" data-href=\"#categories-1\">Java</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#categories-2\">Python3</button></li></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"categories-1\"><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">class Solution &#123;\n    public int minimumDifference(int[] nums, int k) &#123;\n        Arrays.sort(nums);\n        int min &#x3D; Integer.MAX_VALUE;\n        for (int i &#x3D; 0; i &lt;&#x3D; nums.length - k; i++) &#123;\n            min &#x3D; Math.min(min, nums[i + k - 1] - nums[i]);\n        &#125;\n        return min;\n    &#125;\n&#125;</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"categories-2\"><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">from typing import List\n\n\nclass Solution:\n    def minimumDifference(self, nums: List[int], k: int) -&gt; int:\n        if k &gt; 1:\n            num &#x3D; sorted(nums)\n            return min(num[i + k - 1] - num[i] for i in range(len(num) - k + 1))\n        else:\n            return 0</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div></div>"},{"title":"力扣1020:飞地的数量","date":"2022-02-12T14:22:26.000Z","_content":"2022年02月12日 力扣每日一题\n\n# 题目\n<p>给你一个大小为 <code>m x n</code> 的二进制矩阵 <code>grid</code> ，其中 <code>0</code> 表示一个海洋单元格、<code>1</code> 表示一个陆地单元格。</p>\n\n<p>一次 <strong>移动</strong> 是指从一个陆地单元格走到另一个相邻（<strong>上、下、左、右</strong>）的陆地单元格或跨过 <code>grid</code> 的边界。</p>\n\n<p>返回网格中<strong> 无法 </strong>在任意次数的移动中离开网格边界的陆地单元格的数量。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/02/18/enclaves1.jpg\" style=\"height: 200px; width: 200px;\" />\n<pre>\n<strong>输入：</strong>grid = [[0,0,0,0],[1,0,1,0],[0,1,1,0],[0,0,0,0]]\n<strong>输出：</strong>3\n<strong>解释：</strong>有三个 1 被 0 包围。一个 1 没有被包围，因为它在边界上。\n</pre>\n\n<p><strong>示例 2：</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/02/18/enclaves2.jpg\" style=\"height: 200px; width: 200px;\" />\n<pre>\n<strong>输入：</strong>grid = [[0,1,1,0],[0,0,1,0],[0,0,1,0],[0,0,0,0]]\n<strong>输出：</strong>0\n<strong>解释：</strong>所有 1 都在边界上或可以到达边界。\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>m == grid.length</code></li>\n\t<li><code>n == grid[i].length</code></li>\n\t<li><code>1 &lt;= m, n &lt;= 500</code></li>\n\t<li><code>grid[i][j]</code> 的值为 <code>0</code> 或 <code>1</code></li>\n</ul>\n<div><div>Related Topics</div><div><li>深度优先搜索</li><li>广度优先搜索</li><li>并查集</li><li>数组</li><li>矩阵</li></div></div>\n\n# 个人解法\n\n解题方法：广度优先算法\n\n这道题是统计无法力扣网络边界的陆地单元格数量，我的思路是反过来统计，用`总陆地数量`-`能离开的陆地数量`\n\n这样的话，我就可以用广度优先算法来进行解决，步骤如下：\n\n1. 将边界的单元格坐标加入到队列，并计数\n2. 依次从队列中取出\n3. 将取出陆地的相邻陆地加入到队列中，并计数\n4. 当队列为空时，遍历数组获取总陆地数，并减去能离开的陆地数量\n\n{% tabs categories%}\n<!-- tab Java -->\n```java\nimport java.util.LinkedList;\nimport java.util.Queue;\n\nclass Solution {\n    public int numEnclaves(int[][] grid) {\n        boolean[][] use = new boolean[grid.length][grid[0].length];\n        Queue<int[]> queue = new LinkedList<>();\n        int xl = grid.length;\n        int yl = grid[0].length;\n        int count = 0;\n        for (int i = 0; i < xl; i++) {\n            if (grid[i][0] == 1) {\n                queue.add(new int[]{i, 0});\n                use[i][0] = true;\n                count++;\n            }\n            if (grid[i][yl - 1] == 1 && !use[i][yl - 1]) {\n                queue.add(new int[]{i, yl - 1});\n                use[i][yl - 1] = true;\n                count++;\n            }\n        }\n        for (int i = 1; i < yl - 1; i++) {\n            if (grid[0][i] == 1 && !use[0][i]) {\n                queue.add(new int[]{0, i});\n                use[0][i] = true;\n                count++;\n            }\n            if (grid[xl - 1][i] == 1 && !use[xl - 1][i]) {\n                queue.add(new int[]{xl - 1, i});\n                use[xl - 1][i] = true;\n                count++;\n            }\n        }\n        int[] xp = new int[]{1, -1, 0, 0};\n        int[] yp = new int[]{0, 0, 1, -1};\n        while (!queue.isEmpty()) {\n            int[] arr = queue.poll();\n            int x = arr[0];\n            int y = arr[1];\n            for (int k = 0; k < 4; k++) {\n                int nx = x + xp[k];\n                int ny = y + yp[k];\n                if (nx >= 0 && nx < grid.length && ny >= 0 && ny < grid[0].length && grid[nx][ny] == 1 && !use[nx][ny]) {\n                    queue.add(new int[]{nx, ny});\n                    use[nx][ny] = true;\n                    count++;\n                }\n            }\n        }\n        int sum = 0;\n        for (int[] ints : grid) {\n            for (int j = 0; j < yl; j++) {\n                if (ints[j] == 1) {\n                    sum++;\n                }\n            }\n        }\n        return sum - count;\n    }\n}\n```\n<!-- endtab -->\n\n<!-- tab Python3 -->\n```python\nfrom collections import deque\nfrom typing import List\n\n\nclass Solution:\n    def numEnclaves(self, grid: List[List[int]]) -> int:\n        use = [[False] * len(grid[0]) for _ in range(len(grid))]\n        queue = deque()\n        xl = len(grid)\n        yl = len(grid[0])\n        count = 0\n        for i in range(xl):\n            if grid[i][0] == 1:\n                queue.append((i, 0))\n                use[i][0] = True\n                count += 1\n            if grid[i][yl - 1] == 1 and not use[i][yl - 1]:\n                queue.append((i, yl - 1))\n                use[i][yl - 1] = True\n                count += 1\n        for i in range(1, yl - 1):\n            if grid[0][i] == 1 and not use[0][i]:\n                queue.append((0, i))\n                use[0][i] = True\n                count += 1\n            if grid[xl - 1][i] == 1 and not use[xl - 1][i]:\n                queue.append((xl - 1, i))\n                use[xl - 1][i] = True\n                count += 1\n        while queue:\n            x, y = queue.pop()\n            for nx, ny in ((x - 1, y), (x + 1, y), (x, y - 1), (x, y + 1)):\n                if nx < 0 or nx >= len(grid) or ny < 0 or ny >= len(grid[0]) or grid[nx][ny] == 0 or use[nx][ny]:\n                    continue\n                queue.append((nx, ny))\n                use[nx][ny] = True\n                count += 1\n        sc = sum([sum(row) for row in grid])\n        return sc - count\n```\n<!-- endtab -->\n{% endtabs %}\n","source":"_posts/day20220212.md","raw":"---\ntitle: 力扣1020:飞地的数量\ndate: 2022-02-12 22:22:26\ntags: [力扣]\ncategories: [算法,力扣,每日一题]\n---\n2022年02月12日 力扣每日一题\n\n# 题目\n<p>给你一个大小为 <code>m x n</code> 的二进制矩阵 <code>grid</code> ，其中 <code>0</code> 表示一个海洋单元格、<code>1</code> 表示一个陆地单元格。</p>\n\n<p>一次 <strong>移动</strong> 是指从一个陆地单元格走到另一个相邻（<strong>上、下、左、右</strong>）的陆地单元格或跨过 <code>grid</code> 的边界。</p>\n\n<p>返回网格中<strong> 无法 </strong>在任意次数的移动中离开网格边界的陆地单元格的数量。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/02/18/enclaves1.jpg\" style=\"height: 200px; width: 200px;\" />\n<pre>\n<strong>输入：</strong>grid = [[0,0,0,0],[1,0,1,0],[0,1,1,0],[0,0,0,0]]\n<strong>输出：</strong>3\n<strong>解释：</strong>有三个 1 被 0 包围。一个 1 没有被包围，因为它在边界上。\n</pre>\n\n<p><strong>示例 2：</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/02/18/enclaves2.jpg\" style=\"height: 200px; width: 200px;\" />\n<pre>\n<strong>输入：</strong>grid = [[0,1,1,0],[0,0,1,0],[0,0,1,0],[0,0,0,0]]\n<strong>输出：</strong>0\n<strong>解释：</strong>所有 1 都在边界上或可以到达边界。\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>m == grid.length</code></li>\n\t<li><code>n == grid[i].length</code></li>\n\t<li><code>1 &lt;= m, n &lt;= 500</code></li>\n\t<li><code>grid[i][j]</code> 的值为 <code>0</code> 或 <code>1</code></li>\n</ul>\n<div><div>Related Topics</div><div><li>深度优先搜索</li><li>广度优先搜索</li><li>并查集</li><li>数组</li><li>矩阵</li></div></div>\n\n# 个人解法\n\n解题方法：广度优先算法\n\n这道题是统计无法力扣网络边界的陆地单元格数量，我的思路是反过来统计，用`总陆地数量`-`能离开的陆地数量`\n\n这样的话，我就可以用广度优先算法来进行解决，步骤如下：\n\n1. 将边界的单元格坐标加入到队列，并计数\n2. 依次从队列中取出\n3. 将取出陆地的相邻陆地加入到队列中，并计数\n4. 当队列为空时，遍历数组获取总陆地数，并减去能离开的陆地数量\n\n{% tabs categories%}\n<!-- tab Java -->\n```java\nimport java.util.LinkedList;\nimport java.util.Queue;\n\nclass Solution {\n    public int numEnclaves(int[][] grid) {\n        boolean[][] use = new boolean[grid.length][grid[0].length];\n        Queue<int[]> queue = new LinkedList<>();\n        int xl = grid.length;\n        int yl = grid[0].length;\n        int count = 0;\n        for (int i = 0; i < xl; i++) {\n            if (grid[i][0] == 1) {\n                queue.add(new int[]{i, 0});\n                use[i][0] = true;\n                count++;\n            }\n            if (grid[i][yl - 1] == 1 && !use[i][yl - 1]) {\n                queue.add(new int[]{i, yl - 1});\n                use[i][yl - 1] = true;\n                count++;\n            }\n        }\n        for (int i = 1; i < yl - 1; i++) {\n            if (grid[0][i] == 1 && !use[0][i]) {\n                queue.add(new int[]{0, i});\n                use[0][i] = true;\n                count++;\n            }\n            if (grid[xl - 1][i] == 1 && !use[xl - 1][i]) {\n                queue.add(new int[]{xl - 1, i});\n                use[xl - 1][i] = true;\n                count++;\n            }\n        }\n        int[] xp = new int[]{1, -1, 0, 0};\n        int[] yp = new int[]{0, 0, 1, -1};\n        while (!queue.isEmpty()) {\n            int[] arr = queue.poll();\n            int x = arr[0];\n            int y = arr[1];\n            for (int k = 0; k < 4; k++) {\n                int nx = x + xp[k];\n                int ny = y + yp[k];\n                if (nx >= 0 && nx < grid.length && ny >= 0 && ny < grid[0].length && grid[nx][ny] == 1 && !use[nx][ny]) {\n                    queue.add(new int[]{nx, ny});\n                    use[nx][ny] = true;\n                    count++;\n                }\n            }\n        }\n        int sum = 0;\n        for (int[] ints : grid) {\n            for (int j = 0; j < yl; j++) {\n                if (ints[j] == 1) {\n                    sum++;\n                }\n            }\n        }\n        return sum - count;\n    }\n}\n```\n<!-- endtab -->\n\n<!-- tab Python3 -->\n```python\nfrom collections import deque\nfrom typing import List\n\n\nclass Solution:\n    def numEnclaves(self, grid: List[List[int]]) -> int:\n        use = [[False] * len(grid[0]) for _ in range(len(grid))]\n        queue = deque()\n        xl = len(grid)\n        yl = len(grid[0])\n        count = 0\n        for i in range(xl):\n            if grid[i][0] == 1:\n                queue.append((i, 0))\n                use[i][0] = True\n                count += 1\n            if grid[i][yl - 1] == 1 and not use[i][yl - 1]:\n                queue.append((i, yl - 1))\n                use[i][yl - 1] = True\n                count += 1\n        for i in range(1, yl - 1):\n            if grid[0][i] == 1 and not use[0][i]:\n                queue.append((0, i))\n                use[0][i] = True\n                count += 1\n            if grid[xl - 1][i] == 1 and not use[xl - 1][i]:\n                queue.append((xl - 1, i))\n                use[xl - 1][i] = True\n                count += 1\n        while queue:\n            x, y = queue.pop()\n            for nx, ny in ((x - 1, y), (x + 1, y), (x, y - 1), (x, y + 1)):\n                if nx < 0 or nx >= len(grid) or ny < 0 or ny >= len(grid[0]) or grid[nx][ny] == 0 or use[nx][ny]:\n                    continue\n                queue.append((nx, ny))\n                use[nx][ny] = True\n                count += 1\n        sc = sum([sum(row) for row in grid])\n        return sc - count\n```\n<!-- endtab -->\n{% endtabs %}\n","slug":"day20220212","published":1,"updated":"2022-06-03T06:00:55.561Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl42z5h6b001q3gn6f4lc7t1r","content":"<p>2022年02月12日 力扣每日一题</p>\n<h1>题目</h1>\n<p>给你一个大小为 <code>m x n</code> 的二进制矩阵 <code>grid</code> ，其中 <code>0</code> 表示一个海洋单元格、<code>1</code> 表示一个陆地单元格。</p>\n<p>一次 <strong>移动</strong> 是指从一个陆地单元格走到另一个相邻（<strong>上、下、左、右</strong>）的陆地单元格或跨过 <code>grid</code> 的边界。</p>\n<p>返回网格中<strong> 无法 </strong>在任意次数的移动中离开网格边界的陆地单元格的数量。</p>\n<p>&nbsp;</p>\n<p><strong>示例 1：</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/02/18/enclaves1.jpg\" style=\"height: 200px; width: 200px;\" />\n<pre>\n<strong>输入：</strong>grid = [[0,0,0,0],[1,0,1,0],[0,1,1,0],[0,0,0,0]]\n<strong>输出：</strong>3\n<strong>解释：</strong>有三个 1 被 0 包围。一个 1 没有被包围，因为它在边界上。\n</pre>\n<p><strong>示例 2：</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/02/18/enclaves2.jpg\" style=\"height: 200px; width: 200px;\" />\n<pre>\n<strong>输入：</strong>grid = [[0,1,1,0],[0,0,1,0],[0,0,1,0],[0,0,0,0]]\n<strong>输出：</strong>0\n<strong>解释：</strong>所有 1 都在边界上或可以到达边界。\n</pre>\n<p>&nbsp;</p>\n<p><strong>提示：</strong></p>\n<ul>\n\t<li><code>m == grid.length</code></li>\n\t<li><code>n == grid[i].length</code></li>\n\t<li><code>1 &lt;= m, n &lt;= 500</code></li>\n\t<li><code>grid[i][j]</code> 的值为 <code>0</code> 或 <code>1</code></li>\n</ul>\n<div><div>Related Topics</div><div><li>深度优先搜索</li><li>广度优先搜索</li><li>并查集</li><li>数组</li><li>矩阵</li></div></div>\n<h1>个人解法</h1>\n<p>解题方法：广度优先算法</p>\n<p>这道题是统计无法力扣网络边界的陆地单元格数量，我的思路是反过来统计，用<code>总陆地数量</code>-<code>能离开的陆地数量</code></p>\n<p>这样的话，我就可以用广度优先算法来进行解决，步骤如下：</p>\n<ol>\n<li>将边界的单元格坐标加入到队列，并计数</li>\n<li>依次从队列中取出</li>\n<li>将取出陆地的相邻陆地加入到队列中，并计数</li>\n<li>当队列为空时，遍历数组获取总陆地数，并减去能离开的陆地数量</li>\n</ol>\n<div class=\"tabs\" id=\"categories\"><ul class=\"nav-tabs\"><li class=\"tab active\"><button type=\"button\" data-href=\"#categories-1\">Java</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#categories-2\">Python3</button></li></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"categories-1\"><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">import java.util.LinkedList;\nimport java.util.Queue;\n\nclass Solution &#123;\n    public int numEnclaves(int[][] grid) &#123;\n        boolean[][] use &#x3D; new boolean[grid.length][grid[0].length];\n        Queue&lt;int[]&gt; queue &#x3D; new LinkedList&lt;&gt;();\n        int xl &#x3D; grid.length;\n        int yl &#x3D; grid[0].length;\n        int count &#x3D; 0;\n        for (int i &#x3D; 0; i &lt; xl; i++) &#123;\n            if (grid[i][0] &#x3D;&#x3D; 1) &#123;\n                queue.add(new int[]&#123;i, 0&#125;);\n                use[i][0] &#x3D; true;\n                count++;\n            &#125;\n            if (grid[i][yl - 1] &#x3D;&#x3D; 1 &amp;&amp; !use[i][yl - 1]) &#123;\n                queue.add(new int[]&#123;i, yl - 1&#125;);\n                use[i][yl - 1] &#x3D; true;\n                count++;\n            &#125;\n        &#125;\n        for (int i &#x3D; 1; i &lt; yl - 1; i++) &#123;\n            if (grid[0][i] &#x3D;&#x3D; 1 &amp;&amp; !use[0][i]) &#123;\n                queue.add(new int[]&#123;0, i&#125;);\n                use[0][i] &#x3D; true;\n                count++;\n            &#125;\n            if (grid[xl - 1][i] &#x3D;&#x3D; 1 &amp;&amp; !use[xl - 1][i]) &#123;\n                queue.add(new int[]&#123;xl - 1, i&#125;);\n                use[xl - 1][i] &#x3D; true;\n                count++;\n            &#125;\n        &#125;\n        int[] xp &#x3D; new int[]&#123;1, -1, 0, 0&#125;;\n        int[] yp &#x3D; new int[]&#123;0, 0, 1, -1&#125;;\n        while (!queue.isEmpty()) &#123;\n            int[] arr &#x3D; queue.poll();\n            int x &#x3D; arr[0];\n            int y &#x3D; arr[1];\n            for (int k &#x3D; 0; k &lt; 4; k++) &#123;\n                int nx &#x3D; x + xp[k];\n                int ny &#x3D; y + yp[k];\n                if (nx &gt;&#x3D; 0 &amp;&amp; nx &lt; grid.length &amp;&amp; ny &gt;&#x3D; 0 &amp;&amp; ny &lt; grid[0].length &amp;&amp; grid[nx][ny] &#x3D;&#x3D; 1 &amp;&amp; !use[nx][ny]) &#123;\n                    queue.add(new int[]&#123;nx, ny&#125;);\n                    use[nx][ny] &#x3D; true;\n                    count++;\n                &#125;\n            &#125;\n        &#125;\n        int sum &#x3D; 0;\n        for (int[] ints : grid) &#123;\n            for (int j &#x3D; 0; j &lt; yl; j++) &#123;\n                if (ints[j] &#x3D;&#x3D; 1) &#123;\n                    sum++;\n                &#125;\n            &#125;\n        &#125;\n        return sum - count;\n    &#125;\n&#125;</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"categories-2\"><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">from collections import deque\nfrom typing import List\n\n\nclass Solution:\n    def numEnclaves(self, grid: List[List[int]]) -&gt; int:\n        use &#x3D; [[False] * len(grid[0]) for _ in range(len(grid))]\n        queue &#x3D; deque()\n        xl &#x3D; len(grid)\n        yl &#x3D; len(grid[0])\n        count &#x3D; 0\n        for i in range(xl):\n            if grid[i][0] &#x3D;&#x3D; 1:\n                queue.append((i, 0))\n                use[i][0] &#x3D; True\n                count +&#x3D; 1\n            if grid[i][yl - 1] &#x3D;&#x3D; 1 and not use[i][yl - 1]:\n                queue.append((i, yl - 1))\n                use[i][yl - 1] &#x3D; True\n                count +&#x3D; 1\n        for i in range(1, yl - 1):\n            if grid[0][i] &#x3D;&#x3D; 1 and not use[0][i]:\n                queue.append((0, i))\n                use[0][i] &#x3D; True\n                count +&#x3D; 1\n            if grid[xl - 1][i] &#x3D;&#x3D; 1 and not use[xl - 1][i]:\n                queue.append((xl - 1, i))\n                use[xl - 1][i] &#x3D; True\n                count +&#x3D; 1\n        while queue:\n            x, y &#x3D; queue.pop()\n            for nx, ny in ((x - 1, y), (x + 1, y), (x, y - 1), (x, y + 1)):\n                if nx &lt; 0 or nx &gt;&#x3D; len(grid) or ny &lt; 0 or ny &gt;&#x3D; len(grid[0]) or grid[nx][ny] &#x3D;&#x3D; 0 or use[nx][ny]:\n                    continue\n                queue.append((nx, ny))\n                use[nx][ny] &#x3D; True\n                count +&#x3D; 1\n        sc &#x3D; sum([sum(row) for row in grid])\n        return sc - count</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div></div>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"cover":"https://blog.huangge1199.cn/post/day20220120/bg.jpeg","excerpt":"","more":"<p>2022年02月12日 力扣每日一题</p>\n<h1>题目</h1>\n<p>给你一个大小为 <code>m x n</code> 的二进制矩阵 <code>grid</code> ，其中 <code>0</code> 表示一个海洋单元格、<code>1</code> 表示一个陆地单元格。</p>\n<p>一次 <strong>移动</strong> 是指从一个陆地单元格走到另一个相邻（<strong>上、下、左、右</strong>）的陆地单元格或跨过 <code>grid</code> 的边界。</p>\n<p>返回网格中<strong> 无法 </strong>在任意次数的移动中离开网格边界的陆地单元格的数量。</p>\n<p>&nbsp;</p>\n<p><strong>示例 1：</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/02/18/enclaves1.jpg\" style=\"height: 200px; width: 200px;\" />\n<pre>\n<strong>输入：</strong>grid = [[0,0,0,0],[1,0,1,0],[0,1,1,0],[0,0,0,0]]\n<strong>输出：</strong>3\n<strong>解释：</strong>有三个 1 被 0 包围。一个 1 没有被包围，因为它在边界上。\n</pre>\n<p><strong>示例 2：</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/02/18/enclaves2.jpg\" style=\"height: 200px; width: 200px;\" />\n<pre>\n<strong>输入：</strong>grid = [[0,1,1,0],[0,0,1,0],[0,0,1,0],[0,0,0,0]]\n<strong>输出：</strong>0\n<strong>解释：</strong>所有 1 都在边界上或可以到达边界。\n</pre>\n<p>&nbsp;</p>\n<p><strong>提示：</strong></p>\n<ul>\n\t<li><code>m == grid.length</code></li>\n\t<li><code>n == grid[i].length</code></li>\n\t<li><code>1 &lt;= m, n &lt;= 500</code></li>\n\t<li><code>grid[i][j]</code> 的值为 <code>0</code> 或 <code>1</code></li>\n</ul>\n<div><div>Related Topics</div><div><li>深度优先搜索</li><li>广度优先搜索</li><li>并查集</li><li>数组</li><li>矩阵</li></div></div>\n<h1>个人解法</h1>\n<p>解题方法：广度优先算法</p>\n<p>这道题是统计无法力扣网络边界的陆地单元格数量，我的思路是反过来统计，用<code>总陆地数量</code>-<code>能离开的陆地数量</code></p>\n<p>这样的话，我就可以用广度优先算法来进行解决，步骤如下：</p>\n<ol>\n<li>将边界的单元格坐标加入到队列，并计数</li>\n<li>依次从队列中取出</li>\n<li>将取出陆地的相邻陆地加入到队列中，并计数</li>\n<li>当队列为空时，遍历数组获取总陆地数，并减去能离开的陆地数量</li>\n</ol>\n<div class=\"tabs\" id=\"categories\"><ul class=\"nav-tabs\"><li class=\"tab active\"><button type=\"button\" data-href=\"#categories-1\">Java</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#categories-2\">Python3</button></li></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"categories-1\"><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">import java.util.LinkedList;\nimport java.util.Queue;\n\nclass Solution &#123;\n    public int numEnclaves(int[][] grid) &#123;\n        boolean[][] use &#x3D; new boolean[grid.length][grid[0].length];\n        Queue&lt;int[]&gt; queue &#x3D; new LinkedList&lt;&gt;();\n        int xl &#x3D; grid.length;\n        int yl &#x3D; grid[0].length;\n        int count &#x3D; 0;\n        for (int i &#x3D; 0; i &lt; xl; i++) &#123;\n            if (grid[i][0] &#x3D;&#x3D; 1) &#123;\n                queue.add(new int[]&#123;i, 0&#125;);\n                use[i][0] &#x3D; true;\n                count++;\n            &#125;\n            if (grid[i][yl - 1] &#x3D;&#x3D; 1 &amp;&amp; !use[i][yl - 1]) &#123;\n                queue.add(new int[]&#123;i, yl - 1&#125;);\n                use[i][yl - 1] &#x3D; true;\n                count++;\n            &#125;\n        &#125;\n        for (int i &#x3D; 1; i &lt; yl - 1; i++) &#123;\n            if (grid[0][i] &#x3D;&#x3D; 1 &amp;&amp; !use[0][i]) &#123;\n                queue.add(new int[]&#123;0, i&#125;);\n                use[0][i] &#x3D; true;\n                count++;\n            &#125;\n            if (grid[xl - 1][i] &#x3D;&#x3D; 1 &amp;&amp; !use[xl - 1][i]) &#123;\n                queue.add(new int[]&#123;xl - 1, i&#125;);\n                use[xl - 1][i] &#x3D; true;\n                count++;\n            &#125;\n        &#125;\n        int[] xp &#x3D; new int[]&#123;1, -1, 0, 0&#125;;\n        int[] yp &#x3D; new int[]&#123;0, 0, 1, -1&#125;;\n        while (!queue.isEmpty()) &#123;\n            int[] arr &#x3D; queue.poll();\n            int x &#x3D; arr[0];\n            int y &#x3D; arr[1];\n            for (int k &#x3D; 0; k &lt; 4; k++) &#123;\n                int nx &#x3D; x + xp[k];\n                int ny &#x3D; y + yp[k];\n                if (nx &gt;&#x3D; 0 &amp;&amp; nx &lt; grid.length &amp;&amp; ny &gt;&#x3D; 0 &amp;&amp; ny &lt; grid[0].length &amp;&amp; grid[nx][ny] &#x3D;&#x3D; 1 &amp;&amp; !use[nx][ny]) &#123;\n                    queue.add(new int[]&#123;nx, ny&#125;);\n                    use[nx][ny] &#x3D; true;\n                    count++;\n                &#125;\n            &#125;\n        &#125;\n        int sum &#x3D; 0;\n        for (int[] ints : grid) &#123;\n            for (int j &#x3D; 0; j &lt; yl; j++) &#123;\n                if (ints[j] &#x3D;&#x3D; 1) &#123;\n                    sum++;\n                &#125;\n            &#125;\n        &#125;\n        return sum - count;\n    &#125;\n&#125;</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"categories-2\"><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">from collections import deque\nfrom typing import List\n\n\nclass Solution:\n    def numEnclaves(self, grid: List[List[int]]) -&gt; int:\n        use &#x3D; [[False] * len(grid[0]) for _ in range(len(grid))]\n        queue &#x3D; deque()\n        xl &#x3D; len(grid)\n        yl &#x3D; len(grid[0])\n        count &#x3D; 0\n        for i in range(xl):\n            if grid[i][0] &#x3D;&#x3D; 1:\n                queue.append((i, 0))\n                use[i][0] &#x3D; True\n                count +&#x3D; 1\n            if grid[i][yl - 1] &#x3D;&#x3D; 1 and not use[i][yl - 1]:\n                queue.append((i, yl - 1))\n                use[i][yl - 1] &#x3D; True\n                count +&#x3D; 1\n        for i in range(1, yl - 1):\n            if grid[0][i] &#x3D;&#x3D; 1 and not use[0][i]:\n                queue.append((0, i))\n                use[0][i] &#x3D; True\n                count +&#x3D; 1\n            if grid[xl - 1][i] &#x3D;&#x3D; 1 and not use[xl - 1][i]:\n                queue.append((xl - 1, i))\n                use[xl - 1][i] &#x3D; True\n                count +&#x3D; 1\n        while queue:\n            x, y &#x3D; queue.pop()\n            for nx, ny in ((x - 1, y), (x + 1, y), (x, y - 1), (x, y + 1)):\n                if nx &lt; 0 or nx &gt;&#x3D; len(grid) or ny &lt; 0 or ny &gt;&#x3D; len(grid[0]) or grid[nx][ny] &#x3D;&#x3D; 0 or use[nx][ny]:\n                    continue\n                queue.append((nx, ny))\n                use[nx][ny] &#x3D; True\n                count +&#x3D; 1\n        sc &#x3D; sum([sum(row) for row in grid])\n        return sc - count</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div></div>\n"},{"title":"力扣1189:“气球” 的最大数量","date":"2022-02-13T14:32:48.000Z","_content":"2022年02月13日 力扣每日一题\n\n# 题目\n<p>给你一个字符串&nbsp;<code>text</code>，你需要使用 <code>text</code> 中的字母来拼凑尽可能多的单词&nbsp;<strong>&quot;balloon&quot;（气球）</strong>。</p>\n\n<p>字符串&nbsp;<code>text</code> 中的每个字母最多只能被使用一次。请你返回最多可以拼凑出多少个单词&nbsp;<strong>&quot;balloon&quot;</strong>。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<p><strong><img alt=\"\" src=\"1536_ex1_upd.jpeg\" style=\"height: 35px; width: 154px;\"></strong></p>\n\n<pre><strong>输入：</strong>text = &quot;nlaebolko&quot;\n<strong>输出：</strong>1\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<p><strong><img alt=\"\" src=\"1536_ex2_upd.jpeg\" style=\"height: 35px; width: 233px;\"></strong></p>\n\n<pre><strong>输入：</strong>text = &quot;loonbalxballpoon&quot;\n<strong>输出：</strong>2\n</pre>\n\n<p><strong>示例 3：</strong></p>\n\n<pre><strong>输入：</strong>text = &quot;leetcode&quot;\n<strong>输出：</strong>0\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= text.length &lt;= 10^4</code></li>\n\t<li><code>text</code>&nbsp;全部由小写英文字母组成</li>\n</ul>\n<div><div>Related Topics</div><div><li>哈希表</li><li>字符串</li><li>计数</li></div></div>\n\n# 个人解法\n\n一个单词”balloon”分别需要一个'b'、'a'、'n'，以及二个'l'、'o'\n首先我们统计给的单词中每个字母的个数\n然后统计'b'、'a'、'n'数量以及'l'、'o'除以2的最小值\n\n{% tabs categories%}\n<!-- tab Java -->\n```java\nclass Solution {\n    public int maxNumberOfBalloons(String text) {\n        int[] arrs = new int[26];\n        for (char ch : text.toCharArray()) {\n            arrs[ch - 'a']++;\n        }\n        int count = Math.min(arrs[0], arrs[1]);\n        count = Math.min(count, arrs['l' - 'a'] / 2);\n        count = Math.min(count, arrs['o' - 'a'] / 2);\n        count = Math.min(count, arrs['n' - 'a']);\n        return count;\n    }\n}\n```\n<!-- endtab -->\n\n<!-- tab Python3 -->\n```python\nclass Solution:\n    def maxNumberOfBalloons(self, text: str) -> int:\n        return min(cnts[ch] // 2 if ch in \"lo\" else cnts[ch] for ch in \"balon\") if (cnts := Counter(text)) else 0\n```\n<!-- endtab -->\n{% endtabs %}\n","source":"_posts/day20220213.md","raw":"---\ntitle: 力扣1189:“气球” 的最大数量\ndate: 2022-02-13 22:32:48\ntags: [力扣]\ncategories: [算法,力扣,每日一题]\n---\n2022年02月13日 力扣每日一题\n\n# 题目\n<p>给你一个字符串&nbsp;<code>text</code>，你需要使用 <code>text</code> 中的字母来拼凑尽可能多的单词&nbsp;<strong>&quot;balloon&quot;（气球）</strong>。</p>\n\n<p>字符串&nbsp;<code>text</code> 中的每个字母最多只能被使用一次。请你返回最多可以拼凑出多少个单词&nbsp;<strong>&quot;balloon&quot;</strong>。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<p><strong><img alt=\"\" src=\"1536_ex1_upd.jpeg\" style=\"height: 35px; width: 154px;\"></strong></p>\n\n<pre><strong>输入：</strong>text = &quot;nlaebolko&quot;\n<strong>输出：</strong>1\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<p><strong><img alt=\"\" src=\"1536_ex2_upd.jpeg\" style=\"height: 35px; width: 233px;\"></strong></p>\n\n<pre><strong>输入：</strong>text = &quot;loonbalxballpoon&quot;\n<strong>输出：</strong>2\n</pre>\n\n<p><strong>示例 3：</strong></p>\n\n<pre><strong>输入：</strong>text = &quot;leetcode&quot;\n<strong>输出：</strong>0\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= text.length &lt;= 10^4</code></li>\n\t<li><code>text</code>&nbsp;全部由小写英文字母组成</li>\n</ul>\n<div><div>Related Topics</div><div><li>哈希表</li><li>字符串</li><li>计数</li></div></div>\n\n# 个人解法\n\n一个单词”balloon”分别需要一个'b'、'a'、'n'，以及二个'l'、'o'\n首先我们统计给的单词中每个字母的个数\n然后统计'b'、'a'、'n'数量以及'l'、'o'除以2的最小值\n\n{% tabs categories%}\n<!-- tab Java -->\n```java\nclass Solution {\n    public int maxNumberOfBalloons(String text) {\n        int[] arrs = new int[26];\n        for (char ch : text.toCharArray()) {\n            arrs[ch - 'a']++;\n        }\n        int count = Math.min(arrs[0], arrs[1]);\n        count = Math.min(count, arrs['l' - 'a'] / 2);\n        count = Math.min(count, arrs['o' - 'a'] / 2);\n        count = Math.min(count, arrs['n' - 'a']);\n        return count;\n    }\n}\n```\n<!-- endtab -->\n\n<!-- tab Python3 -->\n```python\nclass Solution:\n    def maxNumberOfBalloons(self, text: str) -> int:\n        return min(cnts[ch] // 2 if ch in \"lo\" else cnts[ch] for ch in \"balon\") if (cnts := Counter(text)) else 0\n```\n<!-- endtab -->\n{% endtabs %}\n","slug":"day20220213","published":1,"updated":"2022-06-03T06:00:55.561Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl42z5h6c001t3gn6esa293i7","content":"<p>2022年02月13日 力扣每日一题</p>\n<h1>题目</h1>\n<p>给你一个字符串&nbsp;<code>text</code>，你需要使用 <code>text</code> 中的字母来拼凑尽可能多的单词&nbsp;<strong>&quot;balloon&quot;（气球）</strong>。</p>\n<p>字符串&nbsp;<code>text</code> 中的每个字母最多只能被使用一次。请你返回最多可以拼凑出多少个单词&nbsp;<strong>&quot;balloon&quot;</strong>。</p>\n<p>&nbsp;</p>\n<p><strong>示例 1：</strong></p>\n<p><strong><img alt=\"\" src=\"1536_ex1_upd.jpeg\" style=\"height: 35px; width: 154px;\"></strong></p>\n<pre><strong>输入：</strong>text = &quot;nlaebolko&quot;\n<strong>输出：</strong>1\n</pre>\n<p><strong>示例 2：</strong></p>\n<p><strong><img alt=\"\" src=\"1536_ex2_upd.jpeg\" style=\"height: 35px; width: 233px;\"></strong></p>\n<pre><strong>输入：</strong>text = &quot;loonbalxballpoon&quot;\n<strong>输出：</strong>2\n</pre>\n<p><strong>示例 3：</strong></p>\n<pre><strong>输入：</strong>text = &quot;leetcode&quot;\n<strong>输出：</strong>0\n</pre>\n<p>&nbsp;</p>\n<p><strong>提示：</strong></p>\n<ul>\n\t<li><code>1 &lt;= text.length &lt;= 10^4</code></li>\n\t<li><code>text</code>&nbsp;全部由小写英文字母组成</li>\n</ul>\n<div><div>Related Topics</div><div><li>哈希表</li><li>字符串</li><li>计数</li></div></div>\n<h1>个人解法</h1>\n<p>一个单词”balloon”分别需要一个’b’、‘a’、‘n’，以及二个’l’、‘o’<br>\n首先我们统计给的单词中每个字母的个数<br>\n然后统计’b’、‘a’、‘n’数量以及’l’、'o’除以2的最小值</p>\n<div class=\"tabs\" id=\"categories\"><ul class=\"nav-tabs\"><li class=\"tab active\"><button type=\"button\" data-href=\"#categories-1\">Java</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#categories-2\">Python3</button></li></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"categories-1\"><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">class Solution &#123;\n    public int maxNumberOfBalloons(String text) &#123;\n        int[] arrs &#x3D; new int[26];\n        for (char ch : text.toCharArray()) &#123;\n            arrs[ch - &#39;a&#39;]++;\n        &#125;\n        int count &#x3D; Math.min(arrs[0], arrs[1]);\n        count &#x3D; Math.min(count, arrs[&#39;l&#39; - &#39;a&#39;] &#x2F; 2);\n        count &#x3D; Math.min(count, arrs[&#39;o&#39; - &#39;a&#39;] &#x2F; 2);\n        count &#x3D; Math.min(count, arrs[&#39;n&#39; - &#39;a&#39;]);\n        return count;\n    &#125;\n&#125;</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"categories-2\"><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">class Solution:\n    def maxNumberOfBalloons(self, text: str) -&gt; int:\n        return min(cnts[ch] &#x2F;&#x2F; 2 if ch in &quot;lo&quot; else cnts[ch] for ch in &quot;balon&quot;) if (cnts :&#x3D; Counter(text)) else 0</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div></div>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"cover":"https://blog.huangge1199.cn/post/day20220119/bg.jpeg","excerpt":"","more":"<p>2022年02月13日 力扣每日一题</p>\n<h1>题目</h1>\n<p>给你一个字符串&nbsp;<code>text</code>，你需要使用 <code>text</code> 中的字母来拼凑尽可能多的单词&nbsp;<strong>&quot;balloon&quot;（气球）</strong>。</p>\n<p>字符串&nbsp;<code>text</code> 中的每个字母最多只能被使用一次。请你返回最多可以拼凑出多少个单词&nbsp;<strong>&quot;balloon&quot;</strong>。</p>\n<p>&nbsp;</p>\n<p><strong>示例 1：</strong></p>\n<p><strong><img alt=\"\" src=\"1536_ex1_upd.jpeg\" style=\"height: 35px; width: 154px;\"></strong></p>\n<pre><strong>输入：</strong>text = &quot;nlaebolko&quot;\n<strong>输出：</strong>1\n</pre>\n<p><strong>示例 2：</strong></p>\n<p><strong><img alt=\"\" src=\"1536_ex2_upd.jpeg\" style=\"height: 35px; width: 233px;\"></strong></p>\n<pre><strong>输入：</strong>text = &quot;loonbalxballpoon&quot;\n<strong>输出：</strong>2\n</pre>\n<p><strong>示例 3：</strong></p>\n<pre><strong>输入：</strong>text = &quot;leetcode&quot;\n<strong>输出：</strong>0\n</pre>\n<p>&nbsp;</p>\n<p><strong>提示：</strong></p>\n<ul>\n\t<li><code>1 &lt;= text.length &lt;= 10^4</code></li>\n\t<li><code>text</code>&nbsp;全部由小写英文字母组成</li>\n</ul>\n<div><div>Related Topics</div><div><li>哈希表</li><li>字符串</li><li>计数</li></div></div>\n<h1>个人解法</h1>\n<p>一个单词”balloon”分别需要一个’b’、‘a’、‘n’，以及二个’l’、‘o’<br>\n首先我们统计给的单词中每个字母的个数<br>\n然后统计’b’、‘a’、‘n’数量以及’l’、'o’除以2的最小值</p>\n<div class=\"tabs\" id=\"categories\"><ul class=\"nav-tabs\"><li class=\"tab active\"><button type=\"button\" data-href=\"#categories-1\">Java</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#categories-2\">Python3</button></li></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"categories-1\"><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">class Solution &#123;\n    public int maxNumberOfBalloons(String text) &#123;\n        int[] arrs &#x3D; new int[26];\n        for (char ch : text.toCharArray()) &#123;\n            arrs[ch - &#39;a&#39;]++;\n        &#125;\n        int count &#x3D; Math.min(arrs[0], arrs[1]);\n        count &#x3D; Math.min(count, arrs[&#39;l&#39; - &#39;a&#39;] &#x2F; 2);\n        count &#x3D; Math.min(count, arrs[&#39;o&#39; - &#39;a&#39;] &#x2F; 2);\n        count &#x3D; Math.min(count, arrs[&#39;n&#39; - &#39;a&#39;]);\n        return count;\n    &#125;\n&#125;</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"categories-2\"><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">class Solution:\n    def maxNumberOfBalloons(self, text: str) -&gt; int:\n        return min(cnts[ch] &#x2F;&#x2F; 2 if ch in &quot;lo&quot; else cnts[ch] for ch in &quot;balon&quot;) if (cnts :&#x3D; Counter(text)) else 0</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div></div>\n"},{"title":"力扣540:有序数组中的单一元素","date":"2022-02-14T01:49:24.000Z","_content":"2022年02月14日 力扣每日一题\n\n# 题目\n<p>给定一个只包含整数的有序数组，每个元素都会出现两次，唯有一个数只会出现一次，找出这个数。</p>\n\n<p> </p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre>\n<strong>输入:</strong> nums = [1,1,2,3,3,4,4,8,8]\n<strong>输出:</strong> 2\n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre>\n<strong>输入:</strong> nums =  [3,3,7,7,10,11,11]\n<strong>输出:</strong> 10\n</pre>\n\n<p> </p>\n\n<p><meta charset=\"UTF-8\" /></p>\n\n<p><strong>提示:</strong></p>\n\n<ul>\n\t<li><code>1 <= nums.length <= 10<sup>5</sup></code></li>\n\t<li><code>0 <= nums[i] <= 10<sup>5</sup></code></li>\n</ul>\n\n<p> </p>\n\n<p><strong>进阶:</strong> 采用的方案可以在 <code>O(log n)</code> 时间复杂度和 <code>O(1)</code> 空间复杂度中运行吗？</p>\n<div><div>Related Topics</div><div><li>数组</li><li>二分查找</li></div></div>\n\n# 个人解法\n\n根据异或的规则，相同为0，不同为1，这样把所有数都异或一遍，结果就是唯一的只出现一次的数\n\n{% tabs categories%}\n<!-- tab Java -->\n```java\npublic int singleNonDuplicate(int[] nums) {\n    int result = nums[0];\n    for (int i = 1; i < nums.length; i++) {\n        result ^= nums[i];\n    }\n    return result;\n}\n```\n<!-- endtab -->\n\n<!-- tab Python3 -->\n```python\nimport operator\nfrom functools import reduce\nfrom typing import List\n\n\nclass Solution:\n    def singleNonDuplicate(self, nums: List[int]) -> int:\n        return reduce(operator.xor, nums)\n```\n<!-- endtab -->\n{% endtabs %}\n","source":"_posts/day20220214.md","raw":"---\ntitle: 力扣540:有序数组中的单一元素\ndate: 2022-02-14 09:49:24\ntags: [力扣]\ncategories: [算法,力扣,每日一题]\n---\n2022年02月14日 力扣每日一题\n\n# 题目\n<p>给定一个只包含整数的有序数组，每个元素都会出现两次，唯有一个数只会出现一次，找出这个数。</p>\n\n<p> </p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre>\n<strong>输入:</strong> nums = [1,1,2,3,3,4,4,8,8]\n<strong>输出:</strong> 2\n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre>\n<strong>输入:</strong> nums =  [3,3,7,7,10,11,11]\n<strong>输出:</strong> 10\n</pre>\n\n<p> </p>\n\n<p><meta charset=\"UTF-8\" /></p>\n\n<p><strong>提示:</strong></p>\n\n<ul>\n\t<li><code>1 <= nums.length <= 10<sup>5</sup></code></li>\n\t<li><code>0 <= nums[i] <= 10<sup>5</sup></code></li>\n</ul>\n\n<p> </p>\n\n<p><strong>进阶:</strong> 采用的方案可以在 <code>O(log n)</code> 时间复杂度和 <code>O(1)</code> 空间复杂度中运行吗？</p>\n<div><div>Related Topics</div><div><li>数组</li><li>二分查找</li></div></div>\n\n# 个人解法\n\n根据异或的规则，相同为0，不同为1，这样把所有数都异或一遍，结果就是唯一的只出现一次的数\n\n{% tabs categories%}\n<!-- tab Java -->\n```java\npublic int singleNonDuplicate(int[] nums) {\n    int result = nums[0];\n    for (int i = 1; i < nums.length; i++) {\n        result ^= nums[i];\n    }\n    return result;\n}\n```\n<!-- endtab -->\n\n<!-- tab Python3 -->\n```python\nimport operator\nfrom functools import reduce\nfrom typing import List\n\n\nclass Solution:\n    def singleNonDuplicate(self, nums: List[int]) -> int:\n        return reduce(operator.xor, nums)\n```\n<!-- endtab -->\n{% endtabs %}\n","slug":"day20220214","published":1,"updated":"2022-06-03T06:00:55.561Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl42z5h6d001x3gn602ox9e2o","content":"<p>2022年02月14日 力扣每日一题</p>\n<h1>题目</h1>\n<p>给定一个只包含整数的有序数组，每个元素都会出现两次，唯有一个数只会出现一次，找出这个数。</p>\n<p> </p>\n<p><strong>示例 1:</strong></p>\n<pre>\n<strong>输入:</strong> nums = [1,1,2,3,3,4,4,8,8]\n<strong>输出:</strong> 2\n</pre>\n<p><strong>示例 2:</strong></p>\n<pre>\n<strong>输入:</strong> nums =  [3,3,7,7,10,11,11]\n<strong>输出:</strong> 10\n</pre>\n<p> </p>\n<p><meta charset=\"UTF-8\" /></p>\n<p><strong>提示:</strong></p>\n<ul>\n\t<li><code>1 <= nums.length <= 10<sup>5</sup></code></li>\n\t<li><code>0 <= nums[i] <= 10<sup>5</sup></code></li>\n</ul>\n<p> </p>\n<p><strong>进阶:</strong> 采用的方案可以在 <code>O(log n)</code> 时间复杂度和 <code>O(1)</code> 空间复杂度中运行吗？</p>\n<div><div>Related Topics</div><div><li>数组</li><li>二分查找</li></div></div>\n<h1>个人解法</h1>\n<p>根据异或的规则，相同为0，不同为1，这样把所有数都异或一遍，结果就是唯一的只出现一次的数</p>\n<div class=\"tabs\" id=\"categories\"><ul class=\"nav-tabs\"><li class=\"tab active\"><button type=\"button\" data-href=\"#categories-1\">Java</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#categories-2\">Python3</button></li></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"categories-1\"><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">public int singleNonDuplicate(int[] nums) &#123;\n    int result &#x3D; nums[0];\n    for (int i &#x3D; 1; i &lt; nums.length; i++) &#123;\n        result ^&#x3D; nums[i];\n    &#125;\n    return result;\n&#125;</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"categories-2\"><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">import operator\nfrom functools import reduce\nfrom typing import List\n\n\nclass Solution:\n    def singleNonDuplicate(self, nums: List[int]) -&gt; int:\n        return reduce(operator.xor, nums)</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div></div>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"cover":"https://blog.huangge1199.cn/post/day20220120/bg.jpeg","excerpt":"","more":"<p>2022年02月14日 力扣每日一题</p>\n<h1>题目</h1>\n<p>给定一个只包含整数的有序数组，每个元素都会出现两次，唯有一个数只会出现一次，找出这个数。</p>\n<p> </p>\n<p><strong>示例 1:</strong></p>\n<pre>\n<strong>输入:</strong> nums = [1,1,2,3,3,4,4,8,8]\n<strong>输出:</strong> 2\n</pre>\n<p><strong>示例 2:</strong></p>\n<pre>\n<strong>输入:</strong> nums =  [3,3,7,7,10,11,11]\n<strong>输出:</strong> 10\n</pre>\n<p> </p>\n<p><meta charset=\"UTF-8\" /></p>\n<p><strong>提示:</strong></p>\n<ul>\n\t<li><code>1 <= nums.length <= 10<sup>5</sup></code></li>\n\t<li><code>0 <= nums[i] <= 10<sup>5</sup></code></li>\n</ul>\n<p> </p>\n<p><strong>进阶:</strong> 采用的方案可以在 <code>O(log n)</code> 时间复杂度和 <code>O(1)</code> 空间复杂度中运行吗？</p>\n<div><div>Related Topics</div><div><li>数组</li><li>二分查找</li></div></div>\n<h1>个人解法</h1>\n<p>根据异或的规则，相同为0，不同为1，这样把所有数都异或一遍，结果就是唯一的只出现一次的数</p>\n<div class=\"tabs\" id=\"categories\"><ul class=\"nav-tabs\"><li class=\"tab active\"><button type=\"button\" data-href=\"#categories-1\">Java</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#categories-2\">Python3</button></li></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"categories-1\"><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">public int singleNonDuplicate(int[] nums) &#123;\n    int result &#x3D; nums[0];\n    for (int i &#x3D; 1; i &lt; nums.length; i++) &#123;\n        result ^&#x3D; nums[i];\n    &#125;\n    return result;\n&#125;</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"categories-2\"><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">import operator\nfrom functools import reduce\nfrom typing import List\n\n\nclass Solution:\n    def singleNonDuplicate(self, nums: List[int]) -&gt; int:\n        return reduce(operator.xor, nums)</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div></div>\n"},{"title":"力扣504:七进制数","date":"2022-03-07T06:15:07.000Z","_content":"2022年02月14日 力扣每日一题\n\n# 题目\n\n<p>给定一个整数 <code>num</code>，将其转化为 <strong>7 进制</strong>，并以字符串形式输出。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre>\n<strong>输入:</strong> num = 100\n<strong>输出:</strong> \"202\"\n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre>\n<strong>输入:</strong> num = -7\n<strong>输出:</strong> \"-10\"\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>-10<sup>7</sup>&nbsp;&lt;= num &lt;= 10<sup>7</sup></code></li>\n</ul>\n<div><div>Related Topics</div><div><li>数学</li></div></div>\n\n# 个人解法\n\n{% tabs categories%}\n<!-- tab Java -->\n```java\nclass Solution {\n    public String convertToBase7(int num) {\n        boolean bl = num < 0;\n        num = Math.abs(num);\n        StringBuilder str = new StringBuilder();\n        while (num >= 7) {\n            str.insert(0, num % 7);\n            num /= 7;\n        }\n        str.insert(0, num);\n        if (bl) {\n            str.insert(0, '-');\n        }\n        return str.toString();\n    }\n}\n```\n<!-- endtab -->\n\n<!-- tab Python3 -->\n```python\nclass Solution:\n    def convertToBase7(self, num: int) -> str:\n        bl = num < 0\n        s = ''\n        num = abs(num)\n        while num >= 7:\n            s = str(num % 7) + s\n            num //= 7\n        s = str(num) + s\n        if bl:\n            s = '-' + s\n        return s\n```\n<!-- endtab -->\n{% endtabs %}\n","source":"_posts/day20220307.md","raw":"---\ntitle: 力扣504:七进制数\ndate: 2022-03-07 14:15:07\ntags: [力扣]\ncategories: [算法,力扣,每日一题]\n---\n2022年02月14日 力扣每日一题\n\n# 题目\n\n<p>给定一个整数 <code>num</code>，将其转化为 <strong>7 进制</strong>，并以字符串形式输出。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre>\n<strong>输入:</strong> num = 100\n<strong>输出:</strong> \"202\"\n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre>\n<strong>输入:</strong> num = -7\n<strong>输出:</strong> \"-10\"\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>-10<sup>7</sup>&nbsp;&lt;= num &lt;= 10<sup>7</sup></code></li>\n</ul>\n<div><div>Related Topics</div><div><li>数学</li></div></div>\n\n# 个人解法\n\n{% tabs categories%}\n<!-- tab Java -->\n```java\nclass Solution {\n    public String convertToBase7(int num) {\n        boolean bl = num < 0;\n        num = Math.abs(num);\n        StringBuilder str = new StringBuilder();\n        while (num >= 7) {\n            str.insert(0, num % 7);\n            num /= 7;\n        }\n        str.insert(0, num);\n        if (bl) {\n            str.insert(0, '-');\n        }\n        return str.toString();\n    }\n}\n```\n<!-- endtab -->\n\n<!-- tab Python3 -->\n```python\nclass Solution:\n    def convertToBase7(self, num: int) -> str:\n        bl = num < 0\n        s = ''\n        num = abs(num)\n        while num >= 7:\n            s = str(num % 7) + s\n            num //= 7\n        s = str(num) + s\n        if bl:\n            s = '-' + s\n        return s\n```\n<!-- endtab -->\n{% endtabs %}\n","slug":"day20220307","published":1,"updated":"2022-06-03T06:00:55.561Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl42z5h6i00223gn6di89hxjj","content":"<p>2022年02月14日 力扣每日一题</p>\n<h1>题目</h1>\n<p>给定一个整数 <code>num</code>，将其转化为 <strong>7 进制</strong>，并以字符串形式输出。</p>\n<p>&nbsp;</p>\n<p><strong>示例 1:</strong></p>\n<pre>\n<strong>输入:</strong> num = 100\n<strong>输出:</strong> \"202\"\n</pre>\n<p><strong>示例 2:</strong></p>\n<pre>\n<strong>输入:</strong> num = -7\n<strong>输出:</strong> \"-10\"\n</pre>\n<p>&nbsp;</p>\n<p><strong>提示：</strong></p>\n<ul>\n\t<li><code>-10<sup>7</sup>&nbsp;&lt;= num &lt;= 10<sup>7</sup></code></li>\n</ul>\n<div><div>Related Topics</div><div><li>数学</li></div></div>\n<h1>个人解法</h1>\n<div class=\"tabs\" id=\"categories\"><ul class=\"nav-tabs\"><li class=\"tab active\"><button type=\"button\" data-href=\"#categories-1\">Java</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#categories-2\">Python3</button></li></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"categories-1\"><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">class Solution &#123;\n    public String convertToBase7(int num) &#123;\n        boolean bl &#x3D; num &lt; 0;\n        num &#x3D; Math.abs(num);\n        StringBuilder str &#x3D; new StringBuilder();\n        while (num &gt;&#x3D; 7) &#123;\n            str.insert(0, num % 7);\n            num &#x2F;&#x3D; 7;\n        &#125;\n        str.insert(0, num);\n        if (bl) &#123;\n            str.insert(0, &#39;-&#39;);\n        &#125;\n        return str.toString();\n    &#125;\n&#125;</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"categories-2\"><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">class Solution:\n    def convertToBase7(self, num: int) -&gt; str:\n        bl &#x3D; num &lt; 0\n        s &#x3D; &#39;&#39;\n        num &#x3D; abs(num)\n        while num &gt;&#x3D; 7:\n            s &#x3D; str(num % 7) + s\n            num &#x2F;&#x2F;&#x3D; 7\n        s &#x3D; str(num) + s\n        if bl:\n            s &#x3D; &#39;-&#39; + s\n        return s</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div></div>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"cover":"https://blog.huangge1199.cn/post/day20220119/bg.jpeg","excerpt":"","more":"<p>2022年02月14日 力扣每日一题</p>\n<h1>题目</h1>\n<p>给定一个整数 <code>num</code>，将其转化为 <strong>7 进制</strong>，并以字符串形式输出。</p>\n<p>&nbsp;</p>\n<p><strong>示例 1:</strong></p>\n<pre>\n<strong>输入:</strong> num = 100\n<strong>输出:</strong> \"202\"\n</pre>\n<p><strong>示例 2:</strong></p>\n<pre>\n<strong>输入:</strong> num = -7\n<strong>输出:</strong> \"-10\"\n</pre>\n<p>&nbsp;</p>\n<p><strong>提示：</strong></p>\n<ul>\n\t<li><code>-10<sup>7</sup>&nbsp;&lt;= num &lt;= 10<sup>7</sup></code></li>\n</ul>\n<div><div>Related Topics</div><div><li>数学</li></div></div>\n<h1>个人解法</h1>\n<div class=\"tabs\" id=\"categories\"><ul class=\"nav-tabs\"><li class=\"tab active\"><button type=\"button\" data-href=\"#categories-1\">Java</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#categories-2\">Python3</button></li></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"categories-1\"><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">class Solution &#123;\n    public String convertToBase7(int num) &#123;\n        boolean bl &#x3D; num &lt; 0;\n        num &#x3D; Math.abs(num);\n        StringBuilder str &#x3D; new StringBuilder();\n        while (num &gt;&#x3D; 7) &#123;\n            str.insert(0, num % 7);\n            num &#x2F;&#x3D; 7;\n        &#125;\n        str.insert(0, num);\n        if (bl) &#123;\n            str.insert(0, &#39;-&#39;);\n        &#125;\n        return str.toString();\n    &#125;\n&#125;</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"categories-2\"><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">class Solution:\n    def convertToBase7(self, num: int) -&gt; str:\n        bl &#x3D; num &lt; 0\n        s &#x3D; &#39;&#39;\n        num &#x3D; abs(num)\n        while num &gt;&#x3D; 7:\n            s &#x3D; str(num % 7) + s\n            num &#x2F;&#x2F;&#x3D; 7\n        s &#x3D; str(num) + s\n        if bl:\n            s &#x3D; &#39;-&#39; + s\n        return s</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div></div>\n"},{"title":"力扣798:得分最高的最小轮调","date":"2022-03-09T08:42:38.000Z","_content":"\n2022年03月09日 力扣每日一题\n\n# 题目\n\n<p>给你一个数组 <code>nums</code>，我们可以将它按一个非负整数 <code>k</code> 进行轮调，这样可以使数组变为 <code>[nums[k], nums[k + 1], ... nums[nums.length - 1], nums[0], nums[1], ..., nums[k-1]]</code> 的形式。此后，任何值小于或等于其索引的项都可以记作一分。</p>\n\n<ul>\n    <li>例如，数组为 <code>nums = [2,4,1,3,0]</code>，我们按 <code>k = 2</code> 进行轮调后，它将变成 <code>[1,3,0,2,4]</code>。这将记为 <code>3</code> 分，因为 <code>1 > 0</code> [不计分]、<code>3 > 1</code> [不计分]、<code>0 <= 2</code> [计 1 分]、<code>2 <= 3</code> [计 1 分]，<code>4 <= 4</code> [计 1 分]。</li>\n</ul>\n\n<p>在所有可能的轮调中，返回我们所能得到的最高分数对应的轮调下标 <code>k</code> 。如果有多个答案，返回满足条件的最小的下标 <code>k</code> 。</p>\n\n<p> </p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入：</strong>nums = [2,3,1,4,0]\n<strong>输出：</strong>3\n<strong>解释：</strong>\n下面列出了每个 k 的得分：\nk = 0,  nums = [2,3,1,4,0],    score 2\nk = 1,  nums = [3,1,4,0,2],    score 3\nk = 2,  nums = [1,4,0,2,3],    score 3\nk = 3,  nums = [4,0,2,3,1],    score 4\nk = 4,  nums = [0,2,3,1,4],    score 3\n所以我们应当选择 k = 3，得分最高。</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>\n<strong>输入：</strong>nums = [1,3,0,2,4]\n<strong>输出：</strong>0\n<strong>解释：</strong>\nnums 无论怎么变化总是有 3 分。\n所以我们将选择最小的 k，即 0。\n</pre>\n\n<p> </p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n    <li><code>1 <= nums.length <= 10<sup>5</sup></code></li>\n    <li><code>0 <= nums[i] < nums.length</code></li>\n</ul>\n<div><div>Related Topics</div><div><li>数组</li><li>前缀和</li></div></div>\n\n# 个人解法\n\n思路：\n\n`arrs[k]`代表轮调k次的分数，然后`[left,right]`区间内的值代表能得分的k值，那么，\n\n```java\nleft = i + 1\nright = i - nums[i]\n```\n\n考虑到超出数组范围的问题，因此，修改为\n\n```java\n// size为数组长度\nleft = (i + 1) % size;\nright = (i - nums[i] + size) % size;\n```\n\n接下来，我们要考虑`[left,right]`是否是有效区间\n\n- 如果是在这个区间内得分+1\n\n- 如果不是有效区间，那么区间将拆分成`[0,right]`和`[left,size-1]`两部分，这两部分区间内得分+1\n\n最后我们对数组进行设置，这部分可以使用差分实现\n\n{% tabs categories%}\n\n<!-- tab Java -->\n\n```java\nclass Solution {\n    public int bestRotation(int[] nums) {\n        int size = nums.length;\n        int[] arrs = new int[size + 1];\n        for (int i = 0; i < size; i++) {\n            int left = (i + 1) % size;\n            int right = (i - nums[i] + size) % size;\n            if (left > right) {\n                arrs[0]++;\n                arrs[size]--;\n            }\n            arrs[left]++;\n            arrs[right + 1]--;\n        }\n        for (int i = 1; i < size + 1; i++) {\n            arrs[i] += arrs[i - 1];\n        }\n        int result = 0;\n        for (int i = 1; i < size + 1; i++) {\n            if (arrs[i] > arrs[result]) {\n                result = i;\n            }\n        }\n        return result;\n    }\n}\n```\n\n<!-- endtab -->\n\n<!-- tab Python3 -->\n\n```python\nfrom typing import List\n\n\nclass Solution:\n    def bestRotation(self, nums: List[int]) -> int:\n        size = len(nums)\n        arrs = [0] * (size + 1)\n        for i in range(size):\n            left = (i + 1) % size\n            right = (i - nums[i] + size) % size\n            if left > right:\n                arrs[0] += 1\n                arrs[size] -= 1\n            arrs[left] += 1\n            arrs[right + 1] -= 1\n        for i in range(1, size + 1):\n            arrs[i] += arrs[i - 1]\n        result = 0\n        for i in range(1, size + 1):\n            if arrs[i] > arrs[result]:\n                result = i\n        return result\n```\n\n<!-- endtab -->\n\n{% endtabs %}\n","source":"_posts/day20220309.md","raw":"---\ntitle: 力扣798:得分最高的最小轮调\ndate: 2022-03-09 16:42:38\ntags: [力扣]\ncategories: [算法,力扣,每日一题]\n---\n\n2022年03月09日 力扣每日一题\n\n# 题目\n\n<p>给你一个数组 <code>nums</code>，我们可以将它按一个非负整数 <code>k</code> 进行轮调，这样可以使数组变为 <code>[nums[k], nums[k + 1], ... nums[nums.length - 1], nums[0], nums[1], ..., nums[k-1]]</code> 的形式。此后，任何值小于或等于其索引的项都可以记作一分。</p>\n\n<ul>\n    <li>例如，数组为 <code>nums = [2,4,1,3,0]</code>，我们按 <code>k = 2</code> 进行轮调后，它将变成 <code>[1,3,0,2,4]</code>。这将记为 <code>3</code> 分，因为 <code>1 > 0</code> [不计分]、<code>3 > 1</code> [不计分]、<code>0 <= 2</code> [计 1 分]、<code>2 <= 3</code> [计 1 分]，<code>4 <= 4</code> [计 1 分]。</li>\n</ul>\n\n<p>在所有可能的轮调中，返回我们所能得到的最高分数对应的轮调下标 <code>k</code> 。如果有多个答案，返回满足条件的最小的下标 <code>k</code> 。</p>\n\n<p> </p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入：</strong>nums = [2,3,1,4,0]\n<strong>输出：</strong>3\n<strong>解释：</strong>\n下面列出了每个 k 的得分：\nk = 0,  nums = [2,3,1,4,0],    score 2\nk = 1,  nums = [3,1,4,0,2],    score 3\nk = 2,  nums = [1,4,0,2,3],    score 3\nk = 3,  nums = [4,0,2,3,1],    score 4\nk = 4,  nums = [0,2,3,1,4],    score 3\n所以我们应当选择 k = 3，得分最高。</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>\n<strong>输入：</strong>nums = [1,3,0,2,4]\n<strong>输出：</strong>0\n<strong>解释：</strong>\nnums 无论怎么变化总是有 3 分。\n所以我们将选择最小的 k，即 0。\n</pre>\n\n<p> </p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n    <li><code>1 <= nums.length <= 10<sup>5</sup></code></li>\n    <li><code>0 <= nums[i] < nums.length</code></li>\n</ul>\n<div><div>Related Topics</div><div><li>数组</li><li>前缀和</li></div></div>\n\n# 个人解法\n\n思路：\n\n`arrs[k]`代表轮调k次的分数，然后`[left,right]`区间内的值代表能得分的k值，那么，\n\n```java\nleft = i + 1\nright = i - nums[i]\n```\n\n考虑到超出数组范围的问题，因此，修改为\n\n```java\n// size为数组长度\nleft = (i + 1) % size;\nright = (i - nums[i] + size) % size;\n```\n\n接下来，我们要考虑`[left,right]`是否是有效区间\n\n- 如果是在这个区间内得分+1\n\n- 如果不是有效区间，那么区间将拆分成`[0,right]`和`[left,size-1]`两部分，这两部分区间内得分+1\n\n最后我们对数组进行设置，这部分可以使用差分实现\n\n{% tabs categories%}\n\n<!-- tab Java -->\n\n```java\nclass Solution {\n    public int bestRotation(int[] nums) {\n        int size = nums.length;\n        int[] arrs = new int[size + 1];\n        for (int i = 0; i < size; i++) {\n            int left = (i + 1) % size;\n            int right = (i - nums[i] + size) % size;\n            if (left > right) {\n                arrs[0]++;\n                arrs[size]--;\n            }\n            arrs[left]++;\n            arrs[right + 1]--;\n        }\n        for (int i = 1; i < size + 1; i++) {\n            arrs[i] += arrs[i - 1];\n        }\n        int result = 0;\n        for (int i = 1; i < size + 1; i++) {\n            if (arrs[i] > arrs[result]) {\n                result = i;\n            }\n        }\n        return result;\n    }\n}\n```\n\n<!-- endtab -->\n\n<!-- tab Python3 -->\n\n```python\nfrom typing import List\n\n\nclass Solution:\n    def bestRotation(self, nums: List[int]) -> int:\n        size = len(nums)\n        arrs = [0] * (size + 1)\n        for i in range(size):\n            left = (i + 1) % size\n            right = (i - nums[i] + size) % size\n            if left > right:\n                arrs[0] += 1\n                arrs[size] -= 1\n            arrs[left] += 1\n            arrs[right + 1] -= 1\n        for i in range(1, size + 1):\n            arrs[i] += arrs[i - 1]\n        result = 0\n        for i in range(1, size + 1):\n            if arrs[i] > arrs[result]:\n                result = i\n        return result\n```\n\n<!-- endtab -->\n\n{% endtabs %}\n","slug":"day20220309","published":1,"updated":"2022-06-03T06:00:55.561Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl42z5h6k00253gn63vlkh7ck","content":"<p>2022年03月09日 力扣每日一题</p>\n<h1>题目</h1>\n<p>给你一个数组 <code>nums</code>，我们可以将它按一个非负整数 <code>k</code> 进行轮调，这样可以使数组变为 <code>[nums[k], nums[k + 1], ... nums[nums.length - 1], nums[0], nums[1], ..., nums[k-1]]</code> 的形式。此后，任何值小于或等于其索引的项都可以记作一分。</p>\n<ul>\n    <li>例如，数组为 <code>nums = [2,4,1,3,0]</code>，我们按 <code>k = 2</code> 进行轮调后，它将变成 <code>[1,3,0,2,4]</code>。这将记为 <code>3</code> 分，因为 <code>1 > 0</code> [不计分]、<code>3 > 1</code> [不计分]、<code>0 <= 2</code> [计 1 分]、<code>2 <= 3</code> [计 1 分]，<code>4 <= 4</code> [计 1 分]。</li>\n</ul>\n<p>在所有可能的轮调中，返回我们所能得到的最高分数对应的轮调下标 <code>k</code> 。如果有多个答案，返回满足条件的最小的下标 <code>k</code> 。</p>\n<p> </p>\n<p><strong>示例 1：</strong></p>\n<pre>\n<strong>输入：</strong>nums = [2,3,1,4,0]\n<strong>输出：</strong>3\n<strong>解释：</strong>\n下面列出了每个 k 的得分：\nk = 0,  nums = [2,3,1,4,0],    score 2\nk = 1,  nums = [3,1,4,0,2],    score 3\nk = 2,  nums = [1,4,0,2,3],    score 3\nk = 3,  nums = [4,0,2,3,1],    score 4\nk = 4,  nums = [0,2,3,1,4],    score 3\n所以我们应当选择 k = 3，得分最高。</pre>\n<p><strong>示例 2：</strong></p>\n<pre>\n<strong>输入：</strong>nums = [1,3,0,2,4]\n<strong>输出：</strong>0\n<strong>解释：</strong>\nnums 无论怎么变化总是有 3 分。\n所以我们将选择最小的 k，即 0。\n</pre>\n<p> </p>\n<p><strong>提示：</strong></p>\n<ul>\n    <li><code>1 <= nums.length <= 10<sup>5</sup></code></li>\n    <li><code>0 <= nums[i] < nums.length</code></li>\n</ul>\n<div><div>Related Topics</div><div><li>数组</li><li>前缀和</li></div></div>\n<h1>个人解法</h1>\n<p>思路：</p>\n<p><code>arrs[k]</code>代表轮调k次的分数，然后<code>[left,right]</code>区间内的值代表能得分的k值，那么，</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">left &#x3D; i + 1\nright &#x3D; i - nums[i]</code></pre>\n<p>考虑到超出数组范围的问题，因此，修改为</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">&#x2F;&#x2F; size为数组长度\nleft &#x3D; (i + 1) % size;\nright &#x3D; (i - nums[i] + size) % size;</code></pre>\n<p>接下来，我们要考虑<code>[left,right]</code>是否是有效区间</p>\n<ul>\n<li>\n<p>如果是在这个区间内得分+1</p>\n</li>\n<li>\n<p>如果不是有效区间，那么区间将拆分成<code>[0,right]</code>和<code>[left,size-1]</code>两部分，这两部分区间内得分+1</p>\n</li>\n</ul>\n<p>最后我们对数组进行设置，这部分可以使用差分实现</p>\n<div class=\"tabs\" id=\"categories\"><ul class=\"nav-tabs\"><li class=\"tab active\"><button type=\"button\" data-href=\"#categories-1\">Java</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#categories-2\">Python3</button></li></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"categories-1\"><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">class Solution &#123;\n    public int bestRotation(int[] nums) &#123;\n        int size &#x3D; nums.length;\n        int[] arrs &#x3D; new int[size + 1];\n        for (int i &#x3D; 0; i &lt; size; i++) &#123;\n            int left &#x3D; (i + 1) % size;\n            int right &#x3D; (i - nums[i] + size) % size;\n            if (left &gt; right) &#123;\n                arrs[0]++;\n                arrs[size]--;\n            &#125;\n            arrs[left]++;\n            arrs[right + 1]--;\n        &#125;\n        for (int i &#x3D; 1; i &lt; size + 1; i++) &#123;\n            arrs[i] +&#x3D; arrs[i - 1];\n        &#125;\n        int result &#x3D; 0;\n        for (int i &#x3D; 1; i &lt; size + 1; i++) &#123;\n            if (arrs[i] &gt; arrs[result]) &#123;\n                result &#x3D; i;\n            &#125;\n        &#125;\n        return result;\n    &#125;\n&#125;</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"categories-2\"><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">from typing import List\n\n\nclass Solution:\n    def bestRotation(self, nums: List[int]) -&gt; int:\n        size &#x3D; len(nums)\n        arrs &#x3D; [0] * (size + 1)\n        for i in range(size):\n            left &#x3D; (i + 1) % size\n            right &#x3D; (i - nums[i] + size) % size\n            if left &gt; right:\n                arrs[0] +&#x3D; 1\n                arrs[size] -&#x3D; 1\n            arrs[left] +&#x3D; 1\n            arrs[right + 1] -&#x3D; 1\n        for i in range(1, size + 1):\n            arrs[i] +&#x3D; arrs[i - 1]\n        result &#x3D; 0\n        for i in range(1, size + 1):\n            if arrs[i] &gt; arrs[result]:\n                result &#x3D; i\n        return result</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div></div>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"cover":"https://blog.huangge1199.cn/post/jpaCompositePK/bg.jpg","excerpt":"","more":"<p>2022年03月09日 力扣每日一题</p>\n<h1>题目</h1>\n<p>给你一个数组 <code>nums</code>，我们可以将它按一个非负整数 <code>k</code> 进行轮调，这样可以使数组变为 <code>[nums[k], nums[k + 1], ... nums[nums.length - 1], nums[0], nums[1], ..., nums[k-1]]</code> 的形式。此后，任何值小于或等于其索引的项都可以记作一分。</p>\n<ul>\n    <li>例如，数组为 <code>nums = [2,4,1,3,0]</code>，我们按 <code>k = 2</code> 进行轮调后，它将变成 <code>[1,3,0,2,4]</code>。这将记为 <code>3</code> 分，因为 <code>1 > 0</code> [不计分]、<code>3 > 1</code> [不计分]、<code>0 <= 2</code> [计 1 分]、<code>2 <= 3</code> [计 1 分]，<code>4 <= 4</code> [计 1 分]。</li>\n</ul>\n<p>在所有可能的轮调中，返回我们所能得到的最高分数对应的轮调下标 <code>k</code> 。如果有多个答案，返回满足条件的最小的下标 <code>k</code> 。</p>\n<p> </p>\n<p><strong>示例 1：</strong></p>\n<pre>\n<strong>输入：</strong>nums = [2,3,1,4,0]\n<strong>输出：</strong>3\n<strong>解释：</strong>\n下面列出了每个 k 的得分：\nk = 0,  nums = [2,3,1,4,0],    score 2\nk = 1,  nums = [3,1,4,0,2],    score 3\nk = 2,  nums = [1,4,0,2,3],    score 3\nk = 3,  nums = [4,0,2,3,1],    score 4\nk = 4,  nums = [0,2,3,1,4],    score 3\n所以我们应当选择 k = 3，得分最高。</pre>\n<p><strong>示例 2：</strong></p>\n<pre>\n<strong>输入：</strong>nums = [1,3,0,2,4]\n<strong>输出：</strong>0\n<strong>解释：</strong>\nnums 无论怎么变化总是有 3 分。\n所以我们将选择最小的 k，即 0。\n</pre>\n<p> </p>\n<p><strong>提示：</strong></p>\n<ul>\n    <li><code>1 <= nums.length <= 10<sup>5</sup></code></li>\n    <li><code>0 <= nums[i] < nums.length</code></li>\n</ul>\n<div><div>Related Topics</div><div><li>数组</li><li>前缀和</li></div></div>\n<h1>个人解法</h1>\n<p>思路：</p>\n<p><code>arrs[k]</code>代表轮调k次的分数，然后<code>[left,right]</code>区间内的值代表能得分的k值，那么，</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">left &#x3D; i + 1\nright &#x3D; i - nums[i]</code></pre>\n<p>考虑到超出数组范围的问题，因此，修改为</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">&#x2F;&#x2F; size为数组长度\nleft &#x3D; (i + 1) % size;\nright &#x3D; (i - nums[i] + size) % size;</code></pre>\n<p>接下来，我们要考虑<code>[left,right]</code>是否是有效区间</p>\n<ul>\n<li>\n<p>如果是在这个区间内得分+1</p>\n</li>\n<li>\n<p>如果不是有效区间，那么区间将拆分成<code>[0,right]</code>和<code>[left,size-1]</code>两部分，这两部分区间内得分+1</p>\n</li>\n</ul>\n<p>最后我们对数组进行设置，这部分可以使用差分实现</p>\n<div class=\"tabs\" id=\"categories\"><ul class=\"nav-tabs\"><li class=\"tab active\"><button type=\"button\" data-href=\"#categories-1\">Java</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#categories-2\">Python3</button></li></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"categories-1\"><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">class Solution &#123;\n    public int bestRotation(int[] nums) &#123;\n        int size &#x3D; nums.length;\n        int[] arrs &#x3D; new int[size + 1];\n        for (int i &#x3D; 0; i &lt; size; i++) &#123;\n            int left &#x3D; (i + 1) % size;\n            int right &#x3D; (i - nums[i] + size) % size;\n            if (left &gt; right) &#123;\n                arrs[0]++;\n                arrs[size]--;\n            &#125;\n            arrs[left]++;\n            arrs[right + 1]--;\n        &#125;\n        for (int i &#x3D; 1; i &lt; size + 1; i++) &#123;\n            arrs[i] +&#x3D; arrs[i - 1];\n        &#125;\n        int result &#x3D; 0;\n        for (int i &#x3D; 1; i &lt; size + 1; i++) &#123;\n            if (arrs[i] &gt; arrs[result]) &#123;\n                result &#x3D; i;\n            &#125;\n        &#125;\n        return result;\n    &#125;\n&#125;</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"categories-2\"><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">from typing import List\n\n\nclass Solution:\n    def bestRotation(self, nums: List[int]) -&gt; int:\n        size &#x3D; len(nums)\n        arrs &#x3D; [0] * (size + 1)\n        for i in range(size):\n            left &#x3D; (i + 1) % size\n            right &#x3D; (i - nums[i] + size) % size\n            if left &gt; right:\n                arrs[0] +&#x3D; 1\n                arrs[size] -&#x3D; 1\n            arrs[left] +&#x3D; 1\n            arrs[right + 1] -&#x3D; 1\n        for i in range(1, size + 1):\n            arrs[i] +&#x3D; arrs[i - 1]\n        result &#x3D; 0\n        for i in range(1, size + 1):\n            if arrs[i] &gt; arrs[result]:\n                result &#x3D; i\n        return result</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div></div>\n"},{"title":"力扣589:N 叉树的前序遍历","date":"2022-03-10T01:51:36.000Z","cover":"https://blog.huangge1199.cn/post/day20220310/bg.jpeg","_content":"\n2022年03月10日 力扣每日一题\n\n# 题目\n<p>给定一个 n&nbsp;叉树的根节点 <meta charset=\"UTF-8\" />&nbsp;<code>root</code>&nbsp;，返回 <em>其节点值的<strong> 前序遍历</strong></em> 。</p>\n\n<p>n 叉树 在输入中按层序遍历进行序列化表示，每组子节点由空值 <code>null</code> 分隔（请参见示例）。</p>\n\n<p><br />\n<strong>示例 1：</strong></p>\n\n<p><img src=\"https://assets.leetcode.com/uploads/2018/10/12/narytreeexample.png\" style=\"height: 193px; width: 300px;\" /></p>\n\n<pre>\n<strong>输入：</strong>root = [1,null,3,2,4,null,5,6]\n<strong>输出：</strong>[1,3,5,6,2,4]\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/11/08/sample_4_964.png\" style=\"height: 272px; width: 300px;\" /></p>\n\n<pre>\n<strong>输入：</strong>root = [1,null,2,3,4,5,null,null,6,7,null,8,null,9,10,null,null,11,null,12,null,13,null,null,14]\n<strong>输出：</strong>[1,2,3,6,7,11,14,4,8,12,5,9,13,10]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li>节点总数在范围<meta charset=\"UTF-8\" />&nbsp;<code>[0, 10<sup>4</sup>]</code>内</li>\n\t<li><code>0 &lt;= Node.val &lt;= 10<sup>4</sup></code></li>\n\t<li>n 叉树的高度小于或等于 <code>1000</code></li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><strong>进阶：</strong>递归法很简单，你可以使用迭代法完成此题吗?</p>\n<div><div>Related Topics</div><div><li>栈</li><li>树</li><li>深度优先搜索</li></div></div>\n\n# 个人解法\n\n{% tabs categories%}\n\n<!-- tab Java -->\n\n```java\nclass Solution {\n    List<Integer> list = new ArrayList<>();\n    public List<Integer> preorder(Node root) {\n        dfs(root);\n        return list;\n    }\n    void dfs(Node root) {\n        if (root == null) {\n            return;\n        }\n        list.add(root.val);\n        for (Node node : root.children) {\n            dfs(node);\n        }\n    }\n}\n```\n\n<!-- endtab -->\n\n<!-- tab Python3 -->\n\n```python\n\"\"\"\n# Definition for a Node.\nclass Node:\n    def __init__(self, val=None, children=None):\n        self.val = val\n        self.children = children\n\"\"\"\nfrom typing import List\n\n\nclass Solution:\n    def preorder(self, root: 'Node') -> List[int]:\n        result = []\n\n        def dfs(node):\n            if node:\n                result.append(node.val)\n                for child in node.children:\n                    dfs(child)\n\n        dfs(root)\n        return result\n```\n\n<!-- endtab -->\n\n{% endtabs %}\n","source":"_posts/day20220310.md","raw":"---\ntitle: 力扣589:N 叉树的前序遍历\ndate: 2022-03-10 09:51:36\ntags: [力扣]\ncategories: [算法,力扣,每日一题]\ncover: https://blog.huangge1199.cn/post/day20220310/bg.jpeg\n---\n\n2022年03月10日 力扣每日一题\n\n# 题目\n<p>给定一个 n&nbsp;叉树的根节点 <meta charset=\"UTF-8\" />&nbsp;<code>root</code>&nbsp;，返回 <em>其节点值的<strong> 前序遍历</strong></em> 。</p>\n\n<p>n 叉树 在输入中按层序遍历进行序列化表示，每组子节点由空值 <code>null</code> 分隔（请参见示例）。</p>\n\n<p><br />\n<strong>示例 1：</strong></p>\n\n<p><img src=\"https://assets.leetcode.com/uploads/2018/10/12/narytreeexample.png\" style=\"height: 193px; width: 300px;\" /></p>\n\n<pre>\n<strong>输入：</strong>root = [1,null,3,2,4,null,5,6]\n<strong>输出：</strong>[1,3,5,6,2,4]\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/11/08/sample_4_964.png\" style=\"height: 272px; width: 300px;\" /></p>\n\n<pre>\n<strong>输入：</strong>root = [1,null,2,3,4,5,null,null,6,7,null,8,null,9,10,null,null,11,null,12,null,13,null,null,14]\n<strong>输出：</strong>[1,2,3,6,7,11,14,4,8,12,5,9,13,10]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li>节点总数在范围<meta charset=\"UTF-8\" />&nbsp;<code>[0, 10<sup>4</sup>]</code>内</li>\n\t<li><code>0 &lt;= Node.val &lt;= 10<sup>4</sup></code></li>\n\t<li>n 叉树的高度小于或等于 <code>1000</code></li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><strong>进阶：</strong>递归法很简单，你可以使用迭代法完成此题吗?</p>\n<div><div>Related Topics</div><div><li>栈</li><li>树</li><li>深度优先搜索</li></div></div>\n\n# 个人解法\n\n{% tabs categories%}\n\n<!-- tab Java -->\n\n```java\nclass Solution {\n    List<Integer> list = new ArrayList<>();\n    public List<Integer> preorder(Node root) {\n        dfs(root);\n        return list;\n    }\n    void dfs(Node root) {\n        if (root == null) {\n            return;\n        }\n        list.add(root.val);\n        for (Node node : root.children) {\n            dfs(node);\n        }\n    }\n}\n```\n\n<!-- endtab -->\n\n<!-- tab Python3 -->\n\n```python\n\"\"\"\n# Definition for a Node.\nclass Node:\n    def __init__(self, val=None, children=None):\n        self.val = val\n        self.children = children\n\"\"\"\nfrom typing import List\n\n\nclass Solution:\n    def preorder(self, root: 'Node') -> List[int]:\n        result = []\n\n        def dfs(node):\n            if node:\n                result.append(node.val)\n                for child in node.children:\n                    dfs(child)\n\n        dfs(root)\n        return result\n```\n\n<!-- endtab -->\n\n{% endtabs %}\n","slug":"day20220310","published":1,"updated":"2022-06-03T06:00:55.561Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl42z5h6l002a3gn67wqqhd2w","content":"<p>2022年03月10日 力扣每日一题</p>\n<h1>题目</h1>\n<p>给定一个 n&nbsp;叉树的根节点 <meta charset=\"UTF-8\" />&nbsp;<code>root</code>&nbsp;，返回 <em>其节点值的<strong> 前序遍历</strong></em> 。</p>\n<p>n 叉树 在输入中按层序遍历进行序列化表示，每组子节点由空值 <code>null</code> 分隔（请参见示例）。</p>\n<p><br />\n<strong>示例 1：</strong></p>\n<p><img src=\"https://assets.leetcode.com/uploads/2018/10/12/narytreeexample.png\" style=\"height: 193px; width: 300px;\" /></p>\n<pre>\n<strong>输入：</strong>root = [1,null,3,2,4,null,5,6]\n<strong>输出：</strong>[1,3,5,6,2,4]\n</pre>\n<p><strong>示例 2：</strong></p>\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/11/08/sample_4_964.png\" style=\"height: 272px; width: 300px;\" /></p>\n<pre>\n<strong>输入：</strong>root = [1,null,2,3,4,5,null,null,6,7,null,8,null,9,10,null,null,11,null,12,null,13,null,null,14]\n<strong>输出：</strong>[1,2,3,6,7,11,14,4,8,12,5,9,13,10]\n</pre>\n<p>&nbsp;</p>\n<p><strong>提示：</strong></p>\n<ul>\n\t<li>节点总数在范围<meta charset=\"UTF-8\" />&nbsp;<code>[0, 10<sup>4</sup>]</code>内</li>\n\t<li><code>0 &lt;= Node.val &lt;= 10<sup>4</sup></code></li>\n\t<li>n 叉树的高度小于或等于 <code>1000</code></li>\n</ul>\n<p>&nbsp;</p>\n<p><strong>进阶：</strong>递归法很简单，你可以使用迭代法完成此题吗?</p>\n<div><div>Related Topics</div><div><li>栈</li><li>树</li><li>深度优先搜索</li></div></div>\n<h1>个人解法</h1>\n<div class=\"tabs\" id=\"categories\"><ul class=\"nav-tabs\"><li class=\"tab active\"><button type=\"button\" data-href=\"#categories-1\">Java</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#categories-2\">Python3</button></li></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"categories-1\"><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">class Solution &#123;\n    List&lt;Integer&gt; list &#x3D; new ArrayList&lt;&gt;();\n    public List&lt;Integer&gt; preorder(Node root) &#123;\n        dfs(root);\n        return list;\n    &#125;\n    void dfs(Node root) &#123;\n        if (root &#x3D;&#x3D; null) &#123;\n            return;\n        &#125;\n        list.add(root.val);\n        for (Node node : root.children) &#123;\n            dfs(node);\n        &#125;\n    &#125;\n&#125;</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"categories-2\"><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">&quot;&quot;&quot;\n# Definition for a Node.\nclass Node:\n    def __init__(self, val&#x3D;None, children&#x3D;None):\n        self.val &#x3D; val\n        self.children &#x3D; children\n&quot;&quot;&quot;\nfrom typing import List\n\n\nclass Solution:\n    def preorder(self, root: &#39;Node&#39;) -&gt; List[int]:\n        result &#x3D; []\n\n        def dfs(node):\n            if node:\n                result.append(node.val)\n                for child in node.children:\n                    dfs(child)\n\n        dfs(root)\n        return result</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div></div>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"excerpt":"","more":"<p>2022年03月10日 力扣每日一题</p>\n<h1>题目</h1>\n<p>给定一个 n&nbsp;叉树的根节点 <meta charset=\"UTF-8\" />&nbsp;<code>root</code>&nbsp;，返回 <em>其节点值的<strong> 前序遍历</strong></em> 。</p>\n<p>n 叉树 在输入中按层序遍历进行序列化表示，每组子节点由空值 <code>null</code> 分隔（请参见示例）。</p>\n<p><br />\n<strong>示例 1：</strong></p>\n<p><img src=\"https://assets.leetcode.com/uploads/2018/10/12/narytreeexample.png\" style=\"height: 193px; width: 300px;\" /></p>\n<pre>\n<strong>输入：</strong>root = [1,null,3,2,4,null,5,6]\n<strong>输出：</strong>[1,3,5,6,2,4]\n</pre>\n<p><strong>示例 2：</strong></p>\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/11/08/sample_4_964.png\" style=\"height: 272px; width: 300px;\" /></p>\n<pre>\n<strong>输入：</strong>root = [1,null,2,3,4,5,null,null,6,7,null,8,null,9,10,null,null,11,null,12,null,13,null,null,14]\n<strong>输出：</strong>[1,2,3,6,7,11,14,4,8,12,5,9,13,10]\n</pre>\n<p>&nbsp;</p>\n<p><strong>提示：</strong></p>\n<ul>\n\t<li>节点总数在范围<meta charset=\"UTF-8\" />&nbsp;<code>[0, 10<sup>4</sup>]</code>内</li>\n\t<li><code>0 &lt;= Node.val &lt;= 10<sup>4</sup></code></li>\n\t<li>n 叉树的高度小于或等于 <code>1000</code></li>\n</ul>\n<p>&nbsp;</p>\n<p><strong>进阶：</strong>递归法很简单，你可以使用迭代法完成此题吗?</p>\n<div><div>Related Topics</div><div><li>栈</li><li>树</li><li>深度优先搜索</li></div></div>\n<h1>个人解法</h1>\n<div class=\"tabs\" id=\"categories\"><ul class=\"nav-tabs\"><li class=\"tab active\"><button type=\"button\" data-href=\"#categories-1\">Java</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#categories-2\">Python3</button></li></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"categories-1\"><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">class Solution &#123;\n    List&lt;Integer&gt; list &#x3D; new ArrayList&lt;&gt;();\n    public List&lt;Integer&gt; preorder(Node root) &#123;\n        dfs(root);\n        return list;\n    &#125;\n    void dfs(Node root) &#123;\n        if (root &#x3D;&#x3D; null) &#123;\n            return;\n        &#125;\n        list.add(root.val);\n        for (Node node : root.children) &#123;\n            dfs(node);\n        &#125;\n    &#125;\n&#125;</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"categories-2\"><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">&quot;&quot;&quot;\n# Definition for a Node.\nclass Node:\n    def __init__(self, val&#x3D;None, children&#x3D;None):\n        self.val &#x3D; val\n        self.children &#x3D; children\n&quot;&quot;&quot;\nfrom typing import List\n\n\nclass Solution:\n    def preorder(self, root: &#39;Node&#39;) -&gt; List[int]:\n        result &#x3D; []\n\n        def dfs(node):\n            if node:\n                result.append(node.val)\n                for child in node.children:\n                    dfs(child)\n\n        dfs(root)\n        return result</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div></div>\n"},{"title":"力扣2049:统计最高分的节点数目","date":"2022-03-11T04:05:16.000Z","_content":"\n2022年03月11日 力扣每日一题\n\n# 题目\n\n<p>给你一棵根节点为 <code>0</code> 的 <strong>二叉树</strong> ，它总共有 <code>n</code> 个节点，节点编号为 <code>0</code> 到 <code>n - 1</code> 。同时给你一个下标从 <strong>0</strong> 开始的整数数组 <code>parents</code> 表示这棵树，其中 <code>parents[i]</code> 是节点 <code>i</code> 的父节点。由于节点 <code>0</code> 是根，所以 <code>parents[0] == -1</code> 。</p>\n\n<p>一个子树的 <strong>大小</strong> 为这个子树内节点的数目。每个节点都有一个与之关联的 <strong>分数</strong> 。求出某个节点分数的方法是，将这个节点和与它相连的边全部 <strong>删除</strong> ，剩余部分是若干个 <strong>非空</strong> 子树，这个节点的 <strong>分数</strong> 为所有这些子树 <strong>大小的乘积</strong> 。</p>\n\n<p>请你返回有 <strong>最高得分</strong> 节点的 <strong>数目</strong> 。</p>\n\n<p> </p>\n\n<p><strong>示例 1:</strong></p>\n\n<p><img alt=\"example-1\" src=\"https://assets.leetcode.com/uploads/2021/10/03/example-1.png\" style=\"width: 604px; height: 266px;\"></p>\n\n<pre><b>输入：</b>parents = [-1,2,0,2,0]\n<b>输出：</b>3\n<strong>解释：</strong>\n- 节点 0 的分数为：3 * 1 = 3\n- 节点 1 的分数为：4 = 4\n- 节点 2 的分数为：1 * 1 * 2 = 2\n- 节点 3 的分数为：4 = 4\n- 节点 4 的分数为：4 = 4\n最高得分为 4 ，有三个节点得分为 4 （分别是节点 1，3 和 4 ）。\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<p><img alt=\"example-2\" src=\"https://assets.leetcode.com/uploads/2021/10/03/example-2.png\" style=\"width: 95px; height: 143px;\"></p>\n\n<pre><b>输入：</b>parents = [-1,2,0]\n<b>输出：</b>2\n<strong>解释：</strong>\n- 节点 0 的分数为：2 = 2\n- 节点 1 的分数为：2 = 2\n- 节点 2 的分数为：1 * 1 = 1\n最高分数为 2 ，有两个节点分数为 2 （分别为节点 0 和 1 ）。\n</pre>\n\n<p> </p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n    <li><code>n == parents.length</code></li>\n    <li><code>2 <= n <= 10<sup>5</sup></code></li>\n    <li><code>parents[0] == -1</code></li>\n    <li>对于 <code>i != 0</code> ，有 <code>0 <= parents[i] <= n - 1</code></li>\n    <li><code>parents</code> 表示一棵二叉树。</li>\n</ul>\n<div><div>Related Topics</div><div><li>树</li><li>深度优先搜索</li><li>数组</li><li>二叉树</li></div></div>\n\n# 个人解法\n\n思路：\n\n　　这题是要返回有 <strong>最高得分</strong>节点的 <strong>数目</strong>，那么就要将每一个节点的分数都算一遍，而每一个节点的分数，是由以下几个数的乘积，包括，该节点下左子树中节点的数目、该节点下右子树中节点的数目，以及总节点数-改节点为跟节点的树的节点数。\n\n　　那么，我的解题步骤如下：\n\n1. 我先根据题目给的parents数组分别统计每个节点的直连子节点，将其存放进map中。\n\n2. 根据map运用递归求出每一个节点做为根节点的子树中的节点数，将其存入counts数组中\n\n3. 接下来遍历求每一个节点的分数，并且记入最大得分及节点的数量\n\n下面是java的代码解法：\n\n```java\nclass Solution {\n    // 记录每一个节点作为根节点的子树中节点的数量\n    int[] counts;\n    public int countHighestScoreNodes(int[] parents) {\n        int size = parents.length;\n\n        // 记录每个节点的直接子节点\n        Map<Integer, List<Integer>> map = new HashMap<>();\n        for (int i = 0; i < size; i++) {\n            map.put(i, new ArrayList<>());\n        }\n        for (int i = 1; i < size; i++) {\n            map.get(parents[i]).add(i);\n        }\n\n        // 记录每个子节点为根节点的树中节点数\n        counts = new int[size];\n        for (int i = 0; i < size; i++) {\n            if (counts[i] > 0) {\n                continue;\n            }\n            counts[i] = dfs(map.get(i), map);\n        }\n\n        // 遍历计算每个节点的得分并统计结果\n        long mul = 1;\n        for (int num : map.get(0)) {\n            mul *= counts[num];\n        }\n        int count = 1;\n        for (int i = 1; i < size; i++) {\n            long temp = 1;\n            for (int num : map.get(i)) {\n                temp *= counts[num];\n            }\n            temp *= (size - counts[i]);\n            if (temp > mul) {\n                mul = temp;\n                count = 1;\n            } else if (temp == mul) {\n                count++;\n            }\n        }\n        return count;\n    }\n    /**\n     * 计算每个节点为根节点的树中节点数\n     */\n    private int dfs(List<Integer> list, Map<Integer, List<Integer>> map) {\n        if (list.size() == 0) {\n            return 1;\n        }\n        int count = 1;\n        for (int i : list) {\n            if (counts[i] > 0) {\n                count += counts[i];\n            } else {\n                count += dfs(map.get(i), map);\n            }\n        }\n        return count;\n    }\n}\n```\n","source":"_posts/day20220311.md","raw":"---\ntitle: 力扣2049:统计最高分的节点数目\ndate: 2022-03-11 12:05:16\ntags: [力扣]\ncategories: [算法,力扣,每日一题]\n---\n\n2022年03月11日 力扣每日一题\n\n# 题目\n\n<p>给你一棵根节点为 <code>0</code> 的 <strong>二叉树</strong> ，它总共有 <code>n</code> 个节点，节点编号为 <code>0</code> 到 <code>n - 1</code> 。同时给你一个下标从 <strong>0</strong> 开始的整数数组 <code>parents</code> 表示这棵树，其中 <code>parents[i]</code> 是节点 <code>i</code> 的父节点。由于节点 <code>0</code> 是根，所以 <code>parents[0] == -1</code> 。</p>\n\n<p>一个子树的 <strong>大小</strong> 为这个子树内节点的数目。每个节点都有一个与之关联的 <strong>分数</strong> 。求出某个节点分数的方法是，将这个节点和与它相连的边全部 <strong>删除</strong> ，剩余部分是若干个 <strong>非空</strong> 子树，这个节点的 <strong>分数</strong> 为所有这些子树 <strong>大小的乘积</strong> 。</p>\n\n<p>请你返回有 <strong>最高得分</strong> 节点的 <strong>数目</strong> 。</p>\n\n<p> </p>\n\n<p><strong>示例 1:</strong></p>\n\n<p><img alt=\"example-1\" src=\"https://assets.leetcode.com/uploads/2021/10/03/example-1.png\" style=\"width: 604px; height: 266px;\"></p>\n\n<pre><b>输入：</b>parents = [-1,2,0,2,0]\n<b>输出：</b>3\n<strong>解释：</strong>\n- 节点 0 的分数为：3 * 1 = 3\n- 节点 1 的分数为：4 = 4\n- 节点 2 的分数为：1 * 1 * 2 = 2\n- 节点 3 的分数为：4 = 4\n- 节点 4 的分数为：4 = 4\n最高得分为 4 ，有三个节点得分为 4 （分别是节点 1，3 和 4 ）。\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<p><img alt=\"example-2\" src=\"https://assets.leetcode.com/uploads/2021/10/03/example-2.png\" style=\"width: 95px; height: 143px;\"></p>\n\n<pre><b>输入：</b>parents = [-1,2,0]\n<b>输出：</b>2\n<strong>解释：</strong>\n- 节点 0 的分数为：2 = 2\n- 节点 1 的分数为：2 = 2\n- 节点 2 的分数为：1 * 1 = 1\n最高分数为 2 ，有两个节点分数为 2 （分别为节点 0 和 1 ）。\n</pre>\n\n<p> </p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n    <li><code>n == parents.length</code></li>\n    <li><code>2 <= n <= 10<sup>5</sup></code></li>\n    <li><code>parents[0] == -1</code></li>\n    <li>对于 <code>i != 0</code> ，有 <code>0 <= parents[i] <= n - 1</code></li>\n    <li><code>parents</code> 表示一棵二叉树。</li>\n</ul>\n<div><div>Related Topics</div><div><li>树</li><li>深度优先搜索</li><li>数组</li><li>二叉树</li></div></div>\n\n# 个人解法\n\n思路：\n\n　　这题是要返回有 <strong>最高得分</strong>节点的 <strong>数目</strong>，那么就要将每一个节点的分数都算一遍，而每一个节点的分数，是由以下几个数的乘积，包括，该节点下左子树中节点的数目、该节点下右子树中节点的数目，以及总节点数-改节点为跟节点的树的节点数。\n\n　　那么，我的解题步骤如下：\n\n1. 我先根据题目给的parents数组分别统计每个节点的直连子节点，将其存放进map中。\n\n2. 根据map运用递归求出每一个节点做为根节点的子树中的节点数，将其存入counts数组中\n\n3. 接下来遍历求每一个节点的分数，并且记入最大得分及节点的数量\n\n下面是java的代码解法：\n\n```java\nclass Solution {\n    // 记录每一个节点作为根节点的子树中节点的数量\n    int[] counts;\n    public int countHighestScoreNodes(int[] parents) {\n        int size = parents.length;\n\n        // 记录每个节点的直接子节点\n        Map<Integer, List<Integer>> map = new HashMap<>();\n        for (int i = 0; i < size; i++) {\n            map.put(i, new ArrayList<>());\n        }\n        for (int i = 1; i < size; i++) {\n            map.get(parents[i]).add(i);\n        }\n\n        // 记录每个子节点为根节点的树中节点数\n        counts = new int[size];\n        for (int i = 0; i < size; i++) {\n            if (counts[i] > 0) {\n                continue;\n            }\n            counts[i] = dfs(map.get(i), map);\n        }\n\n        // 遍历计算每个节点的得分并统计结果\n        long mul = 1;\n        for (int num : map.get(0)) {\n            mul *= counts[num];\n        }\n        int count = 1;\n        for (int i = 1; i < size; i++) {\n            long temp = 1;\n            for (int num : map.get(i)) {\n                temp *= counts[num];\n            }\n            temp *= (size - counts[i]);\n            if (temp > mul) {\n                mul = temp;\n                count = 1;\n            } else if (temp == mul) {\n                count++;\n            }\n        }\n        return count;\n    }\n    /**\n     * 计算每个节点为根节点的树中节点数\n     */\n    private int dfs(List<Integer> list, Map<Integer, List<Integer>> map) {\n        if (list.size() == 0) {\n            return 1;\n        }\n        int count = 1;\n        for (int i : list) {\n            if (counts[i] > 0) {\n                count += counts[i];\n            } else {\n                count += dfs(map.get(i), map);\n            }\n        }\n        return count;\n    }\n}\n```\n","slug":"day20220311","published":1,"updated":"2022-06-03T06:00:55.561Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl42z5h6m002c3gn6fulcfn40","content":"<p>2022年03月11日 力扣每日一题</p>\n<h1>题目</h1>\n<p>给你一棵根节点为 <code>0</code> 的 <strong>二叉树</strong> ，它总共有 <code>n</code> 个节点，节点编号为 <code>0</code> 到 <code>n - 1</code> 。同时给你一个下标从 <strong>0</strong> 开始的整数数组 <code>parents</code> 表示这棵树，其中 <code>parents[i]</code> 是节点 <code>i</code> 的父节点。由于节点 <code>0</code> 是根，所以 <code>parents[0] == -1</code> 。</p>\n<p>一个子树的 <strong>大小</strong> 为这个子树内节点的数目。每个节点都有一个与之关联的 <strong>分数</strong> 。求出某个节点分数的方法是，将这个节点和与它相连的边全部 <strong>删除</strong> ，剩余部分是若干个 <strong>非空</strong> 子树，这个节点的 <strong>分数</strong> 为所有这些子树 <strong>大小的乘积</strong> 。</p>\n<p>请你返回有 <strong>最高得分</strong> 节点的 <strong>数目</strong> 。</p>\n<p> </p>\n<p><strong>示例 1:</strong></p>\n<p><img alt=\"example-1\" src=\"https://assets.leetcode.com/uploads/2021/10/03/example-1.png\" style=\"width: 604px; height: 266px;\"></p>\n<pre><b>输入：</b>parents = [-1,2,0,2,0]\n<b>输出：</b>3\n<strong>解释：</strong>\n- 节点 0 的分数为：3 * 1 = 3\n- 节点 1 的分数为：4 = 4\n- 节点 2 的分数为：1 * 1 * 2 = 2\n- 节点 3 的分数为：4 = 4\n- 节点 4 的分数为：4 = 4\n最高得分为 4 ，有三个节点得分为 4 （分别是节点 1，3 和 4 ）。\n</pre>\n<p><strong>示例 2：</strong></p>\n<p><img alt=\"example-2\" src=\"https://assets.leetcode.com/uploads/2021/10/03/example-2.png\" style=\"width: 95px; height: 143px;\"></p>\n<pre><b>输入：</b>parents = [-1,2,0]\n<b>输出：</b>2\n<strong>解释：</strong>\n- 节点 0 的分数为：2 = 2\n- 节点 1 的分数为：2 = 2\n- 节点 2 的分数为：1 * 1 = 1\n最高分数为 2 ，有两个节点分数为 2 （分别为节点 0 和 1 ）。\n</pre>\n<p> </p>\n<p><strong>提示：</strong></p>\n<ul>\n    <li><code>n == parents.length</code></li>\n    <li><code>2 <= n <= 10<sup>5</sup></code></li>\n    <li><code>parents[0] == -1</code></li>\n    <li>对于 <code>i != 0</code> ，有 <code>0 <= parents[i] <= n - 1</code></li>\n    <li><code>parents</code> 表示一棵二叉树。</li>\n</ul>\n<div><div>Related Topics</div><div><li>树</li><li>深度优先搜索</li><li>数组</li><li>二叉树</li></div></div>\n<h1>个人解法</h1>\n<p>思路：</p>\n<p>这题是要返回有 <strong>最高得分</strong>节点的 <strong>数目</strong>，那么就要将每一个节点的分数都算一遍，而每一个节点的分数，是由以下几个数的乘积，包括，该节点下左子树中节点的数目、该节点下右子树中节点的数目，以及总节点数-改节点为跟节点的树的节点数。</p>\n<p>那么，我的解题步骤如下：</p>\n<ol>\n<li>\n<p>我先根据题目给的parents数组分别统计每个节点的直连子节点，将其存放进map中。</p>\n</li>\n<li>\n<p>根据map运用递归求出每一个节点做为根节点的子树中的节点数，将其存入counts数组中</p>\n</li>\n<li>\n<p>接下来遍历求每一个节点的分数，并且记入最大得分及节点的数量</p>\n</li>\n</ol>\n<p>下面是java的代码解法：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">class Solution &#123;\n    &#x2F;&#x2F; 记录每一个节点作为根节点的子树中节点的数量\n    int[] counts;\n    public int countHighestScoreNodes(int[] parents) &#123;\n        int size &#x3D; parents.length;\n\n        &#x2F;&#x2F; 记录每个节点的直接子节点\n        Map&lt;Integer, List&lt;Integer&gt;&gt; map &#x3D; new HashMap&lt;&gt;();\n        for (int i &#x3D; 0; i &lt; size; i++) &#123;\n            map.put(i, new ArrayList&lt;&gt;());\n        &#125;\n        for (int i &#x3D; 1; i &lt; size; i++) &#123;\n            map.get(parents[i]).add(i);\n        &#125;\n\n        &#x2F;&#x2F; 记录每个子节点为根节点的树中节点数\n        counts &#x3D; new int[size];\n        for (int i &#x3D; 0; i &lt; size; i++) &#123;\n            if (counts[i] &gt; 0) &#123;\n                continue;\n            &#125;\n            counts[i] &#x3D; dfs(map.get(i), map);\n        &#125;\n\n        &#x2F;&#x2F; 遍历计算每个节点的得分并统计结果\n        long mul &#x3D; 1;\n        for (int num : map.get(0)) &#123;\n            mul *&#x3D; counts[num];\n        &#125;\n        int count &#x3D; 1;\n        for (int i &#x3D; 1; i &lt; size; i++) &#123;\n            long temp &#x3D; 1;\n            for (int num : map.get(i)) &#123;\n                temp *&#x3D; counts[num];\n            &#125;\n            temp *&#x3D; (size - counts[i]);\n            if (temp &gt; mul) &#123;\n                mul &#x3D; temp;\n                count &#x3D; 1;\n            &#125; else if (temp &#x3D;&#x3D; mul) &#123;\n                count++;\n            &#125;\n        &#125;\n        return count;\n    &#125;\n    &#x2F;**\n     * 计算每个节点为根节点的树中节点数\n     *&#x2F;\n    private int dfs(List&lt;Integer&gt; list, Map&lt;Integer, List&lt;Integer&gt;&gt; map) &#123;\n        if (list.size() &#x3D;&#x3D; 0) &#123;\n            return 1;\n        &#125;\n        int count &#x3D; 1;\n        for (int i : list) &#123;\n            if (counts[i] &gt; 0) &#123;\n                count +&#x3D; counts[i];\n            &#125; else &#123;\n                count +&#x3D; dfs(map.get(i), map);\n            &#125;\n        &#125;\n        return count;\n    &#125;\n&#125;</code></pre>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"cover":"https://blog.huangge1199.cn/post/jpaCompositePK/bg.jpg","excerpt":"","more":"<p>2022年03月11日 力扣每日一题</p>\n<h1>题目</h1>\n<p>给你一棵根节点为 <code>0</code> 的 <strong>二叉树</strong> ，它总共有 <code>n</code> 个节点，节点编号为 <code>0</code> 到 <code>n - 1</code> 。同时给你一个下标从 <strong>0</strong> 开始的整数数组 <code>parents</code> 表示这棵树，其中 <code>parents[i]</code> 是节点 <code>i</code> 的父节点。由于节点 <code>0</code> 是根，所以 <code>parents[0] == -1</code> 。</p>\n<p>一个子树的 <strong>大小</strong> 为这个子树内节点的数目。每个节点都有一个与之关联的 <strong>分数</strong> 。求出某个节点分数的方法是，将这个节点和与它相连的边全部 <strong>删除</strong> ，剩余部分是若干个 <strong>非空</strong> 子树，这个节点的 <strong>分数</strong> 为所有这些子树 <strong>大小的乘积</strong> 。</p>\n<p>请你返回有 <strong>最高得分</strong> 节点的 <strong>数目</strong> 。</p>\n<p> </p>\n<p><strong>示例 1:</strong></p>\n<p><img alt=\"example-1\" src=\"https://assets.leetcode.com/uploads/2021/10/03/example-1.png\" style=\"width: 604px; height: 266px;\"></p>\n<pre><b>输入：</b>parents = [-1,2,0,2,0]\n<b>输出：</b>3\n<strong>解释：</strong>\n- 节点 0 的分数为：3 * 1 = 3\n- 节点 1 的分数为：4 = 4\n- 节点 2 的分数为：1 * 1 * 2 = 2\n- 节点 3 的分数为：4 = 4\n- 节点 4 的分数为：4 = 4\n最高得分为 4 ，有三个节点得分为 4 （分别是节点 1，3 和 4 ）。\n</pre>\n<p><strong>示例 2：</strong></p>\n<p><img alt=\"example-2\" src=\"https://assets.leetcode.com/uploads/2021/10/03/example-2.png\" style=\"width: 95px; height: 143px;\"></p>\n<pre><b>输入：</b>parents = [-1,2,0]\n<b>输出：</b>2\n<strong>解释：</strong>\n- 节点 0 的分数为：2 = 2\n- 节点 1 的分数为：2 = 2\n- 节点 2 的分数为：1 * 1 = 1\n最高分数为 2 ，有两个节点分数为 2 （分别为节点 0 和 1 ）。\n</pre>\n<p> </p>\n<p><strong>提示：</strong></p>\n<ul>\n    <li><code>n == parents.length</code></li>\n    <li><code>2 <= n <= 10<sup>5</sup></code></li>\n    <li><code>parents[0] == -1</code></li>\n    <li>对于 <code>i != 0</code> ，有 <code>0 <= parents[i] <= n - 1</code></li>\n    <li><code>parents</code> 表示一棵二叉树。</li>\n</ul>\n<div><div>Related Topics</div><div><li>树</li><li>深度优先搜索</li><li>数组</li><li>二叉树</li></div></div>\n<h1>个人解法</h1>\n<p>思路：</p>\n<p>这题是要返回有 <strong>最高得分</strong>节点的 <strong>数目</strong>，那么就要将每一个节点的分数都算一遍，而每一个节点的分数，是由以下几个数的乘积，包括，该节点下左子树中节点的数目、该节点下右子树中节点的数目，以及总节点数-改节点为跟节点的树的节点数。</p>\n<p>那么，我的解题步骤如下：</p>\n<ol>\n<li>\n<p>我先根据题目给的parents数组分别统计每个节点的直连子节点，将其存放进map中。</p>\n</li>\n<li>\n<p>根据map运用递归求出每一个节点做为根节点的子树中的节点数，将其存入counts数组中</p>\n</li>\n<li>\n<p>接下来遍历求每一个节点的分数，并且记入最大得分及节点的数量</p>\n</li>\n</ol>\n<p>下面是java的代码解法：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">class Solution &#123;\n    &#x2F;&#x2F; 记录每一个节点作为根节点的子树中节点的数量\n    int[] counts;\n    public int countHighestScoreNodes(int[] parents) &#123;\n        int size &#x3D; parents.length;\n\n        &#x2F;&#x2F; 记录每个节点的直接子节点\n        Map&lt;Integer, List&lt;Integer&gt;&gt; map &#x3D; new HashMap&lt;&gt;();\n        for (int i &#x3D; 0; i &lt; size; i++) &#123;\n            map.put(i, new ArrayList&lt;&gt;());\n        &#125;\n        for (int i &#x3D; 1; i &lt; size; i++) &#123;\n            map.get(parents[i]).add(i);\n        &#125;\n\n        &#x2F;&#x2F; 记录每个子节点为根节点的树中节点数\n        counts &#x3D; new int[size];\n        for (int i &#x3D; 0; i &lt; size; i++) &#123;\n            if (counts[i] &gt; 0) &#123;\n                continue;\n            &#125;\n            counts[i] &#x3D; dfs(map.get(i), map);\n        &#125;\n\n        &#x2F;&#x2F; 遍历计算每个节点的得分并统计结果\n        long mul &#x3D; 1;\n        for (int num : map.get(0)) &#123;\n            mul *&#x3D; counts[num];\n        &#125;\n        int count &#x3D; 1;\n        for (int i &#x3D; 1; i &lt; size; i++) &#123;\n            long temp &#x3D; 1;\n            for (int num : map.get(i)) &#123;\n                temp *&#x3D; counts[num];\n            &#125;\n            temp *&#x3D; (size - counts[i]);\n            if (temp &gt; mul) &#123;\n                mul &#x3D; temp;\n                count &#x3D; 1;\n            &#125; else if (temp &#x3D;&#x3D; mul) &#123;\n                count++;\n            &#125;\n        &#125;\n        return count;\n    &#125;\n    &#x2F;**\n     * 计算每个节点为根节点的树中节点数\n     *&#x2F;\n    private int dfs(List&lt;Integer&gt; list, Map&lt;Integer, List&lt;Integer&gt;&gt; map) &#123;\n        if (list.size() &#x3D;&#x3D; 0) &#123;\n            return 1;\n        &#125;\n        int count &#x3D; 1;\n        for (int i : list) &#123;\n            if (counts[i] &gt; 0) &#123;\n                count +&#x3D; counts[i];\n            &#125; else &#123;\n                count +&#x3D; dfs(map.get(i), map);\n            &#125;\n        &#125;\n        return count;\n    &#125;\n&#125;</code></pre>\n"},{"title":"力扣590:N 叉树的后序遍历","date":"2022-03-12T02:10:45.000Z","_content":"\n2022年03月12日 力扣每日一题\n\n# 题目\n<p>给定一个 n&nbsp;叉树的根节点<meta charset=\"UTF-8\" />&nbsp;<code>root</code>&nbsp;，返回 <em>其节点值的<strong> 后序遍历</strong></em> 。</p>\n\n<p>n 叉树 在输入中按层序遍历进行序列化表示，每组子节点由空值 <code>null</code> 分隔（请参见示例）。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<p><img src=\"https://assets.leetcode.com/uploads/2018/10/12/narytreeexample.png\" style=\"height: 193px; width: 300px;\" /></p>\n\n<pre>\n<strong>输入：</strong>root = [1,null,3,2,4,null,5,6]\n<strong>输出：</strong>[5,6,3,2,4,1]\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/11/08/sample_4_964.png\" style=\"height: 269px; width: 296px;\" /></p>\n\n<pre>\n<strong>输入：</strong>root = [1,null,2,3,4,5,null,null,6,7,null,8,null,9,10,null,null,11,null,12,null,13,null,null,14]\n<strong>输出：</strong>[2,6,14,11,7,3,12,8,4,13,9,10,5,1]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li>节点总数在范围 <code>[0, 10<sup>4</sup>]</code> 内</li>\n\t<li><code>0 &lt;= Node.val &lt;= 10<sup>4</sup></code></li>\n\t<li>n 叉树的高度小于或等于 <code>1000</code></li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><strong>进阶：</strong>递归法很简单，你可以使用迭代法完成此题吗?</p>\n<div><div>Related Topics</div><div><li>栈</li><li>树</li><li>深度优先搜索</li></div></div>\n\n# 个人解法\n\n思路：\n\n　　这题简单，只需要递归做就好了，对于每一个节点，先存叶子节点，然后存根节点\n\n{% tabs categories%}\n\n<!-- tab Java -->\n\n```java\nimport java.util.ArrayList;\nimport java.util.List;\n\n/*\n// Definition for a Node.\nclass Node {\n    public int val;\n    public List<Node> children;\n\n    public Node() {}\n\n    public Node(int _val) {\n        val = _val;\n    }\n\n    public Node(int _val, List<Node> _children) {\n        val = _val;\n        children = _children;\n    }\n};\n*/\n\nclass Solution {\n    public List<Integer> postorder(Node root) {\n        list = new ArrayList<>();\n        dfs(root);\n        return list;\n    }\n    List<Integer> list;\n    private void dfs(Node root) {\n        if (root == null) {\n            return;\n        }\n        if (root.children.size() == 0) {\n            list.add(root.val);\n            return;\n        }\n        for (Node node : root.children) {\n            dfs(node);\n        }\n        list.add(root.val);\n    }\n}\n```\n\n<!-- endtab -->\n\n<!-- tab Python3 -->\n\n```python\n\"\"\"\n# Definition for a Node.\nclass Node:\n    def __init__(self, val=None, children=None):\n        self.val = val\n        self.children = children\n\"\"\"\nfrom typing import List\n\n\nclass Solution:\n    def postorder(self, root: 'Node') -> List[int]:\n        arr = []\n\n        def dfs(root1: 'Node'):\n            if root1 is None:\n                return\n            if len(root1.children)==0:\n                arr.append(root1.val)\n                return\n            for node in root1.children:\n                dfs(node)\n            arr.append(root1.val)\n        dfs(root)\n        return arr\n```\n\n<!-- endtab -->\n\n{% endtabs %}","source":"_posts/day20220312.md","raw":"---\ntitle: 力扣590:N 叉树的后序遍历\ndate: 2022-03-12 10:10:45\ntags: [力扣]\ncategories: [算法,力扣,每日一题]\n---\n\n2022年03月12日 力扣每日一题\n\n# 题目\n<p>给定一个 n&nbsp;叉树的根节点<meta charset=\"UTF-8\" />&nbsp;<code>root</code>&nbsp;，返回 <em>其节点值的<strong> 后序遍历</strong></em> 。</p>\n\n<p>n 叉树 在输入中按层序遍历进行序列化表示，每组子节点由空值 <code>null</code> 分隔（请参见示例）。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<p><img src=\"https://assets.leetcode.com/uploads/2018/10/12/narytreeexample.png\" style=\"height: 193px; width: 300px;\" /></p>\n\n<pre>\n<strong>输入：</strong>root = [1,null,3,2,4,null,5,6]\n<strong>输出：</strong>[5,6,3,2,4,1]\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/11/08/sample_4_964.png\" style=\"height: 269px; width: 296px;\" /></p>\n\n<pre>\n<strong>输入：</strong>root = [1,null,2,3,4,5,null,null,6,7,null,8,null,9,10,null,null,11,null,12,null,13,null,null,14]\n<strong>输出：</strong>[2,6,14,11,7,3,12,8,4,13,9,10,5,1]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li>节点总数在范围 <code>[0, 10<sup>4</sup>]</code> 内</li>\n\t<li><code>0 &lt;= Node.val &lt;= 10<sup>4</sup></code></li>\n\t<li>n 叉树的高度小于或等于 <code>1000</code></li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><strong>进阶：</strong>递归法很简单，你可以使用迭代法完成此题吗?</p>\n<div><div>Related Topics</div><div><li>栈</li><li>树</li><li>深度优先搜索</li></div></div>\n\n# 个人解法\n\n思路：\n\n　　这题简单，只需要递归做就好了，对于每一个节点，先存叶子节点，然后存根节点\n\n{% tabs categories%}\n\n<!-- tab Java -->\n\n```java\nimport java.util.ArrayList;\nimport java.util.List;\n\n/*\n// Definition for a Node.\nclass Node {\n    public int val;\n    public List<Node> children;\n\n    public Node() {}\n\n    public Node(int _val) {\n        val = _val;\n    }\n\n    public Node(int _val, List<Node> _children) {\n        val = _val;\n        children = _children;\n    }\n};\n*/\n\nclass Solution {\n    public List<Integer> postorder(Node root) {\n        list = new ArrayList<>();\n        dfs(root);\n        return list;\n    }\n    List<Integer> list;\n    private void dfs(Node root) {\n        if (root == null) {\n            return;\n        }\n        if (root.children.size() == 0) {\n            list.add(root.val);\n            return;\n        }\n        for (Node node : root.children) {\n            dfs(node);\n        }\n        list.add(root.val);\n    }\n}\n```\n\n<!-- endtab -->\n\n<!-- tab Python3 -->\n\n```python\n\"\"\"\n# Definition for a Node.\nclass Node:\n    def __init__(self, val=None, children=None):\n        self.val = val\n        self.children = children\n\"\"\"\nfrom typing import List\n\n\nclass Solution:\n    def postorder(self, root: 'Node') -> List[int]:\n        arr = []\n\n        def dfs(root1: 'Node'):\n            if root1 is None:\n                return\n            if len(root1.children)==0:\n                arr.append(root1.val)\n                return\n            for node in root1.children:\n                dfs(node)\n            arr.append(root1.val)\n        dfs(root)\n        return arr\n```\n\n<!-- endtab -->\n\n{% endtabs %}","slug":"day20220312","published":1,"updated":"2022-06-03T06:00:55.561Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl42z5h6n002g3gn6fadn70ei","content":"<p>2022年03月12日 力扣每日一题</p>\n<h1>题目</h1>\n<p>给定一个 n&nbsp;叉树的根节点<meta charset=\"UTF-8\" />&nbsp;<code>root</code>&nbsp;，返回 <em>其节点值的<strong> 后序遍历</strong></em> 。</p>\n<p>n 叉树 在输入中按层序遍历进行序列化表示，每组子节点由空值 <code>null</code> 分隔（请参见示例）。</p>\n<p>&nbsp;</p>\n<p><strong>示例 1：</strong></p>\n<p><img src=\"https://assets.leetcode.com/uploads/2018/10/12/narytreeexample.png\" style=\"height: 193px; width: 300px;\" /></p>\n<pre>\n<strong>输入：</strong>root = [1,null,3,2,4,null,5,6]\n<strong>输出：</strong>[5,6,3,2,4,1]\n</pre>\n<p><strong>示例 2：</strong></p>\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/11/08/sample_4_964.png\" style=\"height: 269px; width: 296px;\" /></p>\n<pre>\n<strong>输入：</strong>root = [1,null,2,3,4,5,null,null,6,7,null,8,null,9,10,null,null,11,null,12,null,13,null,null,14]\n<strong>输出：</strong>[2,6,14,11,7,3,12,8,4,13,9,10,5,1]\n</pre>\n<p>&nbsp;</p>\n<p><strong>提示：</strong></p>\n<ul>\n\t<li>节点总数在范围 <code>[0, 10<sup>4</sup>]</code> 内</li>\n\t<li><code>0 &lt;= Node.val &lt;= 10<sup>4</sup></code></li>\n\t<li>n 叉树的高度小于或等于 <code>1000</code></li>\n</ul>\n<p>&nbsp;</p>\n<p><strong>进阶：</strong>递归法很简单，你可以使用迭代法完成此题吗?</p>\n<div><div>Related Topics</div><div><li>栈</li><li>树</li><li>深度优先搜索</li></div></div>\n<h1>个人解法</h1>\n<p>思路：</p>\n<p>这题简单，只需要递归做就好了，对于每一个节点，先存叶子节点，然后存根节点</p>\n<div class=\"tabs\" id=\"categories\"><ul class=\"nav-tabs\"><li class=\"tab active\"><button type=\"button\" data-href=\"#categories-1\">Java</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#categories-2\">Python3</button></li></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"categories-1\"><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">import java.util.ArrayList;\nimport java.util.List;\n\n&#x2F;*\n&#x2F;&#x2F; Definition for a Node.\nclass Node &#123;\n    public int val;\n    public List&lt;Node&gt; children;\n\n    public Node() &#123;&#125;\n\n    public Node(int _val) &#123;\n        val &#x3D; _val;\n    &#125;\n\n    public Node(int _val, List&lt;Node&gt; _children) &#123;\n        val &#x3D; _val;\n        children &#x3D; _children;\n    &#125;\n&#125;;\n*&#x2F;\n\nclass Solution &#123;\n    public List&lt;Integer&gt; postorder(Node root) &#123;\n        list &#x3D; new ArrayList&lt;&gt;();\n        dfs(root);\n        return list;\n    &#125;\n    List&lt;Integer&gt; list;\n    private void dfs(Node root) &#123;\n        if (root &#x3D;&#x3D; null) &#123;\n            return;\n        &#125;\n        if (root.children.size() &#x3D;&#x3D; 0) &#123;\n            list.add(root.val);\n            return;\n        &#125;\n        for (Node node : root.children) &#123;\n            dfs(node);\n        &#125;\n        list.add(root.val);\n    &#125;\n&#125;</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"categories-2\"><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">&quot;&quot;&quot;\n# Definition for a Node.\nclass Node:\n    def __init__(self, val&#x3D;None, children&#x3D;None):\n        self.val &#x3D; val\n        self.children &#x3D; children\n&quot;&quot;&quot;\nfrom typing import List\n\n\nclass Solution:\n    def postorder(self, root: &#39;Node&#39;) -&gt; List[int]:\n        arr &#x3D; []\n\n        def dfs(root1: &#39;Node&#39;):\n            if root1 is None:\n                return\n            if len(root1.children)&#x3D;&#x3D;0:\n                arr.append(root1.val)\n                return\n            for node in root1.children:\n                dfs(node)\n            arr.append(root1.val)\n        dfs(root)\n        return arr</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div></div>","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"cover":"https://blog.huangge1199.cn/post/day20220119/bg.jpeg","excerpt":"","more":"<p>2022年03月12日 力扣每日一题</p>\n<h1>题目</h1>\n<p>给定一个 n&nbsp;叉树的根节点<meta charset=\"UTF-8\" />&nbsp;<code>root</code>&nbsp;，返回 <em>其节点值的<strong> 后序遍历</strong></em> 。</p>\n<p>n 叉树 在输入中按层序遍历进行序列化表示，每组子节点由空值 <code>null</code> 分隔（请参见示例）。</p>\n<p>&nbsp;</p>\n<p><strong>示例 1：</strong></p>\n<p><img src=\"https://assets.leetcode.com/uploads/2018/10/12/narytreeexample.png\" style=\"height: 193px; width: 300px;\" /></p>\n<pre>\n<strong>输入：</strong>root = [1,null,3,2,4,null,5,6]\n<strong>输出：</strong>[5,6,3,2,4,1]\n</pre>\n<p><strong>示例 2：</strong></p>\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/11/08/sample_4_964.png\" style=\"height: 269px; width: 296px;\" /></p>\n<pre>\n<strong>输入：</strong>root = [1,null,2,3,4,5,null,null,6,7,null,8,null,9,10,null,null,11,null,12,null,13,null,null,14]\n<strong>输出：</strong>[2,6,14,11,7,3,12,8,4,13,9,10,5,1]\n</pre>\n<p>&nbsp;</p>\n<p><strong>提示：</strong></p>\n<ul>\n\t<li>节点总数在范围 <code>[0, 10<sup>4</sup>]</code> 内</li>\n\t<li><code>0 &lt;= Node.val &lt;= 10<sup>4</sup></code></li>\n\t<li>n 叉树的高度小于或等于 <code>1000</code></li>\n</ul>\n<p>&nbsp;</p>\n<p><strong>进阶：</strong>递归法很简单，你可以使用迭代法完成此题吗?</p>\n<div><div>Related Topics</div><div><li>栈</li><li>树</li><li>深度优先搜索</li></div></div>\n<h1>个人解法</h1>\n<p>思路：</p>\n<p>这题简单，只需要递归做就好了，对于每一个节点，先存叶子节点，然后存根节点</p>\n<div class=\"tabs\" id=\"categories\"><ul class=\"nav-tabs\"><li class=\"tab active\"><button type=\"button\" data-href=\"#categories-1\">Java</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#categories-2\">Python3</button></li></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"categories-1\"><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">import java.util.ArrayList;\nimport java.util.List;\n\n&#x2F;*\n&#x2F;&#x2F; Definition for a Node.\nclass Node &#123;\n    public int val;\n    public List&lt;Node&gt; children;\n\n    public Node() &#123;&#125;\n\n    public Node(int _val) &#123;\n        val &#x3D; _val;\n    &#125;\n\n    public Node(int _val, List&lt;Node&gt; _children) &#123;\n        val &#x3D; _val;\n        children &#x3D; _children;\n    &#125;\n&#125;;\n*&#x2F;\n\nclass Solution &#123;\n    public List&lt;Integer&gt; postorder(Node root) &#123;\n        list &#x3D; new ArrayList&lt;&gt;();\n        dfs(root);\n        return list;\n    &#125;\n    List&lt;Integer&gt; list;\n    private void dfs(Node root) &#123;\n        if (root &#x3D;&#x3D; null) &#123;\n            return;\n        &#125;\n        if (root.children.size() &#x3D;&#x3D; 0) &#123;\n            list.add(root.val);\n            return;\n        &#125;\n        for (Node node : root.children) &#123;\n            dfs(node);\n        &#125;\n        list.add(root.val);\n    &#125;\n&#125;</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"categories-2\"><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">&quot;&quot;&quot;\n# Definition for a Node.\nclass Node:\n    def __init__(self, val&#x3D;None, children&#x3D;None):\n        self.val &#x3D; val\n        self.children &#x3D; children\n&quot;&quot;&quot;\nfrom typing import List\n\n\nclass Solution:\n    def postorder(self, root: &#39;Node&#39;) -&gt; List[int]:\n        arr &#x3D; []\n\n        def dfs(root1: &#39;Node&#39;):\n            if root1 is None:\n                return\n            if len(root1.children)&#x3D;&#x3D;0:\n                arr.append(root1.val)\n                return\n            for node in root1.children:\n                dfs(node)\n            arr.append(root1.val)\n        dfs(root)\n        return arr</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div></div>"},{"title":"力扣357:统计各位数字都不同的数字个数","date":"2022-04-11T06:54:43.000Z","_content":"\n2022年04月11日 力扣每日一题 \n\n[357:统计各位数字都不同的数字个数](https://leetcode-cn.com/problems/count-numbers-with-unique-digits/)\n\n# 题目\n\n给你一个整数 <code>n</code> ，统计并返回各位数字都不同的数字 <code>x</code> 的个数，其中 <code>0 &lt;= x &lt; 10<sup>n</sup></code><sup>&nbsp;</sup>。\n\n<div class=\"original__bRMd\">\n<div>\n<p> </p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入：</strong>n = 2\n<strong>输出：</strong>91\n<strong>解释：</strong>答案应为除去 <code>11、22、33、44、55、66、77、88、99 </code>外，在 0 ≤ x < 100 范围内的所有数字。 \n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>\n<strong>输入：</strong>n = 0\n<strong>输出：</strong>1\n</pre>\n\n</div>\n</div>\n\n<p> </p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n    <li><code>0 <= n <= 8</code></li>\n</ul>\n<div><div>Related Topics</div><div><li>数学</li><li>动态规划</li><li>回溯</li></div></div>\n\n# 个人解法\n\n思路：\n\n今天这题在我看来就是一个排列组合的问题，首先我们先考虑下边界，\n\n- n == 0 时，只有一种结果，0\n\n- n == 1 时，0~9，共10种情况\n\n- 其他值：由两部分组成，满位的数（即首位不为0），以及比它少一位的全部情况\n  \n  - 考虑到首位不能为0，因此，首位只能是1~9\n  - 接下来的位置，与前面的数字不能重复但是可以为0\n  \n  总体来说，首位不为0的情况，个数是`9*9*8*。。。。`\n\n{% tabs categories%}\n\n<!-- tab Java -->\n\n```java\nclass Solution {\n    public int countNumbersWithUniqueDigits(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        if (n == 1) {\n            return 10;\n        }\n        int sub = 9;\n        int count = 10;\n        int mul = 9;\n        for (int i = 2; i <= n; i++) {\n            count += mul * sub;\n            mul *= sub;\n            sub--;\n        }\n        return count;\n    }\n}\n```\n\n<!-- endtab -->\n\n<!-- tab Python3 -->\n\n```python\nclass Solution:\n    def countNumbersWithUniqueDigits(self, n: int) -> int:\n        if n == 0:\n            return 1\n        if n == 1:\n            return 10\n        sub = 9\n        count = 10\n        mul = 9\n        for i in range(2, n + 1):\n            count += mul * sub\n            mul *= sub\n            sub -= 1\n        return count\n```\n\n<!-- endtab -->\n\n{% endtabs %}\n","source":"_posts/day20220411.md","raw":"---\ntitle: 力扣357:统计各位数字都不同的数字个数\ndate: 2022-04-11 14:54:43 \ntags: [力扣]\ncategories: [算法,力扣,每日一题]\n---\n\n2022年04月11日 力扣每日一题 \n\n[357:统计各位数字都不同的数字个数](https://leetcode-cn.com/problems/count-numbers-with-unique-digits/)\n\n# 题目\n\n给你一个整数 <code>n</code> ，统计并返回各位数字都不同的数字 <code>x</code> 的个数，其中 <code>0 &lt;= x &lt; 10<sup>n</sup></code><sup>&nbsp;</sup>。\n\n<div class=\"original__bRMd\">\n<div>\n<p> </p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入：</strong>n = 2\n<strong>输出：</strong>91\n<strong>解释：</strong>答案应为除去 <code>11、22、33、44、55、66、77、88、99 </code>外，在 0 ≤ x < 100 范围内的所有数字。 \n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>\n<strong>输入：</strong>n = 0\n<strong>输出：</strong>1\n</pre>\n\n</div>\n</div>\n\n<p> </p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n    <li><code>0 <= n <= 8</code></li>\n</ul>\n<div><div>Related Topics</div><div><li>数学</li><li>动态规划</li><li>回溯</li></div></div>\n\n# 个人解法\n\n思路：\n\n今天这题在我看来就是一个排列组合的问题，首先我们先考虑下边界，\n\n- n == 0 时，只有一种结果，0\n\n- n == 1 时，0~9，共10种情况\n\n- 其他值：由两部分组成，满位的数（即首位不为0），以及比它少一位的全部情况\n  \n  - 考虑到首位不能为0，因此，首位只能是1~9\n  - 接下来的位置，与前面的数字不能重复但是可以为0\n  \n  总体来说，首位不为0的情况，个数是`9*9*8*。。。。`\n\n{% tabs categories%}\n\n<!-- tab Java -->\n\n```java\nclass Solution {\n    public int countNumbersWithUniqueDigits(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        if (n == 1) {\n            return 10;\n        }\n        int sub = 9;\n        int count = 10;\n        int mul = 9;\n        for (int i = 2; i <= n; i++) {\n            count += mul * sub;\n            mul *= sub;\n            sub--;\n        }\n        return count;\n    }\n}\n```\n\n<!-- endtab -->\n\n<!-- tab Python3 -->\n\n```python\nclass Solution:\n    def countNumbersWithUniqueDigits(self, n: int) -> int:\n        if n == 0:\n            return 1\n        if n == 1:\n            return 10\n        sub = 9\n        count = 10\n        mul = 9\n        for i in range(2, n + 1):\n            count += mul * sub\n            mul *= sub\n            sub -= 1\n        return count\n```\n\n<!-- endtab -->\n\n{% endtabs %}\n","slug":"day20220411","published":1,"updated":"2022-06-03T06:00:55.561Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl42z5h6o002j3gn60kvd8er2","content":"<p>2022年04月11日 力扣每日一题</p>\n<p><a href=\"https://leetcode-cn.com/problems/count-numbers-with-unique-digits/\">357:统计各位数字都不同的数字个数</a></p>\n<h1>题目</h1>\n<p>给你一个整数 <code>n</code> ，统计并返回各位数字都不同的数字 <code>x</code> 的个数，其中 <code>0 &lt;= x &lt; 10<sup>n</sup></code><sup> </sup>。</p>\n<div class=\"original__bRMd\">\n<div>\n<p> </p>\n<p><strong>示例 1：</strong></p>\n<pre>\n<strong>输入：</strong>n = 2\n<strong>输出：</strong>91\n<strong>解释：</strong>答案应为除去 <code>11、22、33、44、55、66、77、88、99 </code>外，在 0 ≤ x < 100 范围内的所有数字。 \n</pre>\n<p><strong>示例 2：</strong></p>\n<pre>\n<strong>输入：</strong>n = 0\n<strong>输出：</strong>1\n</pre>\n</div>\n</div>\n<p> </p>\n<p><strong>提示：</strong></p>\n<ul>\n    <li><code>0 <= n <= 8</code></li>\n</ul>\n<div><div>Related Topics</div><div><li>数学</li><li>动态规划</li><li>回溯</li></div></div>\n<h1>个人解法</h1>\n<p>思路：</p>\n<p>今天这题在我看来就是一个排列组合的问题，首先我们先考虑下边界，</p>\n<ul>\n<li>\n<p>n == 0 时，只有一种结果，0</p>\n</li>\n<li>\n<p>n == 1 时，0~9，共10种情况</p>\n</li>\n<li>\n<p>其他值：由两部分组成，满位的数（即首位不为0），以及比它少一位的全部情况</p>\n<ul>\n<li>考虑到首位不能为0，因此，首位只能是1~9</li>\n<li>接下来的位置，与前面的数字不能重复但是可以为0</li>\n</ul>\n<p>总体来说，首位不为0的情况，个数是<code>9*9*8*。。。。</code></p>\n</li>\n</ul>\n<div class=\"tabs\" id=\"categories\"><ul class=\"nav-tabs\"><li class=\"tab active\"><button type=\"button\" data-href=\"#categories-1\">Java</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#categories-2\">Python3</button></li></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"categories-1\"><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">class Solution &#123;\n    public int countNumbersWithUniqueDigits(int n) &#123;\n        if (n &#x3D;&#x3D; 0) &#123;\n            return 1;\n        &#125;\n        if (n &#x3D;&#x3D; 1) &#123;\n            return 10;\n        &#125;\n        int sub &#x3D; 9;\n        int count &#x3D; 10;\n        int mul &#x3D; 9;\n        for (int i &#x3D; 2; i &lt;&#x3D; n; i++) &#123;\n            count +&#x3D; mul * sub;\n            mul *&#x3D; sub;\n            sub--;\n        &#125;\n        return count;\n    &#125;\n&#125;</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"categories-2\"><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">class Solution:\n    def countNumbersWithUniqueDigits(self, n: int) -&gt; int:\n        if n &#x3D;&#x3D; 0:\n            return 1\n        if n &#x3D;&#x3D; 1:\n            return 10\n        sub &#x3D; 9\n        count &#x3D; 10\n        mul &#x3D; 9\n        for i in range(2, n + 1):\n            count +&#x3D; mul * sub\n            mul *&#x3D; sub\n            sub -&#x3D; 1\n        return count</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div></div>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"cover":"https://blog.huangge1199.cn/post/day20220121/bg.jpeg","excerpt":"","more":"<p>2022年04月11日 力扣每日一题</p>\n<p><a href=\"https://leetcode-cn.com/problems/count-numbers-with-unique-digits/\">357:统计各位数字都不同的数字个数</a></p>\n<h1>题目</h1>\n<p>给你一个整数 <code>n</code> ，统计并返回各位数字都不同的数字 <code>x</code> 的个数，其中 <code>0 &lt;= x &lt; 10<sup>n</sup></code><sup> </sup>。</p>\n<div class=\"original__bRMd\">\n<div>\n<p> </p>\n<p><strong>示例 1：</strong></p>\n<pre>\n<strong>输入：</strong>n = 2\n<strong>输出：</strong>91\n<strong>解释：</strong>答案应为除去 <code>11、22、33、44、55、66、77、88、99 </code>外，在 0 ≤ x < 100 范围内的所有数字。 \n</pre>\n<p><strong>示例 2：</strong></p>\n<pre>\n<strong>输入：</strong>n = 0\n<strong>输出：</strong>1\n</pre>\n</div>\n</div>\n<p> </p>\n<p><strong>提示：</strong></p>\n<ul>\n    <li><code>0 <= n <= 8</code></li>\n</ul>\n<div><div>Related Topics</div><div><li>数学</li><li>动态规划</li><li>回溯</li></div></div>\n<h1>个人解法</h1>\n<p>思路：</p>\n<p>今天这题在我看来就是一个排列组合的问题，首先我们先考虑下边界，</p>\n<ul>\n<li>\n<p>n == 0 时，只有一种结果，0</p>\n</li>\n<li>\n<p>n == 1 时，0~9，共10种情况</p>\n</li>\n<li>\n<p>其他值：由两部分组成，满位的数（即首位不为0），以及比它少一位的全部情况</p>\n<ul>\n<li>考虑到首位不能为0，因此，首位只能是1~9</li>\n<li>接下来的位置，与前面的数字不能重复但是可以为0</li>\n</ul>\n<p>总体来说，首位不为0的情况，个数是<code>9*9*8*。。。。</code></p>\n</li>\n</ul>\n<div class=\"tabs\" id=\"categories\"><ul class=\"nav-tabs\"><li class=\"tab active\"><button type=\"button\" data-href=\"#categories-1\">Java</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#categories-2\">Python3</button></li></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"categories-1\"><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">class Solution &#123;\n    public int countNumbersWithUniqueDigits(int n) &#123;\n        if (n &#x3D;&#x3D; 0) &#123;\n            return 1;\n        &#125;\n        if (n &#x3D;&#x3D; 1) &#123;\n            return 10;\n        &#125;\n        int sub &#x3D; 9;\n        int count &#x3D; 10;\n        int mul &#x3D; 9;\n        for (int i &#x3D; 2; i &lt;&#x3D; n; i++) &#123;\n            count +&#x3D; mul * sub;\n            mul *&#x3D; sub;\n            sub--;\n        &#125;\n        return count;\n    &#125;\n&#125;</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"categories-2\"><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">class Solution:\n    def countNumbersWithUniqueDigits(self, n: int) -&gt; int:\n        if n &#x3D;&#x3D; 0:\n            return 1\n        if n &#x3D;&#x3D; 1:\n            return 10\n        sub &#x3D; 9\n        count &#x3D; 10\n        mul &#x3D; 9\n        for i in range(2, n + 1):\n            count +&#x3D; mul * sub\n            mul *&#x3D; sub\n            sub -&#x3D; 1\n        return count</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div></div>\n"},{"title":"力扣675. 为高尔夫比赛砍树","date":"2022-05-24T01:18:23.000Z","_content":"\n2022年05月24日 力扣每日一题\n\n[675. 为高尔夫比赛砍树](https://leetcode.cn/problems/cut-off-trees-for-golf-event/)\n\n# 题目\n\n<p>你被请来给一个要举办高尔夫比赛的树林砍树。树林由一个 <code>m x n</code> 的矩阵表示， 在这个矩阵中：</p>\n\n<ul>  \n   <li><code>0</code> 表示障碍，无法触碰</li>  \n   <li><code>1</code> 表示地面，可以行走</li>  \n   <li><code>比 1 大的数</code> 表示有树的单元格，可以行走，数值表示树的高度</li>  \n</ul>\n\n<p>每一步，你都可以向上、下、左、右四个方向之一移动一个单位，如果你站的地方有一棵树，那么你可以决定是否要砍倒它。</p>\n\n<p>你需要按照树的高度从低向高砍掉所有的树，每砍过一颗树，该单元格的值变为 <code>1</code>（即变为地面）。</p>\n\n<p>你将从 <code>(0, 0)</code> 点开始工作，返回你砍完所有树需要走的最小步数。 如果你无法砍完所有的树，返回 <code>-1</code> 。</p>\n\n<p>可以保证的是，没有两棵树的高度是相同的，并且你至少需要砍倒一棵树。</p>\n\n<p> </p>\n\n<p><strong>示例 1：</strong></p>  \n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/11/26/trees1.jpg\" style=\"width: 242px; height: 242px;\" />  \n<pre>  \n<strong>输入：</strong>forest = [[1,2,3],[0,0,4],[7,6,5]]  \n<strong>输出：</strong>6  \n<strong>解释：</strong>沿着上面的路径，你可以用 6 步，按从最矮到最高的顺序砍掉这些树。</pre>\n\n<p><strong>示例 2：</strong></p>  \n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/11/26/trees2.jpg\" style=\"width: 242px; height: 242px;\" />  \n<pre>  \n<strong>输入：</strong>forest = [[1,2,3],[0,0,0],[7,6,5]]  \n<strong>输出：</strong>-1  \n<strong>解释：</strong>由于中间一行被障碍阻塞，无法访问最下面一行中的树。  \n</pre>\n\n<p><strong>示例 3：</strong></p>\n\n<pre>  \n<strong>输入：</strong>forest = [[2,3,4],[0,0,5],[8,7,6]]  \n<strong>输出：</strong>6  \n<strong>解释：</strong>可以按与示例 1 相同的路径来砍掉所有的树。  \n(0,0) 位置的树，可以直接砍去，不用算步数。  \n</pre>\n\n<p> </p>\n\n<p><strong>提示：</strong></p>\n\n<ul>  \n   <li><code>m == forest.length</code></li>  \n   <li><code>n == forest[i].length</code></li>  \n   <li><code>1 <= m, n <= 50</code></li>  \n   <li><code>0 <= forest[i][j] <= 10<sup>9</sup></code></li>  \n</ul>  \n<div><div>Related Topics</div><div><li>广度优先搜索</li><li>数组</li><li>矩阵</li><li>堆（优先队列）</li></div></div>\n\n# 思路\n\n1. 记录每颗需要砍树的位置，并排好序\n   \n   注意：这个需要砍的树是从<font color=\"red\">2</font>开始算的，不是<font color=\"red\">1</font>\n\n2. 循环计算到达下一棵被砍树的步数\n   \n   可使用广度优先搜索，从出发的树开始，依次取出并将下一步能够到达的树加入到队列，直到目标树为止\n\n# 代码\n\njava：\n\n```java\nclass Solution {\n    public int cutOffTree(List<List<Integer>> forest) {\n        /*\n        起始位置不可到达的情况，即坐标（0,0）位置为0\n         */\n        if (forest.get(0).get(0) == 0) {\n            return -1;\n        }\n        int xL = forest.size();\n        int yL = forest.get(0).size();\n        /*\n        按照顺序排列需要砍的树，记录每棵树的位置\n         */\n        TreeMap<Integer, Pair<Integer, Integer>> map = new TreeMap<>();\n        for (int i = 0; i < xL; i++) {\n            List<Integer> list = forest.get(i);\n            for (int j = 0; j < yL; j++) {\n                if (list.get(j) > 1) {\n                    map.put(list.get(j), new Pair<>(i, j));\n                }\n            }\n        }\n        int step = 0;\n        Pair<Integer, Integer> pair = null;\n        Queue<Pair<Integer, Integer>> queue = new LinkedList<>();\n        queue.add(new Pair<>(0, 0));\n        boolean[][] uses = new boolean[xL][yL];\n        uses[0][0] = true;\n        int[] xs = new int[]{1, -1, 0, 0};\n        int[] ys = new int[]{0, 0, 1, -1};\n        for (int key : map.keySet()) {\n            Pair<Integer, Integer> cur = map.get(key);\n            if (queue.peek().equals(cur)) {\n                continue;\n            }\n            boolean bl = false;\n            /*\n            计算到达下一棵需要砍树的步数\n             */\n            while (!queue.isEmpty() && !bl) {\n                int nums = queue.size();\n                step++;\n                for (int i = 0; i < nums && !bl; i++) {\n                    Pair<Integer, Integer> tmp = queue.poll();\n                    for (int j = 0; j < 4; j++) {\n                        int x = tmp.getKey() + xs[j];\n                        int y = tmp.getValue() + ys[j];\n                        if (x == cur.getKey() && y == cur.getValue()) {\n                            bl = true;\n                            break;\n                        }\n                        if (x < 0 || x >= xL || y < 0 || y\n                                >= yL || uses[x][y] || forest.get(x).get(y\n                            continue;\n                        }\n                        queue.add(new Pair<>(x, y));\n                        uses[x][y] = true;\n                    }\n                }\n            }\n            if (!bl) {\n                return -1;\n            }\n            queue = new LinkedList<>();\n            queue.add(cur);\n            uses = new boolean[xL][yL];\n            uses[cur.getKey()][cur.getValue()] = true;\n        }\n        return step;\n    }\n}\n```\n","source":"_posts/day20220523.md","raw":"---\ntitle: 力扣675. 为高尔夫比赛砍树\ndate: 2022-05-24 09:18:23\ntags: [力扣]\ncategories: [算法,力扣,每日一题]\n---\n\n2022年05月24日 力扣每日一题\n\n[675. 为高尔夫比赛砍树](https://leetcode.cn/problems/cut-off-trees-for-golf-event/)\n\n# 题目\n\n<p>你被请来给一个要举办高尔夫比赛的树林砍树。树林由一个 <code>m x n</code> 的矩阵表示， 在这个矩阵中：</p>\n\n<ul>  \n   <li><code>0</code> 表示障碍，无法触碰</li>  \n   <li><code>1</code> 表示地面，可以行走</li>  \n   <li><code>比 1 大的数</code> 表示有树的单元格，可以行走，数值表示树的高度</li>  \n</ul>\n\n<p>每一步，你都可以向上、下、左、右四个方向之一移动一个单位，如果你站的地方有一棵树，那么你可以决定是否要砍倒它。</p>\n\n<p>你需要按照树的高度从低向高砍掉所有的树，每砍过一颗树，该单元格的值变为 <code>1</code>（即变为地面）。</p>\n\n<p>你将从 <code>(0, 0)</code> 点开始工作，返回你砍完所有树需要走的最小步数。 如果你无法砍完所有的树，返回 <code>-1</code> 。</p>\n\n<p>可以保证的是，没有两棵树的高度是相同的，并且你至少需要砍倒一棵树。</p>\n\n<p> </p>\n\n<p><strong>示例 1：</strong></p>  \n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/11/26/trees1.jpg\" style=\"width: 242px; height: 242px;\" />  \n<pre>  \n<strong>输入：</strong>forest = [[1,2,3],[0,0,4],[7,6,5]]  \n<strong>输出：</strong>6  \n<strong>解释：</strong>沿着上面的路径，你可以用 6 步，按从最矮到最高的顺序砍掉这些树。</pre>\n\n<p><strong>示例 2：</strong></p>  \n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/11/26/trees2.jpg\" style=\"width: 242px; height: 242px;\" />  \n<pre>  \n<strong>输入：</strong>forest = [[1,2,3],[0,0,0],[7,6,5]]  \n<strong>输出：</strong>-1  \n<strong>解释：</strong>由于中间一行被障碍阻塞，无法访问最下面一行中的树。  \n</pre>\n\n<p><strong>示例 3：</strong></p>\n\n<pre>  \n<strong>输入：</strong>forest = [[2,3,4],[0,0,5],[8,7,6]]  \n<strong>输出：</strong>6  \n<strong>解释：</strong>可以按与示例 1 相同的路径来砍掉所有的树。  \n(0,0) 位置的树，可以直接砍去，不用算步数。  \n</pre>\n\n<p> </p>\n\n<p><strong>提示：</strong></p>\n\n<ul>  \n   <li><code>m == forest.length</code></li>  \n   <li><code>n == forest[i].length</code></li>  \n   <li><code>1 <= m, n <= 50</code></li>  \n   <li><code>0 <= forest[i][j] <= 10<sup>9</sup></code></li>  \n</ul>  \n<div><div>Related Topics</div><div><li>广度优先搜索</li><li>数组</li><li>矩阵</li><li>堆（优先队列）</li></div></div>\n\n# 思路\n\n1. 记录每颗需要砍树的位置，并排好序\n   \n   注意：这个需要砍的树是从<font color=\"red\">2</font>开始算的，不是<font color=\"red\">1</font>\n\n2. 循环计算到达下一棵被砍树的步数\n   \n   可使用广度优先搜索，从出发的树开始，依次取出并将下一步能够到达的树加入到队列，直到目标树为止\n\n# 代码\n\njava：\n\n```java\nclass Solution {\n    public int cutOffTree(List<List<Integer>> forest) {\n        /*\n        起始位置不可到达的情况，即坐标（0,0）位置为0\n         */\n        if (forest.get(0).get(0) == 0) {\n            return -1;\n        }\n        int xL = forest.size();\n        int yL = forest.get(0).size();\n        /*\n        按照顺序排列需要砍的树，记录每棵树的位置\n         */\n        TreeMap<Integer, Pair<Integer, Integer>> map = new TreeMap<>();\n        for (int i = 0; i < xL; i++) {\n            List<Integer> list = forest.get(i);\n            for (int j = 0; j < yL; j++) {\n                if (list.get(j) > 1) {\n                    map.put(list.get(j), new Pair<>(i, j));\n                }\n            }\n        }\n        int step = 0;\n        Pair<Integer, Integer> pair = null;\n        Queue<Pair<Integer, Integer>> queue = new LinkedList<>();\n        queue.add(new Pair<>(0, 0));\n        boolean[][] uses = new boolean[xL][yL];\n        uses[0][0] = true;\n        int[] xs = new int[]{1, -1, 0, 0};\n        int[] ys = new int[]{0, 0, 1, -1};\n        for (int key : map.keySet()) {\n            Pair<Integer, Integer> cur = map.get(key);\n            if (queue.peek().equals(cur)) {\n                continue;\n            }\n            boolean bl = false;\n            /*\n            计算到达下一棵需要砍树的步数\n             */\n            while (!queue.isEmpty() && !bl) {\n                int nums = queue.size();\n                step++;\n                for (int i = 0; i < nums && !bl; i++) {\n                    Pair<Integer, Integer> tmp = queue.poll();\n                    for (int j = 0; j < 4; j++) {\n                        int x = tmp.getKey() + xs[j];\n                        int y = tmp.getValue() + ys[j];\n                        if (x == cur.getKey() && y == cur.getValue()) {\n                            bl = true;\n                            break;\n                        }\n                        if (x < 0 || x >= xL || y < 0 || y\n                                >= yL || uses[x][y] || forest.get(x).get(y\n                            continue;\n                        }\n                        queue.add(new Pair<>(x, y));\n                        uses[x][y] = true;\n                    }\n                }\n            }\n            if (!bl) {\n                return -1;\n            }\n            queue = new LinkedList<>();\n            queue.add(cur);\n            uses = new boolean[xL][yL];\n            uses[cur.getKey()][cur.getValue()] = true;\n        }\n        return step;\n    }\n}\n```\n","slug":"day20220523","published":1,"updated":"2022-06-03T06:00:55.561Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl42z5h6p002m3gn68nnz20rl","content":"<p>2022年05月24日 力扣每日一题</p>\n<p><a href=\"https://leetcode.cn/problems/cut-off-trees-for-golf-event/\">675. 为高尔夫比赛砍树</a></p>\n<h1>题目</h1>\n<p>你被请来给一个要举办高尔夫比赛的树林砍树。树林由一个 <code>m x n</code> 的矩阵表示， 在这个矩阵中：</p>\n<ul>  \n   <li><code>0</code> 表示障碍，无法触碰</li>  \n   <li><code>1</code> 表示地面，可以行走</li>  \n   <li><code>比 1 大的数</code> 表示有树的单元格，可以行走，数值表示树的高度</li>  \n</ul>\n<p>每一步，你都可以向上、下、左、右四个方向之一移动一个单位，如果你站的地方有一棵树，那么你可以决定是否要砍倒它。</p>\n<p>你需要按照树的高度从低向高砍掉所有的树，每砍过一颗树，该单元格的值变为 <code>1</code>（即变为地面）。</p>\n<p>你将从 <code>(0, 0)</code> 点开始工作，返回你砍完所有树需要走的最小步数。 如果你无法砍完所有的树，返回 <code>-1</code> 。</p>\n<p>可以保证的是，没有两棵树的高度是相同的，并且你至少需要砍倒一棵树。</p>\n<p> </p>\n<p><strong>示例 1：</strong></p>  \n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/11/26/trees1.jpg\" style=\"width: 242px; height: 242px;\" />  \n<pre>  \n<strong>输入：</strong>forest = [[1,2,3],[0,0,4],[7,6,5]]  \n<strong>输出：</strong>6  \n<strong>解释：</strong>沿着上面的路径，你可以用 6 步，按从最矮到最高的顺序砍掉这些树。</pre>\n<p><strong>示例 2：</strong></p>  \n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/11/26/trees2.jpg\" style=\"width: 242px; height: 242px;\" />  \n<pre>  \n<strong>输入：</strong>forest = [[1,2,3],[0,0,0],[7,6,5]]  \n<strong>输出：</strong>-1  \n<strong>解释：</strong>由于中间一行被障碍阻塞，无法访问最下面一行中的树。  \n</pre>\n<p><strong>示例 3：</strong></p>\n<pre>  \n<strong>输入：</strong>forest = [[2,3,4],[0,0,5],[8,7,6]]  \n<strong>输出：</strong>6  \n<strong>解释：</strong>可以按与示例 1 相同的路径来砍掉所有的树。  \n(0,0) 位置的树，可以直接砍去，不用算步数。  \n</pre>\n<p> </p>\n<p><strong>提示：</strong></p>\n<ul>  \n   <li><code>m == forest.length</code></li>  \n   <li><code>n == forest[i].length</code></li>  \n   <li><code>1 <= m, n <= 50</code></li>  \n   <li><code>0 <= forest[i][j] <= 10<sup>9</sup></code></li>  \n</ul>  \n<div><div>Related Topics</div><div><li>广度优先搜索</li><li>数组</li><li>矩阵</li><li>堆（优先队列）</li></div></div>\n<h1>思路</h1>\n<ol>\n<li>\n<p>记录每颗需要砍树的位置，并排好序</p>\n<p>注意：这个需要砍的树是从<font color=\"red\">2</font>开始算的，不是<font color=\"red\">1</font></p>\n</li>\n<li>\n<p>循环计算到达下一棵被砍树的步数</p>\n<p>可使用广度优先搜索，从出发的树开始，依次取出并将下一步能够到达的树加入到队列，直到目标树为止</p>\n</li>\n</ol>\n<h1>代码</h1>\n<p>java：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">class Solution &#123;\n    public int cutOffTree(List&lt;List&lt;Integer&gt;&gt; forest) &#123;\n        &#x2F;*\n        起始位置不可到达的情况，即坐标（0,0）位置为0\n         *&#x2F;\n        if (forest.get(0).get(0) &#x3D;&#x3D; 0) &#123;\n            return -1;\n        &#125;\n        int xL &#x3D; forest.size();\n        int yL &#x3D; forest.get(0).size();\n        &#x2F;*\n        按照顺序排列需要砍的树，记录每棵树的位置\n         *&#x2F;\n        TreeMap&lt;Integer, Pair&lt;Integer, Integer&gt;&gt; map &#x3D; new TreeMap&lt;&gt;();\n        for (int i &#x3D; 0; i &lt; xL; i++) &#123;\n            List&lt;Integer&gt; list &#x3D; forest.get(i);\n            for (int j &#x3D; 0; j &lt; yL; j++) &#123;\n                if (list.get(j) &gt; 1) &#123;\n                    map.put(list.get(j), new Pair&lt;&gt;(i, j));\n                &#125;\n            &#125;\n        &#125;\n        int step &#x3D; 0;\n        Pair&lt;Integer, Integer&gt; pair &#x3D; null;\n        Queue&lt;Pair&lt;Integer, Integer&gt;&gt; queue &#x3D; new LinkedList&lt;&gt;();\n        queue.add(new Pair&lt;&gt;(0, 0));\n        boolean[][] uses &#x3D; new boolean[xL][yL];\n        uses[0][0] &#x3D; true;\n        int[] xs &#x3D; new int[]&#123;1, -1, 0, 0&#125;;\n        int[] ys &#x3D; new int[]&#123;0, 0, 1, -1&#125;;\n        for (int key : map.keySet()) &#123;\n            Pair&lt;Integer, Integer&gt; cur &#x3D; map.get(key);\n            if (queue.peek().equals(cur)) &#123;\n                continue;\n            &#125;\n            boolean bl &#x3D; false;\n            &#x2F;*\n            计算到达下一棵需要砍树的步数\n             *&#x2F;\n            while (!queue.isEmpty() &amp;&amp; !bl) &#123;\n                int nums &#x3D; queue.size();\n                step++;\n                for (int i &#x3D; 0; i &lt; nums &amp;&amp; !bl; i++) &#123;\n                    Pair&lt;Integer, Integer&gt; tmp &#x3D; queue.poll();\n                    for (int j &#x3D; 0; j &lt; 4; j++) &#123;\n                        int x &#x3D; tmp.getKey() + xs[j];\n                        int y &#x3D; tmp.getValue() + ys[j];\n                        if (x &#x3D;&#x3D; cur.getKey() &amp;&amp; y &#x3D;&#x3D; cur.getValue()) &#123;\n                            bl &#x3D; true;\n                            break;\n                        &#125;\n                        if (x &lt; 0 || x &gt;&#x3D; xL || y &lt; 0 || y\n                                &gt;&#x3D; yL || uses[x][y] || forest.get(x).get(y\n                            continue;\n                        &#125;\n                        queue.add(new Pair&lt;&gt;(x, y));\n                        uses[x][y] &#x3D; true;\n                    &#125;\n                &#125;\n            &#125;\n            if (!bl) &#123;\n                return -1;\n            &#125;\n            queue &#x3D; new LinkedList&lt;&gt;();\n            queue.add(cur);\n            uses &#x3D; new boolean[xL][yL];\n            uses[cur.getKey()][cur.getValue()] &#x3D; true;\n        &#125;\n        return step;\n    &#125;\n&#125;</code></pre>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"cover":"https://blog.huangge1199.cn/post/jpaCompositePK/bg.jpg","excerpt":"","more":"<p>2022年05月24日 力扣每日一题</p>\n<p><a href=\"https://leetcode.cn/problems/cut-off-trees-for-golf-event/\">675. 为高尔夫比赛砍树</a></p>\n<h1>题目</h1>\n<p>你被请来给一个要举办高尔夫比赛的树林砍树。树林由一个 <code>m x n</code> 的矩阵表示， 在这个矩阵中：</p>\n<ul>  \n   <li><code>0</code> 表示障碍，无法触碰</li>  \n   <li><code>1</code> 表示地面，可以行走</li>  \n   <li><code>比 1 大的数</code> 表示有树的单元格，可以行走，数值表示树的高度</li>  \n</ul>\n<p>每一步，你都可以向上、下、左、右四个方向之一移动一个单位，如果你站的地方有一棵树，那么你可以决定是否要砍倒它。</p>\n<p>你需要按照树的高度从低向高砍掉所有的树，每砍过一颗树，该单元格的值变为 <code>1</code>（即变为地面）。</p>\n<p>你将从 <code>(0, 0)</code> 点开始工作，返回你砍完所有树需要走的最小步数。 如果你无法砍完所有的树，返回 <code>-1</code> 。</p>\n<p>可以保证的是，没有两棵树的高度是相同的，并且你至少需要砍倒一棵树。</p>\n<p> </p>\n<p><strong>示例 1：</strong></p>  \n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/11/26/trees1.jpg\" style=\"width: 242px; height: 242px;\" />  \n<pre>  \n<strong>输入：</strong>forest = [[1,2,3],[0,0,4],[7,6,5]]  \n<strong>输出：</strong>6  \n<strong>解释：</strong>沿着上面的路径，你可以用 6 步，按从最矮到最高的顺序砍掉这些树。</pre>\n<p><strong>示例 2：</strong></p>  \n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/11/26/trees2.jpg\" style=\"width: 242px; height: 242px;\" />  \n<pre>  \n<strong>输入：</strong>forest = [[1,2,3],[0,0,0],[7,6,5]]  \n<strong>输出：</strong>-1  \n<strong>解释：</strong>由于中间一行被障碍阻塞，无法访问最下面一行中的树。  \n</pre>\n<p><strong>示例 3：</strong></p>\n<pre>  \n<strong>输入：</strong>forest = [[2,3,4],[0,0,5],[8,7,6]]  \n<strong>输出：</strong>6  \n<strong>解释：</strong>可以按与示例 1 相同的路径来砍掉所有的树。  \n(0,0) 位置的树，可以直接砍去，不用算步数。  \n</pre>\n<p> </p>\n<p><strong>提示：</strong></p>\n<ul>  \n   <li><code>m == forest.length</code></li>  \n   <li><code>n == forest[i].length</code></li>  \n   <li><code>1 <= m, n <= 50</code></li>  \n   <li><code>0 <= forest[i][j] <= 10<sup>9</sup></code></li>  \n</ul>  \n<div><div>Related Topics</div><div><li>广度优先搜索</li><li>数组</li><li>矩阵</li><li>堆（优先队列）</li></div></div>\n<h1>思路</h1>\n<ol>\n<li>\n<p>记录每颗需要砍树的位置，并排好序</p>\n<p>注意：这个需要砍的树是从<font color=\"red\">2</font>开始算的，不是<font color=\"red\">1</font></p>\n</li>\n<li>\n<p>循环计算到达下一棵被砍树的步数</p>\n<p>可使用广度优先搜索，从出发的树开始，依次取出并将下一步能够到达的树加入到队列，直到目标树为止</p>\n</li>\n</ol>\n<h1>代码</h1>\n<p>java：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">class Solution &#123;\n    public int cutOffTree(List&lt;List&lt;Integer&gt;&gt; forest) &#123;\n        &#x2F;*\n        起始位置不可到达的情况，即坐标（0,0）位置为0\n         *&#x2F;\n        if (forest.get(0).get(0) &#x3D;&#x3D; 0) &#123;\n            return -1;\n        &#125;\n        int xL &#x3D; forest.size();\n        int yL &#x3D; forest.get(0).size();\n        &#x2F;*\n        按照顺序排列需要砍的树，记录每棵树的位置\n         *&#x2F;\n        TreeMap&lt;Integer, Pair&lt;Integer, Integer&gt;&gt; map &#x3D; new TreeMap&lt;&gt;();\n        for (int i &#x3D; 0; i &lt; xL; i++) &#123;\n            List&lt;Integer&gt; list &#x3D; forest.get(i);\n            for (int j &#x3D; 0; j &lt; yL; j++) &#123;\n                if (list.get(j) &gt; 1) &#123;\n                    map.put(list.get(j), new Pair&lt;&gt;(i, j));\n                &#125;\n            &#125;\n        &#125;\n        int step &#x3D; 0;\n        Pair&lt;Integer, Integer&gt; pair &#x3D; null;\n        Queue&lt;Pair&lt;Integer, Integer&gt;&gt; queue &#x3D; new LinkedList&lt;&gt;();\n        queue.add(new Pair&lt;&gt;(0, 0));\n        boolean[][] uses &#x3D; new boolean[xL][yL];\n        uses[0][0] &#x3D; true;\n        int[] xs &#x3D; new int[]&#123;1, -1, 0, 0&#125;;\n        int[] ys &#x3D; new int[]&#123;0, 0, 1, -1&#125;;\n        for (int key : map.keySet()) &#123;\n            Pair&lt;Integer, Integer&gt; cur &#x3D; map.get(key);\n            if (queue.peek().equals(cur)) &#123;\n                continue;\n            &#125;\n            boolean bl &#x3D; false;\n            &#x2F;*\n            计算到达下一棵需要砍树的步数\n             *&#x2F;\n            while (!queue.isEmpty() &amp;&amp; !bl) &#123;\n                int nums &#x3D; queue.size();\n                step++;\n                for (int i &#x3D; 0; i &lt; nums &amp;&amp; !bl; i++) &#123;\n                    Pair&lt;Integer, Integer&gt; tmp &#x3D; queue.poll();\n                    for (int j &#x3D; 0; j &lt; 4; j++) &#123;\n                        int x &#x3D; tmp.getKey() + xs[j];\n                        int y &#x3D; tmp.getValue() + ys[j];\n                        if (x &#x3D;&#x3D; cur.getKey() &amp;&amp; y &#x3D;&#x3D; cur.getValue()) &#123;\n                            bl &#x3D; true;\n                            break;\n                        &#125;\n                        if (x &lt; 0 || x &gt;&#x3D; xL || y &lt; 0 || y\n                                &gt;&#x3D; yL || uses[x][y] || forest.get(x).get(y\n                            continue;\n                        &#125;\n                        queue.add(new Pair&lt;&gt;(x, y));\n                        uses[x][y] &#x3D; true;\n                    &#125;\n                &#125;\n            &#125;\n            if (!bl) &#123;\n                return -1;\n            &#125;\n            queue &#x3D; new LinkedList&lt;&gt;();\n            queue.add(cur);\n            uses &#x3D; new boolean[xL][yL];\n            uses[cur.getKey()][cur.getValue()] &#x3D; true;\n        &#125;\n        return step;\n    &#125;\n&#125;</code></pre>\n"},{"title":"设计模式总结与对比（作业）","date":"2022-04-28T02:13:09.000Z","_content":"\n# 1、设计模式的初衷是什么？有哪些设计原则？\n\n- 开闭原则\n- 依赖倒置原则\n- 单一职责原则\n- 接口隔离原则\n- 迪米特原则\n- 里氏替换原则\n- 合成复用原则  \n\n# 2、列举至少4种单例模式被破坏的场景并给出解决方案\n\n- 多线程\n  \n  解决办法：\n  \n  - 改写DCL双重锁的写法\n  \n  - 使用静态内部类的写法\n\n- 指令重排\n  \n  解决办法：加volite关键字\n\n- 克隆\n  \n  解决办法：在单例对象中重写clone()方法\n\n- 反序列化\n  \n  解决方案：反序列化的时候重新readResolve()方法，将返回值设置为单例对象\n\n- 反射\n  \n  解决方法：\n  \n  - 在构造方法中检查单例对象，如果已构建则抛出异常\n  - 将单例的实现方式改为枚举式单例\n\n# 3、一句话总结单例模式、原型模式、建造者模式、代理模式、策略模式和责任链模式\n\n- 单例模式：世界上只有一个Tom\n\n- 原型模式：拔一根猴毛，吹出千万个\n\n- 建造者模式：高配中配与低配，相选哪配就哪配\n\n- 代理模式：没有资源没有时间，得找媒婆来帮忙\n\n- 策略模式：条条大路通北京，具体哪条你来定\n\n- 责任链模式：各人自扫门前雪，莫管他人瓦上霜\n","source":"_posts/designPattern.md","raw":"---\ntitle: 设计模式总结与对比（作业）\ndate: 2022-04-28 10:13:09\ntags: [学习笔记]\ncategories: [设计模式]\n---\n\n# 1、设计模式的初衷是什么？有哪些设计原则？\n\n- 开闭原则\n- 依赖倒置原则\n- 单一职责原则\n- 接口隔离原则\n- 迪米特原则\n- 里氏替换原则\n- 合成复用原则  \n\n# 2、列举至少4种单例模式被破坏的场景并给出解决方案\n\n- 多线程\n  \n  解决办法：\n  \n  - 改写DCL双重锁的写法\n  \n  - 使用静态内部类的写法\n\n- 指令重排\n  \n  解决办法：加volite关键字\n\n- 克隆\n  \n  解决办法：在单例对象中重写clone()方法\n\n- 反序列化\n  \n  解决方案：反序列化的时候重新readResolve()方法，将返回值设置为单例对象\n\n- 反射\n  \n  解决方法：\n  \n  - 在构造方法中检查单例对象，如果已构建则抛出异常\n  - 将单例的实现方式改为枚举式单例\n\n# 3、一句话总结单例模式、原型模式、建造者模式、代理模式、策略模式和责任链模式\n\n- 单例模式：世界上只有一个Tom\n\n- 原型模式：拔一根猴毛，吹出千万个\n\n- 建造者模式：高配中配与低配，相选哪配就哪配\n\n- 代理模式：没有资源没有时间，得找媒婆来帮忙\n\n- 策略模式：条条大路通北京，具体哪条你来定\n\n- 责任链模式：各人自扫门前雪，莫管他人瓦上霜\n","slug":"designPattern","published":1,"updated":"2022-06-03T06:00:55.561Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl42z5h6p002o3gn6571nhbvd","content":"<h1>1、设计模式的初衷是什么？有哪些设计原则？</h1>\n<ul>\n<li>开闭原则</li>\n<li>依赖倒置原则</li>\n<li>单一职责原则</li>\n<li>接口隔离原则</li>\n<li>迪米特原则</li>\n<li>里氏替换原则</li>\n<li>合成复用原则</li>\n</ul>\n<h1>2、列举至少4种单例模式被破坏的场景并给出解决方案</h1>\n<ul>\n<li>\n<p>多线程</p>\n<p>解决办法：</p>\n<ul>\n<li>\n<p>改写DCL双重锁的写法</p>\n</li>\n<li>\n<p>使用静态内部类的写法</p>\n</li>\n</ul>\n</li>\n<li>\n<p>指令重排</p>\n<p>解决办法：加volite关键字</p>\n</li>\n<li>\n<p>克隆</p>\n<p>解决办法：在单例对象中重写clone()方法</p>\n</li>\n<li>\n<p>反序列化</p>\n<p>解决方案：反序列化的时候重新readResolve()方法，将返回值设置为单例对象</p>\n</li>\n<li>\n<p>反射</p>\n<p>解决方法：</p>\n<ul>\n<li>在构造方法中检查单例对象，如果已构建则抛出异常</li>\n<li>将单例的实现方式改为枚举式单例</li>\n</ul>\n</li>\n</ul>\n<h1>3、一句话总结单例模式、原型模式、建造者模式、代理模式、策略模式和责任链模式</h1>\n<ul>\n<li>\n<p>单例模式：世界上只有一个Tom</p>\n</li>\n<li>\n<p>原型模式：拔一根猴毛，吹出千万个</p>\n</li>\n<li>\n<p>建造者模式：高配中配与低配，相选哪配就哪配</p>\n</li>\n<li>\n<p>代理模式：没有资源没有时间，得找媒婆来帮忙</p>\n</li>\n<li>\n<p>策略模式：条条大路通北京，具体哪条你来定</p>\n</li>\n<li>\n<p>责任链模式：各人自扫门前雪，莫管他人瓦上霜</p>\n</li>\n</ul>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"cover":"https://blog.huangge1199.cn/post/pyControl/bg.jpeg","excerpt":"","more":"<h1>1、设计模式的初衷是什么？有哪些设计原则？</h1>\n<ul>\n<li>开闭原则</li>\n<li>依赖倒置原则</li>\n<li>单一职责原则</li>\n<li>接口隔离原则</li>\n<li>迪米特原则</li>\n<li>里氏替换原则</li>\n<li>合成复用原则</li>\n</ul>\n<h1>2、列举至少4种单例模式被破坏的场景并给出解决方案</h1>\n<ul>\n<li>\n<p>多线程</p>\n<p>解决办法：</p>\n<ul>\n<li>\n<p>改写DCL双重锁的写法</p>\n</li>\n<li>\n<p>使用静态内部类的写法</p>\n</li>\n</ul>\n</li>\n<li>\n<p>指令重排</p>\n<p>解决办法：加volite关键字</p>\n</li>\n<li>\n<p>克隆</p>\n<p>解决办法：在单例对象中重写clone()方法</p>\n</li>\n<li>\n<p>反序列化</p>\n<p>解决方案：反序列化的时候重新readResolve()方法，将返回值设置为单例对象</p>\n</li>\n<li>\n<p>反射</p>\n<p>解决方法：</p>\n<ul>\n<li>在构造方法中检查单例对象，如果已构建则抛出异常</li>\n<li>将单例的实现方式改为枚举式单例</li>\n</ul>\n</li>\n</ul>\n<h1>3、一句话总结单例模式、原型模式、建造者模式、代理模式、策略模式和责任链模式</h1>\n<ul>\n<li>\n<p>单例模式：世界上只有一个Tom</p>\n</li>\n<li>\n<p>原型模式：拔一根猴毛，吹出千万个</p>\n</li>\n<li>\n<p>建造者模式：高配中配与低配，相选哪配就哪配</p>\n</li>\n<li>\n<p>代理模式：没有资源没有时间，得找媒婆来帮忙</p>\n</li>\n<li>\n<p>策略模式：条条大路通北京，具体哪条你来定</p>\n</li>\n<li>\n<p>责任链模式：各人自扫门前雪，莫管他人瓦上霜</p>\n</li>\n</ul>\n"},{"title":"docker-compose安装","date":"2022-04-24T07:12:03.000Z","_content":"docker-compose安装\n\n按照官方来即可，[docker-compose安装文档](https://docs.docker.com/compose/install/)\n\n按照自己的系统来安装：\n\n![](2022-04-21-00-36-46-image.png)\n\n# 1、下载docker-compose\n\n下面两个二选一，建议国内源，速度快\n\n官方：\n\n```shell\nsudo curl -L \"https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose\n```\n\n国内源：\n\n```shell\ncurl -L https://get.daocloud.io/docker/compose/releases/download/1.29.2/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose\n```\n\n![](2022-04-21-00-40-56-image.png)\n\n# 2、授予权限\n\n```shell\nsudo chmod +x /usr/local/bin/docker-compose\nsudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose\n```\n\n# 3、验证\n\n```shell\ndocker-compose --version\n```\n\n输入命令后，出现版本号，则为安装成功\n\n![](2022-04-21-00-44-14-image.png)\n","source":"_posts/dockerComposeInstall.md","raw":"---\ntitle: docker-compose安装\ndate: 2022-04-24 15:12:03\ntags: [docker]\ncategories: [docker]\n---\ndocker-compose安装\n\n按照官方来即可，[docker-compose安装文档](https://docs.docker.com/compose/install/)\n\n按照自己的系统来安装：\n\n![](2022-04-21-00-36-46-image.png)\n\n# 1、下载docker-compose\n\n下面两个二选一，建议国内源，速度快\n\n官方：\n\n```shell\nsudo curl -L \"https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose\n```\n\n国内源：\n\n```shell\ncurl -L https://get.daocloud.io/docker/compose/releases/download/1.29.2/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose\n```\n\n![](2022-04-21-00-40-56-image.png)\n\n# 2、授予权限\n\n```shell\nsudo chmod +x /usr/local/bin/docker-compose\nsudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose\n```\n\n# 3、验证\n\n```shell\ndocker-compose --version\n```\n\n输入命令后，出现版本号，则为安装成功\n\n![](2022-04-21-00-44-14-image.png)\n","slug":"dockerComposeInstall","published":1,"updated":"2022-06-03T06:00:55.561Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl42z5h6r002r3gn69lojbeh8","content":"<p>docker-compose安装</p>\n<p>按照官方来即可，<a href=\"https://docs.docker.com/compose/install/\">docker-compose安装文档</a></p>\n<p>按照自己的系统来安装：</p>\n<p><img src=\"2022-04-21-00-36-46-image.png\" alt=\"\"></p>\n<h1>1、下载docker-compose</h1>\n<p>下面两个二选一，建议国内源，速度快</p>\n<p>官方：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">sudo curl -L &quot;https:&#x2F;&#x2F;github.com&#x2F;docker&#x2F;compose&#x2F;releases&#x2F;download&#x2F;1.29.2&#x2F;docker-compose-$(uname -s)-$(uname -m)&quot; -o &#x2F;usr&#x2F;local&#x2F;bin&#x2F;docker-compose</code></pre>\n<p>国内源：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">curl -L https:&#x2F;&#x2F;get.daocloud.io&#x2F;docker&#x2F;compose&#x2F;releases&#x2F;download&#x2F;1.29.2&#x2F;docker-compose-&#96;uname -s&#96;-&#96;uname -m&#96; &gt; &#x2F;usr&#x2F;local&#x2F;bin&#x2F;docker-compose</code></pre>\n<p><img src=\"2022-04-21-00-40-56-image.png\" alt=\"\"></p>\n<h1>2、授予权限</h1>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">sudo chmod +x &#x2F;usr&#x2F;local&#x2F;bin&#x2F;docker-compose\nsudo ln -s &#x2F;usr&#x2F;local&#x2F;bin&#x2F;docker-compose &#x2F;usr&#x2F;bin&#x2F;docker-compose</code></pre>\n<h1>3、验证</h1>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">docker-compose --version</code></pre>\n<p>输入命令后，出现版本号，则为安装成功</p>\n<p><img src=\"2022-04-21-00-44-14-image.png\" alt=\"\"></p>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"cover":"https://blog.huangge1199.cn/post/pyListSort/bg.jpeg","excerpt":"","more":"<p>docker-compose安装</p>\n<p>按照官方来即可，<a href=\"https://docs.docker.com/compose/install/\">docker-compose安装文档</a></p>\n<p>按照自己的系统来安装：</p>\n<p><img src=\"2022-04-21-00-36-46-image.png\" alt=\"\"></p>\n<h1>1、下载docker-compose</h1>\n<p>下面两个二选一，建议国内源，速度快</p>\n<p>官方：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">sudo curl -L &quot;https:&#x2F;&#x2F;github.com&#x2F;docker&#x2F;compose&#x2F;releases&#x2F;download&#x2F;1.29.2&#x2F;docker-compose-$(uname -s)-$(uname -m)&quot; -o &#x2F;usr&#x2F;local&#x2F;bin&#x2F;docker-compose</code></pre>\n<p>国内源：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">curl -L https:&#x2F;&#x2F;get.daocloud.io&#x2F;docker&#x2F;compose&#x2F;releases&#x2F;download&#x2F;1.29.2&#x2F;docker-compose-&#96;uname -s&#96;-&#96;uname -m&#96; &gt; &#x2F;usr&#x2F;local&#x2F;bin&#x2F;docker-compose</code></pre>\n<p><img src=\"2022-04-21-00-40-56-image.png\" alt=\"\"></p>\n<h1>2、授予权限</h1>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">sudo chmod +x &#x2F;usr&#x2F;local&#x2F;bin&#x2F;docker-compose\nsudo ln -s &#x2F;usr&#x2F;local&#x2F;bin&#x2F;docker-compose &#x2F;usr&#x2F;bin&#x2F;docker-compose</code></pre>\n<h1>3、验证</h1>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">docker-compose --version</code></pre>\n<p>输入命令后，出现版本号，则为安装成功</p>\n<p><img src=\"2022-04-21-00-44-14-image.png\" alt=\"\"></p>\n"},{"title":"docker安装","date":"2022-04-24T05:59:34.000Z","_content":"安装docker\n\n这部分基本就是按照docker官网的来，[centos安装docker文档](https://docs.docker.com/engine/install/centos/)\n\n# 1、卸载旧版本docker\n\n```sh\nyum remove docker \\\n                  docker-client \\\n                  docker-client-latest \\\n                  docker-common \\\n                  docker-latest \\\n                  docker-latest-logrotate \\\n                  docker-logrotate \\\n                  docker-engine\n```\n\n![](2022-04-20-23-44-07-image.png)\n\n# 2、设置docker软件源\n\n下面官网软件源和阿里软件源二选一，个人建议用阿里的，国内的速度快\n\n官网软件源 ：速度慢，可以考虑阿里的\n\n```shell\nyum install -y yum-utils\nyum-config-manager \\\n    --add-repo \\\n    https://download.docker.com/linux/centos/docker-ce.repo\n```\n\n![](2022-04-20-23-47-39-image.png)\n\n阿里软件源：\n\n![](2022-04-21-00-00-59-image.png)\n\n# 3、安装docker\n\n```shell\nyum install docker-ce docker-ce-cli containerd.io\n```\n\n命令输入后，中途出现下面的内容，输入`y`，然后按回车确认\n\n![](2022-04-20-23-50-06-image.png)\n\n中途出现下面的内容，输入`y`，然后按回车确认\n\n![](2022-04-21-00-05-16-image.png)\n\n# 4、更改docker仓库地址，用Docker中国区官方替换掉，要不之后拉取镜像速度太慢了\n\n```shell\nvi /etc/docker/daemon.json\n```\n\ndaemon.json内容：\n\n```json\n{\n \"registry-mirrors\": [\"https://registry.docker-cn.com\"]\n}\n```\n\n# 5、启动docker\n\n```shell\nsystemctl start docker\n```\n\n![](2022-04-21-00-22-21-image.png)\n\n# 6、设置开机启动docker\n\n```shell\nsystemctl enable docker\n```\n\n![](2022-04-21-00-22-43-image.png)\n\n# 7、验证\n\n通过查询docker版本确认docker是否正常启动\n\n```shell\ndocker -v\n```\n\n执行命令后正常显示docker版本则为安装启动成功\n","source":"_posts/dockerInstall.md","raw":"---\ntitle: docker安装\ndate: 2022-04-24 13:59:34\ntags: [docker]\ncategories: [docker]\n---\n安装docker\n\n这部分基本就是按照docker官网的来，[centos安装docker文档](https://docs.docker.com/engine/install/centos/)\n\n# 1、卸载旧版本docker\n\n```sh\nyum remove docker \\\n                  docker-client \\\n                  docker-client-latest \\\n                  docker-common \\\n                  docker-latest \\\n                  docker-latest-logrotate \\\n                  docker-logrotate \\\n                  docker-engine\n```\n\n![](2022-04-20-23-44-07-image.png)\n\n# 2、设置docker软件源\n\n下面官网软件源和阿里软件源二选一，个人建议用阿里的，国内的速度快\n\n官网软件源 ：速度慢，可以考虑阿里的\n\n```shell\nyum install -y yum-utils\nyum-config-manager \\\n    --add-repo \\\n    https://download.docker.com/linux/centos/docker-ce.repo\n```\n\n![](2022-04-20-23-47-39-image.png)\n\n阿里软件源：\n\n![](2022-04-21-00-00-59-image.png)\n\n# 3、安装docker\n\n```shell\nyum install docker-ce docker-ce-cli containerd.io\n```\n\n命令输入后，中途出现下面的内容，输入`y`，然后按回车确认\n\n![](2022-04-20-23-50-06-image.png)\n\n中途出现下面的内容，输入`y`，然后按回车确认\n\n![](2022-04-21-00-05-16-image.png)\n\n# 4、更改docker仓库地址，用Docker中国区官方替换掉，要不之后拉取镜像速度太慢了\n\n```shell\nvi /etc/docker/daemon.json\n```\n\ndaemon.json内容：\n\n```json\n{\n \"registry-mirrors\": [\"https://registry.docker-cn.com\"]\n}\n```\n\n# 5、启动docker\n\n```shell\nsystemctl start docker\n```\n\n![](2022-04-21-00-22-21-image.png)\n\n# 6、设置开机启动docker\n\n```shell\nsystemctl enable docker\n```\n\n![](2022-04-21-00-22-43-image.png)\n\n# 7、验证\n\n通过查询docker版本确认docker是否正常启动\n\n```shell\ndocker -v\n```\n\n执行命令后正常显示docker版本则为安装启动成功\n","slug":"dockerInstall","published":1,"updated":"2022-06-03T06:00:55.561Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl42z5h6s002t3gn6bsgz26py","content":"<p>安装docker</p>\n<p>这部分基本就是按照docker官网的来，<a href=\"https://docs.docker.com/engine/install/centos/\">centos安装docker文档</a></p>\n<h1>1、卸载旧版本docker</h1>\n<pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">yum remove docker \\\n                  docker-client \\\n                  docker-client-latest \\\n                  docker-common \\\n                  docker-latest \\\n                  docker-latest-logrotate \\\n                  docker-logrotate \\\n                  docker-engine</code></pre>\n<p><img src=\"2022-04-20-23-44-07-image.png\" alt=\"\"></p>\n<h1>2、设置docker软件源</h1>\n<p>下面官网软件源和阿里软件源二选一，个人建议用阿里的，国内的速度快</p>\n<p>官网软件源 ：速度慢，可以考虑阿里的</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">yum install -y yum-utils\nyum-config-manager \\\n    --add-repo \\\n    https:&#x2F;&#x2F;download.docker.com&#x2F;linux&#x2F;centos&#x2F;docker-ce.repo</code></pre>\n<p><img src=\"2022-04-20-23-47-39-image.png\" alt=\"\"></p>\n<p>阿里软件源：</p>\n<p><img src=\"2022-04-21-00-00-59-image.png\" alt=\"\"></p>\n<h1>3、安装docker</h1>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">yum install docker-ce docker-ce-cli containerd.io</code></pre>\n<p>命令输入后，中途出现下面的内容，输入<code>y</code>，然后按回车确认</p>\n<p><img src=\"2022-04-20-23-50-06-image.png\" alt=\"\"></p>\n<p>中途出现下面的内容，输入<code>y</code>，然后按回车确认</p>\n<p><img src=\"2022-04-21-00-05-16-image.png\" alt=\"\"></p>\n<h1>4、更改docker仓库地址，用Docker中国区官方替换掉，要不之后拉取镜像速度太慢了</h1>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">vi &#x2F;etc&#x2F;docker&#x2F;daemon.json</code></pre>\n<p>daemon.json内容：</p>\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">&#123;\n &quot;registry-mirrors&quot;: [&quot;https:&#x2F;&#x2F;registry.docker-cn.com&quot;]\n&#125;</code></pre>\n<h1>5、启动docker</h1>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">systemctl start docker</code></pre>\n<p><img src=\"2022-04-21-00-22-21-image.png\" alt=\"\"></p>\n<h1>6、设置开机启动docker</h1>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">systemctl enable docker</code></pre>\n<p><img src=\"2022-04-21-00-22-43-image.png\" alt=\"\"></p>\n<h1>7、验证</h1>\n<p>通过查询docker版本确认docker是否正常启动</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">docker -v</code></pre>\n<p>执行命令后正常显示docker版本则为安装启动成功</p>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"cover":"https://blog.huangge1199.cn/post/day20220120/bg.jpeg","excerpt":"","more":"<p>安装docker</p>\n<p>这部分基本就是按照docker官网的来，<a href=\"https://docs.docker.com/engine/install/centos/\">centos安装docker文档</a></p>\n<h1>1、卸载旧版本docker</h1>\n<pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">yum remove docker \\\n                  docker-client \\\n                  docker-client-latest \\\n                  docker-common \\\n                  docker-latest \\\n                  docker-latest-logrotate \\\n                  docker-logrotate \\\n                  docker-engine</code></pre>\n<p><img src=\"2022-04-20-23-44-07-image.png\" alt=\"\"></p>\n<h1>2、设置docker软件源</h1>\n<p>下面官网软件源和阿里软件源二选一，个人建议用阿里的，国内的速度快</p>\n<p>官网软件源 ：速度慢，可以考虑阿里的</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">yum install -y yum-utils\nyum-config-manager \\\n    --add-repo \\\n    https:&#x2F;&#x2F;download.docker.com&#x2F;linux&#x2F;centos&#x2F;docker-ce.repo</code></pre>\n<p><img src=\"2022-04-20-23-47-39-image.png\" alt=\"\"></p>\n<p>阿里软件源：</p>\n<p><img src=\"2022-04-21-00-00-59-image.png\" alt=\"\"></p>\n<h1>3、安装docker</h1>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">yum install docker-ce docker-ce-cli containerd.io</code></pre>\n<p>命令输入后，中途出现下面的内容，输入<code>y</code>，然后按回车确认</p>\n<p><img src=\"2022-04-20-23-50-06-image.png\" alt=\"\"></p>\n<p>中途出现下面的内容，输入<code>y</code>，然后按回车确认</p>\n<p><img src=\"2022-04-21-00-05-16-image.png\" alt=\"\"></p>\n<h1>4、更改docker仓库地址，用Docker中国区官方替换掉，要不之后拉取镜像速度太慢了</h1>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">vi &#x2F;etc&#x2F;docker&#x2F;daemon.json</code></pre>\n<p>daemon.json内容：</p>\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">&#123;\n &quot;registry-mirrors&quot;: [&quot;https:&#x2F;&#x2F;registry.docker-cn.com&quot;]\n&#125;</code></pre>\n<h1>5、启动docker</h1>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">systemctl start docker</code></pre>\n<p><img src=\"2022-04-21-00-22-21-image.png\" alt=\"\"></p>\n<h1>6、设置开机启动docker</h1>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">systemctl enable docker</code></pre>\n<p><img src=\"2022-04-21-00-22-43-image.png\" alt=\"\"></p>\n<h1>7、验证</h1>\n<p>通过查询docker版本确认docker是否正常启动</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">docker -v</code></pre>\n<p>执行命令后正常显示docker版本则为安装启动成功</p>\n"},{"title":"力扣2273. 移除字母异位词后的结果数组","date":"2022-05-19T01:27:33.000Z","_content":"\n力扣周赛293--第一题\n\n[2273. 移除字母异位词后的结果数组](https://leetcode.cn/problems/find-resultant-array-after-removing-anagrams/)\n\n# 题目\n\n<p>给你一个下标从 <strong>0</strong> 开始的字符串 <code>words</code> ，其中 <code>words[i]</code> 由小写英文字符组成。</p>\n\n<p>在一步操作中，需要选出任一下标 <code>i</code> ，从 <code>words</code> 中 <strong>删除</strong> <code>words[i]</code> 。其中下标 <code>i</code> 需要同时满足下述两个条件：</p>\n\n<ol>  \n   <li><code>0 < i < words.length</code></li>  \n   <li><code>words[i - 1]</code> 和 <code>words[i]</code> 是 <strong>字母异位词</strong> 。</li>  \n</ol>\n\n<p>只要可以选出满足条件的下标，就一直执行这个操作。</p>\n\n<p>在执行所有操作后，返回 <code>words</code> 。可以证明，按任意顺序为每步操作选择下标都会得到相同的结果。</p>\n\n<p><strong>字母异位词</strong> 是由重新排列源单词的字母得到的一个新单词，所有源单词中的字母通常恰好只用一次。例如，<code>\"dacb\"</code> 是 <code>\"abdc\"</code> 的一个字母异位词。</p>\n\n<p> </p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入：</strong>words = [\"abba\",\"baba\",\"bbaa\",\"cd\",\"cd\"]  \n<strong>输出：</strong>[\"abba\",\"cd\"]  \n<strong>解释：</strong>  \n获取结果数组的方法之一是执行下述步骤：  \n- 由于 words[2] = \"bbaa\" 和 words[1] = \"baba\" 是字母异位词，选择下标 2 并删除 words[2] 。  \n  现在 words = [\"abba\",\"baba\",\"cd\",\"cd\"] 。  \n- 由于 words[1] = \"baba\" 和 words[0] = \"abba\" 是字母异位词，选择下标 1 并删除 words[1] 。  \n  现在 words = [\"abba\",\"cd\",\"cd\"] 。  \n- 由于 words[2] = \"cd\" 和 words[1] = \"cd\" 是字母异位词，选择下标 2 并删除 words[2] 。  \n  现在 words = [\"abba\",\"cd\"] 。  \n无法再执行任何操作，所以 [\"abba\",\"cd\"] 是最终答案。</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入：</strong>words = [\"a\",\"b\",\"c\",\"d\",\"e\"]  \n<strong>输出：</strong>[\"a\",\"b\",\"c\",\"d\",\"e\"]  \n<strong>解释：</strong>  \nwords 中不存在互为字母异位词的两个相邻字符串，所以无需执行任何操作。</pre>\n\n<p> </p>\n\n<p><strong>提示：</strong></p>\n\n<ul>  \n   <li><code>1 <= words.length <= 100</code></li>  \n   <li><code>1 <= words[i].length <= 10</code></li>  \n   <li><code>words[i]</code> 由小写英文字母组成</li>  \n</ul>  \n<div><div>Related Topics</div><div><li>数组</li><li>哈希表</li><li>字符串</li><li>排序</li></div></div>\n\n# 思路\n\n遍历字符串数组，分别将每一个字符串装换成字符数组，字符数组排序，如果排序后转成的字符串一样，则说明是字母异位词\n\n# 代码\n\njava：\n\n```java\nclass Solution {\n    public List<String> removeAnagrams(String[] words) {\n        char[] strs = words[0].toCharArray();\n        Arrays.sort(strs);\n        List<String> list = new ArrayList<>();\n        int index = 0;\n        for (int i = 1; i < words.length; i++) {\n            char[] strs1 = words[i].toCharArray();\n            Arrays.sort(strs1);\n            if (!String.valueOf(strs).equals(String.valueOf(strs1))) {\n                list.add(words[index]);\n                strs = strs1;\n                index = i;\n            }\n        }\n        list.add(words[index]);\n        return list;\n    }\n}\n```\n","source":"_posts/find-resultant-array-after-removing-anagrams.md","raw":"---\ntitle: 力扣2273. 移除字母异位词后的结果数组\ndate: 2022-05-19 09:27:33\ntags: [力扣]\ncategories: [算法,力扣]\n---\n\n力扣周赛293--第一题\n\n[2273. 移除字母异位词后的结果数组](https://leetcode.cn/problems/find-resultant-array-after-removing-anagrams/)\n\n# 题目\n\n<p>给你一个下标从 <strong>0</strong> 开始的字符串 <code>words</code> ，其中 <code>words[i]</code> 由小写英文字符组成。</p>\n\n<p>在一步操作中，需要选出任一下标 <code>i</code> ，从 <code>words</code> 中 <strong>删除</strong> <code>words[i]</code> 。其中下标 <code>i</code> 需要同时满足下述两个条件：</p>\n\n<ol>  \n   <li><code>0 < i < words.length</code></li>  \n   <li><code>words[i - 1]</code> 和 <code>words[i]</code> 是 <strong>字母异位词</strong> 。</li>  \n</ol>\n\n<p>只要可以选出满足条件的下标，就一直执行这个操作。</p>\n\n<p>在执行所有操作后，返回 <code>words</code> 。可以证明，按任意顺序为每步操作选择下标都会得到相同的结果。</p>\n\n<p><strong>字母异位词</strong> 是由重新排列源单词的字母得到的一个新单词，所有源单词中的字母通常恰好只用一次。例如，<code>\"dacb\"</code> 是 <code>\"abdc\"</code> 的一个字母异位词。</p>\n\n<p> </p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入：</strong>words = [\"abba\",\"baba\",\"bbaa\",\"cd\",\"cd\"]  \n<strong>输出：</strong>[\"abba\",\"cd\"]  \n<strong>解释：</strong>  \n获取结果数组的方法之一是执行下述步骤：  \n- 由于 words[2] = \"bbaa\" 和 words[1] = \"baba\" 是字母异位词，选择下标 2 并删除 words[2] 。  \n  现在 words = [\"abba\",\"baba\",\"cd\",\"cd\"] 。  \n- 由于 words[1] = \"baba\" 和 words[0] = \"abba\" 是字母异位词，选择下标 1 并删除 words[1] 。  \n  现在 words = [\"abba\",\"cd\",\"cd\"] 。  \n- 由于 words[2] = \"cd\" 和 words[1] = \"cd\" 是字母异位词，选择下标 2 并删除 words[2] 。  \n  现在 words = [\"abba\",\"cd\"] 。  \n无法再执行任何操作，所以 [\"abba\",\"cd\"] 是最终答案。</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入：</strong>words = [\"a\",\"b\",\"c\",\"d\",\"e\"]  \n<strong>输出：</strong>[\"a\",\"b\",\"c\",\"d\",\"e\"]  \n<strong>解释：</strong>  \nwords 中不存在互为字母异位词的两个相邻字符串，所以无需执行任何操作。</pre>\n\n<p> </p>\n\n<p><strong>提示：</strong></p>\n\n<ul>  \n   <li><code>1 <= words.length <= 100</code></li>  \n   <li><code>1 <= words[i].length <= 10</code></li>  \n   <li><code>words[i]</code> 由小写英文字母组成</li>  \n</ul>  \n<div><div>Related Topics</div><div><li>数组</li><li>哈希表</li><li>字符串</li><li>排序</li></div></div>\n\n# 思路\n\n遍历字符串数组，分别将每一个字符串装换成字符数组，字符数组排序，如果排序后转成的字符串一样，则说明是字母异位词\n\n# 代码\n\njava：\n\n```java\nclass Solution {\n    public List<String> removeAnagrams(String[] words) {\n        char[] strs = words[0].toCharArray();\n        Arrays.sort(strs);\n        List<String> list = new ArrayList<>();\n        int index = 0;\n        for (int i = 1; i < words.length; i++) {\n            char[] strs1 = words[i].toCharArray();\n            Arrays.sort(strs1);\n            if (!String.valueOf(strs).equals(String.valueOf(strs1))) {\n                list.add(words[index]);\n                strs = strs1;\n                index = i;\n            }\n        }\n        list.add(words[index]);\n        return list;\n    }\n}\n```\n","slug":"find-resultant-array-after-removing-anagrams","published":1,"updated":"2022-06-03T06:00:55.561Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl42z5h6t002x3gn6gtxm4f2j","content":"<p>力扣周赛293–第一题</p>\n<p><a href=\"https://leetcode.cn/problems/find-resultant-array-after-removing-anagrams/\">2273. 移除字母异位词后的结果数组</a></p>\n<h1>题目</h1>\n<p>给你一个下标从 <strong>0</strong> 开始的字符串 <code>words</code> ，其中 <code>words[i]</code> 由小写英文字符组成。</p>\n<p>在一步操作中，需要选出任一下标 <code>i</code> ，从 <code>words</code> 中 <strong>删除</strong> <code>words[i]</code> 。其中下标 <code>i</code> 需要同时满足下述两个条件：</p>\n<ol>  \n   <li><code>0 < i < words.length</code></li>  \n   <li><code>words[i - 1]</code> 和 <code>words[i]</code> 是 <strong>字母异位词</strong> 。</li>  \n</ol>\n<p>只要可以选出满足条件的下标，就一直执行这个操作。</p>\n<p>在执行所有操作后，返回 <code>words</code> 。可以证明，按任意顺序为每步操作选择下标都会得到相同的结果。</p>\n<p><strong>字母异位词</strong> 是由重新排列源单词的字母得到的一个新单词，所有源单词中的字母通常恰好只用一次。例如，<code>\"dacb\"</code> 是 <code>\"abdc\"</code> 的一个字母异位词。</p>\n<p> </p>\n<p><strong>示例 1：</strong></p>\n<pre><strong>输入：</strong>words = [\"abba\",\"baba\",\"bbaa\",\"cd\",\"cd\"]  \n<strong>输出：</strong>[\"abba\",\"cd\"]  \n<strong>解释：</strong>  \n获取结果数组的方法之一是执行下述步骤：  \n- 由于 words[2] = \"bbaa\" 和 words[1] = \"baba\" 是字母异位词，选择下标 2 并删除 words[2] 。  \n  现在 words = [\"abba\",\"baba\",\"cd\",\"cd\"] 。  \n- 由于 words[1] = \"baba\" 和 words[0] = \"abba\" 是字母异位词，选择下标 1 并删除 words[1] 。  \n  现在 words = [\"abba\",\"cd\",\"cd\"] 。  \n- 由于 words[2] = \"cd\" 和 words[1] = \"cd\" 是字母异位词，选择下标 2 并删除 words[2] 。  \n  现在 words = [\"abba\",\"cd\"] 。  \n无法再执行任何操作，所以 [\"abba\",\"cd\"] 是最终答案。</pre>\n<p><strong>示例 2：</strong></p>\n<pre><strong>输入：</strong>words = [\"a\",\"b\",\"c\",\"d\",\"e\"]  \n<strong>输出：</strong>[\"a\",\"b\",\"c\",\"d\",\"e\"]  \n<strong>解释：</strong>  \nwords 中不存在互为字母异位词的两个相邻字符串，所以无需执行任何操作。</pre>\n<p> </p>\n<p><strong>提示：</strong></p>\n<ul>  \n   <li><code>1 <= words.length <= 100</code></li>  \n   <li><code>1 <= words[i].length <= 10</code></li>  \n   <li><code>words[i]</code> 由小写英文字母组成</li>  \n</ul>  \n<div><div>Related Topics</div><div><li>数组</li><li>哈希表</li><li>字符串</li><li>排序</li></div></div>\n<h1>思路</h1>\n<p>遍历字符串数组，分别将每一个字符串装换成字符数组，字符数组排序，如果排序后转成的字符串一样，则说明是字母异位词</p>\n<h1>代码</h1>\n<p>java：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">class Solution &#123;\n    public List&lt;String&gt; removeAnagrams(String[] words) &#123;\n        char[] strs &#x3D; words[0].toCharArray();\n        Arrays.sort(strs);\n        List&lt;String&gt; list &#x3D; new ArrayList&lt;&gt;();\n        int index &#x3D; 0;\n        for (int i &#x3D; 1; i &lt; words.length; i++) &#123;\n            char[] strs1 &#x3D; words[i].toCharArray();\n            Arrays.sort(strs1);\n            if (!String.valueOf(strs).equals(String.valueOf(strs1))) &#123;\n                list.add(words[index]);\n                strs &#x3D; strs1;\n                index &#x3D; i;\n            &#125;\n        &#125;\n        list.add(words[index]);\n        return list;\n    &#125;\n&#125;</code></pre>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"cover":"https://blog.huangge1199.cn/post/day20220121/bg.jpeg","excerpt":"","more":"<p>力扣周赛293–第一题</p>\n<p><a href=\"https://leetcode.cn/problems/find-resultant-array-after-removing-anagrams/\">2273. 移除字母异位词后的结果数组</a></p>\n<h1>题目</h1>\n<p>给你一个下标从 <strong>0</strong> 开始的字符串 <code>words</code> ，其中 <code>words[i]</code> 由小写英文字符组成。</p>\n<p>在一步操作中，需要选出任一下标 <code>i</code> ，从 <code>words</code> 中 <strong>删除</strong> <code>words[i]</code> 。其中下标 <code>i</code> 需要同时满足下述两个条件：</p>\n<ol>  \n   <li><code>0 < i < words.length</code></li>  \n   <li><code>words[i - 1]</code> 和 <code>words[i]</code> 是 <strong>字母异位词</strong> 。</li>  \n</ol>\n<p>只要可以选出满足条件的下标，就一直执行这个操作。</p>\n<p>在执行所有操作后，返回 <code>words</code> 。可以证明，按任意顺序为每步操作选择下标都会得到相同的结果。</p>\n<p><strong>字母异位词</strong> 是由重新排列源单词的字母得到的一个新单词，所有源单词中的字母通常恰好只用一次。例如，<code>\"dacb\"</code> 是 <code>\"abdc\"</code> 的一个字母异位词。</p>\n<p> </p>\n<p><strong>示例 1：</strong></p>\n<pre><strong>输入：</strong>words = [\"abba\",\"baba\",\"bbaa\",\"cd\",\"cd\"]  \n<strong>输出：</strong>[\"abba\",\"cd\"]  \n<strong>解释：</strong>  \n获取结果数组的方法之一是执行下述步骤：  \n- 由于 words[2] = \"bbaa\" 和 words[1] = \"baba\" 是字母异位词，选择下标 2 并删除 words[2] 。  \n  现在 words = [\"abba\",\"baba\",\"cd\",\"cd\"] 。  \n- 由于 words[1] = \"baba\" 和 words[0] = \"abba\" 是字母异位词，选择下标 1 并删除 words[1] 。  \n  现在 words = [\"abba\",\"cd\",\"cd\"] 。  \n- 由于 words[2] = \"cd\" 和 words[1] = \"cd\" 是字母异位词，选择下标 2 并删除 words[2] 。  \n  现在 words = [\"abba\",\"cd\"] 。  \n无法再执行任何操作，所以 [\"abba\",\"cd\"] 是最终答案。</pre>\n<p><strong>示例 2：</strong></p>\n<pre><strong>输入：</strong>words = [\"a\",\"b\",\"c\",\"d\",\"e\"]  \n<strong>输出：</strong>[\"a\",\"b\",\"c\",\"d\",\"e\"]  \n<strong>解释：</strong>  \nwords 中不存在互为字母异位词的两个相邻字符串，所以无需执行任何操作。</pre>\n<p> </p>\n<p><strong>提示：</strong></p>\n<ul>  \n   <li><code>1 <= words.length <= 100</code></li>  \n   <li><code>1 <= words[i].length <= 10</code></li>  \n   <li><code>words[i]</code> 由小写英文字母组成</li>  \n</ul>  \n<div><div>Related Topics</div><div><li>数组</li><li>哈希表</li><li>字符串</li><li>排序</li></div></div>\n<h1>思路</h1>\n<p>遍历字符串数组，分别将每一个字符串装换成字符数组，字符数组排序，如果排序后转成的字符串一样，则说明是字母异位词</p>\n<h1>代码</h1>\n<p>java：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">class Solution &#123;\n    public List&lt;String&gt; removeAnagrams(String[] words) &#123;\n        char[] strs &#x3D; words[0].toCharArray();\n        Arrays.sort(strs);\n        List&lt;String&gt; list &#x3D; new ArrayList&lt;&gt;();\n        int index &#x3D; 0;\n        for (int i &#x3D; 1; i &lt; words.length; i++) &#123;\n            char[] strs1 &#x3D; words[i].toCharArray();\n            Arrays.sort(strs1);\n            if (!String.valueOf(strs).equals(String.valueOf(strs1))) &#123;\n                list.add(words[index]);\n                strs &#x3D; strs1;\n                index &#x3D; i;\n            &#125;\n        &#125;\n        list.add(words[index]);\n        return list;\n    &#125;\n&#125;</code></pre>\n"},{"title":"代码提交到多个git仓库","date":"2022-02-11T09:34:25.000Z","_content":"\n现在我们都习惯于把自己的代码放到远程仓库中，毫无疑问GitHub是首选，但由于国内的网络等各种原因，会导致我们连接不上，这时候我们会考虑放到自建的代码管理仓库或者是gitee上面。\n\n我们还不想放弃GitHub，那么我们就要考虑将代码提交到多个仓库中。\n\n比如，我分别在GitHub和gitee上都有格子的仓库：\n\n- https://github.com/huangge1199/my-blog.git\n- https://gitee.com/huangge1199_admin/my-blog.git\n\n那么，我可以通过以下命令来进行添加仓库：\n\n先添加第一个GitHub的仓库地址：\n```\ngit remote add origin https://github.com/huangge1199/my-blog.git\n```\n\n再添加gitee的仓库地址\n```\ngit remote set-url --add origin https://gitee.com/huangge1199_admin/my-blog.git\n```\n这样的话我们push时，就会将代码同时推送到两个仓库了。\n\n当然不想用命令的形式操作，也可以直接修改项目目录下隐藏目录.git中的config文件，在[remote \"origin\"]中添加多个仓库地址就可以了，参考如下：\n\n```\n[remote \"origin\"]\n\turl = https://gitee.com/huangge1199_admin/my-blog.git\n\tfetch = +refs/heads/*:refs/remotes/origin/*\n\turl = https://github.com/huangge1199/my-blog.git\n```\n\n\n\n","source":"_posts/gitPushMoreRepo.md","raw":"---\ntitle: 代码提交到多个git仓库\ndate: 2022-02-11 17:34:25\ntags: [git]\ncategories: [git]\n---\n\n现在我们都习惯于把自己的代码放到远程仓库中，毫无疑问GitHub是首选，但由于国内的网络等各种原因，会导致我们连接不上，这时候我们会考虑放到自建的代码管理仓库或者是gitee上面。\n\n我们还不想放弃GitHub，那么我们就要考虑将代码提交到多个仓库中。\n\n比如，我分别在GitHub和gitee上都有格子的仓库：\n\n- https://github.com/huangge1199/my-blog.git\n- https://gitee.com/huangge1199_admin/my-blog.git\n\n那么，我可以通过以下命令来进行添加仓库：\n\n先添加第一个GitHub的仓库地址：\n```\ngit remote add origin https://github.com/huangge1199/my-blog.git\n```\n\n再添加gitee的仓库地址\n```\ngit remote set-url --add origin https://gitee.com/huangge1199_admin/my-blog.git\n```\n这样的话我们push时，就会将代码同时推送到两个仓库了。\n\n当然不想用命令的形式操作，也可以直接修改项目目录下隐藏目录.git中的config文件，在[remote \"origin\"]中添加多个仓库地址就可以了，参考如下：\n\n```\n[remote \"origin\"]\n\turl = https://gitee.com/huangge1199_admin/my-blog.git\n\tfetch = +refs/heads/*:refs/remotes/origin/*\n\turl = https://github.com/huangge1199/my-blog.git\n```\n\n\n\n","slug":"gitPushMoreRepo","published":1,"updated":"2022-06-03T06:00:55.561Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl42z5h6u00303gn64b1gb6qi","content":"<p>现在我们都习惯于把自己的代码放到远程仓库中，毫无疑问GitHub是首选，但由于国内的网络等各种原因，会导致我们连接不上，这时候我们会考虑放到自建的代码管理仓库或者是gitee上面。</p>\n<p>我们还不想放弃GitHub，那么我们就要考虑将代码提交到多个仓库中。</p>\n<p>比如，我分别在GitHub和gitee上都有格子的仓库：</p>\n<ul>\n<li><a href=\"https://github.com/huangge1199/my-blog.git\">https://github.com/huangge1199/my-blog.git</a></li>\n<li><a href=\"https://gitee.com/huangge1199_admin/my-blog.git\">https://gitee.com/huangge1199_admin/my-blog.git</a></li>\n</ul>\n<p>那么，我可以通过以下命令来进行添加仓库：</p>\n<p>先添加第一个GitHub的仓库地址：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">git remote add origin https:&#x2F;&#x2F;github.com&#x2F;huangge1199&#x2F;my-blog.git</code></pre>\n<p>再添加gitee的仓库地址</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">git remote set-url --add origin https:&#x2F;&#x2F;gitee.com&#x2F;huangge1199_admin&#x2F;my-blog.git</code></pre>\n<p>这样的话我们push时，就会将代码同时推送到两个仓库了。</p>\n<p>当然不想用命令的形式操作，也可以直接修改项目目录下隐藏目录.git中的config文件，在[remote “origin”]中添加多个仓库地址就可以了，参考如下：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">[remote &quot;origin&quot;]\n\turl &#x3D; https:&#x2F;&#x2F;gitee.com&#x2F;huangge1199_admin&#x2F;my-blog.git\n\tfetch &#x3D; +refs&#x2F;heads&#x2F;*:refs&#x2F;remotes&#x2F;origin&#x2F;*\n\turl &#x3D; https:&#x2F;&#x2F;github.com&#x2F;huangge1199&#x2F;my-blog.git</code></pre>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"cover":"https://blog.huangge1199.cn/post/day20220120/bg.jpeg","excerpt":"","more":"<p>现在我们都习惯于把自己的代码放到远程仓库中，毫无疑问GitHub是首选，但由于国内的网络等各种原因，会导致我们连接不上，这时候我们会考虑放到自建的代码管理仓库或者是gitee上面。</p>\n<p>我们还不想放弃GitHub，那么我们就要考虑将代码提交到多个仓库中。</p>\n<p>比如，我分别在GitHub和gitee上都有格子的仓库：</p>\n<ul>\n<li><a href=\"https://github.com/huangge1199/my-blog.git\">https://github.com/huangge1199/my-blog.git</a></li>\n<li><a href=\"https://gitee.com/huangge1199_admin/my-blog.git\">https://gitee.com/huangge1199_admin/my-blog.git</a></li>\n</ul>\n<p>那么，我可以通过以下命令来进行添加仓库：</p>\n<p>先添加第一个GitHub的仓库地址：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">git remote add origin https:&#x2F;&#x2F;github.com&#x2F;huangge1199&#x2F;my-blog.git</code></pre>\n<p>再添加gitee的仓库地址</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">git remote set-url --add origin https:&#x2F;&#x2F;gitee.com&#x2F;huangge1199_admin&#x2F;my-blog.git</code></pre>\n<p>这样的话我们push时，就会将代码同时推送到两个仓库了。</p>\n<p>当然不想用命令的形式操作，也可以直接修改项目目录下隐藏目录.git中的config文件，在[remote “origin”]中添加多个仓库地址就可以了，参考如下：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">[remote &quot;origin&quot;]\n\turl &#x3D; https:&#x2F;&#x2F;gitee.com&#x2F;huangge1199_admin&#x2F;my-blog.git\n\tfetch &#x3D; +refs&#x2F;heads&#x2F;*:refs&#x2F;remotes&#x2F;origin&#x2F;*\n\turl &#x3D; https:&#x2F;&#x2F;github.com&#x2F;huangge1199&#x2F;my-blog.git</code></pre>\n"},{"title":"Hello World","date":"2021-12-01T11:04:06.000Z","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\ndate: 2021-12-01 19:04:06\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"updated":"2022-06-03T06:00:55.561Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl42z5h6v00343gn65fbyh3r5","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\">Quick Start</h2>\n<h3 id=\"Create-a-new-post\">Create a new post</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo new &quot;My New Post&quot;</code></pre>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\">Run server</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo server</code></pre>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\">Generate static files</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo generate</code></pre>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\">Deploy to remote sites</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo deploy</code></pre>\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"cover":"https://blog.huangge1199.cn/post/day20220121/bg.jpeg","excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\">Quick Start</h2>\n<h3 id=\"Create-a-new-post\">Create a new post</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo new &quot;My New Post&quot;</code></pre>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\">Run server</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo server</code></pre>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\">Generate static files</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo generate</code></pre>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\">Deploy to remote sites</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo deploy</code></pre>\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"},{"title":"docker-compose安装MySQL","date":"2022-04-24T07:57:49.000Z","_content":"\ndocker中安装MySQL\n\n本教程以MySQL5.7版本为例编写，如需其他版本，可自行前往docker hub网站查找对应的镜像，安装可能回和本教程有一定出入，清自行处理。\n如遇问题也可以在评论中回复，本人会尽快给与回复\n\n# 1、拉取镜像\n\n```shell\ndocker pull mysql:5.7\n```\n\n![img.png](img.png)\n\n# 2、编写docker-compose.yml文件\n\n内容如下：\n\n```yaml\nversion: '3'\nservices:\n    mysql:\n        container_name: mysql\n        image: mysql:5.7\n        environment:\n            - MYSQL_ROOT_PASSWORD=此处为root密码自行设置\n            - TZ=Asia/Shanghai\n        volumes: \n            - ./conf:/etc/mysql\n            - ./data:/var/lib/mysql\n            - ./init:/docker-entrypoint-initdb.d/\n        ports: \n            - 50010:3306\n        restart: always\n```\n\n# 3、创建目录文件\n\n根据docker-compose.yml文件创建对应目录文件\n\n![](2022-04-24-16-20-33-image.png)\n\n# 4、编写MySQL的配置文件\n\n在conf目录下创建my.cnf文件，文件内容如下：\n\n```\n[mysqld]\nlower_case_table_names=1\ninnodb_force_recovery = 0\n\nlog-bin=/var/lib/mysql/mysql-bin\nbinlog-format=ROW\nserver_id=1\n```\n\n# 5、启动MySQL容器\n\n```shell\ndocker-compose up -d\n```\n\n![](2022-04-24-16-30-32-image.png)\n\n# 6、远程连接验证结果\n\n![](2022-04-24-16-45-29-image.png)\n","source":"_posts/iMySQLByDC.md","raw":"---\ntitle: docker-compose安装MySQL\ndate: 2022-04-24 15:57:49\ntags: [docker]\ncategories: [docker]\n---\n\ndocker中安装MySQL\n\n本教程以MySQL5.7版本为例编写，如需其他版本，可自行前往docker hub网站查找对应的镜像，安装可能回和本教程有一定出入，清自行处理。\n如遇问题也可以在评论中回复，本人会尽快给与回复\n\n# 1、拉取镜像\n\n```shell\ndocker pull mysql:5.7\n```\n\n![img.png](img.png)\n\n# 2、编写docker-compose.yml文件\n\n内容如下：\n\n```yaml\nversion: '3'\nservices:\n    mysql:\n        container_name: mysql\n        image: mysql:5.7\n        environment:\n            - MYSQL_ROOT_PASSWORD=此处为root密码自行设置\n            - TZ=Asia/Shanghai\n        volumes: \n            - ./conf:/etc/mysql\n            - ./data:/var/lib/mysql\n            - ./init:/docker-entrypoint-initdb.d/\n        ports: \n            - 50010:3306\n        restart: always\n```\n\n# 3、创建目录文件\n\n根据docker-compose.yml文件创建对应目录文件\n\n![](2022-04-24-16-20-33-image.png)\n\n# 4、编写MySQL的配置文件\n\n在conf目录下创建my.cnf文件，文件内容如下：\n\n```\n[mysqld]\nlower_case_table_names=1\ninnodb_force_recovery = 0\n\nlog-bin=/var/lib/mysql/mysql-bin\nbinlog-format=ROW\nserver_id=1\n```\n\n# 5、启动MySQL容器\n\n```shell\ndocker-compose up -d\n```\n\n![](2022-04-24-16-30-32-image.png)\n\n# 6、远程连接验证结果\n\n![](2022-04-24-16-45-29-image.png)\n","slug":"iMySQLByDC","published":1,"updated":"2022-06-03T06:00:55.561Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl42z5h6w00383gn66m4q5ggd","content":"<p>docker中安装MySQL</p>\n<p>本教程以MySQL5.7版本为例编写，如需其他版本，可自行前往docker hub网站查找对应的镜像，安装可能回和本教程有一定出入，清自行处理。<br>\n如遇问题也可以在评论中回复，本人会尽快给与回复</p>\n<h1>1、拉取镜像</h1>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">docker pull mysql:5.7</code></pre>\n<p><img src=\"img.png\" alt=\"img.png\"></p>\n<h1>2、编写docker-compose.yml文件</h1>\n<p>内容如下：</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\">version: &#39;3&#39;\nservices:\n    mysql:\n        container_name: mysql\n        image: mysql:5.7\n        environment:\n            - MYSQL_ROOT_PASSWORD&#x3D;此处为root密码自行设置\n            - TZ&#x3D;Asia&#x2F;Shanghai\n        volumes: \n            - .&#x2F;conf:&#x2F;etc&#x2F;mysql\n            - .&#x2F;data:&#x2F;var&#x2F;lib&#x2F;mysql\n            - .&#x2F;init:&#x2F;docker-entrypoint-initdb.d&#x2F;\n        ports: \n            - 50010:3306\n        restart: always</code></pre>\n<h1>3、创建目录文件</h1>\n<p>根据docker-compose.yml文件创建对应目录文件</p>\n<p><img src=\"2022-04-24-16-20-33-image.png\" alt=\"\"></p>\n<h1>4、编写MySQL的配置文件</h1>\n<p>在conf目录下创建my.cnf文件，文件内容如下：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">[mysqld]\nlower_case_table_names&#x3D;1\ninnodb_force_recovery &#x3D; 0\n\nlog-bin&#x3D;&#x2F;var&#x2F;lib&#x2F;mysql&#x2F;mysql-bin\nbinlog-format&#x3D;ROW\nserver_id&#x3D;1</code></pre>\n<h1>5、启动MySQL容器</h1>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">docker-compose up -d</code></pre>\n<p><img src=\"2022-04-24-16-30-32-image.png\" alt=\"\"></p>\n<h1>6、远程连接验证结果</h1>\n<p><img src=\"2022-04-24-16-45-29-image.png\" alt=\"\"></p>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"cover":"https://blog.huangge1199.cn/post/day20220121/bg.jpeg","excerpt":"","more":"<p>docker中安装MySQL</p>\n<p>本教程以MySQL5.7版本为例编写，如需其他版本，可自行前往docker hub网站查找对应的镜像，安装可能回和本教程有一定出入，清自行处理。<br>\n如遇问题也可以在评论中回复，本人会尽快给与回复</p>\n<h1>1、拉取镜像</h1>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">docker pull mysql:5.7</code></pre>\n<p><img src=\"img.png\" alt=\"img.png\"></p>\n<h1>2、编写docker-compose.yml文件</h1>\n<p>内容如下：</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\">version: &#39;3&#39;\nservices:\n    mysql:\n        container_name: mysql\n        image: mysql:5.7\n        environment:\n            - MYSQL_ROOT_PASSWORD&#x3D;此处为root密码自行设置\n            - TZ&#x3D;Asia&#x2F;Shanghai\n        volumes: \n            - .&#x2F;conf:&#x2F;etc&#x2F;mysql\n            - .&#x2F;data:&#x2F;var&#x2F;lib&#x2F;mysql\n            - .&#x2F;init:&#x2F;docker-entrypoint-initdb.d&#x2F;\n        ports: \n            - 50010:3306\n        restart: always</code></pre>\n<h1>3、创建目录文件</h1>\n<p>根据docker-compose.yml文件创建对应目录文件</p>\n<p><img src=\"2022-04-24-16-20-33-image.png\" alt=\"\"></p>\n<h1>4、编写MySQL的配置文件</h1>\n<p>在conf目录下创建my.cnf文件，文件内容如下：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">[mysqld]\nlower_case_table_names&#x3D;1\ninnodb_force_recovery &#x3D; 0\n\nlog-bin&#x3D;&#x2F;var&#x2F;lib&#x2F;mysql&#x2F;mysql-bin\nbinlog-format&#x3D;ROW\nserver_id&#x3D;1</code></pre>\n<h1>5、启动MySQL容器</h1>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">docker-compose up -d</code></pre>\n<p><img src=\"2022-04-24-16-30-32-image.png\" alt=\"\"></p>\n<h1>6、远程连接验证结果</h1>\n<p><img src=\"2022-04-24-16-45-29-image.png\" alt=\"\"></p>\n"},{"title":"用docker-compose安装nginx","date":"2022-04-24T07:36:52.000Z","_content":"\ndocker中安装nginx\n\n# 1、查找nginx镜像\n\n通过[Docker Hub网站查询nginx镜像](https://hub.docker.com/)，选择下面的官方镜像\n\n![](2022-04-21-00-46-47-image.png)\n\n# 2、下载镜像\n\n3.1页面点进去后在右上方有docker拉取命令\n\n![](2022-04-21-00-47-51-image.png)\n\n```shell\ndocker pull nginx\n```\n\n![](2022-04-21-01-03-03-image.png)\n\n# 3、编写docker-compose.yml\n\ndocker-compose.yml内容如下：\n\n```shell\nversion: '3'\nservices:\n    nginx: \n        container_name: nginx  #生成的容器名\n        image: nginx:latest #镜像\n        environment:\n            - TZ=Asia/Shanghai #时间\n        volumes: \n            - ./html:/usr/share/nginx/html              #nginx静态页位置\n            - ./conf/nginx.conf:/etc/nginx/nginx.conf   #配置文件\n            - ./conf.d:/etc/nginx/conf.d                #配置文件\n            - ./logs:/var/log/nginx                     #日志\n        ports: \n            - 80:80\n            - 443:443\n        restart: always\n```\n\n# 4、创建目录以及nginx配置文件\n\n根据docker-compose.yml建立文件目录，并编写相关文件\n\n目录：\n\n![](2022-04-21-20-43-55-image.png)\n\nconf/nginx.conf：\n\n```\nuser  nginx;\nworker_processes  auto;\n\nerror_log  /var/log/nginx/error.log notice;\npid        /var/run/nginx.pid;\n\n\nevents {\n    worker_connections  1024;\n}\n\n\nhttp {\n    include       /etc/nginx/mime.types;\n    default_type  application/octet-stream;\n\n    log_format  main  '$remote_addr - $remote_user [$time_local] \"$request\" '\n                      '$status $body_bytes_sent \"$http_referer\" '\n                      '\"$http_user_agent\" \"$http_x_forwarded_for\"';\n\n    access_log  /var/log/nginx/access.log  main;\n\n    sendfile        on;\n    #tcp_nopush     on;\n\n    keepalive_timeout  65;\n\n    #gzip  on;\n\n    include /etc/nginx/conf.d/*.conf;\n}\n```\n\nconf.d/default.conf\n\n```\nserver {\n    listen       80;\n    listen  [::]:80;\n    server_name  localhost;\n\n    #access_log  /var/log/nginx/host.access.log  main;\n\n    location / {\n        root   /usr/share/nginx/html;\n        index  index.html index.htm;\n    }\n\n    #error_page  404              /404.html;\n\n    # redirect server error pages to the static page /50x.html\n    #\n    error_page   500 502 503 504  /50x.html;\n    location = /50x.html {\n        root   /usr/share/nginx/html;\n    }\n\n    # proxy the PHP scripts to Apache listening on 127.0.0.1:80\n    #\n    #location ~ \\.php$ {\n    #    proxy_pass   http://127.0.0.1;\n    #}\n\n    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000\n    #\n    #location ~ \\.php$ {\n    #    root           html;\n    #    fastcgi_pass   127.0.0.1:9000;\n    #    fastcgi_index  index.php;\n    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;\n    #    include        fastcgi_params;\n    #}\n\n    # deny access to .htaccess files, if Apache's document root\n    # concurs with nginx's one\n    #\n    #location ~ /\\.ht {\n    #    deny  all;\n    #}\n}\n```\n\nhtml/50x.html\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n<title>Error</title>\n<style>\nhtml { color-scheme: light dark; }\nbody { width: 35em; margin: 0 auto;\nfont-family: Tahoma, Verdana, Arial, sans-serif; }\n</style>\n</head>\n<body>\n<h1>An error occurred.</h1>\n<p>Sorry, the page you are looking for is currently unavailable.<br/>\nPlease try again later.</p>\n<p>If you are the system administrator of this resource then you should check\nthe error log for details.</p>\n<p><em>Faithfully yours, nginx.</em></p>\n</body>\n</html>\n```\n\nhtml/index.html\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n<title>Welcome to nginx!</title>\n<style>\nhtml { color-scheme: light dark; }\nbody { width: 35em; margin: 0 auto;\nfont-family: Tahoma, Verdana, Arial, sans-serif; }\n</style>\n</head>\n<body>\n<h1>Welcome to nginx!</h1>\n<p>If you see this page, the nginx web server is successfully installed and\nworking. Further configuration is required.</p>\n\n<p>For online documentation and support please refer to\n<a href=\"http://nginx.org/\">nginx.org</a>.<br/>\nCommercial support is available at\n<a href=\"http://nginx.com/\">nginx.com</a>.</p>\n\n<p><em>Thank you for using nginx.</em></p>\n</body>\n</html>\n```\n\n# 5、docker-compose启动nginx\n\n```shell\ncd nginx/\nll\ndocker-compose up -d\n```\n\n![](2022-04-21-19-59-02-image.png)\n\n# 6、验证nginx正常启动\n\n执行命令：\n\n```shell\ndocker ps -a\n```\n\n![](2022-04-21-20-12-55-image.png)\n\n然后在浏览器中输入IP，出现欢迎界面，安装完成\n\n![](2022-04-24-15-34-45-image.png)\n\n \n","source":"_posts/iNginxByDC.md","raw":"---\ntitle: 用docker-compose安装nginx\ndate: 2022-04-24 15:36:52\ntags: [docker,安装部署]\ncategories: [docker]\n\n---\n\ndocker中安装nginx\n\n# 1、查找nginx镜像\n\n通过[Docker Hub网站查询nginx镜像](https://hub.docker.com/)，选择下面的官方镜像\n\n![](2022-04-21-00-46-47-image.png)\n\n# 2、下载镜像\n\n3.1页面点进去后在右上方有docker拉取命令\n\n![](2022-04-21-00-47-51-image.png)\n\n```shell\ndocker pull nginx\n```\n\n![](2022-04-21-01-03-03-image.png)\n\n# 3、编写docker-compose.yml\n\ndocker-compose.yml内容如下：\n\n```shell\nversion: '3'\nservices:\n    nginx: \n        container_name: nginx  #生成的容器名\n        image: nginx:latest #镜像\n        environment:\n            - TZ=Asia/Shanghai #时间\n        volumes: \n            - ./html:/usr/share/nginx/html              #nginx静态页位置\n            - ./conf/nginx.conf:/etc/nginx/nginx.conf   #配置文件\n            - ./conf.d:/etc/nginx/conf.d                #配置文件\n            - ./logs:/var/log/nginx                     #日志\n        ports: \n            - 80:80\n            - 443:443\n        restart: always\n```\n\n# 4、创建目录以及nginx配置文件\n\n根据docker-compose.yml建立文件目录，并编写相关文件\n\n目录：\n\n![](2022-04-21-20-43-55-image.png)\n\nconf/nginx.conf：\n\n```\nuser  nginx;\nworker_processes  auto;\n\nerror_log  /var/log/nginx/error.log notice;\npid        /var/run/nginx.pid;\n\n\nevents {\n    worker_connections  1024;\n}\n\n\nhttp {\n    include       /etc/nginx/mime.types;\n    default_type  application/octet-stream;\n\n    log_format  main  '$remote_addr - $remote_user [$time_local] \"$request\" '\n                      '$status $body_bytes_sent \"$http_referer\" '\n                      '\"$http_user_agent\" \"$http_x_forwarded_for\"';\n\n    access_log  /var/log/nginx/access.log  main;\n\n    sendfile        on;\n    #tcp_nopush     on;\n\n    keepalive_timeout  65;\n\n    #gzip  on;\n\n    include /etc/nginx/conf.d/*.conf;\n}\n```\n\nconf.d/default.conf\n\n```\nserver {\n    listen       80;\n    listen  [::]:80;\n    server_name  localhost;\n\n    #access_log  /var/log/nginx/host.access.log  main;\n\n    location / {\n        root   /usr/share/nginx/html;\n        index  index.html index.htm;\n    }\n\n    #error_page  404              /404.html;\n\n    # redirect server error pages to the static page /50x.html\n    #\n    error_page   500 502 503 504  /50x.html;\n    location = /50x.html {\n        root   /usr/share/nginx/html;\n    }\n\n    # proxy the PHP scripts to Apache listening on 127.0.0.1:80\n    #\n    #location ~ \\.php$ {\n    #    proxy_pass   http://127.0.0.1;\n    #}\n\n    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000\n    #\n    #location ~ \\.php$ {\n    #    root           html;\n    #    fastcgi_pass   127.0.0.1:9000;\n    #    fastcgi_index  index.php;\n    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;\n    #    include        fastcgi_params;\n    #}\n\n    # deny access to .htaccess files, if Apache's document root\n    # concurs with nginx's one\n    #\n    #location ~ /\\.ht {\n    #    deny  all;\n    #}\n}\n```\n\nhtml/50x.html\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n<title>Error</title>\n<style>\nhtml { color-scheme: light dark; }\nbody { width: 35em; margin: 0 auto;\nfont-family: Tahoma, Verdana, Arial, sans-serif; }\n</style>\n</head>\n<body>\n<h1>An error occurred.</h1>\n<p>Sorry, the page you are looking for is currently unavailable.<br/>\nPlease try again later.</p>\n<p>If you are the system administrator of this resource then you should check\nthe error log for details.</p>\n<p><em>Faithfully yours, nginx.</em></p>\n</body>\n</html>\n```\n\nhtml/index.html\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n<title>Welcome to nginx!</title>\n<style>\nhtml { color-scheme: light dark; }\nbody { width: 35em; margin: 0 auto;\nfont-family: Tahoma, Verdana, Arial, sans-serif; }\n</style>\n</head>\n<body>\n<h1>Welcome to nginx!</h1>\n<p>If you see this page, the nginx web server is successfully installed and\nworking. Further configuration is required.</p>\n\n<p>For online documentation and support please refer to\n<a href=\"http://nginx.org/\">nginx.org</a>.<br/>\nCommercial support is available at\n<a href=\"http://nginx.com/\">nginx.com</a>.</p>\n\n<p><em>Thank you for using nginx.</em></p>\n</body>\n</html>\n```\n\n# 5、docker-compose启动nginx\n\n```shell\ncd nginx/\nll\ndocker-compose up -d\n```\n\n![](2022-04-21-19-59-02-image.png)\n\n# 6、验证nginx正常启动\n\n执行命令：\n\n```shell\ndocker ps -a\n```\n\n![](2022-04-21-20-12-55-image.png)\n\n然后在浏览器中输入IP，出现欢迎界面，安装完成\n\n![](2022-04-24-15-34-45-image.png)\n\n \n","slug":"iNginxByDC","published":1,"updated":"2022-06-03T06:00:55.565Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl42z5h6x003c3gn67j847l07","content":"<p>docker中安装nginx</p>\n<h1>1、查找nginx镜像</h1>\n<p>通过<a href=\"https://hub.docker.com/\">Docker Hub网站查询nginx镜像</a>，选择下面的官方镜像</p>\n<p><img src=\"2022-04-21-00-46-47-image.png\" alt=\"\"></p>\n<h1>2、下载镜像</h1>\n<p>3.1页面点进去后在右上方有docker拉取命令</p>\n<p><img src=\"2022-04-21-00-47-51-image.png\" alt=\"\"></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">docker pull nginx</code></pre>\n<p><img src=\"2022-04-21-01-03-03-image.png\" alt=\"\"></p>\n<h1>3、编写docker-compose.yml</h1>\n<p>docker-compose.yml内容如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">version: &#39;3&#39;\nservices:\n    nginx: \n        container_name: nginx  #生成的容器名\n        image: nginx:latest #镜像\n        environment:\n            - TZ&#x3D;Asia&#x2F;Shanghai #时间\n        volumes: \n            - .&#x2F;html:&#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html              #nginx静态页位置\n            - .&#x2F;conf&#x2F;nginx.conf:&#x2F;etc&#x2F;nginx&#x2F;nginx.conf   #配置文件\n            - .&#x2F;conf.d:&#x2F;etc&#x2F;nginx&#x2F;conf.d                #配置文件\n            - .&#x2F;logs:&#x2F;var&#x2F;log&#x2F;nginx                     #日志\n        ports: \n            - 80:80\n            - 443:443\n        restart: always</code></pre>\n<h1>4、创建目录以及nginx配置文件</h1>\n<p>根据docker-compose.yml建立文件目录，并编写相关文件</p>\n<p>目录：</p>\n<p><img src=\"2022-04-21-20-43-55-image.png\" alt=\"\"></p>\n<p>conf/nginx.conf：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">user  nginx;\nworker_processes  auto;\n\nerror_log  &#x2F;var&#x2F;log&#x2F;nginx&#x2F;error.log notice;\npid        &#x2F;var&#x2F;run&#x2F;nginx.pid;\n\n\nevents &#123;\n    worker_connections  1024;\n&#125;\n\n\nhttp &#123;\n    include       &#x2F;etc&#x2F;nginx&#x2F;mime.types;\n    default_type  application&#x2F;octet-stream;\n\n    log_format  main  &#39;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#39;\n                      &#39;$status $body_bytes_sent &quot;$http_referer&quot; &#39;\n                      &#39;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#39;;\n\n    access_log  &#x2F;var&#x2F;log&#x2F;nginx&#x2F;access.log  main;\n\n    sendfile        on;\n    #tcp_nopush     on;\n\n    keepalive_timeout  65;\n\n    #gzip  on;\n\n    include &#x2F;etc&#x2F;nginx&#x2F;conf.d&#x2F;*.conf;\n&#125;</code></pre>\n<p>conf.d/default.conf</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">server &#123;\n    listen       80;\n    listen  [::]:80;\n    server_name  localhost;\n\n    #access_log  &#x2F;var&#x2F;log&#x2F;nginx&#x2F;host.access.log  main;\n\n    location &#x2F; &#123;\n        root   &#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html;\n        index  index.html index.htm;\n    &#125;\n\n    #error_page  404              &#x2F;404.html;\n\n    # redirect server error pages to the static page &#x2F;50x.html\n    #\n    error_page   500 502 503 504  &#x2F;50x.html;\n    location &#x3D; &#x2F;50x.html &#123;\n        root   &#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html;\n    &#125;\n\n    # proxy the PHP scripts to Apache listening on 127.0.0.1:80\n    #\n    #location ~ \\.php$ &#123;\n    #    proxy_pass   http:&#x2F;&#x2F;127.0.0.1;\n    #&#125;\n\n    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000\n    #\n    #location ~ \\.php$ &#123;\n    #    root           html;\n    #    fastcgi_pass   127.0.0.1:9000;\n    #    fastcgi_index  index.php;\n    #    fastcgi_param  SCRIPT_FILENAME  &#x2F;scripts$fastcgi_script_name;\n    #    include        fastcgi_params;\n    #&#125;\n\n    # deny access to .htaccess files, if Apache&#39;s document root\n    # concurs with nginx&#39;s one\n    #\n    #location ~ &#x2F;\\.ht &#123;\n    #    deny  all;\n    #&#125;\n&#125;</code></pre>\n<p>html/50x.html</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;title&gt;Error&lt;&#x2F;title&gt;\n&lt;style&gt;\nhtml &#123; color-scheme: light dark; &#125;\nbody &#123; width: 35em; margin: 0 auto;\nfont-family: Tahoma, Verdana, Arial, sans-serif; &#125;\n&lt;&#x2F;style&gt;\n&lt;&#x2F;head&gt;\n&lt;body&gt;\n&lt;h1&gt;An error occurred.&lt;&#x2F;h1&gt;\n&lt;p&gt;Sorry, the page you are looking for is currently unavailable.&lt;br&#x2F;&gt;\nPlease try again later.&lt;&#x2F;p&gt;\n&lt;p&gt;If you are the system administrator of this resource then you should check\nthe error log for details.&lt;&#x2F;p&gt;\n&lt;p&gt;&lt;em&gt;Faithfully yours, nginx.&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;\n&lt;&#x2F;body&gt;\n&lt;&#x2F;html&gt;</code></pre>\n<p>html/index.html</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;title&gt;Welcome to nginx!&lt;&#x2F;title&gt;\n&lt;style&gt;\nhtml &#123; color-scheme: light dark; &#125;\nbody &#123; width: 35em; margin: 0 auto;\nfont-family: Tahoma, Verdana, Arial, sans-serif; &#125;\n&lt;&#x2F;style&gt;\n&lt;&#x2F;head&gt;\n&lt;body&gt;\n&lt;h1&gt;Welcome to nginx!&lt;&#x2F;h1&gt;\n&lt;p&gt;If you see this page, the nginx web server is successfully installed and\nworking. Further configuration is required.&lt;&#x2F;p&gt;\n\n&lt;p&gt;For online documentation and support please refer to\n&lt;a href&#x3D;&quot;http:&#x2F;&#x2F;nginx.org&#x2F;&quot;&gt;nginx.org&lt;&#x2F;a&gt;.&lt;br&#x2F;&gt;\nCommercial support is available at\n&lt;a href&#x3D;&quot;http:&#x2F;&#x2F;nginx.com&#x2F;&quot;&gt;nginx.com&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;\n\n&lt;p&gt;&lt;em&gt;Thank you for using nginx.&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;\n&lt;&#x2F;body&gt;\n&lt;&#x2F;html&gt;</code></pre>\n<h1>5、docker-compose启动nginx</h1>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">cd nginx&#x2F;\nll\ndocker-compose up -d</code></pre>\n<p><img src=\"2022-04-21-19-59-02-image.png\" alt=\"\"></p>\n<h1>6、验证nginx正常启动</h1>\n<p>执行命令：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">docker ps -a</code></pre>\n<p><img src=\"2022-04-21-20-12-55-image.png\" alt=\"\"></p>\n<p>然后在浏览器中输入IP，出现欢迎界面，安装完成</p>\n<p><img src=\"2022-04-24-15-34-45-image.png\" alt=\"\"></p>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"cover":"https://blog.huangge1199.cn/post/jpaCompositePK/bg.jpg","excerpt":"","more":"<p>docker中安装nginx</p>\n<h1>1、查找nginx镜像</h1>\n<p>通过<a href=\"https://hub.docker.com/\">Docker Hub网站查询nginx镜像</a>，选择下面的官方镜像</p>\n<p><img src=\"2022-04-21-00-46-47-image.png\" alt=\"\"></p>\n<h1>2、下载镜像</h1>\n<p>3.1页面点进去后在右上方有docker拉取命令</p>\n<p><img src=\"2022-04-21-00-47-51-image.png\" alt=\"\"></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">docker pull nginx</code></pre>\n<p><img src=\"2022-04-21-01-03-03-image.png\" alt=\"\"></p>\n<h1>3、编写docker-compose.yml</h1>\n<p>docker-compose.yml内容如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">version: &#39;3&#39;\nservices:\n    nginx: \n        container_name: nginx  #生成的容器名\n        image: nginx:latest #镜像\n        environment:\n            - TZ&#x3D;Asia&#x2F;Shanghai #时间\n        volumes: \n            - .&#x2F;html:&#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html              #nginx静态页位置\n            - .&#x2F;conf&#x2F;nginx.conf:&#x2F;etc&#x2F;nginx&#x2F;nginx.conf   #配置文件\n            - .&#x2F;conf.d:&#x2F;etc&#x2F;nginx&#x2F;conf.d                #配置文件\n            - .&#x2F;logs:&#x2F;var&#x2F;log&#x2F;nginx                     #日志\n        ports: \n            - 80:80\n            - 443:443\n        restart: always</code></pre>\n<h1>4、创建目录以及nginx配置文件</h1>\n<p>根据docker-compose.yml建立文件目录，并编写相关文件</p>\n<p>目录：</p>\n<p><img src=\"2022-04-21-20-43-55-image.png\" alt=\"\"></p>\n<p>conf/nginx.conf：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">user  nginx;\nworker_processes  auto;\n\nerror_log  &#x2F;var&#x2F;log&#x2F;nginx&#x2F;error.log notice;\npid        &#x2F;var&#x2F;run&#x2F;nginx.pid;\n\n\nevents &#123;\n    worker_connections  1024;\n&#125;\n\n\nhttp &#123;\n    include       &#x2F;etc&#x2F;nginx&#x2F;mime.types;\n    default_type  application&#x2F;octet-stream;\n\n    log_format  main  &#39;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#39;\n                      &#39;$status $body_bytes_sent &quot;$http_referer&quot; &#39;\n                      &#39;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#39;;\n\n    access_log  &#x2F;var&#x2F;log&#x2F;nginx&#x2F;access.log  main;\n\n    sendfile        on;\n    #tcp_nopush     on;\n\n    keepalive_timeout  65;\n\n    #gzip  on;\n\n    include &#x2F;etc&#x2F;nginx&#x2F;conf.d&#x2F;*.conf;\n&#125;</code></pre>\n<p>conf.d/default.conf</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">server &#123;\n    listen       80;\n    listen  [::]:80;\n    server_name  localhost;\n\n    #access_log  &#x2F;var&#x2F;log&#x2F;nginx&#x2F;host.access.log  main;\n\n    location &#x2F; &#123;\n        root   &#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html;\n        index  index.html index.htm;\n    &#125;\n\n    #error_page  404              &#x2F;404.html;\n\n    # redirect server error pages to the static page &#x2F;50x.html\n    #\n    error_page   500 502 503 504  &#x2F;50x.html;\n    location &#x3D; &#x2F;50x.html &#123;\n        root   &#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html;\n    &#125;\n\n    # proxy the PHP scripts to Apache listening on 127.0.0.1:80\n    #\n    #location ~ \\.php$ &#123;\n    #    proxy_pass   http:&#x2F;&#x2F;127.0.0.1;\n    #&#125;\n\n    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000\n    #\n    #location ~ \\.php$ &#123;\n    #    root           html;\n    #    fastcgi_pass   127.0.0.1:9000;\n    #    fastcgi_index  index.php;\n    #    fastcgi_param  SCRIPT_FILENAME  &#x2F;scripts$fastcgi_script_name;\n    #    include        fastcgi_params;\n    #&#125;\n\n    # deny access to .htaccess files, if Apache&#39;s document root\n    # concurs with nginx&#39;s one\n    #\n    #location ~ &#x2F;\\.ht &#123;\n    #    deny  all;\n    #&#125;\n&#125;</code></pre>\n<p>html/50x.html</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;title&gt;Error&lt;&#x2F;title&gt;\n&lt;style&gt;\nhtml &#123; color-scheme: light dark; &#125;\nbody &#123; width: 35em; margin: 0 auto;\nfont-family: Tahoma, Verdana, Arial, sans-serif; &#125;\n&lt;&#x2F;style&gt;\n&lt;&#x2F;head&gt;\n&lt;body&gt;\n&lt;h1&gt;An error occurred.&lt;&#x2F;h1&gt;\n&lt;p&gt;Sorry, the page you are looking for is currently unavailable.&lt;br&#x2F;&gt;\nPlease try again later.&lt;&#x2F;p&gt;\n&lt;p&gt;If you are the system administrator of this resource then you should check\nthe error log for details.&lt;&#x2F;p&gt;\n&lt;p&gt;&lt;em&gt;Faithfully yours, nginx.&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;\n&lt;&#x2F;body&gt;\n&lt;&#x2F;html&gt;</code></pre>\n<p>html/index.html</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;title&gt;Welcome to nginx!&lt;&#x2F;title&gt;\n&lt;style&gt;\nhtml &#123; color-scheme: light dark; &#125;\nbody &#123; width: 35em; margin: 0 auto;\nfont-family: Tahoma, Verdana, Arial, sans-serif; &#125;\n&lt;&#x2F;style&gt;\n&lt;&#x2F;head&gt;\n&lt;body&gt;\n&lt;h1&gt;Welcome to nginx!&lt;&#x2F;h1&gt;\n&lt;p&gt;If you see this page, the nginx web server is successfully installed and\nworking. Further configuration is required.&lt;&#x2F;p&gt;\n\n&lt;p&gt;For online documentation and support please refer to\n&lt;a href&#x3D;&quot;http:&#x2F;&#x2F;nginx.org&#x2F;&quot;&gt;nginx.org&lt;&#x2F;a&gt;.&lt;br&#x2F;&gt;\nCommercial support is available at\n&lt;a href&#x3D;&quot;http:&#x2F;&#x2F;nginx.com&#x2F;&quot;&gt;nginx.com&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;\n\n&lt;p&gt;&lt;em&gt;Thank you for using nginx.&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;\n&lt;&#x2F;body&gt;\n&lt;&#x2F;html&gt;</code></pre>\n<h1>5、docker-compose启动nginx</h1>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">cd nginx&#x2F;\nll\ndocker-compose up -d</code></pre>\n<p><img src=\"2022-04-21-19-59-02-image.png\" alt=\"\"></p>\n<h1>6、验证nginx正常启动</h1>\n<p>执行命令：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">docker ps -a</code></pre>\n<p><img src=\"2022-04-21-20-12-55-image.png\" alt=\"\"></p>\n<p>然后在浏览器中输入IP，出现欢迎界面，安装完成</p>\n<p><img src=\"2022-04-24-15-34-45-image.png\" alt=\"\"></p>\n"},{"title":"docker-compose安装Redis","date":"2022-04-24T08:53:43.000Z","_content":"\n# 1、拉取镜像\n\n执行下面的命令拉取redis的docker镜像\n\n```shell\ndocker pull redis\n```\n\n![](2022-04-24-16-57-51-image.png)\n\n# 2、编写docker-compose.yml文件\n\n内容如下：\n\n```yaml\nversion: '3'\nservices:\n  redis:\n    restart: always\n    image: redis\n    container_name: redis\n    ports:\n      - 50020:6379\n    environment:\n      TZ: Asia/Shanghai\n    volumes:\n      - ./data:/data\n      - ./conf/redis.conf:/etc/redis.conf\n    privileged: true\n```\n\n# 3、创建目录文件\n\n根据docker-compose.yml文件创建对应目录文件\n\n```shell\npwd\nmkdir data\nmkdir conf\nll\n```\n\n![](2022-04-24-17-04-13-image.png)\n\n# 4、编写Redis的配置文件\n\n在conf目录下创建redis.conf文件，文件内容如下：\n\n```\n# Redis configuration file example.\n#\n# Note that in order to read the configuration file, Redis must be\n# started with the file path as first argument:\n#\n# ./redis-server /path/to/redis.conf\n\n# Note on units: when memory size is needed, it is possible to specify\n# it in the usual form of 1k 5GB 4M and so forth:\n#\n# 1k => 1000 bytes\n# 1kb => 1024 bytes\n# 1m => 1000000 bytes\n# 1mb => 1024*1024 bytes\n# 1g => 1000000000 bytes\n# 1gb => 1024*1024*1024 bytes\n#\n# units are case insensitive so 1GB 1Gb 1gB are all the same.\n\n################################## INCLUDES ###################################\n\n# Include one or more other config files here.  This is useful if you\n# have a standard template that goes to all Redis servers but also need\n# to customize a few per-server settings.  Include files can include\n# other files, so use this wisely.\n#\n# Note that option \"include\" won't be rewritten by command \"CONFIG REWRITE\"\n# from admin or Redis Sentinel. Since Redis always uses the last processed\n# line as value of a configuration directive, you'd better put includes\n# at the beginning of this file to avoid overwriting config change at runtime.\n#\n# If instead you are interested in using includes to override configuration\n# options, it is better to use include as the last line.\n#\n# include /path/to/local.conf\n# include /path/to/other.conf\n\n################################## MODULES #####################################\n\n# Load modules at startup. If the server is not able to load modules\n# it will abort. It is possible to use multiple loadmodule directives.\n#\n# loadmodule /path/to/my_module.so\n# loadmodule /path/to/other_module.so\n\n################################## NETWORK #####################################\n\n# By default, if no \"bind\" configuration directive is specified, Redis listens\n# for connections from all available network interfaces on the host machine.\n# It is possible to listen to just one or multiple selected interfaces using\n# the \"bind\" configuration directive, followed by one or more IP addresses.\n# Each address can be prefixed by \"-\", which means that redis will not fail to\n# start if the address is not available. Being not available only refers to\n# addresses that does not correspond to any network interfece. Addresses that\n# are already in use will always fail, and unsupported protocols will always BE\n# silently skipped.\n#\n# Examples:\n#\n# bind 192.168.1.100 10.0.0.1     # listens on two specific IPv4 addresses\n# bind 127.0.0.1 ::1              # listens on loopback IPv4 and IPv6\n# bind * -::*                     # like the default, all available interfaces\n#\n# ~~~ WARNING ~~~ If the computer running Redis is directly exposed to the\n# internet, binding to all the interfaces is dangerous and will expose the\n# instance to everybody on the internet. So by default we uncomment the\n# following bind directive, that will force Redis to listen only on the\n# IPv4 and IPv6 (if available) loopback interface addresses (this means Redis\n# will only be able to accept client connections from the same host that it is\n# running on).\n#\n# IF YOU ARE SURE YOU WANT YOUR INSTANCE TO LISTEN TO ALL THE INTERFACES\n# JUST COMMENT OUT THE FOLLOWING LINE.\n# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n# bind 127.0.0.1 -::1\n\n# Protected mode is a layer of security protection, in order to avoid that\n# Redis instances left open on the internet are accessed and exploited.\n#\n# When protected mode is on and if:\n#\n# 1) The server is not binding explicitly to a set of addresses using the\n#    \"bind\" directive.\n# 2) No password is configured.\n#\n# The server only accepts connections from clients connecting from the\n# IPv4 and IPv6 loopback addresses 127.0.0.1 and ::1, and from Unix domain\n# sockets.\n#\n# By default protected mode is enabled. You should disable it only if\n# you are sure you want clients from other hosts to connect to Redis\n# even if no authentication is configured, nor a specific set of interfaces\n# are explicitly listed using the \"bind\" directive.\nprotected-mode no\n\n# Accept connections on the specified port, default is 6379 (IANA #815344).\n# If port 0 is specified Redis will not listen on a TCP socket.\nport 6379\n\n# TCP listen() backlog.\n#\n# In high requests-per-second environments you need a high backlog in order\n# to avoid slow clients connection issues. Note that the Linux kernel\n# will silently truncate it to the value of /proc/sys/net/core/somaxconn so\n# make sure to raise both the value of somaxconn and tcp_max_syn_backlog\n# in order to get the desired effect.\ntcp-backlog 511\n\n# Unix socket.\n#\n# Specify the path for the Unix socket that will be used to listen for\n# incoming connections. There is no default, so Redis will not listen\n# on a unix socket when not specified.\n#\n# unixsocket /run/redis.sock\n# unixsocketperm 700\n\n# Close the connection after a client is idle for N seconds (0 to disable)\ntimeout 0\n\n# TCP keepalive.\n#\n# If non-zero, use SO_KEEPALIVE to send TCP ACKs to clients in absence\n# of communication. This is useful for two reasons:\n#\n# 1) Detect dead peers.\n# 2) Force network equipment in the middle to consider the connection to be\n#    alive.\n#\n# On Linux, the specified value (in seconds) is the period used to send ACKs.\n# Note that to close the connection the double of the time is needed.\n# On other kernels the period depends on the kernel configuration.\n#\n# A reasonable value for this option is 300 seconds, which is the new\n# Redis default starting with Redis 3.2.1.\ntcp-keepalive 300\n\n################################# TLS/SSL #####################################\n\n# By default, TLS/SSL is disabled. To enable it, the \"tls-port\" configuration\n# directive can be used to define TLS-listening ports. To enable TLS on the\n# default port, use:\n#\n# port 0\n# tls-port 6379\n\n# Configure a X.509 certificate and private key to use for authenticating the\n# server to connected clients, masters or cluster peers.  These files should be\n# PEM formatted.\n#\n# tls-cert-file redis.crt \n# tls-key-file redis.key\n#\n# If the key file is encrypted using a passphrase, it can be included here\n# as well.\n#\n# tls-key-file-pass secret\n\n# Normally Redis uses the same certificate for both server functions (accepting\n# connections) and client functions (replicating from a master, establishing\n# cluster bus connections, etc.).\n#\n# Sometimes certificates are issued with attributes that designate them as\n# client-only or server-only certificates. In that case it may be desired to use\n# different certificates for incoming (server) and outgoing (client)\n# connections. To do that, use the following directives:\n#\n# tls-client-cert-file client.crt\n# tls-client-key-file client.key\n#\n# If the key file is encrypted using a passphrase, it can be included here\n# as well.\n#\n# tls-client-key-file-pass secret\n\n# Configure a DH parameters file to enable Diffie-Hellman (DH) key exchange:\n#\n# tls-dh-params-file redis.dh\n\n# Configure a CA certificate(s) bundle or directory to authenticate TLS/SSL\n# clients and peers.  Redis requires an explicit configuration of at least one\n# of these, and will not implicitly use the system wide configuration.\n#\n# tls-ca-cert-file ca.crt\n# tls-ca-cert-dir /etc/ssl/certs\n\n# By default, clients (including replica servers) on a TLS port are required\n# to authenticate using valid client side certificates.\n#\n# If \"no\" is specified, client certificates are not required and not accepted.\n# If \"optional\" is specified, client certificates are accepted and must be\n# valid if provided, but are not required.\n#\n# tls-auth-clients no\n# tls-auth-clients optional\n\n# By default, a Redis replica does not attempt to establish a TLS connection\n# with its master.\n#\n# Use the following directive to enable TLS on replication links.\n#\n# tls-replication yes\n\n# By default, the Redis Cluster bus uses a plain TCP connection. To enable\n# TLS for the bus protocol, use the following directive:\n#\n# tls-cluster yes\n\n# By default, only TLSv1.2 and TLSv1.3 are enabled and it is highly recommended\n# that older formally deprecated versions are kept disabled to reduce the attack surface.\n# You can explicitly specify TLS versions to support.\n# Allowed values are case insensitive and include \"TLSv1\", \"TLSv1.1\", \"TLSv1.2\",\n# \"TLSv1.3\" (OpenSSL >= 1.1.1) or any combination.\n# To enable only TLSv1.2 and TLSv1.3, use:\n#\n# tls-protocols \"TLSv1.2 TLSv1.3\"\n\n# Configure allowed ciphers.  See the ciphers(1ssl) manpage for more information\n# about the syntax of this string.\n#\n# Note: this configuration applies only to <= TLSv1.2.\n#\n# tls-ciphers DEFAULT:!MEDIUM\n\n# Configure allowed TLSv1.3 ciphersuites.  See the ciphers(1ssl) manpage for more\n# information about the syntax of this string, and specifically for TLSv1.3\n# ciphersuites.\n#\n# tls-ciphersuites TLS_CHACHA20_POLY1305_SHA256\n\n# When choosing a cipher, use the server's preference instead of the client\n# preference. By default, the server follows the client's preference.\n#\n# tls-prefer-server-ciphers yes\n\n# By default, TLS session caching is enabled to allow faster and less expensive\n# reconnections by clients that support it. Use the following directive to disable\n# caching.\n#\n# tls-session-caching no\n\n# Change the default number of TLS sessions cached. A zero value sets the cache\n# to unlimited size. The default size is 20480.\n#\n# tls-session-cache-size 5000\n\n# Change the default timeout of cached TLS sessions. The default timeout is 300\n# seconds.\n#\n# tls-session-cache-timeout 60\n\n################################# GENERAL #####################################\n\n# By default Redis does not run as a daemon. Use 'yes' if you need it.\n# Note that Redis will write a pid file in /var/run/redis.pid when daemonized.\n# When Redis is supervised by upstart or systemd, this parameter has no impact.\ndaemonize no\n\n# If you run Redis from upstart or systemd, Redis can interact with your\n# supervision tree. Options:\n#   supervised no      - no supervision interaction\n#   supervised upstart - signal upstart by putting Redis into SIGSTOP mode\n#                        requires \"expect stop\" in your upstart job config\n#   supervised systemd - signal systemd by writing READY=1 to $NOTIFY_SOCKET\n#                        on startup, and updating Redis status on a regular\n#                        basis.\n#   supervised auto    - detect upstart or systemd method based on\n#                        UPSTART_JOB or NOTIFY_SOCKET environment variables\n# Note: these supervision methods only signal \"process is ready.\"\n#       They do not enable continuous pings back to your supervisor.\n#\n# The default is \"no\". To run under upstart/systemd, you can simply uncomment\n# the line below:\n#\n# supervised auto\n\n# If a pid file is specified, Redis writes it where specified at startup\n# and removes it at exit.\n#\n# When the server runs non daemonized, no pid file is created if none is\n# specified in the configuration. When the server is daemonized, the pid file\n# is used even if not specified, defaulting to \"/var/run/redis.pid\".\n#\n# Creating a pid file is best effort: if Redis is not able to create it\n# nothing bad happens, the server will start and run normally.\n#\n# Note that on modern Linux systems \"/run/redis.pid\" is more conforming\n# and should be used instead.\npidfile /var/run/redis_6379.pid\n\n# Specify the server verbosity level.\n# This can be one of:\n# debug (a lot of information, useful for development/testing)\n# verbose (many rarely useful info, but not a mess like the debug level)\n# notice (moderately verbose, what you want in production probably)\n# warning (only very important / critical messages are logged)\nloglevel notice\n\n# Specify the log file name. Also the empty string can be used to force\n# Redis to log on the standard output. Note that if you use standard\n# output for logging but daemonize, logs will be sent to /dev/null\nlogfile \"\"\n\n# To enable logging to the system logger, just set 'syslog-enabled' to yes,\n# and optionally update the other syslog parameters to suit your needs.\n# syslog-enabled no\n\n# Specify the syslog identity.\n# syslog-ident redis\n\n# Specify the syslog facility. Must be USER or between LOCAL0-LOCAL7.\n# syslog-facility local0\n\n# To disable the built in crash log, which will possibly produce cleaner core\n# dumps when they are needed, uncomment the following:\n#\n# crash-log-enabled no\n\n# To disable the fast memory check that's run as part of the crash log, which\n# will possibly let redis terminate sooner, uncomment the following:\n#\n# crash-memcheck-enabled no\n\n# Set the number of databases. The default database is DB 0, you can select\n# a different one on a per-connection basis using SELECT <dbid> where\n# dbid is a number between 0 and 'databases'-1\ndatabases 16\n\n# By default Redis shows an ASCII art logo only when started to log to the\n# standard output and if the standard output is a TTY and syslog logging is\n# disabled. Basically this means that normally a logo is displayed only in\n# interactive sessions.\n#\n# However it is possible to force the pre-4.0 behavior and always show a\n# ASCII art logo in startup logs by setting the following option to yes.\nalways-show-logo no\n\n# By default, Redis modifies the process title (as seen in 'top' and 'ps') to\n# provide some runtime information. It is possible to disable this and leave\n# the process name as executed by setting the following to no.\nset-proc-title yes\n\n# When changing the process title, Redis uses the following template to construct\n# the modified title.\n#\n# Template variables are specified in curly brackets. The following variables are\n# supported:\n#\n# {title}           Name of process as executed if parent, or type of child process.\n# {listen-addr}     Bind address or '*' followed by TCP or TLS port listening on, or\n#                   Unix socket if only that's available.\n# {server-mode}     Special mode, i.e. \"[sentinel]\" or \"[cluster]\".\n# {port}            TCP port listening on, or 0.\n# {tls-port}        TLS port listening on, or 0.\n# {unixsocket}      Unix domain socket listening on, or \"\".\n# {config-file}     Name of configuration file used.\n#\nproc-title-template \"{title} {listen-addr} {server-mode}\"\n\n################################ SNAPSHOTTING  ################################\n\n# Save the DB to disk.\n#\n# save <seconds> <changes>\n#\n# Redis will save the DB if both the given number of seconds and the given\n# number of write operations against the DB occurred.\n#\n# Snapshotting can be completely disabled with a single empty string argument\n# as in following example:\n#\n# save \"\"\n#\n# Unless specified otherwise, by default Redis will save the DB:\n#   * After 3600 seconds (an hour) if at least 1 key changed\n#   * After 300 seconds (5 minutes) if at least 100 keys changed\n#   * After 60 seconds if at least 10000 keys changed\n#\n# You can set these explicitly by uncommenting the three following lines.\n#\n# save 3600 1\n# save 300 100\n# save 60 10000\n\n# By default Redis will stop accepting writes if RDB snapshots are enabled\n# (at least one save point) and the latest background save failed.\n# This will make the user aware (in a hard way) that data is not persisting\n# on disk properly, otherwise chances are that no one will notice and some\n# disaster will happen.\n#\n# If the background saving process will start working again Redis will\n# automatically allow writes again.\n#\n# However if you have setup your proper monitoring of the Redis server\n# and persistence, you may want to disable this feature so that Redis will\n# continue to work as usual even if there are problems with disk,\n# permissions, and so forth.\nstop-writes-on-bgsave-error yes\n\n# Compress string objects using LZF when dump .rdb databases?\n# By default compression is enabled as it's almost always a win.\n# If you want to save some CPU in the saving child set it to 'no' but\n# the dataset will likely be bigger if you have compressible values or keys.\nrdbcompression yes\n\n# Since version 5 of RDB a CRC64 checksum is placed at the end of the file.\n# This makes the format more resistant to corruption but there is a performance\n# hit to pay (around 10%) when saving and loading RDB files, so you can disable it\n# for maximum performances.\n#\n# RDB files created with checksum disabled have a checksum of zero that will\n# tell the loading code to skip the check.\nrdbchecksum yes\n\n# Enables or disables full sanitation checks for ziplist and listpack etc when\n# loading an RDB or RESTORE payload. This reduces the chances of a assertion or\n# crash later on while processing commands.\n# Options:\n#   no         - Never perform full sanitation\n#   yes        - Always perform full sanitation\n#   clients    - Perform full sanitation only for user connections.\n#                Excludes: RDB files, RESTORE commands received from the master\n#                connection, and client connections which have the\n#                skip-sanitize-payload ACL flag.\n# The default should be 'clients' but since it currently affects cluster\n# resharding via MIGRATE, it is temporarily set to 'no' by default.\n#\n# sanitize-dump-payload no\n\n# The filename where to dump the DB\ndbfilename dump.rdb\n\n# Remove RDB files used by replication in instances without persistence\n# enabled. By default this option is disabled, however there are environments\n# where for regulations or other security concerns, RDB files persisted on\n# disk by masters in order to feed replicas, or stored on disk by replicas\n# in order to load them for the initial synchronization, should be deleted\n# ASAP. Note that this option ONLY WORKS in instances that have both AOF\n# and RDB persistence disabled, otherwise is completely ignored.\n#\n# An alternative (and sometimes better) way to obtain the same effect is\n# to use diskless replication on both master and replicas instances. However\n# in the case of replicas, diskless is not always an option.\nrdb-del-sync-files no\n\n# The working directory.\n#\n# The DB will be written inside this directory, with the filename specified\n# above using the 'dbfilename' configuration directive.\n#\n# The Append Only File will also be created inside this directory.\n#\n# Note that you must specify a directory here, not a file name.\ndir ./\n\n################################# REPLICATION #################################\n\n# Master-Replica replication. Use replicaof to make a Redis instance a copy of\n# another Redis server. A few things to understand ASAP about Redis replication.\n#\n#   +------------------+      +---------------+\n#   |      Master      | ---> |    Replica    |\n#   | (receive writes) |      |  (exact copy) |\n#   +------------------+      +---------------+\n#\n# 1) Redis replication is asynchronous, but you can configure a master to\n#    stop accepting writes if it appears to be not connected with at least\n#    a given number of replicas.\n# 2) Redis replicas are able to perform a partial resynchronization with the\n#    master if the replication link is lost for a relatively small amount of\n#    time. You may want to configure the replication backlog size (see the next\n#    sections of this file) with a sensible value depending on your needs.\n# 3) Replication is automatic and does not need user intervention. After a\n#    network partition replicas automatically try to reconnect to masters\n#    and resynchronize with them.\n#\n# replicaof <masterip> <masterport>\n\n# If the master is password protected (using the \"requirepass\" configuration\n# directive below) it is possible to tell the replica to authenticate before\n# starting the replication synchronization process, otherwise the master will\n# refuse the replica request.\n#\n# masterauth <master-password>\n#\n# However this is not enough if you are using Redis ACLs (for Redis version\n# 6 or greater), and the default user is not capable of running the PSYNC\n# command and/or other commands needed for replication. In this case it's\n# better to configure a special user to use with replication, and specify the\n# masteruser configuration as such:\n#\n# masteruser <username>\n#\n# When masteruser is specified, the replica will authenticate against its\n# master using the new AUTH form: AUTH <username> <password>.\n\n# When a replica loses its connection with the master, or when the replication\n# is still in progress, the replica can act in two different ways:\n#\n# 1) if replica-serve-stale-data is set to 'yes' (the default) the replica will\n#    still reply to client requests, possibly with out of date data, or the\n#    data set may just be empty if this is the first synchronization.\n#\n# 2) If replica-serve-stale-data is set to 'no' the replica will reply with\n#    an error \"SYNC with master in progress\" to all commands except:\n#    INFO, REPLICAOF, AUTH, PING, SHUTDOWN, REPLCONF, ROLE, CONFIG, SUBSCRIBE,\n#    UNSUBSCRIBE, PSUBSCRIBE, PUNSUBSCRIBE, PUBLISH, PUBSUB, COMMAND, POST,\n#    HOST and LATENCY.\n#\nreplica-serve-stale-data yes\n\n# You can configure a replica instance to accept writes or not. Writing against\n# a replica instance may be useful to store some ephemeral data (because data\n# written on a replica will be easily deleted after resync with the master) but\n# may also cause problems if clients are writing to it because of a\n# misconfiguration.\n#\n# Since Redis 2.6 by default replicas are read-only.\n#\n# Note: read only replicas are not designed to be exposed to untrusted clients\n# on the internet. It's just a protection layer against misuse of the instance.\n# Still a read only replica exports by default all the administrative commands\n# such as CONFIG, DEBUG, and so forth. To a limited extent you can improve\n# security of read only replicas using 'rename-command' to shadow all the\n# administrative / dangerous commands.\nreplica-read-only yes\n\n# Replication SYNC strategy: disk or socket.\n#\n# New replicas and reconnecting replicas that are not able to continue the\n# replication process just receiving differences, need to do what is called a\n# \"full synchronization\". An RDB file is transmitted from the master to the\n# replicas.\n#\n# The transmission can happen in two different ways:\n#\n# 1) Disk-backed: The Redis master creates a new process that writes the RDB\n#                 file on disk. Later the file is transferred by the parent\n#                 process to the replicas incrementally.\n# 2) Diskless: The Redis master creates a new process that directly writes the\n#              RDB file to replica sockets, without touching the disk at all.\n#\n# With disk-backed replication, while the RDB file is generated, more replicas\n# can be queued and served with the RDB file as soon as the current child\n# producing the RDB file finishes its work. With diskless replication instead\n# once the transfer starts, new replicas arriving will be queued and a new\n# transfer will start when the current one terminates.\n#\n# When diskless replication is used, the master waits a configurable amount of\n# time (in seconds) before starting the transfer in the hope that multiple\n# replicas will arrive and the transfer can be parallelized.\n#\n# With slow disks and fast (large bandwidth) networks, diskless replication\n# works better.\nrepl-diskless-sync no\n\n# When diskless replication is enabled, it is possible to configure the delay\n# the server waits in order to spawn the child that transfers the RDB via socket\n# to the replicas.\n#\n# This is important since once the transfer starts, it is not possible to serve\n# new replicas arriving, that will be queued for the next RDB transfer, so the\n# server waits a delay in order to let more replicas arrive.\n#\n# The delay is specified in seconds, and by default is 5 seconds. To disable\n# it entirely just set it to 0 seconds and the transfer will start ASAP.\nrepl-diskless-sync-delay 5\n\n# -----------------------------------------------------------------------------\n# WARNING: RDB diskless load is experimental. Since in this setup the replica\n# does not immediately store an RDB on disk, it may cause data loss during\n# failovers. RDB diskless load + Redis modules not handling I/O reads may also\n# cause Redis to abort in case of I/O errors during the initial synchronization\n# stage with the master. Use only if you know what you are doing.\n# -----------------------------------------------------------------------------\n#\n# Replica can load the RDB it reads from the replication link directly from the\n# socket, or store the RDB to a file and read that file after it was completely\n# received from the master.\n#\n# In many cases the disk is slower than the network, and storing and loading\n# the RDB file may increase replication time (and even increase the master's\n# Copy on Write memory and salve buffers).\n# However, parsing the RDB file directly from the socket may mean that we have\n# to flush the contents of the current database before the full rdb was\n# received. For this reason we have the following options:\n#\n# \"disabled\"    - Don't use diskless load (store the rdb file to the disk first)\n# \"on-empty-db\" - Use diskless load only when it is completely safe.\n# \"swapdb\"      - Keep a copy of the current db contents in RAM while parsing\n#                 the data directly from the socket. note that this requires\n#                 sufficient memory, if you don't have it, you risk an OOM kill.\nrepl-diskless-load disabled\n\n# Replicas send PINGs to server in a predefined interval. It's possible to\n# change this interval with the repl_ping_replica_period option. The default\n# value is 10 seconds.\n#\n# repl-ping-replica-period 10\n\n# The following option sets the replication timeout for:\n#\n# 1) Bulk transfer I/O during SYNC, from the point of view of replica.\n# 2) Master timeout from the point of view of replicas (data, pings).\n# 3) Replica timeout from the point of view of masters (REPLCONF ACK pings).\n#\n# It is important to make sure that this value is greater than the value\n# specified for repl-ping-replica-period otherwise a timeout will be detected\n# every time there is low traffic between the master and the replica. The default\n# value is 60 seconds.\n#\n# repl-timeout 60\n\n# Disable TCP_NODELAY on the replica socket after SYNC?\n#\n# If you select \"yes\" Redis will use a smaller number of TCP packets and\n# less bandwidth to send data to replicas. But this can add a delay for\n# the data to appear on the replica side, up to 40 milliseconds with\n# Linux kernels using a default configuration.\n#\n# If you select \"no\" the delay for data to appear on the replica side will\n# be reduced but more bandwidth will be used for replication.\n#\n# By default we optimize for low latency, but in very high traffic conditions\n# or when the master and replicas are many hops away, turning this to \"yes\" may\n# be a good idea.\nrepl-disable-tcp-nodelay no\n\n# Set the replication backlog size. The backlog is a buffer that accumulates\n# replica data when replicas are disconnected for some time, so that when a\n# replica wants to reconnect again, often a full resync is not needed, but a\n# partial resync is enough, just passing the portion of data the replica\n# missed while disconnected.\n#\n# The bigger the replication backlog, the longer the replica can endure the\n# disconnect and later be able to perform a partial resynchronization.\n#\n# The backlog is only allocated if there is at least one replica connected.\n#\n# repl-backlog-size 1mb\n\n# After a master has no connected replicas for some time, the backlog will be\n# freed. The following option configures the amount of seconds that need to\n# elapse, starting from the time the last replica disconnected, for the backlog\n# buffer to be freed.\n#\n# Note that replicas never free the backlog for timeout, since they may be\n# promoted to masters later, and should be able to correctly \"partially\n# resynchronize\" with other replicas: hence they should always accumulate backlog.\n#\n# A value of 0 means to never release the backlog.\n#\n# repl-backlog-ttl 3600\n\n# The replica priority is an integer number published by Redis in the INFO\n# output. It is used by Redis Sentinel in order to select a replica to promote\n# into a master if the master is no longer working correctly.\n#\n# A replica with a low priority number is considered better for promotion, so\n# for instance if there are three replicas with priority 10, 100, 25 Sentinel\n# will pick the one with priority 10, that is the lowest.\n#\n# However a special priority of 0 marks the replica as not able to perform the\n# role of master, so a replica with priority of 0 will never be selected by\n# Redis Sentinel for promotion.\n#\n# By default the priority is 100.\nreplica-priority 100\n\n# -----------------------------------------------------------------------------\n# By default, Redis Sentinel includes all replicas in its reports. A replica\n# can be excluded from Redis Sentinel's announcements. An unannounced replica\n# will be ignored by the 'sentinel replicas <master>' command and won't be\n# exposed to Redis Sentinel's clients.\n#\n# This option does not change the behavior of replica-priority. Even with\n# replica-announced set to 'no', the replica can be promoted to master. To\n# prevent this behavior, set replica-priority to 0.\n#\n# replica-announced yes\n\n# It is possible for a master to stop accepting writes if there are less than\n# N replicas connected, having a lag less or equal than M seconds.\n#\n# The N replicas need to be in \"online\" state.\n#\n# The lag in seconds, that must be <= the specified value, is calculated from\n# the last ping received from the replica, that is usually sent every second.\n#\n# This option does not GUARANTEE that N replicas will accept the write, but\n# will limit the window of exposure for lost writes in case not enough replicas\n# are available, to the specified number of seconds.\n#\n# For example to require at least 3 replicas with a lag <= 10 seconds use:\n#\n# min-replicas-to-write 3\n# min-replicas-max-lag 10\n#\n# Setting one or the other to 0 disables the feature.\n#\n# By default min-replicas-to-write is set to 0 (feature disabled) and\n# min-replicas-max-lag is set to 10.\n\n# A Redis master is able to list the address and port of the attached\n# replicas in different ways. For example the \"INFO replication\" section\n# offers this information, which is used, among other tools, by\n# Redis Sentinel in order to discover replica instances.\n# Another place where this info is available is in the output of the\n# \"ROLE\" command of a master.\n#\n# The listed IP address and port normally reported by a replica is\n# obtained in the following way:\n#\n#   IP: The address is auto detected by checking the peer address\n#   of the socket used by the replica to connect with the master.\n#\n#   Port: The port is communicated by the replica during the replication\n#   handshake, and is normally the port that the replica is using to\n#   listen for connections.\n#\n# However when port forwarding or Network Address Translation (NAT) is\n# used, the replica may actually be reachable via different IP and port\n# pairs. The following two options can be used by a replica in order to\n# report to its master a specific set of IP and port, so that both INFO\n# and ROLE will report those values.\n#\n# There is no need to use both the options if you need to override just\n# the port or the IP address.\n#\n# replica-announce-ip 5.5.5.5\n# replica-announce-port 1234\n\n############################### KEYS TRACKING #################################\n\n# Redis implements server assisted support for client side caching of values.\n# This is implemented using an invalidation table that remembers, using\n# a radix key indexed by key name, what clients have which keys. In turn\n# this is used in order to send invalidation messages to clients. Please\n# check this page to understand more about the feature:\n#\n#   https://redis.io/topics/client-side-caching\n#\n# When tracking is enabled for a client, all the read only queries are assumed\n# to be cached: this will force Redis to store information in the invalidation\n# table. When keys are modified, such information is flushed away, and\n# invalidation messages are sent to the clients. However if the workload is\n# heavily dominated by reads, Redis could use more and more memory in order\n# to track the keys fetched by many clients.\n#\n# For this reason it is possible to configure a maximum fill value for the\n# invalidation table. By default it is set to 1M of keys, and once this limit\n# is reached, Redis will start to evict keys in the invalidation table\n# even if they were not modified, just to reclaim memory: this will in turn\n# force the clients to invalidate the cached values. Basically the table\n# maximum size is a trade off between the memory you want to spend server\n# side to track information about who cached what, and the ability of clients\n# to retain cached objects in memory.\n#\n# If you set the value to 0, it means there are no limits, and Redis will\n# retain as many keys as needed in the invalidation table.\n# In the \"stats\" INFO section, you can find information about the number of\n# keys in the invalidation table at every given moment.\n#\n# Note: when key tracking is used in broadcasting mode, no memory is used\n# in the server side so this setting is useless.\n#\n# tracking-table-max-keys 1000000\n\n################################## SECURITY ###################################\n\n# Warning: since Redis is pretty fast, an outside user can try up to\n# 1 million passwords per second against a modern box. This means that you\n# should use very strong passwords, otherwise they will be very easy to break.\n# Note that because the password is really a shared secret between the client\n# and the server, and should not be memorized by any human, the password\n# can be easily a long string from /dev/urandom or whatever, so by using a\n# long and unguessable password no brute force attack will be possible.\n\n# Redis ACL users are defined in the following format:\n#\n#   user <username> ... acl rules ...\n#\n# For example:\n#\n#   user worker +@list +@connection ~jobs:* on >ffa9203c493aa99\n#\n# The special username \"default\" is used for new connections. If this user\n# has the \"nopass\" rule, then new connections will be immediately authenticated\n# as the \"default\" user without the need of any password provided via the\n# AUTH command. Otherwise if the \"default\" user is not flagged with \"nopass\"\n# the connections will start in not authenticated state, and will require\n# AUTH (or the HELLO command AUTH option) in order to be authenticated and\n# start to work.\n#\n# The ACL rules that describe what a user can do are the following:\n#\n#  on           Enable the user: it is possible to authenticate as this user.\n#  off          Disable the user: it's no longer possible to authenticate\n#               with this user, however the already authenticated connections\n#               will still work.\n#  skip-sanitize-payload    RESTORE dump-payload sanitation is skipped.\n#  sanitize-payload         RESTORE dump-payload is sanitized (default).\n#  +<command>   Allow the execution of that command\n#  -<command>   Disallow the execution of that command\n#  +@<category> Allow the execution of all the commands in such category\n#               with valid categories are like @admin, @set, @sortedset, ...\n#               and so forth, see the full list in the server.c file where\n#               the Redis command table is described and defined.\n#               The special category @all means all the commands, but currently\n#               present in the server, and that will be loaded in the future\n#               via modules.\n#  +<command>|subcommand    Allow a specific subcommand of an otherwise\n#                           disabled command. Note that this form is not\n#                           allowed as negative like -DEBUG|SEGFAULT, but\n#                           only additive starting with \"+\".\n#  allcommands  Alias for +@all. Note that it implies the ability to execute\n#               all the future commands loaded via the modules system.\n#  nocommands   Alias for -@all.\n#  ~<pattern>   Add a pattern of keys that can be mentioned as part of\n#               commands. For instance ~* allows all the keys. The pattern\n#               is a glob-style pattern like the one of KEYS.\n#               It is possible to specify multiple patterns.\n#  allkeys      Alias for ~*\n#  resetkeys    Flush the list of allowed keys patterns.\n#  &<pattern>   Add a glob-style pattern of Pub/Sub channels that can be\n#               accessed by the user. It is possible to specify multiple channel\n#               patterns.\n#  allchannels  Alias for &*\n#  resetchannels            Flush the list of allowed channel patterns.\n#  ><password>  Add this password to the list of valid password for the user.\n#               For example >mypass will add \"mypass\" to the list.\n#               This directive clears the \"nopass\" flag (see later).\n#  <<password>  Remove this password from the list of valid passwords.\n#  nopass       All the set passwords of the user are removed, and the user\n#               is flagged as requiring no password: it means that every\n#               password will work against this user. If this directive is\n#               used for the default user, every new connection will be\n#               immediately authenticated with the default user without\n#               any explicit AUTH command required. Note that the \"resetpass\"\n#               directive will clear this condition.\n#  resetpass    Flush the list of allowed passwords. Moreover removes the\n#               \"nopass\" status. After \"resetpass\" the user has no associated\n#               passwords and there is no way to authenticate without adding\n#               some password (or setting it as \"nopass\" later).\n#  reset        Performs the following actions: resetpass, resetkeys, off,\n#               -@all. The user returns to the same state it has immediately\n#               after its creation.\n#\n# ACL rules can be specified in any order: for instance you can start with\n# passwords, then flags, or key patterns. However note that the additive\n# and subtractive rules will CHANGE MEANING depending on the ordering.\n# For instance see the following example:\n#\n#   user alice on +@all -DEBUG ~* >somepassword\n#\n# This will allow \"alice\" to use all the commands with the exception of the\n# DEBUG command, since +@all added all the commands to the set of the commands\n# alice can use, and later DEBUG was removed. However if we invert the order\n# of two ACL rules the result will be different:\n#\n#   user alice on -DEBUG +@all ~* >somepassword\n#\n# Now DEBUG was removed when alice had yet no commands in the set of allowed\n# commands, later all the commands are added, so the user will be able to\n# execute everything.\n#\n# Basically ACL rules are processed left-to-right.\n#\n# For more information about ACL configuration please refer to\n# the Redis web site at https://redis.io/topics/acl\n\n# ACL LOG\n#\n# The ACL Log tracks failed commands and authentication events associated\n# with ACLs. The ACL Log is useful to troubleshoot failed commands blocked \n# by ACLs. The ACL Log is stored in memory. You can reclaim memory with \n# ACL LOG RESET. Define the maximum entry length of the ACL Log below.\nacllog-max-len 128\n\n# Using an external ACL file\n#\n# Instead of configuring users here in this file, it is possible to use\n# a stand-alone file just listing users. The two methods cannot be mixed:\n# if you configure users here and at the same time you activate the external\n# ACL file, the server will refuse to start.\n#\n# The format of the external ACL user file is exactly the same as the\n# format that is used inside redis.conf to describe users.\n#\n# aclfile /etc/redis/users.acl\n\n# IMPORTANT NOTE: starting with Redis 6 \"requirepass\" is just a compatibility\n# layer on top of the new ACL system. The option effect will be just setting\n# the password for the default user. Clients will still authenticate using\n# AUTH <password> as usually, or more explicitly with AUTH default <password>\n# if they follow the new protocol: both will work.\n#\n# The requirepass is not compatable with aclfile option and the ACL LOAD\n# command, these will cause requirepass to be ignored.\n#\nrequirepass huangge1199\n\n# New users are initialized with restrictive permissions by default, via the\n# equivalent of this ACL rule 'off resetkeys -@all'. Starting with Redis 6.2, it\n# is possible to manage access to Pub/Sub channels with ACL rules as well. The\n# default Pub/Sub channels permission if new users is controlled by the \n# acl-pubsub-default configuration directive, which accepts one of these values:\n#\n# allchannels: grants access to all Pub/Sub channels\n# resetchannels: revokes access to all Pub/Sub channels\n#\n# To ensure backward compatibility while upgrading Redis 6.0, acl-pubsub-default\n# defaults to the 'allchannels' permission.\n#\n# Future compatibility note: it is very likely that in a future version of Redis\n# the directive's default of 'allchannels' will be changed to 'resetchannels' in\n# order to provide better out-of-the-box Pub/Sub security. Therefore, it is\n# recommended that you explicitly define Pub/Sub permissions for all users\n# rather then rely on implicit default values. Once you've set explicit\n# Pub/Sub for all existing users, you should uncomment the following line.\n#\n# acl-pubsub-default resetchannels\n\n# Command renaming (DEPRECATED).\n#\n# ------------------------------------------------------------------------\n# WARNING: avoid using this option if possible. Instead use ACLs to remove\n# commands from the default user, and put them only in some admin user you\n# create for administrative purposes.\n# ------------------------------------------------------------------------\n#\n# It is possible to change the name of dangerous commands in a shared\n# environment. For instance the CONFIG command may be renamed into something\n# hard to guess so that it will still be available for internal-use tools\n# but not available for general clients.\n#\n# Example:\n#\n# rename-command CONFIG b840fc02d524045429941cc15f59e41cb7be6c52\n#\n# It is also possible to completely kill a command by renaming it into\n# an empty string:\n#\n# rename-command CONFIG \"\"\n#\n# Please note that changing the name of commands that are logged into the\n# AOF file or transmitted to replicas may cause problems.\n\n################################### CLIENTS ####################################\n\n# Set the max number of connected clients at the same time. By default\n# this limit is set to 10000 clients, however if the Redis server is not\n# able to configure the process file limit to allow for the specified limit\n# the max number of allowed clients is set to the current file limit\n# minus 32 (as Redis reserves a few file descriptors for internal uses).\n#\n# Once the limit is reached Redis will close all the new connections sending\n# an error 'max number of clients reached'.\n#\n# IMPORTANT: When Redis Cluster is used, the max number of connections is also\n# shared with the cluster bus: every node in the cluster will use two\n# connections, one incoming and another outgoing. It is important to size the\n# limit accordingly in case of very large clusters.\n#\n# maxclients 10000\n\n############################## MEMORY MANAGEMENT ################################\n\n# Set a memory usage limit to the specified amount of bytes.\n# When the memory limit is reached Redis will try to remove keys\n# according to the eviction policy selected (see maxmemory-policy).\n#\n# If Redis can't remove keys according to the policy, or if the policy is\n# set to 'noeviction', Redis will start to reply with errors to commands\n# that would use more memory, like SET, LPUSH, and so on, and will continue\n# to reply to read-only commands like GET.\n#\n# This option is usually useful when using Redis as an LRU or LFU cache, or to\n# set a hard memory limit for an instance (using the 'noeviction' policy).\n#\n# WARNING: If you have replicas attached to an instance with maxmemory on,\n# the size of the output buffers needed to feed the replicas are subtracted\n# from the used memory count, so that network problems / resyncs will\n# not trigger a loop where keys are evicted, and in turn the output\n# buffer of replicas is full with DELs of keys evicted triggering the deletion\n# of more keys, and so forth until the database is completely emptied.\n#\n# In short... if you have replicas attached it is suggested that you set a lower\n# limit for maxmemory so that there is some free RAM on the system for replica\n# output buffers (but this is not needed if the policy is 'noeviction').\n#\n# maxmemory <bytes>\n\n# MAXMEMORY POLICY: how Redis will select what to remove when maxmemory\n# is reached. You can select one from the following behaviors:\n#\n# volatile-lru -> Evict using approximated LRU, only keys with an expire set.\n# allkeys-lru -> Evict any key using approximated LRU.\n# volatile-lfu -> Evict using approximated LFU, only keys with an expire set.\n# allkeys-lfu -> Evict any key using approximated LFU.\n# volatile-random -> Remove a random key having an expire set.\n# allkeys-random -> Remove a random key, any key.\n# volatile-ttl -> Remove the key with the nearest expire time (minor TTL)\n# noeviction -> Don't evict anything, just return an error on write operations.\n#\n# LRU means Least Recently Used\n# LFU means Least Frequently Used\n#\n# Both LRU, LFU and volatile-ttl are implemented using approximated\n# randomized algorithms.\n#\n# Note: with any of the above policies, when there are no suitable keys for\n# eviction, Redis will return an error on write operations that require\n# more memory. These are usually commands that create new keys, add data or\n# modify existing keys. A few examples are: SET, INCR, HSET, LPUSH, SUNIONSTORE,\n# SORT (due to the STORE argument), and EXEC (if the transaction includes any\n# command that requires memory).\n#\n# The default is:\n#\n# maxmemory-policy noeviction\n\n# LRU, LFU and minimal TTL algorithms are not precise algorithms but approximated\n# algorithms (in order to save memory), so you can tune it for speed or\n# accuracy. By default Redis will check five keys and pick the one that was\n# used least recently, you can change the sample size using the following\n# configuration directive.\n#\n# The default of 5 produces good enough results. 10 Approximates very closely\n# true LRU but costs more CPU. 3 is faster but not very accurate.\n#\n# maxmemory-samples 5\n\n# Eviction processing is designed to function well with the default setting.\n# If there is an unusually large amount of write traffic, this value may need to\n# be increased.  Decreasing this value may reduce latency at the risk of \n# eviction processing effectiveness\n#   0 = minimum latency, 10 = default, 100 = process without regard to latency\n#\n# maxmemory-eviction-tenacity 10\n\n# Starting from Redis 5, by default a replica will ignore its maxmemory setting\n# (unless it is promoted to master after a failover or manually). It means\n# that the eviction of keys will be just handled by the master, sending the\n# DEL commands to the replica as keys evict in the master side.\n#\n# This behavior ensures that masters and replicas stay consistent, and is usually\n# what you want, however if your replica is writable, or you want the replica\n# to have a different memory setting, and you are sure all the writes performed\n# to the replica are idempotent, then you may change this default (but be sure\n# to understand what you are doing).\n#\n# Note that since the replica by default does not evict, it may end using more\n# memory than the one set via maxmemory (there are certain buffers that may\n# be larger on the replica, or data structures may sometimes take more memory\n# and so forth). So make sure you monitor your replicas and make sure they\n# have enough memory to never hit a real out-of-memory condition before the\n# master hits the configured maxmemory setting.\n#\n# replica-ignore-maxmemory yes\n\n# Redis reclaims expired keys in two ways: upon access when those keys are\n# found to be expired, and also in background, in what is called the\n# \"active expire key\". The key space is slowly and interactively scanned\n# looking for expired keys to reclaim, so that it is possible to free memory\n# of keys that are expired and will never be accessed again in a short time.\n#\n# The default effort of the expire cycle will try to avoid having more than\n# ten percent of expired keys still in memory, and will try to avoid consuming\n# more than 25% of total memory and to add latency to the system. However\n# it is possible to increase the expire \"effort\" that is normally set to\n# \"1\", to a greater value, up to the value \"10\". At its maximum value the\n# system will use more CPU, longer cycles (and technically may introduce\n# more latency), and will tolerate less already expired keys still present\n# in the system. It's a tradeoff between memory, CPU and latency.\n#\n# active-expire-effort 1\n\n############################# LAZY FREEING ####################################\n\n# Redis has two primitives to delete keys. One is called DEL and is a blocking\n# deletion of the object. It means that the server stops processing new commands\n# in order to reclaim all the memory associated with an object in a synchronous\n# way. If the key deleted is associated with a small object, the time needed\n# in order to execute the DEL command is very small and comparable to most other\n# O(1) or O(log_N) commands in Redis. However if the key is associated with an\n# aggregated value containing millions of elements, the server can block for\n# a long time (even seconds) in order to complete the operation.\n#\n# For the above reasons Redis also offers non blocking deletion primitives\n# such as UNLINK (non blocking DEL) and the ASYNC option of FLUSHALL and\n# FLUSHDB commands, in order to reclaim memory in background. Those commands\n# are executed in constant time. Another thread will incrementally free the\n# object in the background as fast as possible.\n#\n# DEL, UNLINK and ASYNC option of FLUSHALL and FLUSHDB are user-controlled.\n# It's up to the design of the application to understand when it is a good\n# idea to use one or the other. However the Redis server sometimes has to\n# delete keys or flush the whole database as a side effect of other operations.\n# Specifically Redis deletes objects independently of a user call in the\n# following scenarios:\n#\n# 1) On eviction, because of the maxmemory and maxmemory policy configurations,\n#    in order to make room for new data, without going over the specified\n#    memory limit.\n# 2) Because of expire: when a key with an associated time to live (see the\n#    EXPIRE command) must be deleted from memory.\n# 3) Because of a side effect of a command that stores data on a key that may\n#    already exist. For example the RENAME command may delete the old key\n#    content when it is replaced with another one. Similarly SUNIONSTORE\n#    or SORT with STORE option may delete existing keys. The SET command\n#    itself removes any old content of the specified key in order to replace\n#    it with the specified string.\n# 4) During replication, when a replica performs a full resynchronization with\n#    its master, the content of the whole database is removed in order to\n#    load the RDB file just transferred.\n#\n# In all the above cases the default is to delete objects in a blocking way,\n# like if DEL was called. However you can configure each case specifically\n# in order to instead release memory in a non-blocking way like if UNLINK\n# was called, using the following configuration directives.\n\nlazyfree-lazy-eviction no\nlazyfree-lazy-expire no\nlazyfree-lazy-server-del no\nreplica-lazy-flush no\n\n# It is also possible, for the case when to replace the user code DEL calls\n# with UNLINK calls is not easy, to modify the default behavior of the DEL\n# command to act exactly like UNLINK, using the following configuration\n# directive:\n\nlazyfree-lazy-user-del no\n\n# FLUSHDB, FLUSHALL, and SCRIPT FLUSH support both asynchronous and synchronous\n# deletion, which can be controlled by passing the [SYNC|ASYNC] flags into the\n# commands. When neither flag is passed, this directive will be used to determine\n# if the data should be deleted asynchronously.\n\nlazyfree-lazy-user-flush no\n\n################################ THREADED I/O #################################\n\n# Redis is mostly single threaded, however there are certain threaded\n# operations such as UNLINK, slow I/O accesses and other things that are\n# performed on side threads.\n#\n# Now it is also possible to handle Redis clients socket reads and writes\n# in different I/O threads. Since especially writing is so slow, normally\n# Redis users use pipelining in order to speed up the Redis performances per\n# core, and spawn multiple instances in order to scale more. Using I/O\n# threads it is possible to easily speedup two times Redis without resorting\n# to pipelining nor sharding of the instance.\n#\n# By default threading is disabled, we suggest enabling it only in machines\n# that have at least 4 or more cores, leaving at least one spare core.\n# Using more than 8 threads is unlikely to help much. We also recommend using\n# threaded I/O only if you actually have performance problems, with Redis\n# instances being able to use a quite big percentage of CPU time, otherwise\n# there is no point in using this feature.\n#\n# So for instance if you have a four cores boxes, try to use 2 or 3 I/O\n# threads, if you have a 8 cores, try to use 6 threads. In order to\n# enable I/O threads use the following configuration directive:\n#\n# io-threads 4\n#\n# Setting io-threads to 1 will just use the main thread as usual.\n# When I/O threads are enabled, we only use threads for writes, that is\n# to thread the write(2) syscall and transfer the client buffers to the\n# socket. However it is also possible to enable threading of reads and\n# protocol parsing using the following configuration directive, by setting\n# it to yes:\n#\n# io-threads-do-reads no\n#\n# Usually threading reads doesn't help much.\n#\n# NOTE 1: This configuration directive cannot be changed at runtime via\n# CONFIG SET. Aso this feature currently does not work when SSL is\n# enabled.\n#\n# NOTE 2: If you want to test the Redis speedup using redis-benchmark, make\n# sure you also run the benchmark itself in threaded mode, using the\n# --threads option to match the number of Redis threads, otherwise you'll not\n# be able to notice the improvements.\n\n############################ KERNEL OOM CONTROL ##############################\n\n# On Linux, it is possible to hint the kernel OOM killer on what processes\n# should be killed first when out of memory.\n#\n# Enabling this feature makes Redis actively control the oom_score_adj value\n# for all its processes, depending on their role. The default scores will\n# attempt to have background child processes killed before all others, and\n# replicas killed before masters.\n#\n# Redis supports three options:\n#\n# no:       Don't make changes to oom-score-adj (default).\n# yes:      Alias to \"relative\" see below.\n# absolute: Values in oom-score-adj-values are written as is to the kernel.\n# relative: Values are used relative to the initial value of oom_score_adj when\n#           the server starts and are then clamped to a range of -1000 to 1000.\n#           Because typically the initial value is 0, they will often match the\n#           absolute values.\noom-score-adj no\n\n# When oom-score-adj is used, this directive controls the specific values used\n# for master, replica and background child processes. Values range -2000 to\n# 2000 (higher means more likely to be killed).\n#\n# Unprivileged processes (not root, and without CAP_SYS_RESOURCE capabilities)\n# can freely increase their value, but not decrease it below its initial\n# settings. This means that setting oom-score-adj to \"relative\" and setting the\n# oom-score-adj-values to positive values will always succeed.\noom-score-adj-values 0 200 800\n\n\n#################### KERNEL transparent hugepage CONTROL ######################\n\n# Usually the kernel Transparent Huge Pages control is set to \"madvise\" or\n# or \"never\" by default (/sys/kernel/mm/transparent_hugepage/enabled), in which\n# case this config has no effect. On systems in which it is set to \"always\",\n# redis will attempt to disable it specifically for the redis process in order\n# to avoid latency problems specifically with fork(2) and CoW.\n# If for some reason you prefer to keep it enabled, you can set this config to\n# \"no\" and the kernel global to \"always\".\n\ndisable-thp yes\n\n############################## APPEND ONLY MODE ###############################\n\n# By default Redis asynchronously dumps the dataset on disk. This mode is\n# good enough in many applications, but an issue with the Redis process or\n# a power outage may result into a few minutes of writes lost (depending on\n# the configured save points).\n#\n# The Append Only File is an alternative persistence mode that provides\n# much better durability. For instance using the default data fsync policy\n# (see later in the config file) Redis can lose just one second of writes in a\n# dramatic event like a server power outage, or a single write if something\n# wrong with the Redis process itself happens, but the operating system is\n# still running correctly.\n#\n# AOF and RDB persistence can be enabled at the same time without problems.\n# If the AOF is enabled on startup Redis will load the AOF, that is the file\n# with the better durability guarantees.\n#\n# Please check https://redis.io/topics/persistence for more information.\n\nappendonly no\n\n# The name of the append only file (default: \"appendonly.aof\")\n\nappendfilename \"appendonly.aof\"\n\n# The fsync() call tells the Operating System to actually write data on disk\n# instead of waiting for more data in the output buffer. Some OS will really flush\n# data on disk, some other OS will just try to do it ASAP.\n#\n# Redis supports three different modes:\n#\n# no: don't fsync, just let the OS flush the data when it wants. Faster.\n# always: fsync after every write to the append only log. Slow, Safest.\n# everysec: fsync only one time every second. Compromise.\n#\n# The default is \"everysec\", as that's usually the right compromise between\n# speed and data safety. It's up to you to understand if you can relax this to\n# \"no\" that will let the operating system flush the output buffer when\n# it wants, for better performances (but if you can live with the idea of\n# some data loss consider the default persistence mode that's snapshotting),\n# or on the contrary, use \"always\" that's very slow but a bit safer than\n# everysec.\n#\n# More details please check the following article:\n# http://antirez.com/post/redis-persistence-demystified.html\n#\n# If unsure, use \"everysec\".\n\n# appendfsync always\nappendfsync everysec\n# appendfsync no\n\n# When the AOF fsync policy is set to always or everysec, and a background\n# saving process (a background save or AOF log background rewriting) is\n# performing a lot of I/O against the disk, in some Linux configurations\n# Redis may block too long on the fsync() call. Note that there is no fix for\n# this currently, as even performing fsync in a different thread will block\n# our synchronous write(2) call.\n#\n# In order to mitigate this problem it's possible to use the following option\n# that will prevent fsync() from being called in the main process while a\n# BGSAVE or BGREWRITEAOF is in progress.\n#\n# This means that while another child is saving, the durability of Redis is\n# the same as \"appendfsync none\". In practical terms, this means that it is\n# possible to lose up to 30 seconds of log in the worst scenario (with the\n# default Linux settings).\n#\n# If you have latency problems turn this to \"yes\". Otherwise leave it as\n# \"no\" that is the safest pick from the point of view of durability.\n\nno-appendfsync-on-rewrite no\n\n# Automatic rewrite of the append only file.\n# Redis is able to automatically rewrite the log file implicitly calling\n# BGREWRITEAOF when the AOF log size grows by the specified percentage.\n#\n# This is how it works: Redis remembers the size of the AOF file after the\n# latest rewrite (if no rewrite has happened since the restart, the size of\n# the AOF at startup is used).\n#\n# This base size is compared to the current size. If the current size is\n# bigger than the specified percentage, the rewrite is triggered. Also\n# you need to specify a minimal size for the AOF file to be rewritten, this\n# is useful to avoid rewriting the AOF file even if the percentage increase\n# is reached but it is still pretty small.\n#\n# Specify a percentage of zero in order to disable the automatic AOF\n# rewrite feature.\n\nauto-aof-rewrite-percentage 100\nauto-aof-rewrite-min-size 64mb\n\n# An AOF file may be found to be truncated at the end during the Redis\n# startup process, when the AOF data gets loaded back into memory.\n# This may happen when the system where Redis is running\n# crashes, especially when an ext4 filesystem is mounted without the\n# data=ordered option (however this can't happen when Redis itself\n# crashes or aborts but the operating system still works correctly).\n#\n# Redis can either exit with an error when this happens, or load as much\n# data as possible (the default now) and start if the AOF file is found\n# to be truncated at the end. The following option controls this behavior.\n#\n# If aof-load-truncated is set to yes, a truncated AOF file is loaded and\n# the Redis server starts emitting a log to inform the user of the event.\n# Otherwise if the option is set to no, the server aborts with an error\n# and refuses to start. When the option is set to no, the user requires\n# to fix the AOF file using the \"redis-check-aof\" utility before to restart\n# the server.\n#\n# Note that if the AOF file will be found to be corrupted in the middle\n# the server will still exit with an error. This option only applies when\n# Redis will try to read more data from the AOF file but not enough bytes\n# will be found.\naof-load-truncated yes\n\n# When rewriting the AOF file, Redis is able to use an RDB preamble in the\n# AOF file for faster rewrites and recoveries. When this option is turned\n# on the rewritten AOF file is composed of two different stanzas:\n#\n#   [RDB file][AOF tail]\n#\n# When loading, Redis recognizes that the AOF file starts with the \"REDIS\"\n# string and loads the prefixed RDB file, then continues loading the AOF\n# tail.\naof-use-rdb-preamble yes\n\n################################ LUA SCRIPTING  ###############################\n\n# Max execution time of a Lua script in milliseconds.\n#\n# If the maximum execution time is reached Redis will log that a script is\n# still in execution after the maximum allowed time and will start to\n# reply to queries with an error.\n#\n# When a long running script exceeds the maximum execution time only the\n# SCRIPT KILL and SHUTDOWN NOSAVE commands are available. The first can be\n# used to stop a script that did not yet call any write commands. The second\n# is the only way to shut down the server in the case a write command was\n# already issued by the script but the user doesn't want to wait for the natural\n# termination of the script.\n#\n# Set it to 0 or a negative value for unlimited execution without warnings.\nlua-time-limit 5000\n\n################################ REDIS CLUSTER  ###############################\n\n# Normal Redis instances can't be part of a Redis Cluster; only nodes that are\n# started as cluster nodes can. In order to start a Redis instance as a\n# cluster node enable the cluster support uncommenting the following:\n#\n# cluster-enabled yes\n\n# Every cluster node has a cluster configuration file. This file is not\n# intended to be edited by hand. It is created and updated by Redis nodes.\n# Every Redis Cluster node requires a different cluster configuration file.\n# Make sure that instances running in the same system do not have\n# overlapping cluster configuration file names.\n#\n# cluster-config-file nodes-6379.conf\n\n# Cluster node timeout is the amount of milliseconds a node must be unreachable\n# for it to be considered in failure state.\n# Most other internal time limits are a multiple of the node timeout.\n#\n# cluster-node-timeout 15000\n\n# A replica of a failing master will avoid to start a failover if its data\n# looks too old.\n#\n# There is no simple way for a replica to actually have an exact measure of\n# its \"data age\", so the following two checks are performed:\n#\n# 1) If there are multiple replicas able to failover, they exchange messages\n#    in order to try to give an advantage to the replica with the best\n#    replication offset (more data from the master processed).\n#    Replicas will try to get their rank by offset, and apply to the start\n#    of the failover a delay proportional to their rank.\n#\n# 2) Every single replica computes the time of the last interaction with\n#    its master. This can be the last ping or command received (if the master\n#    is still in the \"connected\" state), or the time that elapsed since the\n#    disconnection with the master (if the replication link is currently down).\n#    If the last interaction is too old, the replica will not try to failover\n#    at all.\n#\n# The point \"2\" can be tuned by user. Specifically a replica will not perform\n# the failover if, since the last interaction with the master, the time\n# elapsed is greater than:\n#\n#   (node-timeout * cluster-replica-validity-factor) + repl-ping-replica-period\n#\n# So for example if node-timeout is 30 seconds, and the cluster-replica-validity-factor\n# is 10, and assuming a default repl-ping-replica-period of 10 seconds, the\n# replica will not try to failover if it was not able to talk with the master\n# for longer than 310 seconds.\n#\n# A large cluster-replica-validity-factor may allow replicas with too old data to failover\n# a master, while a too small value may prevent the cluster from being able to\n# elect a replica at all.\n#\n# For maximum availability, it is possible to set the cluster-replica-validity-factor\n# to a value of 0, which means, that replicas will always try to failover the\n# master regardless of the last time they interacted with the master.\n# (However they'll always try to apply a delay proportional to their\n# offset rank).\n#\n# Zero is the only value able to guarantee that when all the partitions heal\n# the cluster will always be able to continue.\n#\n# cluster-replica-validity-factor 10\n\n# Cluster replicas are able to migrate to orphaned masters, that are masters\n# that are left without working replicas. This improves the cluster ability\n# to resist to failures as otherwise an orphaned master can't be failed over\n# in case of failure if it has no working replicas.\n#\n# Replicas migrate to orphaned masters only if there are still at least a\n# given number of other working replicas for their old master. This number\n# is the \"migration barrier\". A migration barrier of 1 means that a replica\n# will migrate only if there is at least 1 other working replica for its master\n# and so forth. It usually reflects the number of replicas you want for every\n# master in your cluster.\n#\n# Default is 1 (replicas migrate only if their masters remain with at least\n# one replica). To disable migration just set it to a very large value or\n# set cluster-allow-replica-migration to 'no'.\n# A value of 0 can be set but is useful only for debugging and dangerous\n# in production.\n#\n# cluster-migration-barrier 1\n\n# Turning off this option allows to use less automatic cluster configuration.\n# It both disables migration to orphaned masters and migration from masters\n# that became empty.\n#\n# Default is 'yes' (allow automatic migrations).\n#\n# cluster-allow-replica-migration yes\n\n# By default Redis Cluster nodes stop accepting queries if they detect there\n# is at least a hash slot uncovered (no available node is serving it).\n# This way if the cluster is partially down (for example a range of hash slots\n# are no longer covered) all the cluster becomes, eventually, unavailable.\n# It automatically returns available as soon as all the slots are covered again.\n#\n# However sometimes you want the subset of the cluster which is working,\n# to continue to accept queries for the part of the key space that is still\n# covered. In order to do so, just set the cluster-require-full-coverage\n# option to no.\n#\n# cluster-require-full-coverage yes\n\n# This option, when set to yes, prevents replicas from trying to failover its\n# master during master failures. However the replica can still perform a\n# manual failover, if forced to do so.\n#\n# This is useful in different scenarios, especially in the case of multiple\n# data center operations, where we want one side to never be promoted if not\n# in the case of a total DC failure.\n#\n# cluster-replica-no-failover no\n\n# This option, when set to yes, allows nodes to serve read traffic while the\n# the cluster is in a down state, as long as it believes it owns the slots. \n#\n# This is useful for two cases.  The first case is for when an application \n# doesn't require consistency of data during node failures or network partitions.\n# One example of this is a cache, where as long as the node has the data it\n# should be able to serve it. \n#\n# The second use case is for configurations that don't meet the recommended  \n# three shards but want to enable cluster mode and scale later. A \n# master outage in a 1 or 2 shard configuration causes a read/write outage to the\n# entire cluster without this option set, with it set there is only a write outage.\n# Without a quorum of masters, slot ownership will not change automatically. \n#\n# cluster-allow-reads-when-down no\n\n# In order to setup your cluster make sure to read the documentation\n# available at https://redis.io web site.\n\n########################## CLUSTER DOCKER/NAT support  ########################\n\n# In certain deployments, Redis Cluster nodes address discovery fails, because\n# addresses are NAT-ted or because ports are forwarded (the typical case is\n# Docker and other containers).\n#\n# In order to make Redis Cluster working in such environments, a static\n# configuration where each node knows its public address is needed. The\n# following four options are used for this scope, and are:\n#\n# * cluster-announce-ip\n# * cluster-announce-port\n# * cluster-announce-tls-port\n# * cluster-announce-bus-port\n#\n# Each instructs the node about its address, client ports (for connections\n# without and with TLS) and cluster message bus port. The information is then\n# published in the header of the bus packets so that other nodes will be able to\n# correctly map the address of the node publishing the information.\n#\n# If cluster-tls is set to yes and cluster-announce-tls-port is omitted or set\n# to zero, then cluster-announce-port refers to the TLS port. Note also that\n# cluster-announce-tls-port has no effect if cluster-tls is set to no.\n#\n# If the above options are not used, the normal Redis Cluster auto-detection\n# will be used instead.\n#\n# Note that when remapped, the bus port may not be at the fixed offset of\n# clients port + 10000, so you can specify any port and bus-port depending\n# on how they get remapped. If the bus-port is not set, a fixed offset of\n# 10000 will be used as usual.\n#\n# Example:\n#\n# cluster-announce-ip 10.1.1.5\n# cluster-announce-tls-port 6379\n# cluster-announce-port 0\n# cluster-announce-bus-port 6380\n\n################################## SLOW LOG ###################################\n\n# The Redis Slow Log is a system to log queries that exceeded a specified\n# execution time. The execution time does not include the I/O operations\n# like talking with the client, sending the reply and so forth,\n# but just the time needed to actually execute the command (this is the only\n# stage of command execution where the thread is blocked and can not serve\n# other requests in the meantime).\n#\n# You can configure the slow log with two parameters: one tells Redis\n# what is the execution time, in microseconds, to exceed in order for the\n# command to get logged, and the other parameter is the length of the\n# slow log. When a new command is logged the oldest one is removed from the\n# queue of logged commands.\n\n# The following time is expressed in microseconds, so 1000000 is equivalent\n# to one second. Note that a negative number disables the slow log, while\n# a value of zero forces the logging of every command.\nslowlog-log-slower-than 10000\n\n# There is no limit to this length. Just be aware that it will consume memory.\n# You can reclaim memory used by the slow log with SLOWLOG RESET.\nslowlog-max-len 128\n\n################################ LATENCY MONITOR ##############################\n\n# The Redis latency monitoring subsystem samples different operations\n# at runtime in order to collect data related to possible sources of\n# latency of a Redis instance.\n#\n# Via the LATENCY command this information is available to the user that can\n# print graphs and obtain reports.\n#\n# The system only logs operations that were performed in a time equal or\n# greater than the amount of milliseconds specified via the\n# latency-monitor-threshold configuration directive. When its value is set\n# to zero, the latency monitor is turned off.\n#\n# By default latency monitoring is disabled since it is mostly not needed\n# if you don't have latency issues, and collecting data has a performance\n# impact, that while very small, can be measured under big load. Latency\n# monitoring can easily be enabled at runtime using the command\n# \"CONFIG SET latency-monitor-threshold <milliseconds>\" if needed.\nlatency-monitor-threshold 0\n\n############################# EVENT NOTIFICATION ##############################\n\n# Redis can notify Pub/Sub clients about events happening in the key space.\n# This feature is documented at https://redis.io/topics/notifications\n#\n# For instance if keyspace events notification is enabled, and a client\n# performs a DEL operation on key \"foo\" stored in the Database 0, two\n# messages will be published via Pub/Sub:\n#\n# PUBLISH __keyspace@0__:foo del\n# PUBLISH __keyevent@0__:del foo\n#\n# It is possible to select the events that Redis will notify among a set\n# of classes. Every class is identified by a single character:\n#\n#  K     Keyspace events, published with __keyspace@<db>__ prefix.\n#  E     Keyevent events, published with __keyevent@<db>__ prefix.\n#  g     Generic commands (non-type specific) like DEL, EXPIRE, RENAME, ...\n#  $     String commands\n#  l     List commands\n#  s     Set commands\n#  h     Hash commands\n#  z     Sorted set commands\n#  x     Expired events (events generated every time a key expires)\n#  e     Evicted events (events generated when a key is evicted for maxmemory)\n#  t     Stream commands\n#  d     Module key type events\n#  m     Key-miss events (Note: It is not included in the 'A' class)\n#  A     Alias for g$lshzxetd, so that the \"AKE\" string means all the events\n#        (Except key-miss events which are excluded from 'A' due to their\n#         unique nature).\n#\n#  The \"notify-keyspace-events\" takes as argument a string that is composed\n#  of zero or multiple characters. The empty string means that notifications\n#  are disabled.\n#\n#  Example: to enable list and generic events, from the point of view of the\n#           event name, use:\n#\n#  notify-keyspace-events Elg\n#\n#  Example 2: to get the stream of the expired keys subscribing to channel\n#             name __keyevent@0__:expired use:\n#\n#  notify-keyspace-events Ex\n#\n#  By default all notifications are disabled because most users don't need\n#  this feature and the feature has some overhead. Note that if you don't\n#  specify at least one of K or E, no events will be delivered.\nnotify-keyspace-events \"\"\n\n############################### GOPHER SERVER #################################\n\n# Redis contains an implementation of the Gopher protocol, as specified in\n# the RFC 1436 (https://www.ietf.org/rfc/rfc1436.txt).\n#\n# The Gopher protocol was very popular in the late '90s. It is an alternative\n# to the web, and the implementation both server and client side is so simple\n# that the Redis server has just 100 lines of code in order to implement this\n# support.\n#\n# What do you do with Gopher nowadays? Well Gopher never *really* died, and\n# lately there is a movement in order for the Gopher more hierarchical content\n# composed of just plain text documents to be resurrected. Some want a simpler\n# internet, others believe that the mainstream internet became too much\n# controlled, and it's cool to create an alternative space for people that\n# want a bit of fresh air.\n#\n# Anyway for the 10nth birthday of the Redis, we gave it the Gopher protocol\n# as a gift.\n#\n# --- HOW IT WORKS? ---\n#\n# The Redis Gopher support uses the inline protocol of Redis, and specifically\n# two kind of inline requests that were anyway illegal: an empty request\n# or any request that starts with \"/\" (there are no Redis commands starting\n# with such a slash). Normal RESP2/RESP3 requests are completely out of the\n# path of the Gopher protocol implementation and are served as usual as well.\n#\n# If you open a connection to Redis when Gopher is enabled and send it\n# a string like \"/foo\", if there is a key named \"/foo\" it is served via the\n# Gopher protocol.\n#\n# In order to create a real Gopher \"hole\" (the name of a Gopher site in Gopher\n# talking), you likely need a script like the following:\n#\n#   https://github.com/antirez/gopher2redis\n#\n# --- SECURITY WARNING ---\n#\n# If you plan to put Redis on the internet in a publicly accessible address\n# to server Gopher pages MAKE SURE TO SET A PASSWORD to the instance.\n# Once a password is set:\n#\n#   1. The Gopher server (when enabled, not by default) will still serve\n#      content via Gopher.\n#   2. However other commands cannot be called before the client will\n#      authenticate.\n#\n# So use the 'requirepass' option to protect your instance.\n#\n# Note that Gopher is not currently supported when 'io-threads-do-reads'\n# is enabled.\n#\n# To enable Gopher support, uncomment the following line and set the option\n# from no (the default) to yes.\n#\n# gopher-enabled no\n\n############################### ADVANCED CONFIG ###############################\n\n# Hashes are encoded using a memory efficient data structure when they have a\n# small number of entries, and the biggest entry does not exceed a given\n# threshold. These thresholds can be configured using the following directives.\nhash-max-ziplist-entries 512\nhash-max-ziplist-value 64\n\n# Lists are also encoded in a special way to save a lot of space.\n# The number of entries allowed per internal list node can be specified\n# as a fixed maximum size or a maximum number of elements.\n# For a fixed maximum size, use -5 through -1, meaning:\n# -5: max size: 64 Kb  <-- not recommended for normal workloads\n# -4: max size: 32 Kb  <-- not recommended\n# -3: max size: 16 Kb  <-- probably not recommended\n# -2: max size: 8 Kb   <-- good\n# -1: max size: 4 Kb   <-- good\n# Positive numbers mean store up to _exactly_ that number of elements\n# per list node.\n# The highest performing option is usually -2 (8 Kb size) or -1 (4 Kb size),\n# but if your use case is unique, adjust the settings as necessary.\nlist-max-ziplist-size -2\n\n# Lists may also be compressed.\n# Compress depth is the number of quicklist ziplist nodes from *each* side of\n# the list to *exclude* from compression.  The head and tail of the list\n# are always uncompressed for fast push/pop operations.  Settings are:\n# 0: disable all list compression\n# 1: depth 1 means \"don't start compressing until after 1 node into the list,\n#    going from either the head or tail\"\n#    So: [head]->node->node->...->node->[tail]\n#    [head], [tail] will always be uncompressed; inner nodes will compress.\n# 2: [head]->[next]->node->node->...->node->[prev]->[tail]\n#    2 here means: don't compress head or head->next or tail->prev or tail,\n#    but compress all nodes between them.\n# 3: [head]->[next]->[next]->node->node->...->node->[prev]->[prev]->[tail]\n# etc.\nlist-compress-depth 0\n\n# Sets have a special encoding in just one case: when a set is composed\n# of just strings that happen to be integers in radix 10 in the range\n# of 64 bit signed integers.\n# The following configuration setting sets the limit in the size of the\n# set in order to use this special memory saving encoding.\nset-max-intset-entries 512\n\n# Similarly to hashes and lists, sorted sets are also specially encoded in\n# order to save a lot of space. This encoding is only used when the length and\n# elements of a sorted set are below the following limits:\nzset-max-ziplist-entries 128\nzset-max-ziplist-value 64\n\n# HyperLogLog sparse representation bytes limit. The limit includes the\n# 16 bytes header. When an HyperLogLog using the sparse representation crosses\n# this limit, it is converted into the dense representation.\n#\n# A value greater than 16000 is totally useless, since at that point the\n# dense representation is more memory efficient.\n#\n# The suggested value is ~ 3000 in order to have the benefits of\n# the space efficient encoding without slowing down too much PFADD,\n# which is O(N) with the sparse encoding. The value can be raised to\n# ~ 10000 when CPU is not a concern, but space is, and the data set is\n# composed of many HyperLogLogs with cardinality in the 0 - 15000 range.\nhll-sparse-max-bytes 3000\n\n# Streams macro node max size / items. The stream data structure is a radix\n# tree of big nodes that encode multiple items inside. Using this configuration\n# it is possible to configure how big a single node can be in bytes, and the\n# maximum number of items it may contain before switching to a new node when\n# appending new stream entries. If any of the following settings are set to\n# zero, the limit is ignored, so for instance it is possible to set just a\n# max entries limit by setting max-bytes to 0 and max-entries to the desired\n# value.\nstream-node-max-bytes 4096\nstream-node-max-entries 100\n\n# Active rehashing uses 1 millisecond every 100 milliseconds of CPU time in\n# order to help rehashing the main Redis hash table (the one mapping top-level\n# keys to values). The hash table implementation Redis uses (see dict.c)\n# performs a lazy rehashing: the more operation you run into a hash table\n# that is rehashing, the more rehashing \"steps\" are performed, so if the\n# server is idle the rehashing is never complete and some more memory is used\n# by the hash table.\n#\n# The default is to use this millisecond 10 times every second in order to\n# actively rehash the main dictionaries, freeing memory when possible.\n#\n# If unsure:\n# use \"activerehashing no\" if you have hard latency requirements and it is\n# not a good thing in your environment that Redis can reply from time to time\n# to queries with 2 milliseconds delay.\n#\n# use \"activerehashing yes\" if you don't have such hard requirements but\n# want to free memory asap when possible.\nactiverehashing yes\n\n# The client output buffer limits can be used to force disconnection of clients\n# that are not reading data from the server fast enough for some reason (a\n# common reason is that a Pub/Sub client can't consume messages as fast as the\n# publisher can produce them).\n#\n# The limit can be set differently for the three different classes of clients:\n#\n# normal -> normal clients including MONITOR clients\n# replica  -> replica clients\n# pubsub -> clients subscribed to at least one pubsub channel or pattern\n#\n# The syntax of every client-output-buffer-limit directive is the following:\n#\n# client-output-buffer-limit <class> <hard limit> <soft limit> <soft seconds>\n#\n# A client is immediately disconnected once the hard limit is reached, or if\n# the soft limit is reached and remains reached for the specified number of\n# seconds (continuously).\n# So for instance if the hard limit is 32 megabytes and the soft limit is\n# 16 megabytes / 10 seconds, the client will get disconnected immediately\n# if the size of the output buffers reach 32 megabytes, but will also get\n# disconnected if the client reaches 16 megabytes and continuously overcomes\n# the limit for 10 seconds.\n#\n# By default normal clients are not limited because they don't receive data\n# without asking (in a push way), but just after a request, so only\n# asynchronous clients may create a scenario where data is requested faster\n# than it can read.\n#\n# Instead there is a default limit for pubsub and replica clients, since\n# subscribers and replicas receive data in a push fashion.\n#\n# Both the hard or the soft limit can be disabled by setting them to zero.\nclient-output-buffer-limit normal 0 0 0\nclient-output-buffer-limit replica 256mb 64mb 60\nclient-output-buffer-limit pubsub 32mb 8mb 60\n\n# Client query buffers accumulate new commands. They are limited to a fixed\n# amount by default in order to avoid that a protocol desynchronization (for\n# instance due to a bug in the client) will lead to unbound memory usage in\n# the query buffer. However you can configure it here if you have very special\n# needs, such us huge multi/exec requests or alike.\n#\n# client-query-buffer-limit 1gb\n\n# In the Redis protocol, bulk requests, that are, elements representing single\n# strings, are normally limited to 512 mb. However you can change this limit\n# here, but must be 1mb or greater\n#\n# proto-max-bulk-len 512mb\n\n# Redis calls an internal function to perform many background tasks, like\n# closing connections of clients in timeout, purging expired keys that are\n# never requested, and so forth.\n#\n# Not all tasks are performed with the same frequency, but Redis checks for\n# tasks to perform according to the specified \"hz\" value.\n#\n# By default \"hz\" is set to 10. Raising the value will use more CPU when\n# Redis is idle, but at the same time will make Redis more responsive when\n# there are many keys expiring at the same time, and timeouts may be\n# handled with more precision.\n#\n# The range is between 1 and 500, however a value over 100 is usually not\n# a good idea. Most users should use the default of 10 and raise this up to\n# 100 only in environments where very low latency is required.\nhz 10\n\n# Normally it is useful to have an HZ value which is proportional to the\n# number of clients connected. This is useful in order, for instance, to\n# avoid too many clients are processed for each background task invocation\n# in order to avoid latency spikes.\n#\n# Since the default HZ value by default is conservatively set to 10, Redis\n# offers, and enables by default, the ability to use an adaptive HZ value\n# which will temporarily raise when there are many connected clients.\n#\n# When dynamic HZ is enabled, the actual configured HZ will be used\n# as a baseline, but multiples of the configured HZ value will be actually\n# used as needed once more clients are connected. In this way an idle\n# instance will use very little CPU time while a busy instance will be\n# more responsive.\ndynamic-hz yes\n\n# When a child rewrites the AOF file, if the following option is enabled\n# the file will be fsync-ed every 32 MB of data generated. This is useful\n# in order to commit the file to the disk more incrementally and avoid\n# big latency spikes.\naof-rewrite-incremental-fsync yes\n\n# When redis saves RDB file, if the following option is enabled\n# the file will be fsync-ed every 32 MB of data generated. This is useful\n# in order to commit the file to the disk more incrementally and avoid\n# big latency spikes.\nrdb-save-incremental-fsync yes\n\n# Redis LFU eviction (see maxmemory setting) can be tuned. However it is a good\n# idea to start with the default settings and only change them after investigating\n# how to improve the performances and how the keys LFU change over time, which\n# is possible to inspect via the OBJECT FREQ command.\n#\n# There are two tunable parameters in the Redis LFU implementation: the\n# counter logarithm factor and the counter decay time. It is important to\n# understand what the two parameters mean before changing them.\n#\n# The LFU counter is just 8 bits per key, it's maximum value is 255, so Redis\n# uses a probabilistic increment with logarithmic behavior. Given the value\n# of the old counter, when a key is accessed, the counter is incremented in\n# this way:\n#\n# 1. A random number R between 0 and 1 is extracted.\n# 2. A probability P is calculated as 1/(old_value*lfu_log_factor+1).\n# 3. The counter is incremented only if R < P.\n#\n# The default lfu-log-factor is 10. This is a table of how the frequency\n# counter changes with a different number of accesses with different\n# logarithmic factors:\n#\n# +--------+------------+------------+------------+------------+------------+\n# | factor | 100 hits   | 1000 hits  | 100K hits  | 1M hits    | 10M hits   |\n# +--------+------------+------------+------------+------------+------------+\n# | 0      | 104        | 255        | 255        | 255        | 255        |\n# +--------+------------+------------+------------+------------+------------+\n# | 1      | 18         | 49         | 255        | 255        | 255        |\n# +--------+------------+------------+------------+------------+------------+\n# | 10     | 10         | 18         | 142        | 255        | 255        |\n# +--------+------------+------------+------------+------------+------------+\n# | 100    | 8          | 11         | 49         | 143        | 255        |\n# +--------+------------+------------+------------+------------+------------+\n#\n# NOTE: The above table was obtained by running the following commands:\n#\n#   redis-benchmark -n 1000000 incr foo\n#   redis-cli object freq foo\n#\n# NOTE 2: The counter initial value is 5 in order to give new objects a chance\n# to accumulate hits.\n#\n# The counter decay time is the time, in minutes, that must elapse in order\n# for the key counter to be divided by two (or decremented if it has a value\n# less <= 10).\n#\n# The default value for the lfu-decay-time is 1. A special value of 0 means to\n# decay the counter every time it happens to be scanned.\n#\n# lfu-log-factor 10\n# lfu-decay-time 1\n\n########################### ACTIVE DEFRAGMENTATION #######################\n#\n# What is active defragmentation?\n# -------------------------------\n#\n# Active (online) defragmentation allows a Redis server to compact the\n# spaces left between small allocations and deallocations of data in memory,\n# thus allowing to reclaim back memory.\n#\n# Fragmentation is a natural process that happens with every allocator (but\n# less so with Jemalloc, fortunately) and certain workloads. Normally a server\n# restart is needed in order to lower the fragmentation, or at least to flush\n# away all the data and create it again. However thanks to this feature\n# implemented by Oran Agra for Redis 4.0 this process can happen at runtime\n# in a \"hot\" way, while the server is running.\n#\n# Basically when the fragmentation is over a certain level (see the\n# configuration options below) Redis will start to create new copies of the\n# values in contiguous memory regions by exploiting certain specific Jemalloc\n# features (in order to understand if an allocation is causing fragmentation\n# and to allocate it in a better place), and at the same time, will release the\n# old copies of the data. This process, repeated incrementally for all the keys\n# will cause the fragmentation to drop back to normal values.\n#\n# Important things to understand:\n#\n# 1. This feature is disabled by default, and only works if you compiled Redis\n#    to use the copy of Jemalloc we ship with the source code of Redis.\n#    This is the default with Linux builds.\n#\n# 2. You never need to enable this feature if you don't have fragmentation\n#    issues.\n#\n# 3. Once you experience fragmentation, you can enable this feature when\n#    needed with the command \"CONFIG SET activedefrag yes\".\n#\n# The configuration parameters are able to fine tune the behavior of the\n# defragmentation process. If you are not sure about what they mean it is\n# a good idea to leave the defaults untouched.\n\n# Enabled active defragmentation\n# activedefrag no\n\n# Minimum amount of fragmentation waste to start active defrag\n# active-defrag-ignore-bytes 100mb\n\n# Minimum percentage of fragmentation to start active defrag\n# active-defrag-threshold-lower 10\n\n# Maximum percentage of fragmentation at which we use maximum effort\n# active-defrag-threshold-upper 100\n\n# Minimal effort for defrag in CPU percentage, to be used when the lower\n# threshold is reached\n# active-defrag-cycle-min 1\n\n# Maximal effort for defrag in CPU percentage, to be used when the upper\n# threshold is reached\n# active-defrag-cycle-max 25\n\n# Maximum number of set/hash/zset/list fields that will be processed from\n# the main dictionary scan\n# active-defrag-max-scan-fields 1000\n\n# Jemalloc background thread for purging will be enabled by default\njemalloc-bg-thread yes\n\n# It is possible to pin different threads and processes of Redis to specific\n# CPUs in your system, in order to maximize the performances of the server.\n# This is useful both in order to pin different Redis threads in different\n# CPUs, but also in order to make sure that multiple Redis instances running\n# in the same host will be pinned to different CPUs.\n#\n# Normally you can do this using the \"taskset\" command, however it is also\n# possible to this via Redis configuration directly, both in Linux and FreeBSD.\n#\n# You can pin the server/IO threads, bio threads, aof rewrite child process, and\n# the bgsave child process. The syntax to specify the cpu list is the same as\n# the taskset command:\n#\n# Set redis server/io threads to cpu affinity 0,2,4,6:\n# server_cpulist 0-7:2\n#\n# Set bio threads to cpu affinity 1,3:\n# bio_cpulist 1,3\n#\n# Set aof rewrite child process to cpu affinity 8,9,10,11:\n# aof_rewrite_cpulist 8-11\n#\n# Set bgsave child process to cpu affinity 1,10,11\n# bgsave_cpulist 1,10-11\n\n# In some cases redis will emit warnings and even refuse to start if it detects\n# that the system is in bad state, it is possible to suppress these warnings\n# by setting the following config which takes a space delimited list of warnings\n# to suppress\n#\n# ignore-warnings ARM64-COW-BUG\n```\n\n# 5、启动Redis容器\n\n执行命令启动redis容器：\n\n```shell\ndocker-compose up -d\n```\n\n![](2022-04-24-17-10-52-image.png)\n\n# 6、远程连接验证结果\n\n信息填完，点击OK\n\n![](2022-04-24-17-12-56-image.png)\n\n点击左侧对呀的连接，右侧出现redis服务器信息则为安装成功\n\n![](2022-04-24-17-14-15-image.png)\n","source":"_posts/iRedisByDC.md","raw":"---\ntitle: docker-compose安装Redis\ndate: 2022-04-24 16:53:43\ntags: [docker,安装部署]\ncategories: [docker]\n---\n\n# 1、拉取镜像\n\n执行下面的命令拉取redis的docker镜像\n\n```shell\ndocker pull redis\n```\n\n![](2022-04-24-16-57-51-image.png)\n\n# 2、编写docker-compose.yml文件\n\n内容如下：\n\n```yaml\nversion: '3'\nservices:\n  redis:\n    restart: always\n    image: redis\n    container_name: redis\n    ports:\n      - 50020:6379\n    environment:\n      TZ: Asia/Shanghai\n    volumes:\n      - ./data:/data\n      - ./conf/redis.conf:/etc/redis.conf\n    privileged: true\n```\n\n# 3、创建目录文件\n\n根据docker-compose.yml文件创建对应目录文件\n\n```shell\npwd\nmkdir data\nmkdir conf\nll\n```\n\n![](2022-04-24-17-04-13-image.png)\n\n# 4、编写Redis的配置文件\n\n在conf目录下创建redis.conf文件，文件内容如下：\n\n```\n# Redis configuration file example.\n#\n# Note that in order to read the configuration file, Redis must be\n# started with the file path as first argument:\n#\n# ./redis-server /path/to/redis.conf\n\n# Note on units: when memory size is needed, it is possible to specify\n# it in the usual form of 1k 5GB 4M and so forth:\n#\n# 1k => 1000 bytes\n# 1kb => 1024 bytes\n# 1m => 1000000 bytes\n# 1mb => 1024*1024 bytes\n# 1g => 1000000000 bytes\n# 1gb => 1024*1024*1024 bytes\n#\n# units are case insensitive so 1GB 1Gb 1gB are all the same.\n\n################################## INCLUDES ###################################\n\n# Include one or more other config files here.  This is useful if you\n# have a standard template that goes to all Redis servers but also need\n# to customize a few per-server settings.  Include files can include\n# other files, so use this wisely.\n#\n# Note that option \"include\" won't be rewritten by command \"CONFIG REWRITE\"\n# from admin or Redis Sentinel. Since Redis always uses the last processed\n# line as value of a configuration directive, you'd better put includes\n# at the beginning of this file to avoid overwriting config change at runtime.\n#\n# If instead you are interested in using includes to override configuration\n# options, it is better to use include as the last line.\n#\n# include /path/to/local.conf\n# include /path/to/other.conf\n\n################################## MODULES #####################################\n\n# Load modules at startup. If the server is not able to load modules\n# it will abort. It is possible to use multiple loadmodule directives.\n#\n# loadmodule /path/to/my_module.so\n# loadmodule /path/to/other_module.so\n\n################################## NETWORK #####################################\n\n# By default, if no \"bind\" configuration directive is specified, Redis listens\n# for connections from all available network interfaces on the host machine.\n# It is possible to listen to just one or multiple selected interfaces using\n# the \"bind\" configuration directive, followed by one or more IP addresses.\n# Each address can be prefixed by \"-\", which means that redis will not fail to\n# start if the address is not available. Being not available only refers to\n# addresses that does not correspond to any network interfece. Addresses that\n# are already in use will always fail, and unsupported protocols will always BE\n# silently skipped.\n#\n# Examples:\n#\n# bind 192.168.1.100 10.0.0.1     # listens on two specific IPv4 addresses\n# bind 127.0.0.1 ::1              # listens on loopback IPv4 and IPv6\n# bind * -::*                     # like the default, all available interfaces\n#\n# ~~~ WARNING ~~~ If the computer running Redis is directly exposed to the\n# internet, binding to all the interfaces is dangerous and will expose the\n# instance to everybody on the internet. So by default we uncomment the\n# following bind directive, that will force Redis to listen only on the\n# IPv4 and IPv6 (if available) loopback interface addresses (this means Redis\n# will only be able to accept client connections from the same host that it is\n# running on).\n#\n# IF YOU ARE SURE YOU WANT YOUR INSTANCE TO LISTEN TO ALL THE INTERFACES\n# JUST COMMENT OUT THE FOLLOWING LINE.\n# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n# bind 127.0.0.1 -::1\n\n# Protected mode is a layer of security protection, in order to avoid that\n# Redis instances left open on the internet are accessed and exploited.\n#\n# When protected mode is on and if:\n#\n# 1) The server is not binding explicitly to a set of addresses using the\n#    \"bind\" directive.\n# 2) No password is configured.\n#\n# The server only accepts connections from clients connecting from the\n# IPv4 and IPv6 loopback addresses 127.0.0.1 and ::1, and from Unix domain\n# sockets.\n#\n# By default protected mode is enabled. You should disable it only if\n# you are sure you want clients from other hosts to connect to Redis\n# even if no authentication is configured, nor a specific set of interfaces\n# are explicitly listed using the \"bind\" directive.\nprotected-mode no\n\n# Accept connections on the specified port, default is 6379 (IANA #815344).\n# If port 0 is specified Redis will not listen on a TCP socket.\nport 6379\n\n# TCP listen() backlog.\n#\n# In high requests-per-second environments you need a high backlog in order\n# to avoid slow clients connection issues. Note that the Linux kernel\n# will silently truncate it to the value of /proc/sys/net/core/somaxconn so\n# make sure to raise both the value of somaxconn and tcp_max_syn_backlog\n# in order to get the desired effect.\ntcp-backlog 511\n\n# Unix socket.\n#\n# Specify the path for the Unix socket that will be used to listen for\n# incoming connections. There is no default, so Redis will not listen\n# on a unix socket when not specified.\n#\n# unixsocket /run/redis.sock\n# unixsocketperm 700\n\n# Close the connection after a client is idle for N seconds (0 to disable)\ntimeout 0\n\n# TCP keepalive.\n#\n# If non-zero, use SO_KEEPALIVE to send TCP ACKs to clients in absence\n# of communication. This is useful for two reasons:\n#\n# 1) Detect dead peers.\n# 2) Force network equipment in the middle to consider the connection to be\n#    alive.\n#\n# On Linux, the specified value (in seconds) is the period used to send ACKs.\n# Note that to close the connection the double of the time is needed.\n# On other kernels the period depends on the kernel configuration.\n#\n# A reasonable value for this option is 300 seconds, which is the new\n# Redis default starting with Redis 3.2.1.\ntcp-keepalive 300\n\n################################# TLS/SSL #####################################\n\n# By default, TLS/SSL is disabled. To enable it, the \"tls-port\" configuration\n# directive can be used to define TLS-listening ports. To enable TLS on the\n# default port, use:\n#\n# port 0\n# tls-port 6379\n\n# Configure a X.509 certificate and private key to use for authenticating the\n# server to connected clients, masters or cluster peers.  These files should be\n# PEM formatted.\n#\n# tls-cert-file redis.crt \n# tls-key-file redis.key\n#\n# If the key file is encrypted using a passphrase, it can be included here\n# as well.\n#\n# tls-key-file-pass secret\n\n# Normally Redis uses the same certificate for both server functions (accepting\n# connections) and client functions (replicating from a master, establishing\n# cluster bus connections, etc.).\n#\n# Sometimes certificates are issued with attributes that designate them as\n# client-only or server-only certificates. In that case it may be desired to use\n# different certificates for incoming (server) and outgoing (client)\n# connections. To do that, use the following directives:\n#\n# tls-client-cert-file client.crt\n# tls-client-key-file client.key\n#\n# If the key file is encrypted using a passphrase, it can be included here\n# as well.\n#\n# tls-client-key-file-pass secret\n\n# Configure a DH parameters file to enable Diffie-Hellman (DH) key exchange:\n#\n# tls-dh-params-file redis.dh\n\n# Configure a CA certificate(s) bundle or directory to authenticate TLS/SSL\n# clients and peers.  Redis requires an explicit configuration of at least one\n# of these, and will not implicitly use the system wide configuration.\n#\n# tls-ca-cert-file ca.crt\n# tls-ca-cert-dir /etc/ssl/certs\n\n# By default, clients (including replica servers) on a TLS port are required\n# to authenticate using valid client side certificates.\n#\n# If \"no\" is specified, client certificates are not required and not accepted.\n# If \"optional\" is specified, client certificates are accepted and must be\n# valid if provided, but are not required.\n#\n# tls-auth-clients no\n# tls-auth-clients optional\n\n# By default, a Redis replica does not attempt to establish a TLS connection\n# with its master.\n#\n# Use the following directive to enable TLS on replication links.\n#\n# tls-replication yes\n\n# By default, the Redis Cluster bus uses a plain TCP connection. To enable\n# TLS for the bus protocol, use the following directive:\n#\n# tls-cluster yes\n\n# By default, only TLSv1.2 and TLSv1.3 are enabled and it is highly recommended\n# that older formally deprecated versions are kept disabled to reduce the attack surface.\n# You can explicitly specify TLS versions to support.\n# Allowed values are case insensitive and include \"TLSv1\", \"TLSv1.1\", \"TLSv1.2\",\n# \"TLSv1.3\" (OpenSSL >= 1.1.1) or any combination.\n# To enable only TLSv1.2 and TLSv1.3, use:\n#\n# tls-protocols \"TLSv1.2 TLSv1.3\"\n\n# Configure allowed ciphers.  See the ciphers(1ssl) manpage for more information\n# about the syntax of this string.\n#\n# Note: this configuration applies only to <= TLSv1.2.\n#\n# tls-ciphers DEFAULT:!MEDIUM\n\n# Configure allowed TLSv1.3 ciphersuites.  See the ciphers(1ssl) manpage for more\n# information about the syntax of this string, and specifically for TLSv1.3\n# ciphersuites.\n#\n# tls-ciphersuites TLS_CHACHA20_POLY1305_SHA256\n\n# When choosing a cipher, use the server's preference instead of the client\n# preference. By default, the server follows the client's preference.\n#\n# tls-prefer-server-ciphers yes\n\n# By default, TLS session caching is enabled to allow faster and less expensive\n# reconnections by clients that support it. Use the following directive to disable\n# caching.\n#\n# tls-session-caching no\n\n# Change the default number of TLS sessions cached. A zero value sets the cache\n# to unlimited size. The default size is 20480.\n#\n# tls-session-cache-size 5000\n\n# Change the default timeout of cached TLS sessions. The default timeout is 300\n# seconds.\n#\n# tls-session-cache-timeout 60\n\n################################# GENERAL #####################################\n\n# By default Redis does not run as a daemon. Use 'yes' if you need it.\n# Note that Redis will write a pid file in /var/run/redis.pid when daemonized.\n# When Redis is supervised by upstart or systemd, this parameter has no impact.\ndaemonize no\n\n# If you run Redis from upstart or systemd, Redis can interact with your\n# supervision tree. Options:\n#   supervised no      - no supervision interaction\n#   supervised upstart - signal upstart by putting Redis into SIGSTOP mode\n#                        requires \"expect stop\" in your upstart job config\n#   supervised systemd - signal systemd by writing READY=1 to $NOTIFY_SOCKET\n#                        on startup, and updating Redis status on a regular\n#                        basis.\n#   supervised auto    - detect upstart or systemd method based on\n#                        UPSTART_JOB or NOTIFY_SOCKET environment variables\n# Note: these supervision methods only signal \"process is ready.\"\n#       They do not enable continuous pings back to your supervisor.\n#\n# The default is \"no\". To run under upstart/systemd, you can simply uncomment\n# the line below:\n#\n# supervised auto\n\n# If a pid file is specified, Redis writes it where specified at startup\n# and removes it at exit.\n#\n# When the server runs non daemonized, no pid file is created if none is\n# specified in the configuration. When the server is daemonized, the pid file\n# is used even if not specified, defaulting to \"/var/run/redis.pid\".\n#\n# Creating a pid file is best effort: if Redis is not able to create it\n# nothing bad happens, the server will start and run normally.\n#\n# Note that on modern Linux systems \"/run/redis.pid\" is more conforming\n# and should be used instead.\npidfile /var/run/redis_6379.pid\n\n# Specify the server verbosity level.\n# This can be one of:\n# debug (a lot of information, useful for development/testing)\n# verbose (many rarely useful info, but not a mess like the debug level)\n# notice (moderately verbose, what you want in production probably)\n# warning (only very important / critical messages are logged)\nloglevel notice\n\n# Specify the log file name. Also the empty string can be used to force\n# Redis to log on the standard output. Note that if you use standard\n# output for logging but daemonize, logs will be sent to /dev/null\nlogfile \"\"\n\n# To enable logging to the system logger, just set 'syslog-enabled' to yes,\n# and optionally update the other syslog parameters to suit your needs.\n# syslog-enabled no\n\n# Specify the syslog identity.\n# syslog-ident redis\n\n# Specify the syslog facility. Must be USER or between LOCAL0-LOCAL7.\n# syslog-facility local0\n\n# To disable the built in crash log, which will possibly produce cleaner core\n# dumps when they are needed, uncomment the following:\n#\n# crash-log-enabled no\n\n# To disable the fast memory check that's run as part of the crash log, which\n# will possibly let redis terminate sooner, uncomment the following:\n#\n# crash-memcheck-enabled no\n\n# Set the number of databases. The default database is DB 0, you can select\n# a different one on a per-connection basis using SELECT <dbid> where\n# dbid is a number between 0 and 'databases'-1\ndatabases 16\n\n# By default Redis shows an ASCII art logo only when started to log to the\n# standard output and if the standard output is a TTY and syslog logging is\n# disabled. Basically this means that normally a logo is displayed only in\n# interactive sessions.\n#\n# However it is possible to force the pre-4.0 behavior and always show a\n# ASCII art logo in startup logs by setting the following option to yes.\nalways-show-logo no\n\n# By default, Redis modifies the process title (as seen in 'top' and 'ps') to\n# provide some runtime information. It is possible to disable this and leave\n# the process name as executed by setting the following to no.\nset-proc-title yes\n\n# When changing the process title, Redis uses the following template to construct\n# the modified title.\n#\n# Template variables are specified in curly brackets. The following variables are\n# supported:\n#\n# {title}           Name of process as executed if parent, or type of child process.\n# {listen-addr}     Bind address or '*' followed by TCP or TLS port listening on, or\n#                   Unix socket if only that's available.\n# {server-mode}     Special mode, i.e. \"[sentinel]\" or \"[cluster]\".\n# {port}            TCP port listening on, or 0.\n# {tls-port}        TLS port listening on, or 0.\n# {unixsocket}      Unix domain socket listening on, or \"\".\n# {config-file}     Name of configuration file used.\n#\nproc-title-template \"{title} {listen-addr} {server-mode}\"\n\n################################ SNAPSHOTTING  ################################\n\n# Save the DB to disk.\n#\n# save <seconds> <changes>\n#\n# Redis will save the DB if both the given number of seconds and the given\n# number of write operations against the DB occurred.\n#\n# Snapshotting can be completely disabled with a single empty string argument\n# as in following example:\n#\n# save \"\"\n#\n# Unless specified otherwise, by default Redis will save the DB:\n#   * After 3600 seconds (an hour) if at least 1 key changed\n#   * After 300 seconds (5 minutes) if at least 100 keys changed\n#   * After 60 seconds if at least 10000 keys changed\n#\n# You can set these explicitly by uncommenting the three following lines.\n#\n# save 3600 1\n# save 300 100\n# save 60 10000\n\n# By default Redis will stop accepting writes if RDB snapshots are enabled\n# (at least one save point) and the latest background save failed.\n# This will make the user aware (in a hard way) that data is not persisting\n# on disk properly, otherwise chances are that no one will notice and some\n# disaster will happen.\n#\n# If the background saving process will start working again Redis will\n# automatically allow writes again.\n#\n# However if you have setup your proper monitoring of the Redis server\n# and persistence, you may want to disable this feature so that Redis will\n# continue to work as usual even if there are problems with disk,\n# permissions, and so forth.\nstop-writes-on-bgsave-error yes\n\n# Compress string objects using LZF when dump .rdb databases?\n# By default compression is enabled as it's almost always a win.\n# If you want to save some CPU in the saving child set it to 'no' but\n# the dataset will likely be bigger if you have compressible values or keys.\nrdbcompression yes\n\n# Since version 5 of RDB a CRC64 checksum is placed at the end of the file.\n# This makes the format more resistant to corruption but there is a performance\n# hit to pay (around 10%) when saving and loading RDB files, so you can disable it\n# for maximum performances.\n#\n# RDB files created with checksum disabled have a checksum of zero that will\n# tell the loading code to skip the check.\nrdbchecksum yes\n\n# Enables or disables full sanitation checks for ziplist and listpack etc when\n# loading an RDB or RESTORE payload. This reduces the chances of a assertion or\n# crash later on while processing commands.\n# Options:\n#   no         - Never perform full sanitation\n#   yes        - Always perform full sanitation\n#   clients    - Perform full sanitation only for user connections.\n#                Excludes: RDB files, RESTORE commands received from the master\n#                connection, and client connections which have the\n#                skip-sanitize-payload ACL flag.\n# The default should be 'clients' but since it currently affects cluster\n# resharding via MIGRATE, it is temporarily set to 'no' by default.\n#\n# sanitize-dump-payload no\n\n# The filename where to dump the DB\ndbfilename dump.rdb\n\n# Remove RDB files used by replication in instances without persistence\n# enabled. By default this option is disabled, however there are environments\n# where for regulations or other security concerns, RDB files persisted on\n# disk by masters in order to feed replicas, or stored on disk by replicas\n# in order to load them for the initial synchronization, should be deleted\n# ASAP. Note that this option ONLY WORKS in instances that have both AOF\n# and RDB persistence disabled, otherwise is completely ignored.\n#\n# An alternative (and sometimes better) way to obtain the same effect is\n# to use diskless replication on both master and replicas instances. However\n# in the case of replicas, diskless is not always an option.\nrdb-del-sync-files no\n\n# The working directory.\n#\n# The DB will be written inside this directory, with the filename specified\n# above using the 'dbfilename' configuration directive.\n#\n# The Append Only File will also be created inside this directory.\n#\n# Note that you must specify a directory here, not a file name.\ndir ./\n\n################################# REPLICATION #################################\n\n# Master-Replica replication. Use replicaof to make a Redis instance a copy of\n# another Redis server. A few things to understand ASAP about Redis replication.\n#\n#   +------------------+      +---------------+\n#   |      Master      | ---> |    Replica    |\n#   | (receive writes) |      |  (exact copy) |\n#   +------------------+      +---------------+\n#\n# 1) Redis replication is asynchronous, but you can configure a master to\n#    stop accepting writes if it appears to be not connected with at least\n#    a given number of replicas.\n# 2) Redis replicas are able to perform a partial resynchronization with the\n#    master if the replication link is lost for a relatively small amount of\n#    time. You may want to configure the replication backlog size (see the next\n#    sections of this file) with a sensible value depending on your needs.\n# 3) Replication is automatic and does not need user intervention. After a\n#    network partition replicas automatically try to reconnect to masters\n#    and resynchronize with them.\n#\n# replicaof <masterip> <masterport>\n\n# If the master is password protected (using the \"requirepass\" configuration\n# directive below) it is possible to tell the replica to authenticate before\n# starting the replication synchronization process, otherwise the master will\n# refuse the replica request.\n#\n# masterauth <master-password>\n#\n# However this is not enough if you are using Redis ACLs (for Redis version\n# 6 or greater), and the default user is not capable of running the PSYNC\n# command and/or other commands needed for replication. In this case it's\n# better to configure a special user to use with replication, and specify the\n# masteruser configuration as such:\n#\n# masteruser <username>\n#\n# When masteruser is specified, the replica will authenticate against its\n# master using the new AUTH form: AUTH <username> <password>.\n\n# When a replica loses its connection with the master, or when the replication\n# is still in progress, the replica can act in two different ways:\n#\n# 1) if replica-serve-stale-data is set to 'yes' (the default) the replica will\n#    still reply to client requests, possibly with out of date data, or the\n#    data set may just be empty if this is the first synchronization.\n#\n# 2) If replica-serve-stale-data is set to 'no' the replica will reply with\n#    an error \"SYNC with master in progress\" to all commands except:\n#    INFO, REPLICAOF, AUTH, PING, SHUTDOWN, REPLCONF, ROLE, CONFIG, SUBSCRIBE,\n#    UNSUBSCRIBE, PSUBSCRIBE, PUNSUBSCRIBE, PUBLISH, PUBSUB, COMMAND, POST,\n#    HOST and LATENCY.\n#\nreplica-serve-stale-data yes\n\n# You can configure a replica instance to accept writes or not. Writing against\n# a replica instance may be useful to store some ephemeral data (because data\n# written on a replica will be easily deleted after resync with the master) but\n# may also cause problems if clients are writing to it because of a\n# misconfiguration.\n#\n# Since Redis 2.6 by default replicas are read-only.\n#\n# Note: read only replicas are not designed to be exposed to untrusted clients\n# on the internet. It's just a protection layer against misuse of the instance.\n# Still a read only replica exports by default all the administrative commands\n# such as CONFIG, DEBUG, and so forth. To a limited extent you can improve\n# security of read only replicas using 'rename-command' to shadow all the\n# administrative / dangerous commands.\nreplica-read-only yes\n\n# Replication SYNC strategy: disk or socket.\n#\n# New replicas and reconnecting replicas that are not able to continue the\n# replication process just receiving differences, need to do what is called a\n# \"full synchronization\". An RDB file is transmitted from the master to the\n# replicas.\n#\n# The transmission can happen in two different ways:\n#\n# 1) Disk-backed: The Redis master creates a new process that writes the RDB\n#                 file on disk. Later the file is transferred by the parent\n#                 process to the replicas incrementally.\n# 2) Diskless: The Redis master creates a new process that directly writes the\n#              RDB file to replica sockets, without touching the disk at all.\n#\n# With disk-backed replication, while the RDB file is generated, more replicas\n# can be queued and served with the RDB file as soon as the current child\n# producing the RDB file finishes its work. With diskless replication instead\n# once the transfer starts, new replicas arriving will be queued and a new\n# transfer will start when the current one terminates.\n#\n# When diskless replication is used, the master waits a configurable amount of\n# time (in seconds) before starting the transfer in the hope that multiple\n# replicas will arrive and the transfer can be parallelized.\n#\n# With slow disks and fast (large bandwidth) networks, diskless replication\n# works better.\nrepl-diskless-sync no\n\n# When diskless replication is enabled, it is possible to configure the delay\n# the server waits in order to spawn the child that transfers the RDB via socket\n# to the replicas.\n#\n# This is important since once the transfer starts, it is not possible to serve\n# new replicas arriving, that will be queued for the next RDB transfer, so the\n# server waits a delay in order to let more replicas arrive.\n#\n# The delay is specified in seconds, and by default is 5 seconds. To disable\n# it entirely just set it to 0 seconds and the transfer will start ASAP.\nrepl-diskless-sync-delay 5\n\n# -----------------------------------------------------------------------------\n# WARNING: RDB diskless load is experimental. Since in this setup the replica\n# does not immediately store an RDB on disk, it may cause data loss during\n# failovers. RDB diskless load + Redis modules not handling I/O reads may also\n# cause Redis to abort in case of I/O errors during the initial synchronization\n# stage with the master. Use only if you know what you are doing.\n# -----------------------------------------------------------------------------\n#\n# Replica can load the RDB it reads from the replication link directly from the\n# socket, or store the RDB to a file and read that file after it was completely\n# received from the master.\n#\n# In many cases the disk is slower than the network, and storing and loading\n# the RDB file may increase replication time (and even increase the master's\n# Copy on Write memory and salve buffers).\n# However, parsing the RDB file directly from the socket may mean that we have\n# to flush the contents of the current database before the full rdb was\n# received. For this reason we have the following options:\n#\n# \"disabled\"    - Don't use diskless load (store the rdb file to the disk first)\n# \"on-empty-db\" - Use diskless load only when it is completely safe.\n# \"swapdb\"      - Keep a copy of the current db contents in RAM while parsing\n#                 the data directly from the socket. note that this requires\n#                 sufficient memory, if you don't have it, you risk an OOM kill.\nrepl-diskless-load disabled\n\n# Replicas send PINGs to server in a predefined interval. It's possible to\n# change this interval with the repl_ping_replica_period option. The default\n# value is 10 seconds.\n#\n# repl-ping-replica-period 10\n\n# The following option sets the replication timeout for:\n#\n# 1) Bulk transfer I/O during SYNC, from the point of view of replica.\n# 2) Master timeout from the point of view of replicas (data, pings).\n# 3) Replica timeout from the point of view of masters (REPLCONF ACK pings).\n#\n# It is important to make sure that this value is greater than the value\n# specified for repl-ping-replica-period otherwise a timeout will be detected\n# every time there is low traffic between the master and the replica. The default\n# value is 60 seconds.\n#\n# repl-timeout 60\n\n# Disable TCP_NODELAY on the replica socket after SYNC?\n#\n# If you select \"yes\" Redis will use a smaller number of TCP packets and\n# less bandwidth to send data to replicas. But this can add a delay for\n# the data to appear on the replica side, up to 40 milliseconds with\n# Linux kernels using a default configuration.\n#\n# If you select \"no\" the delay for data to appear on the replica side will\n# be reduced but more bandwidth will be used for replication.\n#\n# By default we optimize for low latency, but in very high traffic conditions\n# or when the master and replicas are many hops away, turning this to \"yes\" may\n# be a good idea.\nrepl-disable-tcp-nodelay no\n\n# Set the replication backlog size. The backlog is a buffer that accumulates\n# replica data when replicas are disconnected for some time, so that when a\n# replica wants to reconnect again, often a full resync is not needed, but a\n# partial resync is enough, just passing the portion of data the replica\n# missed while disconnected.\n#\n# The bigger the replication backlog, the longer the replica can endure the\n# disconnect and later be able to perform a partial resynchronization.\n#\n# The backlog is only allocated if there is at least one replica connected.\n#\n# repl-backlog-size 1mb\n\n# After a master has no connected replicas for some time, the backlog will be\n# freed. The following option configures the amount of seconds that need to\n# elapse, starting from the time the last replica disconnected, for the backlog\n# buffer to be freed.\n#\n# Note that replicas never free the backlog for timeout, since they may be\n# promoted to masters later, and should be able to correctly \"partially\n# resynchronize\" with other replicas: hence they should always accumulate backlog.\n#\n# A value of 0 means to never release the backlog.\n#\n# repl-backlog-ttl 3600\n\n# The replica priority is an integer number published by Redis in the INFO\n# output. It is used by Redis Sentinel in order to select a replica to promote\n# into a master if the master is no longer working correctly.\n#\n# A replica with a low priority number is considered better for promotion, so\n# for instance if there are three replicas with priority 10, 100, 25 Sentinel\n# will pick the one with priority 10, that is the lowest.\n#\n# However a special priority of 0 marks the replica as not able to perform the\n# role of master, so a replica with priority of 0 will never be selected by\n# Redis Sentinel for promotion.\n#\n# By default the priority is 100.\nreplica-priority 100\n\n# -----------------------------------------------------------------------------\n# By default, Redis Sentinel includes all replicas in its reports. A replica\n# can be excluded from Redis Sentinel's announcements. An unannounced replica\n# will be ignored by the 'sentinel replicas <master>' command and won't be\n# exposed to Redis Sentinel's clients.\n#\n# This option does not change the behavior of replica-priority. Even with\n# replica-announced set to 'no', the replica can be promoted to master. To\n# prevent this behavior, set replica-priority to 0.\n#\n# replica-announced yes\n\n# It is possible for a master to stop accepting writes if there are less than\n# N replicas connected, having a lag less or equal than M seconds.\n#\n# The N replicas need to be in \"online\" state.\n#\n# The lag in seconds, that must be <= the specified value, is calculated from\n# the last ping received from the replica, that is usually sent every second.\n#\n# This option does not GUARANTEE that N replicas will accept the write, but\n# will limit the window of exposure for lost writes in case not enough replicas\n# are available, to the specified number of seconds.\n#\n# For example to require at least 3 replicas with a lag <= 10 seconds use:\n#\n# min-replicas-to-write 3\n# min-replicas-max-lag 10\n#\n# Setting one or the other to 0 disables the feature.\n#\n# By default min-replicas-to-write is set to 0 (feature disabled) and\n# min-replicas-max-lag is set to 10.\n\n# A Redis master is able to list the address and port of the attached\n# replicas in different ways. For example the \"INFO replication\" section\n# offers this information, which is used, among other tools, by\n# Redis Sentinel in order to discover replica instances.\n# Another place where this info is available is in the output of the\n# \"ROLE\" command of a master.\n#\n# The listed IP address and port normally reported by a replica is\n# obtained in the following way:\n#\n#   IP: The address is auto detected by checking the peer address\n#   of the socket used by the replica to connect with the master.\n#\n#   Port: The port is communicated by the replica during the replication\n#   handshake, and is normally the port that the replica is using to\n#   listen for connections.\n#\n# However when port forwarding or Network Address Translation (NAT) is\n# used, the replica may actually be reachable via different IP and port\n# pairs. The following two options can be used by a replica in order to\n# report to its master a specific set of IP and port, so that both INFO\n# and ROLE will report those values.\n#\n# There is no need to use both the options if you need to override just\n# the port or the IP address.\n#\n# replica-announce-ip 5.5.5.5\n# replica-announce-port 1234\n\n############################### KEYS TRACKING #################################\n\n# Redis implements server assisted support for client side caching of values.\n# This is implemented using an invalidation table that remembers, using\n# a radix key indexed by key name, what clients have which keys. In turn\n# this is used in order to send invalidation messages to clients. Please\n# check this page to understand more about the feature:\n#\n#   https://redis.io/topics/client-side-caching\n#\n# When tracking is enabled for a client, all the read only queries are assumed\n# to be cached: this will force Redis to store information in the invalidation\n# table. When keys are modified, such information is flushed away, and\n# invalidation messages are sent to the clients. However if the workload is\n# heavily dominated by reads, Redis could use more and more memory in order\n# to track the keys fetched by many clients.\n#\n# For this reason it is possible to configure a maximum fill value for the\n# invalidation table. By default it is set to 1M of keys, and once this limit\n# is reached, Redis will start to evict keys in the invalidation table\n# even if they were not modified, just to reclaim memory: this will in turn\n# force the clients to invalidate the cached values. Basically the table\n# maximum size is a trade off between the memory you want to spend server\n# side to track information about who cached what, and the ability of clients\n# to retain cached objects in memory.\n#\n# If you set the value to 0, it means there are no limits, and Redis will\n# retain as many keys as needed in the invalidation table.\n# In the \"stats\" INFO section, you can find information about the number of\n# keys in the invalidation table at every given moment.\n#\n# Note: when key tracking is used in broadcasting mode, no memory is used\n# in the server side so this setting is useless.\n#\n# tracking-table-max-keys 1000000\n\n################################## SECURITY ###################################\n\n# Warning: since Redis is pretty fast, an outside user can try up to\n# 1 million passwords per second against a modern box. This means that you\n# should use very strong passwords, otherwise they will be very easy to break.\n# Note that because the password is really a shared secret between the client\n# and the server, and should not be memorized by any human, the password\n# can be easily a long string from /dev/urandom or whatever, so by using a\n# long and unguessable password no brute force attack will be possible.\n\n# Redis ACL users are defined in the following format:\n#\n#   user <username> ... acl rules ...\n#\n# For example:\n#\n#   user worker +@list +@connection ~jobs:* on >ffa9203c493aa99\n#\n# The special username \"default\" is used for new connections. If this user\n# has the \"nopass\" rule, then new connections will be immediately authenticated\n# as the \"default\" user without the need of any password provided via the\n# AUTH command. Otherwise if the \"default\" user is not flagged with \"nopass\"\n# the connections will start in not authenticated state, and will require\n# AUTH (or the HELLO command AUTH option) in order to be authenticated and\n# start to work.\n#\n# The ACL rules that describe what a user can do are the following:\n#\n#  on           Enable the user: it is possible to authenticate as this user.\n#  off          Disable the user: it's no longer possible to authenticate\n#               with this user, however the already authenticated connections\n#               will still work.\n#  skip-sanitize-payload    RESTORE dump-payload sanitation is skipped.\n#  sanitize-payload         RESTORE dump-payload is sanitized (default).\n#  +<command>   Allow the execution of that command\n#  -<command>   Disallow the execution of that command\n#  +@<category> Allow the execution of all the commands in such category\n#               with valid categories are like @admin, @set, @sortedset, ...\n#               and so forth, see the full list in the server.c file where\n#               the Redis command table is described and defined.\n#               The special category @all means all the commands, but currently\n#               present in the server, and that will be loaded in the future\n#               via modules.\n#  +<command>|subcommand    Allow a specific subcommand of an otherwise\n#                           disabled command. Note that this form is not\n#                           allowed as negative like -DEBUG|SEGFAULT, but\n#                           only additive starting with \"+\".\n#  allcommands  Alias for +@all. Note that it implies the ability to execute\n#               all the future commands loaded via the modules system.\n#  nocommands   Alias for -@all.\n#  ~<pattern>   Add a pattern of keys that can be mentioned as part of\n#               commands. For instance ~* allows all the keys. The pattern\n#               is a glob-style pattern like the one of KEYS.\n#               It is possible to specify multiple patterns.\n#  allkeys      Alias for ~*\n#  resetkeys    Flush the list of allowed keys patterns.\n#  &<pattern>   Add a glob-style pattern of Pub/Sub channels that can be\n#               accessed by the user. It is possible to specify multiple channel\n#               patterns.\n#  allchannels  Alias for &*\n#  resetchannels            Flush the list of allowed channel patterns.\n#  ><password>  Add this password to the list of valid password for the user.\n#               For example >mypass will add \"mypass\" to the list.\n#               This directive clears the \"nopass\" flag (see later).\n#  <<password>  Remove this password from the list of valid passwords.\n#  nopass       All the set passwords of the user are removed, and the user\n#               is flagged as requiring no password: it means that every\n#               password will work against this user. If this directive is\n#               used for the default user, every new connection will be\n#               immediately authenticated with the default user without\n#               any explicit AUTH command required. Note that the \"resetpass\"\n#               directive will clear this condition.\n#  resetpass    Flush the list of allowed passwords. Moreover removes the\n#               \"nopass\" status. After \"resetpass\" the user has no associated\n#               passwords and there is no way to authenticate without adding\n#               some password (or setting it as \"nopass\" later).\n#  reset        Performs the following actions: resetpass, resetkeys, off,\n#               -@all. The user returns to the same state it has immediately\n#               after its creation.\n#\n# ACL rules can be specified in any order: for instance you can start with\n# passwords, then flags, or key patterns. However note that the additive\n# and subtractive rules will CHANGE MEANING depending on the ordering.\n# For instance see the following example:\n#\n#   user alice on +@all -DEBUG ~* >somepassword\n#\n# This will allow \"alice\" to use all the commands with the exception of the\n# DEBUG command, since +@all added all the commands to the set of the commands\n# alice can use, and later DEBUG was removed. However if we invert the order\n# of two ACL rules the result will be different:\n#\n#   user alice on -DEBUG +@all ~* >somepassword\n#\n# Now DEBUG was removed when alice had yet no commands in the set of allowed\n# commands, later all the commands are added, so the user will be able to\n# execute everything.\n#\n# Basically ACL rules are processed left-to-right.\n#\n# For more information about ACL configuration please refer to\n# the Redis web site at https://redis.io/topics/acl\n\n# ACL LOG\n#\n# The ACL Log tracks failed commands and authentication events associated\n# with ACLs. The ACL Log is useful to troubleshoot failed commands blocked \n# by ACLs. The ACL Log is stored in memory. You can reclaim memory with \n# ACL LOG RESET. Define the maximum entry length of the ACL Log below.\nacllog-max-len 128\n\n# Using an external ACL file\n#\n# Instead of configuring users here in this file, it is possible to use\n# a stand-alone file just listing users. The two methods cannot be mixed:\n# if you configure users here and at the same time you activate the external\n# ACL file, the server will refuse to start.\n#\n# The format of the external ACL user file is exactly the same as the\n# format that is used inside redis.conf to describe users.\n#\n# aclfile /etc/redis/users.acl\n\n# IMPORTANT NOTE: starting with Redis 6 \"requirepass\" is just a compatibility\n# layer on top of the new ACL system. The option effect will be just setting\n# the password for the default user. Clients will still authenticate using\n# AUTH <password> as usually, or more explicitly with AUTH default <password>\n# if they follow the new protocol: both will work.\n#\n# The requirepass is not compatable with aclfile option and the ACL LOAD\n# command, these will cause requirepass to be ignored.\n#\nrequirepass huangge1199\n\n# New users are initialized with restrictive permissions by default, via the\n# equivalent of this ACL rule 'off resetkeys -@all'. Starting with Redis 6.2, it\n# is possible to manage access to Pub/Sub channels with ACL rules as well. The\n# default Pub/Sub channels permission if new users is controlled by the \n# acl-pubsub-default configuration directive, which accepts one of these values:\n#\n# allchannels: grants access to all Pub/Sub channels\n# resetchannels: revokes access to all Pub/Sub channels\n#\n# To ensure backward compatibility while upgrading Redis 6.0, acl-pubsub-default\n# defaults to the 'allchannels' permission.\n#\n# Future compatibility note: it is very likely that in a future version of Redis\n# the directive's default of 'allchannels' will be changed to 'resetchannels' in\n# order to provide better out-of-the-box Pub/Sub security. Therefore, it is\n# recommended that you explicitly define Pub/Sub permissions for all users\n# rather then rely on implicit default values. Once you've set explicit\n# Pub/Sub for all existing users, you should uncomment the following line.\n#\n# acl-pubsub-default resetchannels\n\n# Command renaming (DEPRECATED).\n#\n# ------------------------------------------------------------------------\n# WARNING: avoid using this option if possible. Instead use ACLs to remove\n# commands from the default user, and put them only in some admin user you\n# create for administrative purposes.\n# ------------------------------------------------------------------------\n#\n# It is possible to change the name of dangerous commands in a shared\n# environment. For instance the CONFIG command may be renamed into something\n# hard to guess so that it will still be available for internal-use tools\n# but not available for general clients.\n#\n# Example:\n#\n# rename-command CONFIG b840fc02d524045429941cc15f59e41cb7be6c52\n#\n# It is also possible to completely kill a command by renaming it into\n# an empty string:\n#\n# rename-command CONFIG \"\"\n#\n# Please note that changing the name of commands that are logged into the\n# AOF file or transmitted to replicas may cause problems.\n\n################################### CLIENTS ####################################\n\n# Set the max number of connected clients at the same time. By default\n# this limit is set to 10000 clients, however if the Redis server is not\n# able to configure the process file limit to allow for the specified limit\n# the max number of allowed clients is set to the current file limit\n# minus 32 (as Redis reserves a few file descriptors for internal uses).\n#\n# Once the limit is reached Redis will close all the new connections sending\n# an error 'max number of clients reached'.\n#\n# IMPORTANT: When Redis Cluster is used, the max number of connections is also\n# shared with the cluster bus: every node in the cluster will use two\n# connections, one incoming and another outgoing. It is important to size the\n# limit accordingly in case of very large clusters.\n#\n# maxclients 10000\n\n############################## MEMORY MANAGEMENT ################################\n\n# Set a memory usage limit to the specified amount of bytes.\n# When the memory limit is reached Redis will try to remove keys\n# according to the eviction policy selected (see maxmemory-policy).\n#\n# If Redis can't remove keys according to the policy, or if the policy is\n# set to 'noeviction', Redis will start to reply with errors to commands\n# that would use more memory, like SET, LPUSH, and so on, and will continue\n# to reply to read-only commands like GET.\n#\n# This option is usually useful when using Redis as an LRU or LFU cache, or to\n# set a hard memory limit for an instance (using the 'noeviction' policy).\n#\n# WARNING: If you have replicas attached to an instance with maxmemory on,\n# the size of the output buffers needed to feed the replicas are subtracted\n# from the used memory count, so that network problems / resyncs will\n# not trigger a loop where keys are evicted, and in turn the output\n# buffer of replicas is full with DELs of keys evicted triggering the deletion\n# of more keys, and so forth until the database is completely emptied.\n#\n# In short... if you have replicas attached it is suggested that you set a lower\n# limit for maxmemory so that there is some free RAM on the system for replica\n# output buffers (but this is not needed if the policy is 'noeviction').\n#\n# maxmemory <bytes>\n\n# MAXMEMORY POLICY: how Redis will select what to remove when maxmemory\n# is reached. You can select one from the following behaviors:\n#\n# volatile-lru -> Evict using approximated LRU, only keys with an expire set.\n# allkeys-lru -> Evict any key using approximated LRU.\n# volatile-lfu -> Evict using approximated LFU, only keys with an expire set.\n# allkeys-lfu -> Evict any key using approximated LFU.\n# volatile-random -> Remove a random key having an expire set.\n# allkeys-random -> Remove a random key, any key.\n# volatile-ttl -> Remove the key with the nearest expire time (minor TTL)\n# noeviction -> Don't evict anything, just return an error on write operations.\n#\n# LRU means Least Recently Used\n# LFU means Least Frequently Used\n#\n# Both LRU, LFU and volatile-ttl are implemented using approximated\n# randomized algorithms.\n#\n# Note: with any of the above policies, when there are no suitable keys for\n# eviction, Redis will return an error on write operations that require\n# more memory. These are usually commands that create new keys, add data or\n# modify existing keys. A few examples are: SET, INCR, HSET, LPUSH, SUNIONSTORE,\n# SORT (due to the STORE argument), and EXEC (if the transaction includes any\n# command that requires memory).\n#\n# The default is:\n#\n# maxmemory-policy noeviction\n\n# LRU, LFU and minimal TTL algorithms are not precise algorithms but approximated\n# algorithms (in order to save memory), so you can tune it for speed or\n# accuracy. By default Redis will check five keys and pick the one that was\n# used least recently, you can change the sample size using the following\n# configuration directive.\n#\n# The default of 5 produces good enough results. 10 Approximates very closely\n# true LRU but costs more CPU. 3 is faster but not very accurate.\n#\n# maxmemory-samples 5\n\n# Eviction processing is designed to function well with the default setting.\n# If there is an unusually large amount of write traffic, this value may need to\n# be increased.  Decreasing this value may reduce latency at the risk of \n# eviction processing effectiveness\n#   0 = minimum latency, 10 = default, 100 = process without regard to latency\n#\n# maxmemory-eviction-tenacity 10\n\n# Starting from Redis 5, by default a replica will ignore its maxmemory setting\n# (unless it is promoted to master after a failover or manually). It means\n# that the eviction of keys will be just handled by the master, sending the\n# DEL commands to the replica as keys evict in the master side.\n#\n# This behavior ensures that masters and replicas stay consistent, and is usually\n# what you want, however if your replica is writable, or you want the replica\n# to have a different memory setting, and you are sure all the writes performed\n# to the replica are idempotent, then you may change this default (but be sure\n# to understand what you are doing).\n#\n# Note that since the replica by default does not evict, it may end using more\n# memory than the one set via maxmemory (there are certain buffers that may\n# be larger on the replica, or data structures may sometimes take more memory\n# and so forth). So make sure you monitor your replicas and make sure they\n# have enough memory to never hit a real out-of-memory condition before the\n# master hits the configured maxmemory setting.\n#\n# replica-ignore-maxmemory yes\n\n# Redis reclaims expired keys in two ways: upon access when those keys are\n# found to be expired, and also in background, in what is called the\n# \"active expire key\". The key space is slowly and interactively scanned\n# looking for expired keys to reclaim, so that it is possible to free memory\n# of keys that are expired and will never be accessed again in a short time.\n#\n# The default effort of the expire cycle will try to avoid having more than\n# ten percent of expired keys still in memory, and will try to avoid consuming\n# more than 25% of total memory and to add latency to the system. However\n# it is possible to increase the expire \"effort\" that is normally set to\n# \"1\", to a greater value, up to the value \"10\". At its maximum value the\n# system will use more CPU, longer cycles (and technically may introduce\n# more latency), and will tolerate less already expired keys still present\n# in the system. It's a tradeoff between memory, CPU and latency.\n#\n# active-expire-effort 1\n\n############################# LAZY FREEING ####################################\n\n# Redis has two primitives to delete keys. One is called DEL and is a blocking\n# deletion of the object. It means that the server stops processing new commands\n# in order to reclaim all the memory associated with an object in a synchronous\n# way. If the key deleted is associated with a small object, the time needed\n# in order to execute the DEL command is very small and comparable to most other\n# O(1) or O(log_N) commands in Redis. However if the key is associated with an\n# aggregated value containing millions of elements, the server can block for\n# a long time (even seconds) in order to complete the operation.\n#\n# For the above reasons Redis also offers non blocking deletion primitives\n# such as UNLINK (non blocking DEL) and the ASYNC option of FLUSHALL and\n# FLUSHDB commands, in order to reclaim memory in background. Those commands\n# are executed in constant time. Another thread will incrementally free the\n# object in the background as fast as possible.\n#\n# DEL, UNLINK and ASYNC option of FLUSHALL and FLUSHDB are user-controlled.\n# It's up to the design of the application to understand when it is a good\n# idea to use one or the other. However the Redis server sometimes has to\n# delete keys or flush the whole database as a side effect of other operations.\n# Specifically Redis deletes objects independently of a user call in the\n# following scenarios:\n#\n# 1) On eviction, because of the maxmemory and maxmemory policy configurations,\n#    in order to make room for new data, without going over the specified\n#    memory limit.\n# 2) Because of expire: when a key with an associated time to live (see the\n#    EXPIRE command) must be deleted from memory.\n# 3) Because of a side effect of a command that stores data on a key that may\n#    already exist. For example the RENAME command may delete the old key\n#    content when it is replaced with another one. Similarly SUNIONSTORE\n#    or SORT with STORE option may delete existing keys. The SET command\n#    itself removes any old content of the specified key in order to replace\n#    it with the specified string.\n# 4) During replication, when a replica performs a full resynchronization with\n#    its master, the content of the whole database is removed in order to\n#    load the RDB file just transferred.\n#\n# In all the above cases the default is to delete objects in a blocking way,\n# like if DEL was called. However you can configure each case specifically\n# in order to instead release memory in a non-blocking way like if UNLINK\n# was called, using the following configuration directives.\n\nlazyfree-lazy-eviction no\nlazyfree-lazy-expire no\nlazyfree-lazy-server-del no\nreplica-lazy-flush no\n\n# It is also possible, for the case when to replace the user code DEL calls\n# with UNLINK calls is not easy, to modify the default behavior of the DEL\n# command to act exactly like UNLINK, using the following configuration\n# directive:\n\nlazyfree-lazy-user-del no\n\n# FLUSHDB, FLUSHALL, and SCRIPT FLUSH support both asynchronous and synchronous\n# deletion, which can be controlled by passing the [SYNC|ASYNC] flags into the\n# commands. When neither flag is passed, this directive will be used to determine\n# if the data should be deleted asynchronously.\n\nlazyfree-lazy-user-flush no\n\n################################ THREADED I/O #################################\n\n# Redis is mostly single threaded, however there are certain threaded\n# operations such as UNLINK, slow I/O accesses and other things that are\n# performed on side threads.\n#\n# Now it is also possible to handle Redis clients socket reads and writes\n# in different I/O threads. Since especially writing is so slow, normally\n# Redis users use pipelining in order to speed up the Redis performances per\n# core, and spawn multiple instances in order to scale more. Using I/O\n# threads it is possible to easily speedup two times Redis without resorting\n# to pipelining nor sharding of the instance.\n#\n# By default threading is disabled, we suggest enabling it only in machines\n# that have at least 4 or more cores, leaving at least one spare core.\n# Using more than 8 threads is unlikely to help much. We also recommend using\n# threaded I/O only if you actually have performance problems, with Redis\n# instances being able to use a quite big percentage of CPU time, otherwise\n# there is no point in using this feature.\n#\n# So for instance if you have a four cores boxes, try to use 2 or 3 I/O\n# threads, if you have a 8 cores, try to use 6 threads. In order to\n# enable I/O threads use the following configuration directive:\n#\n# io-threads 4\n#\n# Setting io-threads to 1 will just use the main thread as usual.\n# When I/O threads are enabled, we only use threads for writes, that is\n# to thread the write(2) syscall and transfer the client buffers to the\n# socket. However it is also possible to enable threading of reads and\n# protocol parsing using the following configuration directive, by setting\n# it to yes:\n#\n# io-threads-do-reads no\n#\n# Usually threading reads doesn't help much.\n#\n# NOTE 1: This configuration directive cannot be changed at runtime via\n# CONFIG SET. Aso this feature currently does not work when SSL is\n# enabled.\n#\n# NOTE 2: If you want to test the Redis speedup using redis-benchmark, make\n# sure you also run the benchmark itself in threaded mode, using the\n# --threads option to match the number of Redis threads, otherwise you'll not\n# be able to notice the improvements.\n\n############################ KERNEL OOM CONTROL ##############################\n\n# On Linux, it is possible to hint the kernel OOM killer on what processes\n# should be killed first when out of memory.\n#\n# Enabling this feature makes Redis actively control the oom_score_adj value\n# for all its processes, depending on their role. The default scores will\n# attempt to have background child processes killed before all others, and\n# replicas killed before masters.\n#\n# Redis supports three options:\n#\n# no:       Don't make changes to oom-score-adj (default).\n# yes:      Alias to \"relative\" see below.\n# absolute: Values in oom-score-adj-values are written as is to the kernel.\n# relative: Values are used relative to the initial value of oom_score_adj when\n#           the server starts and are then clamped to a range of -1000 to 1000.\n#           Because typically the initial value is 0, they will often match the\n#           absolute values.\noom-score-adj no\n\n# When oom-score-adj is used, this directive controls the specific values used\n# for master, replica and background child processes. Values range -2000 to\n# 2000 (higher means more likely to be killed).\n#\n# Unprivileged processes (not root, and without CAP_SYS_RESOURCE capabilities)\n# can freely increase their value, but not decrease it below its initial\n# settings. This means that setting oom-score-adj to \"relative\" and setting the\n# oom-score-adj-values to positive values will always succeed.\noom-score-adj-values 0 200 800\n\n\n#################### KERNEL transparent hugepage CONTROL ######################\n\n# Usually the kernel Transparent Huge Pages control is set to \"madvise\" or\n# or \"never\" by default (/sys/kernel/mm/transparent_hugepage/enabled), in which\n# case this config has no effect. On systems in which it is set to \"always\",\n# redis will attempt to disable it specifically for the redis process in order\n# to avoid latency problems specifically with fork(2) and CoW.\n# If for some reason you prefer to keep it enabled, you can set this config to\n# \"no\" and the kernel global to \"always\".\n\ndisable-thp yes\n\n############################## APPEND ONLY MODE ###############################\n\n# By default Redis asynchronously dumps the dataset on disk. This mode is\n# good enough in many applications, but an issue with the Redis process or\n# a power outage may result into a few minutes of writes lost (depending on\n# the configured save points).\n#\n# The Append Only File is an alternative persistence mode that provides\n# much better durability. For instance using the default data fsync policy\n# (see later in the config file) Redis can lose just one second of writes in a\n# dramatic event like a server power outage, or a single write if something\n# wrong with the Redis process itself happens, but the operating system is\n# still running correctly.\n#\n# AOF and RDB persistence can be enabled at the same time without problems.\n# If the AOF is enabled on startup Redis will load the AOF, that is the file\n# with the better durability guarantees.\n#\n# Please check https://redis.io/topics/persistence for more information.\n\nappendonly no\n\n# The name of the append only file (default: \"appendonly.aof\")\n\nappendfilename \"appendonly.aof\"\n\n# The fsync() call tells the Operating System to actually write data on disk\n# instead of waiting for more data in the output buffer. Some OS will really flush\n# data on disk, some other OS will just try to do it ASAP.\n#\n# Redis supports three different modes:\n#\n# no: don't fsync, just let the OS flush the data when it wants. Faster.\n# always: fsync after every write to the append only log. Slow, Safest.\n# everysec: fsync only one time every second. Compromise.\n#\n# The default is \"everysec\", as that's usually the right compromise between\n# speed and data safety. It's up to you to understand if you can relax this to\n# \"no\" that will let the operating system flush the output buffer when\n# it wants, for better performances (but if you can live with the idea of\n# some data loss consider the default persistence mode that's snapshotting),\n# or on the contrary, use \"always\" that's very slow but a bit safer than\n# everysec.\n#\n# More details please check the following article:\n# http://antirez.com/post/redis-persistence-demystified.html\n#\n# If unsure, use \"everysec\".\n\n# appendfsync always\nappendfsync everysec\n# appendfsync no\n\n# When the AOF fsync policy is set to always or everysec, and a background\n# saving process (a background save or AOF log background rewriting) is\n# performing a lot of I/O against the disk, in some Linux configurations\n# Redis may block too long on the fsync() call. Note that there is no fix for\n# this currently, as even performing fsync in a different thread will block\n# our synchronous write(2) call.\n#\n# In order to mitigate this problem it's possible to use the following option\n# that will prevent fsync() from being called in the main process while a\n# BGSAVE or BGREWRITEAOF is in progress.\n#\n# This means that while another child is saving, the durability of Redis is\n# the same as \"appendfsync none\". In practical terms, this means that it is\n# possible to lose up to 30 seconds of log in the worst scenario (with the\n# default Linux settings).\n#\n# If you have latency problems turn this to \"yes\". Otherwise leave it as\n# \"no\" that is the safest pick from the point of view of durability.\n\nno-appendfsync-on-rewrite no\n\n# Automatic rewrite of the append only file.\n# Redis is able to automatically rewrite the log file implicitly calling\n# BGREWRITEAOF when the AOF log size grows by the specified percentage.\n#\n# This is how it works: Redis remembers the size of the AOF file after the\n# latest rewrite (if no rewrite has happened since the restart, the size of\n# the AOF at startup is used).\n#\n# This base size is compared to the current size. If the current size is\n# bigger than the specified percentage, the rewrite is triggered. Also\n# you need to specify a minimal size for the AOF file to be rewritten, this\n# is useful to avoid rewriting the AOF file even if the percentage increase\n# is reached but it is still pretty small.\n#\n# Specify a percentage of zero in order to disable the automatic AOF\n# rewrite feature.\n\nauto-aof-rewrite-percentage 100\nauto-aof-rewrite-min-size 64mb\n\n# An AOF file may be found to be truncated at the end during the Redis\n# startup process, when the AOF data gets loaded back into memory.\n# This may happen when the system where Redis is running\n# crashes, especially when an ext4 filesystem is mounted without the\n# data=ordered option (however this can't happen when Redis itself\n# crashes or aborts but the operating system still works correctly).\n#\n# Redis can either exit with an error when this happens, or load as much\n# data as possible (the default now) and start if the AOF file is found\n# to be truncated at the end. The following option controls this behavior.\n#\n# If aof-load-truncated is set to yes, a truncated AOF file is loaded and\n# the Redis server starts emitting a log to inform the user of the event.\n# Otherwise if the option is set to no, the server aborts with an error\n# and refuses to start. When the option is set to no, the user requires\n# to fix the AOF file using the \"redis-check-aof\" utility before to restart\n# the server.\n#\n# Note that if the AOF file will be found to be corrupted in the middle\n# the server will still exit with an error. This option only applies when\n# Redis will try to read more data from the AOF file but not enough bytes\n# will be found.\naof-load-truncated yes\n\n# When rewriting the AOF file, Redis is able to use an RDB preamble in the\n# AOF file for faster rewrites and recoveries. When this option is turned\n# on the rewritten AOF file is composed of two different stanzas:\n#\n#   [RDB file][AOF tail]\n#\n# When loading, Redis recognizes that the AOF file starts with the \"REDIS\"\n# string and loads the prefixed RDB file, then continues loading the AOF\n# tail.\naof-use-rdb-preamble yes\n\n################################ LUA SCRIPTING  ###############################\n\n# Max execution time of a Lua script in milliseconds.\n#\n# If the maximum execution time is reached Redis will log that a script is\n# still in execution after the maximum allowed time and will start to\n# reply to queries with an error.\n#\n# When a long running script exceeds the maximum execution time only the\n# SCRIPT KILL and SHUTDOWN NOSAVE commands are available. The first can be\n# used to stop a script that did not yet call any write commands. The second\n# is the only way to shut down the server in the case a write command was\n# already issued by the script but the user doesn't want to wait for the natural\n# termination of the script.\n#\n# Set it to 0 or a negative value for unlimited execution without warnings.\nlua-time-limit 5000\n\n################################ REDIS CLUSTER  ###############################\n\n# Normal Redis instances can't be part of a Redis Cluster; only nodes that are\n# started as cluster nodes can. In order to start a Redis instance as a\n# cluster node enable the cluster support uncommenting the following:\n#\n# cluster-enabled yes\n\n# Every cluster node has a cluster configuration file. This file is not\n# intended to be edited by hand. It is created and updated by Redis nodes.\n# Every Redis Cluster node requires a different cluster configuration file.\n# Make sure that instances running in the same system do not have\n# overlapping cluster configuration file names.\n#\n# cluster-config-file nodes-6379.conf\n\n# Cluster node timeout is the amount of milliseconds a node must be unreachable\n# for it to be considered in failure state.\n# Most other internal time limits are a multiple of the node timeout.\n#\n# cluster-node-timeout 15000\n\n# A replica of a failing master will avoid to start a failover if its data\n# looks too old.\n#\n# There is no simple way for a replica to actually have an exact measure of\n# its \"data age\", so the following two checks are performed:\n#\n# 1) If there are multiple replicas able to failover, they exchange messages\n#    in order to try to give an advantage to the replica with the best\n#    replication offset (more data from the master processed).\n#    Replicas will try to get their rank by offset, and apply to the start\n#    of the failover a delay proportional to their rank.\n#\n# 2) Every single replica computes the time of the last interaction with\n#    its master. This can be the last ping or command received (if the master\n#    is still in the \"connected\" state), or the time that elapsed since the\n#    disconnection with the master (if the replication link is currently down).\n#    If the last interaction is too old, the replica will not try to failover\n#    at all.\n#\n# The point \"2\" can be tuned by user. Specifically a replica will not perform\n# the failover if, since the last interaction with the master, the time\n# elapsed is greater than:\n#\n#   (node-timeout * cluster-replica-validity-factor) + repl-ping-replica-period\n#\n# So for example if node-timeout is 30 seconds, and the cluster-replica-validity-factor\n# is 10, and assuming a default repl-ping-replica-period of 10 seconds, the\n# replica will not try to failover if it was not able to talk with the master\n# for longer than 310 seconds.\n#\n# A large cluster-replica-validity-factor may allow replicas with too old data to failover\n# a master, while a too small value may prevent the cluster from being able to\n# elect a replica at all.\n#\n# For maximum availability, it is possible to set the cluster-replica-validity-factor\n# to a value of 0, which means, that replicas will always try to failover the\n# master regardless of the last time they interacted with the master.\n# (However they'll always try to apply a delay proportional to their\n# offset rank).\n#\n# Zero is the only value able to guarantee that when all the partitions heal\n# the cluster will always be able to continue.\n#\n# cluster-replica-validity-factor 10\n\n# Cluster replicas are able to migrate to orphaned masters, that are masters\n# that are left without working replicas. This improves the cluster ability\n# to resist to failures as otherwise an orphaned master can't be failed over\n# in case of failure if it has no working replicas.\n#\n# Replicas migrate to orphaned masters only if there are still at least a\n# given number of other working replicas for their old master. This number\n# is the \"migration barrier\". A migration barrier of 1 means that a replica\n# will migrate only if there is at least 1 other working replica for its master\n# and so forth. It usually reflects the number of replicas you want for every\n# master in your cluster.\n#\n# Default is 1 (replicas migrate only if their masters remain with at least\n# one replica). To disable migration just set it to a very large value or\n# set cluster-allow-replica-migration to 'no'.\n# A value of 0 can be set but is useful only for debugging and dangerous\n# in production.\n#\n# cluster-migration-barrier 1\n\n# Turning off this option allows to use less automatic cluster configuration.\n# It both disables migration to orphaned masters and migration from masters\n# that became empty.\n#\n# Default is 'yes' (allow automatic migrations).\n#\n# cluster-allow-replica-migration yes\n\n# By default Redis Cluster nodes stop accepting queries if they detect there\n# is at least a hash slot uncovered (no available node is serving it).\n# This way if the cluster is partially down (for example a range of hash slots\n# are no longer covered) all the cluster becomes, eventually, unavailable.\n# It automatically returns available as soon as all the slots are covered again.\n#\n# However sometimes you want the subset of the cluster which is working,\n# to continue to accept queries for the part of the key space that is still\n# covered. In order to do so, just set the cluster-require-full-coverage\n# option to no.\n#\n# cluster-require-full-coverage yes\n\n# This option, when set to yes, prevents replicas from trying to failover its\n# master during master failures. However the replica can still perform a\n# manual failover, if forced to do so.\n#\n# This is useful in different scenarios, especially in the case of multiple\n# data center operations, where we want one side to never be promoted if not\n# in the case of a total DC failure.\n#\n# cluster-replica-no-failover no\n\n# This option, when set to yes, allows nodes to serve read traffic while the\n# the cluster is in a down state, as long as it believes it owns the slots. \n#\n# This is useful for two cases.  The first case is for when an application \n# doesn't require consistency of data during node failures or network partitions.\n# One example of this is a cache, where as long as the node has the data it\n# should be able to serve it. \n#\n# The second use case is for configurations that don't meet the recommended  \n# three shards but want to enable cluster mode and scale later. A \n# master outage in a 1 or 2 shard configuration causes a read/write outage to the\n# entire cluster without this option set, with it set there is only a write outage.\n# Without a quorum of masters, slot ownership will not change automatically. \n#\n# cluster-allow-reads-when-down no\n\n# In order to setup your cluster make sure to read the documentation\n# available at https://redis.io web site.\n\n########################## CLUSTER DOCKER/NAT support  ########################\n\n# In certain deployments, Redis Cluster nodes address discovery fails, because\n# addresses are NAT-ted or because ports are forwarded (the typical case is\n# Docker and other containers).\n#\n# In order to make Redis Cluster working in such environments, a static\n# configuration where each node knows its public address is needed. The\n# following four options are used for this scope, and are:\n#\n# * cluster-announce-ip\n# * cluster-announce-port\n# * cluster-announce-tls-port\n# * cluster-announce-bus-port\n#\n# Each instructs the node about its address, client ports (for connections\n# without and with TLS) and cluster message bus port. The information is then\n# published in the header of the bus packets so that other nodes will be able to\n# correctly map the address of the node publishing the information.\n#\n# If cluster-tls is set to yes and cluster-announce-tls-port is omitted or set\n# to zero, then cluster-announce-port refers to the TLS port. Note also that\n# cluster-announce-tls-port has no effect if cluster-tls is set to no.\n#\n# If the above options are not used, the normal Redis Cluster auto-detection\n# will be used instead.\n#\n# Note that when remapped, the bus port may not be at the fixed offset of\n# clients port + 10000, so you can specify any port and bus-port depending\n# on how they get remapped. If the bus-port is not set, a fixed offset of\n# 10000 will be used as usual.\n#\n# Example:\n#\n# cluster-announce-ip 10.1.1.5\n# cluster-announce-tls-port 6379\n# cluster-announce-port 0\n# cluster-announce-bus-port 6380\n\n################################## SLOW LOG ###################################\n\n# The Redis Slow Log is a system to log queries that exceeded a specified\n# execution time. The execution time does not include the I/O operations\n# like talking with the client, sending the reply and so forth,\n# but just the time needed to actually execute the command (this is the only\n# stage of command execution where the thread is blocked and can not serve\n# other requests in the meantime).\n#\n# You can configure the slow log with two parameters: one tells Redis\n# what is the execution time, in microseconds, to exceed in order for the\n# command to get logged, and the other parameter is the length of the\n# slow log. When a new command is logged the oldest one is removed from the\n# queue of logged commands.\n\n# The following time is expressed in microseconds, so 1000000 is equivalent\n# to one second. Note that a negative number disables the slow log, while\n# a value of zero forces the logging of every command.\nslowlog-log-slower-than 10000\n\n# There is no limit to this length. Just be aware that it will consume memory.\n# You can reclaim memory used by the slow log with SLOWLOG RESET.\nslowlog-max-len 128\n\n################################ LATENCY MONITOR ##############################\n\n# The Redis latency monitoring subsystem samples different operations\n# at runtime in order to collect data related to possible sources of\n# latency of a Redis instance.\n#\n# Via the LATENCY command this information is available to the user that can\n# print graphs and obtain reports.\n#\n# The system only logs operations that were performed in a time equal or\n# greater than the amount of milliseconds specified via the\n# latency-monitor-threshold configuration directive. When its value is set\n# to zero, the latency monitor is turned off.\n#\n# By default latency monitoring is disabled since it is mostly not needed\n# if you don't have latency issues, and collecting data has a performance\n# impact, that while very small, can be measured under big load. Latency\n# monitoring can easily be enabled at runtime using the command\n# \"CONFIG SET latency-monitor-threshold <milliseconds>\" if needed.\nlatency-monitor-threshold 0\n\n############################# EVENT NOTIFICATION ##############################\n\n# Redis can notify Pub/Sub clients about events happening in the key space.\n# This feature is documented at https://redis.io/topics/notifications\n#\n# For instance if keyspace events notification is enabled, and a client\n# performs a DEL operation on key \"foo\" stored in the Database 0, two\n# messages will be published via Pub/Sub:\n#\n# PUBLISH __keyspace@0__:foo del\n# PUBLISH __keyevent@0__:del foo\n#\n# It is possible to select the events that Redis will notify among a set\n# of classes. Every class is identified by a single character:\n#\n#  K     Keyspace events, published with __keyspace@<db>__ prefix.\n#  E     Keyevent events, published with __keyevent@<db>__ prefix.\n#  g     Generic commands (non-type specific) like DEL, EXPIRE, RENAME, ...\n#  $     String commands\n#  l     List commands\n#  s     Set commands\n#  h     Hash commands\n#  z     Sorted set commands\n#  x     Expired events (events generated every time a key expires)\n#  e     Evicted events (events generated when a key is evicted for maxmemory)\n#  t     Stream commands\n#  d     Module key type events\n#  m     Key-miss events (Note: It is not included in the 'A' class)\n#  A     Alias for g$lshzxetd, so that the \"AKE\" string means all the events\n#        (Except key-miss events which are excluded from 'A' due to their\n#         unique nature).\n#\n#  The \"notify-keyspace-events\" takes as argument a string that is composed\n#  of zero or multiple characters. The empty string means that notifications\n#  are disabled.\n#\n#  Example: to enable list and generic events, from the point of view of the\n#           event name, use:\n#\n#  notify-keyspace-events Elg\n#\n#  Example 2: to get the stream of the expired keys subscribing to channel\n#             name __keyevent@0__:expired use:\n#\n#  notify-keyspace-events Ex\n#\n#  By default all notifications are disabled because most users don't need\n#  this feature and the feature has some overhead. Note that if you don't\n#  specify at least one of K or E, no events will be delivered.\nnotify-keyspace-events \"\"\n\n############################### GOPHER SERVER #################################\n\n# Redis contains an implementation of the Gopher protocol, as specified in\n# the RFC 1436 (https://www.ietf.org/rfc/rfc1436.txt).\n#\n# The Gopher protocol was very popular in the late '90s. It is an alternative\n# to the web, and the implementation both server and client side is so simple\n# that the Redis server has just 100 lines of code in order to implement this\n# support.\n#\n# What do you do with Gopher nowadays? Well Gopher never *really* died, and\n# lately there is a movement in order for the Gopher more hierarchical content\n# composed of just plain text documents to be resurrected. Some want a simpler\n# internet, others believe that the mainstream internet became too much\n# controlled, and it's cool to create an alternative space for people that\n# want a bit of fresh air.\n#\n# Anyway for the 10nth birthday of the Redis, we gave it the Gopher protocol\n# as a gift.\n#\n# --- HOW IT WORKS? ---\n#\n# The Redis Gopher support uses the inline protocol of Redis, and specifically\n# two kind of inline requests that were anyway illegal: an empty request\n# or any request that starts with \"/\" (there are no Redis commands starting\n# with such a slash). Normal RESP2/RESP3 requests are completely out of the\n# path of the Gopher protocol implementation and are served as usual as well.\n#\n# If you open a connection to Redis when Gopher is enabled and send it\n# a string like \"/foo\", if there is a key named \"/foo\" it is served via the\n# Gopher protocol.\n#\n# In order to create a real Gopher \"hole\" (the name of a Gopher site in Gopher\n# talking), you likely need a script like the following:\n#\n#   https://github.com/antirez/gopher2redis\n#\n# --- SECURITY WARNING ---\n#\n# If you plan to put Redis on the internet in a publicly accessible address\n# to server Gopher pages MAKE SURE TO SET A PASSWORD to the instance.\n# Once a password is set:\n#\n#   1. The Gopher server (when enabled, not by default) will still serve\n#      content via Gopher.\n#   2. However other commands cannot be called before the client will\n#      authenticate.\n#\n# So use the 'requirepass' option to protect your instance.\n#\n# Note that Gopher is not currently supported when 'io-threads-do-reads'\n# is enabled.\n#\n# To enable Gopher support, uncomment the following line and set the option\n# from no (the default) to yes.\n#\n# gopher-enabled no\n\n############################### ADVANCED CONFIG ###############################\n\n# Hashes are encoded using a memory efficient data structure when they have a\n# small number of entries, and the biggest entry does not exceed a given\n# threshold. These thresholds can be configured using the following directives.\nhash-max-ziplist-entries 512\nhash-max-ziplist-value 64\n\n# Lists are also encoded in a special way to save a lot of space.\n# The number of entries allowed per internal list node can be specified\n# as a fixed maximum size or a maximum number of elements.\n# For a fixed maximum size, use -5 through -1, meaning:\n# -5: max size: 64 Kb  <-- not recommended for normal workloads\n# -4: max size: 32 Kb  <-- not recommended\n# -3: max size: 16 Kb  <-- probably not recommended\n# -2: max size: 8 Kb   <-- good\n# -1: max size: 4 Kb   <-- good\n# Positive numbers mean store up to _exactly_ that number of elements\n# per list node.\n# The highest performing option is usually -2 (8 Kb size) or -1 (4 Kb size),\n# but if your use case is unique, adjust the settings as necessary.\nlist-max-ziplist-size -2\n\n# Lists may also be compressed.\n# Compress depth is the number of quicklist ziplist nodes from *each* side of\n# the list to *exclude* from compression.  The head and tail of the list\n# are always uncompressed for fast push/pop operations.  Settings are:\n# 0: disable all list compression\n# 1: depth 1 means \"don't start compressing until after 1 node into the list,\n#    going from either the head or tail\"\n#    So: [head]->node->node->...->node->[tail]\n#    [head], [tail] will always be uncompressed; inner nodes will compress.\n# 2: [head]->[next]->node->node->...->node->[prev]->[tail]\n#    2 here means: don't compress head or head->next or tail->prev or tail,\n#    but compress all nodes between them.\n# 3: [head]->[next]->[next]->node->node->...->node->[prev]->[prev]->[tail]\n# etc.\nlist-compress-depth 0\n\n# Sets have a special encoding in just one case: when a set is composed\n# of just strings that happen to be integers in radix 10 in the range\n# of 64 bit signed integers.\n# The following configuration setting sets the limit in the size of the\n# set in order to use this special memory saving encoding.\nset-max-intset-entries 512\n\n# Similarly to hashes and lists, sorted sets are also specially encoded in\n# order to save a lot of space. This encoding is only used when the length and\n# elements of a sorted set are below the following limits:\nzset-max-ziplist-entries 128\nzset-max-ziplist-value 64\n\n# HyperLogLog sparse representation bytes limit. The limit includes the\n# 16 bytes header. When an HyperLogLog using the sparse representation crosses\n# this limit, it is converted into the dense representation.\n#\n# A value greater than 16000 is totally useless, since at that point the\n# dense representation is more memory efficient.\n#\n# The suggested value is ~ 3000 in order to have the benefits of\n# the space efficient encoding without slowing down too much PFADD,\n# which is O(N) with the sparse encoding. The value can be raised to\n# ~ 10000 when CPU is not a concern, but space is, and the data set is\n# composed of many HyperLogLogs with cardinality in the 0 - 15000 range.\nhll-sparse-max-bytes 3000\n\n# Streams macro node max size / items. The stream data structure is a radix\n# tree of big nodes that encode multiple items inside. Using this configuration\n# it is possible to configure how big a single node can be in bytes, and the\n# maximum number of items it may contain before switching to a new node when\n# appending new stream entries. If any of the following settings are set to\n# zero, the limit is ignored, so for instance it is possible to set just a\n# max entries limit by setting max-bytes to 0 and max-entries to the desired\n# value.\nstream-node-max-bytes 4096\nstream-node-max-entries 100\n\n# Active rehashing uses 1 millisecond every 100 milliseconds of CPU time in\n# order to help rehashing the main Redis hash table (the one mapping top-level\n# keys to values). The hash table implementation Redis uses (see dict.c)\n# performs a lazy rehashing: the more operation you run into a hash table\n# that is rehashing, the more rehashing \"steps\" are performed, so if the\n# server is idle the rehashing is never complete and some more memory is used\n# by the hash table.\n#\n# The default is to use this millisecond 10 times every second in order to\n# actively rehash the main dictionaries, freeing memory when possible.\n#\n# If unsure:\n# use \"activerehashing no\" if you have hard latency requirements and it is\n# not a good thing in your environment that Redis can reply from time to time\n# to queries with 2 milliseconds delay.\n#\n# use \"activerehashing yes\" if you don't have such hard requirements but\n# want to free memory asap when possible.\nactiverehashing yes\n\n# The client output buffer limits can be used to force disconnection of clients\n# that are not reading data from the server fast enough for some reason (a\n# common reason is that a Pub/Sub client can't consume messages as fast as the\n# publisher can produce them).\n#\n# The limit can be set differently for the three different classes of clients:\n#\n# normal -> normal clients including MONITOR clients\n# replica  -> replica clients\n# pubsub -> clients subscribed to at least one pubsub channel or pattern\n#\n# The syntax of every client-output-buffer-limit directive is the following:\n#\n# client-output-buffer-limit <class> <hard limit> <soft limit> <soft seconds>\n#\n# A client is immediately disconnected once the hard limit is reached, or if\n# the soft limit is reached and remains reached for the specified number of\n# seconds (continuously).\n# So for instance if the hard limit is 32 megabytes and the soft limit is\n# 16 megabytes / 10 seconds, the client will get disconnected immediately\n# if the size of the output buffers reach 32 megabytes, but will also get\n# disconnected if the client reaches 16 megabytes and continuously overcomes\n# the limit for 10 seconds.\n#\n# By default normal clients are not limited because they don't receive data\n# without asking (in a push way), but just after a request, so only\n# asynchronous clients may create a scenario where data is requested faster\n# than it can read.\n#\n# Instead there is a default limit for pubsub and replica clients, since\n# subscribers and replicas receive data in a push fashion.\n#\n# Both the hard or the soft limit can be disabled by setting them to zero.\nclient-output-buffer-limit normal 0 0 0\nclient-output-buffer-limit replica 256mb 64mb 60\nclient-output-buffer-limit pubsub 32mb 8mb 60\n\n# Client query buffers accumulate new commands. They are limited to a fixed\n# amount by default in order to avoid that a protocol desynchronization (for\n# instance due to a bug in the client) will lead to unbound memory usage in\n# the query buffer. However you can configure it here if you have very special\n# needs, such us huge multi/exec requests or alike.\n#\n# client-query-buffer-limit 1gb\n\n# In the Redis protocol, bulk requests, that are, elements representing single\n# strings, are normally limited to 512 mb. However you can change this limit\n# here, but must be 1mb or greater\n#\n# proto-max-bulk-len 512mb\n\n# Redis calls an internal function to perform many background tasks, like\n# closing connections of clients in timeout, purging expired keys that are\n# never requested, and so forth.\n#\n# Not all tasks are performed with the same frequency, but Redis checks for\n# tasks to perform according to the specified \"hz\" value.\n#\n# By default \"hz\" is set to 10. Raising the value will use more CPU when\n# Redis is idle, but at the same time will make Redis more responsive when\n# there are many keys expiring at the same time, and timeouts may be\n# handled with more precision.\n#\n# The range is between 1 and 500, however a value over 100 is usually not\n# a good idea. Most users should use the default of 10 and raise this up to\n# 100 only in environments where very low latency is required.\nhz 10\n\n# Normally it is useful to have an HZ value which is proportional to the\n# number of clients connected. This is useful in order, for instance, to\n# avoid too many clients are processed for each background task invocation\n# in order to avoid latency spikes.\n#\n# Since the default HZ value by default is conservatively set to 10, Redis\n# offers, and enables by default, the ability to use an adaptive HZ value\n# which will temporarily raise when there are many connected clients.\n#\n# When dynamic HZ is enabled, the actual configured HZ will be used\n# as a baseline, but multiples of the configured HZ value will be actually\n# used as needed once more clients are connected. In this way an idle\n# instance will use very little CPU time while a busy instance will be\n# more responsive.\ndynamic-hz yes\n\n# When a child rewrites the AOF file, if the following option is enabled\n# the file will be fsync-ed every 32 MB of data generated. This is useful\n# in order to commit the file to the disk more incrementally and avoid\n# big latency spikes.\naof-rewrite-incremental-fsync yes\n\n# When redis saves RDB file, if the following option is enabled\n# the file will be fsync-ed every 32 MB of data generated. This is useful\n# in order to commit the file to the disk more incrementally and avoid\n# big latency spikes.\nrdb-save-incremental-fsync yes\n\n# Redis LFU eviction (see maxmemory setting) can be tuned. However it is a good\n# idea to start with the default settings and only change them after investigating\n# how to improve the performances and how the keys LFU change over time, which\n# is possible to inspect via the OBJECT FREQ command.\n#\n# There are two tunable parameters in the Redis LFU implementation: the\n# counter logarithm factor and the counter decay time. It is important to\n# understand what the two parameters mean before changing them.\n#\n# The LFU counter is just 8 bits per key, it's maximum value is 255, so Redis\n# uses a probabilistic increment with logarithmic behavior. Given the value\n# of the old counter, when a key is accessed, the counter is incremented in\n# this way:\n#\n# 1. A random number R between 0 and 1 is extracted.\n# 2. A probability P is calculated as 1/(old_value*lfu_log_factor+1).\n# 3. The counter is incremented only if R < P.\n#\n# The default lfu-log-factor is 10. This is a table of how the frequency\n# counter changes with a different number of accesses with different\n# logarithmic factors:\n#\n# +--------+------------+------------+------------+------------+------------+\n# | factor | 100 hits   | 1000 hits  | 100K hits  | 1M hits    | 10M hits   |\n# +--------+------------+------------+------------+------------+------------+\n# | 0      | 104        | 255        | 255        | 255        | 255        |\n# +--------+------------+------------+------------+------------+------------+\n# | 1      | 18         | 49         | 255        | 255        | 255        |\n# +--------+------------+------------+------------+------------+------------+\n# | 10     | 10         | 18         | 142        | 255        | 255        |\n# +--------+------------+------------+------------+------------+------------+\n# | 100    | 8          | 11         | 49         | 143        | 255        |\n# +--------+------------+------------+------------+------------+------------+\n#\n# NOTE: The above table was obtained by running the following commands:\n#\n#   redis-benchmark -n 1000000 incr foo\n#   redis-cli object freq foo\n#\n# NOTE 2: The counter initial value is 5 in order to give new objects a chance\n# to accumulate hits.\n#\n# The counter decay time is the time, in minutes, that must elapse in order\n# for the key counter to be divided by two (or decremented if it has a value\n# less <= 10).\n#\n# The default value for the lfu-decay-time is 1. A special value of 0 means to\n# decay the counter every time it happens to be scanned.\n#\n# lfu-log-factor 10\n# lfu-decay-time 1\n\n########################### ACTIVE DEFRAGMENTATION #######################\n#\n# What is active defragmentation?\n# -------------------------------\n#\n# Active (online) defragmentation allows a Redis server to compact the\n# spaces left between small allocations and deallocations of data in memory,\n# thus allowing to reclaim back memory.\n#\n# Fragmentation is a natural process that happens with every allocator (but\n# less so with Jemalloc, fortunately) and certain workloads. Normally a server\n# restart is needed in order to lower the fragmentation, or at least to flush\n# away all the data and create it again. However thanks to this feature\n# implemented by Oran Agra for Redis 4.0 this process can happen at runtime\n# in a \"hot\" way, while the server is running.\n#\n# Basically when the fragmentation is over a certain level (see the\n# configuration options below) Redis will start to create new copies of the\n# values in contiguous memory regions by exploiting certain specific Jemalloc\n# features (in order to understand if an allocation is causing fragmentation\n# and to allocate it in a better place), and at the same time, will release the\n# old copies of the data. This process, repeated incrementally for all the keys\n# will cause the fragmentation to drop back to normal values.\n#\n# Important things to understand:\n#\n# 1. This feature is disabled by default, and only works if you compiled Redis\n#    to use the copy of Jemalloc we ship with the source code of Redis.\n#    This is the default with Linux builds.\n#\n# 2. You never need to enable this feature if you don't have fragmentation\n#    issues.\n#\n# 3. Once you experience fragmentation, you can enable this feature when\n#    needed with the command \"CONFIG SET activedefrag yes\".\n#\n# The configuration parameters are able to fine tune the behavior of the\n# defragmentation process. If you are not sure about what they mean it is\n# a good idea to leave the defaults untouched.\n\n# Enabled active defragmentation\n# activedefrag no\n\n# Minimum amount of fragmentation waste to start active defrag\n# active-defrag-ignore-bytes 100mb\n\n# Minimum percentage of fragmentation to start active defrag\n# active-defrag-threshold-lower 10\n\n# Maximum percentage of fragmentation at which we use maximum effort\n# active-defrag-threshold-upper 100\n\n# Minimal effort for defrag in CPU percentage, to be used when the lower\n# threshold is reached\n# active-defrag-cycle-min 1\n\n# Maximal effort for defrag in CPU percentage, to be used when the upper\n# threshold is reached\n# active-defrag-cycle-max 25\n\n# Maximum number of set/hash/zset/list fields that will be processed from\n# the main dictionary scan\n# active-defrag-max-scan-fields 1000\n\n# Jemalloc background thread for purging will be enabled by default\njemalloc-bg-thread yes\n\n# It is possible to pin different threads and processes of Redis to specific\n# CPUs in your system, in order to maximize the performances of the server.\n# This is useful both in order to pin different Redis threads in different\n# CPUs, but also in order to make sure that multiple Redis instances running\n# in the same host will be pinned to different CPUs.\n#\n# Normally you can do this using the \"taskset\" command, however it is also\n# possible to this via Redis configuration directly, both in Linux and FreeBSD.\n#\n# You can pin the server/IO threads, bio threads, aof rewrite child process, and\n# the bgsave child process. The syntax to specify the cpu list is the same as\n# the taskset command:\n#\n# Set redis server/io threads to cpu affinity 0,2,4,6:\n# server_cpulist 0-7:2\n#\n# Set bio threads to cpu affinity 1,3:\n# bio_cpulist 1,3\n#\n# Set aof rewrite child process to cpu affinity 8,9,10,11:\n# aof_rewrite_cpulist 8-11\n#\n# Set bgsave child process to cpu affinity 1,10,11\n# bgsave_cpulist 1,10-11\n\n# In some cases redis will emit warnings and even refuse to start if it detects\n# that the system is in bad state, it is possible to suppress these warnings\n# by setting the following config which takes a space delimited list of warnings\n# to suppress\n#\n# ignore-warnings ARM64-COW-BUG\n```\n\n# 5、启动Redis容器\n\n执行命令启动redis容器：\n\n```shell\ndocker-compose up -d\n```\n\n![](2022-04-24-17-10-52-image.png)\n\n# 6、远程连接验证结果\n\n信息填完，点击OK\n\n![](2022-04-24-17-12-56-image.png)\n\n点击左侧对呀的连接，右侧出现redis服务器信息则为安装成功\n\n![](2022-04-24-17-14-15-image.png)\n","slug":"iRedisByDC","published":1,"updated":"2022-06-03T06:00:55.565Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl42z5h6z003f3gn61xgv7tc1","content":"<h1>1、拉取镜像</h1>\n<p>执行下面的命令拉取redis的docker镜像</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">docker pull redis</code></pre>\n<p><img src=\"2022-04-24-16-57-51-image.png\" alt=\"\"></p>\n<h1>2、编写docker-compose.yml文件</h1>\n<p>内容如下：</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\">version: &#39;3&#39;\nservices:\n  redis:\n    restart: always\n    image: redis\n    container_name: redis\n    ports:\n      - 50020:6379\n    environment:\n      TZ: Asia&#x2F;Shanghai\n    volumes:\n      - .&#x2F;data:&#x2F;data\n      - .&#x2F;conf&#x2F;redis.conf:&#x2F;etc&#x2F;redis.conf\n    privileged: true</code></pre>\n<h1>3、创建目录文件</h1>\n<p>根据docker-compose.yml文件创建对应目录文件</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">pwd\nmkdir data\nmkdir conf\nll</code></pre>\n<p><img src=\"2022-04-24-17-04-13-image.png\" alt=\"\"></p>\n<h1>4、编写Redis的配置文件</h1>\n<p>在conf目录下创建redis.conf文件，文件内容如下：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\"># Redis configuration file example.\n#\n# Note that in order to read the configuration file, Redis must be\n# started with the file path as first argument:\n#\n# .&#x2F;redis-server &#x2F;path&#x2F;to&#x2F;redis.conf\n\n# Note on units: when memory size is needed, it is possible to specify\n# it in the usual form of 1k 5GB 4M and so forth:\n#\n# 1k &#x3D;&gt; 1000 bytes\n# 1kb &#x3D;&gt; 1024 bytes\n# 1m &#x3D;&gt; 1000000 bytes\n# 1mb &#x3D;&gt; 1024*1024 bytes\n# 1g &#x3D;&gt; 1000000000 bytes\n# 1gb &#x3D;&gt; 1024*1024*1024 bytes\n#\n# units are case insensitive so 1GB 1Gb 1gB are all the same.\n\n################################## INCLUDES ###################################\n\n# Include one or more other config files here.  This is useful if you\n# have a standard template that goes to all Redis servers but also need\n# to customize a few per-server settings.  Include files can include\n# other files, so use this wisely.\n#\n# Note that option &quot;include&quot; won&#39;t be rewritten by command &quot;CONFIG REWRITE&quot;\n# from admin or Redis Sentinel. Since Redis always uses the last processed\n# line as value of a configuration directive, you&#39;d better put includes\n# at the beginning of this file to avoid overwriting config change at runtime.\n#\n# If instead you are interested in using includes to override configuration\n# options, it is better to use include as the last line.\n#\n# include &#x2F;path&#x2F;to&#x2F;local.conf\n# include &#x2F;path&#x2F;to&#x2F;other.conf\n\n################################## MODULES #####################################\n\n# Load modules at startup. If the server is not able to load modules\n# it will abort. It is possible to use multiple loadmodule directives.\n#\n# loadmodule &#x2F;path&#x2F;to&#x2F;my_module.so\n# loadmodule &#x2F;path&#x2F;to&#x2F;other_module.so\n\n################################## NETWORK #####################################\n\n# By default, if no &quot;bind&quot; configuration directive is specified, Redis listens\n# for connections from all available network interfaces on the host machine.\n# It is possible to listen to just one or multiple selected interfaces using\n# the &quot;bind&quot; configuration directive, followed by one or more IP addresses.\n# Each address can be prefixed by &quot;-&quot;, which means that redis will not fail to\n# start if the address is not available. Being not available only refers to\n# addresses that does not correspond to any network interfece. Addresses that\n# are already in use will always fail, and unsupported protocols will always BE\n# silently skipped.\n#\n# Examples:\n#\n# bind 192.168.1.100 10.0.0.1     # listens on two specific IPv4 addresses\n# bind 127.0.0.1 ::1              # listens on loopback IPv4 and IPv6\n# bind * -::*                     # like the default, all available interfaces\n#\n# ~~~ WARNING ~~~ If the computer running Redis is directly exposed to the\n# internet, binding to all the interfaces is dangerous and will expose the\n# instance to everybody on the internet. So by default we uncomment the\n# following bind directive, that will force Redis to listen only on the\n# IPv4 and IPv6 (if available) loopback interface addresses (this means Redis\n# will only be able to accept client connections from the same host that it is\n# running on).\n#\n# IF YOU ARE SURE YOU WANT YOUR INSTANCE TO LISTEN TO ALL THE INTERFACES\n# JUST COMMENT OUT THE FOLLOWING LINE.\n# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n# bind 127.0.0.1 -::1\n\n# Protected mode is a layer of security protection, in order to avoid that\n# Redis instances left open on the internet are accessed and exploited.\n#\n# When protected mode is on and if:\n#\n# 1) The server is not binding explicitly to a set of addresses using the\n#    &quot;bind&quot; directive.\n# 2) No password is configured.\n#\n# The server only accepts connections from clients connecting from the\n# IPv4 and IPv6 loopback addresses 127.0.0.1 and ::1, and from Unix domain\n# sockets.\n#\n# By default protected mode is enabled. You should disable it only if\n# you are sure you want clients from other hosts to connect to Redis\n# even if no authentication is configured, nor a specific set of interfaces\n# are explicitly listed using the &quot;bind&quot; directive.\nprotected-mode no\n\n# Accept connections on the specified port, default is 6379 (IANA #815344).\n# If port 0 is specified Redis will not listen on a TCP socket.\nport 6379\n\n# TCP listen() backlog.\n#\n# In high requests-per-second environments you need a high backlog in order\n# to avoid slow clients connection issues. Note that the Linux kernel\n# will silently truncate it to the value of &#x2F;proc&#x2F;sys&#x2F;net&#x2F;core&#x2F;somaxconn so\n# make sure to raise both the value of somaxconn and tcp_max_syn_backlog\n# in order to get the desired effect.\ntcp-backlog 511\n\n# Unix socket.\n#\n# Specify the path for the Unix socket that will be used to listen for\n# incoming connections. There is no default, so Redis will not listen\n# on a unix socket when not specified.\n#\n# unixsocket &#x2F;run&#x2F;redis.sock\n# unixsocketperm 700\n\n# Close the connection after a client is idle for N seconds (0 to disable)\ntimeout 0\n\n# TCP keepalive.\n#\n# If non-zero, use SO_KEEPALIVE to send TCP ACKs to clients in absence\n# of communication. This is useful for two reasons:\n#\n# 1) Detect dead peers.\n# 2) Force network equipment in the middle to consider the connection to be\n#    alive.\n#\n# On Linux, the specified value (in seconds) is the period used to send ACKs.\n# Note that to close the connection the double of the time is needed.\n# On other kernels the period depends on the kernel configuration.\n#\n# A reasonable value for this option is 300 seconds, which is the new\n# Redis default starting with Redis 3.2.1.\ntcp-keepalive 300\n\n################################# TLS&#x2F;SSL #####################################\n\n# By default, TLS&#x2F;SSL is disabled. To enable it, the &quot;tls-port&quot; configuration\n# directive can be used to define TLS-listening ports. To enable TLS on the\n# default port, use:\n#\n# port 0\n# tls-port 6379\n\n# Configure a X.509 certificate and private key to use for authenticating the\n# server to connected clients, masters or cluster peers.  These files should be\n# PEM formatted.\n#\n# tls-cert-file redis.crt \n# tls-key-file redis.key\n#\n# If the key file is encrypted using a passphrase, it can be included here\n# as well.\n#\n# tls-key-file-pass secret\n\n# Normally Redis uses the same certificate for both server functions (accepting\n# connections) and client functions (replicating from a master, establishing\n# cluster bus connections, etc.).\n#\n# Sometimes certificates are issued with attributes that designate them as\n# client-only or server-only certificates. In that case it may be desired to use\n# different certificates for incoming (server) and outgoing (client)\n# connections. To do that, use the following directives:\n#\n# tls-client-cert-file client.crt\n# tls-client-key-file client.key\n#\n# If the key file is encrypted using a passphrase, it can be included here\n# as well.\n#\n# tls-client-key-file-pass secret\n\n# Configure a DH parameters file to enable Diffie-Hellman (DH) key exchange:\n#\n# tls-dh-params-file redis.dh\n\n# Configure a CA certificate(s) bundle or directory to authenticate TLS&#x2F;SSL\n# clients and peers.  Redis requires an explicit configuration of at least one\n# of these, and will not implicitly use the system wide configuration.\n#\n# tls-ca-cert-file ca.crt\n# tls-ca-cert-dir &#x2F;etc&#x2F;ssl&#x2F;certs\n\n# By default, clients (including replica servers) on a TLS port are required\n# to authenticate using valid client side certificates.\n#\n# If &quot;no&quot; is specified, client certificates are not required and not accepted.\n# If &quot;optional&quot; is specified, client certificates are accepted and must be\n# valid if provided, but are not required.\n#\n# tls-auth-clients no\n# tls-auth-clients optional\n\n# By default, a Redis replica does not attempt to establish a TLS connection\n# with its master.\n#\n# Use the following directive to enable TLS on replication links.\n#\n# tls-replication yes\n\n# By default, the Redis Cluster bus uses a plain TCP connection. To enable\n# TLS for the bus protocol, use the following directive:\n#\n# tls-cluster yes\n\n# By default, only TLSv1.2 and TLSv1.3 are enabled and it is highly recommended\n# that older formally deprecated versions are kept disabled to reduce the attack surface.\n# You can explicitly specify TLS versions to support.\n# Allowed values are case insensitive and include &quot;TLSv1&quot;, &quot;TLSv1.1&quot;, &quot;TLSv1.2&quot;,\n# &quot;TLSv1.3&quot; (OpenSSL &gt;&#x3D; 1.1.1) or any combination.\n# To enable only TLSv1.2 and TLSv1.3, use:\n#\n# tls-protocols &quot;TLSv1.2 TLSv1.3&quot;\n\n# Configure allowed ciphers.  See the ciphers(1ssl) manpage for more information\n# about the syntax of this string.\n#\n# Note: this configuration applies only to &lt;&#x3D; TLSv1.2.\n#\n# tls-ciphers DEFAULT:!MEDIUM\n\n# Configure allowed TLSv1.3 ciphersuites.  See the ciphers(1ssl) manpage for more\n# information about the syntax of this string, and specifically for TLSv1.3\n# ciphersuites.\n#\n# tls-ciphersuites TLS_CHACHA20_POLY1305_SHA256\n\n# When choosing a cipher, use the server&#39;s preference instead of the client\n# preference. By default, the server follows the client&#39;s preference.\n#\n# tls-prefer-server-ciphers yes\n\n# By default, TLS session caching is enabled to allow faster and less expensive\n# reconnections by clients that support it. Use the following directive to disable\n# caching.\n#\n# tls-session-caching no\n\n# Change the default number of TLS sessions cached. A zero value sets the cache\n# to unlimited size. The default size is 20480.\n#\n# tls-session-cache-size 5000\n\n# Change the default timeout of cached TLS sessions. The default timeout is 300\n# seconds.\n#\n# tls-session-cache-timeout 60\n\n################################# GENERAL #####################################\n\n# By default Redis does not run as a daemon. Use &#39;yes&#39; if you need it.\n# Note that Redis will write a pid file in &#x2F;var&#x2F;run&#x2F;redis.pid when daemonized.\n# When Redis is supervised by upstart or systemd, this parameter has no impact.\ndaemonize no\n\n# If you run Redis from upstart or systemd, Redis can interact with your\n# supervision tree. Options:\n#   supervised no      - no supervision interaction\n#   supervised upstart - signal upstart by putting Redis into SIGSTOP mode\n#                        requires &quot;expect stop&quot; in your upstart job config\n#   supervised systemd - signal systemd by writing READY&#x3D;1 to $NOTIFY_SOCKET\n#                        on startup, and updating Redis status on a regular\n#                        basis.\n#   supervised auto    - detect upstart or systemd method based on\n#                        UPSTART_JOB or NOTIFY_SOCKET environment variables\n# Note: these supervision methods only signal &quot;process is ready.&quot;\n#       They do not enable continuous pings back to your supervisor.\n#\n# The default is &quot;no&quot;. To run under upstart&#x2F;systemd, you can simply uncomment\n# the line below:\n#\n# supervised auto\n\n# If a pid file is specified, Redis writes it where specified at startup\n# and removes it at exit.\n#\n# When the server runs non daemonized, no pid file is created if none is\n# specified in the configuration. When the server is daemonized, the pid file\n# is used even if not specified, defaulting to &quot;&#x2F;var&#x2F;run&#x2F;redis.pid&quot;.\n#\n# Creating a pid file is best effort: if Redis is not able to create it\n# nothing bad happens, the server will start and run normally.\n#\n# Note that on modern Linux systems &quot;&#x2F;run&#x2F;redis.pid&quot; is more conforming\n# and should be used instead.\npidfile &#x2F;var&#x2F;run&#x2F;redis_6379.pid\n\n# Specify the server verbosity level.\n# This can be one of:\n# debug (a lot of information, useful for development&#x2F;testing)\n# verbose (many rarely useful info, but not a mess like the debug level)\n# notice (moderately verbose, what you want in production probably)\n# warning (only very important &#x2F; critical messages are logged)\nloglevel notice\n\n# Specify the log file name. Also the empty string can be used to force\n# Redis to log on the standard output. Note that if you use standard\n# output for logging but daemonize, logs will be sent to &#x2F;dev&#x2F;null\nlogfile &quot;&quot;\n\n# To enable logging to the system logger, just set &#39;syslog-enabled&#39; to yes,\n# and optionally update the other syslog parameters to suit your needs.\n# syslog-enabled no\n\n# Specify the syslog identity.\n# syslog-ident redis\n\n# Specify the syslog facility. Must be USER or between LOCAL0-LOCAL7.\n# syslog-facility local0\n\n# To disable the built in crash log, which will possibly produce cleaner core\n# dumps when they are needed, uncomment the following:\n#\n# crash-log-enabled no\n\n# To disable the fast memory check that&#39;s run as part of the crash log, which\n# will possibly let redis terminate sooner, uncomment the following:\n#\n# crash-memcheck-enabled no\n\n# Set the number of databases. The default database is DB 0, you can select\n# a different one on a per-connection basis using SELECT &lt;dbid&gt; where\n# dbid is a number between 0 and &#39;databases&#39;-1\ndatabases 16\n\n# By default Redis shows an ASCII art logo only when started to log to the\n# standard output and if the standard output is a TTY and syslog logging is\n# disabled. Basically this means that normally a logo is displayed only in\n# interactive sessions.\n#\n# However it is possible to force the pre-4.0 behavior and always show a\n# ASCII art logo in startup logs by setting the following option to yes.\nalways-show-logo no\n\n# By default, Redis modifies the process title (as seen in &#39;top&#39; and &#39;ps&#39;) to\n# provide some runtime information. It is possible to disable this and leave\n# the process name as executed by setting the following to no.\nset-proc-title yes\n\n# When changing the process title, Redis uses the following template to construct\n# the modified title.\n#\n# Template variables are specified in curly brackets. The following variables are\n# supported:\n#\n# &#123;title&#125;           Name of process as executed if parent, or type of child process.\n# &#123;listen-addr&#125;     Bind address or &#39;*&#39; followed by TCP or TLS port listening on, or\n#                   Unix socket if only that&#39;s available.\n# &#123;server-mode&#125;     Special mode, i.e. &quot;[sentinel]&quot; or &quot;[cluster]&quot;.\n# &#123;port&#125;            TCP port listening on, or 0.\n# &#123;tls-port&#125;        TLS port listening on, or 0.\n# &#123;unixsocket&#125;      Unix domain socket listening on, or &quot;&quot;.\n# &#123;config-file&#125;     Name of configuration file used.\n#\nproc-title-template &quot;&#123;title&#125; &#123;listen-addr&#125; &#123;server-mode&#125;&quot;\n\n################################ SNAPSHOTTING  ################################\n\n# Save the DB to disk.\n#\n# save &lt;seconds&gt; &lt;changes&gt;\n#\n# Redis will save the DB if both the given number of seconds and the given\n# number of write operations against the DB occurred.\n#\n# Snapshotting can be completely disabled with a single empty string argument\n# as in following example:\n#\n# save &quot;&quot;\n#\n# Unless specified otherwise, by default Redis will save the DB:\n#   * After 3600 seconds (an hour) if at least 1 key changed\n#   * After 300 seconds (5 minutes) if at least 100 keys changed\n#   * After 60 seconds if at least 10000 keys changed\n#\n# You can set these explicitly by uncommenting the three following lines.\n#\n# save 3600 1\n# save 300 100\n# save 60 10000\n\n# By default Redis will stop accepting writes if RDB snapshots are enabled\n# (at least one save point) and the latest background save failed.\n# This will make the user aware (in a hard way) that data is not persisting\n# on disk properly, otherwise chances are that no one will notice and some\n# disaster will happen.\n#\n# If the background saving process will start working again Redis will\n# automatically allow writes again.\n#\n# However if you have setup your proper monitoring of the Redis server\n# and persistence, you may want to disable this feature so that Redis will\n# continue to work as usual even if there are problems with disk,\n# permissions, and so forth.\nstop-writes-on-bgsave-error yes\n\n# Compress string objects using LZF when dump .rdb databases?\n# By default compression is enabled as it&#39;s almost always a win.\n# If you want to save some CPU in the saving child set it to &#39;no&#39; but\n# the dataset will likely be bigger if you have compressible values or keys.\nrdbcompression yes\n\n# Since version 5 of RDB a CRC64 checksum is placed at the end of the file.\n# This makes the format more resistant to corruption but there is a performance\n# hit to pay (around 10%) when saving and loading RDB files, so you can disable it\n# for maximum performances.\n#\n# RDB files created with checksum disabled have a checksum of zero that will\n# tell the loading code to skip the check.\nrdbchecksum yes\n\n# Enables or disables full sanitation checks for ziplist and listpack etc when\n# loading an RDB or RESTORE payload. This reduces the chances of a assertion or\n# crash later on while processing commands.\n# Options:\n#   no         - Never perform full sanitation\n#   yes        - Always perform full sanitation\n#   clients    - Perform full sanitation only for user connections.\n#                Excludes: RDB files, RESTORE commands received from the master\n#                connection, and client connections which have the\n#                skip-sanitize-payload ACL flag.\n# The default should be &#39;clients&#39; but since it currently affects cluster\n# resharding via MIGRATE, it is temporarily set to &#39;no&#39; by default.\n#\n# sanitize-dump-payload no\n\n# The filename where to dump the DB\ndbfilename dump.rdb\n\n# Remove RDB files used by replication in instances without persistence\n# enabled. By default this option is disabled, however there are environments\n# where for regulations or other security concerns, RDB files persisted on\n# disk by masters in order to feed replicas, or stored on disk by replicas\n# in order to load them for the initial synchronization, should be deleted\n# ASAP. Note that this option ONLY WORKS in instances that have both AOF\n# and RDB persistence disabled, otherwise is completely ignored.\n#\n# An alternative (and sometimes better) way to obtain the same effect is\n# to use diskless replication on both master and replicas instances. However\n# in the case of replicas, diskless is not always an option.\nrdb-del-sync-files no\n\n# The working directory.\n#\n# The DB will be written inside this directory, with the filename specified\n# above using the &#39;dbfilename&#39; configuration directive.\n#\n# The Append Only File will also be created inside this directory.\n#\n# Note that you must specify a directory here, not a file name.\ndir .&#x2F;\n\n################################# REPLICATION #################################\n\n# Master-Replica replication. Use replicaof to make a Redis instance a copy of\n# another Redis server. A few things to understand ASAP about Redis replication.\n#\n#   +------------------+      +---------------+\n#   |      Master      | ---&gt; |    Replica    |\n#   | (receive writes) |      |  (exact copy) |\n#   +------------------+      +---------------+\n#\n# 1) Redis replication is asynchronous, but you can configure a master to\n#    stop accepting writes if it appears to be not connected with at least\n#    a given number of replicas.\n# 2) Redis replicas are able to perform a partial resynchronization with the\n#    master if the replication link is lost for a relatively small amount of\n#    time. You may want to configure the replication backlog size (see the next\n#    sections of this file) with a sensible value depending on your needs.\n# 3) Replication is automatic and does not need user intervention. After a\n#    network partition replicas automatically try to reconnect to masters\n#    and resynchronize with them.\n#\n# replicaof &lt;masterip&gt; &lt;masterport&gt;\n\n# If the master is password protected (using the &quot;requirepass&quot; configuration\n# directive below) it is possible to tell the replica to authenticate before\n# starting the replication synchronization process, otherwise the master will\n# refuse the replica request.\n#\n# masterauth &lt;master-password&gt;\n#\n# However this is not enough if you are using Redis ACLs (for Redis version\n# 6 or greater), and the default user is not capable of running the PSYNC\n# command and&#x2F;or other commands needed for replication. In this case it&#39;s\n# better to configure a special user to use with replication, and specify the\n# masteruser configuration as such:\n#\n# masteruser &lt;username&gt;\n#\n# When masteruser is specified, the replica will authenticate against its\n# master using the new AUTH form: AUTH &lt;username&gt; &lt;password&gt;.\n\n# When a replica loses its connection with the master, or when the replication\n# is still in progress, the replica can act in two different ways:\n#\n# 1) if replica-serve-stale-data is set to &#39;yes&#39; (the default) the replica will\n#    still reply to client requests, possibly with out of date data, or the\n#    data set may just be empty if this is the first synchronization.\n#\n# 2) If replica-serve-stale-data is set to &#39;no&#39; the replica will reply with\n#    an error &quot;SYNC with master in progress&quot; to all commands except:\n#    INFO, REPLICAOF, AUTH, PING, SHUTDOWN, REPLCONF, ROLE, CONFIG, SUBSCRIBE,\n#    UNSUBSCRIBE, PSUBSCRIBE, PUNSUBSCRIBE, PUBLISH, PUBSUB, COMMAND, POST,\n#    HOST and LATENCY.\n#\nreplica-serve-stale-data yes\n\n# You can configure a replica instance to accept writes or not. Writing against\n# a replica instance may be useful to store some ephemeral data (because data\n# written on a replica will be easily deleted after resync with the master) but\n# may also cause problems if clients are writing to it because of a\n# misconfiguration.\n#\n# Since Redis 2.6 by default replicas are read-only.\n#\n# Note: read only replicas are not designed to be exposed to untrusted clients\n# on the internet. It&#39;s just a protection layer against misuse of the instance.\n# Still a read only replica exports by default all the administrative commands\n# such as CONFIG, DEBUG, and so forth. To a limited extent you can improve\n# security of read only replicas using &#39;rename-command&#39; to shadow all the\n# administrative &#x2F; dangerous commands.\nreplica-read-only yes\n\n# Replication SYNC strategy: disk or socket.\n#\n# New replicas and reconnecting replicas that are not able to continue the\n# replication process just receiving differences, need to do what is called a\n# &quot;full synchronization&quot;. An RDB file is transmitted from the master to the\n# replicas.\n#\n# The transmission can happen in two different ways:\n#\n# 1) Disk-backed: The Redis master creates a new process that writes the RDB\n#                 file on disk. Later the file is transferred by the parent\n#                 process to the replicas incrementally.\n# 2) Diskless: The Redis master creates a new process that directly writes the\n#              RDB file to replica sockets, without touching the disk at all.\n#\n# With disk-backed replication, while the RDB file is generated, more replicas\n# can be queued and served with the RDB file as soon as the current child\n# producing the RDB file finishes its work. With diskless replication instead\n# once the transfer starts, new replicas arriving will be queued and a new\n# transfer will start when the current one terminates.\n#\n# When diskless replication is used, the master waits a configurable amount of\n# time (in seconds) before starting the transfer in the hope that multiple\n# replicas will arrive and the transfer can be parallelized.\n#\n# With slow disks and fast (large bandwidth) networks, diskless replication\n# works better.\nrepl-diskless-sync no\n\n# When diskless replication is enabled, it is possible to configure the delay\n# the server waits in order to spawn the child that transfers the RDB via socket\n# to the replicas.\n#\n# This is important since once the transfer starts, it is not possible to serve\n# new replicas arriving, that will be queued for the next RDB transfer, so the\n# server waits a delay in order to let more replicas arrive.\n#\n# The delay is specified in seconds, and by default is 5 seconds. To disable\n# it entirely just set it to 0 seconds and the transfer will start ASAP.\nrepl-diskless-sync-delay 5\n\n# -----------------------------------------------------------------------------\n# WARNING: RDB diskless load is experimental. Since in this setup the replica\n# does not immediately store an RDB on disk, it may cause data loss during\n# failovers. RDB diskless load + Redis modules not handling I&#x2F;O reads may also\n# cause Redis to abort in case of I&#x2F;O errors during the initial synchronization\n# stage with the master. Use only if you know what you are doing.\n# -----------------------------------------------------------------------------\n#\n# Replica can load the RDB it reads from the replication link directly from the\n# socket, or store the RDB to a file and read that file after it was completely\n# received from the master.\n#\n# In many cases the disk is slower than the network, and storing and loading\n# the RDB file may increase replication time (and even increase the master&#39;s\n# Copy on Write memory and salve buffers).\n# However, parsing the RDB file directly from the socket may mean that we have\n# to flush the contents of the current database before the full rdb was\n# received. For this reason we have the following options:\n#\n# &quot;disabled&quot;    - Don&#39;t use diskless load (store the rdb file to the disk first)\n# &quot;on-empty-db&quot; - Use diskless load only when it is completely safe.\n# &quot;swapdb&quot;      - Keep a copy of the current db contents in RAM while parsing\n#                 the data directly from the socket. note that this requires\n#                 sufficient memory, if you don&#39;t have it, you risk an OOM kill.\nrepl-diskless-load disabled\n\n# Replicas send PINGs to server in a predefined interval. It&#39;s possible to\n# change this interval with the repl_ping_replica_period option. The default\n# value is 10 seconds.\n#\n# repl-ping-replica-period 10\n\n# The following option sets the replication timeout for:\n#\n# 1) Bulk transfer I&#x2F;O during SYNC, from the point of view of replica.\n# 2) Master timeout from the point of view of replicas (data, pings).\n# 3) Replica timeout from the point of view of masters (REPLCONF ACK pings).\n#\n# It is important to make sure that this value is greater than the value\n# specified for repl-ping-replica-period otherwise a timeout will be detected\n# every time there is low traffic between the master and the replica. The default\n# value is 60 seconds.\n#\n# repl-timeout 60\n\n# Disable TCP_NODELAY on the replica socket after SYNC?\n#\n# If you select &quot;yes&quot; Redis will use a smaller number of TCP packets and\n# less bandwidth to send data to replicas. But this can add a delay for\n# the data to appear on the replica side, up to 40 milliseconds with\n# Linux kernels using a default configuration.\n#\n# If you select &quot;no&quot; the delay for data to appear on the replica side will\n# be reduced but more bandwidth will be used for replication.\n#\n# By default we optimize for low latency, but in very high traffic conditions\n# or when the master and replicas are many hops away, turning this to &quot;yes&quot; may\n# be a good idea.\nrepl-disable-tcp-nodelay no\n\n# Set the replication backlog size. The backlog is a buffer that accumulates\n# replica data when replicas are disconnected for some time, so that when a\n# replica wants to reconnect again, often a full resync is not needed, but a\n# partial resync is enough, just passing the portion of data the replica\n# missed while disconnected.\n#\n# The bigger the replication backlog, the longer the replica can endure the\n# disconnect and later be able to perform a partial resynchronization.\n#\n# The backlog is only allocated if there is at least one replica connected.\n#\n# repl-backlog-size 1mb\n\n# After a master has no connected replicas for some time, the backlog will be\n# freed. The following option configures the amount of seconds that need to\n# elapse, starting from the time the last replica disconnected, for the backlog\n# buffer to be freed.\n#\n# Note that replicas never free the backlog for timeout, since they may be\n# promoted to masters later, and should be able to correctly &quot;partially\n# resynchronize&quot; with other replicas: hence they should always accumulate backlog.\n#\n# A value of 0 means to never release the backlog.\n#\n# repl-backlog-ttl 3600\n\n# The replica priority is an integer number published by Redis in the INFO\n# output. It is used by Redis Sentinel in order to select a replica to promote\n# into a master if the master is no longer working correctly.\n#\n# A replica with a low priority number is considered better for promotion, so\n# for instance if there are three replicas with priority 10, 100, 25 Sentinel\n# will pick the one with priority 10, that is the lowest.\n#\n# However a special priority of 0 marks the replica as not able to perform the\n# role of master, so a replica with priority of 0 will never be selected by\n# Redis Sentinel for promotion.\n#\n# By default the priority is 100.\nreplica-priority 100\n\n# -----------------------------------------------------------------------------\n# By default, Redis Sentinel includes all replicas in its reports. A replica\n# can be excluded from Redis Sentinel&#39;s announcements. An unannounced replica\n# will be ignored by the &#39;sentinel replicas &lt;master&gt;&#39; command and won&#39;t be\n# exposed to Redis Sentinel&#39;s clients.\n#\n# This option does not change the behavior of replica-priority. Even with\n# replica-announced set to &#39;no&#39;, the replica can be promoted to master. To\n# prevent this behavior, set replica-priority to 0.\n#\n# replica-announced yes\n\n# It is possible for a master to stop accepting writes if there are less than\n# N replicas connected, having a lag less or equal than M seconds.\n#\n# The N replicas need to be in &quot;online&quot; state.\n#\n# The lag in seconds, that must be &lt;&#x3D; the specified value, is calculated from\n# the last ping received from the replica, that is usually sent every second.\n#\n# This option does not GUARANTEE that N replicas will accept the write, but\n# will limit the window of exposure for lost writes in case not enough replicas\n# are available, to the specified number of seconds.\n#\n# For example to require at least 3 replicas with a lag &lt;&#x3D; 10 seconds use:\n#\n# min-replicas-to-write 3\n# min-replicas-max-lag 10\n#\n# Setting one or the other to 0 disables the feature.\n#\n# By default min-replicas-to-write is set to 0 (feature disabled) and\n# min-replicas-max-lag is set to 10.\n\n# A Redis master is able to list the address and port of the attached\n# replicas in different ways. For example the &quot;INFO replication&quot; section\n# offers this information, which is used, among other tools, by\n# Redis Sentinel in order to discover replica instances.\n# Another place where this info is available is in the output of the\n# &quot;ROLE&quot; command of a master.\n#\n# The listed IP address and port normally reported by a replica is\n# obtained in the following way:\n#\n#   IP: The address is auto detected by checking the peer address\n#   of the socket used by the replica to connect with the master.\n#\n#   Port: The port is communicated by the replica during the replication\n#   handshake, and is normally the port that the replica is using to\n#   listen for connections.\n#\n# However when port forwarding or Network Address Translation (NAT) is\n# used, the replica may actually be reachable via different IP and port\n# pairs. The following two options can be used by a replica in order to\n# report to its master a specific set of IP and port, so that both INFO\n# and ROLE will report those values.\n#\n# There is no need to use both the options if you need to override just\n# the port or the IP address.\n#\n# replica-announce-ip 5.5.5.5\n# replica-announce-port 1234\n\n############################### KEYS TRACKING #################################\n\n# Redis implements server assisted support for client side caching of values.\n# This is implemented using an invalidation table that remembers, using\n# a radix key indexed by key name, what clients have which keys. In turn\n# this is used in order to send invalidation messages to clients. Please\n# check this page to understand more about the feature:\n#\n#   https:&#x2F;&#x2F;redis.io&#x2F;topics&#x2F;client-side-caching\n#\n# When tracking is enabled for a client, all the read only queries are assumed\n# to be cached: this will force Redis to store information in the invalidation\n# table. When keys are modified, such information is flushed away, and\n# invalidation messages are sent to the clients. However if the workload is\n# heavily dominated by reads, Redis could use more and more memory in order\n# to track the keys fetched by many clients.\n#\n# For this reason it is possible to configure a maximum fill value for the\n# invalidation table. By default it is set to 1M of keys, and once this limit\n# is reached, Redis will start to evict keys in the invalidation table\n# even if they were not modified, just to reclaim memory: this will in turn\n# force the clients to invalidate the cached values. Basically the table\n# maximum size is a trade off between the memory you want to spend server\n# side to track information about who cached what, and the ability of clients\n# to retain cached objects in memory.\n#\n# If you set the value to 0, it means there are no limits, and Redis will\n# retain as many keys as needed in the invalidation table.\n# In the &quot;stats&quot; INFO section, you can find information about the number of\n# keys in the invalidation table at every given moment.\n#\n# Note: when key tracking is used in broadcasting mode, no memory is used\n# in the server side so this setting is useless.\n#\n# tracking-table-max-keys 1000000\n\n################################## SECURITY ###################################\n\n# Warning: since Redis is pretty fast, an outside user can try up to\n# 1 million passwords per second against a modern box. This means that you\n# should use very strong passwords, otherwise they will be very easy to break.\n# Note that because the password is really a shared secret between the client\n# and the server, and should not be memorized by any human, the password\n# can be easily a long string from &#x2F;dev&#x2F;urandom or whatever, so by using a\n# long and unguessable password no brute force attack will be possible.\n\n# Redis ACL users are defined in the following format:\n#\n#   user &lt;username&gt; ... acl rules ...\n#\n# For example:\n#\n#   user worker +@list +@connection ~jobs:* on &gt;ffa9203c493aa99\n#\n# The special username &quot;default&quot; is used for new connections. If this user\n# has the &quot;nopass&quot; rule, then new connections will be immediately authenticated\n# as the &quot;default&quot; user without the need of any password provided via the\n# AUTH command. Otherwise if the &quot;default&quot; user is not flagged with &quot;nopass&quot;\n# the connections will start in not authenticated state, and will require\n# AUTH (or the HELLO command AUTH option) in order to be authenticated and\n# start to work.\n#\n# The ACL rules that describe what a user can do are the following:\n#\n#  on           Enable the user: it is possible to authenticate as this user.\n#  off          Disable the user: it&#39;s no longer possible to authenticate\n#               with this user, however the already authenticated connections\n#               will still work.\n#  skip-sanitize-payload    RESTORE dump-payload sanitation is skipped.\n#  sanitize-payload         RESTORE dump-payload is sanitized (default).\n#  +&lt;command&gt;   Allow the execution of that command\n#  -&lt;command&gt;   Disallow the execution of that command\n#  +@&lt;category&gt; Allow the execution of all the commands in such category\n#               with valid categories are like @admin, @set, @sortedset, ...\n#               and so forth, see the full list in the server.c file where\n#               the Redis command table is described and defined.\n#               The special category @all means all the commands, but currently\n#               present in the server, and that will be loaded in the future\n#               via modules.\n#  +&lt;command&gt;|subcommand    Allow a specific subcommand of an otherwise\n#                           disabled command. Note that this form is not\n#                           allowed as negative like -DEBUG|SEGFAULT, but\n#                           only additive starting with &quot;+&quot;.\n#  allcommands  Alias for +@all. Note that it implies the ability to execute\n#               all the future commands loaded via the modules system.\n#  nocommands   Alias for -@all.\n#  ~&lt;pattern&gt;   Add a pattern of keys that can be mentioned as part of\n#               commands. For instance ~* allows all the keys. The pattern\n#               is a glob-style pattern like the one of KEYS.\n#               It is possible to specify multiple patterns.\n#  allkeys      Alias for ~*\n#  resetkeys    Flush the list of allowed keys patterns.\n#  &amp;&lt;pattern&gt;   Add a glob-style pattern of Pub&#x2F;Sub channels that can be\n#               accessed by the user. It is possible to specify multiple channel\n#               patterns.\n#  allchannels  Alias for &amp;*\n#  resetchannels            Flush the list of allowed channel patterns.\n#  &gt;&lt;password&gt;  Add this password to the list of valid password for the user.\n#               For example &gt;mypass will add &quot;mypass&quot; to the list.\n#               This directive clears the &quot;nopass&quot; flag (see later).\n#  &lt;&lt;password&gt;  Remove this password from the list of valid passwords.\n#  nopass       All the set passwords of the user are removed, and the user\n#               is flagged as requiring no password: it means that every\n#               password will work against this user. If this directive is\n#               used for the default user, every new connection will be\n#               immediately authenticated with the default user without\n#               any explicit AUTH command required. Note that the &quot;resetpass&quot;\n#               directive will clear this condition.\n#  resetpass    Flush the list of allowed passwords. Moreover removes the\n#               &quot;nopass&quot; status. After &quot;resetpass&quot; the user has no associated\n#               passwords and there is no way to authenticate without adding\n#               some password (or setting it as &quot;nopass&quot; later).\n#  reset        Performs the following actions: resetpass, resetkeys, off,\n#               -@all. The user returns to the same state it has immediately\n#               after its creation.\n#\n# ACL rules can be specified in any order: for instance you can start with\n# passwords, then flags, or key patterns. However note that the additive\n# and subtractive rules will CHANGE MEANING depending on the ordering.\n# For instance see the following example:\n#\n#   user alice on +@all -DEBUG ~* &gt;somepassword\n#\n# This will allow &quot;alice&quot; to use all the commands with the exception of the\n# DEBUG command, since +@all added all the commands to the set of the commands\n# alice can use, and later DEBUG was removed. However if we invert the order\n# of two ACL rules the result will be different:\n#\n#   user alice on -DEBUG +@all ~* &gt;somepassword\n#\n# Now DEBUG was removed when alice had yet no commands in the set of allowed\n# commands, later all the commands are added, so the user will be able to\n# execute everything.\n#\n# Basically ACL rules are processed left-to-right.\n#\n# For more information about ACL configuration please refer to\n# the Redis web site at https:&#x2F;&#x2F;redis.io&#x2F;topics&#x2F;acl\n\n# ACL LOG\n#\n# The ACL Log tracks failed commands and authentication events associated\n# with ACLs. The ACL Log is useful to troubleshoot failed commands blocked \n# by ACLs. The ACL Log is stored in memory. You can reclaim memory with \n# ACL LOG RESET. Define the maximum entry length of the ACL Log below.\nacllog-max-len 128\n\n# Using an external ACL file\n#\n# Instead of configuring users here in this file, it is possible to use\n# a stand-alone file just listing users. The two methods cannot be mixed:\n# if you configure users here and at the same time you activate the external\n# ACL file, the server will refuse to start.\n#\n# The format of the external ACL user file is exactly the same as the\n# format that is used inside redis.conf to describe users.\n#\n# aclfile &#x2F;etc&#x2F;redis&#x2F;users.acl\n\n# IMPORTANT NOTE: starting with Redis 6 &quot;requirepass&quot; is just a compatibility\n# layer on top of the new ACL system. The option effect will be just setting\n# the password for the default user. Clients will still authenticate using\n# AUTH &lt;password&gt; as usually, or more explicitly with AUTH default &lt;password&gt;\n# if they follow the new protocol: both will work.\n#\n# The requirepass is not compatable with aclfile option and the ACL LOAD\n# command, these will cause requirepass to be ignored.\n#\nrequirepass huangge1199\n\n# New users are initialized with restrictive permissions by default, via the\n# equivalent of this ACL rule &#39;off resetkeys -@all&#39;. Starting with Redis 6.2, it\n# is possible to manage access to Pub&#x2F;Sub channels with ACL rules as well. The\n# default Pub&#x2F;Sub channels permission if new users is controlled by the \n# acl-pubsub-default configuration directive, which accepts one of these values:\n#\n# allchannels: grants access to all Pub&#x2F;Sub channels\n# resetchannels: revokes access to all Pub&#x2F;Sub channels\n#\n# To ensure backward compatibility while upgrading Redis 6.0, acl-pubsub-default\n# defaults to the &#39;allchannels&#39; permission.\n#\n# Future compatibility note: it is very likely that in a future version of Redis\n# the directive&#39;s default of &#39;allchannels&#39; will be changed to &#39;resetchannels&#39; in\n# order to provide better out-of-the-box Pub&#x2F;Sub security. Therefore, it is\n# recommended that you explicitly define Pub&#x2F;Sub permissions for all users\n# rather then rely on implicit default values. Once you&#39;ve set explicit\n# Pub&#x2F;Sub for all existing users, you should uncomment the following line.\n#\n# acl-pubsub-default resetchannels\n\n# Command renaming (DEPRECATED).\n#\n# ------------------------------------------------------------------------\n# WARNING: avoid using this option if possible. Instead use ACLs to remove\n# commands from the default user, and put them only in some admin user you\n# create for administrative purposes.\n# ------------------------------------------------------------------------\n#\n# It is possible to change the name of dangerous commands in a shared\n# environment. For instance the CONFIG command may be renamed into something\n# hard to guess so that it will still be available for internal-use tools\n# but not available for general clients.\n#\n# Example:\n#\n# rename-command CONFIG b840fc02d524045429941cc15f59e41cb7be6c52\n#\n# It is also possible to completely kill a command by renaming it into\n# an empty string:\n#\n# rename-command CONFIG &quot;&quot;\n#\n# Please note that changing the name of commands that are logged into the\n# AOF file or transmitted to replicas may cause problems.\n\n################################### CLIENTS ####################################\n\n# Set the max number of connected clients at the same time. By default\n# this limit is set to 10000 clients, however if the Redis server is not\n# able to configure the process file limit to allow for the specified limit\n# the max number of allowed clients is set to the current file limit\n# minus 32 (as Redis reserves a few file descriptors for internal uses).\n#\n# Once the limit is reached Redis will close all the new connections sending\n# an error &#39;max number of clients reached&#39;.\n#\n# IMPORTANT: When Redis Cluster is used, the max number of connections is also\n# shared with the cluster bus: every node in the cluster will use two\n# connections, one incoming and another outgoing. It is important to size the\n# limit accordingly in case of very large clusters.\n#\n# maxclients 10000\n\n############################## MEMORY MANAGEMENT ################################\n\n# Set a memory usage limit to the specified amount of bytes.\n# When the memory limit is reached Redis will try to remove keys\n# according to the eviction policy selected (see maxmemory-policy).\n#\n# If Redis can&#39;t remove keys according to the policy, or if the policy is\n# set to &#39;noeviction&#39;, Redis will start to reply with errors to commands\n# that would use more memory, like SET, LPUSH, and so on, and will continue\n# to reply to read-only commands like GET.\n#\n# This option is usually useful when using Redis as an LRU or LFU cache, or to\n# set a hard memory limit for an instance (using the &#39;noeviction&#39; policy).\n#\n# WARNING: If you have replicas attached to an instance with maxmemory on,\n# the size of the output buffers needed to feed the replicas are subtracted\n# from the used memory count, so that network problems &#x2F; resyncs will\n# not trigger a loop where keys are evicted, and in turn the output\n# buffer of replicas is full with DELs of keys evicted triggering the deletion\n# of more keys, and so forth until the database is completely emptied.\n#\n# In short... if you have replicas attached it is suggested that you set a lower\n# limit for maxmemory so that there is some free RAM on the system for replica\n# output buffers (but this is not needed if the policy is &#39;noeviction&#39;).\n#\n# maxmemory &lt;bytes&gt;\n\n# MAXMEMORY POLICY: how Redis will select what to remove when maxmemory\n# is reached. You can select one from the following behaviors:\n#\n# volatile-lru -&gt; Evict using approximated LRU, only keys with an expire set.\n# allkeys-lru -&gt; Evict any key using approximated LRU.\n# volatile-lfu -&gt; Evict using approximated LFU, only keys with an expire set.\n# allkeys-lfu -&gt; Evict any key using approximated LFU.\n# volatile-random -&gt; Remove a random key having an expire set.\n# allkeys-random -&gt; Remove a random key, any key.\n# volatile-ttl -&gt; Remove the key with the nearest expire time (minor TTL)\n# noeviction -&gt; Don&#39;t evict anything, just return an error on write operations.\n#\n# LRU means Least Recently Used\n# LFU means Least Frequently Used\n#\n# Both LRU, LFU and volatile-ttl are implemented using approximated\n# randomized algorithms.\n#\n# Note: with any of the above policies, when there are no suitable keys for\n# eviction, Redis will return an error on write operations that require\n# more memory. These are usually commands that create new keys, add data or\n# modify existing keys. A few examples are: SET, INCR, HSET, LPUSH, SUNIONSTORE,\n# SORT (due to the STORE argument), and EXEC (if the transaction includes any\n# command that requires memory).\n#\n# The default is:\n#\n# maxmemory-policy noeviction\n\n# LRU, LFU and minimal TTL algorithms are not precise algorithms but approximated\n# algorithms (in order to save memory), so you can tune it for speed or\n# accuracy. By default Redis will check five keys and pick the one that was\n# used least recently, you can change the sample size using the following\n# configuration directive.\n#\n# The default of 5 produces good enough results. 10 Approximates very closely\n# true LRU but costs more CPU. 3 is faster but not very accurate.\n#\n# maxmemory-samples 5\n\n# Eviction processing is designed to function well with the default setting.\n# If there is an unusually large amount of write traffic, this value may need to\n# be increased.  Decreasing this value may reduce latency at the risk of \n# eviction processing effectiveness\n#   0 &#x3D; minimum latency, 10 &#x3D; default, 100 &#x3D; process without regard to latency\n#\n# maxmemory-eviction-tenacity 10\n\n# Starting from Redis 5, by default a replica will ignore its maxmemory setting\n# (unless it is promoted to master after a failover or manually). It means\n# that the eviction of keys will be just handled by the master, sending the\n# DEL commands to the replica as keys evict in the master side.\n#\n# This behavior ensures that masters and replicas stay consistent, and is usually\n# what you want, however if your replica is writable, or you want the replica\n# to have a different memory setting, and you are sure all the writes performed\n# to the replica are idempotent, then you may change this default (but be sure\n# to understand what you are doing).\n#\n# Note that since the replica by default does not evict, it may end using more\n# memory than the one set via maxmemory (there are certain buffers that may\n# be larger on the replica, or data structures may sometimes take more memory\n# and so forth). So make sure you monitor your replicas and make sure they\n# have enough memory to never hit a real out-of-memory condition before the\n# master hits the configured maxmemory setting.\n#\n# replica-ignore-maxmemory yes\n\n# Redis reclaims expired keys in two ways: upon access when those keys are\n# found to be expired, and also in background, in what is called the\n# &quot;active expire key&quot;. The key space is slowly and interactively scanned\n# looking for expired keys to reclaim, so that it is possible to free memory\n# of keys that are expired and will never be accessed again in a short time.\n#\n# The default effort of the expire cycle will try to avoid having more than\n# ten percent of expired keys still in memory, and will try to avoid consuming\n# more than 25% of total memory and to add latency to the system. However\n# it is possible to increase the expire &quot;effort&quot; that is normally set to\n# &quot;1&quot;, to a greater value, up to the value &quot;10&quot;. At its maximum value the\n# system will use more CPU, longer cycles (and technically may introduce\n# more latency), and will tolerate less already expired keys still present\n# in the system. It&#39;s a tradeoff between memory, CPU and latency.\n#\n# active-expire-effort 1\n\n############################# LAZY FREEING ####################################\n\n# Redis has two primitives to delete keys. One is called DEL and is a blocking\n# deletion of the object. It means that the server stops processing new commands\n# in order to reclaim all the memory associated with an object in a synchronous\n# way. If the key deleted is associated with a small object, the time needed\n# in order to execute the DEL command is very small and comparable to most other\n# O(1) or O(log_N) commands in Redis. However if the key is associated with an\n# aggregated value containing millions of elements, the server can block for\n# a long time (even seconds) in order to complete the operation.\n#\n# For the above reasons Redis also offers non blocking deletion primitives\n# such as UNLINK (non blocking DEL) and the ASYNC option of FLUSHALL and\n# FLUSHDB commands, in order to reclaim memory in background. Those commands\n# are executed in constant time. Another thread will incrementally free the\n# object in the background as fast as possible.\n#\n# DEL, UNLINK and ASYNC option of FLUSHALL and FLUSHDB are user-controlled.\n# It&#39;s up to the design of the application to understand when it is a good\n# idea to use one or the other. However the Redis server sometimes has to\n# delete keys or flush the whole database as a side effect of other operations.\n# Specifically Redis deletes objects independently of a user call in the\n# following scenarios:\n#\n# 1) On eviction, because of the maxmemory and maxmemory policy configurations,\n#    in order to make room for new data, without going over the specified\n#    memory limit.\n# 2) Because of expire: when a key with an associated time to live (see the\n#    EXPIRE command) must be deleted from memory.\n# 3) Because of a side effect of a command that stores data on a key that may\n#    already exist. For example the RENAME command may delete the old key\n#    content when it is replaced with another one. Similarly SUNIONSTORE\n#    or SORT with STORE option may delete existing keys. The SET command\n#    itself removes any old content of the specified key in order to replace\n#    it with the specified string.\n# 4) During replication, when a replica performs a full resynchronization with\n#    its master, the content of the whole database is removed in order to\n#    load the RDB file just transferred.\n#\n# In all the above cases the default is to delete objects in a blocking way,\n# like if DEL was called. However you can configure each case specifically\n# in order to instead release memory in a non-blocking way like if UNLINK\n# was called, using the following configuration directives.\n\nlazyfree-lazy-eviction no\nlazyfree-lazy-expire no\nlazyfree-lazy-server-del no\nreplica-lazy-flush no\n\n# It is also possible, for the case when to replace the user code DEL calls\n# with UNLINK calls is not easy, to modify the default behavior of the DEL\n# command to act exactly like UNLINK, using the following configuration\n# directive:\n\nlazyfree-lazy-user-del no\n\n# FLUSHDB, FLUSHALL, and SCRIPT FLUSH support both asynchronous and synchronous\n# deletion, which can be controlled by passing the [SYNC|ASYNC] flags into the\n# commands. When neither flag is passed, this directive will be used to determine\n# if the data should be deleted asynchronously.\n\nlazyfree-lazy-user-flush no\n\n################################ THREADED I&#x2F;O #################################\n\n# Redis is mostly single threaded, however there are certain threaded\n# operations such as UNLINK, slow I&#x2F;O accesses and other things that are\n# performed on side threads.\n#\n# Now it is also possible to handle Redis clients socket reads and writes\n# in different I&#x2F;O threads. Since especially writing is so slow, normally\n# Redis users use pipelining in order to speed up the Redis performances per\n# core, and spawn multiple instances in order to scale more. Using I&#x2F;O\n# threads it is possible to easily speedup two times Redis without resorting\n# to pipelining nor sharding of the instance.\n#\n# By default threading is disabled, we suggest enabling it only in machines\n# that have at least 4 or more cores, leaving at least one spare core.\n# Using more than 8 threads is unlikely to help much. We also recommend using\n# threaded I&#x2F;O only if you actually have performance problems, with Redis\n# instances being able to use a quite big percentage of CPU time, otherwise\n# there is no point in using this feature.\n#\n# So for instance if you have a four cores boxes, try to use 2 or 3 I&#x2F;O\n# threads, if you have a 8 cores, try to use 6 threads. In order to\n# enable I&#x2F;O threads use the following configuration directive:\n#\n# io-threads 4\n#\n# Setting io-threads to 1 will just use the main thread as usual.\n# When I&#x2F;O threads are enabled, we only use threads for writes, that is\n# to thread the write(2) syscall and transfer the client buffers to the\n# socket. However it is also possible to enable threading of reads and\n# protocol parsing using the following configuration directive, by setting\n# it to yes:\n#\n# io-threads-do-reads no\n#\n# Usually threading reads doesn&#39;t help much.\n#\n# NOTE 1: This configuration directive cannot be changed at runtime via\n# CONFIG SET. Aso this feature currently does not work when SSL is\n# enabled.\n#\n# NOTE 2: If you want to test the Redis speedup using redis-benchmark, make\n# sure you also run the benchmark itself in threaded mode, using the\n# --threads option to match the number of Redis threads, otherwise you&#39;ll not\n# be able to notice the improvements.\n\n############################ KERNEL OOM CONTROL ##############################\n\n# On Linux, it is possible to hint the kernel OOM killer on what processes\n# should be killed first when out of memory.\n#\n# Enabling this feature makes Redis actively control the oom_score_adj value\n# for all its processes, depending on their role. The default scores will\n# attempt to have background child processes killed before all others, and\n# replicas killed before masters.\n#\n# Redis supports three options:\n#\n# no:       Don&#39;t make changes to oom-score-adj (default).\n# yes:      Alias to &quot;relative&quot; see below.\n# absolute: Values in oom-score-adj-values are written as is to the kernel.\n# relative: Values are used relative to the initial value of oom_score_adj when\n#           the server starts and are then clamped to a range of -1000 to 1000.\n#           Because typically the initial value is 0, they will often match the\n#           absolute values.\noom-score-adj no\n\n# When oom-score-adj is used, this directive controls the specific values used\n# for master, replica and background child processes. Values range -2000 to\n# 2000 (higher means more likely to be killed).\n#\n# Unprivileged processes (not root, and without CAP_SYS_RESOURCE capabilities)\n# can freely increase their value, but not decrease it below its initial\n# settings. This means that setting oom-score-adj to &quot;relative&quot; and setting the\n# oom-score-adj-values to positive values will always succeed.\noom-score-adj-values 0 200 800\n\n\n#################### KERNEL transparent hugepage CONTROL ######################\n\n# Usually the kernel Transparent Huge Pages control is set to &quot;madvise&quot; or\n# or &quot;never&quot; by default (&#x2F;sys&#x2F;kernel&#x2F;mm&#x2F;transparent_hugepage&#x2F;enabled), in which\n# case this config has no effect. On systems in which it is set to &quot;always&quot;,\n# redis will attempt to disable it specifically for the redis process in order\n# to avoid latency problems specifically with fork(2) and CoW.\n# If for some reason you prefer to keep it enabled, you can set this config to\n# &quot;no&quot; and the kernel global to &quot;always&quot;.\n\ndisable-thp yes\n\n############################## APPEND ONLY MODE ###############################\n\n# By default Redis asynchronously dumps the dataset on disk. This mode is\n# good enough in many applications, but an issue with the Redis process or\n# a power outage may result into a few minutes of writes lost (depending on\n# the configured save points).\n#\n# The Append Only File is an alternative persistence mode that provides\n# much better durability. For instance using the default data fsync policy\n# (see later in the config file) Redis can lose just one second of writes in a\n# dramatic event like a server power outage, or a single write if something\n# wrong with the Redis process itself happens, but the operating system is\n# still running correctly.\n#\n# AOF and RDB persistence can be enabled at the same time without problems.\n# If the AOF is enabled on startup Redis will load the AOF, that is the file\n# with the better durability guarantees.\n#\n# Please check https:&#x2F;&#x2F;redis.io&#x2F;topics&#x2F;persistence for more information.\n\nappendonly no\n\n# The name of the append only file (default: &quot;appendonly.aof&quot;)\n\nappendfilename &quot;appendonly.aof&quot;\n\n# The fsync() call tells the Operating System to actually write data on disk\n# instead of waiting for more data in the output buffer. Some OS will really flush\n# data on disk, some other OS will just try to do it ASAP.\n#\n# Redis supports three different modes:\n#\n# no: don&#39;t fsync, just let the OS flush the data when it wants. Faster.\n# always: fsync after every write to the append only log. Slow, Safest.\n# everysec: fsync only one time every second. Compromise.\n#\n# The default is &quot;everysec&quot;, as that&#39;s usually the right compromise between\n# speed and data safety. It&#39;s up to you to understand if you can relax this to\n# &quot;no&quot; that will let the operating system flush the output buffer when\n# it wants, for better performances (but if you can live with the idea of\n# some data loss consider the default persistence mode that&#39;s snapshotting),\n# or on the contrary, use &quot;always&quot; that&#39;s very slow but a bit safer than\n# everysec.\n#\n# More details please check the following article:\n# http:&#x2F;&#x2F;antirez.com&#x2F;post&#x2F;redis-persistence-demystified.html\n#\n# If unsure, use &quot;everysec&quot;.\n\n# appendfsync always\nappendfsync everysec\n# appendfsync no\n\n# When the AOF fsync policy is set to always or everysec, and a background\n# saving process (a background save or AOF log background rewriting) is\n# performing a lot of I&#x2F;O against the disk, in some Linux configurations\n# Redis may block too long on the fsync() call. Note that there is no fix for\n# this currently, as even performing fsync in a different thread will block\n# our synchronous write(2) call.\n#\n# In order to mitigate this problem it&#39;s possible to use the following option\n# that will prevent fsync() from being called in the main process while a\n# BGSAVE or BGREWRITEAOF is in progress.\n#\n# This means that while another child is saving, the durability of Redis is\n# the same as &quot;appendfsync none&quot;. In practical terms, this means that it is\n# possible to lose up to 30 seconds of log in the worst scenario (with the\n# default Linux settings).\n#\n# If you have latency problems turn this to &quot;yes&quot;. Otherwise leave it as\n# &quot;no&quot; that is the safest pick from the point of view of durability.\n\nno-appendfsync-on-rewrite no\n\n# Automatic rewrite of the append only file.\n# Redis is able to automatically rewrite the log file implicitly calling\n# BGREWRITEAOF when the AOF log size grows by the specified percentage.\n#\n# This is how it works: Redis remembers the size of the AOF file after the\n# latest rewrite (if no rewrite has happened since the restart, the size of\n# the AOF at startup is used).\n#\n# This base size is compared to the current size. If the current size is\n# bigger than the specified percentage, the rewrite is triggered. Also\n# you need to specify a minimal size for the AOF file to be rewritten, this\n# is useful to avoid rewriting the AOF file even if the percentage increase\n# is reached but it is still pretty small.\n#\n# Specify a percentage of zero in order to disable the automatic AOF\n# rewrite feature.\n\nauto-aof-rewrite-percentage 100\nauto-aof-rewrite-min-size 64mb\n\n# An AOF file may be found to be truncated at the end during the Redis\n# startup process, when the AOF data gets loaded back into memory.\n# This may happen when the system where Redis is running\n# crashes, especially when an ext4 filesystem is mounted without the\n# data&#x3D;ordered option (however this can&#39;t happen when Redis itself\n# crashes or aborts but the operating system still works correctly).\n#\n# Redis can either exit with an error when this happens, or load as much\n# data as possible (the default now) and start if the AOF file is found\n# to be truncated at the end. The following option controls this behavior.\n#\n# If aof-load-truncated is set to yes, a truncated AOF file is loaded and\n# the Redis server starts emitting a log to inform the user of the event.\n# Otherwise if the option is set to no, the server aborts with an error\n# and refuses to start. When the option is set to no, the user requires\n# to fix the AOF file using the &quot;redis-check-aof&quot; utility before to restart\n# the server.\n#\n# Note that if the AOF file will be found to be corrupted in the middle\n# the server will still exit with an error. This option only applies when\n# Redis will try to read more data from the AOF file but not enough bytes\n# will be found.\naof-load-truncated yes\n\n# When rewriting the AOF file, Redis is able to use an RDB preamble in the\n# AOF file for faster rewrites and recoveries. When this option is turned\n# on the rewritten AOF file is composed of two different stanzas:\n#\n#   [RDB file][AOF tail]\n#\n# When loading, Redis recognizes that the AOF file starts with the &quot;REDIS&quot;\n# string and loads the prefixed RDB file, then continues loading the AOF\n# tail.\naof-use-rdb-preamble yes\n\n################################ LUA SCRIPTING  ###############################\n\n# Max execution time of a Lua script in milliseconds.\n#\n# If the maximum execution time is reached Redis will log that a script is\n# still in execution after the maximum allowed time and will start to\n# reply to queries with an error.\n#\n# When a long running script exceeds the maximum execution time only the\n# SCRIPT KILL and SHUTDOWN NOSAVE commands are available. The first can be\n# used to stop a script that did not yet call any write commands. The second\n# is the only way to shut down the server in the case a write command was\n# already issued by the script but the user doesn&#39;t want to wait for the natural\n# termination of the script.\n#\n# Set it to 0 or a negative value for unlimited execution without warnings.\nlua-time-limit 5000\n\n################################ REDIS CLUSTER  ###############################\n\n# Normal Redis instances can&#39;t be part of a Redis Cluster; only nodes that are\n# started as cluster nodes can. In order to start a Redis instance as a\n# cluster node enable the cluster support uncommenting the following:\n#\n# cluster-enabled yes\n\n# Every cluster node has a cluster configuration file. This file is not\n# intended to be edited by hand. It is created and updated by Redis nodes.\n# Every Redis Cluster node requires a different cluster configuration file.\n# Make sure that instances running in the same system do not have\n# overlapping cluster configuration file names.\n#\n# cluster-config-file nodes-6379.conf\n\n# Cluster node timeout is the amount of milliseconds a node must be unreachable\n# for it to be considered in failure state.\n# Most other internal time limits are a multiple of the node timeout.\n#\n# cluster-node-timeout 15000\n\n# A replica of a failing master will avoid to start a failover if its data\n# looks too old.\n#\n# There is no simple way for a replica to actually have an exact measure of\n# its &quot;data age&quot;, so the following two checks are performed:\n#\n# 1) If there are multiple replicas able to failover, they exchange messages\n#    in order to try to give an advantage to the replica with the best\n#    replication offset (more data from the master processed).\n#    Replicas will try to get their rank by offset, and apply to the start\n#    of the failover a delay proportional to their rank.\n#\n# 2) Every single replica computes the time of the last interaction with\n#    its master. This can be the last ping or command received (if the master\n#    is still in the &quot;connected&quot; state), or the time that elapsed since the\n#    disconnection with the master (if the replication link is currently down).\n#    If the last interaction is too old, the replica will not try to failover\n#    at all.\n#\n# The point &quot;2&quot; can be tuned by user. Specifically a replica will not perform\n# the failover if, since the last interaction with the master, the time\n# elapsed is greater than:\n#\n#   (node-timeout * cluster-replica-validity-factor) + repl-ping-replica-period\n#\n# So for example if node-timeout is 30 seconds, and the cluster-replica-validity-factor\n# is 10, and assuming a default repl-ping-replica-period of 10 seconds, the\n# replica will not try to failover if it was not able to talk with the master\n# for longer than 310 seconds.\n#\n# A large cluster-replica-validity-factor may allow replicas with too old data to failover\n# a master, while a too small value may prevent the cluster from being able to\n# elect a replica at all.\n#\n# For maximum availability, it is possible to set the cluster-replica-validity-factor\n# to a value of 0, which means, that replicas will always try to failover the\n# master regardless of the last time they interacted with the master.\n# (However they&#39;ll always try to apply a delay proportional to their\n# offset rank).\n#\n# Zero is the only value able to guarantee that when all the partitions heal\n# the cluster will always be able to continue.\n#\n# cluster-replica-validity-factor 10\n\n# Cluster replicas are able to migrate to orphaned masters, that are masters\n# that are left without working replicas. This improves the cluster ability\n# to resist to failures as otherwise an orphaned master can&#39;t be failed over\n# in case of failure if it has no working replicas.\n#\n# Replicas migrate to orphaned masters only if there are still at least a\n# given number of other working replicas for their old master. This number\n# is the &quot;migration barrier&quot;. A migration barrier of 1 means that a replica\n# will migrate only if there is at least 1 other working replica for its master\n# and so forth. It usually reflects the number of replicas you want for every\n# master in your cluster.\n#\n# Default is 1 (replicas migrate only if their masters remain with at least\n# one replica). To disable migration just set it to a very large value or\n# set cluster-allow-replica-migration to &#39;no&#39;.\n# A value of 0 can be set but is useful only for debugging and dangerous\n# in production.\n#\n# cluster-migration-barrier 1\n\n# Turning off this option allows to use less automatic cluster configuration.\n# It both disables migration to orphaned masters and migration from masters\n# that became empty.\n#\n# Default is &#39;yes&#39; (allow automatic migrations).\n#\n# cluster-allow-replica-migration yes\n\n# By default Redis Cluster nodes stop accepting queries if they detect there\n# is at least a hash slot uncovered (no available node is serving it).\n# This way if the cluster is partially down (for example a range of hash slots\n# are no longer covered) all the cluster becomes, eventually, unavailable.\n# It automatically returns available as soon as all the slots are covered again.\n#\n# However sometimes you want the subset of the cluster which is working,\n# to continue to accept queries for the part of the key space that is still\n# covered. In order to do so, just set the cluster-require-full-coverage\n# option to no.\n#\n# cluster-require-full-coverage yes\n\n# This option, when set to yes, prevents replicas from trying to failover its\n# master during master failures. However the replica can still perform a\n# manual failover, if forced to do so.\n#\n# This is useful in different scenarios, especially in the case of multiple\n# data center operations, where we want one side to never be promoted if not\n# in the case of a total DC failure.\n#\n# cluster-replica-no-failover no\n\n# This option, when set to yes, allows nodes to serve read traffic while the\n# the cluster is in a down state, as long as it believes it owns the slots. \n#\n# This is useful for two cases.  The first case is for when an application \n# doesn&#39;t require consistency of data during node failures or network partitions.\n# One example of this is a cache, where as long as the node has the data it\n# should be able to serve it. \n#\n# The second use case is for configurations that don&#39;t meet the recommended  \n# three shards but want to enable cluster mode and scale later. A \n# master outage in a 1 or 2 shard configuration causes a read&#x2F;write outage to the\n# entire cluster without this option set, with it set there is only a write outage.\n# Without a quorum of masters, slot ownership will not change automatically. \n#\n# cluster-allow-reads-when-down no\n\n# In order to setup your cluster make sure to read the documentation\n# available at https:&#x2F;&#x2F;redis.io web site.\n\n########################## CLUSTER DOCKER&#x2F;NAT support  ########################\n\n# In certain deployments, Redis Cluster nodes address discovery fails, because\n# addresses are NAT-ted or because ports are forwarded (the typical case is\n# Docker and other containers).\n#\n# In order to make Redis Cluster working in such environments, a static\n# configuration where each node knows its public address is needed. The\n# following four options are used for this scope, and are:\n#\n# * cluster-announce-ip\n# * cluster-announce-port\n# * cluster-announce-tls-port\n# * cluster-announce-bus-port\n#\n# Each instructs the node about its address, client ports (for connections\n# without and with TLS) and cluster message bus port. The information is then\n# published in the header of the bus packets so that other nodes will be able to\n# correctly map the address of the node publishing the information.\n#\n# If cluster-tls is set to yes and cluster-announce-tls-port is omitted or set\n# to zero, then cluster-announce-port refers to the TLS port. Note also that\n# cluster-announce-tls-port has no effect if cluster-tls is set to no.\n#\n# If the above options are not used, the normal Redis Cluster auto-detection\n# will be used instead.\n#\n# Note that when remapped, the bus port may not be at the fixed offset of\n# clients port + 10000, so you can specify any port and bus-port depending\n# on how they get remapped. If the bus-port is not set, a fixed offset of\n# 10000 will be used as usual.\n#\n# Example:\n#\n# cluster-announce-ip 10.1.1.5\n# cluster-announce-tls-port 6379\n# cluster-announce-port 0\n# cluster-announce-bus-port 6380\n\n################################## SLOW LOG ###################################\n\n# The Redis Slow Log is a system to log queries that exceeded a specified\n# execution time. The execution time does not include the I&#x2F;O operations\n# like talking with the client, sending the reply and so forth,\n# but just the time needed to actually execute the command (this is the only\n# stage of command execution where the thread is blocked and can not serve\n# other requests in the meantime).\n#\n# You can configure the slow log with two parameters: one tells Redis\n# what is the execution time, in microseconds, to exceed in order for the\n# command to get logged, and the other parameter is the length of the\n# slow log. When a new command is logged the oldest one is removed from the\n# queue of logged commands.\n\n# The following time is expressed in microseconds, so 1000000 is equivalent\n# to one second. Note that a negative number disables the slow log, while\n# a value of zero forces the logging of every command.\nslowlog-log-slower-than 10000\n\n# There is no limit to this length. Just be aware that it will consume memory.\n# You can reclaim memory used by the slow log with SLOWLOG RESET.\nslowlog-max-len 128\n\n################################ LATENCY MONITOR ##############################\n\n# The Redis latency monitoring subsystem samples different operations\n# at runtime in order to collect data related to possible sources of\n# latency of a Redis instance.\n#\n# Via the LATENCY command this information is available to the user that can\n# print graphs and obtain reports.\n#\n# The system only logs operations that were performed in a time equal or\n# greater than the amount of milliseconds specified via the\n# latency-monitor-threshold configuration directive. When its value is set\n# to zero, the latency monitor is turned off.\n#\n# By default latency monitoring is disabled since it is mostly not needed\n# if you don&#39;t have latency issues, and collecting data has a performance\n# impact, that while very small, can be measured under big load. Latency\n# monitoring can easily be enabled at runtime using the command\n# &quot;CONFIG SET latency-monitor-threshold &lt;milliseconds&gt;&quot; if needed.\nlatency-monitor-threshold 0\n\n############################# EVENT NOTIFICATION ##############################\n\n# Redis can notify Pub&#x2F;Sub clients about events happening in the key space.\n# This feature is documented at https:&#x2F;&#x2F;redis.io&#x2F;topics&#x2F;notifications\n#\n# For instance if keyspace events notification is enabled, and a client\n# performs a DEL operation on key &quot;foo&quot; stored in the Database 0, two\n# messages will be published via Pub&#x2F;Sub:\n#\n# PUBLISH __keyspace@0__:foo del\n# PUBLISH __keyevent@0__:del foo\n#\n# It is possible to select the events that Redis will notify among a set\n# of classes. Every class is identified by a single character:\n#\n#  K     Keyspace events, published with __keyspace@&lt;db&gt;__ prefix.\n#  E     Keyevent events, published with __keyevent@&lt;db&gt;__ prefix.\n#  g     Generic commands (non-type specific) like DEL, EXPIRE, RENAME, ...\n#  $     String commands\n#  l     List commands\n#  s     Set commands\n#  h     Hash commands\n#  z     Sorted set commands\n#  x     Expired events (events generated every time a key expires)\n#  e     Evicted events (events generated when a key is evicted for maxmemory)\n#  t     Stream commands\n#  d     Module key type events\n#  m     Key-miss events (Note: It is not included in the &#39;A&#39; class)\n#  A     Alias for g$lshzxetd, so that the &quot;AKE&quot; string means all the events\n#        (Except key-miss events which are excluded from &#39;A&#39; due to their\n#         unique nature).\n#\n#  The &quot;notify-keyspace-events&quot; takes as argument a string that is composed\n#  of zero or multiple characters. The empty string means that notifications\n#  are disabled.\n#\n#  Example: to enable list and generic events, from the point of view of the\n#           event name, use:\n#\n#  notify-keyspace-events Elg\n#\n#  Example 2: to get the stream of the expired keys subscribing to channel\n#             name __keyevent@0__:expired use:\n#\n#  notify-keyspace-events Ex\n#\n#  By default all notifications are disabled because most users don&#39;t need\n#  this feature and the feature has some overhead. Note that if you don&#39;t\n#  specify at least one of K or E, no events will be delivered.\nnotify-keyspace-events &quot;&quot;\n\n############################### GOPHER SERVER #################################\n\n# Redis contains an implementation of the Gopher protocol, as specified in\n# the RFC 1436 (https:&#x2F;&#x2F;www.ietf.org&#x2F;rfc&#x2F;rfc1436.txt).\n#\n# The Gopher protocol was very popular in the late &#39;90s. It is an alternative\n# to the web, and the implementation both server and client side is so simple\n# that the Redis server has just 100 lines of code in order to implement this\n# support.\n#\n# What do you do with Gopher nowadays? Well Gopher never *really* died, and\n# lately there is a movement in order for the Gopher more hierarchical content\n# composed of just plain text documents to be resurrected. Some want a simpler\n# internet, others believe that the mainstream internet became too much\n# controlled, and it&#39;s cool to create an alternative space for people that\n# want a bit of fresh air.\n#\n# Anyway for the 10nth birthday of the Redis, we gave it the Gopher protocol\n# as a gift.\n#\n# --- HOW IT WORKS? ---\n#\n# The Redis Gopher support uses the inline protocol of Redis, and specifically\n# two kind of inline requests that were anyway illegal: an empty request\n# or any request that starts with &quot;&#x2F;&quot; (there are no Redis commands starting\n# with such a slash). Normal RESP2&#x2F;RESP3 requests are completely out of the\n# path of the Gopher protocol implementation and are served as usual as well.\n#\n# If you open a connection to Redis when Gopher is enabled and send it\n# a string like &quot;&#x2F;foo&quot;, if there is a key named &quot;&#x2F;foo&quot; it is served via the\n# Gopher protocol.\n#\n# In order to create a real Gopher &quot;hole&quot; (the name of a Gopher site in Gopher\n# talking), you likely need a script like the following:\n#\n#   https:&#x2F;&#x2F;github.com&#x2F;antirez&#x2F;gopher2redis\n#\n# --- SECURITY WARNING ---\n#\n# If you plan to put Redis on the internet in a publicly accessible address\n# to server Gopher pages MAKE SURE TO SET A PASSWORD to the instance.\n# Once a password is set:\n#\n#   1. The Gopher server (when enabled, not by default) will still serve\n#      content via Gopher.\n#   2. However other commands cannot be called before the client will\n#      authenticate.\n#\n# So use the &#39;requirepass&#39; option to protect your instance.\n#\n# Note that Gopher is not currently supported when &#39;io-threads-do-reads&#39;\n# is enabled.\n#\n# To enable Gopher support, uncomment the following line and set the option\n# from no (the default) to yes.\n#\n# gopher-enabled no\n\n############################### ADVANCED CONFIG ###############################\n\n# Hashes are encoded using a memory efficient data structure when they have a\n# small number of entries, and the biggest entry does not exceed a given\n# threshold. These thresholds can be configured using the following directives.\nhash-max-ziplist-entries 512\nhash-max-ziplist-value 64\n\n# Lists are also encoded in a special way to save a lot of space.\n# The number of entries allowed per internal list node can be specified\n# as a fixed maximum size or a maximum number of elements.\n# For a fixed maximum size, use -5 through -1, meaning:\n# -5: max size: 64 Kb  &lt;-- not recommended for normal workloads\n# -4: max size: 32 Kb  &lt;-- not recommended\n# -3: max size: 16 Kb  &lt;-- probably not recommended\n# -2: max size: 8 Kb   &lt;-- good\n# -1: max size: 4 Kb   &lt;-- good\n# Positive numbers mean store up to _exactly_ that number of elements\n# per list node.\n# The highest performing option is usually -2 (8 Kb size) or -1 (4 Kb size),\n# but if your use case is unique, adjust the settings as necessary.\nlist-max-ziplist-size -2\n\n# Lists may also be compressed.\n# Compress depth is the number of quicklist ziplist nodes from *each* side of\n# the list to *exclude* from compression.  The head and tail of the list\n# are always uncompressed for fast push&#x2F;pop operations.  Settings are:\n# 0: disable all list compression\n# 1: depth 1 means &quot;don&#39;t start compressing until after 1 node into the list,\n#    going from either the head or tail&quot;\n#    So: [head]-&gt;node-&gt;node-&gt;...-&gt;node-&gt;[tail]\n#    [head], [tail] will always be uncompressed; inner nodes will compress.\n# 2: [head]-&gt;[next]-&gt;node-&gt;node-&gt;...-&gt;node-&gt;[prev]-&gt;[tail]\n#    2 here means: don&#39;t compress head or head-&gt;next or tail-&gt;prev or tail,\n#    but compress all nodes between them.\n# 3: [head]-&gt;[next]-&gt;[next]-&gt;node-&gt;node-&gt;...-&gt;node-&gt;[prev]-&gt;[prev]-&gt;[tail]\n# etc.\nlist-compress-depth 0\n\n# Sets have a special encoding in just one case: when a set is composed\n# of just strings that happen to be integers in radix 10 in the range\n# of 64 bit signed integers.\n# The following configuration setting sets the limit in the size of the\n# set in order to use this special memory saving encoding.\nset-max-intset-entries 512\n\n# Similarly to hashes and lists, sorted sets are also specially encoded in\n# order to save a lot of space. This encoding is only used when the length and\n# elements of a sorted set are below the following limits:\nzset-max-ziplist-entries 128\nzset-max-ziplist-value 64\n\n# HyperLogLog sparse representation bytes limit. The limit includes the\n# 16 bytes header. When an HyperLogLog using the sparse representation crosses\n# this limit, it is converted into the dense representation.\n#\n# A value greater than 16000 is totally useless, since at that point the\n# dense representation is more memory efficient.\n#\n# The suggested value is ~ 3000 in order to have the benefits of\n# the space efficient encoding without slowing down too much PFADD,\n# which is O(N) with the sparse encoding. The value can be raised to\n# ~ 10000 when CPU is not a concern, but space is, and the data set is\n# composed of many HyperLogLogs with cardinality in the 0 - 15000 range.\nhll-sparse-max-bytes 3000\n\n# Streams macro node max size &#x2F; items. The stream data structure is a radix\n# tree of big nodes that encode multiple items inside. Using this configuration\n# it is possible to configure how big a single node can be in bytes, and the\n# maximum number of items it may contain before switching to a new node when\n# appending new stream entries. If any of the following settings are set to\n# zero, the limit is ignored, so for instance it is possible to set just a\n# max entries limit by setting max-bytes to 0 and max-entries to the desired\n# value.\nstream-node-max-bytes 4096\nstream-node-max-entries 100\n\n# Active rehashing uses 1 millisecond every 100 milliseconds of CPU time in\n# order to help rehashing the main Redis hash table (the one mapping top-level\n# keys to values). The hash table implementation Redis uses (see dict.c)\n# performs a lazy rehashing: the more operation you run into a hash table\n# that is rehashing, the more rehashing &quot;steps&quot; are performed, so if the\n# server is idle the rehashing is never complete and some more memory is used\n# by the hash table.\n#\n# The default is to use this millisecond 10 times every second in order to\n# actively rehash the main dictionaries, freeing memory when possible.\n#\n# If unsure:\n# use &quot;activerehashing no&quot; if you have hard latency requirements and it is\n# not a good thing in your environment that Redis can reply from time to time\n# to queries with 2 milliseconds delay.\n#\n# use &quot;activerehashing yes&quot; if you don&#39;t have such hard requirements but\n# want to free memory asap when possible.\nactiverehashing yes\n\n# The client output buffer limits can be used to force disconnection of clients\n# that are not reading data from the server fast enough for some reason (a\n# common reason is that a Pub&#x2F;Sub client can&#39;t consume messages as fast as the\n# publisher can produce them).\n#\n# The limit can be set differently for the three different classes of clients:\n#\n# normal -&gt; normal clients including MONITOR clients\n# replica  -&gt; replica clients\n# pubsub -&gt; clients subscribed to at least one pubsub channel or pattern\n#\n# The syntax of every client-output-buffer-limit directive is the following:\n#\n# client-output-buffer-limit &lt;class&gt; &lt;hard limit&gt; &lt;soft limit&gt; &lt;soft seconds&gt;\n#\n# A client is immediately disconnected once the hard limit is reached, or if\n# the soft limit is reached and remains reached for the specified number of\n# seconds (continuously).\n# So for instance if the hard limit is 32 megabytes and the soft limit is\n# 16 megabytes &#x2F; 10 seconds, the client will get disconnected immediately\n# if the size of the output buffers reach 32 megabytes, but will also get\n# disconnected if the client reaches 16 megabytes and continuously overcomes\n# the limit for 10 seconds.\n#\n# By default normal clients are not limited because they don&#39;t receive data\n# without asking (in a push way), but just after a request, so only\n# asynchronous clients may create a scenario where data is requested faster\n# than it can read.\n#\n# Instead there is a default limit for pubsub and replica clients, since\n# subscribers and replicas receive data in a push fashion.\n#\n# Both the hard or the soft limit can be disabled by setting them to zero.\nclient-output-buffer-limit normal 0 0 0\nclient-output-buffer-limit replica 256mb 64mb 60\nclient-output-buffer-limit pubsub 32mb 8mb 60\n\n# Client query buffers accumulate new commands. They are limited to a fixed\n# amount by default in order to avoid that a protocol desynchronization (for\n# instance due to a bug in the client) will lead to unbound memory usage in\n# the query buffer. However you can configure it here if you have very special\n# needs, such us huge multi&#x2F;exec requests or alike.\n#\n# client-query-buffer-limit 1gb\n\n# In the Redis protocol, bulk requests, that are, elements representing single\n# strings, are normally limited to 512 mb. However you can change this limit\n# here, but must be 1mb or greater\n#\n# proto-max-bulk-len 512mb\n\n# Redis calls an internal function to perform many background tasks, like\n# closing connections of clients in timeout, purging expired keys that are\n# never requested, and so forth.\n#\n# Not all tasks are performed with the same frequency, but Redis checks for\n# tasks to perform according to the specified &quot;hz&quot; value.\n#\n# By default &quot;hz&quot; is set to 10. Raising the value will use more CPU when\n# Redis is idle, but at the same time will make Redis more responsive when\n# there are many keys expiring at the same time, and timeouts may be\n# handled with more precision.\n#\n# The range is between 1 and 500, however a value over 100 is usually not\n# a good idea. Most users should use the default of 10 and raise this up to\n# 100 only in environments where very low latency is required.\nhz 10\n\n# Normally it is useful to have an HZ value which is proportional to the\n# number of clients connected. This is useful in order, for instance, to\n# avoid too many clients are processed for each background task invocation\n# in order to avoid latency spikes.\n#\n# Since the default HZ value by default is conservatively set to 10, Redis\n# offers, and enables by default, the ability to use an adaptive HZ value\n# which will temporarily raise when there are many connected clients.\n#\n# When dynamic HZ is enabled, the actual configured HZ will be used\n# as a baseline, but multiples of the configured HZ value will be actually\n# used as needed once more clients are connected. In this way an idle\n# instance will use very little CPU time while a busy instance will be\n# more responsive.\ndynamic-hz yes\n\n# When a child rewrites the AOF file, if the following option is enabled\n# the file will be fsync-ed every 32 MB of data generated. This is useful\n# in order to commit the file to the disk more incrementally and avoid\n# big latency spikes.\naof-rewrite-incremental-fsync yes\n\n# When redis saves RDB file, if the following option is enabled\n# the file will be fsync-ed every 32 MB of data generated. This is useful\n# in order to commit the file to the disk more incrementally and avoid\n# big latency spikes.\nrdb-save-incremental-fsync yes\n\n# Redis LFU eviction (see maxmemory setting) can be tuned. However it is a good\n# idea to start with the default settings and only change them after investigating\n# how to improve the performances and how the keys LFU change over time, which\n# is possible to inspect via the OBJECT FREQ command.\n#\n# There are two tunable parameters in the Redis LFU implementation: the\n# counter logarithm factor and the counter decay time. It is important to\n# understand what the two parameters mean before changing them.\n#\n# The LFU counter is just 8 bits per key, it&#39;s maximum value is 255, so Redis\n# uses a probabilistic increment with logarithmic behavior. Given the value\n# of the old counter, when a key is accessed, the counter is incremented in\n# this way:\n#\n# 1. A random number R between 0 and 1 is extracted.\n# 2. A probability P is calculated as 1&#x2F;(old_value*lfu_log_factor+1).\n# 3. The counter is incremented only if R &lt; P.\n#\n# The default lfu-log-factor is 10. This is a table of how the frequency\n# counter changes with a different number of accesses with different\n# logarithmic factors:\n#\n# +--------+------------+------------+------------+------------+------------+\n# | factor | 100 hits   | 1000 hits  | 100K hits  | 1M hits    | 10M hits   |\n# +--------+------------+------------+------------+------------+------------+\n# | 0      | 104        | 255        | 255        | 255        | 255        |\n# +--------+------------+------------+------------+------------+------------+\n# | 1      | 18         | 49         | 255        | 255        | 255        |\n# +--------+------------+------------+------------+------------+------------+\n# | 10     | 10         | 18         | 142        | 255        | 255        |\n# +--------+------------+------------+------------+------------+------------+\n# | 100    | 8          | 11         | 49         | 143        | 255        |\n# +--------+------------+------------+------------+------------+------------+\n#\n# NOTE: The above table was obtained by running the following commands:\n#\n#   redis-benchmark -n 1000000 incr foo\n#   redis-cli object freq foo\n#\n# NOTE 2: The counter initial value is 5 in order to give new objects a chance\n# to accumulate hits.\n#\n# The counter decay time is the time, in minutes, that must elapse in order\n# for the key counter to be divided by two (or decremented if it has a value\n# less &lt;&#x3D; 10).\n#\n# The default value for the lfu-decay-time is 1. A special value of 0 means to\n# decay the counter every time it happens to be scanned.\n#\n# lfu-log-factor 10\n# lfu-decay-time 1\n\n########################### ACTIVE DEFRAGMENTATION #######################\n#\n# What is active defragmentation?\n# -------------------------------\n#\n# Active (online) defragmentation allows a Redis server to compact the\n# spaces left between small allocations and deallocations of data in memory,\n# thus allowing to reclaim back memory.\n#\n# Fragmentation is a natural process that happens with every allocator (but\n# less so with Jemalloc, fortunately) and certain workloads. Normally a server\n# restart is needed in order to lower the fragmentation, or at least to flush\n# away all the data and create it again. However thanks to this feature\n# implemented by Oran Agra for Redis 4.0 this process can happen at runtime\n# in a &quot;hot&quot; way, while the server is running.\n#\n# Basically when the fragmentation is over a certain level (see the\n# configuration options below) Redis will start to create new copies of the\n# values in contiguous memory regions by exploiting certain specific Jemalloc\n# features (in order to understand if an allocation is causing fragmentation\n# and to allocate it in a better place), and at the same time, will release the\n# old copies of the data. This process, repeated incrementally for all the keys\n# will cause the fragmentation to drop back to normal values.\n#\n# Important things to understand:\n#\n# 1. This feature is disabled by default, and only works if you compiled Redis\n#    to use the copy of Jemalloc we ship with the source code of Redis.\n#    This is the default with Linux builds.\n#\n# 2. You never need to enable this feature if you don&#39;t have fragmentation\n#    issues.\n#\n# 3. Once you experience fragmentation, you can enable this feature when\n#    needed with the command &quot;CONFIG SET activedefrag yes&quot;.\n#\n# The configuration parameters are able to fine tune the behavior of the\n# defragmentation process. If you are not sure about what they mean it is\n# a good idea to leave the defaults untouched.\n\n# Enabled active defragmentation\n# activedefrag no\n\n# Minimum amount of fragmentation waste to start active defrag\n# active-defrag-ignore-bytes 100mb\n\n# Minimum percentage of fragmentation to start active defrag\n# active-defrag-threshold-lower 10\n\n# Maximum percentage of fragmentation at which we use maximum effort\n# active-defrag-threshold-upper 100\n\n# Minimal effort for defrag in CPU percentage, to be used when the lower\n# threshold is reached\n# active-defrag-cycle-min 1\n\n# Maximal effort for defrag in CPU percentage, to be used when the upper\n# threshold is reached\n# active-defrag-cycle-max 25\n\n# Maximum number of set&#x2F;hash&#x2F;zset&#x2F;list fields that will be processed from\n# the main dictionary scan\n# active-defrag-max-scan-fields 1000\n\n# Jemalloc background thread for purging will be enabled by default\njemalloc-bg-thread yes\n\n# It is possible to pin different threads and processes of Redis to specific\n# CPUs in your system, in order to maximize the performances of the server.\n# This is useful both in order to pin different Redis threads in different\n# CPUs, but also in order to make sure that multiple Redis instances running\n# in the same host will be pinned to different CPUs.\n#\n# Normally you can do this using the &quot;taskset&quot; command, however it is also\n# possible to this via Redis configuration directly, both in Linux and FreeBSD.\n#\n# You can pin the server&#x2F;IO threads, bio threads, aof rewrite child process, and\n# the bgsave child process. The syntax to specify the cpu list is the same as\n# the taskset command:\n#\n# Set redis server&#x2F;io threads to cpu affinity 0,2,4,6:\n# server_cpulist 0-7:2\n#\n# Set bio threads to cpu affinity 1,3:\n# bio_cpulist 1,3\n#\n# Set aof rewrite child process to cpu affinity 8,9,10,11:\n# aof_rewrite_cpulist 8-11\n#\n# Set bgsave child process to cpu affinity 1,10,11\n# bgsave_cpulist 1,10-11\n\n# In some cases redis will emit warnings and even refuse to start if it detects\n# that the system is in bad state, it is possible to suppress these warnings\n# by setting the following config which takes a space delimited list of warnings\n# to suppress\n#\n# ignore-warnings ARM64-COW-BUG</code></pre>\n<h1>5、启动Redis容器</h1>\n<p>执行命令启动redis容器：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">docker-compose up -d</code></pre>\n<p><img src=\"2022-04-24-17-10-52-image.png\" alt=\"\"></p>\n<h1>6、远程连接验证结果</h1>\n<p>信息填完，点击OK</p>\n<p><img src=\"2022-04-24-17-12-56-image.png\" alt=\"\"></p>\n<p>点击左侧对呀的连接，右侧出现redis服务器信息则为安装成功</p>\n<p><img src=\"2022-04-24-17-14-15-image.png\" alt=\"\"></p>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"cover":"https://blog.huangge1199.cn/post/nexusCreate/bg.jpeg","excerpt":"","more":"<h1>1、拉取镜像</h1>\n<p>执行下面的命令拉取redis的docker镜像</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">docker pull redis</code></pre>\n<p><img src=\"2022-04-24-16-57-51-image.png\" alt=\"\"></p>\n<h1>2、编写docker-compose.yml文件</h1>\n<p>内容如下：</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\">version: &#39;3&#39;\nservices:\n  redis:\n    restart: always\n    image: redis\n    container_name: redis\n    ports:\n      - 50020:6379\n    environment:\n      TZ: Asia&#x2F;Shanghai\n    volumes:\n      - .&#x2F;data:&#x2F;data\n      - .&#x2F;conf&#x2F;redis.conf:&#x2F;etc&#x2F;redis.conf\n    privileged: true</code></pre>\n<h1>3、创建目录文件</h1>\n<p>根据docker-compose.yml文件创建对应目录文件</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">pwd\nmkdir data\nmkdir conf\nll</code></pre>\n<p><img src=\"2022-04-24-17-04-13-image.png\" alt=\"\"></p>\n<h1>4、编写Redis的配置文件</h1>\n<p>在conf目录下创建redis.conf文件，文件内容如下：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\"># Redis configuration file example.\n#\n# Note that in order to read the configuration file, Redis must be\n# started with the file path as first argument:\n#\n# .&#x2F;redis-server &#x2F;path&#x2F;to&#x2F;redis.conf\n\n# Note on units: when memory size is needed, it is possible to specify\n# it in the usual form of 1k 5GB 4M and so forth:\n#\n# 1k &#x3D;&gt; 1000 bytes\n# 1kb &#x3D;&gt; 1024 bytes\n# 1m &#x3D;&gt; 1000000 bytes\n# 1mb &#x3D;&gt; 1024*1024 bytes\n# 1g &#x3D;&gt; 1000000000 bytes\n# 1gb &#x3D;&gt; 1024*1024*1024 bytes\n#\n# units are case insensitive so 1GB 1Gb 1gB are all the same.\n\n################################## INCLUDES ###################################\n\n# Include one or more other config files here.  This is useful if you\n# have a standard template that goes to all Redis servers but also need\n# to customize a few per-server settings.  Include files can include\n# other files, so use this wisely.\n#\n# Note that option &quot;include&quot; won&#39;t be rewritten by command &quot;CONFIG REWRITE&quot;\n# from admin or Redis Sentinel. Since Redis always uses the last processed\n# line as value of a configuration directive, you&#39;d better put includes\n# at the beginning of this file to avoid overwriting config change at runtime.\n#\n# If instead you are interested in using includes to override configuration\n# options, it is better to use include as the last line.\n#\n# include &#x2F;path&#x2F;to&#x2F;local.conf\n# include &#x2F;path&#x2F;to&#x2F;other.conf\n\n################################## MODULES #####################################\n\n# Load modules at startup. If the server is not able to load modules\n# it will abort. It is possible to use multiple loadmodule directives.\n#\n# loadmodule &#x2F;path&#x2F;to&#x2F;my_module.so\n# loadmodule &#x2F;path&#x2F;to&#x2F;other_module.so\n\n################################## NETWORK #####################################\n\n# By default, if no &quot;bind&quot; configuration directive is specified, Redis listens\n# for connections from all available network interfaces on the host machine.\n# It is possible to listen to just one or multiple selected interfaces using\n# the &quot;bind&quot; configuration directive, followed by one or more IP addresses.\n# Each address can be prefixed by &quot;-&quot;, which means that redis will not fail to\n# start if the address is not available. Being not available only refers to\n# addresses that does not correspond to any network interfece. Addresses that\n# are already in use will always fail, and unsupported protocols will always BE\n# silently skipped.\n#\n# Examples:\n#\n# bind 192.168.1.100 10.0.0.1     # listens on two specific IPv4 addresses\n# bind 127.0.0.1 ::1              # listens on loopback IPv4 and IPv6\n# bind * -::*                     # like the default, all available interfaces\n#\n# ~~~ WARNING ~~~ If the computer running Redis is directly exposed to the\n# internet, binding to all the interfaces is dangerous and will expose the\n# instance to everybody on the internet. So by default we uncomment the\n# following bind directive, that will force Redis to listen only on the\n# IPv4 and IPv6 (if available) loopback interface addresses (this means Redis\n# will only be able to accept client connections from the same host that it is\n# running on).\n#\n# IF YOU ARE SURE YOU WANT YOUR INSTANCE TO LISTEN TO ALL THE INTERFACES\n# JUST COMMENT OUT THE FOLLOWING LINE.\n# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n# bind 127.0.0.1 -::1\n\n# Protected mode is a layer of security protection, in order to avoid that\n# Redis instances left open on the internet are accessed and exploited.\n#\n# When protected mode is on and if:\n#\n# 1) The server is not binding explicitly to a set of addresses using the\n#    &quot;bind&quot; directive.\n# 2) No password is configured.\n#\n# The server only accepts connections from clients connecting from the\n# IPv4 and IPv6 loopback addresses 127.0.0.1 and ::1, and from Unix domain\n# sockets.\n#\n# By default protected mode is enabled. You should disable it only if\n# you are sure you want clients from other hosts to connect to Redis\n# even if no authentication is configured, nor a specific set of interfaces\n# are explicitly listed using the &quot;bind&quot; directive.\nprotected-mode no\n\n# Accept connections on the specified port, default is 6379 (IANA #815344).\n# If port 0 is specified Redis will not listen on a TCP socket.\nport 6379\n\n# TCP listen() backlog.\n#\n# In high requests-per-second environments you need a high backlog in order\n# to avoid slow clients connection issues. Note that the Linux kernel\n# will silently truncate it to the value of &#x2F;proc&#x2F;sys&#x2F;net&#x2F;core&#x2F;somaxconn so\n# make sure to raise both the value of somaxconn and tcp_max_syn_backlog\n# in order to get the desired effect.\ntcp-backlog 511\n\n# Unix socket.\n#\n# Specify the path for the Unix socket that will be used to listen for\n# incoming connections. There is no default, so Redis will not listen\n# on a unix socket when not specified.\n#\n# unixsocket &#x2F;run&#x2F;redis.sock\n# unixsocketperm 700\n\n# Close the connection after a client is idle for N seconds (0 to disable)\ntimeout 0\n\n# TCP keepalive.\n#\n# If non-zero, use SO_KEEPALIVE to send TCP ACKs to clients in absence\n# of communication. This is useful for two reasons:\n#\n# 1) Detect dead peers.\n# 2) Force network equipment in the middle to consider the connection to be\n#    alive.\n#\n# On Linux, the specified value (in seconds) is the period used to send ACKs.\n# Note that to close the connection the double of the time is needed.\n# On other kernels the period depends on the kernel configuration.\n#\n# A reasonable value for this option is 300 seconds, which is the new\n# Redis default starting with Redis 3.2.1.\ntcp-keepalive 300\n\n################################# TLS&#x2F;SSL #####################################\n\n# By default, TLS&#x2F;SSL is disabled. To enable it, the &quot;tls-port&quot; configuration\n# directive can be used to define TLS-listening ports. To enable TLS on the\n# default port, use:\n#\n# port 0\n# tls-port 6379\n\n# Configure a X.509 certificate and private key to use for authenticating the\n# server to connected clients, masters or cluster peers.  These files should be\n# PEM formatted.\n#\n# tls-cert-file redis.crt \n# tls-key-file redis.key\n#\n# If the key file is encrypted using a passphrase, it can be included here\n# as well.\n#\n# tls-key-file-pass secret\n\n# Normally Redis uses the same certificate for both server functions (accepting\n# connections) and client functions (replicating from a master, establishing\n# cluster bus connections, etc.).\n#\n# Sometimes certificates are issued with attributes that designate them as\n# client-only or server-only certificates. In that case it may be desired to use\n# different certificates for incoming (server) and outgoing (client)\n# connections. To do that, use the following directives:\n#\n# tls-client-cert-file client.crt\n# tls-client-key-file client.key\n#\n# If the key file is encrypted using a passphrase, it can be included here\n# as well.\n#\n# tls-client-key-file-pass secret\n\n# Configure a DH parameters file to enable Diffie-Hellman (DH) key exchange:\n#\n# tls-dh-params-file redis.dh\n\n# Configure a CA certificate(s) bundle or directory to authenticate TLS&#x2F;SSL\n# clients and peers.  Redis requires an explicit configuration of at least one\n# of these, and will not implicitly use the system wide configuration.\n#\n# tls-ca-cert-file ca.crt\n# tls-ca-cert-dir &#x2F;etc&#x2F;ssl&#x2F;certs\n\n# By default, clients (including replica servers) on a TLS port are required\n# to authenticate using valid client side certificates.\n#\n# If &quot;no&quot; is specified, client certificates are not required and not accepted.\n# If &quot;optional&quot; is specified, client certificates are accepted and must be\n# valid if provided, but are not required.\n#\n# tls-auth-clients no\n# tls-auth-clients optional\n\n# By default, a Redis replica does not attempt to establish a TLS connection\n# with its master.\n#\n# Use the following directive to enable TLS on replication links.\n#\n# tls-replication yes\n\n# By default, the Redis Cluster bus uses a plain TCP connection. To enable\n# TLS for the bus protocol, use the following directive:\n#\n# tls-cluster yes\n\n# By default, only TLSv1.2 and TLSv1.3 are enabled and it is highly recommended\n# that older formally deprecated versions are kept disabled to reduce the attack surface.\n# You can explicitly specify TLS versions to support.\n# Allowed values are case insensitive and include &quot;TLSv1&quot;, &quot;TLSv1.1&quot;, &quot;TLSv1.2&quot;,\n# &quot;TLSv1.3&quot; (OpenSSL &gt;&#x3D; 1.1.1) or any combination.\n# To enable only TLSv1.2 and TLSv1.3, use:\n#\n# tls-protocols &quot;TLSv1.2 TLSv1.3&quot;\n\n# Configure allowed ciphers.  See the ciphers(1ssl) manpage for more information\n# about the syntax of this string.\n#\n# Note: this configuration applies only to &lt;&#x3D; TLSv1.2.\n#\n# tls-ciphers DEFAULT:!MEDIUM\n\n# Configure allowed TLSv1.3 ciphersuites.  See the ciphers(1ssl) manpage for more\n# information about the syntax of this string, and specifically for TLSv1.3\n# ciphersuites.\n#\n# tls-ciphersuites TLS_CHACHA20_POLY1305_SHA256\n\n# When choosing a cipher, use the server&#39;s preference instead of the client\n# preference. By default, the server follows the client&#39;s preference.\n#\n# tls-prefer-server-ciphers yes\n\n# By default, TLS session caching is enabled to allow faster and less expensive\n# reconnections by clients that support it. Use the following directive to disable\n# caching.\n#\n# tls-session-caching no\n\n# Change the default number of TLS sessions cached. A zero value sets the cache\n# to unlimited size. The default size is 20480.\n#\n# tls-session-cache-size 5000\n\n# Change the default timeout of cached TLS sessions. The default timeout is 300\n# seconds.\n#\n# tls-session-cache-timeout 60\n\n################################# GENERAL #####################################\n\n# By default Redis does not run as a daemon. Use &#39;yes&#39; if you need it.\n# Note that Redis will write a pid file in &#x2F;var&#x2F;run&#x2F;redis.pid when daemonized.\n# When Redis is supervised by upstart or systemd, this parameter has no impact.\ndaemonize no\n\n# If you run Redis from upstart or systemd, Redis can interact with your\n# supervision tree. Options:\n#   supervised no      - no supervision interaction\n#   supervised upstart - signal upstart by putting Redis into SIGSTOP mode\n#                        requires &quot;expect stop&quot; in your upstart job config\n#   supervised systemd - signal systemd by writing READY&#x3D;1 to $NOTIFY_SOCKET\n#                        on startup, and updating Redis status on a regular\n#                        basis.\n#   supervised auto    - detect upstart or systemd method based on\n#                        UPSTART_JOB or NOTIFY_SOCKET environment variables\n# Note: these supervision methods only signal &quot;process is ready.&quot;\n#       They do not enable continuous pings back to your supervisor.\n#\n# The default is &quot;no&quot;. To run under upstart&#x2F;systemd, you can simply uncomment\n# the line below:\n#\n# supervised auto\n\n# If a pid file is specified, Redis writes it where specified at startup\n# and removes it at exit.\n#\n# When the server runs non daemonized, no pid file is created if none is\n# specified in the configuration. When the server is daemonized, the pid file\n# is used even if not specified, defaulting to &quot;&#x2F;var&#x2F;run&#x2F;redis.pid&quot;.\n#\n# Creating a pid file is best effort: if Redis is not able to create it\n# nothing bad happens, the server will start and run normally.\n#\n# Note that on modern Linux systems &quot;&#x2F;run&#x2F;redis.pid&quot; is more conforming\n# and should be used instead.\npidfile &#x2F;var&#x2F;run&#x2F;redis_6379.pid\n\n# Specify the server verbosity level.\n# This can be one of:\n# debug (a lot of information, useful for development&#x2F;testing)\n# verbose (many rarely useful info, but not a mess like the debug level)\n# notice (moderately verbose, what you want in production probably)\n# warning (only very important &#x2F; critical messages are logged)\nloglevel notice\n\n# Specify the log file name. Also the empty string can be used to force\n# Redis to log on the standard output. Note that if you use standard\n# output for logging but daemonize, logs will be sent to &#x2F;dev&#x2F;null\nlogfile &quot;&quot;\n\n# To enable logging to the system logger, just set &#39;syslog-enabled&#39; to yes,\n# and optionally update the other syslog parameters to suit your needs.\n# syslog-enabled no\n\n# Specify the syslog identity.\n# syslog-ident redis\n\n# Specify the syslog facility. Must be USER or between LOCAL0-LOCAL7.\n# syslog-facility local0\n\n# To disable the built in crash log, which will possibly produce cleaner core\n# dumps when they are needed, uncomment the following:\n#\n# crash-log-enabled no\n\n# To disable the fast memory check that&#39;s run as part of the crash log, which\n# will possibly let redis terminate sooner, uncomment the following:\n#\n# crash-memcheck-enabled no\n\n# Set the number of databases. The default database is DB 0, you can select\n# a different one on a per-connection basis using SELECT &lt;dbid&gt; where\n# dbid is a number between 0 and &#39;databases&#39;-1\ndatabases 16\n\n# By default Redis shows an ASCII art logo only when started to log to the\n# standard output and if the standard output is a TTY and syslog logging is\n# disabled. Basically this means that normally a logo is displayed only in\n# interactive sessions.\n#\n# However it is possible to force the pre-4.0 behavior and always show a\n# ASCII art logo in startup logs by setting the following option to yes.\nalways-show-logo no\n\n# By default, Redis modifies the process title (as seen in &#39;top&#39; and &#39;ps&#39;) to\n# provide some runtime information. It is possible to disable this and leave\n# the process name as executed by setting the following to no.\nset-proc-title yes\n\n# When changing the process title, Redis uses the following template to construct\n# the modified title.\n#\n# Template variables are specified in curly brackets. The following variables are\n# supported:\n#\n# &#123;title&#125;           Name of process as executed if parent, or type of child process.\n# &#123;listen-addr&#125;     Bind address or &#39;*&#39; followed by TCP or TLS port listening on, or\n#                   Unix socket if only that&#39;s available.\n# &#123;server-mode&#125;     Special mode, i.e. &quot;[sentinel]&quot; or &quot;[cluster]&quot;.\n# &#123;port&#125;            TCP port listening on, or 0.\n# &#123;tls-port&#125;        TLS port listening on, or 0.\n# &#123;unixsocket&#125;      Unix domain socket listening on, or &quot;&quot;.\n# &#123;config-file&#125;     Name of configuration file used.\n#\nproc-title-template &quot;&#123;title&#125; &#123;listen-addr&#125; &#123;server-mode&#125;&quot;\n\n################################ SNAPSHOTTING  ################################\n\n# Save the DB to disk.\n#\n# save &lt;seconds&gt; &lt;changes&gt;\n#\n# Redis will save the DB if both the given number of seconds and the given\n# number of write operations against the DB occurred.\n#\n# Snapshotting can be completely disabled with a single empty string argument\n# as in following example:\n#\n# save &quot;&quot;\n#\n# Unless specified otherwise, by default Redis will save the DB:\n#   * After 3600 seconds (an hour) if at least 1 key changed\n#   * After 300 seconds (5 minutes) if at least 100 keys changed\n#   * After 60 seconds if at least 10000 keys changed\n#\n# You can set these explicitly by uncommenting the three following lines.\n#\n# save 3600 1\n# save 300 100\n# save 60 10000\n\n# By default Redis will stop accepting writes if RDB snapshots are enabled\n# (at least one save point) and the latest background save failed.\n# This will make the user aware (in a hard way) that data is not persisting\n# on disk properly, otherwise chances are that no one will notice and some\n# disaster will happen.\n#\n# If the background saving process will start working again Redis will\n# automatically allow writes again.\n#\n# However if you have setup your proper monitoring of the Redis server\n# and persistence, you may want to disable this feature so that Redis will\n# continue to work as usual even if there are problems with disk,\n# permissions, and so forth.\nstop-writes-on-bgsave-error yes\n\n# Compress string objects using LZF when dump .rdb databases?\n# By default compression is enabled as it&#39;s almost always a win.\n# If you want to save some CPU in the saving child set it to &#39;no&#39; but\n# the dataset will likely be bigger if you have compressible values or keys.\nrdbcompression yes\n\n# Since version 5 of RDB a CRC64 checksum is placed at the end of the file.\n# This makes the format more resistant to corruption but there is a performance\n# hit to pay (around 10%) when saving and loading RDB files, so you can disable it\n# for maximum performances.\n#\n# RDB files created with checksum disabled have a checksum of zero that will\n# tell the loading code to skip the check.\nrdbchecksum yes\n\n# Enables or disables full sanitation checks for ziplist and listpack etc when\n# loading an RDB or RESTORE payload. This reduces the chances of a assertion or\n# crash later on while processing commands.\n# Options:\n#   no         - Never perform full sanitation\n#   yes        - Always perform full sanitation\n#   clients    - Perform full sanitation only for user connections.\n#                Excludes: RDB files, RESTORE commands received from the master\n#                connection, and client connections which have the\n#                skip-sanitize-payload ACL flag.\n# The default should be &#39;clients&#39; but since it currently affects cluster\n# resharding via MIGRATE, it is temporarily set to &#39;no&#39; by default.\n#\n# sanitize-dump-payload no\n\n# The filename where to dump the DB\ndbfilename dump.rdb\n\n# Remove RDB files used by replication in instances without persistence\n# enabled. By default this option is disabled, however there are environments\n# where for regulations or other security concerns, RDB files persisted on\n# disk by masters in order to feed replicas, or stored on disk by replicas\n# in order to load them for the initial synchronization, should be deleted\n# ASAP. Note that this option ONLY WORKS in instances that have both AOF\n# and RDB persistence disabled, otherwise is completely ignored.\n#\n# An alternative (and sometimes better) way to obtain the same effect is\n# to use diskless replication on both master and replicas instances. However\n# in the case of replicas, diskless is not always an option.\nrdb-del-sync-files no\n\n# The working directory.\n#\n# The DB will be written inside this directory, with the filename specified\n# above using the &#39;dbfilename&#39; configuration directive.\n#\n# The Append Only File will also be created inside this directory.\n#\n# Note that you must specify a directory here, not a file name.\ndir .&#x2F;\n\n################################# REPLICATION #################################\n\n# Master-Replica replication. Use replicaof to make a Redis instance a copy of\n# another Redis server. A few things to understand ASAP about Redis replication.\n#\n#   +------------------+      +---------------+\n#   |      Master      | ---&gt; |    Replica    |\n#   | (receive writes) |      |  (exact copy) |\n#   +------------------+      +---------------+\n#\n# 1) Redis replication is asynchronous, but you can configure a master to\n#    stop accepting writes if it appears to be not connected with at least\n#    a given number of replicas.\n# 2) Redis replicas are able to perform a partial resynchronization with the\n#    master if the replication link is lost for a relatively small amount of\n#    time. You may want to configure the replication backlog size (see the next\n#    sections of this file) with a sensible value depending on your needs.\n# 3) Replication is automatic and does not need user intervention. After a\n#    network partition replicas automatically try to reconnect to masters\n#    and resynchronize with them.\n#\n# replicaof &lt;masterip&gt; &lt;masterport&gt;\n\n# If the master is password protected (using the &quot;requirepass&quot; configuration\n# directive below) it is possible to tell the replica to authenticate before\n# starting the replication synchronization process, otherwise the master will\n# refuse the replica request.\n#\n# masterauth &lt;master-password&gt;\n#\n# However this is not enough if you are using Redis ACLs (for Redis version\n# 6 or greater), and the default user is not capable of running the PSYNC\n# command and&#x2F;or other commands needed for replication. In this case it&#39;s\n# better to configure a special user to use with replication, and specify the\n# masteruser configuration as such:\n#\n# masteruser &lt;username&gt;\n#\n# When masteruser is specified, the replica will authenticate against its\n# master using the new AUTH form: AUTH &lt;username&gt; &lt;password&gt;.\n\n# When a replica loses its connection with the master, or when the replication\n# is still in progress, the replica can act in two different ways:\n#\n# 1) if replica-serve-stale-data is set to &#39;yes&#39; (the default) the replica will\n#    still reply to client requests, possibly with out of date data, or the\n#    data set may just be empty if this is the first synchronization.\n#\n# 2) If replica-serve-stale-data is set to &#39;no&#39; the replica will reply with\n#    an error &quot;SYNC with master in progress&quot; to all commands except:\n#    INFO, REPLICAOF, AUTH, PING, SHUTDOWN, REPLCONF, ROLE, CONFIG, SUBSCRIBE,\n#    UNSUBSCRIBE, PSUBSCRIBE, PUNSUBSCRIBE, PUBLISH, PUBSUB, COMMAND, POST,\n#    HOST and LATENCY.\n#\nreplica-serve-stale-data yes\n\n# You can configure a replica instance to accept writes or not. Writing against\n# a replica instance may be useful to store some ephemeral data (because data\n# written on a replica will be easily deleted after resync with the master) but\n# may also cause problems if clients are writing to it because of a\n# misconfiguration.\n#\n# Since Redis 2.6 by default replicas are read-only.\n#\n# Note: read only replicas are not designed to be exposed to untrusted clients\n# on the internet. It&#39;s just a protection layer against misuse of the instance.\n# Still a read only replica exports by default all the administrative commands\n# such as CONFIG, DEBUG, and so forth. To a limited extent you can improve\n# security of read only replicas using &#39;rename-command&#39; to shadow all the\n# administrative &#x2F; dangerous commands.\nreplica-read-only yes\n\n# Replication SYNC strategy: disk or socket.\n#\n# New replicas and reconnecting replicas that are not able to continue the\n# replication process just receiving differences, need to do what is called a\n# &quot;full synchronization&quot;. An RDB file is transmitted from the master to the\n# replicas.\n#\n# The transmission can happen in two different ways:\n#\n# 1) Disk-backed: The Redis master creates a new process that writes the RDB\n#                 file on disk. Later the file is transferred by the parent\n#                 process to the replicas incrementally.\n# 2) Diskless: The Redis master creates a new process that directly writes the\n#              RDB file to replica sockets, without touching the disk at all.\n#\n# With disk-backed replication, while the RDB file is generated, more replicas\n# can be queued and served with the RDB file as soon as the current child\n# producing the RDB file finishes its work. With diskless replication instead\n# once the transfer starts, new replicas arriving will be queued and a new\n# transfer will start when the current one terminates.\n#\n# When diskless replication is used, the master waits a configurable amount of\n# time (in seconds) before starting the transfer in the hope that multiple\n# replicas will arrive and the transfer can be parallelized.\n#\n# With slow disks and fast (large bandwidth) networks, diskless replication\n# works better.\nrepl-diskless-sync no\n\n# When diskless replication is enabled, it is possible to configure the delay\n# the server waits in order to spawn the child that transfers the RDB via socket\n# to the replicas.\n#\n# This is important since once the transfer starts, it is not possible to serve\n# new replicas arriving, that will be queued for the next RDB transfer, so the\n# server waits a delay in order to let more replicas arrive.\n#\n# The delay is specified in seconds, and by default is 5 seconds. To disable\n# it entirely just set it to 0 seconds and the transfer will start ASAP.\nrepl-diskless-sync-delay 5\n\n# -----------------------------------------------------------------------------\n# WARNING: RDB diskless load is experimental. Since in this setup the replica\n# does not immediately store an RDB on disk, it may cause data loss during\n# failovers. RDB diskless load + Redis modules not handling I&#x2F;O reads may also\n# cause Redis to abort in case of I&#x2F;O errors during the initial synchronization\n# stage with the master. Use only if you know what you are doing.\n# -----------------------------------------------------------------------------\n#\n# Replica can load the RDB it reads from the replication link directly from the\n# socket, or store the RDB to a file and read that file after it was completely\n# received from the master.\n#\n# In many cases the disk is slower than the network, and storing and loading\n# the RDB file may increase replication time (and even increase the master&#39;s\n# Copy on Write memory and salve buffers).\n# However, parsing the RDB file directly from the socket may mean that we have\n# to flush the contents of the current database before the full rdb was\n# received. For this reason we have the following options:\n#\n# &quot;disabled&quot;    - Don&#39;t use diskless load (store the rdb file to the disk first)\n# &quot;on-empty-db&quot; - Use diskless load only when it is completely safe.\n# &quot;swapdb&quot;      - Keep a copy of the current db contents in RAM while parsing\n#                 the data directly from the socket. note that this requires\n#                 sufficient memory, if you don&#39;t have it, you risk an OOM kill.\nrepl-diskless-load disabled\n\n# Replicas send PINGs to server in a predefined interval. It&#39;s possible to\n# change this interval with the repl_ping_replica_period option. The default\n# value is 10 seconds.\n#\n# repl-ping-replica-period 10\n\n# The following option sets the replication timeout for:\n#\n# 1) Bulk transfer I&#x2F;O during SYNC, from the point of view of replica.\n# 2) Master timeout from the point of view of replicas (data, pings).\n# 3) Replica timeout from the point of view of masters (REPLCONF ACK pings).\n#\n# It is important to make sure that this value is greater than the value\n# specified for repl-ping-replica-period otherwise a timeout will be detected\n# every time there is low traffic between the master and the replica. The default\n# value is 60 seconds.\n#\n# repl-timeout 60\n\n# Disable TCP_NODELAY on the replica socket after SYNC?\n#\n# If you select &quot;yes&quot; Redis will use a smaller number of TCP packets and\n# less bandwidth to send data to replicas. But this can add a delay for\n# the data to appear on the replica side, up to 40 milliseconds with\n# Linux kernels using a default configuration.\n#\n# If you select &quot;no&quot; the delay for data to appear on the replica side will\n# be reduced but more bandwidth will be used for replication.\n#\n# By default we optimize for low latency, but in very high traffic conditions\n# or when the master and replicas are many hops away, turning this to &quot;yes&quot; may\n# be a good idea.\nrepl-disable-tcp-nodelay no\n\n# Set the replication backlog size. The backlog is a buffer that accumulates\n# replica data when replicas are disconnected for some time, so that when a\n# replica wants to reconnect again, often a full resync is not needed, but a\n# partial resync is enough, just passing the portion of data the replica\n# missed while disconnected.\n#\n# The bigger the replication backlog, the longer the replica can endure the\n# disconnect and later be able to perform a partial resynchronization.\n#\n# The backlog is only allocated if there is at least one replica connected.\n#\n# repl-backlog-size 1mb\n\n# After a master has no connected replicas for some time, the backlog will be\n# freed. The following option configures the amount of seconds that need to\n# elapse, starting from the time the last replica disconnected, for the backlog\n# buffer to be freed.\n#\n# Note that replicas never free the backlog for timeout, since they may be\n# promoted to masters later, and should be able to correctly &quot;partially\n# resynchronize&quot; with other replicas: hence they should always accumulate backlog.\n#\n# A value of 0 means to never release the backlog.\n#\n# repl-backlog-ttl 3600\n\n# The replica priority is an integer number published by Redis in the INFO\n# output. It is used by Redis Sentinel in order to select a replica to promote\n# into a master if the master is no longer working correctly.\n#\n# A replica with a low priority number is considered better for promotion, so\n# for instance if there are three replicas with priority 10, 100, 25 Sentinel\n# will pick the one with priority 10, that is the lowest.\n#\n# However a special priority of 0 marks the replica as not able to perform the\n# role of master, so a replica with priority of 0 will never be selected by\n# Redis Sentinel for promotion.\n#\n# By default the priority is 100.\nreplica-priority 100\n\n# -----------------------------------------------------------------------------\n# By default, Redis Sentinel includes all replicas in its reports. A replica\n# can be excluded from Redis Sentinel&#39;s announcements. An unannounced replica\n# will be ignored by the &#39;sentinel replicas &lt;master&gt;&#39; command and won&#39;t be\n# exposed to Redis Sentinel&#39;s clients.\n#\n# This option does not change the behavior of replica-priority. Even with\n# replica-announced set to &#39;no&#39;, the replica can be promoted to master. To\n# prevent this behavior, set replica-priority to 0.\n#\n# replica-announced yes\n\n# It is possible for a master to stop accepting writes if there are less than\n# N replicas connected, having a lag less or equal than M seconds.\n#\n# The N replicas need to be in &quot;online&quot; state.\n#\n# The lag in seconds, that must be &lt;&#x3D; the specified value, is calculated from\n# the last ping received from the replica, that is usually sent every second.\n#\n# This option does not GUARANTEE that N replicas will accept the write, but\n# will limit the window of exposure for lost writes in case not enough replicas\n# are available, to the specified number of seconds.\n#\n# For example to require at least 3 replicas with a lag &lt;&#x3D; 10 seconds use:\n#\n# min-replicas-to-write 3\n# min-replicas-max-lag 10\n#\n# Setting one or the other to 0 disables the feature.\n#\n# By default min-replicas-to-write is set to 0 (feature disabled) and\n# min-replicas-max-lag is set to 10.\n\n# A Redis master is able to list the address and port of the attached\n# replicas in different ways. For example the &quot;INFO replication&quot; section\n# offers this information, which is used, among other tools, by\n# Redis Sentinel in order to discover replica instances.\n# Another place where this info is available is in the output of the\n# &quot;ROLE&quot; command of a master.\n#\n# The listed IP address and port normally reported by a replica is\n# obtained in the following way:\n#\n#   IP: The address is auto detected by checking the peer address\n#   of the socket used by the replica to connect with the master.\n#\n#   Port: The port is communicated by the replica during the replication\n#   handshake, and is normally the port that the replica is using to\n#   listen for connections.\n#\n# However when port forwarding or Network Address Translation (NAT) is\n# used, the replica may actually be reachable via different IP and port\n# pairs. The following two options can be used by a replica in order to\n# report to its master a specific set of IP and port, so that both INFO\n# and ROLE will report those values.\n#\n# There is no need to use both the options if you need to override just\n# the port or the IP address.\n#\n# replica-announce-ip 5.5.5.5\n# replica-announce-port 1234\n\n############################### KEYS TRACKING #################################\n\n# Redis implements server assisted support for client side caching of values.\n# This is implemented using an invalidation table that remembers, using\n# a radix key indexed by key name, what clients have which keys. In turn\n# this is used in order to send invalidation messages to clients. Please\n# check this page to understand more about the feature:\n#\n#   https:&#x2F;&#x2F;redis.io&#x2F;topics&#x2F;client-side-caching\n#\n# When tracking is enabled for a client, all the read only queries are assumed\n# to be cached: this will force Redis to store information in the invalidation\n# table. When keys are modified, such information is flushed away, and\n# invalidation messages are sent to the clients. However if the workload is\n# heavily dominated by reads, Redis could use more and more memory in order\n# to track the keys fetched by many clients.\n#\n# For this reason it is possible to configure a maximum fill value for the\n# invalidation table. By default it is set to 1M of keys, and once this limit\n# is reached, Redis will start to evict keys in the invalidation table\n# even if they were not modified, just to reclaim memory: this will in turn\n# force the clients to invalidate the cached values. Basically the table\n# maximum size is a trade off between the memory you want to spend server\n# side to track information about who cached what, and the ability of clients\n# to retain cached objects in memory.\n#\n# If you set the value to 0, it means there are no limits, and Redis will\n# retain as many keys as needed in the invalidation table.\n# In the &quot;stats&quot; INFO section, you can find information about the number of\n# keys in the invalidation table at every given moment.\n#\n# Note: when key tracking is used in broadcasting mode, no memory is used\n# in the server side so this setting is useless.\n#\n# tracking-table-max-keys 1000000\n\n################################## SECURITY ###################################\n\n# Warning: since Redis is pretty fast, an outside user can try up to\n# 1 million passwords per second against a modern box. This means that you\n# should use very strong passwords, otherwise they will be very easy to break.\n# Note that because the password is really a shared secret between the client\n# and the server, and should not be memorized by any human, the password\n# can be easily a long string from &#x2F;dev&#x2F;urandom or whatever, so by using a\n# long and unguessable password no brute force attack will be possible.\n\n# Redis ACL users are defined in the following format:\n#\n#   user &lt;username&gt; ... acl rules ...\n#\n# For example:\n#\n#   user worker +@list +@connection ~jobs:* on &gt;ffa9203c493aa99\n#\n# The special username &quot;default&quot; is used for new connections. If this user\n# has the &quot;nopass&quot; rule, then new connections will be immediately authenticated\n# as the &quot;default&quot; user without the need of any password provided via the\n# AUTH command. Otherwise if the &quot;default&quot; user is not flagged with &quot;nopass&quot;\n# the connections will start in not authenticated state, and will require\n# AUTH (or the HELLO command AUTH option) in order to be authenticated and\n# start to work.\n#\n# The ACL rules that describe what a user can do are the following:\n#\n#  on           Enable the user: it is possible to authenticate as this user.\n#  off          Disable the user: it&#39;s no longer possible to authenticate\n#               with this user, however the already authenticated connections\n#               will still work.\n#  skip-sanitize-payload    RESTORE dump-payload sanitation is skipped.\n#  sanitize-payload         RESTORE dump-payload is sanitized (default).\n#  +&lt;command&gt;   Allow the execution of that command\n#  -&lt;command&gt;   Disallow the execution of that command\n#  +@&lt;category&gt; Allow the execution of all the commands in such category\n#               with valid categories are like @admin, @set, @sortedset, ...\n#               and so forth, see the full list in the server.c file where\n#               the Redis command table is described and defined.\n#               The special category @all means all the commands, but currently\n#               present in the server, and that will be loaded in the future\n#               via modules.\n#  +&lt;command&gt;|subcommand    Allow a specific subcommand of an otherwise\n#                           disabled command. Note that this form is not\n#                           allowed as negative like -DEBUG|SEGFAULT, but\n#                           only additive starting with &quot;+&quot;.\n#  allcommands  Alias for +@all. Note that it implies the ability to execute\n#               all the future commands loaded via the modules system.\n#  nocommands   Alias for -@all.\n#  ~&lt;pattern&gt;   Add a pattern of keys that can be mentioned as part of\n#               commands. For instance ~* allows all the keys. The pattern\n#               is a glob-style pattern like the one of KEYS.\n#               It is possible to specify multiple patterns.\n#  allkeys      Alias for ~*\n#  resetkeys    Flush the list of allowed keys patterns.\n#  &amp;&lt;pattern&gt;   Add a glob-style pattern of Pub&#x2F;Sub channels that can be\n#               accessed by the user. It is possible to specify multiple channel\n#               patterns.\n#  allchannels  Alias for &amp;*\n#  resetchannels            Flush the list of allowed channel patterns.\n#  &gt;&lt;password&gt;  Add this password to the list of valid password for the user.\n#               For example &gt;mypass will add &quot;mypass&quot; to the list.\n#               This directive clears the &quot;nopass&quot; flag (see later).\n#  &lt;&lt;password&gt;  Remove this password from the list of valid passwords.\n#  nopass       All the set passwords of the user are removed, and the user\n#               is flagged as requiring no password: it means that every\n#               password will work against this user. If this directive is\n#               used for the default user, every new connection will be\n#               immediately authenticated with the default user without\n#               any explicit AUTH command required. Note that the &quot;resetpass&quot;\n#               directive will clear this condition.\n#  resetpass    Flush the list of allowed passwords. Moreover removes the\n#               &quot;nopass&quot; status. After &quot;resetpass&quot; the user has no associated\n#               passwords and there is no way to authenticate without adding\n#               some password (or setting it as &quot;nopass&quot; later).\n#  reset        Performs the following actions: resetpass, resetkeys, off,\n#               -@all. The user returns to the same state it has immediately\n#               after its creation.\n#\n# ACL rules can be specified in any order: for instance you can start with\n# passwords, then flags, or key patterns. However note that the additive\n# and subtractive rules will CHANGE MEANING depending on the ordering.\n# For instance see the following example:\n#\n#   user alice on +@all -DEBUG ~* &gt;somepassword\n#\n# This will allow &quot;alice&quot; to use all the commands with the exception of the\n# DEBUG command, since +@all added all the commands to the set of the commands\n# alice can use, and later DEBUG was removed. However if we invert the order\n# of two ACL rules the result will be different:\n#\n#   user alice on -DEBUG +@all ~* &gt;somepassword\n#\n# Now DEBUG was removed when alice had yet no commands in the set of allowed\n# commands, later all the commands are added, so the user will be able to\n# execute everything.\n#\n# Basically ACL rules are processed left-to-right.\n#\n# For more information about ACL configuration please refer to\n# the Redis web site at https:&#x2F;&#x2F;redis.io&#x2F;topics&#x2F;acl\n\n# ACL LOG\n#\n# The ACL Log tracks failed commands and authentication events associated\n# with ACLs. The ACL Log is useful to troubleshoot failed commands blocked \n# by ACLs. The ACL Log is stored in memory. You can reclaim memory with \n# ACL LOG RESET. Define the maximum entry length of the ACL Log below.\nacllog-max-len 128\n\n# Using an external ACL file\n#\n# Instead of configuring users here in this file, it is possible to use\n# a stand-alone file just listing users. The two methods cannot be mixed:\n# if you configure users here and at the same time you activate the external\n# ACL file, the server will refuse to start.\n#\n# The format of the external ACL user file is exactly the same as the\n# format that is used inside redis.conf to describe users.\n#\n# aclfile &#x2F;etc&#x2F;redis&#x2F;users.acl\n\n# IMPORTANT NOTE: starting with Redis 6 &quot;requirepass&quot; is just a compatibility\n# layer on top of the new ACL system. The option effect will be just setting\n# the password for the default user. Clients will still authenticate using\n# AUTH &lt;password&gt; as usually, or more explicitly with AUTH default &lt;password&gt;\n# if they follow the new protocol: both will work.\n#\n# The requirepass is not compatable with aclfile option and the ACL LOAD\n# command, these will cause requirepass to be ignored.\n#\nrequirepass huangge1199\n\n# New users are initialized with restrictive permissions by default, via the\n# equivalent of this ACL rule &#39;off resetkeys -@all&#39;. Starting with Redis 6.2, it\n# is possible to manage access to Pub&#x2F;Sub channels with ACL rules as well. The\n# default Pub&#x2F;Sub channels permission if new users is controlled by the \n# acl-pubsub-default configuration directive, which accepts one of these values:\n#\n# allchannels: grants access to all Pub&#x2F;Sub channels\n# resetchannels: revokes access to all Pub&#x2F;Sub channels\n#\n# To ensure backward compatibility while upgrading Redis 6.0, acl-pubsub-default\n# defaults to the &#39;allchannels&#39; permission.\n#\n# Future compatibility note: it is very likely that in a future version of Redis\n# the directive&#39;s default of &#39;allchannels&#39; will be changed to &#39;resetchannels&#39; in\n# order to provide better out-of-the-box Pub&#x2F;Sub security. Therefore, it is\n# recommended that you explicitly define Pub&#x2F;Sub permissions for all users\n# rather then rely on implicit default values. Once you&#39;ve set explicit\n# Pub&#x2F;Sub for all existing users, you should uncomment the following line.\n#\n# acl-pubsub-default resetchannels\n\n# Command renaming (DEPRECATED).\n#\n# ------------------------------------------------------------------------\n# WARNING: avoid using this option if possible. Instead use ACLs to remove\n# commands from the default user, and put them only in some admin user you\n# create for administrative purposes.\n# ------------------------------------------------------------------------\n#\n# It is possible to change the name of dangerous commands in a shared\n# environment. For instance the CONFIG command may be renamed into something\n# hard to guess so that it will still be available for internal-use tools\n# but not available for general clients.\n#\n# Example:\n#\n# rename-command CONFIG b840fc02d524045429941cc15f59e41cb7be6c52\n#\n# It is also possible to completely kill a command by renaming it into\n# an empty string:\n#\n# rename-command CONFIG &quot;&quot;\n#\n# Please note that changing the name of commands that are logged into the\n# AOF file or transmitted to replicas may cause problems.\n\n################################### CLIENTS ####################################\n\n# Set the max number of connected clients at the same time. By default\n# this limit is set to 10000 clients, however if the Redis server is not\n# able to configure the process file limit to allow for the specified limit\n# the max number of allowed clients is set to the current file limit\n# minus 32 (as Redis reserves a few file descriptors for internal uses).\n#\n# Once the limit is reached Redis will close all the new connections sending\n# an error &#39;max number of clients reached&#39;.\n#\n# IMPORTANT: When Redis Cluster is used, the max number of connections is also\n# shared with the cluster bus: every node in the cluster will use two\n# connections, one incoming and another outgoing. It is important to size the\n# limit accordingly in case of very large clusters.\n#\n# maxclients 10000\n\n############################## MEMORY MANAGEMENT ################################\n\n# Set a memory usage limit to the specified amount of bytes.\n# When the memory limit is reached Redis will try to remove keys\n# according to the eviction policy selected (see maxmemory-policy).\n#\n# If Redis can&#39;t remove keys according to the policy, or if the policy is\n# set to &#39;noeviction&#39;, Redis will start to reply with errors to commands\n# that would use more memory, like SET, LPUSH, and so on, and will continue\n# to reply to read-only commands like GET.\n#\n# This option is usually useful when using Redis as an LRU or LFU cache, or to\n# set a hard memory limit for an instance (using the &#39;noeviction&#39; policy).\n#\n# WARNING: If you have replicas attached to an instance with maxmemory on,\n# the size of the output buffers needed to feed the replicas are subtracted\n# from the used memory count, so that network problems &#x2F; resyncs will\n# not trigger a loop where keys are evicted, and in turn the output\n# buffer of replicas is full with DELs of keys evicted triggering the deletion\n# of more keys, and so forth until the database is completely emptied.\n#\n# In short... if you have replicas attached it is suggested that you set a lower\n# limit for maxmemory so that there is some free RAM on the system for replica\n# output buffers (but this is not needed if the policy is &#39;noeviction&#39;).\n#\n# maxmemory &lt;bytes&gt;\n\n# MAXMEMORY POLICY: how Redis will select what to remove when maxmemory\n# is reached. You can select one from the following behaviors:\n#\n# volatile-lru -&gt; Evict using approximated LRU, only keys with an expire set.\n# allkeys-lru -&gt; Evict any key using approximated LRU.\n# volatile-lfu -&gt; Evict using approximated LFU, only keys with an expire set.\n# allkeys-lfu -&gt; Evict any key using approximated LFU.\n# volatile-random -&gt; Remove a random key having an expire set.\n# allkeys-random -&gt; Remove a random key, any key.\n# volatile-ttl -&gt; Remove the key with the nearest expire time (minor TTL)\n# noeviction -&gt; Don&#39;t evict anything, just return an error on write operations.\n#\n# LRU means Least Recently Used\n# LFU means Least Frequently Used\n#\n# Both LRU, LFU and volatile-ttl are implemented using approximated\n# randomized algorithms.\n#\n# Note: with any of the above policies, when there are no suitable keys for\n# eviction, Redis will return an error on write operations that require\n# more memory. These are usually commands that create new keys, add data or\n# modify existing keys. A few examples are: SET, INCR, HSET, LPUSH, SUNIONSTORE,\n# SORT (due to the STORE argument), and EXEC (if the transaction includes any\n# command that requires memory).\n#\n# The default is:\n#\n# maxmemory-policy noeviction\n\n# LRU, LFU and minimal TTL algorithms are not precise algorithms but approximated\n# algorithms (in order to save memory), so you can tune it for speed or\n# accuracy. By default Redis will check five keys and pick the one that was\n# used least recently, you can change the sample size using the following\n# configuration directive.\n#\n# The default of 5 produces good enough results. 10 Approximates very closely\n# true LRU but costs more CPU. 3 is faster but not very accurate.\n#\n# maxmemory-samples 5\n\n# Eviction processing is designed to function well with the default setting.\n# If there is an unusually large amount of write traffic, this value may need to\n# be increased.  Decreasing this value may reduce latency at the risk of \n# eviction processing effectiveness\n#   0 &#x3D; minimum latency, 10 &#x3D; default, 100 &#x3D; process without regard to latency\n#\n# maxmemory-eviction-tenacity 10\n\n# Starting from Redis 5, by default a replica will ignore its maxmemory setting\n# (unless it is promoted to master after a failover or manually). It means\n# that the eviction of keys will be just handled by the master, sending the\n# DEL commands to the replica as keys evict in the master side.\n#\n# This behavior ensures that masters and replicas stay consistent, and is usually\n# what you want, however if your replica is writable, or you want the replica\n# to have a different memory setting, and you are sure all the writes performed\n# to the replica are idempotent, then you may change this default (but be sure\n# to understand what you are doing).\n#\n# Note that since the replica by default does not evict, it may end using more\n# memory than the one set via maxmemory (there are certain buffers that may\n# be larger on the replica, or data structures may sometimes take more memory\n# and so forth). So make sure you monitor your replicas and make sure they\n# have enough memory to never hit a real out-of-memory condition before the\n# master hits the configured maxmemory setting.\n#\n# replica-ignore-maxmemory yes\n\n# Redis reclaims expired keys in two ways: upon access when those keys are\n# found to be expired, and also in background, in what is called the\n# &quot;active expire key&quot;. The key space is slowly and interactively scanned\n# looking for expired keys to reclaim, so that it is possible to free memory\n# of keys that are expired and will never be accessed again in a short time.\n#\n# The default effort of the expire cycle will try to avoid having more than\n# ten percent of expired keys still in memory, and will try to avoid consuming\n# more than 25% of total memory and to add latency to the system. However\n# it is possible to increase the expire &quot;effort&quot; that is normally set to\n# &quot;1&quot;, to a greater value, up to the value &quot;10&quot;. At its maximum value the\n# system will use more CPU, longer cycles (and technically may introduce\n# more latency), and will tolerate less already expired keys still present\n# in the system. It&#39;s a tradeoff between memory, CPU and latency.\n#\n# active-expire-effort 1\n\n############################# LAZY FREEING ####################################\n\n# Redis has two primitives to delete keys. One is called DEL and is a blocking\n# deletion of the object. It means that the server stops processing new commands\n# in order to reclaim all the memory associated with an object in a synchronous\n# way. If the key deleted is associated with a small object, the time needed\n# in order to execute the DEL command is very small and comparable to most other\n# O(1) or O(log_N) commands in Redis. However if the key is associated with an\n# aggregated value containing millions of elements, the server can block for\n# a long time (even seconds) in order to complete the operation.\n#\n# For the above reasons Redis also offers non blocking deletion primitives\n# such as UNLINK (non blocking DEL) and the ASYNC option of FLUSHALL and\n# FLUSHDB commands, in order to reclaim memory in background. Those commands\n# are executed in constant time. Another thread will incrementally free the\n# object in the background as fast as possible.\n#\n# DEL, UNLINK and ASYNC option of FLUSHALL and FLUSHDB are user-controlled.\n# It&#39;s up to the design of the application to understand when it is a good\n# idea to use one or the other. However the Redis server sometimes has to\n# delete keys or flush the whole database as a side effect of other operations.\n# Specifically Redis deletes objects independently of a user call in the\n# following scenarios:\n#\n# 1) On eviction, because of the maxmemory and maxmemory policy configurations,\n#    in order to make room for new data, without going over the specified\n#    memory limit.\n# 2) Because of expire: when a key with an associated time to live (see the\n#    EXPIRE command) must be deleted from memory.\n# 3) Because of a side effect of a command that stores data on a key that may\n#    already exist. For example the RENAME command may delete the old key\n#    content when it is replaced with another one. Similarly SUNIONSTORE\n#    or SORT with STORE option may delete existing keys. The SET command\n#    itself removes any old content of the specified key in order to replace\n#    it with the specified string.\n# 4) During replication, when a replica performs a full resynchronization with\n#    its master, the content of the whole database is removed in order to\n#    load the RDB file just transferred.\n#\n# In all the above cases the default is to delete objects in a blocking way,\n# like if DEL was called. However you can configure each case specifically\n# in order to instead release memory in a non-blocking way like if UNLINK\n# was called, using the following configuration directives.\n\nlazyfree-lazy-eviction no\nlazyfree-lazy-expire no\nlazyfree-lazy-server-del no\nreplica-lazy-flush no\n\n# It is also possible, for the case when to replace the user code DEL calls\n# with UNLINK calls is not easy, to modify the default behavior of the DEL\n# command to act exactly like UNLINK, using the following configuration\n# directive:\n\nlazyfree-lazy-user-del no\n\n# FLUSHDB, FLUSHALL, and SCRIPT FLUSH support both asynchronous and synchronous\n# deletion, which can be controlled by passing the [SYNC|ASYNC] flags into the\n# commands. When neither flag is passed, this directive will be used to determine\n# if the data should be deleted asynchronously.\n\nlazyfree-lazy-user-flush no\n\n################################ THREADED I&#x2F;O #################################\n\n# Redis is mostly single threaded, however there are certain threaded\n# operations such as UNLINK, slow I&#x2F;O accesses and other things that are\n# performed on side threads.\n#\n# Now it is also possible to handle Redis clients socket reads and writes\n# in different I&#x2F;O threads. Since especially writing is so slow, normally\n# Redis users use pipelining in order to speed up the Redis performances per\n# core, and spawn multiple instances in order to scale more. Using I&#x2F;O\n# threads it is possible to easily speedup two times Redis without resorting\n# to pipelining nor sharding of the instance.\n#\n# By default threading is disabled, we suggest enabling it only in machines\n# that have at least 4 or more cores, leaving at least one spare core.\n# Using more than 8 threads is unlikely to help much. We also recommend using\n# threaded I&#x2F;O only if you actually have performance problems, with Redis\n# instances being able to use a quite big percentage of CPU time, otherwise\n# there is no point in using this feature.\n#\n# So for instance if you have a four cores boxes, try to use 2 or 3 I&#x2F;O\n# threads, if you have a 8 cores, try to use 6 threads. In order to\n# enable I&#x2F;O threads use the following configuration directive:\n#\n# io-threads 4\n#\n# Setting io-threads to 1 will just use the main thread as usual.\n# When I&#x2F;O threads are enabled, we only use threads for writes, that is\n# to thread the write(2) syscall and transfer the client buffers to the\n# socket. However it is also possible to enable threading of reads and\n# protocol parsing using the following configuration directive, by setting\n# it to yes:\n#\n# io-threads-do-reads no\n#\n# Usually threading reads doesn&#39;t help much.\n#\n# NOTE 1: This configuration directive cannot be changed at runtime via\n# CONFIG SET. Aso this feature currently does not work when SSL is\n# enabled.\n#\n# NOTE 2: If you want to test the Redis speedup using redis-benchmark, make\n# sure you also run the benchmark itself in threaded mode, using the\n# --threads option to match the number of Redis threads, otherwise you&#39;ll not\n# be able to notice the improvements.\n\n############################ KERNEL OOM CONTROL ##############################\n\n# On Linux, it is possible to hint the kernel OOM killer on what processes\n# should be killed first when out of memory.\n#\n# Enabling this feature makes Redis actively control the oom_score_adj value\n# for all its processes, depending on their role. The default scores will\n# attempt to have background child processes killed before all others, and\n# replicas killed before masters.\n#\n# Redis supports three options:\n#\n# no:       Don&#39;t make changes to oom-score-adj (default).\n# yes:      Alias to &quot;relative&quot; see below.\n# absolute: Values in oom-score-adj-values are written as is to the kernel.\n# relative: Values are used relative to the initial value of oom_score_adj when\n#           the server starts and are then clamped to a range of -1000 to 1000.\n#           Because typically the initial value is 0, they will often match the\n#           absolute values.\noom-score-adj no\n\n# When oom-score-adj is used, this directive controls the specific values used\n# for master, replica and background child processes. Values range -2000 to\n# 2000 (higher means more likely to be killed).\n#\n# Unprivileged processes (not root, and without CAP_SYS_RESOURCE capabilities)\n# can freely increase their value, but not decrease it below its initial\n# settings. This means that setting oom-score-adj to &quot;relative&quot; and setting the\n# oom-score-adj-values to positive values will always succeed.\noom-score-adj-values 0 200 800\n\n\n#################### KERNEL transparent hugepage CONTROL ######################\n\n# Usually the kernel Transparent Huge Pages control is set to &quot;madvise&quot; or\n# or &quot;never&quot; by default (&#x2F;sys&#x2F;kernel&#x2F;mm&#x2F;transparent_hugepage&#x2F;enabled), in which\n# case this config has no effect. On systems in which it is set to &quot;always&quot;,\n# redis will attempt to disable it specifically for the redis process in order\n# to avoid latency problems specifically with fork(2) and CoW.\n# If for some reason you prefer to keep it enabled, you can set this config to\n# &quot;no&quot; and the kernel global to &quot;always&quot;.\n\ndisable-thp yes\n\n############################## APPEND ONLY MODE ###############################\n\n# By default Redis asynchronously dumps the dataset on disk. This mode is\n# good enough in many applications, but an issue with the Redis process or\n# a power outage may result into a few minutes of writes lost (depending on\n# the configured save points).\n#\n# The Append Only File is an alternative persistence mode that provides\n# much better durability. For instance using the default data fsync policy\n# (see later in the config file) Redis can lose just one second of writes in a\n# dramatic event like a server power outage, or a single write if something\n# wrong with the Redis process itself happens, but the operating system is\n# still running correctly.\n#\n# AOF and RDB persistence can be enabled at the same time without problems.\n# If the AOF is enabled on startup Redis will load the AOF, that is the file\n# with the better durability guarantees.\n#\n# Please check https:&#x2F;&#x2F;redis.io&#x2F;topics&#x2F;persistence for more information.\n\nappendonly no\n\n# The name of the append only file (default: &quot;appendonly.aof&quot;)\n\nappendfilename &quot;appendonly.aof&quot;\n\n# The fsync() call tells the Operating System to actually write data on disk\n# instead of waiting for more data in the output buffer. Some OS will really flush\n# data on disk, some other OS will just try to do it ASAP.\n#\n# Redis supports three different modes:\n#\n# no: don&#39;t fsync, just let the OS flush the data when it wants. Faster.\n# always: fsync after every write to the append only log. Slow, Safest.\n# everysec: fsync only one time every second. Compromise.\n#\n# The default is &quot;everysec&quot;, as that&#39;s usually the right compromise between\n# speed and data safety. It&#39;s up to you to understand if you can relax this to\n# &quot;no&quot; that will let the operating system flush the output buffer when\n# it wants, for better performances (but if you can live with the idea of\n# some data loss consider the default persistence mode that&#39;s snapshotting),\n# or on the contrary, use &quot;always&quot; that&#39;s very slow but a bit safer than\n# everysec.\n#\n# More details please check the following article:\n# http:&#x2F;&#x2F;antirez.com&#x2F;post&#x2F;redis-persistence-demystified.html\n#\n# If unsure, use &quot;everysec&quot;.\n\n# appendfsync always\nappendfsync everysec\n# appendfsync no\n\n# When the AOF fsync policy is set to always or everysec, and a background\n# saving process (a background save or AOF log background rewriting) is\n# performing a lot of I&#x2F;O against the disk, in some Linux configurations\n# Redis may block too long on the fsync() call. Note that there is no fix for\n# this currently, as even performing fsync in a different thread will block\n# our synchronous write(2) call.\n#\n# In order to mitigate this problem it&#39;s possible to use the following option\n# that will prevent fsync() from being called in the main process while a\n# BGSAVE or BGREWRITEAOF is in progress.\n#\n# This means that while another child is saving, the durability of Redis is\n# the same as &quot;appendfsync none&quot;. In practical terms, this means that it is\n# possible to lose up to 30 seconds of log in the worst scenario (with the\n# default Linux settings).\n#\n# If you have latency problems turn this to &quot;yes&quot;. Otherwise leave it as\n# &quot;no&quot; that is the safest pick from the point of view of durability.\n\nno-appendfsync-on-rewrite no\n\n# Automatic rewrite of the append only file.\n# Redis is able to automatically rewrite the log file implicitly calling\n# BGREWRITEAOF when the AOF log size grows by the specified percentage.\n#\n# This is how it works: Redis remembers the size of the AOF file after the\n# latest rewrite (if no rewrite has happened since the restart, the size of\n# the AOF at startup is used).\n#\n# This base size is compared to the current size. If the current size is\n# bigger than the specified percentage, the rewrite is triggered. Also\n# you need to specify a minimal size for the AOF file to be rewritten, this\n# is useful to avoid rewriting the AOF file even if the percentage increase\n# is reached but it is still pretty small.\n#\n# Specify a percentage of zero in order to disable the automatic AOF\n# rewrite feature.\n\nauto-aof-rewrite-percentage 100\nauto-aof-rewrite-min-size 64mb\n\n# An AOF file may be found to be truncated at the end during the Redis\n# startup process, when the AOF data gets loaded back into memory.\n# This may happen when the system where Redis is running\n# crashes, especially when an ext4 filesystem is mounted without the\n# data&#x3D;ordered option (however this can&#39;t happen when Redis itself\n# crashes or aborts but the operating system still works correctly).\n#\n# Redis can either exit with an error when this happens, or load as much\n# data as possible (the default now) and start if the AOF file is found\n# to be truncated at the end. The following option controls this behavior.\n#\n# If aof-load-truncated is set to yes, a truncated AOF file is loaded and\n# the Redis server starts emitting a log to inform the user of the event.\n# Otherwise if the option is set to no, the server aborts with an error\n# and refuses to start. When the option is set to no, the user requires\n# to fix the AOF file using the &quot;redis-check-aof&quot; utility before to restart\n# the server.\n#\n# Note that if the AOF file will be found to be corrupted in the middle\n# the server will still exit with an error. This option only applies when\n# Redis will try to read more data from the AOF file but not enough bytes\n# will be found.\naof-load-truncated yes\n\n# When rewriting the AOF file, Redis is able to use an RDB preamble in the\n# AOF file for faster rewrites and recoveries. When this option is turned\n# on the rewritten AOF file is composed of two different stanzas:\n#\n#   [RDB file][AOF tail]\n#\n# When loading, Redis recognizes that the AOF file starts with the &quot;REDIS&quot;\n# string and loads the prefixed RDB file, then continues loading the AOF\n# tail.\naof-use-rdb-preamble yes\n\n################################ LUA SCRIPTING  ###############################\n\n# Max execution time of a Lua script in milliseconds.\n#\n# If the maximum execution time is reached Redis will log that a script is\n# still in execution after the maximum allowed time and will start to\n# reply to queries with an error.\n#\n# When a long running script exceeds the maximum execution time only the\n# SCRIPT KILL and SHUTDOWN NOSAVE commands are available. The first can be\n# used to stop a script that did not yet call any write commands. The second\n# is the only way to shut down the server in the case a write command was\n# already issued by the script but the user doesn&#39;t want to wait for the natural\n# termination of the script.\n#\n# Set it to 0 or a negative value for unlimited execution without warnings.\nlua-time-limit 5000\n\n################################ REDIS CLUSTER  ###############################\n\n# Normal Redis instances can&#39;t be part of a Redis Cluster; only nodes that are\n# started as cluster nodes can. In order to start a Redis instance as a\n# cluster node enable the cluster support uncommenting the following:\n#\n# cluster-enabled yes\n\n# Every cluster node has a cluster configuration file. This file is not\n# intended to be edited by hand. It is created and updated by Redis nodes.\n# Every Redis Cluster node requires a different cluster configuration file.\n# Make sure that instances running in the same system do not have\n# overlapping cluster configuration file names.\n#\n# cluster-config-file nodes-6379.conf\n\n# Cluster node timeout is the amount of milliseconds a node must be unreachable\n# for it to be considered in failure state.\n# Most other internal time limits are a multiple of the node timeout.\n#\n# cluster-node-timeout 15000\n\n# A replica of a failing master will avoid to start a failover if its data\n# looks too old.\n#\n# There is no simple way for a replica to actually have an exact measure of\n# its &quot;data age&quot;, so the following two checks are performed:\n#\n# 1) If there are multiple replicas able to failover, they exchange messages\n#    in order to try to give an advantage to the replica with the best\n#    replication offset (more data from the master processed).\n#    Replicas will try to get their rank by offset, and apply to the start\n#    of the failover a delay proportional to their rank.\n#\n# 2) Every single replica computes the time of the last interaction with\n#    its master. This can be the last ping or command received (if the master\n#    is still in the &quot;connected&quot; state), or the time that elapsed since the\n#    disconnection with the master (if the replication link is currently down).\n#    If the last interaction is too old, the replica will not try to failover\n#    at all.\n#\n# The point &quot;2&quot; can be tuned by user. Specifically a replica will not perform\n# the failover if, since the last interaction with the master, the time\n# elapsed is greater than:\n#\n#   (node-timeout * cluster-replica-validity-factor) + repl-ping-replica-period\n#\n# So for example if node-timeout is 30 seconds, and the cluster-replica-validity-factor\n# is 10, and assuming a default repl-ping-replica-period of 10 seconds, the\n# replica will not try to failover if it was not able to talk with the master\n# for longer than 310 seconds.\n#\n# A large cluster-replica-validity-factor may allow replicas with too old data to failover\n# a master, while a too small value may prevent the cluster from being able to\n# elect a replica at all.\n#\n# For maximum availability, it is possible to set the cluster-replica-validity-factor\n# to a value of 0, which means, that replicas will always try to failover the\n# master regardless of the last time they interacted with the master.\n# (However they&#39;ll always try to apply a delay proportional to their\n# offset rank).\n#\n# Zero is the only value able to guarantee that when all the partitions heal\n# the cluster will always be able to continue.\n#\n# cluster-replica-validity-factor 10\n\n# Cluster replicas are able to migrate to orphaned masters, that are masters\n# that are left without working replicas. This improves the cluster ability\n# to resist to failures as otherwise an orphaned master can&#39;t be failed over\n# in case of failure if it has no working replicas.\n#\n# Replicas migrate to orphaned masters only if there are still at least a\n# given number of other working replicas for their old master. This number\n# is the &quot;migration barrier&quot;. A migration barrier of 1 means that a replica\n# will migrate only if there is at least 1 other working replica for its master\n# and so forth. It usually reflects the number of replicas you want for every\n# master in your cluster.\n#\n# Default is 1 (replicas migrate only if their masters remain with at least\n# one replica). To disable migration just set it to a very large value or\n# set cluster-allow-replica-migration to &#39;no&#39;.\n# A value of 0 can be set but is useful only for debugging and dangerous\n# in production.\n#\n# cluster-migration-barrier 1\n\n# Turning off this option allows to use less automatic cluster configuration.\n# It both disables migration to orphaned masters and migration from masters\n# that became empty.\n#\n# Default is &#39;yes&#39; (allow automatic migrations).\n#\n# cluster-allow-replica-migration yes\n\n# By default Redis Cluster nodes stop accepting queries if they detect there\n# is at least a hash slot uncovered (no available node is serving it).\n# This way if the cluster is partially down (for example a range of hash slots\n# are no longer covered) all the cluster becomes, eventually, unavailable.\n# It automatically returns available as soon as all the slots are covered again.\n#\n# However sometimes you want the subset of the cluster which is working,\n# to continue to accept queries for the part of the key space that is still\n# covered. In order to do so, just set the cluster-require-full-coverage\n# option to no.\n#\n# cluster-require-full-coverage yes\n\n# This option, when set to yes, prevents replicas from trying to failover its\n# master during master failures. However the replica can still perform a\n# manual failover, if forced to do so.\n#\n# This is useful in different scenarios, especially in the case of multiple\n# data center operations, where we want one side to never be promoted if not\n# in the case of a total DC failure.\n#\n# cluster-replica-no-failover no\n\n# This option, when set to yes, allows nodes to serve read traffic while the\n# the cluster is in a down state, as long as it believes it owns the slots. \n#\n# This is useful for two cases.  The first case is for when an application \n# doesn&#39;t require consistency of data during node failures or network partitions.\n# One example of this is a cache, where as long as the node has the data it\n# should be able to serve it. \n#\n# The second use case is for configurations that don&#39;t meet the recommended  \n# three shards but want to enable cluster mode and scale later. A \n# master outage in a 1 or 2 shard configuration causes a read&#x2F;write outage to the\n# entire cluster without this option set, with it set there is only a write outage.\n# Without a quorum of masters, slot ownership will not change automatically. \n#\n# cluster-allow-reads-when-down no\n\n# In order to setup your cluster make sure to read the documentation\n# available at https:&#x2F;&#x2F;redis.io web site.\n\n########################## CLUSTER DOCKER&#x2F;NAT support  ########################\n\n# In certain deployments, Redis Cluster nodes address discovery fails, because\n# addresses are NAT-ted or because ports are forwarded (the typical case is\n# Docker and other containers).\n#\n# In order to make Redis Cluster working in such environments, a static\n# configuration where each node knows its public address is needed. The\n# following four options are used for this scope, and are:\n#\n# * cluster-announce-ip\n# * cluster-announce-port\n# * cluster-announce-tls-port\n# * cluster-announce-bus-port\n#\n# Each instructs the node about its address, client ports (for connections\n# without and with TLS) and cluster message bus port. The information is then\n# published in the header of the bus packets so that other nodes will be able to\n# correctly map the address of the node publishing the information.\n#\n# If cluster-tls is set to yes and cluster-announce-tls-port is omitted or set\n# to zero, then cluster-announce-port refers to the TLS port. Note also that\n# cluster-announce-tls-port has no effect if cluster-tls is set to no.\n#\n# If the above options are not used, the normal Redis Cluster auto-detection\n# will be used instead.\n#\n# Note that when remapped, the bus port may not be at the fixed offset of\n# clients port + 10000, so you can specify any port and bus-port depending\n# on how they get remapped. If the bus-port is not set, a fixed offset of\n# 10000 will be used as usual.\n#\n# Example:\n#\n# cluster-announce-ip 10.1.1.5\n# cluster-announce-tls-port 6379\n# cluster-announce-port 0\n# cluster-announce-bus-port 6380\n\n################################## SLOW LOG ###################################\n\n# The Redis Slow Log is a system to log queries that exceeded a specified\n# execution time. The execution time does not include the I&#x2F;O operations\n# like talking with the client, sending the reply and so forth,\n# but just the time needed to actually execute the command (this is the only\n# stage of command execution where the thread is blocked and can not serve\n# other requests in the meantime).\n#\n# You can configure the slow log with two parameters: one tells Redis\n# what is the execution time, in microseconds, to exceed in order for the\n# command to get logged, and the other parameter is the length of the\n# slow log. When a new command is logged the oldest one is removed from the\n# queue of logged commands.\n\n# The following time is expressed in microseconds, so 1000000 is equivalent\n# to one second. Note that a negative number disables the slow log, while\n# a value of zero forces the logging of every command.\nslowlog-log-slower-than 10000\n\n# There is no limit to this length. Just be aware that it will consume memory.\n# You can reclaim memory used by the slow log with SLOWLOG RESET.\nslowlog-max-len 128\n\n################################ LATENCY MONITOR ##############################\n\n# The Redis latency monitoring subsystem samples different operations\n# at runtime in order to collect data related to possible sources of\n# latency of a Redis instance.\n#\n# Via the LATENCY command this information is available to the user that can\n# print graphs and obtain reports.\n#\n# The system only logs operations that were performed in a time equal or\n# greater than the amount of milliseconds specified via the\n# latency-monitor-threshold configuration directive. When its value is set\n# to zero, the latency monitor is turned off.\n#\n# By default latency monitoring is disabled since it is mostly not needed\n# if you don&#39;t have latency issues, and collecting data has a performance\n# impact, that while very small, can be measured under big load. Latency\n# monitoring can easily be enabled at runtime using the command\n# &quot;CONFIG SET latency-monitor-threshold &lt;milliseconds&gt;&quot; if needed.\nlatency-monitor-threshold 0\n\n############################# EVENT NOTIFICATION ##############################\n\n# Redis can notify Pub&#x2F;Sub clients about events happening in the key space.\n# This feature is documented at https:&#x2F;&#x2F;redis.io&#x2F;topics&#x2F;notifications\n#\n# For instance if keyspace events notification is enabled, and a client\n# performs a DEL operation on key &quot;foo&quot; stored in the Database 0, two\n# messages will be published via Pub&#x2F;Sub:\n#\n# PUBLISH __keyspace@0__:foo del\n# PUBLISH __keyevent@0__:del foo\n#\n# It is possible to select the events that Redis will notify among a set\n# of classes. Every class is identified by a single character:\n#\n#  K     Keyspace events, published with __keyspace@&lt;db&gt;__ prefix.\n#  E     Keyevent events, published with __keyevent@&lt;db&gt;__ prefix.\n#  g     Generic commands (non-type specific) like DEL, EXPIRE, RENAME, ...\n#  $     String commands\n#  l     List commands\n#  s     Set commands\n#  h     Hash commands\n#  z     Sorted set commands\n#  x     Expired events (events generated every time a key expires)\n#  e     Evicted events (events generated when a key is evicted for maxmemory)\n#  t     Stream commands\n#  d     Module key type events\n#  m     Key-miss events (Note: It is not included in the &#39;A&#39; class)\n#  A     Alias for g$lshzxetd, so that the &quot;AKE&quot; string means all the events\n#        (Except key-miss events which are excluded from &#39;A&#39; due to their\n#         unique nature).\n#\n#  The &quot;notify-keyspace-events&quot; takes as argument a string that is composed\n#  of zero or multiple characters. The empty string means that notifications\n#  are disabled.\n#\n#  Example: to enable list and generic events, from the point of view of the\n#           event name, use:\n#\n#  notify-keyspace-events Elg\n#\n#  Example 2: to get the stream of the expired keys subscribing to channel\n#             name __keyevent@0__:expired use:\n#\n#  notify-keyspace-events Ex\n#\n#  By default all notifications are disabled because most users don&#39;t need\n#  this feature and the feature has some overhead. Note that if you don&#39;t\n#  specify at least one of K or E, no events will be delivered.\nnotify-keyspace-events &quot;&quot;\n\n############################### GOPHER SERVER #################################\n\n# Redis contains an implementation of the Gopher protocol, as specified in\n# the RFC 1436 (https:&#x2F;&#x2F;www.ietf.org&#x2F;rfc&#x2F;rfc1436.txt).\n#\n# The Gopher protocol was very popular in the late &#39;90s. It is an alternative\n# to the web, and the implementation both server and client side is so simple\n# that the Redis server has just 100 lines of code in order to implement this\n# support.\n#\n# What do you do with Gopher nowadays? Well Gopher never *really* died, and\n# lately there is a movement in order for the Gopher more hierarchical content\n# composed of just plain text documents to be resurrected. Some want a simpler\n# internet, others believe that the mainstream internet became too much\n# controlled, and it&#39;s cool to create an alternative space for people that\n# want a bit of fresh air.\n#\n# Anyway for the 10nth birthday of the Redis, we gave it the Gopher protocol\n# as a gift.\n#\n# --- HOW IT WORKS? ---\n#\n# The Redis Gopher support uses the inline protocol of Redis, and specifically\n# two kind of inline requests that were anyway illegal: an empty request\n# or any request that starts with &quot;&#x2F;&quot; (there are no Redis commands starting\n# with such a slash). Normal RESP2&#x2F;RESP3 requests are completely out of the\n# path of the Gopher protocol implementation and are served as usual as well.\n#\n# If you open a connection to Redis when Gopher is enabled and send it\n# a string like &quot;&#x2F;foo&quot;, if there is a key named &quot;&#x2F;foo&quot; it is served via the\n# Gopher protocol.\n#\n# In order to create a real Gopher &quot;hole&quot; (the name of a Gopher site in Gopher\n# talking), you likely need a script like the following:\n#\n#   https:&#x2F;&#x2F;github.com&#x2F;antirez&#x2F;gopher2redis\n#\n# --- SECURITY WARNING ---\n#\n# If you plan to put Redis on the internet in a publicly accessible address\n# to server Gopher pages MAKE SURE TO SET A PASSWORD to the instance.\n# Once a password is set:\n#\n#   1. The Gopher server (when enabled, not by default) will still serve\n#      content via Gopher.\n#   2. However other commands cannot be called before the client will\n#      authenticate.\n#\n# So use the &#39;requirepass&#39; option to protect your instance.\n#\n# Note that Gopher is not currently supported when &#39;io-threads-do-reads&#39;\n# is enabled.\n#\n# To enable Gopher support, uncomment the following line and set the option\n# from no (the default) to yes.\n#\n# gopher-enabled no\n\n############################### ADVANCED CONFIG ###############################\n\n# Hashes are encoded using a memory efficient data structure when they have a\n# small number of entries, and the biggest entry does not exceed a given\n# threshold. These thresholds can be configured using the following directives.\nhash-max-ziplist-entries 512\nhash-max-ziplist-value 64\n\n# Lists are also encoded in a special way to save a lot of space.\n# The number of entries allowed per internal list node can be specified\n# as a fixed maximum size or a maximum number of elements.\n# For a fixed maximum size, use -5 through -1, meaning:\n# -5: max size: 64 Kb  &lt;-- not recommended for normal workloads\n# -4: max size: 32 Kb  &lt;-- not recommended\n# -3: max size: 16 Kb  &lt;-- probably not recommended\n# -2: max size: 8 Kb   &lt;-- good\n# -1: max size: 4 Kb   &lt;-- good\n# Positive numbers mean store up to _exactly_ that number of elements\n# per list node.\n# The highest performing option is usually -2 (8 Kb size) or -1 (4 Kb size),\n# but if your use case is unique, adjust the settings as necessary.\nlist-max-ziplist-size -2\n\n# Lists may also be compressed.\n# Compress depth is the number of quicklist ziplist nodes from *each* side of\n# the list to *exclude* from compression.  The head and tail of the list\n# are always uncompressed for fast push&#x2F;pop operations.  Settings are:\n# 0: disable all list compression\n# 1: depth 1 means &quot;don&#39;t start compressing until after 1 node into the list,\n#    going from either the head or tail&quot;\n#    So: [head]-&gt;node-&gt;node-&gt;...-&gt;node-&gt;[tail]\n#    [head], [tail] will always be uncompressed; inner nodes will compress.\n# 2: [head]-&gt;[next]-&gt;node-&gt;node-&gt;...-&gt;node-&gt;[prev]-&gt;[tail]\n#    2 here means: don&#39;t compress head or head-&gt;next or tail-&gt;prev or tail,\n#    but compress all nodes between them.\n# 3: [head]-&gt;[next]-&gt;[next]-&gt;node-&gt;node-&gt;...-&gt;node-&gt;[prev]-&gt;[prev]-&gt;[tail]\n# etc.\nlist-compress-depth 0\n\n# Sets have a special encoding in just one case: when a set is composed\n# of just strings that happen to be integers in radix 10 in the range\n# of 64 bit signed integers.\n# The following configuration setting sets the limit in the size of the\n# set in order to use this special memory saving encoding.\nset-max-intset-entries 512\n\n# Similarly to hashes and lists, sorted sets are also specially encoded in\n# order to save a lot of space. This encoding is only used when the length and\n# elements of a sorted set are below the following limits:\nzset-max-ziplist-entries 128\nzset-max-ziplist-value 64\n\n# HyperLogLog sparse representation bytes limit. The limit includes the\n# 16 bytes header. When an HyperLogLog using the sparse representation crosses\n# this limit, it is converted into the dense representation.\n#\n# A value greater than 16000 is totally useless, since at that point the\n# dense representation is more memory efficient.\n#\n# The suggested value is ~ 3000 in order to have the benefits of\n# the space efficient encoding without slowing down too much PFADD,\n# which is O(N) with the sparse encoding. The value can be raised to\n# ~ 10000 when CPU is not a concern, but space is, and the data set is\n# composed of many HyperLogLogs with cardinality in the 0 - 15000 range.\nhll-sparse-max-bytes 3000\n\n# Streams macro node max size &#x2F; items. The stream data structure is a radix\n# tree of big nodes that encode multiple items inside. Using this configuration\n# it is possible to configure how big a single node can be in bytes, and the\n# maximum number of items it may contain before switching to a new node when\n# appending new stream entries. If any of the following settings are set to\n# zero, the limit is ignored, so for instance it is possible to set just a\n# max entries limit by setting max-bytes to 0 and max-entries to the desired\n# value.\nstream-node-max-bytes 4096\nstream-node-max-entries 100\n\n# Active rehashing uses 1 millisecond every 100 milliseconds of CPU time in\n# order to help rehashing the main Redis hash table (the one mapping top-level\n# keys to values). The hash table implementation Redis uses (see dict.c)\n# performs a lazy rehashing: the more operation you run into a hash table\n# that is rehashing, the more rehashing &quot;steps&quot; are performed, so if the\n# server is idle the rehashing is never complete and some more memory is used\n# by the hash table.\n#\n# The default is to use this millisecond 10 times every second in order to\n# actively rehash the main dictionaries, freeing memory when possible.\n#\n# If unsure:\n# use &quot;activerehashing no&quot; if you have hard latency requirements and it is\n# not a good thing in your environment that Redis can reply from time to time\n# to queries with 2 milliseconds delay.\n#\n# use &quot;activerehashing yes&quot; if you don&#39;t have such hard requirements but\n# want to free memory asap when possible.\nactiverehashing yes\n\n# The client output buffer limits can be used to force disconnection of clients\n# that are not reading data from the server fast enough for some reason (a\n# common reason is that a Pub&#x2F;Sub client can&#39;t consume messages as fast as the\n# publisher can produce them).\n#\n# The limit can be set differently for the three different classes of clients:\n#\n# normal -&gt; normal clients including MONITOR clients\n# replica  -&gt; replica clients\n# pubsub -&gt; clients subscribed to at least one pubsub channel or pattern\n#\n# The syntax of every client-output-buffer-limit directive is the following:\n#\n# client-output-buffer-limit &lt;class&gt; &lt;hard limit&gt; &lt;soft limit&gt; &lt;soft seconds&gt;\n#\n# A client is immediately disconnected once the hard limit is reached, or if\n# the soft limit is reached and remains reached for the specified number of\n# seconds (continuously).\n# So for instance if the hard limit is 32 megabytes and the soft limit is\n# 16 megabytes &#x2F; 10 seconds, the client will get disconnected immediately\n# if the size of the output buffers reach 32 megabytes, but will also get\n# disconnected if the client reaches 16 megabytes and continuously overcomes\n# the limit for 10 seconds.\n#\n# By default normal clients are not limited because they don&#39;t receive data\n# without asking (in a push way), but just after a request, so only\n# asynchronous clients may create a scenario where data is requested faster\n# than it can read.\n#\n# Instead there is a default limit for pubsub and replica clients, since\n# subscribers and replicas receive data in a push fashion.\n#\n# Both the hard or the soft limit can be disabled by setting them to zero.\nclient-output-buffer-limit normal 0 0 0\nclient-output-buffer-limit replica 256mb 64mb 60\nclient-output-buffer-limit pubsub 32mb 8mb 60\n\n# Client query buffers accumulate new commands. They are limited to a fixed\n# amount by default in order to avoid that a protocol desynchronization (for\n# instance due to a bug in the client) will lead to unbound memory usage in\n# the query buffer. However you can configure it here if you have very special\n# needs, such us huge multi&#x2F;exec requests or alike.\n#\n# client-query-buffer-limit 1gb\n\n# In the Redis protocol, bulk requests, that are, elements representing single\n# strings, are normally limited to 512 mb. However you can change this limit\n# here, but must be 1mb or greater\n#\n# proto-max-bulk-len 512mb\n\n# Redis calls an internal function to perform many background tasks, like\n# closing connections of clients in timeout, purging expired keys that are\n# never requested, and so forth.\n#\n# Not all tasks are performed with the same frequency, but Redis checks for\n# tasks to perform according to the specified &quot;hz&quot; value.\n#\n# By default &quot;hz&quot; is set to 10. Raising the value will use more CPU when\n# Redis is idle, but at the same time will make Redis more responsive when\n# there are many keys expiring at the same time, and timeouts may be\n# handled with more precision.\n#\n# The range is between 1 and 500, however a value over 100 is usually not\n# a good idea. Most users should use the default of 10 and raise this up to\n# 100 only in environments where very low latency is required.\nhz 10\n\n# Normally it is useful to have an HZ value which is proportional to the\n# number of clients connected. This is useful in order, for instance, to\n# avoid too many clients are processed for each background task invocation\n# in order to avoid latency spikes.\n#\n# Since the default HZ value by default is conservatively set to 10, Redis\n# offers, and enables by default, the ability to use an adaptive HZ value\n# which will temporarily raise when there are many connected clients.\n#\n# When dynamic HZ is enabled, the actual configured HZ will be used\n# as a baseline, but multiples of the configured HZ value will be actually\n# used as needed once more clients are connected. In this way an idle\n# instance will use very little CPU time while a busy instance will be\n# more responsive.\ndynamic-hz yes\n\n# When a child rewrites the AOF file, if the following option is enabled\n# the file will be fsync-ed every 32 MB of data generated. This is useful\n# in order to commit the file to the disk more incrementally and avoid\n# big latency spikes.\naof-rewrite-incremental-fsync yes\n\n# When redis saves RDB file, if the following option is enabled\n# the file will be fsync-ed every 32 MB of data generated. This is useful\n# in order to commit the file to the disk more incrementally and avoid\n# big latency spikes.\nrdb-save-incremental-fsync yes\n\n# Redis LFU eviction (see maxmemory setting) can be tuned. However it is a good\n# idea to start with the default settings and only change them after investigating\n# how to improve the performances and how the keys LFU change over time, which\n# is possible to inspect via the OBJECT FREQ command.\n#\n# There are two tunable parameters in the Redis LFU implementation: the\n# counter logarithm factor and the counter decay time. It is important to\n# understand what the two parameters mean before changing them.\n#\n# The LFU counter is just 8 bits per key, it&#39;s maximum value is 255, so Redis\n# uses a probabilistic increment with logarithmic behavior. Given the value\n# of the old counter, when a key is accessed, the counter is incremented in\n# this way:\n#\n# 1. A random number R between 0 and 1 is extracted.\n# 2. A probability P is calculated as 1&#x2F;(old_value*lfu_log_factor+1).\n# 3. The counter is incremented only if R &lt; P.\n#\n# The default lfu-log-factor is 10. This is a table of how the frequency\n# counter changes with a different number of accesses with different\n# logarithmic factors:\n#\n# +--------+------------+------------+------------+------------+------------+\n# | factor | 100 hits   | 1000 hits  | 100K hits  | 1M hits    | 10M hits   |\n# +--------+------------+------------+------------+------------+------------+\n# | 0      | 104        | 255        | 255        | 255        | 255        |\n# +--------+------------+------------+------------+------------+------------+\n# | 1      | 18         | 49         | 255        | 255        | 255        |\n# +--------+------------+------------+------------+------------+------------+\n# | 10     | 10         | 18         | 142        | 255        | 255        |\n# +--------+------------+------------+------------+------------+------------+\n# | 100    | 8          | 11         | 49         | 143        | 255        |\n# +--------+------------+------------+------------+------------+------------+\n#\n# NOTE: The above table was obtained by running the following commands:\n#\n#   redis-benchmark -n 1000000 incr foo\n#   redis-cli object freq foo\n#\n# NOTE 2: The counter initial value is 5 in order to give new objects a chance\n# to accumulate hits.\n#\n# The counter decay time is the time, in minutes, that must elapse in order\n# for the key counter to be divided by two (or decremented if it has a value\n# less &lt;&#x3D; 10).\n#\n# The default value for the lfu-decay-time is 1. A special value of 0 means to\n# decay the counter every time it happens to be scanned.\n#\n# lfu-log-factor 10\n# lfu-decay-time 1\n\n########################### ACTIVE DEFRAGMENTATION #######################\n#\n# What is active defragmentation?\n# -------------------------------\n#\n# Active (online) defragmentation allows a Redis server to compact the\n# spaces left between small allocations and deallocations of data in memory,\n# thus allowing to reclaim back memory.\n#\n# Fragmentation is a natural process that happens with every allocator (but\n# less so with Jemalloc, fortunately) and certain workloads. Normally a server\n# restart is needed in order to lower the fragmentation, or at least to flush\n# away all the data and create it again. However thanks to this feature\n# implemented by Oran Agra for Redis 4.0 this process can happen at runtime\n# in a &quot;hot&quot; way, while the server is running.\n#\n# Basically when the fragmentation is over a certain level (see the\n# configuration options below) Redis will start to create new copies of the\n# values in contiguous memory regions by exploiting certain specific Jemalloc\n# features (in order to understand if an allocation is causing fragmentation\n# and to allocate it in a better place), and at the same time, will release the\n# old copies of the data. This process, repeated incrementally for all the keys\n# will cause the fragmentation to drop back to normal values.\n#\n# Important things to understand:\n#\n# 1. This feature is disabled by default, and only works if you compiled Redis\n#    to use the copy of Jemalloc we ship with the source code of Redis.\n#    This is the default with Linux builds.\n#\n# 2. You never need to enable this feature if you don&#39;t have fragmentation\n#    issues.\n#\n# 3. Once you experience fragmentation, you can enable this feature when\n#    needed with the command &quot;CONFIG SET activedefrag yes&quot;.\n#\n# The configuration parameters are able to fine tune the behavior of the\n# defragmentation process. If you are not sure about what they mean it is\n# a good idea to leave the defaults untouched.\n\n# Enabled active defragmentation\n# activedefrag no\n\n# Minimum amount of fragmentation waste to start active defrag\n# active-defrag-ignore-bytes 100mb\n\n# Minimum percentage of fragmentation to start active defrag\n# active-defrag-threshold-lower 10\n\n# Maximum percentage of fragmentation at which we use maximum effort\n# active-defrag-threshold-upper 100\n\n# Minimal effort for defrag in CPU percentage, to be used when the lower\n# threshold is reached\n# active-defrag-cycle-min 1\n\n# Maximal effort for defrag in CPU percentage, to be used when the upper\n# threshold is reached\n# active-defrag-cycle-max 25\n\n# Maximum number of set&#x2F;hash&#x2F;zset&#x2F;list fields that will be processed from\n# the main dictionary scan\n# active-defrag-max-scan-fields 1000\n\n# Jemalloc background thread for purging will be enabled by default\njemalloc-bg-thread yes\n\n# It is possible to pin different threads and processes of Redis to specific\n# CPUs in your system, in order to maximize the performances of the server.\n# This is useful both in order to pin different Redis threads in different\n# CPUs, but also in order to make sure that multiple Redis instances running\n# in the same host will be pinned to different CPUs.\n#\n# Normally you can do this using the &quot;taskset&quot; command, however it is also\n# possible to this via Redis configuration directly, both in Linux and FreeBSD.\n#\n# You can pin the server&#x2F;IO threads, bio threads, aof rewrite child process, and\n# the bgsave child process. The syntax to specify the cpu list is the same as\n# the taskset command:\n#\n# Set redis server&#x2F;io threads to cpu affinity 0,2,4,6:\n# server_cpulist 0-7:2\n#\n# Set bio threads to cpu affinity 1,3:\n# bio_cpulist 1,3\n#\n# Set aof rewrite child process to cpu affinity 8,9,10,11:\n# aof_rewrite_cpulist 8-11\n#\n# Set bgsave child process to cpu affinity 1,10,11\n# bgsave_cpulist 1,10-11\n\n# In some cases redis will emit warnings and even refuse to start if it detects\n# that the system is in bad state, it is possible to suppress these warnings\n# by setting the following config which takes a space delimited list of warnings\n# to suppress\n#\n# ignore-warnings ARM64-COW-BUG</code></pre>\n<h1>5、启动Redis容器</h1>\n<p>执行命令启动redis容器：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">docker-compose up -d</code></pre>\n<p><img src=\"2022-04-24-17-10-52-image.png\" alt=\"\"></p>\n<h1>6、远程连接验证结果</h1>\n<p>信息填完，点击OK</p>\n<p><img src=\"2022-04-24-17-12-56-image.png\" alt=\"\"></p>\n<p>点击左侧对呀的连接，右侧出现redis服务器信息则为安装成功</p>\n<p><img src=\"2022-04-24-17-14-15-image.png\" alt=\"\"></p>\n"},{"title":"deepin下安装hexo","date":"2022-06-03T06:51:52.000Z","_content":"\n# 1、前置条件\n\n安装好nodejs\n\n参考：[deepin下安装nodejs](https://site.huangge1199.cn/407.html)\n\n# 2、全局安装Hexo\n\n执行命令：\n\n```shell\nnpm install -g hexo-cli\n```\n\n![image-20220603141423311](inHexoByOsDeepin/image-20220603141423311.png)\n\n# 3、创建软链接\n\n```shell\n# 创建hexo软链接\nsudo ln -s /home/deepin/app/node/bin/hexo /usr/local/bin/\n# 查看软链接列表\nsudo ls -l /usr/local/bin/\n```\n\n![image-20220603141527169](inHexoByOsDeepin/image-20220603141527169.png)\n\n# 4、查看Hexo版本\n\n```shell\nhexo -v\n```\n\n![image-20220603141613298](inHexoByOsDeepin/image-20220603141613298.png)\n","source":"_posts/inHexoByOsDeepin.md","raw":"---\ntitle: deepin下安装hexo\ndate: 2022-06-03 14:51:52\ntags: [deepin,安装部署]\ncategories: [安装部署]\n---\n\n# 1、前置条件\n\n安装好nodejs\n\n参考：[deepin下安装nodejs](https://site.huangge1199.cn/407.html)\n\n# 2、全局安装Hexo\n\n执行命令：\n\n```shell\nnpm install -g hexo-cli\n```\n\n![image-20220603141423311](inHexoByOsDeepin/image-20220603141423311.png)\n\n# 3、创建软链接\n\n```shell\n# 创建hexo软链接\nsudo ln -s /home/deepin/app/node/bin/hexo /usr/local/bin/\n# 查看软链接列表\nsudo ls -l /usr/local/bin/\n```\n\n![image-20220603141527169](inHexoByOsDeepin/image-20220603141527169.png)\n\n# 4、查看Hexo版本\n\n```shell\nhexo -v\n```\n\n![image-20220603141613298](inHexoByOsDeepin/image-20220603141613298.png)\n","slug":"inHexoByOsDeepin","published":1,"updated":"2022-06-06T15:32:17.031Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl42z5h71003k3gn6fufjb1ib","content":"<h1>1、前置条件</h1>\n<p>安装好nodejs</p>\n<p>参考：<a href=\"https://site.huangge1199.cn/407.html\">deepin下安装nodejs</a></p>\n<h1>2、全局安装Hexo</h1>\n<p>执行命令：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">npm install -g hexo-cli</code></pre>\n<p><img src=\"inHexoByOsDeepin/image-20220603141423311.png\" alt=\"image-20220603141423311\"></p>\n<h1>3、创建软链接</h1>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># 创建hexo软链接\nsudo ln -s &#x2F;home&#x2F;deepin&#x2F;app&#x2F;node&#x2F;bin&#x2F;hexo &#x2F;usr&#x2F;local&#x2F;bin&#x2F;\n# 查看软链接列表\nsudo ls -l &#x2F;usr&#x2F;local&#x2F;bin&#x2F;</code></pre>\n<p><img src=\"inHexoByOsDeepin/image-20220603141527169.png\" alt=\"image-20220603141527169\"></p>\n<h1>4、查看Hexo版本</h1>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">hexo -v</code></pre>\n<p><img src=\"inHexoByOsDeepin/image-20220603141613298.png\" alt=\"image-20220603141613298\"></p>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"cover":"https://blog.huangge1199.cn/post/pyListSort/bg.jpeg","excerpt":"","more":"<h1>1、前置条件</h1>\n<p>安装好nodejs</p>\n<p>参考：<a href=\"https://site.huangge1199.cn/407.html\">deepin下安装nodejs</a></p>\n<h1>2、全局安装Hexo</h1>\n<p>执行命令：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">npm install -g hexo-cli</code></pre>\n<p><img src=\"inHexoByOsDeepin/image-20220603141423311.png\" alt=\"image-20220603141423311\"></p>\n<h1>3、创建软链接</h1>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># 创建hexo软链接\nsudo ln -s &#x2F;home&#x2F;deepin&#x2F;app&#x2F;node&#x2F;bin&#x2F;hexo &#x2F;usr&#x2F;local&#x2F;bin&#x2F;\n# 查看软链接列表\nsudo ls -l &#x2F;usr&#x2F;local&#x2F;bin&#x2F;</code></pre>\n<p><img src=\"inHexoByOsDeepin/image-20220603141527169.png\" alt=\"image-20220603141527169\"></p>\n<h1>4、查看Hexo版本</h1>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">hexo -v</code></pre>\n<p><img src=\"inHexoByOsDeepin/image-20220603141613298.png\" alt=\"image-20220603141613298\"></p>\n"},{"title":"deepin下安装git","date":"2022-06-06T15:30:57.229Z","_content":"\n> 个人建议直接终端安装，下面的安装也是终端命令行安装的\n\n# 1、安装git\n\n执行安装命令：\n\n```she\nsudo apt-get install git\n```\n\n![image-20220603103757605](inGitByOsDeepin/image-20220603103757605.png)\n\n# 2、确认git安装成功\n\n执行查看git版本的命令，以此确认安装成功\n\n```shell\ngit --version\n```\n\n![image-20220603103959058](inGitByOsDeepin/image-20220603103959058.png)\n\n# 3、配置git全局用户名和邮箱\n\n配置全局用户名：\n\n```shell\ngit config --global user.name \"用户名\"\n```\n\n![image-20220603104225094](inGitByOsDeepin/image-20220603104225094.png)\n\n配置全局邮箱：\n\n```shel\ngit config --global user.email \"邮箱\"\n```\n\n![image-20220603104335664](inGitByOsDeepin/image-20220603104335664.png)\n\n# 4、确认配置结果\n\n查看配置信息确认\n\n```shell\ngit config --list\n```\n\n![image-20220603104447770](inGitByOsDeepin/image-20220603104447770.png)\n","source":"_posts/inGitByOsDeepin.md","raw":"---\ntitle: deepin下安装git\ndate: 022-06-03 14:30:52\ntags: [deepin,安装部署]\ncategories: [安装部署]\n---\n\n> 个人建议直接终端安装，下面的安装也是终端命令行安装的\n\n# 1、安装git\n\n执行安装命令：\n\n```she\nsudo apt-get install git\n```\n\n![image-20220603103757605](inGitByOsDeepin/image-20220603103757605.png)\n\n# 2、确认git安装成功\n\n执行查看git版本的命令，以此确认安装成功\n\n```shell\ngit --version\n```\n\n![image-20220603103959058](inGitByOsDeepin/image-20220603103959058.png)\n\n# 3、配置git全局用户名和邮箱\n\n配置全局用户名：\n\n```shell\ngit config --global user.name \"用户名\"\n```\n\n![image-20220603104225094](inGitByOsDeepin/image-20220603104225094.png)\n\n配置全局邮箱：\n\n```shel\ngit config --global user.email \"邮箱\"\n```\n\n![image-20220603104335664](inGitByOsDeepin/image-20220603104335664.png)\n\n# 4、确认配置结果\n\n查看配置信息确认\n\n```shell\ngit config --list\n```\n\n![image-20220603104447770](inGitByOsDeepin/image-20220603104447770.png)\n","slug":"inGitByOsDeepin","published":1,"updated":"2022-06-06T15:33:06.188Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl42z5h72003n3gn63x5hg0yi","content":"<blockquote>\n<p>个人建议直接终端安装，下面的安装也是终端命令行安装的</p>\n</blockquote>\n<h1>1、安装git</h1>\n<p>执行安装命令：</p>\n<pre class=\"line-numbers language-she\" data-language=\"she\"><code class=\"language-she\">sudo apt-get install git</code></pre>\n<p><img src=\"inGitByOsDeepin/image-20220603103757605.png\" alt=\"image-20220603103757605\"></p>\n<h1>2、确认git安装成功</h1>\n<p>执行查看git版本的命令，以此确认安装成功</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">git --version</code></pre>\n<p><img src=\"inGitByOsDeepin/image-20220603103959058.png\" alt=\"image-20220603103959058\"></p>\n<h1>3、配置git全局用户名和邮箱</h1>\n<p>配置全局用户名：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">git config --global user.name &quot;用户名&quot;</code></pre>\n<p><img src=\"inGitByOsDeepin/image-20220603104225094.png\" alt=\"image-20220603104225094\"></p>\n<p>配置全局邮箱：</p>\n<pre class=\"line-numbers language-shel\" data-language=\"shel\"><code class=\"language-shel\">git config --global user.email &quot;邮箱&quot;</code></pre>\n<p><img src=\"inGitByOsDeepin/image-20220603104335664.png\" alt=\"image-20220603104335664\"></p>\n<h1>4、确认配置结果</h1>\n<p>查看配置信息确认</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">git config --list</code></pre>\n<p><img src=\"inGitByOsDeepin/image-20220603104447770.png\" alt=\"image-20220603104447770\"></p>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"cover":"https://blog.huangge1199.cn/post/nexusCreate/bg.jpeg","excerpt":"","more":"<blockquote>\n<p>个人建议直接终端安装，下面的安装也是终端命令行安装的</p>\n</blockquote>\n<h1>1、安装git</h1>\n<p>执行安装命令：</p>\n<pre class=\"line-numbers language-she\" data-language=\"she\"><code class=\"language-she\">sudo apt-get install git</code></pre>\n<p><img src=\"inGitByOsDeepin/image-20220603103757605.png\" alt=\"image-20220603103757605\"></p>\n<h1>2、确认git安装成功</h1>\n<p>执行查看git版本的命令，以此确认安装成功</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">git --version</code></pre>\n<p><img src=\"inGitByOsDeepin/image-20220603103959058.png\" alt=\"image-20220603103959058\"></p>\n<h1>3、配置git全局用户名和邮箱</h1>\n<p>配置全局用户名：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">git config --global user.name &quot;用户名&quot;</code></pre>\n<p><img src=\"inGitByOsDeepin/image-20220603104225094.png\" alt=\"image-20220603104225094\"></p>\n<p>配置全局邮箱：</p>\n<pre class=\"line-numbers language-shel\" data-language=\"shel\"><code class=\"language-shel\">git config --global user.email &quot;邮箱&quot;</code></pre>\n<p><img src=\"inGitByOsDeepin/image-20220603104335664.png\" alt=\"image-20220603104335664\"></p>\n<h1>4、确认配置结果</h1>\n<p>查看配置信息确认</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">git config --list</code></pre>\n<p><img src=\"inGitByOsDeepin/image-20220603104447770.png\" alt=\"image-20220603104447770\"></p>\n"},{"title":"deepin下安装jdk","date":"2022-06-03T06:43:52.000Z","_content":"\n# 1、jdk 下载\n\n[官网下载地址](https://www.oracle.com/java/technologies/downloads/#java11)如下：\n\n![image-20220603015920009](inJdkByOsDeepin/image-20220603015920009.png)\n\n> 注意区分是哪个版本的\n\n# 2、安装deb包\n\n终端进入到deb文件所在目录，执行安装命令：\n\n```shell\nsudo dpkg -i jdk-11.0.15.1_linux-x64_bin.deb\n```\n\n![image-20220603020439325](inJdkByOsDeepin/image-20220603020439325.png)\n\n# 3、配置环境变量\n\n终端执行命令：\n\n```shell\nsudo vi /etc/profile\n```\n\n然后输入密码，在文件的最后加上下面的内容\n\n```\n#configuration java development enviroument\nexport JAVA_HOME=/usr/lib/jvm/jdk-11\nexport PATH=$JAVA_HOME/bin:$PATH \nexport CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar \n```\n\n# 4、使环境变量生效\n\n执行命令：\n\n```shell\nsource /etc/profile\n```\n\n![image-20220603021925685](inJdkByOsDeepin/image-20220603021925685.png)\n\n# 5、检查是否成功\n\n执行命令：\n\n```she\njava -version\n```\n\n![image-20220603022022217](inJdkByOsDeepin/image-20220603022022217.png)\n","source":"_posts/inJdkByOsDeepin.md","raw":"---\ntitle: deepin下安装jdk\ndate: 2022-06-03 14:43:52\ntags: [deepin,安装部署]\ncategories: [安装部署]\n---\n\n# 1、jdk 下载\n\n[官网下载地址](https://www.oracle.com/java/technologies/downloads/#java11)如下：\n\n![image-20220603015920009](inJdkByOsDeepin/image-20220603015920009.png)\n\n> 注意区分是哪个版本的\n\n# 2、安装deb包\n\n终端进入到deb文件所在目录，执行安装命令：\n\n```shell\nsudo dpkg -i jdk-11.0.15.1_linux-x64_bin.deb\n```\n\n![image-20220603020439325](inJdkByOsDeepin/image-20220603020439325.png)\n\n# 3、配置环境变量\n\n终端执行命令：\n\n```shell\nsudo vi /etc/profile\n```\n\n然后输入密码，在文件的最后加上下面的内容\n\n```\n#configuration java development enviroument\nexport JAVA_HOME=/usr/lib/jvm/jdk-11\nexport PATH=$JAVA_HOME/bin:$PATH \nexport CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar \n```\n\n# 4、使环境变量生效\n\n执行命令：\n\n```shell\nsource /etc/profile\n```\n\n![image-20220603021925685](inJdkByOsDeepin/image-20220603021925685.png)\n\n# 5、检查是否成功\n\n执行命令：\n\n```she\njava -version\n```\n\n![image-20220603022022217](inJdkByOsDeepin/image-20220603022022217.png)\n","slug":"inJdkByOsDeepin","published":1,"updated":"2022-06-06T15:32:16.987Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl42z5h73003r3gn6c2fafbfu","content":"<h1>1、jdk 下载</h1>\n<p><a href=\"https://www.oracle.com/java/technologies/downloads/#java11\">官网下载地址</a>如下：</p>\n<p><img src=\"inJdkByOsDeepin/image-20220603015920009.png\" alt=\"image-20220603015920009\"></p>\n<blockquote>\n<p>注意区分是哪个版本的</p>\n</blockquote>\n<h1>2、安装deb包</h1>\n<p>终端进入到deb文件所在目录，执行安装命令：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">sudo dpkg -i jdk-11.0.15.1_linux-x64_bin.deb</code></pre>\n<p><img src=\"inJdkByOsDeepin/image-20220603020439325.png\" alt=\"image-20220603020439325\"></p>\n<h1>3、配置环境变量</h1>\n<p>终端执行命令：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">sudo vi &#x2F;etc&#x2F;profile</code></pre>\n<p>然后输入密码，在文件的最后加上下面的内容</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">#configuration java development enviroument\nexport JAVA_HOME&#x3D;&#x2F;usr&#x2F;lib&#x2F;jvm&#x2F;jdk-11\nexport PATH&#x3D;$JAVA_HOME&#x2F;bin:$PATH \nexport CLASSPATH&#x3D;.:$JAVA_HOME&#x2F;lib&#x2F;dt.jar:$JAVA_HOME&#x2F;lib&#x2F;tools.jar </code></pre>\n<h1>4、使环境变量生效</h1>\n<p>执行命令：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">source &#x2F;etc&#x2F;profile</code></pre>\n<p><img src=\"inJdkByOsDeepin/image-20220603021925685.png\" alt=\"image-20220603021925685\"></p>\n<h1>5、检查是否成功</h1>\n<p>执行命令：</p>\n<pre class=\"line-numbers language-she\" data-language=\"she\"><code class=\"language-she\">java -version</code></pre>\n<p><img src=\"inJdkByOsDeepin/image-20220603022022217.png\" alt=\"image-20220603022022217\"></p>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"cover":"https://blog.huangge1199.cn/images/bg.jpeg","excerpt":"","more":"<h1>1、jdk 下载</h1>\n<p><a href=\"https://www.oracle.com/java/technologies/downloads/#java11\">官网下载地址</a>如下：</p>\n<p><img src=\"inJdkByOsDeepin/image-20220603015920009.png\" alt=\"image-20220603015920009\"></p>\n<blockquote>\n<p>注意区分是哪个版本的</p>\n</blockquote>\n<h1>2、安装deb包</h1>\n<p>终端进入到deb文件所在目录，执行安装命令：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">sudo dpkg -i jdk-11.0.15.1_linux-x64_bin.deb</code></pre>\n<p><img src=\"inJdkByOsDeepin/image-20220603020439325.png\" alt=\"image-20220603020439325\"></p>\n<h1>3、配置环境变量</h1>\n<p>终端执行命令：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">sudo vi &#x2F;etc&#x2F;profile</code></pre>\n<p>然后输入密码，在文件的最后加上下面的内容</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">#configuration java development enviroument\nexport JAVA_HOME&#x3D;&#x2F;usr&#x2F;lib&#x2F;jvm&#x2F;jdk-11\nexport PATH&#x3D;$JAVA_HOME&#x2F;bin:$PATH \nexport CLASSPATH&#x3D;.:$JAVA_HOME&#x2F;lib&#x2F;dt.jar:$JAVA_HOME&#x2F;lib&#x2F;tools.jar </code></pre>\n<h1>4、使环境变量生效</h1>\n<p>执行命令：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">source &#x2F;etc&#x2F;profile</code></pre>\n<p><img src=\"inJdkByOsDeepin/image-20220603021925685.png\" alt=\"image-20220603021925685\"></p>\n<h1>5、检查是否成功</h1>\n<p>执行命令：</p>\n<pre class=\"line-numbers language-she\" data-language=\"she\"><code class=\"language-she\">java -version</code></pre>\n<p><img src=\"inJdkByOsDeepin/image-20220603022022217.png\" alt=\"image-20220603022022217\"></p>\n"},{"title":"通过Kubeadm方式安装K8S","date":"2022-05-31T06:10:52.000Z","_content":"\n# 1、前提条件\n\n安装好docker\n\n{% hideToggle docker安装 %}\n\n如果没有安装，可参考下面的文章进行安装：\n\n[docker 安装]([docker安装-龙儿之家](https://site.huangge1199.cn/113.html))\n\n{% endhideToggle %}\n\n防火墙已经关闭\n{% hideToggle 防火墙关闭操作 %}\n\n关闭防火墙：\n\n```shell\nsystemctl stop firewalld.service\nsystemctl disable firewalld.service\n```\n\n{% endhideToggle %}\n\nselinux已经关闭\n{% hideToggle selinux关闭操作 %}\n\n禁用 SELinux：\n\n```shell\nvi /etc/selinux/config\n```\n\n将第七行SELINUX=enforcing改为SELINUX=disabled\n\n![](inRKE/2022-05-04-17-23-24-image.png)\n{% endhideToggle %}\n\nswap已经关闭\n{% hideToggle swap关闭操作 %}\n\n禁用 swap\n\n```shell\nvi /etc/fstab\n```\n\n使用 # 注释掉有 swap 的一行\n\n![](inRKE/2022-05-04-17-27-23-image.png)\n{% endhideToggle %}\n\n防火墙、SELinux、swap关闭验证：\n\n```shell\nreboot\n/usr/sbin/sestatus -v\nfree -h\n```\n\n![](inRKE/2022-05-04-17-33-11-image.png)\n\n# 2、安装 kubeadm，kubelet 和 kubectl\n\n添加yum源：\n\n```shell\ncat > /etc/yum.repos.d/kubernetes.repo << EOF\n[kubernetes]\nname=Kubernetes\nbaseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64\nenabled=1\ngpgcheck=0\nrepo_gpgcheck=0\ngpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg\nhttps://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg\nEOF\n```\n\n安装：\n\n```shell\nyum install -y kubelet kubeadm kubectl\n```\n\n设置开机自启kubelet：\n\n```shell\nsystemctl enable kubelet\n```\n","source":"_posts/inK8sByKubeadm.md","raw":"---\ntitle: 通过Kubeadm方式安装K8S\ndate: 2022-05-31 14:10:52\ntags: [安装部署]\ncategories: [云原生]\n---\n\n# 1、前提条件\n\n安装好docker\n\n{% hideToggle docker安装 %}\n\n如果没有安装，可参考下面的文章进行安装：\n\n[docker 安装]([docker安装-龙儿之家](https://site.huangge1199.cn/113.html))\n\n{% endhideToggle %}\n\n防火墙已经关闭\n{% hideToggle 防火墙关闭操作 %}\n\n关闭防火墙：\n\n```shell\nsystemctl stop firewalld.service\nsystemctl disable firewalld.service\n```\n\n{% endhideToggle %}\n\nselinux已经关闭\n{% hideToggle selinux关闭操作 %}\n\n禁用 SELinux：\n\n```shell\nvi /etc/selinux/config\n```\n\n将第七行SELINUX=enforcing改为SELINUX=disabled\n\n![](inRKE/2022-05-04-17-23-24-image.png)\n{% endhideToggle %}\n\nswap已经关闭\n{% hideToggle swap关闭操作 %}\n\n禁用 swap\n\n```shell\nvi /etc/fstab\n```\n\n使用 # 注释掉有 swap 的一行\n\n![](inRKE/2022-05-04-17-27-23-image.png)\n{% endhideToggle %}\n\n防火墙、SELinux、swap关闭验证：\n\n```shell\nreboot\n/usr/sbin/sestatus -v\nfree -h\n```\n\n![](inRKE/2022-05-04-17-33-11-image.png)\n\n# 2、安装 kubeadm，kubelet 和 kubectl\n\n添加yum源：\n\n```shell\ncat > /etc/yum.repos.d/kubernetes.repo << EOF\n[kubernetes]\nname=Kubernetes\nbaseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64\nenabled=1\ngpgcheck=0\nrepo_gpgcheck=0\ngpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg\nhttps://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg\nEOF\n```\n\n安装：\n\n```shell\nyum install -y kubelet kubeadm kubectl\n```\n\n设置开机自启kubelet：\n\n```shell\nsystemctl enable kubelet\n```\n","slug":"inK8sByKubeadm","published":1,"updated":"2022-06-06T15:32:17.007Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl42z5h74003v3gn6beof8ah6","content":"<h1>1、前提条件</h1>\n<p>安装好docker</p>\n<details class=\"toggle\" ><summary class=\"toggle-button\" style=\"\">docker安装</summary><div class=\"toggle-content\"><p>如果没有安装，可参考下面的文章进行安装：</p>\n<p><a href=\"%5Bdocker%E5%AE%89%E8%A3%85-%E9%BE%99%E5%84%BF%E4%B9%8B%E5%AE%B6%5D(https://site.huangge1199.cn/113.html)\">docker 安装</a></p>\n</div></details>\n<p>防火墙已经关闭</p>\n<details class=\"toggle\" ><summary class=\"toggle-button\" style=\"\">防火墙关闭操作</summary><div class=\"toggle-content\"><p>关闭防火墙：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">systemctl stop firewalld.service\nsystemctl disable firewalld.service</code></pre>\n</div></details>\n<p>selinux已经关闭</p>\n<details class=\"toggle\" ><summary class=\"toggle-button\" style=\"\">selinux关闭操作</summary><div class=\"toggle-content\"><p>禁用 SELinux：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">vi &#x2F;etc&#x2F;selinux&#x2F;config</code></pre>\n<p>将第七行SELINUX=enforcing改为SELINUX=disabled</p>\n<p><img src=\"inRKE/2022-05-04-17-23-24-image.png\" alt=\"\"></p>\n</div></details>\n<p>swap已经关闭</p>\n<details class=\"toggle\" ><summary class=\"toggle-button\" style=\"\">swap关闭操作</summary><div class=\"toggle-content\"><p>禁用 swap</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">vi &#x2F;etc&#x2F;fstab</code></pre>\n<p>使用 # 注释掉有 swap 的一行</p>\n<p><img src=\"inRKE/2022-05-04-17-27-23-image.png\" alt=\"\"></p>\n</div></details>\n<p>防火墙、SELinux、swap关闭验证：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">reboot\n&#x2F;usr&#x2F;sbin&#x2F;sestatus -v\nfree -h</code></pre>\n<p><img src=\"inRKE/2022-05-04-17-33-11-image.png\" alt=\"\"></p>\n<h1>2、安装 kubeadm，kubelet 和 kubectl</h1>\n<p>添加yum源：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">cat &gt; &#x2F;etc&#x2F;yum.repos.d&#x2F;kubernetes.repo &lt;&lt; EOF\n[kubernetes]\nname&#x3D;Kubernetes\nbaseurl&#x3D;https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;kubernetes&#x2F;yum&#x2F;repos&#x2F;kubernetes-el7-x86_64\nenabled&#x3D;1\ngpgcheck&#x3D;0\nrepo_gpgcheck&#x3D;0\ngpgkey&#x3D;https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;kubernetes&#x2F;yum&#x2F;doc&#x2F;yum-key.gpg\nhttps:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;kubernetes&#x2F;yum&#x2F;doc&#x2F;rpm-package-key.gpg\nEOF</code></pre>\n<p>安装：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">yum install -y kubelet kubeadm kubectl</code></pre>\n<p>设置开机自启kubelet：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">systemctl enable kubelet</code></pre>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"cover":"https://blog.huangge1199.cn/post/pyListSort/bg.jpeg","excerpt":"","more":"<h1>1、前提条件</h1>\n<p>安装好docker</p>\n<details class=\"toggle\" ><summary class=\"toggle-button\" style=\"\">docker安装</summary><div class=\"toggle-content\"><p>如果没有安装，可参考下面的文章进行安装：</p>\n<p><a href=\"%5Bdocker%E5%AE%89%E8%A3%85-%E9%BE%99%E5%84%BF%E4%B9%8B%E5%AE%B6%5D(https://site.huangge1199.cn/113.html)\">docker 安装</a></p>\n</div></details>\n<p>防火墙已经关闭</p>\n<details class=\"toggle\" ><summary class=\"toggle-button\" style=\"\">防火墙关闭操作</summary><div class=\"toggle-content\"><p>关闭防火墙：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">systemctl stop firewalld.service\nsystemctl disable firewalld.service</code></pre>\n</div></details>\n<p>selinux已经关闭</p>\n<details class=\"toggle\" ><summary class=\"toggle-button\" style=\"\">selinux关闭操作</summary><div class=\"toggle-content\"><p>禁用 SELinux：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">vi &#x2F;etc&#x2F;selinux&#x2F;config</code></pre>\n<p>将第七行SELINUX=enforcing改为SELINUX=disabled</p>\n<p><img src=\"inRKE/2022-05-04-17-23-24-image.png\" alt=\"\"></p>\n</div></details>\n<p>swap已经关闭</p>\n<details class=\"toggle\" ><summary class=\"toggle-button\" style=\"\">swap关闭操作</summary><div class=\"toggle-content\"><p>禁用 swap</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">vi &#x2F;etc&#x2F;fstab</code></pre>\n<p>使用 # 注释掉有 swap 的一行</p>\n<p><img src=\"inRKE/2022-05-04-17-27-23-image.png\" alt=\"\"></p>\n</div></details>\n<p>防火墙、SELinux、swap关闭验证：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">reboot\n&#x2F;usr&#x2F;sbin&#x2F;sestatus -v\nfree -h</code></pre>\n<p><img src=\"inRKE/2022-05-04-17-33-11-image.png\" alt=\"\"></p>\n<h1>2、安装 kubeadm，kubelet 和 kubectl</h1>\n<p>添加yum源：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">cat &gt; &#x2F;etc&#x2F;yum.repos.d&#x2F;kubernetes.repo &lt;&lt; EOF\n[kubernetes]\nname&#x3D;Kubernetes\nbaseurl&#x3D;https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;kubernetes&#x2F;yum&#x2F;repos&#x2F;kubernetes-el7-x86_64\nenabled&#x3D;1\ngpgcheck&#x3D;0\nrepo_gpgcheck&#x3D;0\ngpgkey&#x3D;https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;kubernetes&#x2F;yum&#x2F;doc&#x2F;yum-key.gpg\nhttps:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;kubernetes&#x2F;yum&#x2F;doc&#x2F;rpm-package-key.gpg\nEOF</code></pre>\n<p>安装：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">yum install -y kubelet kubeadm kubectl</code></pre>\n<p>设置开机自启kubelet：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">systemctl enable kubelet</code></pre>\n"},{"title":"deepin下安装Maven","date":"2022-06-03T06:46:52.000Z","_content":"\n# 1、前置条件\n\n安装好jdk\n\n参考：[deepin下安装jdk](https://site.huangge1199.cn/399.html)\n\n# 2、下载安装包\n\n官网地址：[maven下载页面](https://maven.apache.org/download.cgi)\n\n![image-20220603115702494](inMavenByOsDeepin/image-20220603115702494.png)\n\n我这边下载的是3.8.5版本的，如果下载其他版本，用下面的链接：\n\n[其他版本maven](https://archive.apache.org/dist/maven/maven-3/)\n\n![image-20220603120000596](inMavenByOsDeepin/image-20220603120000596.png)\n\n# 3、解压\n\n```shell\ntar -xf apache-maven-3.8.5-bin.tar.gz\nls -l\n```\n\n![image-20220603120156243](inMavenByOsDeepin/image-20220603120156243.png)\n\n# 4、移动\n\n```shell\nmv apache-maven-3.8.5 ../app/\nls -l\nls -l ../app/\n```\n\n![image-20220603120347751](inMavenByOsDeepin/image-20220603120347751.png)\n\n# 5、配置环境变量\n\n```shell\nsudo vi /etc/profile\n```\n\n文件最下面加入下面的内容\n\n```\n# configuration maven development enviroument\nexport MAVEN_HOME=/home/deepin/app/apache-maven-3.8.5\nexport PATH=$PATH:$MAVEN_HOME/bin\n```\n\n![image-20220603121051155](inMavenByOsDeepin/image-20220603121051155.png)\n\n执行命令让配置文件生效：\n\n```shell\nsource /etc/profile\n```\n\n![image-20220603121153205](inMavenByOsDeepin/image-20220603121153205.png)\n\n# 6、验证\n\n查看maven版本做验证：\n\n```shell\nmvn -v\n```\n\n![image-20220603121458972](inMavenByOsDeepin/image-20220603121458972.png)\n\n# 7、配置仓库文件目录\n\n```shell\nvi /home/deepin/app/apache-maven-3.8.5/conf/settings.xml\n```\n\n找到localRepository，在下方加入下面的内容：\n\n```xml\n<localRepository>/home/deepin/repo</localRepository>\n```\n\n红框内容为新加入的\n\n![image-20220603122200505](inMavenByOsDeepin/image-20220603122200505.png)\n\n# 8、添加阿里镜像源\n\n```shell\nvi /home/deepin/app/apache-maven-3.8.5/conf/settings.xml\n```\n\n找到mirror添加下面的内容：\n\n```xml\n<mirror>\t\n    <id>alimaven</id>\n    <mirrorOf>*</mirrorOf>\n    <name>aliyun maven</name>\n    <url>https://maven.aliyun.com/repository/public</url>\n</mirror>\n```\n\n下面红框内容为添加的\n\n![image-20220603122859128](inMavenByOsDeepin/image-20220603122859128.png)\n","source":"_posts/inMavenByOsDeepin.md","raw":"---\ntitle: deepin下安装Maven\ndate: 2022-06-03 14:46:52\ntags: [deepin,安装部署]\ncategories: [安装部署]\n---\n\n# 1、前置条件\n\n安装好jdk\n\n参考：[deepin下安装jdk](https://site.huangge1199.cn/399.html)\n\n# 2、下载安装包\n\n官网地址：[maven下载页面](https://maven.apache.org/download.cgi)\n\n![image-20220603115702494](inMavenByOsDeepin/image-20220603115702494.png)\n\n我这边下载的是3.8.5版本的，如果下载其他版本，用下面的链接：\n\n[其他版本maven](https://archive.apache.org/dist/maven/maven-3/)\n\n![image-20220603120000596](inMavenByOsDeepin/image-20220603120000596.png)\n\n# 3、解压\n\n```shell\ntar -xf apache-maven-3.8.5-bin.tar.gz\nls -l\n```\n\n![image-20220603120156243](inMavenByOsDeepin/image-20220603120156243.png)\n\n# 4、移动\n\n```shell\nmv apache-maven-3.8.5 ../app/\nls -l\nls -l ../app/\n```\n\n![image-20220603120347751](inMavenByOsDeepin/image-20220603120347751.png)\n\n# 5、配置环境变量\n\n```shell\nsudo vi /etc/profile\n```\n\n文件最下面加入下面的内容\n\n```\n# configuration maven development enviroument\nexport MAVEN_HOME=/home/deepin/app/apache-maven-3.8.5\nexport PATH=$PATH:$MAVEN_HOME/bin\n```\n\n![image-20220603121051155](inMavenByOsDeepin/image-20220603121051155.png)\n\n执行命令让配置文件生效：\n\n```shell\nsource /etc/profile\n```\n\n![image-20220603121153205](inMavenByOsDeepin/image-20220603121153205.png)\n\n# 6、验证\n\n查看maven版本做验证：\n\n```shell\nmvn -v\n```\n\n![image-20220603121458972](inMavenByOsDeepin/image-20220603121458972.png)\n\n# 7、配置仓库文件目录\n\n```shell\nvi /home/deepin/app/apache-maven-3.8.5/conf/settings.xml\n```\n\n找到localRepository，在下方加入下面的内容：\n\n```xml\n<localRepository>/home/deepin/repo</localRepository>\n```\n\n红框内容为新加入的\n\n![image-20220603122200505](inMavenByOsDeepin/image-20220603122200505.png)\n\n# 8、添加阿里镜像源\n\n```shell\nvi /home/deepin/app/apache-maven-3.8.5/conf/settings.xml\n```\n\n找到mirror添加下面的内容：\n\n```xml\n<mirror>\t\n    <id>alimaven</id>\n    <mirrorOf>*</mirrorOf>\n    <name>aliyun maven</name>\n    <url>https://maven.aliyun.com/repository/public</url>\n</mirror>\n```\n\n下面红框内容为添加的\n\n![image-20220603122859128](inMavenByOsDeepin/image-20220603122859128.png)\n","slug":"inMavenByOsDeepin","published":1,"updated":"2022-06-06T15:32:17.023Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl42z5h74003z3gn6bodf1zr3","content":"<h1>1、前置条件</h1>\n<p>安装好jdk</p>\n<p>参考：<a href=\"https://site.huangge1199.cn/399.html\">deepin下安装jdk</a></p>\n<h1>2、下载安装包</h1>\n<p>官网地址：<a href=\"https://maven.apache.org/download.cgi\">maven下载页面</a></p>\n<p><img src=\"inMavenByOsDeepin/image-20220603115702494.png\" alt=\"image-20220603115702494\"></p>\n<p>我这边下载的是3.8.5版本的，如果下载其他版本，用下面的链接：</p>\n<p><a href=\"https://archive.apache.org/dist/maven/maven-3/\">其他版本maven</a></p>\n<p><img src=\"inMavenByOsDeepin/image-20220603120000596.png\" alt=\"image-20220603120000596\"></p>\n<h1>3、解压</h1>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">tar -xf apache-maven-3.8.5-bin.tar.gz\nls -l</code></pre>\n<p><img src=\"inMavenByOsDeepin/image-20220603120156243.png\" alt=\"image-20220603120156243\"></p>\n<h1>4、移动</h1>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">mv apache-maven-3.8.5 ..&#x2F;app&#x2F;\nls -l\nls -l ..&#x2F;app&#x2F;</code></pre>\n<p><img src=\"inMavenByOsDeepin/image-20220603120347751.png\" alt=\"image-20220603120347751\"></p>\n<h1>5、配置环境变量</h1>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">sudo vi &#x2F;etc&#x2F;profile</code></pre>\n<p>文件最下面加入下面的内容</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\"># configuration maven development enviroument\nexport MAVEN_HOME&#x3D;&#x2F;home&#x2F;deepin&#x2F;app&#x2F;apache-maven-3.8.5\nexport PATH&#x3D;$PATH:$MAVEN_HOME&#x2F;bin</code></pre>\n<p><img src=\"inMavenByOsDeepin/image-20220603121051155.png\" alt=\"image-20220603121051155\"></p>\n<p>执行命令让配置文件生效：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">source &#x2F;etc&#x2F;profile</code></pre>\n<p><img src=\"inMavenByOsDeepin/image-20220603121153205.png\" alt=\"image-20220603121153205\"></p>\n<h1>6、验证</h1>\n<p>查看maven版本做验证：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">mvn -v</code></pre>\n<p><img src=\"inMavenByOsDeepin/image-20220603121458972.png\" alt=\"image-20220603121458972\"></p>\n<h1>7、配置仓库文件目录</h1>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">vi &#x2F;home&#x2F;deepin&#x2F;app&#x2F;apache-maven-3.8.5&#x2F;conf&#x2F;settings.xml</code></pre>\n<p>找到localRepository，在下方加入下面的内容：</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;localRepository&gt;&#x2F;home&#x2F;deepin&#x2F;repo&lt;&#x2F;localRepository&gt;</code></pre>\n<p>红框内容为新加入的</p>\n<p><img src=\"inMavenByOsDeepin/image-20220603122200505.png\" alt=\"image-20220603122200505\"></p>\n<h1>8、添加阿里镜像源</h1>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">vi &#x2F;home&#x2F;deepin&#x2F;app&#x2F;apache-maven-3.8.5&#x2F;conf&#x2F;settings.xml</code></pre>\n<p>找到mirror添加下面的内容：</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;mirror&gt;\t\n    &lt;id&gt;alimaven&lt;&#x2F;id&gt;\n    &lt;mirrorOf&gt;*&lt;&#x2F;mirrorOf&gt;\n    &lt;name&gt;aliyun maven&lt;&#x2F;name&gt;\n    &lt;url&gt;https:&#x2F;&#x2F;maven.aliyun.com&#x2F;repository&#x2F;public&lt;&#x2F;url&gt;\n&lt;&#x2F;mirror&gt;</code></pre>\n<p>下面红框内容为添加的</p>\n<p><img src=\"inMavenByOsDeepin/image-20220603122859128.png\" alt=\"image-20220603122859128\"></p>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"cover":"https://blog.huangge1199.cn/post/nexusCreate/bg.jpeg","excerpt":"","more":"<h1>1、前置条件</h1>\n<p>安装好jdk</p>\n<p>参考：<a href=\"https://site.huangge1199.cn/399.html\">deepin下安装jdk</a></p>\n<h1>2、下载安装包</h1>\n<p>官网地址：<a href=\"https://maven.apache.org/download.cgi\">maven下载页面</a></p>\n<p><img src=\"inMavenByOsDeepin/image-20220603115702494.png\" alt=\"image-20220603115702494\"></p>\n<p>我这边下载的是3.8.5版本的，如果下载其他版本，用下面的链接：</p>\n<p><a href=\"https://archive.apache.org/dist/maven/maven-3/\">其他版本maven</a></p>\n<p><img src=\"inMavenByOsDeepin/image-20220603120000596.png\" alt=\"image-20220603120000596\"></p>\n<h1>3、解压</h1>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">tar -xf apache-maven-3.8.5-bin.tar.gz\nls -l</code></pre>\n<p><img src=\"inMavenByOsDeepin/image-20220603120156243.png\" alt=\"image-20220603120156243\"></p>\n<h1>4、移动</h1>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">mv apache-maven-3.8.5 ..&#x2F;app&#x2F;\nls -l\nls -l ..&#x2F;app&#x2F;</code></pre>\n<p><img src=\"inMavenByOsDeepin/image-20220603120347751.png\" alt=\"image-20220603120347751\"></p>\n<h1>5、配置环境变量</h1>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">sudo vi &#x2F;etc&#x2F;profile</code></pre>\n<p>文件最下面加入下面的内容</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\"># configuration maven development enviroument\nexport MAVEN_HOME&#x3D;&#x2F;home&#x2F;deepin&#x2F;app&#x2F;apache-maven-3.8.5\nexport PATH&#x3D;$PATH:$MAVEN_HOME&#x2F;bin</code></pre>\n<p><img src=\"inMavenByOsDeepin/image-20220603121051155.png\" alt=\"image-20220603121051155\"></p>\n<p>执行命令让配置文件生效：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">source &#x2F;etc&#x2F;profile</code></pre>\n<p><img src=\"inMavenByOsDeepin/image-20220603121153205.png\" alt=\"image-20220603121153205\"></p>\n<h1>6、验证</h1>\n<p>查看maven版本做验证：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">mvn -v</code></pre>\n<p><img src=\"inMavenByOsDeepin/image-20220603121458972.png\" alt=\"image-20220603121458972\"></p>\n<h1>7、配置仓库文件目录</h1>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">vi &#x2F;home&#x2F;deepin&#x2F;app&#x2F;apache-maven-3.8.5&#x2F;conf&#x2F;settings.xml</code></pre>\n<p>找到localRepository，在下方加入下面的内容：</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;localRepository&gt;&#x2F;home&#x2F;deepin&#x2F;repo&lt;&#x2F;localRepository&gt;</code></pre>\n<p>红框内容为新加入的</p>\n<p><img src=\"inMavenByOsDeepin/image-20220603122200505.png\" alt=\"image-20220603122200505\"></p>\n<h1>8、添加阿里镜像源</h1>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">vi &#x2F;home&#x2F;deepin&#x2F;app&#x2F;apache-maven-3.8.5&#x2F;conf&#x2F;settings.xml</code></pre>\n<p>找到mirror添加下面的内容：</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;mirror&gt;\t\n    &lt;id&gt;alimaven&lt;&#x2F;id&gt;\n    &lt;mirrorOf&gt;*&lt;&#x2F;mirrorOf&gt;\n    &lt;name&gt;aliyun maven&lt;&#x2F;name&gt;\n    &lt;url&gt;https:&#x2F;&#x2F;maven.aliyun.com&#x2F;repository&#x2F;public&lt;&#x2F;url&gt;\n&lt;&#x2F;mirror&gt;</code></pre>\n<p>下面红框内容为添加的</p>\n<p><img src=\"inMavenByOsDeepin/image-20220603122859128.png\" alt=\"image-20220603122859128\"></p>\n"},{"title":"deepin下安装nodejs","date":"2022-06-03T06:51:52.000Z","_content":"# 1、下载安装包\n\n[官网地址](https://nodejs.org/en/download/)\n\n![image-20220603110634896](inNodejsByOsDeepin/image-20220603110634896.png)\n\n> 注意版本\n\n# 2、解压安装包\n\n执行命令：\n\n```shell\n# 解压命令\ntar -xf node-v16.15.1-linux-x64.tar.xz\n# 查看列表\nls -l\n```\n\n![image-20220603111656347](inNodejsByOsDeepin/image-20220603111656347.png)\n\n# 3、移动文件\n\n这步是为了方便找到自己安装的软件，可做可不做\n\n我这边是统一移动到用户的app目录下\n\n```shell\n# 移动文件\nmv node-v16.15.1-linux-x64 ../app/\n# 查看列表\nls -l\n# 切换目录\ncd ../app/\n# 查看列表\nls -l\n# 更改名称（目录名过长）\nmv node-v16.15.1-linux-x64 node\n# 查看列表\nls -l\n```\n\n![image-20220603112001543](inNodejsByOsDeepin/image-20220603112001543.png)\n\n![image-20220603112153367](inNodejsByOsDeepin/image-20220603112153367.png)\n\n# 4、创建软链接\n\n```shell\n# 创建node软链接\nsudo ln -s /home/deepin/app/node/bin/node /usr/local/bin/\n# 创建npm软链接\nsudo ln -s /home/deepin/app/node/bin/npm  /usr/local/bin/\n# 确认软链接建立好了\nsudo ls -l /usr/local/bin/\n```\n\n> 此处涉及到权限问题，因此命令前要加`sudo`\n\n![image-20220603112904096](inNodejsByOsDeepin/image-20220603112904096.png)\n\n# 5、确认node和npm版本\n\n```shell\nnode -v\nnpm -v\n```\n\n![image-20220603113034176](inNodejsByOsDeepin/image-20220603113034176.png)\n\n# 6、设置镜像\n\n设置国内淘宝的镜像，提高npm的下载速度\n\n```shell\n# 查看npm配置列表\nnpm config list\n# 执行如下命令设置成国内的镜像\nnpm config set registry https://registry.npm.taobao.org\n# 查看npm配置列表\nnpm config list\n```\n\n![image-20220603113454241](inNodejsByOsDeepin/image-20220603113454241.png)\n","source":"_posts/inNodejsByOsDeepin.md","raw":"---\ntitle: deepin下安装nodejs\ndate: 2022-06-03 14:51:52\ntags: [deepin,安装部署]\ncategories: [安装部署]\n---\n# 1、下载安装包\n\n[官网地址](https://nodejs.org/en/download/)\n\n![image-20220603110634896](inNodejsByOsDeepin/image-20220603110634896.png)\n\n> 注意版本\n\n# 2、解压安装包\n\n执行命令：\n\n```shell\n# 解压命令\ntar -xf node-v16.15.1-linux-x64.tar.xz\n# 查看列表\nls -l\n```\n\n![image-20220603111656347](inNodejsByOsDeepin/image-20220603111656347.png)\n\n# 3、移动文件\n\n这步是为了方便找到自己安装的软件，可做可不做\n\n我这边是统一移动到用户的app目录下\n\n```shell\n# 移动文件\nmv node-v16.15.1-linux-x64 ../app/\n# 查看列表\nls -l\n# 切换目录\ncd ../app/\n# 查看列表\nls -l\n# 更改名称（目录名过长）\nmv node-v16.15.1-linux-x64 node\n# 查看列表\nls -l\n```\n\n![image-20220603112001543](inNodejsByOsDeepin/image-20220603112001543.png)\n\n![image-20220603112153367](inNodejsByOsDeepin/image-20220603112153367.png)\n\n# 4、创建软链接\n\n```shell\n# 创建node软链接\nsudo ln -s /home/deepin/app/node/bin/node /usr/local/bin/\n# 创建npm软链接\nsudo ln -s /home/deepin/app/node/bin/npm  /usr/local/bin/\n# 确认软链接建立好了\nsudo ls -l /usr/local/bin/\n```\n\n> 此处涉及到权限问题，因此命令前要加`sudo`\n\n![image-20220603112904096](inNodejsByOsDeepin/image-20220603112904096.png)\n\n# 5、确认node和npm版本\n\n```shell\nnode -v\nnpm -v\n```\n\n![image-20220603113034176](inNodejsByOsDeepin/image-20220603113034176.png)\n\n# 6、设置镜像\n\n设置国内淘宝的镜像，提高npm的下载速度\n\n```shell\n# 查看npm配置列表\nnpm config list\n# 执行如下命令设置成国内的镜像\nnpm config set registry https://registry.npm.taobao.org\n# 查看npm配置列表\nnpm config list\n```\n\n![image-20220603113454241](inNodejsByOsDeepin/image-20220603113454241.png)\n","slug":"inNodejsByOsDeepin","published":1,"updated":"2022-06-06T15:32:17.027Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl42z5h7500433gn6c2dzgwal","content":"<h1>1、下载安装包</h1>\n<p><a href=\"https://nodejs.org/en/download/\">官网地址</a></p>\n<p><img src=\"inNodejsByOsDeepin/image-20220603110634896.png\" alt=\"image-20220603110634896\"></p>\n<blockquote>\n<p>注意版本</p>\n</blockquote>\n<h1>2、解压安装包</h1>\n<p>执行命令：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># 解压命令\ntar -xf node-v16.15.1-linux-x64.tar.xz\n# 查看列表\nls -l</code></pre>\n<p><img src=\"inNodejsByOsDeepin/image-20220603111656347.png\" alt=\"image-20220603111656347\"></p>\n<h1>3、移动文件</h1>\n<p>这步是为了方便找到自己安装的软件，可做可不做</p>\n<p>我这边是统一移动到用户的app目录下</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># 移动文件\nmv node-v16.15.1-linux-x64 ..&#x2F;app&#x2F;\n# 查看列表\nls -l\n# 切换目录\ncd ..&#x2F;app&#x2F;\n# 查看列表\nls -l\n# 更改名称（目录名过长）\nmv node-v16.15.1-linux-x64 node\n# 查看列表\nls -l</code></pre>\n<p><img src=\"inNodejsByOsDeepin/image-20220603112001543.png\" alt=\"image-20220603112001543\"></p>\n<p><img src=\"inNodejsByOsDeepin/image-20220603112153367.png\" alt=\"image-20220603112153367\"></p>\n<h1>4、创建软链接</h1>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># 创建node软链接\nsudo ln -s &#x2F;home&#x2F;deepin&#x2F;app&#x2F;node&#x2F;bin&#x2F;node &#x2F;usr&#x2F;local&#x2F;bin&#x2F;\n# 创建npm软链接\nsudo ln -s &#x2F;home&#x2F;deepin&#x2F;app&#x2F;node&#x2F;bin&#x2F;npm  &#x2F;usr&#x2F;local&#x2F;bin&#x2F;\n# 确认软链接建立好了\nsudo ls -l &#x2F;usr&#x2F;local&#x2F;bin&#x2F;</code></pre>\n<blockquote>\n<p>此处涉及到权限问题，因此命令前要加<code>sudo</code></p>\n</blockquote>\n<p><img src=\"inNodejsByOsDeepin/image-20220603112904096.png\" alt=\"image-20220603112904096\"></p>\n<h1>5、确认node和npm版本</h1>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">node -v\nnpm -v</code></pre>\n<p><img src=\"inNodejsByOsDeepin/image-20220603113034176.png\" alt=\"image-20220603113034176\"></p>\n<h1>6、设置镜像</h1>\n<p>设置国内淘宝的镜像，提高npm的下载速度</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># 查看npm配置列表\nnpm config list\n# 执行如下命令设置成国内的镜像\nnpm config set registry https:&#x2F;&#x2F;registry.npm.taobao.org\n# 查看npm配置列表\nnpm config list</code></pre>\n<p><img src=\"inNodejsByOsDeepin/image-20220603113454241.png\" alt=\"image-20220603113454241\"></p>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"cover":"https://blog.huangge1199.cn/post/day20220121/bg.jpeg","excerpt":"","more":"<h1>1、下载安装包</h1>\n<p><a href=\"https://nodejs.org/en/download/\">官网地址</a></p>\n<p><img src=\"inNodejsByOsDeepin/image-20220603110634896.png\" alt=\"image-20220603110634896\"></p>\n<blockquote>\n<p>注意版本</p>\n</blockquote>\n<h1>2、解压安装包</h1>\n<p>执行命令：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># 解压命令\ntar -xf node-v16.15.1-linux-x64.tar.xz\n# 查看列表\nls -l</code></pre>\n<p><img src=\"inNodejsByOsDeepin/image-20220603111656347.png\" alt=\"image-20220603111656347\"></p>\n<h1>3、移动文件</h1>\n<p>这步是为了方便找到自己安装的软件，可做可不做</p>\n<p>我这边是统一移动到用户的app目录下</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># 移动文件\nmv node-v16.15.1-linux-x64 ..&#x2F;app&#x2F;\n# 查看列表\nls -l\n# 切换目录\ncd ..&#x2F;app&#x2F;\n# 查看列表\nls -l\n# 更改名称（目录名过长）\nmv node-v16.15.1-linux-x64 node\n# 查看列表\nls -l</code></pre>\n<p><img src=\"inNodejsByOsDeepin/image-20220603112001543.png\" alt=\"image-20220603112001543\"></p>\n<p><img src=\"inNodejsByOsDeepin/image-20220603112153367.png\" alt=\"image-20220603112153367\"></p>\n<h1>4、创建软链接</h1>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># 创建node软链接\nsudo ln -s &#x2F;home&#x2F;deepin&#x2F;app&#x2F;node&#x2F;bin&#x2F;node &#x2F;usr&#x2F;local&#x2F;bin&#x2F;\n# 创建npm软链接\nsudo ln -s &#x2F;home&#x2F;deepin&#x2F;app&#x2F;node&#x2F;bin&#x2F;npm  &#x2F;usr&#x2F;local&#x2F;bin&#x2F;\n# 确认软链接建立好了\nsudo ls -l &#x2F;usr&#x2F;local&#x2F;bin&#x2F;</code></pre>\n<blockquote>\n<p>此处涉及到权限问题，因此命令前要加<code>sudo</code></p>\n</blockquote>\n<p><img src=\"inNodejsByOsDeepin/image-20220603112904096.png\" alt=\"image-20220603112904096\"></p>\n<h1>5、确认node和npm版本</h1>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">node -v\nnpm -v</code></pre>\n<p><img src=\"inNodejsByOsDeepin/image-20220603113034176.png\" alt=\"image-20220603113034176\"></p>\n<h1>6、设置镜像</h1>\n<p>设置国内淘宝的镜像，提高npm的下载速度</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># 查看npm配置列表\nnpm config list\n# 执行如下命令设置成国内的镜像\nnpm config set registry https:&#x2F;&#x2F;registry.npm.taobao.org\n# 查看npm配置列表\nnpm config list</code></pre>\n<p><img src=\"inNodejsByOsDeepin/image-20220603113454241.png\" alt=\"image-20220603113454241\"></p>\n"},{"title":"RKE方式安装k8s集群和Dashboard","date":"2022-05-03T08:44:17.000Z","_content":"\n# 前言\n\n需要在电脑上安装好VirtualBox和Vagrant\n\n# 构建3台虚拟机\n\n## 1、编写Vagrantfile文件\n\n内容如下：\n\n```\nVagrant.configure(\"2\") do |config|\n  config.vm.box_check_update = false\n  config.vm.provider 'virtualbox' do |vb|\n  vb.customize [ \"guestproperty\", \"set\", :id, \"/VirtualBox/GuestAdd/VBoxService/--timesync-set-threshold\", 1000 ]\n  end  \n  $num_instances = 3\n  # curl https://discovery.etcd.io/new?size=3\n  (1..$num_instances).each do |i|\n    config.vm.define \"node#{i}\" do |node|\n      node.vm.box = \"centos/7\"\n      node.vm.hostname = \"node#{i}\"\n      ip = \"172.17.8.#{i+100}\"\n      node.vm.network \"private_network\", ip: ip\n      node.vm.provider \"virtualbox\" do |vb|\n        vb.memory = \"8192\"\n        if i==1 then\n            vb.cpus = 2\n        else\n            vb.cpus = 1\n        end\n        vb.name = \"node#{i}\"\n      end\n    end\n  end\nend\n```\n\n## 2、启动3台虚拟机\n\n在Vagrantfile文件所在目录的控制台下执行命令：\n\n```bash\nvagrant up\n```\n\n等待完成，完成后，在VirtualBox主页：\n\n![](2022-05-04-16-24-28-image.png)\n\n# 虚拟机配置用户名密码ssh连接\n\n3台虚拟机都需要安装\n\n配置参考：[windows下VirtualBox和vagrant组合安装centos](https://site.huangge1199.cn/189.html) 中的“用户名密码ssh”\n\n# 虚拟机docker安装\n\n3台虚拟机都需要安装\n\n安装教程：[docker安装教程]([docker安装-龙儿之家](https://site.huangge1199.cn/113.html))\n\n# 安装 Kubernetes 命令行工具 kubectl\n\n3台虚拟机都需要安装\n\n执行命令：\n\n```shell\nyum install wget\nwget https://dl.k8s.io/release/v1.24.0/bin/linux/amd64/kubectl && chmod +x kubectl && cp kubectl /usr/bin/\n```\n\n如果报错：curl: (1) Protocol “https not supported or disabled in libcurl\n\n# 安装RKE命令行工具\n\n只有主节点做即可\n\n```shell\nwget https://rancher-mirror.rancher.cn/rke/v1.3.10/rke_linux-amd64 && mv rke_linux-amd64 rke && chmod +x rke && ./rke --version && cp rke /usr/bin/\n```\n\n# 进行机器配置\n\nadduser rke -G docker\n\n## 1、禁用 SELinux\n\n```shell\nvi /etc/selinux/config\n```\n\n将第七行SELINUX=enforcing改为SELINUX=disabled\n\n![](2022-05-04-17-23-24-image.png)\n\n## 2、禁用 swap\n\n```shell\nvi /etc/fstab\n```\n\n使用 # 注释掉有 swap 的一行\n\n![](2022-05-04-17-27-23-image.png)\n\n## 3、关闭防火墙\n\n```shell\nsystemctl stop firewalld.service\nsystemctl disable firewalld.service\n```\n\n## 4、重启查看效果\n\n```shell\nreboot\n/usr/sbin/sestatus -v\nfree -h\n```\n\n![](2022-05-04-17-33-11-image.png)\n\n## 5、设置用户\n\nCentOS7不能使用root用户安装\n\n添加用户：\n\n```shell\nadduser rke -G docker\n```\n\n给新添加的用户设置密码：\n\n```shell\npasswd rke\n```\n\n中途需要输入2次密码\n\n![](2022-05-04-17-38-29-image.png)\n\n确认新用户是否有权限：\n\n```shell\nsu rke\ndocker ps -a\n```\n\n![](2022-05-04-17-40-07-image.png)\n\n## 6、设置SSH\n\n这个地方要给全部的机器配置ssh（包括自己）注意在<mark>新用户</mark>下操作：\n\n```shell\nssh-keygen\nssh-copy-id rke@172.17.8.101\nssh-copy-id rke@172.17.8.102\nssh-copy-id rke@172.17.8.103\n```\n\n第一个红框位置输入yes，第二个红框位置输入密码\n\n![](2022-05-04-17-46-31-image.png)\n\n# 编辑rke.yaml\n\n仅在主节点，在<mark>新用户</mark>下操作\n\n```shell\nvi rke.yaml\n```\n\nrke.yaml内容（里面的IP换成各自的IP哦）：\n\n```yaml\nnodes:\n  - address: 172.17.8.101\n    user: rke\n    role: [controlplane, worker, etcd]\n  - address: 172.17.8.102\n    user: rke\n    role: [controlplane, worker, etcd]\n  - address: 172.17.8.103\n    user: rke\n    role: [worker]\n\nservices:\n  etcd:\n    snapshot: true\n    creation: 6h\n    retention: 24h\n\n# 当使用外部 TLS 终止，并且使用 ingress-nginx v0.22或以上版本时，必须。\ningress:\n  provider: nginx\n  options:\n    use-forwarded-headers: “true”\nded-headers: “true”\n```\n\n# 安装集群\n\n也是在<mark>新用户</mark>下操作：\n\n```shell\nrke up --config rke.yaml\n```\n\n这步执行时间较长，多等一会，需要下载很多镜像~~~~\n\n运行完成后执行 ：\n\n```shell\nmkdir ~/.kube && mv kube_config_rke.yaml ~/.kube/config\n```\n\n最后，执行下面的命令确认集群安装完成\n\n```shell\nkubectl get node\n```\n\n# 安装kubernetes Dashboard\n\n依然是在新用户下：\n\n切换到~目录下\n\n## 1、获取dashboard的yaml文件\n\n```shell\nwget https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.4/aio/deploy/recommended.yaml\n```\n\n## 2、修改文件\n\n修改service部分，默认service是ClusterIP类型，这里改称NodePort类型，是集群外部能否访问\n\n下面标红框的地方为新增加的：\n\n![](2022-05-04-19-41-19-image.png)\n\n## 3、执行yaml文件\n\n```shell\nkubectl apply -f recommended.yaml\n```\n\n## 4、查看服务状态\n\n```shell\nkubectl get all -n kubernetes-dashboard\n```\n\n下面红框的可以看出服务已经运行了\n\n![](2022-05-04-19-47-43-image.png)\n\n## 5、接下来浏览器访问\n\nIP：30010，端口就是你在第二步中添加的，输入网址后，点击高级继续访问就出现下面的页面了\n\n![](2022-05-04-19-48-18-image.png)\n\n## 6、创建登录用户信息\n\n创建文件admin-role.yaml，内容如下：\n\n```yaml\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io/v1\nmetadata:\n  name: admin\n  annotations:\n    rbac.authorization.kubernetes.io/autoupdate: \"true\"\nroleRef:\n  kind: ClusterRole\n  name: cluster-admin\n  apiGroup: rbac.authorization.k8s.io\nsubjects:\n- kind: ServiceAccount\n  name: admin\n  namespace: kube-system\n---\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: admin\n  namespace: kube-system\n  labels:\n    kubernetes.io/cluster-service: \"true\"\n    addonmanager.kubernetes.io/mode: Reconcile\n```\n\n将其执行到集群中：\n\n```shell\nkubectl apply -f admin-role.yaml\n```\n\n## 7、获取token\n\n查看kubernetes-dashboard下面的secret\n\n```shell\n\n```\n\n![](2022-05-04-20-50-13-image.png)\n\n在执行下面的命令：\n\n```shell\nkubectl -n kube-system describe secret 红框的名字\n```\n\n红框内就是token\n\n![](2022-05-04-20-50-57-image.png)\n","source":"_posts/inRKE.md","raw":"---\ntitle: RKE方式安装k8s集群和Dashboard\ndate: 2022-05-03 16:44:17\ntags: [安装部署]\ncategories: [云原生]\n---\n\n# 前言\n\n需要在电脑上安装好VirtualBox和Vagrant\n\n# 构建3台虚拟机\n\n## 1、编写Vagrantfile文件\n\n内容如下：\n\n```\nVagrant.configure(\"2\") do |config|\n  config.vm.box_check_update = false\n  config.vm.provider 'virtualbox' do |vb|\n  vb.customize [ \"guestproperty\", \"set\", :id, \"/VirtualBox/GuestAdd/VBoxService/--timesync-set-threshold\", 1000 ]\n  end  \n  $num_instances = 3\n  # curl https://discovery.etcd.io/new?size=3\n  (1..$num_instances).each do |i|\n    config.vm.define \"node#{i}\" do |node|\n      node.vm.box = \"centos/7\"\n      node.vm.hostname = \"node#{i}\"\n      ip = \"172.17.8.#{i+100}\"\n      node.vm.network \"private_network\", ip: ip\n      node.vm.provider \"virtualbox\" do |vb|\n        vb.memory = \"8192\"\n        if i==1 then\n            vb.cpus = 2\n        else\n            vb.cpus = 1\n        end\n        vb.name = \"node#{i}\"\n      end\n    end\n  end\nend\n```\n\n## 2、启动3台虚拟机\n\n在Vagrantfile文件所在目录的控制台下执行命令：\n\n```bash\nvagrant up\n```\n\n等待完成，完成后，在VirtualBox主页：\n\n![](2022-05-04-16-24-28-image.png)\n\n# 虚拟机配置用户名密码ssh连接\n\n3台虚拟机都需要安装\n\n配置参考：[windows下VirtualBox和vagrant组合安装centos](https://site.huangge1199.cn/189.html) 中的“用户名密码ssh”\n\n# 虚拟机docker安装\n\n3台虚拟机都需要安装\n\n安装教程：[docker安装教程]([docker安装-龙儿之家](https://site.huangge1199.cn/113.html))\n\n# 安装 Kubernetes 命令行工具 kubectl\n\n3台虚拟机都需要安装\n\n执行命令：\n\n```shell\nyum install wget\nwget https://dl.k8s.io/release/v1.24.0/bin/linux/amd64/kubectl && chmod +x kubectl && cp kubectl /usr/bin/\n```\n\n如果报错：curl: (1) Protocol “https not supported or disabled in libcurl\n\n# 安装RKE命令行工具\n\n只有主节点做即可\n\n```shell\nwget https://rancher-mirror.rancher.cn/rke/v1.3.10/rke_linux-amd64 && mv rke_linux-amd64 rke && chmod +x rke && ./rke --version && cp rke /usr/bin/\n```\n\n# 进行机器配置\n\nadduser rke -G docker\n\n## 1、禁用 SELinux\n\n```shell\nvi /etc/selinux/config\n```\n\n将第七行SELINUX=enforcing改为SELINUX=disabled\n\n![](2022-05-04-17-23-24-image.png)\n\n## 2、禁用 swap\n\n```shell\nvi /etc/fstab\n```\n\n使用 # 注释掉有 swap 的一行\n\n![](2022-05-04-17-27-23-image.png)\n\n## 3、关闭防火墙\n\n```shell\nsystemctl stop firewalld.service\nsystemctl disable firewalld.service\n```\n\n## 4、重启查看效果\n\n```shell\nreboot\n/usr/sbin/sestatus -v\nfree -h\n```\n\n![](2022-05-04-17-33-11-image.png)\n\n## 5、设置用户\n\nCentOS7不能使用root用户安装\n\n添加用户：\n\n```shell\nadduser rke -G docker\n```\n\n给新添加的用户设置密码：\n\n```shell\npasswd rke\n```\n\n中途需要输入2次密码\n\n![](2022-05-04-17-38-29-image.png)\n\n确认新用户是否有权限：\n\n```shell\nsu rke\ndocker ps -a\n```\n\n![](2022-05-04-17-40-07-image.png)\n\n## 6、设置SSH\n\n这个地方要给全部的机器配置ssh（包括自己）注意在<mark>新用户</mark>下操作：\n\n```shell\nssh-keygen\nssh-copy-id rke@172.17.8.101\nssh-copy-id rke@172.17.8.102\nssh-copy-id rke@172.17.8.103\n```\n\n第一个红框位置输入yes，第二个红框位置输入密码\n\n![](2022-05-04-17-46-31-image.png)\n\n# 编辑rke.yaml\n\n仅在主节点，在<mark>新用户</mark>下操作\n\n```shell\nvi rke.yaml\n```\n\nrke.yaml内容（里面的IP换成各自的IP哦）：\n\n```yaml\nnodes:\n  - address: 172.17.8.101\n    user: rke\n    role: [controlplane, worker, etcd]\n  - address: 172.17.8.102\n    user: rke\n    role: [controlplane, worker, etcd]\n  - address: 172.17.8.103\n    user: rke\n    role: [worker]\n\nservices:\n  etcd:\n    snapshot: true\n    creation: 6h\n    retention: 24h\n\n# 当使用外部 TLS 终止，并且使用 ingress-nginx v0.22或以上版本时，必须。\ningress:\n  provider: nginx\n  options:\n    use-forwarded-headers: “true”\nded-headers: “true”\n```\n\n# 安装集群\n\n也是在<mark>新用户</mark>下操作：\n\n```shell\nrke up --config rke.yaml\n```\n\n这步执行时间较长，多等一会，需要下载很多镜像~~~~\n\n运行完成后执行 ：\n\n```shell\nmkdir ~/.kube && mv kube_config_rke.yaml ~/.kube/config\n```\n\n最后，执行下面的命令确认集群安装完成\n\n```shell\nkubectl get node\n```\n\n# 安装kubernetes Dashboard\n\n依然是在新用户下：\n\n切换到~目录下\n\n## 1、获取dashboard的yaml文件\n\n```shell\nwget https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.4/aio/deploy/recommended.yaml\n```\n\n## 2、修改文件\n\n修改service部分，默认service是ClusterIP类型，这里改称NodePort类型，是集群外部能否访问\n\n下面标红框的地方为新增加的：\n\n![](2022-05-04-19-41-19-image.png)\n\n## 3、执行yaml文件\n\n```shell\nkubectl apply -f recommended.yaml\n```\n\n## 4、查看服务状态\n\n```shell\nkubectl get all -n kubernetes-dashboard\n```\n\n下面红框的可以看出服务已经运行了\n\n![](2022-05-04-19-47-43-image.png)\n\n## 5、接下来浏览器访问\n\nIP：30010，端口就是你在第二步中添加的，输入网址后，点击高级继续访问就出现下面的页面了\n\n![](2022-05-04-19-48-18-image.png)\n\n## 6、创建登录用户信息\n\n创建文件admin-role.yaml，内容如下：\n\n```yaml\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io/v1\nmetadata:\n  name: admin\n  annotations:\n    rbac.authorization.kubernetes.io/autoupdate: \"true\"\nroleRef:\n  kind: ClusterRole\n  name: cluster-admin\n  apiGroup: rbac.authorization.k8s.io\nsubjects:\n- kind: ServiceAccount\n  name: admin\n  namespace: kube-system\n---\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: admin\n  namespace: kube-system\n  labels:\n    kubernetes.io/cluster-service: \"true\"\n    addonmanager.kubernetes.io/mode: Reconcile\n```\n\n将其执行到集群中：\n\n```shell\nkubectl apply -f admin-role.yaml\n```\n\n## 7、获取token\n\n查看kubernetes-dashboard下面的secret\n\n```shell\n\n```\n\n![](2022-05-04-20-50-13-image.png)\n\n在执行下面的命令：\n\n```shell\nkubectl -n kube-system describe secret 红框的名字\n```\n\n红框内就是token\n\n![](2022-05-04-20-50-57-image.png)\n","slug":"inRKE","published":1,"updated":"2022-06-03T06:00:55.569Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl42z5h7600473gn63phlgcup","content":"<h1>前言</h1>\n<p>需要在电脑上安装好VirtualBox和Vagrant</p>\n<h1>构建3台虚拟机</h1>\n<h2 id=\"1、编写Vagrantfile文件\">1、编写Vagrantfile文件</h2>\n<p>内容如下：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">Vagrant.configure(&quot;2&quot;) do |config|\n  config.vm.box_check_update &#x3D; false\n  config.vm.provider &#39;virtualbox&#39; do |vb|\n  vb.customize [ &quot;guestproperty&quot;, &quot;set&quot;, :id, &quot;&#x2F;VirtualBox&#x2F;GuestAdd&#x2F;VBoxService&#x2F;--timesync-set-threshold&quot;, 1000 ]\n  end  \n  $num_instances &#x3D; 3\n  # curl https:&#x2F;&#x2F;discovery.etcd.io&#x2F;new?size&#x3D;3\n  (1..$num_instances).each do |i|\n    config.vm.define &quot;node#&#123;i&#125;&quot; do |node|\n      node.vm.box &#x3D; &quot;centos&#x2F;7&quot;\n      node.vm.hostname &#x3D; &quot;node#&#123;i&#125;&quot;\n      ip &#x3D; &quot;172.17.8.#&#123;i+100&#125;&quot;\n      node.vm.network &quot;private_network&quot;, ip: ip\n      node.vm.provider &quot;virtualbox&quot; do |vb|\n        vb.memory &#x3D; &quot;8192&quot;\n        if i&#x3D;&#x3D;1 then\n            vb.cpus &#x3D; 2\n        else\n            vb.cpus &#x3D; 1\n        end\n        vb.name &#x3D; &quot;node#&#123;i&#125;&quot;\n      end\n    end\n  end\nend</code></pre>\n<h2 id=\"2、启动3台虚拟机\">2、启动3台虚拟机</h2>\n<p>在Vagrantfile文件所在目录的控制台下执行命令：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">vagrant up</code></pre>\n<p>等待完成，完成后，在VirtualBox主页：</p>\n<p><img src=\"2022-05-04-16-24-28-image.png\" alt=\"\"></p>\n<h1>虚拟机配置用户名密码ssh连接</h1>\n<p>3台虚拟机都需要安装</p>\n<p>配置参考：<a href=\"https://site.huangge1199.cn/189.html\">windows下VirtualBox和vagrant组合安装centos</a> 中的“用户名密码ssh”</p>\n<h1>虚拟机docker安装</h1>\n<p>3台虚拟机都需要安装</p>\n<p>安装教程：<a href=\"%5Bdocker%E5%AE%89%E8%A3%85-%E9%BE%99%E5%84%BF%E4%B9%8B%E5%AE%B6%5D(https://site.huangge1199.cn/113.html)\">docker安装教程</a></p>\n<h1>安装 Kubernetes 命令行工具 kubectl</h1>\n<p>3台虚拟机都需要安装</p>\n<p>执行命令：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">yum install wget\nwget https:&#x2F;&#x2F;dl.k8s.io&#x2F;release&#x2F;v1.24.0&#x2F;bin&#x2F;linux&#x2F;amd64&#x2F;kubectl &amp;&amp; chmod +x kubectl &amp;&amp; cp kubectl &#x2F;usr&#x2F;bin&#x2F;</code></pre>\n<p>如果报错：curl: (1) Protocol “https not supported or disabled in libcurl</p>\n<h1>安装RKE命令行工具</h1>\n<p>只有主节点做即可</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">wget https:&#x2F;&#x2F;rancher-mirror.rancher.cn&#x2F;rke&#x2F;v1.3.10&#x2F;rke_linux-amd64 &amp;&amp; mv rke_linux-amd64 rke &amp;&amp; chmod +x rke &amp;&amp; .&#x2F;rke --version &amp;&amp; cp rke &#x2F;usr&#x2F;bin&#x2F;</code></pre>\n<h1>进行机器配置</h1>\n<p>adduser rke -G docker</p>\n<h2 id=\"1、禁用-SELinux\">1、禁用 SELinux</h2>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">vi &#x2F;etc&#x2F;selinux&#x2F;config</code></pre>\n<p>将第七行SELINUX=enforcing改为SELINUX=disabled</p>\n<p><img src=\"2022-05-04-17-23-24-image.png\" alt=\"\"></p>\n<h2 id=\"2、禁用-swap\">2、禁用 swap</h2>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">vi &#x2F;etc&#x2F;fstab</code></pre>\n<p>使用 # 注释掉有 swap 的一行</p>\n<p><img src=\"2022-05-04-17-27-23-image.png\" alt=\"\"></p>\n<h2 id=\"3、关闭防火墙\">3、关闭防火墙</h2>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">systemctl stop firewalld.service\nsystemctl disable firewalld.service</code></pre>\n<h2 id=\"4、重启查看效果\">4、重启查看效果</h2>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">reboot\n&#x2F;usr&#x2F;sbin&#x2F;sestatus -v\nfree -h</code></pre>\n<p><img src=\"2022-05-04-17-33-11-image.png\" alt=\"\"></p>\n<h2 id=\"5、设置用户\">5、设置用户</h2>\n<p>CentOS7不能使用root用户安装</p>\n<p>添加用户：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">adduser rke -G docker</code></pre>\n<p>给新添加的用户设置密码：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">passwd rke</code></pre>\n<p>中途需要输入2次密码</p>\n<p><img src=\"2022-05-04-17-38-29-image.png\" alt=\"\"></p>\n<p>确认新用户是否有权限：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">su rke\ndocker ps -a</code></pre>\n<p><img src=\"2022-05-04-17-40-07-image.png\" alt=\"\"></p>\n<h2 id=\"6、设置SSH\">6、设置SSH</h2>\n<p>这个地方要给全部的机器配置ssh（包括自己）注意在<mark>新用户</mark>下操作：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ssh-keygen\nssh-copy-id rke@172.17.8.101\nssh-copy-id rke@172.17.8.102\nssh-copy-id rke@172.17.8.103</code></pre>\n<p>第一个红框位置输入yes，第二个红框位置输入密码</p>\n<p><img src=\"2022-05-04-17-46-31-image.png\" alt=\"\"></p>\n<h1>编辑rke.yaml</h1>\n<p>仅在主节点，在<mark>新用户</mark>下操作</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">vi rke.yaml</code></pre>\n<p>rke.yaml内容（里面的IP换成各自的IP哦）：</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\">nodes:\n  - address: 172.17.8.101\n    user: rke\n    role: [controlplane, worker, etcd]\n  - address: 172.17.8.102\n    user: rke\n    role: [controlplane, worker, etcd]\n  - address: 172.17.8.103\n    user: rke\n    role: [worker]\n\nservices:\n  etcd:\n    snapshot: true\n    creation: 6h\n    retention: 24h\n\n# 当使用外部 TLS 终止，并且使用 ingress-nginx v0.22或以上版本时，必须。\ningress:\n  provider: nginx\n  options:\n    use-forwarded-headers: “true”\nded-headers: “true”</code></pre>\n<h1>安装集群</h1>\n<p>也是在<mark>新用户</mark>下操作：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">rke up --config rke.yaml</code></pre>\n<p>这步执行时间较长，多等一会，需要下载很多镜像~~~~</p>\n<p>运行完成后执行 ：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">mkdir ~&#x2F;.kube &amp;&amp; mv kube_config_rke.yaml ~&#x2F;.kube&#x2F;config</code></pre>\n<p>最后，执行下面的命令确认集群安装完成</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl get node</code></pre>\n<h1>安装kubernetes Dashboard</h1>\n<p>依然是在新用户下：</p>\n<p>切换到~目录下</p>\n<h2 id=\"1、获取dashboard的yaml文件\">1、获取dashboard的yaml文件</h2>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">wget https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;kubernetes&#x2F;dashboard&#x2F;v2.0.4&#x2F;aio&#x2F;deploy&#x2F;recommended.yaml</code></pre>\n<h2 id=\"2、修改文件\">2、修改文件</h2>\n<p>修改service部分，默认service是ClusterIP类型，这里改称NodePort类型，是集群外部能否访问</p>\n<p>下面标红框的地方为新增加的：</p>\n<p><img src=\"2022-05-04-19-41-19-image.png\" alt=\"\"></p>\n<h2 id=\"3、执行yaml文件\">3、执行yaml文件</h2>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl apply -f recommended.yaml</code></pre>\n<h2 id=\"4、查看服务状态\">4、查看服务状态</h2>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl get all -n kubernetes-dashboard</code></pre>\n<p>下面红框的可以看出服务已经运行了</p>\n<p><img src=\"2022-05-04-19-47-43-image.png\" alt=\"\"></p>\n<h2 id=\"5、接下来浏览器访问\">5、接下来浏览器访问</h2>\n<p>IP：30010，端口就是你在第二步中添加的，输入网址后，点击高级继续访问就出现下面的页面了</p>\n<p><img src=\"2022-05-04-19-48-18-image.png\" alt=\"\"></p>\n<h2 id=\"6、创建登录用户信息\">6、创建登录用户信息</h2>\n<p>创建文件admin-role.yaml，内容如下：</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\">kind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io&#x2F;v1\nmetadata:\n  name: admin\n  annotations:\n    rbac.authorization.kubernetes.io&#x2F;autoupdate: &quot;true&quot;\nroleRef:\n  kind: ClusterRole\n  name: cluster-admin\n  apiGroup: rbac.authorization.k8s.io\nsubjects:\n- kind: ServiceAccount\n  name: admin\n  namespace: kube-system\n---\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: admin\n  namespace: kube-system\n  labels:\n    kubernetes.io&#x2F;cluster-service: &quot;true&quot;\n    addonmanager.kubernetes.io&#x2F;mode: Reconcile</code></pre>\n<p>将其执行到集群中：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl apply -f admin-role.yaml</code></pre>\n<h2 id=\"7、获取token\">7、获取token</h2>\n<p>查看kubernetes-dashboard下面的secret</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"></code></pre>\n<p><img src=\"2022-05-04-20-50-13-image.png\" alt=\"\"></p>\n<p>在执行下面的命令：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl -n kube-system describe secret 红框的名字</code></pre>\n<p>红框内就是token</p>\n<p><img src=\"2022-05-04-20-50-57-image.png\" alt=\"\"></p>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"cover":"https://blog.huangge1199.cn/post/sublimeText4Purchase/bg.jpeg","excerpt":"","more":"<h1>前言</h1>\n<p>需要在电脑上安装好VirtualBox和Vagrant</p>\n<h1>构建3台虚拟机</h1>\n<h2 id=\"1、编写Vagrantfile文件\">1、编写Vagrantfile文件</h2>\n<p>内容如下：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">Vagrant.configure(&quot;2&quot;) do |config|\n  config.vm.box_check_update &#x3D; false\n  config.vm.provider &#39;virtualbox&#39; do |vb|\n  vb.customize [ &quot;guestproperty&quot;, &quot;set&quot;, :id, &quot;&#x2F;VirtualBox&#x2F;GuestAdd&#x2F;VBoxService&#x2F;--timesync-set-threshold&quot;, 1000 ]\n  end  \n  $num_instances &#x3D; 3\n  # curl https:&#x2F;&#x2F;discovery.etcd.io&#x2F;new?size&#x3D;3\n  (1..$num_instances).each do |i|\n    config.vm.define &quot;node#&#123;i&#125;&quot; do |node|\n      node.vm.box &#x3D; &quot;centos&#x2F;7&quot;\n      node.vm.hostname &#x3D; &quot;node#&#123;i&#125;&quot;\n      ip &#x3D; &quot;172.17.8.#&#123;i+100&#125;&quot;\n      node.vm.network &quot;private_network&quot;, ip: ip\n      node.vm.provider &quot;virtualbox&quot; do |vb|\n        vb.memory &#x3D; &quot;8192&quot;\n        if i&#x3D;&#x3D;1 then\n            vb.cpus &#x3D; 2\n        else\n            vb.cpus &#x3D; 1\n        end\n        vb.name &#x3D; &quot;node#&#123;i&#125;&quot;\n      end\n    end\n  end\nend</code></pre>\n<h2 id=\"2、启动3台虚拟机\">2、启动3台虚拟机</h2>\n<p>在Vagrantfile文件所在目录的控制台下执行命令：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">vagrant up</code></pre>\n<p>等待完成，完成后，在VirtualBox主页：</p>\n<p><img src=\"2022-05-04-16-24-28-image.png\" alt=\"\"></p>\n<h1>虚拟机配置用户名密码ssh连接</h1>\n<p>3台虚拟机都需要安装</p>\n<p>配置参考：<a href=\"https://site.huangge1199.cn/189.html\">windows下VirtualBox和vagrant组合安装centos</a> 中的“用户名密码ssh”</p>\n<h1>虚拟机docker安装</h1>\n<p>3台虚拟机都需要安装</p>\n<p>安装教程：<a href=\"%5Bdocker%E5%AE%89%E8%A3%85-%E9%BE%99%E5%84%BF%E4%B9%8B%E5%AE%B6%5D(https://site.huangge1199.cn/113.html)\">docker安装教程</a></p>\n<h1>安装 Kubernetes 命令行工具 kubectl</h1>\n<p>3台虚拟机都需要安装</p>\n<p>执行命令：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">yum install wget\nwget https:&#x2F;&#x2F;dl.k8s.io&#x2F;release&#x2F;v1.24.0&#x2F;bin&#x2F;linux&#x2F;amd64&#x2F;kubectl &amp;&amp; chmod +x kubectl &amp;&amp; cp kubectl &#x2F;usr&#x2F;bin&#x2F;</code></pre>\n<p>如果报错：curl: (1) Protocol “https not supported or disabled in libcurl</p>\n<h1>安装RKE命令行工具</h1>\n<p>只有主节点做即可</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">wget https:&#x2F;&#x2F;rancher-mirror.rancher.cn&#x2F;rke&#x2F;v1.3.10&#x2F;rke_linux-amd64 &amp;&amp; mv rke_linux-amd64 rke &amp;&amp; chmod +x rke &amp;&amp; .&#x2F;rke --version &amp;&amp; cp rke &#x2F;usr&#x2F;bin&#x2F;</code></pre>\n<h1>进行机器配置</h1>\n<p>adduser rke -G docker</p>\n<h2 id=\"1、禁用-SELinux\">1、禁用 SELinux</h2>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">vi &#x2F;etc&#x2F;selinux&#x2F;config</code></pre>\n<p>将第七行SELINUX=enforcing改为SELINUX=disabled</p>\n<p><img src=\"2022-05-04-17-23-24-image.png\" alt=\"\"></p>\n<h2 id=\"2、禁用-swap\">2、禁用 swap</h2>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">vi &#x2F;etc&#x2F;fstab</code></pre>\n<p>使用 # 注释掉有 swap 的一行</p>\n<p><img src=\"2022-05-04-17-27-23-image.png\" alt=\"\"></p>\n<h2 id=\"3、关闭防火墙\">3、关闭防火墙</h2>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">systemctl stop firewalld.service\nsystemctl disable firewalld.service</code></pre>\n<h2 id=\"4、重启查看效果\">4、重启查看效果</h2>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">reboot\n&#x2F;usr&#x2F;sbin&#x2F;sestatus -v\nfree -h</code></pre>\n<p><img src=\"2022-05-04-17-33-11-image.png\" alt=\"\"></p>\n<h2 id=\"5、设置用户\">5、设置用户</h2>\n<p>CentOS7不能使用root用户安装</p>\n<p>添加用户：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">adduser rke -G docker</code></pre>\n<p>给新添加的用户设置密码：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">passwd rke</code></pre>\n<p>中途需要输入2次密码</p>\n<p><img src=\"2022-05-04-17-38-29-image.png\" alt=\"\"></p>\n<p>确认新用户是否有权限：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">su rke\ndocker ps -a</code></pre>\n<p><img src=\"2022-05-04-17-40-07-image.png\" alt=\"\"></p>\n<h2 id=\"6、设置SSH\">6、设置SSH</h2>\n<p>这个地方要给全部的机器配置ssh（包括自己）注意在<mark>新用户</mark>下操作：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ssh-keygen\nssh-copy-id rke@172.17.8.101\nssh-copy-id rke@172.17.8.102\nssh-copy-id rke@172.17.8.103</code></pre>\n<p>第一个红框位置输入yes，第二个红框位置输入密码</p>\n<p><img src=\"2022-05-04-17-46-31-image.png\" alt=\"\"></p>\n<h1>编辑rke.yaml</h1>\n<p>仅在主节点，在<mark>新用户</mark>下操作</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">vi rke.yaml</code></pre>\n<p>rke.yaml内容（里面的IP换成各自的IP哦）：</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\">nodes:\n  - address: 172.17.8.101\n    user: rke\n    role: [controlplane, worker, etcd]\n  - address: 172.17.8.102\n    user: rke\n    role: [controlplane, worker, etcd]\n  - address: 172.17.8.103\n    user: rke\n    role: [worker]\n\nservices:\n  etcd:\n    snapshot: true\n    creation: 6h\n    retention: 24h\n\n# 当使用外部 TLS 终止，并且使用 ingress-nginx v0.22或以上版本时，必须。\ningress:\n  provider: nginx\n  options:\n    use-forwarded-headers: “true”\nded-headers: “true”</code></pre>\n<h1>安装集群</h1>\n<p>也是在<mark>新用户</mark>下操作：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">rke up --config rke.yaml</code></pre>\n<p>这步执行时间较长，多等一会，需要下载很多镜像~~~~</p>\n<p>运行完成后执行 ：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">mkdir ~&#x2F;.kube &amp;&amp; mv kube_config_rke.yaml ~&#x2F;.kube&#x2F;config</code></pre>\n<p>最后，执行下面的命令确认集群安装完成</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl get node</code></pre>\n<h1>安装kubernetes Dashboard</h1>\n<p>依然是在新用户下：</p>\n<p>切换到~目录下</p>\n<h2 id=\"1、获取dashboard的yaml文件\">1、获取dashboard的yaml文件</h2>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">wget https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;kubernetes&#x2F;dashboard&#x2F;v2.0.4&#x2F;aio&#x2F;deploy&#x2F;recommended.yaml</code></pre>\n<h2 id=\"2、修改文件\">2、修改文件</h2>\n<p>修改service部分，默认service是ClusterIP类型，这里改称NodePort类型，是集群外部能否访问</p>\n<p>下面标红框的地方为新增加的：</p>\n<p><img src=\"2022-05-04-19-41-19-image.png\" alt=\"\"></p>\n<h2 id=\"3、执行yaml文件\">3、执行yaml文件</h2>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl apply -f recommended.yaml</code></pre>\n<h2 id=\"4、查看服务状态\">4、查看服务状态</h2>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl get all -n kubernetes-dashboard</code></pre>\n<p>下面红框的可以看出服务已经运行了</p>\n<p><img src=\"2022-05-04-19-47-43-image.png\" alt=\"\"></p>\n<h2 id=\"5、接下来浏览器访问\">5、接下来浏览器访问</h2>\n<p>IP：30010，端口就是你在第二步中添加的，输入网址后，点击高级继续访问就出现下面的页面了</p>\n<p><img src=\"2022-05-04-19-48-18-image.png\" alt=\"\"></p>\n<h2 id=\"6、创建登录用户信息\">6、创建登录用户信息</h2>\n<p>创建文件admin-role.yaml，内容如下：</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\">kind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io&#x2F;v1\nmetadata:\n  name: admin\n  annotations:\n    rbac.authorization.kubernetes.io&#x2F;autoupdate: &quot;true&quot;\nroleRef:\n  kind: ClusterRole\n  name: cluster-admin\n  apiGroup: rbac.authorization.k8s.io\nsubjects:\n- kind: ServiceAccount\n  name: admin\n  namespace: kube-system\n---\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: admin\n  namespace: kube-system\n  labels:\n    kubernetes.io&#x2F;cluster-service: &quot;true&quot;\n    addonmanager.kubernetes.io&#x2F;mode: Reconcile</code></pre>\n<p>将其执行到集群中：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl apply -f admin-role.yaml</code></pre>\n<h2 id=\"7、获取token\">7、获取token</h2>\n<p>查看kubernetes-dashboard下面的secret</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"></code></pre>\n<p><img src=\"2022-05-04-20-50-13-image.png\" alt=\"\"></p>\n<p>在执行下面的命令：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">kubectl -n kube-system describe secret 红框的名字</code></pre>\n<p>红框内就是token</p>\n<p><img src=\"2022-05-04-20-50-57-image.png\" alt=\"\"></p>\n"},{"title":"一条命令运行rancher（未完成）","date":"2022-05-26T00:49:12.000Z","_content":"\n# 1、命令行操作部分\n\n## 1.1、rancher安装\n\n控制台中rke用户下执行docker命令：\n\n```shell\ndocker run --name=rancher -d --privileged --restart=unless-stopped -p 30040:80 -p 30050:443 rancher/rancher:latest\n```\n\n## 1.2 检查是否正常启动\n\n可通过下面两个命令查看：\n\n```shell\ndocker ps                          ## 查看正在运行中的docker容器\ndocker logs -f --tail 100 rancher  ## 查看rancher容器执行日志\n```\n","source":"_posts/inReacherByDC.md","raw":"---\ntitle: 一条命令运行rancher（未完成）\ndate: 2022-05-26 08:49:12\ntags: [docker,安装部署]\ncategories: [云原生]\n---\n\n# 1、命令行操作部分\n\n## 1.1、rancher安装\n\n控制台中rke用户下执行docker命令：\n\n```shell\ndocker run --name=rancher -d --privileged --restart=unless-stopped -p 30040:80 -p 30050:443 rancher/rancher:latest\n```\n\n## 1.2 检查是否正常启动\n\n可通过下面两个命令查看：\n\n```shell\ndocker ps                          ## 查看正在运行中的docker容器\ndocker logs -f --tail 100 rancher  ## 查看rancher容器执行日志\n```\n","slug":"inReacherByDC","published":1,"updated":"2022-06-03T06:00:55.569Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl42z5h77004b3gn67klihxl6","content":"<h1>1、命令行操作部分</h1>\n<h2 id=\"1-1、rancher安装\">1.1、rancher安装</h2>\n<p>控制台中rke用户下执行docker命令：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">docker run --name&#x3D;rancher -d --privileged --restart&#x3D;unless-stopped -p 30040:80 -p 30050:443 rancher&#x2F;rancher:latest</code></pre>\n<h2 id=\"1-2-检查是否正常启动\">1.2 检查是否正常启动</h2>\n<p>可通过下面两个命令查看：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">docker ps                          ## 查看正在运行中的docker容器\ndocker logs -f --tail 100 rancher  ## 查看rancher容器执行日志</code></pre>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"cover":"https://blog.huangge1199.cn/post/jpaCompositePK/bg.jpg","excerpt":"","more":"<h1>1、命令行操作部分</h1>\n<h2 id=\"1-1、rancher安装\">1.1、rancher安装</h2>\n<p>控制台中rke用户下执行docker命令：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">docker run --name&#x3D;rancher -d --privileged --restart&#x3D;unless-stopped -p 30040:80 -p 30050:443 rancher&#x2F;rancher:latest</code></pre>\n<h2 id=\"1-2-检查是否正常启动\">1.2 检查是否正常启动</h2>\n<p>可通过下面两个命令查看：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">docker ps                          ## 查看正在运行中的docker容器\ndocker logs -f --tail 100 rancher  ## 查看rancher容器执行日志</code></pre>\n"},{"title":"deepin下安装vue","date":"2022-06-03T06:51:52.000Z","_content":"\n# 1、前置条件\n\n安装好nodejs\n\n参考：[deepin下安装nodejs](https://site.huangge1199.cn/407.html)\n\n# 2、全局安装Vue\n\n执行命令：\n\n```shell\n# 下面两个版本的二选一哦\nnpm install -g @vue/cli\t\t//vue3.0\nnpm install -g vue-cli\t\t//vue2.0\n```\n\n我这边安装的是3.0版本的\n\n![image-20220603114033774](inVueByOsDeepin/image-20220603114033774.png)\n\n# 3、全局安装webpack\n\n```shell\nnpm install -g webpack\n```\n\n![image-20220603114219499](inVueByOsDeepin/image-20220603114219499.png)\n\n# 4、创建软链接\n\n```shell\n# 创建Vue软链接\nsudo ln -s /home/deepin/app/node/bin/vue /usr/local/bin/\n# 创建webpack软链接\nsudo ln -s /home/deepin/app/node/bin/webpack /usr/local/bin/\n# 查看软链接列表\nsudo ls -l /usr/local/bin/\n```\n\n![image-20220603114513508](inVueByOsDeepin/image-20220603114513508.png)\n\n# 5、查看Vue版本\n\n```shell\nvue --version\n```\n\n![image-20220603114616673](inVueByOsDeepin/image-20220603114616673.png)\n","source":"_posts/inVueByOsDeepin.md","raw":"---\ntitle: deepin下安装vue\ndate: 2022-06-03 14:51:52\ntags: [deepin,安装部署]\ncategories: [安装部署]\n---\n\n# 1、前置条件\n\n安装好nodejs\n\n参考：[deepin下安装nodejs](https://site.huangge1199.cn/407.html)\n\n# 2、全局安装Vue\n\n执行命令：\n\n```shell\n# 下面两个版本的二选一哦\nnpm install -g @vue/cli\t\t//vue3.0\nnpm install -g vue-cli\t\t//vue2.0\n```\n\n我这边安装的是3.0版本的\n\n![image-20220603114033774](inVueByOsDeepin/image-20220603114033774.png)\n\n# 3、全局安装webpack\n\n```shell\nnpm install -g webpack\n```\n\n![image-20220603114219499](inVueByOsDeepin/image-20220603114219499.png)\n\n# 4、创建软链接\n\n```shell\n# 创建Vue软链接\nsudo ln -s /home/deepin/app/node/bin/vue /usr/local/bin/\n# 创建webpack软链接\nsudo ln -s /home/deepin/app/node/bin/webpack /usr/local/bin/\n# 查看软链接列表\nsudo ls -l /usr/local/bin/\n```\n\n![image-20220603114513508](inVueByOsDeepin/image-20220603114513508.png)\n\n# 5、查看Vue版本\n\n```shell\nvue --version\n```\n\n![image-20220603114616673](inVueByOsDeepin/image-20220603114616673.png)\n","slug":"inVueByOsDeepin","published":1,"updated":"2022-06-06T15:32:17.019Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl42z5h78004e3gn63oy68a0y","content":"<h1>1、前置条件</h1>\n<p>安装好nodejs</p>\n<p>参考：<a href=\"https://site.huangge1199.cn/407.html\">deepin下安装nodejs</a></p>\n<h1>2、全局安装Vue</h1>\n<p>执行命令：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># 下面两个版本的二选一哦\nnpm install -g @vue&#x2F;cli\t\t&#x2F;&#x2F;vue3.0\nnpm install -g vue-cli\t\t&#x2F;&#x2F;vue2.0</code></pre>\n<p>我这边安装的是3.0版本的</p>\n<p><img src=\"inVueByOsDeepin/image-20220603114033774.png\" alt=\"image-20220603114033774\"></p>\n<h1>3、全局安装webpack</h1>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">npm install -g webpack</code></pre>\n<p><img src=\"inVueByOsDeepin/image-20220603114219499.png\" alt=\"image-20220603114219499\"></p>\n<h1>4、创建软链接</h1>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># 创建Vue软链接\nsudo ln -s &#x2F;home&#x2F;deepin&#x2F;app&#x2F;node&#x2F;bin&#x2F;vue &#x2F;usr&#x2F;local&#x2F;bin&#x2F;\n# 创建webpack软链接\nsudo ln -s &#x2F;home&#x2F;deepin&#x2F;app&#x2F;node&#x2F;bin&#x2F;webpack &#x2F;usr&#x2F;local&#x2F;bin&#x2F;\n# 查看软链接列表\nsudo ls -l &#x2F;usr&#x2F;local&#x2F;bin&#x2F;</code></pre>\n<p><img src=\"inVueByOsDeepin/image-20220603114513508.png\" alt=\"image-20220603114513508\"></p>\n<h1>5、查看Vue版本</h1>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">vue --version</code></pre>\n<p><img src=\"inVueByOsDeepin/image-20220603114616673.png\" alt=\"image-20220603114616673\"></p>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"cover":"https://blog.huangge1199.cn/post/day20220119/bg.jpeg","excerpt":"","more":"<h1>1、前置条件</h1>\n<p>安装好nodejs</p>\n<p>参考：<a href=\"https://site.huangge1199.cn/407.html\">deepin下安装nodejs</a></p>\n<h1>2、全局安装Vue</h1>\n<p>执行命令：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># 下面两个版本的二选一哦\nnpm install -g @vue&#x2F;cli\t\t&#x2F;&#x2F;vue3.0\nnpm install -g vue-cli\t\t&#x2F;&#x2F;vue2.0</code></pre>\n<p>我这边安装的是3.0版本的</p>\n<p><img src=\"inVueByOsDeepin/image-20220603114033774.png\" alt=\"image-20220603114033774\"></p>\n<h1>3、全局安装webpack</h1>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">npm install -g webpack</code></pre>\n<p><img src=\"inVueByOsDeepin/image-20220603114219499.png\" alt=\"image-20220603114219499\"></p>\n<h1>4、创建软链接</h1>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># 创建Vue软链接\nsudo ln -s &#x2F;home&#x2F;deepin&#x2F;app&#x2F;node&#x2F;bin&#x2F;vue &#x2F;usr&#x2F;local&#x2F;bin&#x2F;\n# 创建webpack软链接\nsudo ln -s &#x2F;home&#x2F;deepin&#x2F;app&#x2F;node&#x2F;bin&#x2F;webpack &#x2F;usr&#x2F;local&#x2F;bin&#x2F;\n# 查看软链接列表\nsudo ls -l &#x2F;usr&#x2F;local&#x2F;bin&#x2F;</code></pre>\n<p><img src=\"inVueByOsDeepin/image-20220603114513508.png\" alt=\"image-20220603114513508\"></p>\n<h1>5、查看Vue版本</h1>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">vue --version</code></pre>\n<p><img src=\"inVueByOsDeepin/image-20220603114616673.png\" alt=\"image-20220603114616673\"></p>\n"},{"title":"influxdb安装（centos7）","date":"2022-03-12T10:14:53.000Z","cover":"https://blog.huangge1199.cn/post/jpaCompositePK/bg.jpg","_content":"\n# 1、获取安装包\n\n```sh\nwget https://dl.influxdata.com/influxdb/releases/influxdb-1.8.10.x86_64.rpm\n```\n\n![](2022-03-12-18-28-41-image.png)\n\n# 2、安装\n\n```sh\nyum localinstall influxdb-1.8.10.x86_64.rpm\n```\n\n# 3、配置\n\n```shell\nvim /etc/influxdb/influxdb.conf\n```\n\n用户名密码（非必须）\n\n![](2022-03-12-18-41-44-image.png)\n\n开启influx功能\n\n![](2022-03-12-18-42-25-image.png)\n\n# 4、启动服务\n\n```shell\nsystemctl start influxdb\n```\n\n# 5、启动\n\n```shell\ninflux\n```\n\n在客户端工具窗口中执行以下语句设置用户名和密码（非必须）：\n\n```shell\n# 创建管理员权限的用户\nCREATE USER root WITH PASSWORD 'root' WITH ALL PRIVILEGES\n```\n\n# 6、验证\n\n用其他机器远程连接：\n\n```shell\ninflux -host ip地址 -port 端口号\n```\n\n![](2022-03-12-18-54-58-image.png)\n\n这里创建数据库时报错，是因为我这边配置了用户名和密码，需要连接时带上用户名和密码才行\n\n```shell\niinflux -host ip地址 -port 端口号 -username 用户名 -password 密码\n```\n\n![](2022-03-12-18-56-23-image.png)\n","source":"_posts/influxdbInstall.md","raw":"---\ntitle: influxdb安装（centos7）\ndate: 2022-03-12 18:14:53\ntags: [安装部署]\ncategories: [安装部署]\ncover: https://blog.huangge1199.cn/post/jpaCompositePK/bg.jpg\n---\n\n# 1、获取安装包\n\n```sh\nwget https://dl.influxdata.com/influxdb/releases/influxdb-1.8.10.x86_64.rpm\n```\n\n![](2022-03-12-18-28-41-image.png)\n\n# 2、安装\n\n```sh\nyum localinstall influxdb-1.8.10.x86_64.rpm\n```\n\n# 3、配置\n\n```shell\nvim /etc/influxdb/influxdb.conf\n```\n\n用户名密码（非必须）\n\n![](2022-03-12-18-41-44-image.png)\n\n开启influx功能\n\n![](2022-03-12-18-42-25-image.png)\n\n# 4、启动服务\n\n```shell\nsystemctl start influxdb\n```\n\n# 5、启动\n\n```shell\ninflux\n```\n\n在客户端工具窗口中执行以下语句设置用户名和密码（非必须）：\n\n```shell\n# 创建管理员权限的用户\nCREATE USER root WITH PASSWORD 'root' WITH ALL PRIVILEGES\n```\n\n# 6、验证\n\n用其他机器远程连接：\n\n```shell\ninflux -host ip地址 -port 端口号\n```\n\n![](2022-03-12-18-54-58-image.png)\n\n这里创建数据库时报错，是因为我这边配置了用户名和密码，需要连接时带上用户名和密码才行\n\n```shell\niinflux -host ip地址 -port 端口号 -username 用户名 -password 密码\n```\n\n![](2022-03-12-18-56-23-image.png)\n","slug":"influxdbInstall","published":1,"updated":"2022-06-03T06:00:55.569Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl42z5h79004h3gn6ayqa6qrt","content":"<h1>1、获取安装包</h1>\n<pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">wget https:&#x2F;&#x2F;dl.influxdata.com&#x2F;influxdb&#x2F;releases&#x2F;influxdb-1.8.10.x86_64.rpm</code></pre>\n<p><img src=\"2022-03-12-18-28-41-image.png\" alt=\"\"></p>\n<h1>2、安装</h1>\n<pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">yum localinstall influxdb-1.8.10.x86_64.rpm</code></pre>\n<h1>3、配置</h1>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">vim &#x2F;etc&#x2F;influxdb&#x2F;influxdb.conf</code></pre>\n<p>用户名密码（非必须）</p>\n<p><img src=\"2022-03-12-18-41-44-image.png\" alt=\"\"></p>\n<p>开启influx功能</p>\n<p><img src=\"2022-03-12-18-42-25-image.png\" alt=\"\"></p>\n<h1>4、启动服务</h1>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">systemctl start influxdb</code></pre>\n<h1>5、启动</h1>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">influx</code></pre>\n<p>在客户端工具窗口中执行以下语句设置用户名和密码（非必须）：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># 创建管理员权限的用户\nCREATE USER root WITH PASSWORD &#39;root&#39; WITH ALL PRIVILEGES</code></pre>\n<h1>6、验证</h1>\n<p>用其他机器远程连接：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">influx -host ip地址 -port 端口号</code></pre>\n<p><img src=\"2022-03-12-18-54-58-image.png\" alt=\"\"></p>\n<p>这里创建数据库时报错，是因为我这边配置了用户名和密码，需要连接时带上用户名和密码才行</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">iinflux -host ip地址 -port 端口号 -username 用户名 -password 密码</code></pre>\n<p><img src=\"2022-03-12-18-56-23-image.png\" alt=\"\"></p>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"excerpt":"","more":"<h1>1、获取安装包</h1>\n<pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">wget https:&#x2F;&#x2F;dl.influxdata.com&#x2F;influxdb&#x2F;releases&#x2F;influxdb-1.8.10.x86_64.rpm</code></pre>\n<p><img src=\"2022-03-12-18-28-41-image.png\" alt=\"\"></p>\n<h1>2、安装</h1>\n<pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">yum localinstall influxdb-1.8.10.x86_64.rpm</code></pre>\n<h1>3、配置</h1>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">vim &#x2F;etc&#x2F;influxdb&#x2F;influxdb.conf</code></pre>\n<p>用户名密码（非必须）</p>\n<p><img src=\"2022-03-12-18-41-44-image.png\" alt=\"\"></p>\n<p>开启influx功能</p>\n<p><img src=\"2022-03-12-18-42-25-image.png\" alt=\"\"></p>\n<h1>4、启动服务</h1>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">systemctl start influxdb</code></pre>\n<h1>5、启动</h1>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">influx</code></pre>\n<p>在客户端工具窗口中执行以下语句设置用户名和密码（非必须）：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># 创建管理员权限的用户\nCREATE USER root WITH PASSWORD &#39;root&#39; WITH ALL PRIVILEGES</code></pre>\n<h1>6、验证</h1>\n<p>用其他机器远程连接：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">influx -host ip地址 -port 端口号</code></pre>\n<p><img src=\"2022-03-12-18-54-58-image.png\" alt=\"\"></p>\n<p>这里创建数据库时报错，是因为我这边配置了用户名和密码，需要连接时带上用户名和密码才行</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">iinflux -host ip地址 -port 端口号 -username 用户名 -password 密码</code></pre>\n<p><img src=\"2022-03-12-18-56-23-image.png\" alt=\"\"></p>\n"},{"title":"JPA复合主键使用","date":"2022-01-05T07:14:53.000Z","cover":"https://blog.huangge1199.cn/post/jpaCompositePK/bg.jpg","_content":"\n# 1、建立带有复合主键的表User\n\n该表使用 `username`+`phone` 做为复合组件\n\n```sql\ncreate table user\n(\n    username varchar(50) not null,\n    phone     varchar(11) not null,\n    email     varchar(20) default '',\n    address   varchar(50) default '',\n    primary key (username, phone)\n) default charset = utf8\n```\n\n# 2、java中建立复合主键的实体类\n\n```java\nimport lombok.Data;\nimport javax.persistence.*;\nimport java.io.Serializable;\n\n@Data\n@Entity\npublic class UserKey implements Serializable {\n    private String username;\n    private String phone;\n}\n```\n\n# 3、建立表的实体类\n\n在实体类上面使用 @IdClass 注解指定复合主键。同时，需要在 name 和 phone 字段上面使用 @Id 注解标记为主键\n\n```java\nimport lombok.Data;\nimport javax.persistence.*;\n\n@Data\n@Entity\n@Table(name = \"user\")\n@IdClass(value = UserKey.class)\npublic class User {\n    @Id\n    @Column(nullable = false)\n    private String username;\n\n    @Id\n    @Column(nullable = false)\n    private String phone;\n\n    @Column\n    private String email;\n\n    @Column\n    private String address;\n}\n```\n","source":"_posts/jpaCompositePK.md","raw":"---\ntitle: JPA复合主键使用\ndate: 2022-01-05 15:14:53\ntags: [java,jpa]\ncategories: [java,jpa]\ncover: https://blog.huangge1199.cn/post/jpaCompositePK/bg.jpg\n---\n\n# 1、建立带有复合主键的表User\n\n该表使用 `username`+`phone` 做为复合组件\n\n```sql\ncreate table user\n(\n    username varchar(50) not null,\n    phone     varchar(11) not null,\n    email     varchar(20) default '',\n    address   varchar(50) default '',\n    primary key (username, phone)\n) default charset = utf8\n```\n\n# 2、java中建立复合主键的实体类\n\n```java\nimport lombok.Data;\nimport javax.persistence.*;\nimport java.io.Serializable;\n\n@Data\n@Entity\npublic class UserKey implements Serializable {\n    private String username;\n    private String phone;\n}\n```\n\n# 3、建立表的实体类\n\n在实体类上面使用 @IdClass 注解指定复合主键。同时，需要在 name 和 phone 字段上面使用 @Id 注解标记为主键\n\n```java\nimport lombok.Data;\nimport javax.persistence.*;\n\n@Data\n@Entity\n@Table(name = \"user\")\n@IdClass(value = UserKey.class)\npublic class User {\n    @Id\n    @Column(nullable = false)\n    private String username;\n\n    @Id\n    @Column(nullable = false)\n    private String phone;\n\n    @Column\n    private String email;\n\n    @Column\n    private String address;\n}\n```\n","slug":"jpaCompositePK","published":1,"updated":"2022-06-03T06:00:55.573Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl42z5h7a004k3gn61i9814gm","content":"<h1>1、建立带有复合主键的表User</h1>\n<p>该表使用 <code>username</code>+<code>phone</code> 做为复合组件</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">create table user\n(\n    username varchar(50) not null,\n    phone     varchar(11) not null,\n    email     varchar(20) default &#39;&#39;,\n    address   varchar(50) default &#39;&#39;,\n    primary key (username, phone)\n) default charset &#x3D; utf8</code></pre>\n<h1>2、java中建立复合主键的实体类</h1>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">import lombok.Data;\nimport javax.persistence.*;\nimport java.io.Serializable;\n\n@Data\n@Entity\npublic class UserKey implements Serializable &#123;\n    private String username;\n    private String phone;\n&#125;</code></pre>\n<h1>3、建立表的实体类</h1>\n<p>在实体类上面使用 @IdClass 注解指定复合主键。同时，需要在 name 和 phone 字段上面使用 @Id 注解标记为主键</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">import lombok.Data;\nimport javax.persistence.*;\n\n@Data\n@Entity\n@Table(name &#x3D; &quot;user&quot;)\n@IdClass(value &#x3D; UserKey.class)\npublic class User &#123;\n    @Id\n    @Column(nullable &#x3D; false)\n    private String username;\n\n    @Id\n    @Column(nullable &#x3D; false)\n    private String phone;\n\n    @Column\n    private String email;\n\n    @Column\n    private String address;\n&#125;</code></pre>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"excerpt":"","more":"<h1>1、建立带有复合主键的表User</h1>\n<p>该表使用 <code>username</code>+<code>phone</code> 做为复合组件</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">create table user\n(\n    username varchar(50) not null,\n    phone     varchar(11) not null,\n    email     varchar(20) default &#39;&#39;,\n    address   varchar(50) default &#39;&#39;,\n    primary key (username, phone)\n) default charset &#x3D; utf8</code></pre>\n<h1>2、java中建立复合主键的实体类</h1>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">import lombok.Data;\nimport javax.persistence.*;\nimport java.io.Serializable;\n\n@Data\n@Entity\npublic class UserKey implements Serializable &#123;\n    private String username;\n    private String phone;\n&#125;</code></pre>\n<h1>3、建立表的实体类</h1>\n<p>在实体类上面使用 @IdClass 注解指定复合主键。同时，需要在 name 和 phone 字段上面使用 @Id 注解标记为主键</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">import lombok.Data;\nimport javax.persistence.*;\n\n@Data\n@Entity\n@Table(name &#x3D; &quot;user&quot;)\n@IdClass(value &#x3D; UserKey.class)\npublic class User &#123;\n    @Id\n    @Column(nullable &#x3D; false)\n    private String username;\n\n    @Id\n    @Column(nullable &#x3D; false)\n    private String phone;\n\n    @Column\n    private String email;\n\n    @Column\n    private String address;\n&#125;</code></pre>\n"},{"title":"力扣2264. 字符串中最大的 3 位相同数字","date":"2022-05-09T07:24:16.000Z","_content":"\n力扣周赛292--第一题\n\n[2264. 字符串中最大的 3 位相同数字](https://leetcode.cn/problems/largest-3-same-digit-number-in-string/)\n\n# 题目\n\n<p>给你一个字符串 <code>num</code> ，表示一个大整数。如果一个整数满足下述所有条件，则认为该整数是一个 <strong>优质整数</strong> ：</p>\n\n<ul>  \n   <li>该整数是 <code>num</code> 的一个长度为 <code>3</code> 的 <strong>子字符串</strong> 。</li>  \n   <li>该整数由唯一一个数字重复 <code>3</code> 次组成。</li>  \n</ul>\n\n<p>以字符串形式返回 <strong>最大的优质整数</strong> 。如果不存在满足要求的整数，则返回一个空字符串 <code>\"\"</code> 。</p>\n\n<p><strong>注意：</strong></p>\n\n<ul>  \n   <li><strong>子字符串</strong> 是字符串中的一个连续字符序列。</li>  \n   <li><code>num</code> 或优质整数中可能存在 <strong>前导零</strong> 。</li>  \n</ul>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>  \n<strong>输入：</strong>num = \"6<em><strong>777</strong></em>133339\"  \n<strong>输出：</strong>\"777\"  \n<strong>解释：</strong>num 中存在两个优质整数：\"777\" 和 \"333\" 。  \n\"777\" 是最大的那个，所以返回 \"777\" 。  \n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>  \n<strong>输入：</strong>num = \"23<em><strong>000</strong></em>19\"  \n<strong>输出：</strong>\"000\"  \n<strong>解释：</strong>\"000\" 是唯一一个优质整数。  \n</pre>\n\n<p><strong>示例 3：</strong></p>\n\n<pre>  \n<strong>输入：</strong>num = \"42352338\"  \n<strong>输出：</strong>\"\"  \n<strong>解释：</strong>不存在长度为 3 且仅由一个唯一数字组成的整数。因此，不存在优质整数。  \n</pre>\n\n<p> </p>\n\n<p><strong>提示：</strong></p>\n\n<ul>  \n   <li><code>3 <= num.length <= 1000</code></li>  \n   <li><code>num</code> 仅由数字（<code>0</code> - <code>9</code>）组成</li>  \n</ul>\n\n# 思路\n\n这题是要找最大的3个相同数并且3个数是相连的，因为数字的话只有0~9这10个数字，找最大的，那我就从999开始，然后依次888、777。。。000，只要字符串中存在，那就是它了。\n\n# 代码\n\njava：\n\n```java\npublic String largestGoodInteger(String num) {\n    String str;\n    for (int i = 9; i >= 0; i--) {\n        str = \"\" + i + i + i;\n        if (num.contains(str)) {\n            return str;\n        }\n    }\n    return \"\";\n}\n```\n","source":"_posts/largest-3-same-digit-number-in-string.md","raw":"---\ntitle: 力扣2264. 字符串中最大的 3 位相同数字\ndate: 2022-05-09 15:24:16\ntags: [力扣]\ncategories: [算法,力扣]\n---\n\n力扣周赛292--第一题\n\n[2264. 字符串中最大的 3 位相同数字](https://leetcode.cn/problems/largest-3-same-digit-number-in-string/)\n\n# 题目\n\n<p>给你一个字符串 <code>num</code> ，表示一个大整数。如果一个整数满足下述所有条件，则认为该整数是一个 <strong>优质整数</strong> ：</p>\n\n<ul>  \n   <li>该整数是 <code>num</code> 的一个长度为 <code>3</code> 的 <strong>子字符串</strong> 。</li>  \n   <li>该整数由唯一一个数字重复 <code>3</code> 次组成。</li>  \n</ul>\n\n<p>以字符串形式返回 <strong>最大的优质整数</strong> 。如果不存在满足要求的整数，则返回一个空字符串 <code>\"\"</code> 。</p>\n\n<p><strong>注意：</strong></p>\n\n<ul>  \n   <li><strong>子字符串</strong> 是字符串中的一个连续字符序列。</li>  \n   <li><code>num</code> 或优质整数中可能存在 <strong>前导零</strong> 。</li>  \n</ul>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>  \n<strong>输入：</strong>num = \"6<em><strong>777</strong></em>133339\"  \n<strong>输出：</strong>\"777\"  \n<strong>解释：</strong>num 中存在两个优质整数：\"777\" 和 \"333\" 。  \n\"777\" 是最大的那个，所以返回 \"777\" 。  \n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>  \n<strong>输入：</strong>num = \"23<em><strong>000</strong></em>19\"  \n<strong>输出：</strong>\"000\"  \n<strong>解释：</strong>\"000\" 是唯一一个优质整数。  \n</pre>\n\n<p><strong>示例 3：</strong></p>\n\n<pre>  \n<strong>输入：</strong>num = \"42352338\"  \n<strong>输出：</strong>\"\"  \n<strong>解释：</strong>不存在长度为 3 且仅由一个唯一数字组成的整数。因此，不存在优质整数。  \n</pre>\n\n<p> </p>\n\n<p><strong>提示：</strong></p>\n\n<ul>  \n   <li><code>3 <= num.length <= 1000</code></li>  \n   <li><code>num</code> 仅由数字（<code>0</code> - <code>9</code>）组成</li>  \n</ul>\n\n# 思路\n\n这题是要找最大的3个相同数并且3个数是相连的，因为数字的话只有0~9这10个数字，找最大的，那我就从999开始，然后依次888、777。。。000，只要字符串中存在，那就是它了。\n\n# 代码\n\njava：\n\n```java\npublic String largestGoodInteger(String num) {\n    String str;\n    for (int i = 9; i >= 0; i--) {\n        str = \"\" + i + i + i;\n        if (num.contains(str)) {\n            return str;\n        }\n    }\n    return \"\";\n}\n```\n","slug":"largest-3-same-digit-number-in-string","published":1,"updated":"2022-06-03T06:00:55.573Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl42z5h7b004n3gn61q7dhv11","content":"<p>力扣周赛292–第一题</p>\n<p><a href=\"https://leetcode.cn/problems/largest-3-same-digit-number-in-string/\">2264. 字符串中最大的 3 位相同数字</a></p>\n<h1>题目</h1>\n<p>给你一个字符串 <code>num</code> ，表示一个大整数。如果一个整数满足下述所有条件，则认为该整数是一个 <strong>优质整数</strong> ：</p>\n<ul>  \n   <li>该整数是 <code>num</code> 的一个长度为 <code>3</code> 的 <strong>子字符串</strong> 。</li>  \n   <li>该整数由唯一一个数字重复 <code>3</code> 次组成。</li>  \n</ul>\n<p>以字符串形式返回 <strong>最大的优质整数</strong> 。如果不存在满足要求的整数，则返回一个空字符串 <code>\"\"</code> 。</p>\n<p><strong>注意：</strong></p>\n<ul>  \n   <li><strong>子字符串</strong> 是字符串中的一个连续字符序列。</li>  \n   <li><code>num</code> 或优质整数中可能存在 <strong>前导零</strong> 。</li>  \n</ul>\n<p><strong>示例 1：</strong></p>\n<pre>  \n<strong>输入：</strong>num = \"6<em><strong>777</strong></em>133339\"  \n<strong>输出：</strong>\"777\"  \n<strong>解释：</strong>num 中存在两个优质整数：\"777\" 和 \"333\" 。  \n\"777\" 是最大的那个，所以返回 \"777\" 。  \n</pre>\n<p><strong>示例 2：</strong></p>\n<pre>  \n<strong>输入：</strong>num = \"23<em><strong>000</strong></em>19\"  \n<strong>输出：</strong>\"000\"  \n<strong>解释：</strong>\"000\" 是唯一一个优质整数。  \n</pre>\n<p><strong>示例 3：</strong></p>\n<pre>  \n<strong>输入：</strong>num = \"42352338\"  \n<strong>输出：</strong>\"\"  \n<strong>解释：</strong>不存在长度为 3 且仅由一个唯一数字组成的整数。因此，不存在优质整数。  \n</pre>\n<p> </p>\n<p><strong>提示：</strong></p>\n<ul>  \n   <li><code>3 <= num.length <= 1000</code></li>  \n   <li><code>num</code> 仅由数字（<code>0</code> - <code>9</code>）组成</li>  \n</ul>\n<h1>思路</h1>\n<p>这题是要找最大的3个相同数并且3个数是相连的，因为数字的话只有0~9这10个数字，找最大的，那我就从999开始，然后依次888、777。。。000，只要字符串中存在，那就是它了。</p>\n<h1>代码</h1>\n<p>java：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">public String largestGoodInteger(String num) &#123;\n    String str;\n    for (int i &#x3D; 9; i &gt;&#x3D; 0; i--) &#123;\n        str &#x3D; &quot;&quot; + i + i + i;\n        if (num.contains(str)) &#123;\n            return str;\n        &#125;\n    &#125;\n    return &quot;&quot;;\n&#125;</code></pre>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"cover":"https://blog.huangge1199.cn/post/day20220120/bg.jpeg","excerpt":"","more":"<p>力扣周赛292–第一题</p>\n<p><a href=\"https://leetcode.cn/problems/largest-3-same-digit-number-in-string/\">2264. 字符串中最大的 3 位相同数字</a></p>\n<h1>题目</h1>\n<p>给你一个字符串 <code>num</code> ，表示一个大整数。如果一个整数满足下述所有条件，则认为该整数是一个 <strong>优质整数</strong> ：</p>\n<ul>  \n   <li>该整数是 <code>num</code> 的一个长度为 <code>3</code> 的 <strong>子字符串</strong> 。</li>  \n   <li>该整数由唯一一个数字重复 <code>3</code> 次组成。</li>  \n</ul>\n<p>以字符串形式返回 <strong>最大的优质整数</strong> 。如果不存在满足要求的整数，则返回一个空字符串 <code>\"\"</code> 。</p>\n<p><strong>注意：</strong></p>\n<ul>  \n   <li><strong>子字符串</strong> 是字符串中的一个连续字符序列。</li>  \n   <li><code>num</code> 或优质整数中可能存在 <strong>前导零</strong> 。</li>  \n</ul>\n<p><strong>示例 1：</strong></p>\n<pre>  \n<strong>输入：</strong>num = \"6<em><strong>777</strong></em>133339\"  \n<strong>输出：</strong>\"777\"  \n<strong>解释：</strong>num 中存在两个优质整数：\"777\" 和 \"333\" 。  \n\"777\" 是最大的那个，所以返回 \"777\" 。  \n</pre>\n<p><strong>示例 2：</strong></p>\n<pre>  \n<strong>输入：</strong>num = \"23<em><strong>000</strong></em>19\"  \n<strong>输出：</strong>\"000\"  \n<strong>解释：</strong>\"000\" 是唯一一个优质整数。  \n</pre>\n<p><strong>示例 3：</strong></p>\n<pre>  \n<strong>输入：</strong>num = \"42352338\"  \n<strong>输出：</strong>\"\"  \n<strong>解释：</strong>不存在长度为 3 且仅由一个唯一数字组成的整数。因此，不存在优质整数。  \n</pre>\n<p> </p>\n<p><strong>提示：</strong></p>\n<ul>  \n   <li><code>3 <= num.length <= 1000</code></li>  \n   <li><code>num</code> 仅由数字（<code>0</code> - <code>9</code>）组成</li>  \n</ul>\n<h1>思路</h1>\n<p>这题是要找最大的3个相同数并且3个数是相连的，因为数字的话只有0~9这10个数字，找最大的，那我就从999开始，然后依次888、777。。。000，只要字符串中存在，那就是它了。</p>\n<h1>代码</h1>\n<p>java：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">public String largestGoodInteger(String num) &#123;\n    String str;\n    for (int i &#x3D; 9; i &gt;&#x3D; 0; i--) &#123;\n        str &#x3D; &quot;&quot; + i + i + i;\n        if (num.contains(str)) &#123;\n            return str;\n        &#125;\n    &#125;\n    return &quot;&quot;;\n&#125;</code></pre>\n"},{"title":"力扣2275. 按位与结果大于零的最长组合","date":"2022-05-19T05:41:13.000Z","_content":"\n力扣周赛293--第三题\n\n[2275. 按位与结果大于零的最长组合](https://leetcode.cn/problems/largest-combination-with-bitwise-and-greater-than-zero/)\n\n# 题目\n\n<p>对数组&nbsp;<code>nums</code> 执行 <strong>按位与</strong> 相当于对数组&nbsp;<code>nums</code> 中的所有整数执行 <strong>按位与</strong> 。</p>\n\n<ul>\n\t<li>例如，对 <code>nums = [1, 5, 3]</code> 来说，按位与等于 <code>1 &amp; 5 &amp; 3 = 1</code> 。</li>\n\t<li>同样，对 <code>nums = [7]</code> 而言，按位与等于 <code>7</code> 。</li>\n</ul>\n\n<p>给你一个正整数数组 <code>candidates</code> 。计算 <code>candidates</code> 中的数字每种组合下 <strong>按位与</strong> 的结果。 <code>candidates</code> 中的每个数字在每种组合中只能使用 <strong>一次</strong> 。</p>\n\n<p>返回按位与结果大于 <code>0</code> 的 <strong>最长</strong> 组合的长度<em>。</em></p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入：</strong>candidates = [16,17,71,62,12,24,14]\n<strong>输出：</strong>4\n<strong>解释：</strong>组合 [16,17,62,24] 的按位与结果是 16 &amp; 17 &amp; 62 &amp; 24 = 16 &gt; 0 。\n组合长度是 4 。\n可以证明不存在按位与结果大于 0 且长度大于 4 的组合。\n注意，符合长度最大的组合可能不止一种。\n例如，组合 [62,12,24,14] 的按位与结果是 62 &amp; 12 &amp; 24 &amp; 14 = 8 &gt; 0 。\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>\n<strong>输入：</strong>candidates = [8,8]\n<strong>输出：</strong>2\n<strong>解释：</strong>最长组合是 [8,8] ，按位与结果 8 &amp; 8 = 8 &gt; 0 。\n组合长度是 2 ，所以返回 2 。\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= candidates.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= candidates[i] &lt;= 10<sup>7</sup></code></li>\n</ul>\n<div><div>Related Topics</div><div><li>位运算</li><li>数组</li><li>哈希表</li><li>计数</li></div></div>\n\n# 思路\n\n这题需要找出按位与结果大于0的最长组合的长度，按位与结果大于0，\n说明这个数组中的每一个二进制数都有相同的一位是1，根据这题给的数组值的范围，\n可以确定最多有24位，那么我们可以循环24次数组，每一次循环统计出第`i`位位数为1的个数，\n然后将每一次的个数做比较，得出最长组合的长度\n\n# 代码\n\njava：\n```java\nclass Solution {\n    public int largestCombination(int[] candidates) {\n        int max = 0;\n        for (int i = 0; i < 25; i++) {\n            int cnt = 0;\n            for (int j = 0; j < candidates.length; j++) {\n                if ((candidates[j] & (1 << i)) > 0) {\n                    cnt++;\n                }\n            }\n            max = Math.max(max, cnt);\n        }\n        return max;\n    }\n}\n```\n","source":"_posts/largest-combination-with-bitwise-and-greater-than-zero.md","raw":"---\ntitle: 力扣2275. 按位与结果大于零的最长组合\ndate: 2022-05-19 13:41:13\ntags: [力扣]\ncategories: [算法,力扣]\n---\n\n力扣周赛293--第三题\n\n[2275. 按位与结果大于零的最长组合](https://leetcode.cn/problems/largest-combination-with-bitwise-and-greater-than-zero/)\n\n# 题目\n\n<p>对数组&nbsp;<code>nums</code> 执行 <strong>按位与</strong> 相当于对数组&nbsp;<code>nums</code> 中的所有整数执行 <strong>按位与</strong> 。</p>\n\n<ul>\n\t<li>例如，对 <code>nums = [1, 5, 3]</code> 来说，按位与等于 <code>1 &amp; 5 &amp; 3 = 1</code> 。</li>\n\t<li>同样，对 <code>nums = [7]</code> 而言，按位与等于 <code>7</code> 。</li>\n</ul>\n\n<p>给你一个正整数数组 <code>candidates</code> 。计算 <code>candidates</code> 中的数字每种组合下 <strong>按位与</strong> 的结果。 <code>candidates</code> 中的每个数字在每种组合中只能使用 <strong>一次</strong> 。</p>\n\n<p>返回按位与结果大于 <code>0</code> 的 <strong>最长</strong> 组合的长度<em>。</em></p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入：</strong>candidates = [16,17,71,62,12,24,14]\n<strong>输出：</strong>4\n<strong>解释：</strong>组合 [16,17,62,24] 的按位与结果是 16 &amp; 17 &amp; 62 &amp; 24 = 16 &gt; 0 。\n组合长度是 4 。\n可以证明不存在按位与结果大于 0 且长度大于 4 的组合。\n注意，符合长度最大的组合可能不止一种。\n例如，组合 [62,12,24,14] 的按位与结果是 62 &amp; 12 &amp; 24 &amp; 14 = 8 &gt; 0 。\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>\n<strong>输入：</strong>candidates = [8,8]\n<strong>输出：</strong>2\n<strong>解释：</strong>最长组合是 [8,8] ，按位与结果 8 &amp; 8 = 8 &gt; 0 。\n组合长度是 2 ，所以返回 2 。\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= candidates.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= candidates[i] &lt;= 10<sup>7</sup></code></li>\n</ul>\n<div><div>Related Topics</div><div><li>位运算</li><li>数组</li><li>哈希表</li><li>计数</li></div></div>\n\n# 思路\n\n这题需要找出按位与结果大于0的最长组合的长度，按位与结果大于0，\n说明这个数组中的每一个二进制数都有相同的一位是1，根据这题给的数组值的范围，\n可以确定最多有24位，那么我们可以循环24次数组，每一次循环统计出第`i`位位数为1的个数，\n然后将每一次的个数做比较，得出最长组合的长度\n\n# 代码\n\njava：\n```java\nclass Solution {\n    public int largestCombination(int[] candidates) {\n        int max = 0;\n        for (int i = 0; i < 25; i++) {\n            int cnt = 0;\n            for (int j = 0; j < candidates.length; j++) {\n                if ((candidates[j] & (1 << i)) > 0) {\n                    cnt++;\n                }\n            }\n            max = Math.max(max, cnt);\n        }\n        return max;\n    }\n}\n```\n","slug":"largest-combination-with-bitwise-and-greater-than-zero","published":1,"updated":"2022-06-03T06:00:55.573Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl42z5h7c004q3gn6aq3b1rqh","content":"<p>力扣周赛293–第三题</p>\n<p><a href=\"https://leetcode.cn/problems/largest-combination-with-bitwise-and-greater-than-zero/\">2275. 按位与结果大于零的最长组合</a></p>\n<h1>题目</h1>\n<p>对数组&nbsp;<code>nums</code> 执行 <strong>按位与</strong> 相当于对数组&nbsp;<code>nums</code> 中的所有整数执行 <strong>按位与</strong> 。</p>\n<ul>\n\t<li>例如，对 <code>nums = [1, 5, 3]</code> 来说，按位与等于 <code>1 &amp; 5 &amp; 3 = 1</code> 。</li>\n\t<li>同样，对 <code>nums = [7]</code> 而言，按位与等于 <code>7</code> 。</li>\n</ul>\n<p>给你一个正整数数组 <code>candidates</code> 。计算 <code>candidates</code> 中的数字每种组合下 <strong>按位与</strong> 的结果。 <code>candidates</code> 中的每个数字在每种组合中只能使用 <strong>一次</strong> 。</p>\n<p>返回按位与结果大于 <code>0</code> 的 <strong>最长</strong> 组合的长度<em>。</em></p>\n<p>&nbsp;</p>\n<p><strong>示例 1：</strong></p>\n<pre>\n<strong>输入：</strong>candidates = [16,17,71,62,12,24,14]\n<strong>输出：</strong>4\n<strong>解释：</strong>组合 [16,17,62,24] 的按位与结果是 16 &amp; 17 &amp; 62 &amp; 24 = 16 &gt; 0 。\n组合长度是 4 。\n可以证明不存在按位与结果大于 0 且长度大于 4 的组合。\n注意，符合长度最大的组合可能不止一种。\n例如，组合 [62,12,24,14] 的按位与结果是 62 &amp; 12 &amp; 24 &amp; 14 = 8 &gt; 0 。\n</pre>\n<p><strong>示例 2：</strong></p>\n<pre>\n<strong>输入：</strong>candidates = [8,8]\n<strong>输出：</strong>2\n<strong>解释：</strong>最长组合是 [8,8] ，按位与结果 8 &amp; 8 = 8 &gt; 0 。\n组合长度是 2 ，所以返回 2 。\n</pre>\n<p>&nbsp;</p>\n<p><strong>提示：</strong></p>\n<ul>\n\t<li><code>1 &lt;= candidates.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= candidates[i] &lt;= 10<sup>7</sup></code></li>\n</ul>\n<div><div>Related Topics</div><div><li>位运算</li><li>数组</li><li>哈希表</li><li>计数</li></div></div>\n<h1>思路</h1>\n<p>这题需要找出按位与结果大于0的最长组合的长度，按位与结果大于0，<br>\n说明这个数组中的每一个二进制数都有相同的一位是1，根据这题给的数组值的范围，<br>\n可以确定最多有24位，那么我们可以循环24次数组，每一次循环统计出第<code>i</code>位位数为1的个数，<br>\n然后将每一次的个数做比较，得出最长组合的长度</p>\n<h1>代码</h1>\n<p>java：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">class Solution &#123;\n    public int largestCombination(int[] candidates) &#123;\n        int max &#x3D; 0;\n        for (int i &#x3D; 0; i &lt; 25; i++) &#123;\n            int cnt &#x3D; 0;\n            for (int j &#x3D; 0; j &lt; candidates.length; j++) &#123;\n                if ((candidates[j] &amp; (1 &lt;&lt; i)) &gt; 0) &#123;\n                    cnt++;\n                &#125;\n            &#125;\n            max &#x3D; Math.max(max, cnt);\n        &#125;\n        return max;\n    &#125;\n&#125;</code></pre>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"cover":"https://blog.huangge1199.cn/post/day20220119/bg.jpeg","excerpt":"","more":"<p>力扣周赛293–第三题</p>\n<p><a href=\"https://leetcode.cn/problems/largest-combination-with-bitwise-and-greater-than-zero/\">2275. 按位与结果大于零的最长组合</a></p>\n<h1>题目</h1>\n<p>对数组&nbsp;<code>nums</code> 执行 <strong>按位与</strong> 相当于对数组&nbsp;<code>nums</code> 中的所有整数执行 <strong>按位与</strong> 。</p>\n<ul>\n\t<li>例如，对 <code>nums = [1, 5, 3]</code> 来说，按位与等于 <code>1 &amp; 5 &amp; 3 = 1</code> 。</li>\n\t<li>同样，对 <code>nums = [7]</code> 而言，按位与等于 <code>7</code> 。</li>\n</ul>\n<p>给你一个正整数数组 <code>candidates</code> 。计算 <code>candidates</code> 中的数字每种组合下 <strong>按位与</strong> 的结果。 <code>candidates</code> 中的每个数字在每种组合中只能使用 <strong>一次</strong> 。</p>\n<p>返回按位与结果大于 <code>0</code> 的 <strong>最长</strong> 组合的长度<em>。</em></p>\n<p>&nbsp;</p>\n<p><strong>示例 1：</strong></p>\n<pre>\n<strong>输入：</strong>candidates = [16,17,71,62,12,24,14]\n<strong>输出：</strong>4\n<strong>解释：</strong>组合 [16,17,62,24] 的按位与结果是 16 &amp; 17 &amp; 62 &amp; 24 = 16 &gt; 0 。\n组合长度是 4 。\n可以证明不存在按位与结果大于 0 且长度大于 4 的组合。\n注意，符合长度最大的组合可能不止一种。\n例如，组合 [62,12,24,14] 的按位与结果是 62 &amp; 12 &amp; 24 &amp; 14 = 8 &gt; 0 。\n</pre>\n<p><strong>示例 2：</strong></p>\n<pre>\n<strong>输入：</strong>candidates = [8,8]\n<strong>输出：</strong>2\n<strong>解释：</strong>最长组合是 [8,8] ，按位与结果 8 &amp; 8 = 8 &gt; 0 。\n组合长度是 2 ，所以返回 2 。\n</pre>\n<p>&nbsp;</p>\n<p><strong>提示：</strong></p>\n<ul>\n\t<li><code>1 &lt;= candidates.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= candidates[i] &lt;= 10<sup>7</sup></code></li>\n</ul>\n<div><div>Related Topics</div><div><li>位运算</li><li>数组</li><li>哈希表</li><li>计数</li></div></div>\n<h1>思路</h1>\n<p>这题需要找出按位与结果大于0的最长组合的长度，按位与结果大于0，<br>\n说明这个数组中的每一个二进制数都有相同的一位是1，根据这题给的数组值的范围，<br>\n可以确定最多有24位，那么我们可以循环24次数组，每一次循环统计出第<code>i</code>位位数为1的个数，<br>\n然后将每一次的个数做比较，得出最长组合的长度</p>\n<h1>代码</h1>\n<p>java：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">class Solution &#123;\n    public int largestCombination(int[] candidates) &#123;\n        int max &#x3D; 0;\n        for (int i &#x3D; 0; i &lt; 25; i++) &#123;\n            int cnt &#x3D; 0;\n            for (int j &#x3D; 0; j &lt; candidates.length; j++) &#123;\n                if ((candidates[j] &amp; (1 &lt;&lt; i)) &gt; 0) &#123;\n                    cnt++;\n                &#125;\n            &#125;\n            max &#x3D; Math.max(max, cnt);\n        &#125;\n        return max;\n    &#125;\n&#125;</code></pre>\n"},{"title":"力扣204:计数质数","date":"2022-04-12T03:04:35.000Z","mathjax":true,"_content":"\n今天遇到一个有趣的题目，求小于给定非负整数的质数的数量\n\n原题链接：[力扣204. 计数质数](https://leetcode-cn.com/problems/count-primes/)\n\n# 题目\n\n<p>给定整数 <code>n</code> ，返回 <em>所有小于非负整数 <code>n</code> 的质数的数量</em> 。</p>\n\n<p> </p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入：</strong>n = 10\n<strong>输出：</strong>4\n<strong>解释：</strong>小于 10 的质数一共有 4 个, 它们是 2, 3, 5, 7 。\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>\n<strong>输入：</strong>n = 0\n<strong>输出：</strong>0\n</pre>\n\n<p><strong>示例 3：</strong></p>\n\n<pre>\n<strong>输入：</strong>n = 1\n<strong>输出</strong>：0\n</pre>\n\n<p> </p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n    <li><code>0 <= n <= 5 * 10<sup>6</sup></code></li>\n</ul>\n<div><div>Related Topics</div><div><li>数组</li><li>数学</li><li>枚举</li><li>数论</li></div></div>\n\n# 个人解法\n\n思路：\n\n这题我最开始想的比较简单，直接从0开始遍历到给定数字，遍历过程中判断是否是质数\n\njava代码如下：\n\n```java\nclass Solution {\n    public int countPrimes(int n) {\n        if (n <= 2) {\n            return 0;\n        }\n        int count = 1;\n        for (int i = 3; i < n; i++) {\n            if (isPrime(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    /**\n     * 判断是否是质数\n     *\n     * @param num 数字\n     * @return true：质数、false：不是质数\n     */\n    private boolean isPrime(int num) {\n        if (num < 2) {\n            return false;\n        }\n        if (num == 2) {\n            return true;\n        }\n        for (int i = 2; i * i <= num; i++) {\n            if (num % i == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\n```\n\n这种办法虽然例子过了，但是最后提交时却是超时了\n\n接下来，我又仔细的想了想，之后想到了一种办法，通过了，然后看了看题解，发现这完全就是埃拉托斯特\n尼筛法，简称埃氏筛，也称素数筛，是一种简单且历史悠久的筛法，用来找出一定范围内所有的素数。\n\n这种算法就是给出要筛数值的范围n，从2开始遍历直到  $\\sqrt{2}$ 。从2开始把小于n并且是其倍数的标记上，\n然后，按顺序是3，和2一样的步骤，不过要判断下是否被标记过，因为，被标记的不是质数\n\n我在维基百科上看到了这个小动画，就是这个算法的整体步骤了\n\n<iframe frameborder=0 border=0 height=369 width=445 src=\"Sieve_of_Eratosthenes_animation.gif\"></iframe>\n\n下面是我的java代码：\n\n```java\nclass Solution {\n    public int countPrimes(int n) {\n        if (n <= 2) {\n            return 0;\n        }\n        boolean[] nums = new boolean[n + 1];\n        Arrays.fill(nums, true);\n        nums[0] = false;\n        nums[1] = false;\n        int count = 0;\n        int max = (int) Math.sqrt(n);\n        for (int i = 2; i < n; i++) {\n            if (nums[i]) {\n                count++;\n                if (i > max) {\n                    continue;\n                }\n                for (int j = i; j * i < n; j++) {\n                    nums[j * i] = false;\n                }\n            }\n        }\n        return count;\n    }\n}\n```\n","source":"_posts/leetcode204.md","raw":"---\ntitle: 力扣204:计数质数\ndate: 2022-04-12 11:04:35\ntags: [力扣]\ncategories: [算法,力扣]\nmathjax: true\n---\n\n今天遇到一个有趣的题目，求小于给定非负整数的质数的数量\n\n原题链接：[力扣204. 计数质数](https://leetcode-cn.com/problems/count-primes/)\n\n# 题目\n\n<p>给定整数 <code>n</code> ，返回 <em>所有小于非负整数 <code>n</code> 的质数的数量</em> 。</p>\n\n<p> </p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入：</strong>n = 10\n<strong>输出：</strong>4\n<strong>解释：</strong>小于 10 的质数一共有 4 个, 它们是 2, 3, 5, 7 。\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>\n<strong>输入：</strong>n = 0\n<strong>输出：</strong>0\n</pre>\n\n<p><strong>示例 3：</strong></p>\n\n<pre>\n<strong>输入：</strong>n = 1\n<strong>输出</strong>：0\n</pre>\n\n<p> </p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n    <li><code>0 <= n <= 5 * 10<sup>6</sup></code></li>\n</ul>\n<div><div>Related Topics</div><div><li>数组</li><li>数学</li><li>枚举</li><li>数论</li></div></div>\n\n# 个人解法\n\n思路：\n\n这题我最开始想的比较简单，直接从0开始遍历到给定数字，遍历过程中判断是否是质数\n\njava代码如下：\n\n```java\nclass Solution {\n    public int countPrimes(int n) {\n        if (n <= 2) {\n            return 0;\n        }\n        int count = 1;\n        for (int i = 3; i < n; i++) {\n            if (isPrime(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    /**\n     * 判断是否是质数\n     *\n     * @param num 数字\n     * @return true：质数、false：不是质数\n     */\n    private boolean isPrime(int num) {\n        if (num < 2) {\n            return false;\n        }\n        if (num == 2) {\n            return true;\n        }\n        for (int i = 2; i * i <= num; i++) {\n            if (num % i == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\n```\n\n这种办法虽然例子过了，但是最后提交时却是超时了\n\n接下来，我又仔细的想了想，之后想到了一种办法，通过了，然后看了看题解，发现这完全就是埃拉托斯特\n尼筛法，简称埃氏筛，也称素数筛，是一种简单且历史悠久的筛法，用来找出一定范围内所有的素数。\n\n这种算法就是给出要筛数值的范围n，从2开始遍历直到  $\\sqrt{2}$ 。从2开始把小于n并且是其倍数的标记上，\n然后，按顺序是3，和2一样的步骤，不过要判断下是否被标记过，因为，被标记的不是质数\n\n我在维基百科上看到了这个小动画，就是这个算法的整体步骤了\n\n<iframe frameborder=0 border=0 height=369 width=445 src=\"Sieve_of_Eratosthenes_animation.gif\"></iframe>\n\n下面是我的java代码：\n\n```java\nclass Solution {\n    public int countPrimes(int n) {\n        if (n <= 2) {\n            return 0;\n        }\n        boolean[] nums = new boolean[n + 1];\n        Arrays.fill(nums, true);\n        nums[0] = false;\n        nums[1] = false;\n        int count = 0;\n        int max = (int) Math.sqrt(n);\n        for (int i = 2; i < n; i++) {\n            if (nums[i]) {\n                count++;\n                if (i > max) {\n                    continue;\n                }\n                for (int j = i; j * i < n; j++) {\n                    nums[j * i] = false;\n                }\n            }\n        }\n        return count;\n    }\n}\n```\n","slug":"leetcode204","published":1,"updated":"2022-06-03T06:00:55.573Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl42z5h7d004t3gn6a5o86v6c","content":"<p>今天遇到一个有趣的题目，求小于给定非负整数的质数的数量</p>\n<p>原题链接：<a href=\"https://leetcode-cn.com/problems/count-primes/\">力扣204. 计数质数</a></p>\n<h1>题目</h1>\n<p>给定整数 <code>n</code> ，返回 <em>所有小于非负整数 <code>n</code> 的质数的数量</em> 。</p>\n<p> </p>\n<p><strong>示例 1：</strong></p>\n<pre>\n<strong>输入：</strong>n = 10\n<strong>输出：</strong>4\n<strong>解释：</strong>小于 10 的质数一共有 4 个, 它们是 2, 3, 5, 7 。\n</pre>\n<p><strong>示例 2：</strong></p>\n<pre>\n<strong>输入：</strong>n = 0\n<strong>输出：</strong>0\n</pre>\n<p><strong>示例 3：</strong></p>\n<pre>\n<strong>输入：</strong>n = 1\n<strong>输出</strong>：0\n</pre>\n<p> </p>\n<p><strong>提示：</strong></p>\n<ul>\n    <li><code>0 <= n <= 5 * 10<sup>6</sup></code></li>\n</ul>\n<div><div>Related Topics</div><div><li>数组</li><li>数学</li><li>枚举</li><li>数论</li></div></div>\n<h1>个人解法</h1>\n<p>思路：</p>\n<p>这题我最开始想的比较简单，直接从0开始遍历到给定数字，遍历过程中判断是否是质数</p>\n<p>java代码如下：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">class Solution &#123;\n    public int countPrimes(int n) &#123;\n        if (n &lt;&#x3D; 2) &#123;\n            return 0;\n        &#125;\n        int count &#x3D; 1;\n        for (int i &#x3D; 3; i &lt; n; i++) &#123;\n            if (isPrime(i)) &#123;\n                count++;\n            &#125;\n        &#125;\n        return count;\n    &#125;\n    &#x2F;**\n     * 判断是否是质数\n     *\n     * @param num 数字\n     * @return true：质数、false：不是质数\n     *&#x2F;\n    private boolean isPrime(int num) &#123;\n        if (num &lt; 2) &#123;\n            return false;\n        &#125;\n        if (num &#x3D;&#x3D; 2) &#123;\n            return true;\n        &#125;\n        for (int i &#x3D; 2; i * i &lt;&#x3D; num; i++) &#123;\n            if (num % i &#x3D;&#x3D; 0) &#123;\n                return false;\n            &#125;\n        &#125;\n        return true;\n    &#125;\n&#125;</code></pre>\n<p>这种办法虽然例子过了，但是最后提交时却是超时了</p>\n<p>接下来，我又仔细的想了想，之后想到了一种办法，通过了，然后看了看题解，发现这完全就是埃拉托斯特<br>\n尼筛法，简称埃氏筛，也称素数筛，是一种简单且历史悠久的筛法，用来找出一定范围内所有的素数。</p>\n<p>这种算法就是给出要筛数值的范围n，从2开始遍历直到  $\\sqrt{2}$ 。从2开始把小于n并且是其倍数的标记上，<br>\n然后，按顺序是3，和2一样的步骤，不过要判断下是否被标记过，因为，被标记的不是质数</p>\n<p>我在维基百科上看到了这个小动画，就是这个算法的整体步骤了</p>\n<iframe frameborder=0 border=0 height=369 width=445 src=\"Sieve_of_Eratosthenes_animation.gif\"></iframe>\n<p>下面是我的java代码：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">class Solution &#123;\n    public int countPrimes(int n) &#123;\n        if (n &lt;&#x3D; 2) &#123;\n            return 0;\n        &#125;\n        boolean[] nums &#x3D; new boolean[n + 1];\n        Arrays.fill(nums, true);\n        nums[0] &#x3D; false;\n        nums[1] &#x3D; false;\n        int count &#x3D; 0;\n        int max &#x3D; (int) Math.sqrt(n);\n        for (int i &#x3D; 2; i &lt; n; i++) &#123;\n            if (nums[i]) &#123;\n                count++;\n                if (i &gt; max) &#123;\n                    continue;\n                &#125;\n                for (int j &#x3D; i; j * i &lt; n; j++) &#123;\n                    nums[j * i] &#x3D; false;\n                &#125;\n            &#125;\n        &#125;\n        return count;\n    &#125;\n&#125;</code></pre>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"cover":"https://blog.huangge1199.cn/post/sublimeText4Purchase/bg.jpeg","excerpt":"","more":"<p>今天遇到一个有趣的题目，求小于给定非负整数的质数的数量</p>\n<p>原题链接：<a href=\"https://leetcode-cn.com/problems/count-primes/\">力扣204. 计数质数</a></p>\n<h1>题目</h1>\n<p>给定整数 <code>n</code> ，返回 <em>所有小于非负整数 <code>n</code> 的质数的数量</em> 。</p>\n<p> </p>\n<p><strong>示例 1：</strong></p>\n<pre>\n<strong>输入：</strong>n = 10\n<strong>输出：</strong>4\n<strong>解释：</strong>小于 10 的质数一共有 4 个, 它们是 2, 3, 5, 7 。\n</pre>\n<p><strong>示例 2：</strong></p>\n<pre>\n<strong>输入：</strong>n = 0\n<strong>输出：</strong>0\n</pre>\n<p><strong>示例 3：</strong></p>\n<pre>\n<strong>输入：</strong>n = 1\n<strong>输出</strong>：0\n</pre>\n<p> </p>\n<p><strong>提示：</strong></p>\n<ul>\n    <li><code>0 <= n <= 5 * 10<sup>6</sup></code></li>\n</ul>\n<div><div>Related Topics</div><div><li>数组</li><li>数学</li><li>枚举</li><li>数论</li></div></div>\n<h1>个人解法</h1>\n<p>思路：</p>\n<p>这题我最开始想的比较简单，直接从0开始遍历到给定数字，遍历过程中判断是否是质数</p>\n<p>java代码如下：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">class Solution &#123;\n    public int countPrimes(int n) &#123;\n        if (n &lt;&#x3D; 2) &#123;\n            return 0;\n        &#125;\n        int count &#x3D; 1;\n        for (int i &#x3D; 3; i &lt; n; i++) &#123;\n            if (isPrime(i)) &#123;\n                count++;\n            &#125;\n        &#125;\n        return count;\n    &#125;\n    &#x2F;**\n     * 判断是否是质数\n     *\n     * @param num 数字\n     * @return true：质数、false：不是质数\n     *&#x2F;\n    private boolean isPrime(int num) &#123;\n        if (num &lt; 2) &#123;\n            return false;\n        &#125;\n        if (num &#x3D;&#x3D; 2) &#123;\n            return true;\n        &#125;\n        for (int i &#x3D; 2; i * i &lt;&#x3D; num; i++) &#123;\n            if (num % i &#x3D;&#x3D; 0) &#123;\n                return false;\n            &#125;\n        &#125;\n        return true;\n    &#125;\n&#125;</code></pre>\n<p>这种办法虽然例子过了，但是最后提交时却是超时了</p>\n<p>接下来，我又仔细的想了想，之后想到了一种办法，通过了，然后看了看题解，发现这完全就是埃拉托斯特<br>\n尼筛法，简称埃氏筛，也称素数筛，是一种简单且历史悠久的筛法，用来找出一定范围内所有的素数。</p>\n<p>这种算法就是给出要筛数值的范围n，从2开始遍历直到  $\\sqrt{2}$ 。从2开始把小于n并且是其倍数的标记上，<br>\n然后，按顺序是3，和2一样的步骤，不过要判断下是否被标记过，因为，被标记的不是质数</p>\n<p>我在维基百科上看到了这个小动画，就是这个算法的整体步骤了</p>\n<iframe frameborder=0 border=0 height=369 width=445 src=\"Sieve_of_Eratosthenes_animation.gif\"></iframe>\n<p>下面是我的java代码：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">class Solution &#123;\n    public int countPrimes(int n) &#123;\n        if (n &lt;&#x3D; 2) &#123;\n            return 0;\n        &#125;\n        boolean[] nums &#x3D; new boolean[n + 1];\n        Arrays.fill(nums, true);\n        nums[0] &#x3D; false;\n        nums[1] &#x3D; false;\n        int count &#x3D; 0;\n        int max &#x3D; (int) Math.sqrt(n);\n        for (int i &#x3D; 2; i &lt; n; i++) &#123;\n            if (nums[i]) &#123;\n                count++;\n                if (i &gt; max) &#123;\n                    continue;\n                &#125;\n                for (int j &#x3D; i; j * i &lt; n; j++) &#123;\n                    nums[j * i] &#x3D; false;\n                &#125;\n            &#125;\n        &#125;\n        return count;\n    &#125;\n&#125;</code></pre>\n"},{"title":"力扣2274. 不含特殊楼层的最大连续楼层数","date":"2022-05-19T01:57:58.000Z","_content":"\n力扣周赛293--第二题\n\n[2274. 不含特殊楼层的最大连续楼层数](https://leetcode.cn/problems/maximum-consecutive-floors-without-special-floors/)\n\n# 题目\n\n<p>Alice 管理着一家公司，并租用大楼的部分楼层作为办公空间。Alice 决定将一些楼层作为 <strong>特殊楼层</strong> ，仅用于放松。</p>\n\n<p>给你两个整数 <code>bottom</code> 和 <code>top</code> ，表示 Alice 租用了从 <code>bottom</code> 到 <code>top</code>（含 <code>bottom</code> 和 <code>top</code> 在内）的所有楼层。另给你一个整数数组 <code>special</code> ，其中 <code>special[i]</code> 表示&nbsp; Alice 指定用于放松的特殊楼层。</p>\n\n<p>返回不含特殊楼层的 <strong>最大</strong> 连续楼层数。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入：</strong>bottom = 2, top = 9, special = [4,6]\n<strong>输出：</strong>3\n<strong>解释：</strong>下面列出的是不含特殊楼层的连续楼层范围：\n- (2, 3) ，楼层数为 2 。\n- (5, 5) ，楼层数为 1 。\n- (7, 9) ，楼层数为 3 。\n因此，返回最大连续楼层数 3 。\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>\n<strong>输入：</strong>bottom = 6, top = 8, special = [7,6,8]\n<strong>输出：</strong>0\n<strong>解释：</strong>每层楼都被规划为特殊楼层，所以返回 0 。\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= special.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= bottom &lt;= special[i] &lt;= top &lt;= 10<sup>9</sup></code></li>\n\t<li><code>special</code> 中的所有值 <strong>互不相同</strong></li>\n</ul>\n<div><div>Related Topics</div><div><li>数组</li><li>排序</li></div></div>\n\n# 思路\n\n这题相当于在bottom到top的范围内，被special的数分割了，我们需要找到分割后最长的一段\n\n步骤：\n\n1. 为了保证数据的顺序进行，对special进行排序\n2. 遍历`special`对`bottom~top`进行分割，当`bottom<=special[i]`时，\n连续楼层数为`special[i]-bottom`，与之前的最大连续层数对比，得到当前的最大连续层数，\n同时更新`bottom = special[i] + 1`\n3. 遍历完，还有最后一段的连续层数`top - special[special.length - 1]`\n4. 至此，不包含特殊层的最大的连续层数就出来了\n\n# 代码\n\njava：\n\n```java\nclass Solution {\n    public int maxConsecutive(int bottom, int top, int[] special) {\n        Arrays.sort(special);\n        int max = 0;\n        for (int j : special) {\n            if (bottom <= j) {\n                max = Math.max(max, j - bottom);\n                bottom = j + 1;\n            }\n        }\n        max = Math.max(max, top - special[special.length - 1]);\n        return max;\n    }\n}\n```\n","source":"_posts/maximum-consecutive-floors-without-special-floors.md","raw":"---\ntitle: 力扣2274. 不含特殊楼层的最大连续楼层数\ndate: 2022-05-19 09:57:58\ntags: [力扣]\ncategories: [算法,力扣]\n---\n\n力扣周赛293--第二题\n\n[2274. 不含特殊楼层的最大连续楼层数](https://leetcode.cn/problems/maximum-consecutive-floors-without-special-floors/)\n\n# 题目\n\n<p>Alice 管理着一家公司，并租用大楼的部分楼层作为办公空间。Alice 决定将一些楼层作为 <strong>特殊楼层</strong> ，仅用于放松。</p>\n\n<p>给你两个整数 <code>bottom</code> 和 <code>top</code> ，表示 Alice 租用了从 <code>bottom</code> 到 <code>top</code>（含 <code>bottom</code> 和 <code>top</code> 在内）的所有楼层。另给你一个整数数组 <code>special</code> ，其中 <code>special[i]</code> 表示&nbsp; Alice 指定用于放松的特殊楼层。</p>\n\n<p>返回不含特殊楼层的 <strong>最大</strong> 连续楼层数。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入：</strong>bottom = 2, top = 9, special = [4,6]\n<strong>输出：</strong>3\n<strong>解释：</strong>下面列出的是不含特殊楼层的连续楼层范围：\n- (2, 3) ，楼层数为 2 。\n- (5, 5) ，楼层数为 1 。\n- (7, 9) ，楼层数为 3 。\n因此，返回最大连续楼层数 3 。\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>\n<strong>输入：</strong>bottom = 6, top = 8, special = [7,6,8]\n<strong>输出：</strong>0\n<strong>解释：</strong>每层楼都被规划为特殊楼层，所以返回 0 。\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= special.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= bottom &lt;= special[i] &lt;= top &lt;= 10<sup>9</sup></code></li>\n\t<li><code>special</code> 中的所有值 <strong>互不相同</strong></li>\n</ul>\n<div><div>Related Topics</div><div><li>数组</li><li>排序</li></div></div>\n\n# 思路\n\n这题相当于在bottom到top的范围内，被special的数分割了，我们需要找到分割后最长的一段\n\n步骤：\n\n1. 为了保证数据的顺序进行，对special进行排序\n2. 遍历`special`对`bottom~top`进行分割，当`bottom<=special[i]`时，\n连续楼层数为`special[i]-bottom`，与之前的最大连续层数对比，得到当前的最大连续层数，\n同时更新`bottom = special[i] + 1`\n3. 遍历完，还有最后一段的连续层数`top - special[special.length - 1]`\n4. 至此，不包含特殊层的最大的连续层数就出来了\n\n# 代码\n\njava：\n\n```java\nclass Solution {\n    public int maxConsecutive(int bottom, int top, int[] special) {\n        Arrays.sort(special);\n        int max = 0;\n        for (int j : special) {\n            if (bottom <= j) {\n                max = Math.max(max, j - bottom);\n                bottom = j + 1;\n            }\n        }\n        max = Math.max(max, top - special[special.length - 1]);\n        return max;\n    }\n}\n```\n","slug":"maximum-consecutive-floors-without-special-floors","published":1,"updated":"2022-06-03T06:00:55.573Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl42z5h7d004w3gn6aeoa9dmm","content":"<p>力扣周赛293–第二题</p>\n<p><a href=\"https://leetcode.cn/problems/maximum-consecutive-floors-without-special-floors/\">2274. 不含特殊楼层的最大连续楼层数</a></p>\n<h1>题目</h1>\n<p>Alice 管理着一家公司，并租用大楼的部分楼层作为办公空间。Alice 决定将一些楼层作为 <strong>特殊楼层</strong> ，仅用于放松。</p>\n<p>给你两个整数 <code>bottom</code> 和 <code>top</code> ，表示 Alice 租用了从 <code>bottom</code> 到 <code>top</code>（含 <code>bottom</code> 和 <code>top</code> 在内）的所有楼层。另给你一个整数数组 <code>special</code> ，其中 <code>special[i]</code> 表示&nbsp; Alice 指定用于放松的特殊楼层。</p>\n<p>返回不含特殊楼层的 <strong>最大</strong> 连续楼层数。</p>\n<p>&nbsp;</p>\n<p><strong>示例 1：</strong></p>\n<pre>\n<strong>输入：</strong>bottom = 2, top = 9, special = [4,6]\n<strong>输出：</strong>3\n<strong>解释：</strong>下面列出的是不含特殊楼层的连续楼层范围：\n- (2, 3) ，楼层数为 2 。\n- (5, 5) ，楼层数为 1 。\n- (7, 9) ，楼层数为 3 。\n因此，返回最大连续楼层数 3 。\n</pre>\n<p><strong>示例 2：</strong></p>\n<pre>\n<strong>输入：</strong>bottom = 6, top = 8, special = [7,6,8]\n<strong>输出：</strong>0\n<strong>解释：</strong>每层楼都被规划为特殊楼层，所以返回 0 。\n</pre>\n<p>&nbsp;</p>\n<p><strong>提示</strong></p>\n<ul>\n\t<li><code>1 &lt;= special.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= bottom &lt;= special[i] &lt;= top &lt;= 10<sup>9</sup></code></li>\n\t<li><code>special</code> 中的所有值 <strong>互不相同</strong></li>\n</ul>\n<div><div>Related Topics</div><div><li>数组</li><li>排序</li></div></div>\n<h1>思路</h1>\n<p>这题相当于在bottom到top的范围内，被special的数分割了，我们需要找到分割后最长的一段</p>\n<p>步骤：</p>\n<ol>\n<li>为了保证数据的顺序进行，对special进行排序</li>\n<li>遍历<code>special</code>对<code>bottom~top</code>进行分割，当<code>bottom&lt;=special[i]</code>时，<br>\n连续楼层数为<code>special[i]-bottom</code>，与之前的最大连续层数对比，得到当前的最大连续层数，<br>\n同时更新<code>bottom = special[i] + 1</code></li>\n<li>遍历完，还有最后一段的连续层数<code>top - special[special.length - 1]</code></li>\n<li>至此，不包含特殊层的最大的连续层数就出来了</li>\n</ol>\n<h1>代码</h1>\n<p>java：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">class Solution &#123;\n    public int maxConsecutive(int bottom, int top, int[] special) &#123;\n        Arrays.sort(special);\n        int max &#x3D; 0;\n        for (int j : special) &#123;\n            if (bottom &lt;&#x3D; j) &#123;\n                max &#x3D; Math.max(max, j - bottom);\n                bottom &#x3D; j + 1;\n            &#125;\n        &#125;\n        max &#x3D; Math.max(max, top - special[special.length - 1]);\n        return max;\n    &#125;\n&#125;</code></pre>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"cover":"https://blog.huangge1199.cn/post/jpaCompositePK/bg.jpg","excerpt":"","more":"<p>力扣周赛293–第二题</p>\n<p><a href=\"https://leetcode.cn/problems/maximum-consecutive-floors-without-special-floors/\">2274. 不含特殊楼层的最大连续楼层数</a></p>\n<h1>题目</h1>\n<p>Alice 管理着一家公司，并租用大楼的部分楼层作为办公空间。Alice 决定将一些楼层作为 <strong>特殊楼层</strong> ，仅用于放松。</p>\n<p>给你两个整数 <code>bottom</code> 和 <code>top</code> ，表示 Alice 租用了从 <code>bottom</code> 到 <code>top</code>（含 <code>bottom</code> 和 <code>top</code> 在内）的所有楼层。另给你一个整数数组 <code>special</code> ，其中 <code>special[i]</code> 表示&nbsp; Alice 指定用于放松的特殊楼层。</p>\n<p>返回不含特殊楼层的 <strong>最大</strong> 连续楼层数。</p>\n<p>&nbsp;</p>\n<p><strong>示例 1：</strong></p>\n<pre>\n<strong>输入：</strong>bottom = 2, top = 9, special = [4,6]\n<strong>输出：</strong>3\n<strong>解释：</strong>下面列出的是不含特殊楼层的连续楼层范围：\n- (2, 3) ，楼层数为 2 。\n- (5, 5) ，楼层数为 1 。\n- (7, 9) ，楼层数为 3 。\n因此，返回最大连续楼层数 3 。\n</pre>\n<p><strong>示例 2：</strong></p>\n<pre>\n<strong>输入：</strong>bottom = 6, top = 8, special = [7,6,8]\n<strong>输出：</strong>0\n<strong>解释：</strong>每层楼都被规划为特殊楼层，所以返回 0 。\n</pre>\n<p>&nbsp;</p>\n<p><strong>提示</strong></p>\n<ul>\n\t<li><code>1 &lt;= special.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= bottom &lt;= special[i] &lt;= top &lt;= 10<sup>9</sup></code></li>\n\t<li><code>special</code> 中的所有值 <strong>互不相同</strong></li>\n</ul>\n<div><div>Related Topics</div><div><li>数组</li><li>排序</li></div></div>\n<h1>思路</h1>\n<p>这题相当于在bottom到top的范围内，被special的数分割了，我们需要找到分割后最长的一段</p>\n<p>步骤：</p>\n<ol>\n<li>为了保证数据的顺序进行，对special进行排序</li>\n<li>遍历<code>special</code>对<code>bottom~top</code>进行分割，当<code>bottom&lt;=special[i]</code>时，<br>\n连续楼层数为<code>special[i]-bottom</code>，与之前的最大连续层数对比，得到当前的最大连续层数，<br>\n同时更新<code>bottom = special[i] + 1</code></li>\n<li>遍历完，还有最后一段的连续层数<code>top - special[special.length - 1]</code></li>\n<li>至此，不包含特殊层的最大的连续层数就出来了</li>\n</ol>\n<h1>代码</h1>\n<p>java：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">class Solution &#123;\n    public int maxConsecutive(int bottom, int top, int[] special) &#123;\n        Arrays.sort(special);\n        int max &#x3D; 0;\n        for (int j : special) &#123;\n            if (bottom &lt;&#x3D; j) &#123;\n                max &#x3D; Math.max(max, j - bottom);\n                bottom &#x3D; j + 1;\n            &#125;\n        &#125;\n        max &#x3D; Math.max(max, top - special[special.length - 1]);\n        return max;\n    &#125;\n&#125;</code></pre>\n"},{"title":"推理界的3月4号","date":"2022-03-04T03:28:18.000Z","_content":"\n今天是3月4日，在推理界，历史的今天有如下事件：\n\n- 程小青（中国）出席纪念白居易诞辰诗会65周年\n\n- 妹尾韶夫（日本）诞辰130周年\n\n- 詹姆斯·艾尔罗伊（美国）诞辰74周年\n\n- 黑川博行（日本）诞辰73周年\n\n- 半村良（日本）逝世20周年\n\n# 程小青\n\n　　程小青（1893—1976）【原名程青心，又名程辉斋】\n\n　　籍贯：江苏吴县人。\n\n　　身平介绍：少年家贫，曾在钟表店当学徒，自学外语和热爱看书，他18岁时开始从事文学写作，先是与周瘦鹃合作翻译柯南·道尔作品，后来创作《霍桑探案》，一举成名。\n\n　　据史料介绍，程小青在21岁时发表的《灯光人影》，被《新闻报》举行的征文大赛选中，他小说中的侦探原名霍森，因排字工人误排，于是便成了霍桑。《霍桑探案》发表之后，程小青不断收到读者大量来信。是读者的鼓励，促使程小青先后写出了《江南燕》、《珠项圈》、《黄浦江中》、《八十四》、《轮下血》、《裹棉刀》、《恐怖的话剧》、《雨夜枪声》、《白衣怪》、《催命符》、《索命钱》、《新婚劫》、《活尸》、《逃犯》、《血手印》、《黑地牢》、《无头案》等30余部侦探小说。著名报人郑逸梅曾称赞他：“毕生精力，尽瘁于此，也就成为侦探小说的巨擘。”\n\n　　程小青的创作，据另一位著名报人范烟桥称“模仿了柯南道尔的写法”，但他又塑造了“中国的福尔摩斯”。为了达到这一目的，程小青作为函授生，受业于美国大学函授科，进修犯罪心理学与侦探学的学习，他从理论上学习西欧侦探理论，在实践中又把中国旧社会发生的案例加以改造。他在谈到创作时，多次谈到自己如何设计侦探小说的名字，怎样取材与裁剪，怎样构思开头与结尾，他把美国作家韦尔斯的专著《侦探小说技艺论》和美国心理学家聂克逊博士的专著《著作人应知的心理学》作为教科书。在小说中，程小青设计了霍桑与包朗一对搭档，类似福尔摩斯与华生医生，但在案件的取材上，程小青着重描写旧中国社会弊病引发的凶杀案，注重人物的心理分析，把凶杀与现实生活的投影结合起来，因此形成了自己的特点与风格。\n\n# 妹尾韶夫\n\n　　妹尾韶夫（1892年3月4日－1962年4月19日），日本翻译家、侦探小说作家。出生于冈山县津山市。\n\n　　早稻田大学英文系毕业后，1922年为“新青年”等杂志翻译英美侦探小说，其中多数是阿加莎·克里斯蒂的作品。1925年以后以妹尾安艺夫名义创作，发表了30到40个短篇小说。\n\n　　在“新青年”担当每月评论的胡铁梅、“宝石”杂志每月评论者小原俊一，据说都是妹尾的笔名。\n\n　　1962年因脑溢血去世，终年70岁。\n\n# 詹姆斯·艾尔罗伊\n\n　　詹姆斯·艾尔罗伊 （詹姆斯·艾尔罗瓦） James Ellroy（1948年3月4日美国加州洛杉矶-）\n\n　　类型：硬汉；警察程序；私人侦探；倒叙\n\n　　主要系列：\n\n- “洛依·霍普金斯”三部曲Lloyd Hopkins trilogy, 1984-1986\n- 洛杉矶四部曲L.A. quartet, 1987-1992\n- American Underworld trilogy/Underworld USA trilogy, 1995-\n\n　　艾尔罗伊本名李·厄尔·艾尔罗伊（Lee Earle Ellroy）。父亲阿曼德·艾尔罗伊（Armand Ellroy）是反犹太主义者，副业是会计师，母亲杰尼瓦·奥德丽·“简”·希利克·艾尔罗伊（Geneva Odelia “Jean” Hilliker Ellroy）是注册护士。艾尔罗伊的父母于1940年结婚，1954年离婚。艾尔罗伊被判给母亲，接着搬到了埃尔蒙特市。据艾尔罗伊回忆，母亲经常在周六晚上酗酒。1958年6月22日发生了一件对于艾尔罗伊一生影响深远的事情，那天他的母亲被人谋杀。之后，艾尔罗伊和父亲一起居住。十一岁生日，父亲送给他一本洛杉矶警察局历史的书籍，他仔细阅读了这本书，立志将来当一名作家。艾尔罗伊是一个有强迫症的读者，他常常去图书馆借书，还从书店里偷犯罪小说。\n\n　　艾尔罗伊进入犹太费尔法克斯高中（Jewish Fairfax High School），1965年校方知道他父亲的纳粹观点之后将他开除。接着他进入美国陆军，但是很快认识到自己不是当兵的材料。他假装口吃，于是很快退伍。他回家之后不久父亲去世了。\n\n　　那段时间，艾尔罗伊就住在街上，靠着入店行窃和入室盗窃为生。他喝酒，有时候还嗑药，占据着无人的房子。1965年到1977年间，艾尔罗伊因为醉酒、偷窃和非法入室而多次被捕。最后被判入狱八个月。刑满释放之后，他做过一些低等的工作，诸如散发传单，递送邮件，色情书店出纳等等。他继续喝酒，滥用鼻用吸入器。因为患上肺炎和妄想症，艾尔罗伊被送去治疗，1975年治愈。接着他找了一些稳定的工作，比如高尔夫和乡村俱乐部的球童，参加戒酒互助协会（Alcoholics Anonymous）之后他开始创作小说。\n\n　　艾尔罗伊的第一部长篇小说《布朗的安魂曲》（Brown's Requiem）是一部半自传性质的犯罪小说，风格类似雷蒙德·钱德勒，小说的主人公弗里兹·布朗（Fritz Brown）曾经是一名警官，他戒酒之后变成了一名私人侦探。第二部《秘密行事》（Clandestine，1982）讲述了一名前警官追踪杀害以前爱人的凶手的故事，获得埃德加奖提名。\n\n　　此后，艾尔罗伊的创作速度保持稳健。他先是发表了“洛依·霍普金斯”三部曲，包括《染血之夜》（Blood on the Moon，1984）、《因起此夜》（Because the Night，1984）、《自殺坡》（Suicide Hill，1986）。1984年他辞去球童，全职写作。他又发表了“洛杉矶四部曲”，包括《黑色大丽花》（The Black Dahlia，1987）、《无处藏身》（The Big Nowhere，1988）、《洛杉矶的秘密》（L.A. Confidential，1990）、《白色爵士舞》（White Jazz，1992）。因此在国内和国际上获得了声誉。《无处藏身》或的1990年侦探小说奖（Prix Mystere Award）。《洛杉矶的秘密》被改编成电影，获得奥斯卡奖提名。2006年《黑色大丽花》被搬上大银幕。\n\n　　1993年到2004年间，艾尔罗伊在《GQ》杂志上发表了小说和非小说。这些作品结集为《好莱坞夜曲》（Hollywood Nocturnes，1994）、《犯罪之波：来自洛杉矶地下社会的报道和小说》（Crime Wave: Reportage and Fiction from the Underside of L.A.，1999）和《危险的步调》（Breakneck Pace，2000）。\n\n　　艾尔罗伊结过两次婚，第一任妻子是玛丽·多赫尔蒂（Mary Doherty），第二任是海伦·诺德（Helen Knode），均离婚。2005年他从康涅狄格州纽卡纳安搬到洛杉矶。（ellry）\n\n# 黑川博行\n\n　　黑川博行（1949年3月4日－），日本小说家。出生于爱媛县。京都市立艺术大学美术学系雕刻科毕业。妻子是日本画家黑川雅子。\n\n　　毕业后在高中担任美术教师，1984年以《第二次告别》（二度のお别れ）获三得利推理大奖佳作。1986年《猫眼宝石》（キャッツアイころがった）获第4届三得利推理大奖。1996年《伯爵计划》（カウント·プラン）获第49届日本推理作家协会奖（短篇部门）。\n\n　　获得直木奖候补的作品有《伯爵计划》（カウント·プラン）、《疫病神》、《文福茶釜》、《国境》、《恶果》等。\n\n　　他还是由船越荣一郎主演的电视连续剧《刑事吉永诚一·泪的事件簿》的原作。\n\n# 半村良\n\n　　半村良（1933年10月27日－2002年3月4日），日本小说家。本名清野平太郎。出生于东京府（现东京都），在东京都立两国高中毕业后，先后做过酒吧侍者等多种职业，在广告公司任职期间与广播公司等建立了密切的关系，后开始这方面的工作。\n\n　　1962年短篇小说《收获》（収穫）获得第2届早川科幻小说大赛（ハヤカワ·SFコンテスト）第三名，正式成为作家，上世纪六十年代在《SF杂志》（SFマガジン）上发表若干个短篇小说后，突然不再发表作品，据说和当时《SF杂志》总编辑福岛正实关系不佳，后转入自由创作。\n\n　　1971年出版《石之血脉》（石の血脈）开创了浪漫传奇小说流派，这种风格对后世很多作家产生了影响。\n\n　　1975年《雨やどり》获得直木奖。\n","source":"_posts/mystery0304.md","raw":"---\ntitle: 推理界的3月4号\ndate: 2022-03-04 11:28:18\ntags: 推理界的今天\ncategories: 推理\n---\n\n今天是3月4日，在推理界，历史的今天有如下事件：\n\n- 程小青（中国）出席纪念白居易诞辰诗会65周年\n\n- 妹尾韶夫（日本）诞辰130周年\n\n- 詹姆斯·艾尔罗伊（美国）诞辰74周年\n\n- 黑川博行（日本）诞辰73周年\n\n- 半村良（日本）逝世20周年\n\n# 程小青\n\n　　程小青（1893—1976）【原名程青心，又名程辉斋】\n\n　　籍贯：江苏吴县人。\n\n　　身平介绍：少年家贫，曾在钟表店当学徒，自学外语和热爱看书，他18岁时开始从事文学写作，先是与周瘦鹃合作翻译柯南·道尔作品，后来创作《霍桑探案》，一举成名。\n\n　　据史料介绍，程小青在21岁时发表的《灯光人影》，被《新闻报》举行的征文大赛选中，他小说中的侦探原名霍森，因排字工人误排，于是便成了霍桑。《霍桑探案》发表之后，程小青不断收到读者大量来信。是读者的鼓励，促使程小青先后写出了《江南燕》、《珠项圈》、《黄浦江中》、《八十四》、《轮下血》、《裹棉刀》、《恐怖的话剧》、《雨夜枪声》、《白衣怪》、《催命符》、《索命钱》、《新婚劫》、《活尸》、《逃犯》、《血手印》、《黑地牢》、《无头案》等30余部侦探小说。著名报人郑逸梅曾称赞他：“毕生精力，尽瘁于此，也就成为侦探小说的巨擘。”\n\n　　程小青的创作，据另一位著名报人范烟桥称“模仿了柯南道尔的写法”，但他又塑造了“中国的福尔摩斯”。为了达到这一目的，程小青作为函授生，受业于美国大学函授科，进修犯罪心理学与侦探学的学习，他从理论上学习西欧侦探理论，在实践中又把中国旧社会发生的案例加以改造。他在谈到创作时，多次谈到自己如何设计侦探小说的名字，怎样取材与裁剪，怎样构思开头与结尾，他把美国作家韦尔斯的专著《侦探小说技艺论》和美国心理学家聂克逊博士的专著《著作人应知的心理学》作为教科书。在小说中，程小青设计了霍桑与包朗一对搭档，类似福尔摩斯与华生医生，但在案件的取材上，程小青着重描写旧中国社会弊病引发的凶杀案，注重人物的心理分析，把凶杀与现实生活的投影结合起来，因此形成了自己的特点与风格。\n\n# 妹尾韶夫\n\n　　妹尾韶夫（1892年3月4日－1962年4月19日），日本翻译家、侦探小说作家。出生于冈山县津山市。\n\n　　早稻田大学英文系毕业后，1922年为“新青年”等杂志翻译英美侦探小说，其中多数是阿加莎·克里斯蒂的作品。1925年以后以妹尾安艺夫名义创作，发表了30到40个短篇小说。\n\n　　在“新青年”担当每月评论的胡铁梅、“宝石”杂志每月评论者小原俊一，据说都是妹尾的笔名。\n\n　　1962年因脑溢血去世，终年70岁。\n\n# 詹姆斯·艾尔罗伊\n\n　　詹姆斯·艾尔罗伊 （詹姆斯·艾尔罗瓦） James Ellroy（1948年3月4日美国加州洛杉矶-）\n\n　　类型：硬汉；警察程序；私人侦探；倒叙\n\n　　主要系列：\n\n- “洛依·霍普金斯”三部曲Lloyd Hopkins trilogy, 1984-1986\n- 洛杉矶四部曲L.A. quartet, 1987-1992\n- American Underworld trilogy/Underworld USA trilogy, 1995-\n\n　　艾尔罗伊本名李·厄尔·艾尔罗伊（Lee Earle Ellroy）。父亲阿曼德·艾尔罗伊（Armand Ellroy）是反犹太主义者，副业是会计师，母亲杰尼瓦·奥德丽·“简”·希利克·艾尔罗伊（Geneva Odelia “Jean” Hilliker Ellroy）是注册护士。艾尔罗伊的父母于1940年结婚，1954年离婚。艾尔罗伊被判给母亲，接着搬到了埃尔蒙特市。据艾尔罗伊回忆，母亲经常在周六晚上酗酒。1958年6月22日发生了一件对于艾尔罗伊一生影响深远的事情，那天他的母亲被人谋杀。之后，艾尔罗伊和父亲一起居住。十一岁生日，父亲送给他一本洛杉矶警察局历史的书籍，他仔细阅读了这本书，立志将来当一名作家。艾尔罗伊是一个有强迫症的读者，他常常去图书馆借书，还从书店里偷犯罪小说。\n\n　　艾尔罗伊进入犹太费尔法克斯高中（Jewish Fairfax High School），1965年校方知道他父亲的纳粹观点之后将他开除。接着他进入美国陆军，但是很快认识到自己不是当兵的材料。他假装口吃，于是很快退伍。他回家之后不久父亲去世了。\n\n　　那段时间，艾尔罗伊就住在街上，靠着入店行窃和入室盗窃为生。他喝酒，有时候还嗑药，占据着无人的房子。1965年到1977年间，艾尔罗伊因为醉酒、偷窃和非法入室而多次被捕。最后被判入狱八个月。刑满释放之后，他做过一些低等的工作，诸如散发传单，递送邮件，色情书店出纳等等。他继续喝酒，滥用鼻用吸入器。因为患上肺炎和妄想症，艾尔罗伊被送去治疗，1975年治愈。接着他找了一些稳定的工作，比如高尔夫和乡村俱乐部的球童，参加戒酒互助协会（Alcoholics Anonymous）之后他开始创作小说。\n\n　　艾尔罗伊的第一部长篇小说《布朗的安魂曲》（Brown's Requiem）是一部半自传性质的犯罪小说，风格类似雷蒙德·钱德勒，小说的主人公弗里兹·布朗（Fritz Brown）曾经是一名警官，他戒酒之后变成了一名私人侦探。第二部《秘密行事》（Clandestine，1982）讲述了一名前警官追踪杀害以前爱人的凶手的故事，获得埃德加奖提名。\n\n　　此后，艾尔罗伊的创作速度保持稳健。他先是发表了“洛依·霍普金斯”三部曲，包括《染血之夜》（Blood on the Moon，1984）、《因起此夜》（Because the Night，1984）、《自殺坡》（Suicide Hill，1986）。1984年他辞去球童，全职写作。他又发表了“洛杉矶四部曲”，包括《黑色大丽花》（The Black Dahlia，1987）、《无处藏身》（The Big Nowhere，1988）、《洛杉矶的秘密》（L.A. Confidential，1990）、《白色爵士舞》（White Jazz，1992）。因此在国内和国际上获得了声誉。《无处藏身》或的1990年侦探小说奖（Prix Mystere Award）。《洛杉矶的秘密》被改编成电影，获得奥斯卡奖提名。2006年《黑色大丽花》被搬上大银幕。\n\n　　1993年到2004年间，艾尔罗伊在《GQ》杂志上发表了小说和非小说。这些作品结集为《好莱坞夜曲》（Hollywood Nocturnes，1994）、《犯罪之波：来自洛杉矶地下社会的报道和小说》（Crime Wave: Reportage and Fiction from the Underside of L.A.，1999）和《危险的步调》（Breakneck Pace，2000）。\n\n　　艾尔罗伊结过两次婚，第一任妻子是玛丽·多赫尔蒂（Mary Doherty），第二任是海伦·诺德（Helen Knode），均离婚。2005年他从康涅狄格州纽卡纳安搬到洛杉矶。（ellry）\n\n# 黑川博行\n\n　　黑川博行（1949年3月4日－），日本小说家。出生于爱媛县。京都市立艺术大学美术学系雕刻科毕业。妻子是日本画家黑川雅子。\n\n　　毕业后在高中担任美术教师，1984年以《第二次告别》（二度のお别れ）获三得利推理大奖佳作。1986年《猫眼宝石》（キャッツアイころがった）获第4届三得利推理大奖。1996年《伯爵计划》（カウント·プラン）获第49届日本推理作家协会奖（短篇部门）。\n\n　　获得直木奖候补的作品有《伯爵计划》（カウント·プラン）、《疫病神》、《文福茶釜》、《国境》、《恶果》等。\n\n　　他还是由船越荣一郎主演的电视连续剧《刑事吉永诚一·泪的事件簿》的原作。\n\n# 半村良\n\n　　半村良（1933年10月27日－2002年3月4日），日本小说家。本名清野平太郎。出生于东京府（现东京都），在东京都立两国高中毕业后，先后做过酒吧侍者等多种职业，在广告公司任职期间与广播公司等建立了密切的关系，后开始这方面的工作。\n\n　　1962年短篇小说《收获》（収穫）获得第2届早川科幻小说大赛（ハヤカワ·SFコンテスト）第三名，正式成为作家，上世纪六十年代在《SF杂志》（SFマガジン）上发表若干个短篇小说后，突然不再发表作品，据说和当时《SF杂志》总编辑福岛正实关系不佳，后转入自由创作。\n\n　　1971年出版《石之血脉》（石の血脈）开创了浪漫传奇小说流派，这种风格对后世很多作家产生了影响。\n\n　　1975年《雨やどり》获得直木奖。\n","slug":"mystery0304","published":1,"updated":"2022-06-03T06:00:55.573Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl42z5h7g00503gn6dqpo84rq","content":"<p>今天是3月4日，在推理界，历史的今天有如下事件：</p>\n<ul>\n<li>\n<p>程小青（中国）出席纪念白居易诞辰诗会65周年</p>\n</li>\n<li>\n<p>妹尾韶夫（日本）诞辰130周年</p>\n</li>\n<li>\n<p>詹姆斯·艾尔罗伊（美国）诞辰74周年</p>\n</li>\n<li>\n<p>黑川博行（日本）诞辰73周年</p>\n</li>\n<li>\n<p>半村良（日本）逝世20周年</p>\n</li>\n</ul>\n<h1>程小青</h1>\n<p>程小青（1893—1976）【原名程青心，又名程辉斋】</p>\n<p>籍贯：江苏吴县人。</p>\n<p>身平介绍：少年家贫，曾在钟表店当学徒，自学外语和热爱看书，他18岁时开始从事文学写作，先是与周瘦鹃合作翻译柯南·道尔作品，后来创作《霍桑探案》，一举成名。</p>\n<p>据史料介绍，程小青在21岁时发表的《灯光人影》，被《新闻报》举行的征文大赛选中，他小说中的侦探原名霍森，因排字工人误排，于是便成了霍桑。《霍桑探案》发表之后，程小青不断收到读者大量来信。是读者的鼓励，促使程小青先后写出了《江南燕》、《珠项圈》、《黄浦江中》、《八十四》、《轮下血》、《裹棉刀》、《恐怖的话剧》、《雨夜枪声》、《白衣怪》、《催命符》、《索命钱》、《新婚劫》、《活尸》、《逃犯》、《血手印》、《黑地牢》、《无头案》等30余部侦探小说。著名报人郑逸梅曾称赞他：“毕生精力，尽瘁于此，也就成为侦探小说的巨擘。”</p>\n<p>程小青的创作，据另一位著名报人范烟桥称“模仿了柯南道尔的写法”，但他又塑造了“中国的福尔摩斯”。为了达到这一目的，程小青作为函授生，受业于美国大学函授科，进修犯罪心理学与侦探学的学习，他从理论上学习西欧侦探理论，在实践中又把中国旧社会发生的案例加以改造。他在谈到创作时，多次谈到自己如何设计侦探小说的名字，怎样取材与裁剪，怎样构思开头与结尾，他把美国作家韦尔斯的专著《侦探小说技艺论》和美国心理学家聂克逊博士的专著《著作人应知的心理学》作为教科书。在小说中，程小青设计了霍桑与包朗一对搭档，类似福尔摩斯与华生医生，但在案件的取材上，程小青着重描写旧中国社会弊病引发的凶杀案，注重人物的心理分析，把凶杀与现实生活的投影结合起来，因此形成了自己的特点与风格。</p>\n<h1>妹尾韶夫</h1>\n<p>妹尾韶夫（1892年3月4日－1962年4月19日），日本翻译家、侦探小说作家。出生于冈山县津山市。</p>\n<p>早稻田大学英文系毕业后，1922年为“新青年”等杂志翻译英美侦探小说，其中多数是阿加莎·克里斯蒂的作品。1925年以后以妹尾安艺夫名义创作，发表了30到40个短篇小说。</p>\n<p>在“新青年”担当每月评论的胡铁梅、“宝石”杂志每月评论者小原俊一，据说都是妹尾的笔名。</p>\n<p>1962年因脑溢血去世，终年70岁。</p>\n<h1>詹姆斯·艾尔罗伊</h1>\n<p>詹姆斯·艾尔罗伊 （詹姆斯·艾尔罗瓦） James Ellroy（1948年3月4日美国加州洛杉矶-）</p>\n<p>类型：硬汉；警察程序；私人侦探；倒叙</p>\n<p>主要系列：</p>\n<ul>\n<li>“洛依·霍普金斯”三部曲Lloyd Hopkins trilogy, 1984-1986</li>\n<li>洛杉矶四部曲L.A. quartet, 1987-1992</li>\n<li>American Underworld trilogy/Underworld USA trilogy, 1995-</li>\n</ul>\n<p>艾尔罗伊本名李·厄尔·艾尔罗伊（Lee Earle Ellroy）。父亲阿曼德·艾尔罗伊（Armand Ellroy）是反犹太主义者，副业是会计师，母亲杰尼瓦·奥德丽·“简”·希利克·艾尔罗伊（Geneva Odelia “Jean” Hilliker Ellroy）是注册护士。艾尔罗伊的父母于1940年结婚，1954年离婚。艾尔罗伊被判给母亲，接着搬到了埃尔蒙特市。据艾尔罗伊回忆，母亲经常在周六晚上酗酒。1958年6月22日发生了一件对于艾尔罗伊一生影响深远的事情，那天他的母亲被人谋杀。之后，艾尔罗伊和父亲一起居住。十一岁生日，父亲送给他一本洛杉矶警察局历史的书籍，他仔细阅读了这本书，立志将来当一名作家。艾尔罗伊是一个有强迫症的读者，他常常去图书馆借书，还从书店里偷犯罪小说。</p>\n<p>艾尔罗伊进入犹太费尔法克斯高中（Jewish Fairfax High School），1965年校方知道他父亲的纳粹观点之后将他开除。接着他进入美国陆军，但是很快认识到自己不是当兵的材料。他假装口吃，于是很快退伍。他回家之后不久父亲去世了。</p>\n<p>那段时间，艾尔罗伊就住在街上，靠着入店行窃和入室盗窃为生。他喝酒，有时候还嗑药，占据着无人的房子。1965年到1977年间，艾尔罗伊因为醉酒、偷窃和非法入室而多次被捕。最后被判入狱八个月。刑满释放之后，他做过一些低等的工作，诸如散发传单，递送邮件，色情书店出纳等等。他继续喝酒，滥用鼻用吸入器。因为患上肺炎和妄想症，艾尔罗伊被送去治疗，1975年治愈。接着他找了一些稳定的工作，比如高尔夫和乡村俱乐部的球童，参加戒酒互助协会（Alcoholics Anonymous）之后他开始创作小说。</p>\n<p>艾尔罗伊的第一部长篇小说《布朗的安魂曲》（Brown’s Requiem）是一部半自传性质的犯罪小说，风格类似雷蒙德·钱德勒，小说的主人公弗里兹·布朗（Fritz Brown）曾经是一名警官，他戒酒之后变成了一名私人侦探。第二部《秘密行事》（Clandestine，1982）讲述了一名前警官追踪杀害以前爱人的凶手的故事，获得埃德加奖提名。</p>\n<p>此后，艾尔罗伊的创作速度保持稳健。他先是发表了“洛依·霍普金斯”三部曲，包括《染血之夜》（Blood on the Moon，1984）、《因起此夜》（Because the Night，1984）、《自殺坡》（Suicide Hill，1986）。1984年他辞去球童，全职写作。他又发表了“洛杉矶四部曲”，包括《黑色大丽花》（The Black Dahlia，1987）、《无处藏身》（The Big Nowhere，1988）、《洛杉矶的秘密》（L.A. Confidential，1990）、《白色爵士舞》（White Jazz，1992）。因此在国内和国际上获得了声誉。《无处藏身》或的1990年侦探小说奖（Prix Mystere Award）。《洛杉矶的秘密》被改编成电影，获得奥斯卡奖提名。2006年《黑色大丽花》被搬上大银幕。</p>\n<p>1993年到2004年间，艾尔罗伊在《GQ》杂志上发表了小说和非小说。这些作品结集为《好莱坞夜曲》（Hollywood Nocturnes，1994）、《犯罪之波：来自洛杉矶地下社会的报道和小说》（Crime Wave: Reportage and Fiction from the Underside of L.A.，1999）和《危险的步调》（Breakneck Pace，2000）。</p>\n<p>艾尔罗伊结过两次婚，第一任妻子是玛丽·多赫尔蒂（Mary Doherty），第二任是海伦·诺德（Helen Knode），均离婚。2005年他从康涅狄格州纽卡纳安搬到洛杉矶。（ellry）</p>\n<h1>黑川博行</h1>\n<p>黑川博行（1949年3月4日－），日本小说家。出生于爱媛县。京都市立艺术大学美术学系雕刻科毕业。妻子是日本画家黑川雅子。</p>\n<p>毕业后在高中担任美术教师，1984年以《第二次告别》（二度のお别れ）获三得利推理大奖佳作。1986年《猫眼宝石》（キャッツアイころがった）获第4届三得利推理大奖。1996年《伯爵计划》（カウント·プラン）获第49届日本推理作家协会奖（短篇部门）。</p>\n<p>获得直木奖候补的作品有《伯爵计划》（カウント·プラン）、《疫病神》、《文福茶釜》、《国境》、《恶果》等。</p>\n<p>他还是由船越荣一郎主演的电视连续剧《刑事吉永诚一·泪的事件簿》的原作。</p>\n<h1>半村良</h1>\n<p>半村良（1933年10月27日－2002年3月4日），日本小说家。本名清野平太郎。出生于东京府（现东京都），在东京都立两国高中毕业后，先后做过酒吧侍者等多种职业，在广告公司任职期间与广播公司等建立了密切的关系，后开始这方面的工作。</p>\n<p>1962年短篇小说《收获》（収穫）获得第2届早川科幻小说大赛（ハヤカワ·SFコンテスト）第三名，正式成为作家，上世纪六十年代在《SF杂志》（SFマガジン）上发表若干个短篇小说后，突然不再发表作品，据说和当时《SF杂志》总编辑福岛正实关系不佳，后转入自由创作。</p>\n<p>1971年出版《石之血脉》（石の血脈）开创了浪漫传奇小说流派，这种风格对后世很多作家产生了影响。</p>\n<p>1975年《雨やどり》获得直木奖。</p>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"cover":"https://blog.huangge1199.cn/post/sublimeText4Purchase/bg.jpeg","excerpt":"","more":"<p>今天是3月4日，在推理界，历史的今天有如下事件：</p>\n<ul>\n<li>\n<p>程小青（中国）出席纪念白居易诞辰诗会65周年</p>\n</li>\n<li>\n<p>妹尾韶夫（日本）诞辰130周年</p>\n</li>\n<li>\n<p>詹姆斯·艾尔罗伊（美国）诞辰74周年</p>\n</li>\n<li>\n<p>黑川博行（日本）诞辰73周年</p>\n</li>\n<li>\n<p>半村良（日本）逝世20周年</p>\n</li>\n</ul>\n<h1>程小青</h1>\n<p>程小青（1893—1976）【原名程青心，又名程辉斋】</p>\n<p>籍贯：江苏吴县人。</p>\n<p>身平介绍：少年家贫，曾在钟表店当学徒，自学外语和热爱看书，他18岁时开始从事文学写作，先是与周瘦鹃合作翻译柯南·道尔作品，后来创作《霍桑探案》，一举成名。</p>\n<p>据史料介绍，程小青在21岁时发表的《灯光人影》，被《新闻报》举行的征文大赛选中，他小说中的侦探原名霍森，因排字工人误排，于是便成了霍桑。《霍桑探案》发表之后，程小青不断收到读者大量来信。是读者的鼓励，促使程小青先后写出了《江南燕》、《珠项圈》、《黄浦江中》、《八十四》、《轮下血》、《裹棉刀》、《恐怖的话剧》、《雨夜枪声》、《白衣怪》、《催命符》、《索命钱》、《新婚劫》、《活尸》、《逃犯》、《血手印》、《黑地牢》、《无头案》等30余部侦探小说。著名报人郑逸梅曾称赞他：“毕生精力，尽瘁于此，也就成为侦探小说的巨擘。”</p>\n<p>程小青的创作，据另一位著名报人范烟桥称“模仿了柯南道尔的写法”，但他又塑造了“中国的福尔摩斯”。为了达到这一目的，程小青作为函授生，受业于美国大学函授科，进修犯罪心理学与侦探学的学习，他从理论上学习西欧侦探理论，在实践中又把中国旧社会发生的案例加以改造。他在谈到创作时，多次谈到自己如何设计侦探小说的名字，怎样取材与裁剪，怎样构思开头与结尾，他把美国作家韦尔斯的专著《侦探小说技艺论》和美国心理学家聂克逊博士的专著《著作人应知的心理学》作为教科书。在小说中，程小青设计了霍桑与包朗一对搭档，类似福尔摩斯与华生医生，但在案件的取材上，程小青着重描写旧中国社会弊病引发的凶杀案，注重人物的心理分析，把凶杀与现实生活的投影结合起来，因此形成了自己的特点与风格。</p>\n<h1>妹尾韶夫</h1>\n<p>妹尾韶夫（1892年3月4日－1962年4月19日），日本翻译家、侦探小说作家。出生于冈山县津山市。</p>\n<p>早稻田大学英文系毕业后，1922年为“新青年”等杂志翻译英美侦探小说，其中多数是阿加莎·克里斯蒂的作品。1925年以后以妹尾安艺夫名义创作，发表了30到40个短篇小说。</p>\n<p>在“新青年”担当每月评论的胡铁梅、“宝石”杂志每月评论者小原俊一，据说都是妹尾的笔名。</p>\n<p>1962年因脑溢血去世，终年70岁。</p>\n<h1>詹姆斯·艾尔罗伊</h1>\n<p>詹姆斯·艾尔罗伊 （詹姆斯·艾尔罗瓦） James Ellroy（1948年3月4日美国加州洛杉矶-）</p>\n<p>类型：硬汉；警察程序；私人侦探；倒叙</p>\n<p>主要系列：</p>\n<ul>\n<li>“洛依·霍普金斯”三部曲Lloyd Hopkins trilogy, 1984-1986</li>\n<li>洛杉矶四部曲L.A. quartet, 1987-1992</li>\n<li>American Underworld trilogy/Underworld USA trilogy, 1995-</li>\n</ul>\n<p>艾尔罗伊本名李·厄尔·艾尔罗伊（Lee Earle Ellroy）。父亲阿曼德·艾尔罗伊（Armand Ellroy）是反犹太主义者，副业是会计师，母亲杰尼瓦·奥德丽·“简”·希利克·艾尔罗伊（Geneva Odelia “Jean” Hilliker Ellroy）是注册护士。艾尔罗伊的父母于1940年结婚，1954年离婚。艾尔罗伊被判给母亲，接着搬到了埃尔蒙特市。据艾尔罗伊回忆，母亲经常在周六晚上酗酒。1958年6月22日发生了一件对于艾尔罗伊一生影响深远的事情，那天他的母亲被人谋杀。之后，艾尔罗伊和父亲一起居住。十一岁生日，父亲送给他一本洛杉矶警察局历史的书籍，他仔细阅读了这本书，立志将来当一名作家。艾尔罗伊是一个有强迫症的读者，他常常去图书馆借书，还从书店里偷犯罪小说。</p>\n<p>艾尔罗伊进入犹太费尔法克斯高中（Jewish Fairfax High School），1965年校方知道他父亲的纳粹观点之后将他开除。接着他进入美国陆军，但是很快认识到自己不是当兵的材料。他假装口吃，于是很快退伍。他回家之后不久父亲去世了。</p>\n<p>那段时间，艾尔罗伊就住在街上，靠着入店行窃和入室盗窃为生。他喝酒，有时候还嗑药，占据着无人的房子。1965年到1977年间，艾尔罗伊因为醉酒、偷窃和非法入室而多次被捕。最后被判入狱八个月。刑满释放之后，他做过一些低等的工作，诸如散发传单，递送邮件，色情书店出纳等等。他继续喝酒，滥用鼻用吸入器。因为患上肺炎和妄想症，艾尔罗伊被送去治疗，1975年治愈。接着他找了一些稳定的工作，比如高尔夫和乡村俱乐部的球童，参加戒酒互助协会（Alcoholics Anonymous）之后他开始创作小说。</p>\n<p>艾尔罗伊的第一部长篇小说《布朗的安魂曲》（Brown’s Requiem）是一部半自传性质的犯罪小说，风格类似雷蒙德·钱德勒，小说的主人公弗里兹·布朗（Fritz Brown）曾经是一名警官，他戒酒之后变成了一名私人侦探。第二部《秘密行事》（Clandestine，1982）讲述了一名前警官追踪杀害以前爱人的凶手的故事，获得埃德加奖提名。</p>\n<p>此后，艾尔罗伊的创作速度保持稳健。他先是发表了“洛依·霍普金斯”三部曲，包括《染血之夜》（Blood on the Moon，1984）、《因起此夜》（Because the Night，1984）、《自殺坡》（Suicide Hill，1986）。1984年他辞去球童，全职写作。他又发表了“洛杉矶四部曲”，包括《黑色大丽花》（The Black Dahlia，1987）、《无处藏身》（The Big Nowhere，1988）、《洛杉矶的秘密》（L.A. Confidential，1990）、《白色爵士舞》（White Jazz，1992）。因此在国内和国际上获得了声誉。《无处藏身》或的1990年侦探小说奖（Prix Mystere Award）。《洛杉矶的秘密》被改编成电影，获得奥斯卡奖提名。2006年《黑色大丽花》被搬上大银幕。</p>\n<p>1993年到2004年间，艾尔罗伊在《GQ》杂志上发表了小说和非小说。这些作品结集为《好莱坞夜曲》（Hollywood Nocturnes，1994）、《犯罪之波：来自洛杉矶地下社会的报道和小说》（Crime Wave: Reportage and Fiction from the Underside of L.A.，1999）和《危险的步调》（Breakneck Pace，2000）。</p>\n<p>艾尔罗伊结过两次婚，第一任妻子是玛丽·多赫尔蒂（Mary Doherty），第二任是海伦·诺德（Helen Knode），均离婚。2005年他从康涅狄格州纽卡纳安搬到洛杉矶。（ellry）</p>\n<h1>黑川博行</h1>\n<p>黑川博行（1949年3月4日－），日本小说家。出生于爱媛县。京都市立艺术大学美术学系雕刻科毕业。妻子是日本画家黑川雅子。</p>\n<p>毕业后在高中担任美术教师，1984年以《第二次告别》（二度のお别れ）获三得利推理大奖佳作。1986年《猫眼宝石》（キャッツアイころがった）获第4届三得利推理大奖。1996年《伯爵计划》（カウント·プラン）获第49届日本推理作家协会奖（短篇部门）。</p>\n<p>获得直木奖候补的作品有《伯爵计划》（カウント·プラン）、《疫病神》、《文福茶釜》、《国境》、《恶果》等。</p>\n<p>他还是由船越荣一郎主演的电视连续剧《刑事吉永诚一·泪的事件簿》的原作。</p>\n<h1>半村良</h1>\n<p>半村良（1933年10月27日－2002年3月4日），日本小说家。本名清野平太郎。出生于东京府（现东京都），在东京都立两国高中毕业后，先后做过酒吧侍者等多种职业，在广告公司任职期间与广播公司等建立了密切的关系，后开始这方面的工作。</p>\n<p>1962年短篇小说《收获》（収穫）获得第2届早川科幻小说大赛（ハヤカワ·SFコンテスト）第三名，正式成为作家，上世纪六十年代在《SF杂志》（SFマガジン）上发表若干个短篇小说后，突然不再发表作品，据说和当时《SF杂志》总编辑福岛正实关系不佳，后转入自由创作。</p>\n<p>1971年出版《石之血脉》（石の血脈）开创了浪漫传奇小说流派，这种风格对后世很多作家产生了影响。</p>\n<p>1975年《雨やどり》获得直木奖。</p>\n"},{"title":"推理界的3月5号","date":"2022-03-05T02:45:18.000Z","_content":"\n今天是3月5日，在推理界，历史的今天有如下事件：\n\n- 水谷准（日本）诞辰118周年\n\n- 《广益丛报》（中国）第六十五号刊载署名“冷血（陈景韩）戏作”《歇洛克来游上海第一案》117周年\n\n- 谷克二（日本）诞辰81周年\n\n# 水谷准\n\n　　水谷准（1904年3月5日－2001年3月20日），日本小说家、推理作家、翻译家、编辑。\n\n　　出生于北海道函馆市。旧制函馆中学（现北海道函馆中部高中）中途退学后，进入东京早稻田高中读书。读书期间，1922年以《好敌手》参加“新青年”的有奖征稿第一等入选。早稻田大学文学部法国文学系毕业。1929年接替“新青年”总编辑的职务。1938年一度离职，1939年到1945年再次担任“新青年”的总编辑。\n\n　　1952年《决斗》（ある決闘）获第5届侦探作家俱乐部奖短篇奖。\n\n　　二战之后较多创作与高尔夫球有关的作品。\n\n# 谷克二\n\n　　谷克二（1941年3月5日－），日本小说家，被称为“狩猎冒险小说之王（狩猎冒险小说第一人者）”。出生于宫崎县延冈市。本名谷正胜。\n\n　　1963年毕业于早稻田大学商学系。在德国大众汽车公司工作过，之后去了英国，在伦敦大学主修历史经济学。回国后，开始创作生涯。\n\n　　1974年，凭借处女作《追うもの》获得第1届野性时代新人奖。1978年又以《狙击者》获得第5届角川小说奖。他的作品《サバンナ》（又译作《西班牙的短暂夏天》）以及《越境线》先后获得直木奖候补作。\n","source":"_posts/mystery0305.md","raw":"---\ntitle: 推理界的3月5号\ndate: 2022-03-05 10:45:18\ntags: 推理界的今天\ncategories: 推理\n---\n\n今天是3月5日，在推理界，历史的今天有如下事件：\n\n- 水谷准（日本）诞辰118周年\n\n- 《广益丛报》（中国）第六十五号刊载署名“冷血（陈景韩）戏作”《歇洛克来游上海第一案》117周年\n\n- 谷克二（日本）诞辰81周年\n\n# 水谷准\n\n　　水谷准（1904年3月5日－2001年3月20日），日本小说家、推理作家、翻译家、编辑。\n\n　　出生于北海道函馆市。旧制函馆中学（现北海道函馆中部高中）中途退学后，进入东京早稻田高中读书。读书期间，1922年以《好敌手》参加“新青年”的有奖征稿第一等入选。早稻田大学文学部法国文学系毕业。1929年接替“新青年”总编辑的职务。1938年一度离职，1939年到1945年再次担任“新青年”的总编辑。\n\n　　1952年《决斗》（ある決闘）获第5届侦探作家俱乐部奖短篇奖。\n\n　　二战之后较多创作与高尔夫球有关的作品。\n\n# 谷克二\n\n　　谷克二（1941年3月5日－），日本小说家，被称为“狩猎冒险小说之王（狩猎冒险小说第一人者）”。出生于宫崎县延冈市。本名谷正胜。\n\n　　1963年毕业于早稻田大学商学系。在德国大众汽车公司工作过，之后去了英国，在伦敦大学主修历史经济学。回国后，开始创作生涯。\n\n　　1974年，凭借处女作《追うもの》获得第1届野性时代新人奖。1978年又以《狙击者》获得第5届角川小说奖。他的作品《サバンナ》（又译作《西班牙的短暂夏天》）以及《越境线》先后获得直木奖候补作。\n","slug":"mystery0305","published":1,"updated":"2022-06-03T06:00:55.573Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl42z5h7h00543gn628qs4ma9","content":"<p>今天是3月5日，在推理界，历史的今天有如下事件：</p>\n<ul>\n<li>\n<p>水谷准（日本）诞辰118周年</p>\n</li>\n<li>\n<p>《广益丛报》（中国）第六十五号刊载署名“冷血（陈景韩）戏作”《歇洛克来游上海第一案》117周年</p>\n</li>\n<li>\n<p>谷克二（日本）诞辰81周年</p>\n</li>\n</ul>\n<h1>水谷准</h1>\n<p>水谷准（1904年3月5日－2001年3月20日），日本小说家、推理作家、翻译家、编辑。</p>\n<p>出生于北海道函馆市。旧制函馆中学（现北海道函馆中部高中）中途退学后，进入东京早稻田高中读书。读书期间，1922年以《好敌手》参加“新青年”的有奖征稿第一等入选。早稻田大学文学部法国文学系毕业。1929年接替“新青年”总编辑的职务。1938年一度离职，1939年到1945年再次担任“新青年”的总编辑。</p>\n<p>1952年《决斗》（ある決闘）获第5届侦探作家俱乐部奖短篇奖。</p>\n<p>二战之后较多创作与高尔夫球有关的作品。</p>\n<h1>谷克二</h1>\n<p>谷克二（1941年3月5日－），日本小说家，被称为“狩猎冒险小说之王（狩猎冒险小说第一人者）”。出生于宫崎县延冈市。本名谷正胜。</p>\n<p>1963年毕业于早稻田大学商学系。在德国大众汽车公司工作过，之后去了英国，在伦敦大学主修历史经济学。回国后，开始创作生涯。</p>\n<p>1974年，凭借处女作《追うもの》获得第1届野性时代新人奖。1978年又以《狙击者》获得第5届角川小说奖。他的作品《サバンナ》（又译作《西班牙的短暂夏天》）以及《越境线》先后获得直木奖候补作。</p>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"cover":"https://blog.huangge1199.cn/images/bg.jpeg","excerpt":"","more":"<p>今天是3月5日，在推理界，历史的今天有如下事件：</p>\n<ul>\n<li>\n<p>水谷准（日本）诞辰118周年</p>\n</li>\n<li>\n<p>《广益丛报》（中国）第六十五号刊载署名“冷血（陈景韩）戏作”《歇洛克来游上海第一案》117周年</p>\n</li>\n<li>\n<p>谷克二（日本）诞辰81周年</p>\n</li>\n</ul>\n<h1>水谷准</h1>\n<p>水谷准（1904年3月5日－2001年3月20日），日本小说家、推理作家、翻译家、编辑。</p>\n<p>出生于北海道函馆市。旧制函馆中学（现北海道函馆中部高中）中途退学后，进入东京早稻田高中读书。读书期间，1922年以《好敌手》参加“新青年”的有奖征稿第一等入选。早稻田大学文学部法国文学系毕业。1929年接替“新青年”总编辑的职务。1938年一度离职，1939年到1945年再次担任“新青年”的总编辑。</p>\n<p>1952年《决斗》（ある決闘）获第5届侦探作家俱乐部奖短篇奖。</p>\n<p>二战之后较多创作与高尔夫球有关的作品。</p>\n<h1>谷克二</h1>\n<p>谷克二（1941年3月5日－），日本小说家，被称为“狩猎冒险小说之王（狩猎冒险小说第一人者）”。出生于宫崎县延冈市。本名谷正胜。</p>\n<p>1963年毕业于早稻田大学商学系。在德国大众汽车公司工作过，之后去了英国，在伦敦大学主修历史经济学。回国后，开始创作生涯。</p>\n<p>1974年，凭借处女作《追うもの》获得第1届野性时代新人奖。1978年又以《狙击者》获得第5届角川小说奖。他的作品《サバンナ》（又译作《西班牙的短暂夏天》）以及《越境线》先后获得直木奖候补作。</p>\n"},{"title":"推理界的3月7号","date":"2022-03-07T01:21:47.000Z","_content":"\n今天是3月7日，在推理界，历史的今天有如下事件：\n\n- 仁木悦子（日本）诞辰94周年\n\n- 种村直树（日本）诞辰86周年\n\n- 佐飞通俊（日本）诞辰62周年\n\n- 贾德森·菲利普斯（美国）逝世33周年\n\n# 仁木悦子\n\n　　日本名女推理小说作家。\n\n　　仁木悦子的经历尤其令人注目：1928年生于东京，原名大井三重子、她幼年无忧无虑，但四岁那年患结核性胸椎骨疽病，以致下肢瘫痪，半身不遂。七岁那年父亲去世，不久，母亲也亡故。疾病缠身的仁木悦子幸亏有哥哥大井羲光照顾，他每天教她读书。第二次世界大战爆发，16岁的仁木悦子由哥哥背着来到富山乡下居住。她只读到小学三年级，但却看了不少书，并从18岁起开始写作。她先练习写童话，发表在《儿童俱乐部》和《母亲之友》杂志上，她的30多篇童话小说还结集出版。后来她又成了“克里斯蒂小说迷”，并写出推理小说《猫知道》。这部小说的主角是一对兄妹侦探，哥哥雄太郎是植物系大学生，妹妹悦子是音乐系学生，这对兄妹通过一只猫的经历，侦破了一起谋杀案。作品中渗入作者与她哥哥的影子，推理手法十分细腻，许多伏线埋在紧张的情节之中，把粗心的读者引人迷途，在作品中可见女作家的风格。故事的进展采用侦探的助手叙述的方式，叙述者仁木悦子与作者同名的形式在日本就是由仁木悦子创下的成功先例。之后在日本，作者与作品同名的作品不少。\n\n　　以仁木兄妹为侦探，作者之后继续撰写了《林中之家》、《有刺之树》、《黑色的飘带》等三部长篇和《黄色的花》等若干短篇。 \n\n　　仁木悦子幼时卧病在床，玩伴就是猫，所以她一直喜欢猫，不但让猫在《猫知道》里扮演重要的角色，她所出版的许多推理小说的封面，也都请画家画描，晚年时还主编了一本以“猫”为主题的小说集。她家中的猫则是女佣外出时，从外面捡回来的遭人遗弃的小猫。\n\n　　《猫知道》写于1957年，参加了江户川乱步侦探小说奖的评选。经过评委投票，《猫知道》在96篇征文作品中名列第一，并获第三届江户川乱步奖。\n\n　　由于评委都不认识作者，当仁木悦子由她哥哥大井羲光和亲友抬着参加颁奖仪式时，全场引起了轰动。人们意想不到，一个半身不遂、不能走动的女性竟有如此聪颖的智慧与坚韧的毅力，她赢得了热烈的掌声。在闪光灯中，第一次见到仁木悦子的江户川乱步亲自给她发奖、奖品是一人座“福尔摩斯座像”，还有五万日元的奖金。评委木木高太郎则发表了一段讲话：“《呼啸山庄》在英国文学史上占有不朽的地位；女作家艾米莉·勃朗蒂病魔缠身，能写出这样的杰作。仁木悦子君也是有病在身，相信她也能写出与勃朗蒂媲美的好书。”29岁的仁术悦子激动得热泪盈眶，她是20多年来第一次离开家门。事后她回忆道：“我走进豪华的会场大厅，看见闪闪发光的水晶吊灯，以为自己走进了童话王国。”\n\n　　仁木悦子获奖后，《猫知道》印数剧增。15万册一销而空，后来又拍成电影。丰厚的稿酬收入改善了仁木悦子艰难的处境，她住医院进行了5 次手术，终于能在家中行走，并坐着轮椅车上街观光。一位翻译家同她结了婚，婚后两人和谐美满。仁木悦子不仅成为丈夫的助手，而且又先后写出了7 部长篇推理小说，《林中小屋》（1959 年）、《杀人线路图》（1960年）、《有刺的树》（1961年）、《黑色缎带》（1962年）、《两张底片》（1964年）、《枯叶色的街》（1966年）、《冰冷的街道》（1973年）。有5 部小说仍以兄妹侦探为主角。《两张底片》则是以一对夫妇联手破案。《枯叶色的街》是个贫穷的青年与书店女职员被卷进凶案，成为破案主角。这些推理小说都得到了读者的好评。\n\n　　1980年的<赤的猫>获得第三十四届日本推理作家协会短篇赏。仁木悦子最后于1986年因肾病逝世，享年58岁。\n\n　　《猫知道》被日本评论家誉为推理小说史上的“第二次浪潮”。在同一年，松本清张也发表了推理名篇《点与线》。这两部小说一扫日本侦探小说中阴森诡秘的文风，替而代之清新简朴的风格。仁木悦子以女性细腻的文笔，写出了社会推理小说，尽管她身患重疾、但她的小说却给人乐观健康的感受。她注重细节的挖掘，留给读者深刻的印象。继仁木悦子之后，许多推理小说家都自觉地摆脱“变格派”的风格，推重社会推理小说的写实手法。从这一点上说，仁木悦子对日本推理小说的发展有着重要的贡献。\n\n# 种村直树\n\n　　种村直树（1936年3月7日－），日本作家、随笔家、评论家。\n\n　　1973年开始创作，从事与铁路有关的创作，发表过很多铁路相关的报告文学、时评、游记、推理小说。\n\n　　出生于滋贺县大津市。滋贺县立大津东高中（现滋贺县立膳所高中）、京都大学法学系毕业。\n\n　　1972年在每日新闻当记者。在此期间掌握了丰富的铁道知识和创作能力，在当时“铁路杂志”总编辑竹岛纪元的鼓动下，执笔创作了《列车追迹》并开始连载。成为自由撰稿人之后，成为“社会派”推理小说的主要创作作家之一。\n\n　　代表作《铁道旅行术》、《日本国有铁道最后的事件》、《“青春18车票”之旅》等。\n\n# 佐飞通俊\n　　佐飞通俊（1960年3月7日－），日本作家、文艺评论家。\n\n　　出身于福井县。中央大学文学系哲学科毕业，在新闻社工作。1991年《静音系统》（静かなるシステム）（刊登于“群像”1991年6月号）获第34届群像新人文学奖（评论部门）优秀作品。\n\n　　2006年开始创作小说，2月出版《孤独通告》（円環の孤独，讲谈社小说），同年8月出版《爱因斯坦游戏》（アインシュタイン·ゲーム，讲谈社小说），2007年4月又推出“宴の果て　死は独裁者に”（讲谈社小说）。\n\n# 贾德森·菲利普斯\n\n　　贾德森·菲利普斯，全名贾德森·潘特寇斯特·菲利普斯（Judson Pentecost Philips，1903年8月10号- 1989年3月7日），美国侦探小说作家，他以休·潘特寇斯特、菲利普·欧文的笔名和他的本名发表了100多部侦探小说，上世纪30年代他还写了为数众多的体育运动类小说。\n\n　　他出生在美国马萨诸塞州诺斯菲尔德，1925年从哥伦比亚大学毕业。\n\n　　20世纪的20年代到30年代，菲利普斯开始为“纸浆”杂志撰写短篇小说，他还同时撰写剧本和一家报纸的专栏。1950年，他进入沙龙剧场负责剧本写作和宣传。\n\n　　1973年，他获得美国侦探作家协会（MWA）颁发的最高荣誉奖项——大师奖。\n\n　　1989年，菲利普斯因肺气肿引起并发症，在康涅狄格州迦南去世，享年85岁。他留下妻子诺玛·伯顿·菲利普斯、三个儿子（大卫、约翰、丹尼尔）和一个女儿（卡罗琳·诺伍德）。\n","source":"_posts/mystery0307.md","raw":"---\ntitle: 推理界的3月7号\ndate: 2022-03-07 09:21:47\ntags: 推理界的今天\ncategories: 推理\n---\n\n今天是3月7日，在推理界，历史的今天有如下事件：\n\n- 仁木悦子（日本）诞辰94周年\n\n- 种村直树（日本）诞辰86周年\n\n- 佐飞通俊（日本）诞辰62周年\n\n- 贾德森·菲利普斯（美国）逝世33周年\n\n# 仁木悦子\n\n　　日本名女推理小说作家。\n\n　　仁木悦子的经历尤其令人注目：1928年生于东京，原名大井三重子、她幼年无忧无虑，但四岁那年患结核性胸椎骨疽病，以致下肢瘫痪，半身不遂。七岁那年父亲去世，不久，母亲也亡故。疾病缠身的仁木悦子幸亏有哥哥大井羲光照顾，他每天教她读书。第二次世界大战爆发，16岁的仁木悦子由哥哥背着来到富山乡下居住。她只读到小学三年级，但却看了不少书，并从18岁起开始写作。她先练习写童话，发表在《儿童俱乐部》和《母亲之友》杂志上，她的30多篇童话小说还结集出版。后来她又成了“克里斯蒂小说迷”，并写出推理小说《猫知道》。这部小说的主角是一对兄妹侦探，哥哥雄太郎是植物系大学生，妹妹悦子是音乐系学生，这对兄妹通过一只猫的经历，侦破了一起谋杀案。作品中渗入作者与她哥哥的影子，推理手法十分细腻，许多伏线埋在紧张的情节之中，把粗心的读者引人迷途，在作品中可见女作家的风格。故事的进展采用侦探的助手叙述的方式，叙述者仁木悦子与作者同名的形式在日本就是由仁木悦子创下的成功先例。之后在日本，作者与作品同名的作品不少。\n\n　　以仁木兄妹为侦探，作者之后继续撰写了《林中之家》、《有刺之树》、《黑色的飘带》等三部长篇和《黄色的花》等若干短篇。 \n\n　　仁木悦子幼时卧病在床，玩伴就是猫，所以她一直喜欢猫，不但让猫在《猫知道》里扮演重要的角色，她所出版的许多推理小说的封面，也都请画家画描，晚年时还主编了一本以“猫”为主题的小说集。她家中的猫则是女佣外出时，从外面捡回来的遭人遗弃的小猫。\n\n　　《猫知道》写于1957年，参加了江户川乱步侦探小说奖的评选。经过评委投票，《猫知道》在96篇征文作品中名列第一，并获第三届江户川乱步奖。\n\n　　由于评委都不认识作者，当仁木悦子由她哥哥大井羲光和亲友抬着参加颁奖仪式时，全场引起了轰动。人们意想不到，一个半身不遂、不能走动的女性竟有如此聪颖的智慧与坚韧的毅力，她赢得了热烈的掌声。在闪光灯中，第一次见到仁木悦子的江户川乱步亲自给她发奖、奖品是一人座“福尔摩斯座像”，还有五万日元的奖金。评委木木高太郎则发表了一段讲话：“《呼啸山庄》在英国文学史上占有不朽的地位；女作家艾米莉·勃朗蒂病魔缠身，能写出这样的杰作。仁木悦子君也是有病在身，相信她也能写出与勃朗蒂媲美的好书。”29岁的仁术悦子激动得热泪盈眶，她是20多年来第一次离开家门。事后她回忆道：“我走进豪华的会场大厅，看见闪闪发光的水晶吊灯，以为自己走进了童话王国。”\n\n　　仁木悦子获奖后，《猫知道》印数剧增。15万册一销而空，后来又拍成电影。丰厚的稿酬收入改善了仁木悦子艰难的处境，她住医院进行了5 次手术，终于能在家中行走，并坐着轮椅车上街观光。一位翻译家同她结了婚，婚后两人和谐美满。仁木悦子不仅成为丈夫的助手，而且又先后写出了7 部长篇推理小说，《林中小屋》（1959 年）、《杀人线路图》（1960年）、《有刺的树》（1961年）、《黑色缎带》（1962年）、《两张底片》（1964年）、《枯叶色的街》（1966年）、《冰冷的街道》（1973年）。有5 部小说仍以兄妹侦探为主角。《两张底片》则是以一对夫妇联手破案。《枯叶色的街》是个贫穷的青年与书店女职员被卷进凶案，成为破案主角。这些推理小说都得到了读者的好评。\n\n　　1980年的<赤的猫>获得第三十四届日本推理作家协会短篇赏。仁木悦子最后于1986年因肾病逝世，享年58岁。\n\n　　《猫知道》被日本评论家誉为推理小说史上的“第二次浪潮”。在同一年，松本清张也发表了推理名篇《点与线》。这两部小说一扫日本侦探小说中阴森诡秘的文风，替而代之清新简朴的风格。仁木悦子以女性细腻的文笔，写出了社会推理小说，尽管她身患重疾、但她的小说却给人乐观健康的感受。她注重细节的挖掘，留给读者深刻的印象。继仁木悦子之后，许多推理小说家都自觉地摆脱“变格派”的风格，推重社会推理小说的写实手法。从这一点上说，仁木悦子对日本推理小说的发展有着重要的贡献。\n\n# 种村直树\n\n　　种村直树（1936年3月7日－），日本作家、随笔家、评论家。\n\n　　1973年开始创作，从事与铁路有关的创作，发表过很多铁路相关的报告文学、时评、游记、推理小说。\n\n　　出生于滋贺县大津市。滋贺县立大津东高中（现滋贺县立膳所高中）、京都大学法学系毕业。\n\n　　1972年在每日新闻当记者。在此期间掌握了丰富的铁道知识和创作能力，在当时“铁路杂志”总编辑竹岛纪元的鼓动下，执笔创作了《列车追迹》并开始连载。成为自由撰稿人之后，成为“社会派”推理小说的主要创作作家之一。\n\n　　代表作《铁道旅行术》、《日本国有铁道最后的事件》、《“青春18车票”之旅》等。\n\n# 佐飞通俊\n　　佐飞通俊（1960年3月7日－），日本作家、文艺评论家。\n\n　　出身于福井县。中央大学文学系哲学科毕业，在新闻社工作。1991年《静音系统》（静かなるシステム）（刊登于“群像”1991年6月号）获第34届群像新人文学奖（评论部门）优秀作品。\n\n　　2006年开始创作小说，2月出版《孤独通告》（円環の孤独，讲谈社小说），同年8月出版《爱因斯坦游戏》（アインシュタイン·ゲーム，讲谈社小说），2007年4月又推出“宴の果て　死は独裁者に”（讲谈社小说）。\n\n# 贾德森·菲利普斯\n\n　　贾德森·菲利普斯，全名贾德森·潘特寇斯特·菲利普斯（Judson Pentecost Philips，1903年8月10号- 1989年3月7日），美国侦探小说作家，他以休·潘特寇斯特、菲利普·欧文的笔名和他的本名发表了100多部侦探小说，上世纪30年代他还写了为数众多的体育运动类小说。\n\n　　他出生在美国马萨诸塞州诺斯菲尔德，1925年从哥伦比亚大学毕业。\n\n　　20世纪的20年代到30年代，菲利普斯开始为“纸浆”杂志撰写短篇小说，他还同时撰写剧本和一家报纸的专栏。1950年，他进入沙龙剧场负责剧本写作和宣传。\n\n　　1973年，他获得美国侦探作家协会（MWA）颁发的最高荣誉奖项——大师奖。\n\n　　1989年，菲利普斯因肺气肿引起并发症，在康涅狄格州迦南去世，享年85岁。他留下妻子诺玛·伯顿·菲利普斯、三个儿子（大卫、约翰、丹尼尔）和一个女儿（卡罗琳·诺伍德）。\n","slug":"mystery0307","published":1,"updated":"2022-06-03T06:00:55.573Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl42z5h7j00583gn6cf0l7i11","content":"<p>今天是3月7日，在推理界，历史的今天有如下事件：</p>\n<ul>\n<li>\n<p>仁木悦子（日本）诞辰94周年</p>\n</li>\n<li>\n<p>种村直树（日本）诞辰86周年</p>\n</li>\n<li>\n<p>佐飞通俊（日本）诞辰62周年</p>\n</li>\n<li>\n<p>贾德森·菲利普斯（美国）逝世33周年</p>\n</li>\n</ul>\n<h1>仁木悦子</h1>\n<p>日本名女推理小说作家。</p>\n<p>仁木悦子的经历尤其令人注目：1928年生于东京，原名大井三重子、她幼年无忧无虑，但四岁那年患结核性胸椎骨疽病，以致下肢瘫痪，半身不遂。七岁那年父亲去世，不久，母亲也亡故。疾病缠身的仁木悦子幸亏有哥哥大井羲光照顾，他每天教她读书。第二次世界大战爆发，16岁的仁木悦子由哥哥背着来到富山乡下居住。她只读到小学三年级，但却看了不少书，并从18岁起开始写作。她先练习写童话，发表在《儿童俱乐部》和《母亲之友》杂志上，她的30多篇童话小说还结集出版。后来她又成了“克里斯蒂小说迷”，并写出推理小说《猫知道》。这部小说的主角是一对兄妹侦探，哥哥雄太郎是植物系大学生，妹妹悦子是音乐系学生，这对兄妹通过一只猫的经历，侦破了一起谋杀案。作品中渗入作者与她哥哥的影子，推理手法十分细腻，许多伏线埋在紧张的情节之中，把粗心的读者引人迷途，在作品中可见女作家的风格。故事的进展采用侦探的助手叙述的方式，叙述者仁木悦子与作者同名的形式在日本就是由仁木悦子创下的成功先例。之后在日本，作者与作品同名的作品不少。</p>\n<p>以仁木兄妹为侦探，作者之后继续撰写了《林中之家》、《有刺之树》、《黑色的飘带》等三部长篇和《黄色的花》等若干短篇。</p>\n<p>仁木悦子幼时卧病在床，玩伴就是猫，所以她一直喜欢猫，不但让猫在《猫知道》里扮演重要的角色，她所出版的许多推理小说的封面，也都请画家画描，晚年时还主编了一本以“猫”为主题的小说集。她家中的猫则是女佣外出时，从外面捡回来的遭人遗弃的小猫。</p>\n<p>《猫知道》写于1957年，参加了江户川乱步侦探小说奖的评选。经过评委投票，《猫知道》在96篇征文作品中名列第一，并获第三届江户川乱步奖。</p>\n<p>由于评委都不认识作者，当仁木悦子由她哥哥大井羲光和亲友抬着参加颁奖仪式时，全场引起了轰动。人们意想不到，一个半身不遂、不能走动的女性竟有如此聪颖的智慧与坚韧的毅力，她赢得了热烈的掌声。在闪光灯中，第一次见到仁木悦子的江户川乱步亲自给她发奖、奖品是一人座“福尔摩斯座像”，还有五万日元的奖金。评委木木高太郎则发表了一段讲话：“《呼啸山庄》在英国文学史上占有不朽的地位；女作家艾米莉·勃朗蒂病魔缠身，能写出这样的杰作。仁木悦子君也是有病在身，相信她也能写出与勃朗蒂媲美的好书。”29岁的仁术悦子激动得热泪盈眶，她是20多年来第一次离开家门。事后她回忆道：“我走进豪华的会场大厅，看见闪闪发光的水晶吊灯，以为自己走进了童话王国。”</p>\n<p>仁木悦子获奖后，《猫知道》印数剧增。15万册一销而空，后来又拍成电影。丰厚的稿酬收入改善了仁木悦子艰难的处境，她住医院进行了5 次手术，终于能在家中行走，并坐着轮椅车上街观光。一位翻译家同她结了婚，婚后两人和谐美满。仁木悦子不仅成为丈夫的助手，而且又先后写出了7 部长篇推理小说，《林中小屋》（1959 年）、《杀人线路图》（1960年）、《有刺的树》（1961年）、《黑色缎带》（1962年）、《两张底片》（1964年）、《枯叶色的街》（1966年）、《冰冷的街道》（1973年）。有5 部小说仍以兄妹侦探为主角。《两张底片》则是以一对夫妇联手破案。《枯叶色的街》是个贫穷的青年与书店女职员被卷进凶案，成为破案主角。这些推理小说都得到了读者的好评。</p>\n<p>1980年的&lt;赤的猫&gt;获得第三十四届日本推理作家协会短篇赏。仁木悦子最后于1986年因肾病逝世，享年58岁。</p>\n<p>《猫知道》被日本评论家誉为推理小说史上的“第二次浪潮”。在同一年，松本清张也发表了推理名篇《点与线》。这两部小说一扫日本侦探小说中阴森诡秘的文风，替而代之清新简朴的风格。仁木悦子以女性细腻的文笔，写出了社会推理小说，尽管她身患重疾、但她的小说却给人乐观健康的感受。她注重细节的挖掘，留给读者深刻的印象。继仁木悦子之后，许多推理小说家都自觉地摆脱“变格派”的风格，推重社会推理小说的写实手法。从这一点上说，仁木悦子对日本推理小说的发展有着重要的贡献。</p>\n<h1>种村直树</h1>\n<p>种村直树（1936年3月7日－），日本作家、随笔家、评论家。</p>\n<p>1973年开始创作，从事与铁路有关的创作，发表过很多铁路相关的报告文学、时评、游记、推理小说。</p>\n<p>出生于滋贺县大津市。滋贺县立大津东高中（现滋贺县立膳所高中）、京都大学法学系毕业。</p>\n<p>1972年在每日新闻当记者。在此期间掌握了丰富的铁道知识和创作能力，在当时“铁路杂志”总编辑竹岛纪元的鼓动下，执笔创作了《列车追迹》并开始连载。成为自由撰稿人之后，成为“社会派”推理小说的主要创作作家之一。</p>\n<p>代表作《铁道旅行术》、《日本国有铁道最后的事件》、《“青春18车票”之旅》等。</p>\n<h1>佐飞通俊</h1>\n<p>佐飞通俊（1960年3月7日－），日本作家、文艺评论家。</p>\n<p>出身于福井县。中央大学文学系哲学科毕业，在新闻社工作。1991年《静音系统》（静かなるシステム）（刊登于“群像”1991年6月号）获第34届群像新人文学奖（评论部门）优秀作品。</p>\n<p>2006年开始创作小说，2月出版《孤独通告》（円環の孤独，讲谈社小说），同年8月出版《爱因斯坦游戏》（アインシュタイン·ゲーム，讲谈社小说），2007年4月又推出“宴の果て　死は独裁者に”（讲谈社小说）。</p>\n<h1>贾德森·菲利普斯</h1>\n<p>贾德森·菲利普斯，全名贾德森·潘特寇斯特·菲利普斯（Judson Pentecost Philips，1903年8月10号- 1989年3月7日），美国侦探小说作家，他以休·潘特寇斯特、菲利普·欧文的笔名和他的本名发表了100多部侦探小说，上世纪30年代他还写了为数众多的体育运动类小说。</p>\n<p>他出生在美国马萨诸塞州诺斯菲尔德，1925年从哥伦比亚大学毕业。</p>\n<p>20世纪的20年代到30年代，菲利普斯开始为“纸浆”杂志撰写短篇小说，他还同时撰写剧本和一家报纸的专栏。1950年，他进入沙龙剧场负责剧本写作和宣传。</p>\n<p>1973年，他获得美国侦探作家协会（MWA）颁发的最高荣誉奖项——大师奖。</p>\n<p>1989年，菲利普斯因肺气肿引起并发症，在康涅狄格州迦南去世，享年85岁。他留下妻子诺玛·伯顿·菲利普斯、三个儿子（大卫、约翰、丹尼尔）和一个女儿（卡罗琳·诺伍德）。</p>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"cover":"https://blog.huangge1199.cn/post/pyListSort/bg.jpeg","excerpt":"","more":"<p>今天是3月7日，在推理界，历史的今天有如下事件：</p>\n<ul>\n<li>\n<p>仁木悦子（日本）诞辰94周年</p>\n</li>\n<li>\n<p>种村直树（日本）诞辰86周年</p>\n</li>\n<li>\n<p>佐飞通俊（日本）诞辰62周年</p>\n</li>\n<li>\n<p>贾德森·菲利普斯（美国）逝世33周年</p>\n</li>\n</ul>\n<h1>仁木悦子</h1>\n<p>日本名女推理小说作家。</p>\n<p>仁木悦子的经历尤其令人注目：1928年生于东京，原名大井三重子、她幼年无忧无虑，但四岁那年患结核性胸椎骨疽病，以致下肢瘫痪，半身不遂。七岁那年父亲去世，不久，母亲也亡故。疾病缠身的仁木悦子幸亏有哥哥大井羲光照顾，他每天教她读书。第二次世界大战爆发，16岁的仁木悦子由哥哥背着来到富山乡下居住。她只读到小学三年级，但却看了不少书，并从18岁起开始写作。她先练习写童话，发表在《儿童俱乐部》和《母亲之友》杂志上，她的30多篇童话小说还结集出版。后来她又成了“克里斯蒂小说迷”，并写出推理小说《猫知道》。这部小说的主角是一对兄妹侦探，哥哥雄太郎是植物系大学生，妹妹悦子是音乐系学生，这对兄妹通过一只猫的经历，侦破了一起谋杀案。作品中渗入作者与她哥哥的影子，推理手法十分细腻，许多伏线埋在紧张的情节之中，把粗心的读者引人迷途，在作品中可见女作家的风格。故事的进展采用侦探的助手叙述的方式，叙述者仁木悦子与作者同名的形式在日本就是由仁木悦子创下的成功先例。之后在日本，作者与作品同名的作品不少。</p>\n<p>以仁木兄妹为侦探，作者之后继续撰写了《林中之家》、《有刺之树》、《黑色的飘带》等三部长篇和《黄色的花》等若干短篇。</p>\n<p>仁木悦子幼时卧病在床，玩伴就是猫，所以她一直喜欢猫，不但让猫在《猫知道》里扮演重要的角色，她所出版的许多推理小说的封面，也都请画家画描，晚年时还主编了一本以“猫”为主题的小说集。她家中的猫则是女佣外出时，从外面捡回来的遭人遗弃的小猫。</p>\n<p>《猫知道》写于1957年，参加了江户川乱步侦探小说奖的评选。经过评委投票，《猫知道》在96篇征文作品中名列第一，并获第三届江户川乱步奖。</p>\n<p>由于评委都不认识作者，当仁木悦子由她哥哥大井羲光和亲友抬着参加颁奖仪式时，全场引起了轰动。人们意想不到，一个半身不遂、不能走动的女性竟有如此聪颖的智慧与坚韧的毅力，她赢得了热烈的掌声。在闪光灯中，第一次见到仁木悦子的江户川乱步亲自给她发奖、奖品是一人座“福尔摩斯座像”，还有五万日元的奖金。评委木木高太郎则发表了一段讲话：“《呼啸山庄》在英国文学史上占有不朽的地位；女作家艾米莉·勃朗蒂病魔缠身，能写出这样的杰作。仁木悦子君也是有病在身，相信她也能写出与勃朗蒂媲美的好书。”29岁的仁术悦子激动得热泪盈眶，她是20多年来第一次离开家门。事后她回忆道：“我走进豪华的会场大厅，看见闪闪发光的水晶吊灯，以为自己走进了童话王国。”</p>\n<p>仁木悦子获奖后，《猫知道》印数剧增。15万册一销而空，后来又拍成电影。丰厚的稿酬收入改善了仁木悦子艰难的处境，她住医院进行了5 次手术，终于能在家中行走，并坐着轮椅车上街观光。一位翻译家同她结了婚，婚后两人和谐美满。仁木悦子不仅成为丈夫的助手，而且又先后写出了7 部长篇推理小说，《林中小屋》（1959 年）、《杀人线路图》（1960年）、《有刺的树》（1961年）、《黑色缎带》（1962年）、《两张底片》（1964年）、《枯叶色的街》（1966年）、《冰冷的街道》（1973年）。有5 部小说仍以兄妹侦探为主角。《两张底片》则是以一对夫妇联手破案。《枯叶色的街》是个贫穷的青年与书店女职员被卷进凶案，成为破案主角。这些推理小说都得到了读者的好评。</p>\n<p>1980年的&lt;赤的猫&gt;获得第三十四届日本推理作家协会短篇赏。仁木悦子最后于1986年因肾病逝世，享年58岁。</p>\n<p>《猫知道》被日本评论家誉为推理小说史上的“第二次浪潮”。在同一年，松本清张也发表了推理名篇《点与线》。这两部小说一扫日本侦探小说中阴森诡秘的文风，替而代之清新简朴的风格。仁木悦子以女性细腻的文笔，写出了社会推理小说，尽管她身患重疾、但她的小说却给人乐观健康的感受。她注重细节的挖掘，留给读者深刻的印象。继仁木悦子之后，许多推理小说家都自觉地摆脱“变格派”的风格，推重社会推理小说的写实手法。从这一点上说，仁木悦子对日本推理小说的发展有着重要的贡献。</p>\n<h1>种村直树</h1>\n<p>种村直树（1936年3月7日－），日本作家、随笔家、评论家。</p>\n<p>1973年开始创作，从事与铁路有关的创作，发表过很多铁路相关的报告文学、时评、游记、推理小说。</p>\n<p>出生于滋贺县大津市。滋贺县立大津东高中（现滋贺县立膳所高中）、京都大学法学系毕业。</p>\n<p>1972年在每日新闻当记者。在此期间掌握了丰富的铁道知识和创作能力，在当时“铁路杂志”总编辑竹岛纪元的鼓动下，执笔创作了《列车追迹》并开始连载。成为自由撰稿人之后，成为“社会派”推理小说的主要创作作家之一。</p>\n<p>代表作《铁道旅行术》、《日本国有铁道最后的事件》、《“青春18车票”之旅》等。</p>\n<h1>佐飞通俊</h1>\n<p>佐飞通俊（1960年3月7日－），日本作家、文艺评论家。</p>\n<p>出身于福井县。中央大学文学系哲学科毕业，在新闻社工作。1991年《静音系统》（静かなるシステム）（刊登于“群像”1991年6月号）获第34届群像新人文学奖（评论部门）优秀作品。</p>\n<p>2006年开始创作小说，2月出版《孤独通告》（円環の孤独，讲谈社小说），同年8月出版《爱因斯坦游戏》（アインシュタイン·ゲーム，讲谈社小说），2007年4月又推出“宴の果て　死は独裁者に”（讲谈社小说）。</p>\n<h1>贾德森·菲利普斯</h1>\n<p>贾德森·菲利普斯，全名贾德森·潘特寇斯特·菲利普斯（Judson Pentecost Philips，1903年8月10号- 1989年3月7日），美国侦探小说作家，他以休·潘特寇斯特、菲利普·欧文的笔名和他的本名发表了100多部侦探小说，上世纪30年代他还写了为数众多的体育运动类小说。</p>\n<p>他出生在美国马萨诸塞州诺斯菲尔德，1925年从哥伦比亚大学毕业。</p>\n<p>20世纪的20年代到30年代，菲利普斯开始为“纸浆”杂志撰写短篇小说，他还同时撰写剧本和一家报纸的专栏。1950年，他进入沙龙剧场负责剧本写作和宣传。</p>\n<p>1973年，他获得美国侦探作家协会（MWA）颁发的最高荣誉奖项——大师奖。</p>\n<p>1989年，菲利普斯因肺气肿引起并发症，在康涅狄格州迦南去世，享年85岁。他留下妻子诺玛·伯顿·菲利普斯、三个儿子（大卫、约翰、丹尼尔）和一个女儿（卡罗琳·诺伍德）。</p>\n"},{"title":"推理界的3月10号","date":"2022-03-10T02:40:38.000Z","_content":"\n今天是3月10日，在推理界，历史的今天有如下事件：\n\n- 古处诚二（日本）诞辰52周年\n\n# 古处诚二\n　　1970年出生于褔冈县、并曾经参与航空自卫队长达六年的古处诚二，2000年以自卫队基地为舞台的推理小说《Unknown》获得第十四回梅菲斯特奖，其后同年再发表以地震灾难为主题的《少年们的密室》、及于翌年(2001)再以自卫队组织为主题创作了《未完成》，接着更以战争为题材发表其他类型的非推理小说。2005年以《七月七日》入选直木奖候选\n","source":"_posts/mystery0310.md","raw":"---\ntitle: 推理界的3月10号\ndate: 2022-03-10 10:40:38\ntags: 推理界的今天\ncategories: 推理\n---\n\n今天是3月10日，在推理界，历史的今天有如下事件：\n\n- 古处诚二（日本）诞辰52周年\n\n# 古处诚二\n　　1970年出生于褔冈县、并曾经参与航空自卫队长达六年的古处诚二，2000年以自卫队基地为舞台的推理小说《Unknown》获得第十四回梅菲斯特奖，其后同年再发表以地震灾难为主题的《少年们的密室》、及于翌年(2001)再以自卫队组织为主题创作了《未完成》，接着更以战争为题材发表其他类型的非推理小说。2005年以《七月七日》入选直木奖候选\n","slug":"mystery0310","published":1,"updated":"2022-06-03T06:00:55.573Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl42z5h7k005c3gn67m4t33mn","content":"<p>今天是3月10日，在推理界，历史的今天有如下事件：</p>\n<ul>\n<li>古处诚二（日本）诞辰52周年</li>\n</ul>\n<h1>古处诚二</h1>\n<p>1970年出生于褔冈县、并曾经参与航空自卫队长达六年的古处诚二，2000年以自卫队基地为舞台的推理小说《Unknown》获得第十四回梅菲斯特奖，其后同年再发表以地震灾难为主题的《少年们的密室》、及于翌年(2001)再以自卫队组织为主题创作了《未完成》，接着更以战争为题材发表其他类型的非推理小说。2005年以《七月七日》入选直木奖候选</p>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"cover":"https://blog.huangge1199.cn/post/jpaCompositePK/bg.jpg","excerpt":"","more":"<p>今天是3月10日，在推理界，历史的今天有如下事件：</p>\n<ul>\n<li>古处诚二（日本）诞辰52周年</li>\n</ul>\n<h1>古处诚二</h1>\n<p>1970年出生于褔冈县、并曾经参与航空自卫队长达六年的古处诚二，2000年以自卫队基地为舞台的推理小说《Unknown》获得第十四回梅菲斯特奖，其后同年再发表以地震灾难为主题的《少年们的密室》、及于翌年(2001)再以自卫队组织为主题创作了《未完成》，接着更以战争为题材发表其他类型的非推理小说。2005年以《七月七日》入选直木奖候选</p>\n"},{"title":"推理界的3月11号","date":"2022-03-11T06:33:56.000Z","_content":"今天是3月11日，在推理界，今天在历史上的意义：\n\n- 《东方杂志》（中国）第一期开始连载连载《毒美人》118周年\n- 小说林社（中国）出版《福尔摩斯再生案》第一册118周年\n- 克里斯蒂安娜·布兰德（英国）诞辰115周年\n- 梦野久作（日本）逝世86周年\n- 厄尔·斯坦利·加德纳（美国）逝世52周年\n- 弗瑞德里克·布朗（美国）逝世50周年\n\n# 克里斯蒂安娜·布兰德\n　　克里斯蒂安娜·布兰德（Christianna Brand，1907.3.11－1988.12.17），英国侦探小说作家，儿童文学作家。\n\n　　克里斯蒂安娜·布兰德1907年出生于马来亚，原名为玛丽·克里斯蒂安娜·刘易斯（Mary Christianna Lewis），早年在印度生活。她从事过很多工作，包括模特、舞蹈演员、店员和家庭教师。\n\n　　1941年，她创作了第一本以查尔斯·沃斯为主角的侦探小说《高跟鞋之死》（Death in High Heels），当时她还只是一个销售员。同年，她笔下的英国著名探长考克瑞尔在《晕头转向》（Heads You Lose）一书中初次登场，之后考克瑞尔先后七次出现在布兰德的作品中，考克瑞尔探长是她塑造最成功的侦探形象，以他为主角的侦探小说《绿色危机》（Green for Danger）也是布兰德最有名的小说。这部作品描写的是二次大战中一所医院中发生的故事，一名邮递员被送往手术室，不料却因麻醉过度而死。考克瑞尔探长亲自赶来调查，却不料护士长玛丽恩·贝茨也惨遭杀害……《绿色危机》自1944年出版之后，至今仍不断再版。1946年，《绿色危机》被Eagle－Lion公司拍成电影，由阿拉斯泰尔·希姆饰演探长，获得巨大成功。\n\n　　由于《绿色危机》的成功，1946年，克里斯蒂安娜·布兰德加入了英国侦探作家俱乐部，自此她的创作生涯一发不可收拾，接连发表了多部小说。\n\n　　上世纪50年代末开始，克里斯蒂安娜·布兰德开始专注于撰写各种不同类型的作品和短篇小说。她曾获得三次埃德加奖提名：短篇小说《杯中的毒药》（Poison in the Cup）（1969年2月，《埃勒里·奎因神秘杂志》）、《Twist for Twist》（1967年5月，《埃勒里·奎因神秘杂志》）以及一个有关苏格兰谋杀案的《天堂知道谁》（Heaven Knows Who）（1960年）。\n\n　　1972到1973年间，克里斯蒂安娜·布兰德以其杰出的成就，被推选为英国犯罪作家协会主席。\n\n　　克里斯蒂安娜·布兰德曾经使用过的笔名还有玛丽·安·阿希、安娜贝尔·琼斯、玛丽·罗兰和查娜·汤姆森。她的作品被称为“黄金时代最后的侦探小说”，克里斯蒂安娜·布兰德的作品善于在活泼、幽默的情节以及吸引人的诡计中寻求平衡，她在1988年去世，享年81岁。\n\n\n# 梦野久作\n　　日本著名幻想文学作家、变格派推理大师。\n\n　　本名杉山直树，后改名杉山泰道。\n\n　　曾用笔名有海若蓝平、香俱土三鸟、土原耕作、萌圆、杉山萌圆、沙门萌圆、萌圆山人、萌圆生、萌圆泰道、朴平、白木朴平、三鸟山人、香椎村人、青杉居士、外人某氏、钝骨生、TS生、T生等。\n\n　　一九二六年，梦野久作在《妖鼓》投稿前，曾拿给父亲过目，父亲看过后说“就像梦野久作所写的小说\"。 所谓“梦野久作”是博多地区的方言，意指精神恍惚、成天做白日梦的人。曾有数十个笔名的他自此以后便固定使用了这四个字为其笔名。\n\n　　梦野久作有“妖怪作家”之称，其所属的“变格派”讲究人性的怪奇、丑恶、战栗心理的唯美面，使得推理小说充满了文学艺术气息。其代表作《脑髓地狱》（1935年）被称为日本推理小说的四大奇书之一。\n\n## 生平年表\n　　一八八九年一月四日生于九州福冈市。父亲杉山茂丸是右派教父、玄洋社头目头山满的盟友。直树出生後就由祖父母养育。\n\n　　一八九一年开始学习四书诵读。亲生母亲与父亲离婚另嫁高桥家。\n\n　　一八九二年开始学习能乐。熟读四书，遂有神童之称。\n\n　　一八九五年，进入小学就读，身体虚弱瘦小，多由祖父教授学习。求知欲旺盛，具有绘画方面的天赋。\n\n　　一八九九年，大名寻常小学毕业。进入高等小学就学。\n\n　　一九零二年三月二十日，祖父因中风并发肺炎去世。\n\n　　一九零三年三月，高等小学毕业，四月进入福冈县立中学修猷馆就读。\n\n　　一九零八年三月福冈县立修猷馆中学毕业，十二月一日，以一年志愿兵身份入近卫步兵第一连队，在部队中担任小队长，颇受士兵们的信赖。\n\n　　一九一零年，退伍之后，进入中央大学附属补习班，准备入学考。\n　　\n　　一九一一年，进入庆应大学文科系就读。\n\n　　一九一二年，同父异母之弟五郎去世。二月二十六日，奉命成为陆军步兵少尉。十一月八日，继祖母去世。\n\n　　一九一三年，因为弟弟的猝死，父亲遂令其从庆应大学休学。三月时，依父亲之命前往福冈县糟屋郡香椎村唐原经营果园。\n\n　　一九一五年，于东京本乡的喜福寺剃发为僧。将直树改名为泰道。\n\n　　一九一六年，以行脚僧身份从京都走到吉野山。\n\n　　一九一七年被父亲叫回农园，还俗，继承杉山家业。从本年起，在父亲所组织的右派团体台华社机关杂志《黑白》发表有关谣曲与时事的评论之外，还撰写小说。这段期间使用的笔名有沙门萌圆、杉山萌圆、萌圆泰道等。\n\n　　一九一八年二月二十五日，与镰田昌一的女儿阿仓结婚。连载《冀望日本青年》等。\n\n　　一九一九年，长男龙丸出生。成为九州岛日报记者，开始于家庭专栏发表童话至一九二六年。\n\n　　一九二零年，三十一岁，在父亲所投资之九州日报社当社会新闻记者，一九二二年在该报家庭版陆续发表童谣，所使用的笔名有梅若蓝平、香具上三鸟、上原耕作、三鸟山人等。并以萌圆泰道之笔名，将《吴井娘次》改名为《蜡人偶》连载。\n\n　　一九二一年，移居福冈市荒户町。次男铁儿出生。\n\n　　一九二二年，以杉山萌圆为笔名出版《白发小僧》长篇童话集。\n\n　　一九二三年，九月因关东大地震，以九州岛日报社震灾特派记者身份发表《火烧后细见记》与《东京震灾素描》。\n\n　　一九二四年，辞去九州岛日报社的工作，十月，以杉山泰道名义之《侏儒》，应徵博文馆的推理小说征选活动，获得佳作奖（没出版）。\n\n　　一九二五年四月，再度任职九州日报社。三男参绿出生。\n\n　　一九二六年是梦野久作生涯的转换年，正月开始撰写《脑髓地狱》初稿《狂人的解放治疗》，五月辞去报社工作，十月以初次使用梦野久作之笔名，《新青年》之侦探小说徵文之《妖鼓》，入选二等奖（没有一等奖），由此篇被公认之迟来的处女作，梦野久作登上推理文坛。其笔名是取自福冈博多地区的方言，指精神恍惚，经常寻找梦幻的人。\n\n　　一九二七年二月，停止创作《狂人的解放治疗》初稿，创作短篇连载《乡村事件》。\n\n　　一九二八年，陆续发表《人脸》、《死后之恋》、《瓶装地狱》等。\n\n　　一九二九年，出版《梦野久作集》。陆续发表《押绘的奇迹》、《铁锤》、《飞翔于空中的洋伞》。\n\n　　一九三零年五月，奉命担任妻子老家的福冈市黑门邮局局长。陆续发表《复仇》、《童贞》。\n\n　　一九三一年，陆续发表《椰果》、《犬神博士》、《自白心理》等。\n\n　　一九三二年，出版《押绘的奇迹》。陆续发表《斜坑》、《幽灵与推进机》、《狂气地狱》。\n\n　　一九三三年，一月出版《暗黑公使》，四月出版《冰涯》，五月出版《瓶装地狱》，陆续发表《不冒烟的烟囱》、《爆弹太平记》、《白菊》等。\n\n　　一九三四年，八月辞去黑门邮局局长一职。陆续发表《名君臣之》、《山羊胡编辑长》、《难船小僧》、《杀人直播》、《木魂》、《少女地狱》等。\n\n　　一九三五年，一月出版《脑髓地狱》。三月出版《梅津只园翁传》。七月十九日，父亲茂丸因脑溢血猝死于曲町自宅（享年七十二岁）。十月，借帮父亲举行葬礼之便，携妻子至日本各地旅行。十二月，出版《近世快人传》。陆续发表《微笑哑女》、《超人胡夜博士》、《二重心脏》。\n\n　　一九三六年，二月上京整理父亲遗物，遭遇“二二六\"事件。陆续发表《人肉香肠》、《恶魔祈祷书》。三月出版《少女地狱》，十一日与访客谈话中猝死于东京（死因不详），得年四十七岁。\n\n　　梦野久作有“妖怪作家”之称，其所属的“变格派”讲究人性的怪奇、丑恶、战栗心理的唯美面，使得推理小说充满了文学艺术气息。其代表作《脑髓地狱》（1935年）被称为日本推理小说的四大奇书之一。\n\n# 厄尔·斯坦利·加德纳\nErle Stanley Gardner（1889年7月17日美国马萨诸塞州马尔登-1970年3月11日加州Temecula）\n\n其他署名:\n- yle Corning\n- A. A. Fair\n- Charles M. Green\n- Grant Holiday\n- Carleton Kendrake\n- Charles J. Kenny\n- Robert Parr\n- Dane Rigley\n- Arthur Mann Sellers\n- harles M. Stanton\n- Les Tillray\n\n类型：\n- 大侦探\n- 私人侦探\n- 硬汉\n- 法庭\n\n主要系列：\n- 佩里·梅森Perry Mason, 1933-1973\n- Doug Selby, D.A., 1937-1949\n- Bertha Cool and Donald Lam, 1939-1970\n\n　　加德纳是查尔斯·华尔特人·加德纳（Charles Walter Gardner）和格蕾丝·阿德尔玛·加德纳（Grace Adelma Gardner）之子。他的父亲是一位工程师，因为工作需要到处出差，他将全家搬到西海岸，在加德纳十岁的时候先是搬到了俄勒冈州，1902年又搬到加州奥维尔（Oroville）。加德纳对加州十分喜欢，虽然成年之后他游历四方，但是他还是将加州作为自己的家，并且作为自己笔下人物的背景。\n\n　　加德纳个性独立，勤奋，有想象力，二十一岁时他成为了一名律师，但是他没有进入法律学校而是在律师事务所自学以及担任律师助手，最后通过律师考试。他在洛杉矶西北部的文图拉县开业，很快他因为精明、足智多谋而赢得了声誉，他帮助很多看似不可能打赢官司的委托人获胜。\n\n　　加德纳喜欢户外活动，比如打猎，钓鱼、射箭，他成为作家之前他试过许多不同的生意，三十四岁的时候，他将自己的第一篇小说卖给了一家廉价杂志。他并不是一位有天赋的作家，但是他通过研究那些成功作家的作品以及编辑的意见而进步神速。二三十年代，他为廉价杂志创作了大量短篇小说，并且塑造了一大堆人物。1933年，他出版了第一部长篇小说，主角便是日后著名律师侦探佩里·梅森。那时，他创作速度惊人，每三天便能完成一部一万单词的中篇小说，以至于他无法依靠打自己要而使用口述机，因此他雇请了几位秘书，轮班根据他的口述完成稿件。\n\n　　二次大战之后，加德纳的名声让他的创作数量减少了，因为他涉足其他的事务，包括“最高上诉法院”（Court of Last Resort），这是加德纳和他人创立的一家组织，主要是为了增加美国法律的公正性，还有佩里·梅森系列电视片。\n\n　　1912年，加德纳与纳塔利·塔伯特（Natalie Talbert）结婚，1913年他们生下女儿纳塔利·格蕾丝·加德纳（Natalie Grace Gardner）。1935年，两人分居，不过他们还是朋友，也并未离婚。加德纳一直赡养他的妻子，直到1968年妻子去世。同年，加德纳与他长期以来的秘书艾格尼斯·简·贝斯尔（Agnes Jean Bethell）结婚，贝斯尔被认为是梅森的秘书德拉·斯特里特（Della Street）的原型。1962年，他获得美国侦探作家协会（MWA）大师奖。1970年，加德纳因为癌症去世。\n# 弗瑞德里克·布朗\n　　弗瑞德里克·布朗：Fredric Brown（1906年10月29日美国俄亥俄州辛辛那提-1972年3月11日亚利桑那州图森）\n\n　　类型：私人侦探；硬汉\n\n　　主要系列：Ed and Am Hunter, 1947-1963\n\n　　布朗十多岁的时候父母相继去世，不得不自谋生路。二十年代，他进入汉诺威学院（Hanover College）和辛辛那提大学（Cincinnati University）学习。他于1929年结婚，并且搬到威斯康星州密尔沃基，在那里他为几家出版社担任校对，直到在《密尔沃基期刊》（Milwaukee Journal）找到一份固定的工作。他呆在这家杂志一直到1947年，接着搬到纽约，在一家廉价杂志集团担任编辑。\n\n　　1938年，布朗发表了第一篇小说《镍币之月》（The Moon for a Nickel），刊登在《斯崔特和史密斯侦探小说杂志》（Street and Smith's Detective Story Magazine）。从那时开始，布朗成为廉价杂志的固定投稿者，在不同类型的杂志上发表，包括《一角侦探》（Dime Mystery）、《星球故事》（Planet Stories）、《怪异故事》（Weird Tales）。他在廉价小说读者中拥有一大堆拥趸。\n\n　　布朗第一次普遍的成功是因为发表了第一部长篇小说《传说中的高级夜总会》（The Fabulous Clipjoint，1947），这部作品的主角是一对叔侄组合艾德和阿姆·亨特（Ed and Am Hunter）。他还因此赢得了1984年的埃德加奖。布朗的的经济状况得到改善，他搬到纽约成为一名高级编辑。同时他和第一任妻子海伦（Helen）离婚。\n\n　　他接下来的侦探小说也非常成功，包括《死亡套环》（The Dead Ringer，1948）、《尖叫的米米》（The Screaming Mimi，1949）。1949年末，他遇到了伊丽莎白·查利尔（Elizabeth Charlier），二人结婚后搬到新墨西哥州的陶斯。廉价小说集团倒闭之后，布朗成为了一名受欢迎的犯罪小说家。随着电视在娱乐业中所占的份量越来越重，布朗也将他的小说改编为电视片。\n\n　　布朗的身体一直不好，而且他偶尔酗酒对身体健康更是无益。因为呼吸疾病，布朗和妻子在1954年搬到亚利桑那州图森。尽管他为一些报酬很高的杂志写作，诸如《花花公子》（Playboy），但是他已经在走下坡。他的最后一部长篇小说《墨菲太太的内衣裤》（Mrs. Murphy’s Underpants，1963）已经不是水准之作。他还写了一些短篇小说，但是他全职写作的时代已经过去。1972年，布朗因为肺气肿去世。(ellry)\n\n","source":"_posts/mystery0311.md","raw":"---\ntitle: 推理界的3月11号\ndate: 2022-03-11 14:33:56\ntags: 推理界的今天\ncategories: 推理\n---\n今天是3月11日，在推理界，今天在历史上的意义：\n\n- 《东方杂志》（中国）第一期开始连载连载《毒美人》118周年\n- 小说林社（中国）出版《福尔摩斯再生案》第一册118周年\n- 克里斯蒂安娜·布兰德（英国）诞辰115周年\n- 梦野久作（日本）逝世86周年\n- 厄尔·斯坦利·加德纳（美国）逝世52周年\n- 弗瑞德里克·布朗（美国）逝世50周年\n\n# 克里斯蒂安娜·布兰德\n　　克里斯蒂安娜·布兰德（Christianna Brand，1907.3.11－1988.12.17），英国侦探小说作家，儿童文学作家。\n\n　　克里斯蒂安娜·布兰德1907年出生于马来亚，原名为玛丽·克里斯蒂安娜·刘易斯（Mary Christianna Lewis），早年在印度生活。她从事过很多工作，包括模特、舞蹈演员、店员和家庭教师。\n\n　　1941年，她创作了第一本以查尔斯·沃斯为主角的侦探小说《高跟鞋之死》（Death in High Heels），当时她还只是一个销售员。同年，她笔下的英国著名探长考克瑞尔在《晕头转向》（Heads You Lose）一书中初次登场，之后考克瑞尔先后七次出现在布兰德的作品中，考克瑞尔探长是她塑造最成功的侦探形象，以他为主角的侦探小说《绿色危机》（Green for Danger）也是布兰德最有名的小说。这部作品描写的是二次大战中一所医院中发生的故事，一名邮递员被送往手术室，不料却因麻醉过度而死。考克瑞尔探长亲自赶来调查，却不料护士长玛丽恩·贝茨也惨遭杀害……《绿色危机》自1944年出版之后，至今仍不断再版。1946年，《绿色危机》被Eagle－Lion公司拍成电影，由阿拉斯泰尔·希姆饰演探长，获得巨大成功。\n\n　　由于《绿色危机》的成功，1946年，克里斯蒂安娜·布兰德加入了英国侦探作家俱乐部，自此她的创作生涯一发不可收拾，接连发表了多部小说。\n\n　　上世纪50年代末开始，克里斯蒂安娜·布兰德开始专注于撰写各种不同类型的作品和短篇小说。她曾获得三次埃德加奖提名：短篇小说《杯中的毒药》（Poison in the Cup）（1969年2月，《埃勒里·奎因神秘杂志》）、《Twist for Twist》（1967年5月，《埃勒里·奎因神秘杂志》）以及一个有关苏格兰谋杀案的《天堂知道谁》（Heaven Knows Who）（1960年）。\n\n　　1972到1973年间，克里斯蒂安娜·布兰德以其杰出的成就，被推选为英国犯罪作家协会主席。\n\n　　克里斯蒂安娜·布兰德曾经使用过的笔名还有玛丽·安·阿希、安娜贝尔·琼斯、玛丽·罗兰和查娜·汤姆森。她的作品被称为“黄金时代最后的侦探小说”，克里斯蒂安娜·布兰德的作品善于在活泼、幽默的情节以及吸引人的诡计中寻求平衡，她在1988年去世，享年81岁。\n\n\n# 梦野久作\n　　日本著名幻想文学作家、变格派推理大师。\n\n　　本名杉山直树，后改名杉山泰道。\n\n　　曾用笔名有海若蓝平、香俱土三鸟、土原耕作、萌圆、杉山萌圆、沙门萌圆、萌圆山人、萌圆生、萌圆泰道、朴平、白木朴平、三鸟山人、香椎村人、青杉居士、外人某氏、钝骨生、TS生、T生等。\n\n　　一九二六年，梦野久作在《妖鼓》投稿前，曾拿给父亲过目，父亲看过后说“就像梦野久作所写的小说\"。 所谓“梦野久作”是博多地区的方言，意指精神恍惚、成天做白日梦的人。曾有数十个笔名的他自此以后便固定使用了这四个字为其笔名。\n\n　　梦野久作有“妖怪作家”之称，其所属的“变格派”讲究人性的怪奇、丑恶、战栗心理的唯美面，使得推理小说充满了文学艺术气息。其代表作《脑髓地狱》（1935年）被称为日本推理小说的四大奇书之一。\n\n## 生平年表\n　　一八八九年一月四日生于九州福冈市。父亲杉山茂丸是右派教父、玄洋社头目头山满的盟友。直树出生後就由祖父母养育。\n\n　　一八九一年开始学习四书诵读。亲生母亲与父亲离婚另嫁高桥家。\n\n　　一八九二年开始学习能乐。熟读四书，遂有神童之称。\n\n　　一八九五年，进入小学就读，身体虚弱瘦小，多由祖父教授学习。求知欲旺盛，具有绘画方面的天赋。\n\n　　一八九九年，大名寻常小学毕业。进入高等小学就学。\n\n　　一九零二年三月二十日，祖父因中风并发肺炎去世。\n\n　　一九零三年三月，高等小学毕业，四月进入福冈县立中学修猷馆就读。\n\n　　一九零八年三月福冈县立修猷馆中学毕业，十二月一日，以一年志愿兵身份入近卫步兵第一连队，在部队中担任小队长，颇受士兵们的信赖。\n\n　　一九一零年，退伍之后，进入中央大学附属补习班，准备入学考。\n　　\n　　一九一一年，进入庆应大学文科系就读。\n\n　　一九一二年，同父异母之弟五郎去世。二月二十六日，奉命成为陆军步兵少尉。十一月八日，继祖母去世。\n\n　　一九一三年，因为弟弟的猝死，父亲遂令其从庆应大学休学。三月时，依父亲之命前往福冈县糟屋郡香椎村唐原经营果园。\n\n　　一九一五年，于东京本乡的喜福寺剃发为僧。将直树改名为泰道。\n\n　　一九一六年，以行脚僧身份从京都走到吉野山。\n\n　　一九一七年被父亲叫回农园，还俗，继承杉山家业。从本年起，在父亲所组织的右派团体台华社机关杂志《黑白》发表有关谣曲与时事的评论之外，还撰写小说。这段期间使用的笔名有沙门萌圆、杉山萌圆、萌圆泰道等。\n\n　　一九一八年二月二十五日，与镰田昌一的女儿阿仓结婚。连载《冀望日本青年》等。\n\n　　一九一九年，长男龙丸出生。成为九州岛日报记者，开始于家庭专栏发表童话至一九二六年。\n\n　　一九二零年，三十一岁，在父亲所投资之九州日报社当社会新闻记者，一九二二年在该报家庭版陆续发表童谣，所使用的笔名有梅若蓝平、香具上三鸟、上原耕作、三鸟山人等。并以萌圆泰道之笔名，将《吴井娘次》改名为《蜡人偶》连载。\n\n　　一九二一年，移居福冈市荒户町。次男铁儿出生。\n\n　　一九二二年，以杉山萌圆为笔名出版《白发小僧》长篇童话集。\n\n　　一九二三年，九月因关东大地震，以九州岛日报社震灾特派记者身份发表《火烧后细见记》与《东京震灾素描》。\n\n　　一九二四年，辞去九州岛日报社的工作，十月，以杉山泰道名义之《侏儒》，应徵博文馆的推理小说征选活动，获得佳作奖（没出版）。\n\n　　一九二五年四月，再度任职九州日报社。三男参绿出生。\n\n　　一九二六年是梦野久作生涯的转换年，正月开始撰写《脑髓地狱》初稿《狂人的解放治疗》，五月辞去报社工作，十月以初次使用梦野久作之笔名，《新青年》之侦探小说徵文之《妖鼓》，入选二等奖（没有一等奖），由此篇被公认之迟来的处女作，梦野久作登上推理文坛。其笔名是取自福冈博多地区的方言，指精神恍惚，经常寻找梦幻的人。\n\n　　一九二七年二月，停止创作《狂人的解放治疗》初稿，创作短篇连载《乡村事件》。\n\n　　一九二八年，陆续发表《人脸》、《死后之恋》、《瓶装地狱》等。\n\n　　一九二九年，出版《梦野久作集》。陆续发表《押绘的奇迹》、《铁锤》、《飞翔于空中的洋伞》。\n\n　　一九三零年五月，奉命担任妻子老家的福冈市黑门邮局局长。陆续发表《复仇》、《童贞》。\n\n　　一九三一年，陆续发表《椰果》、《犬神博士》、《自白心理》等。\n\n　　一九三二年，出版《押绘的奇迹》。陆续发表《斜坑》、《幽灵与推进机》、《狂气地狱》。\n\n　　一九三三年，一月出版《暗黑公使》，四月出版《冰涯》，五月出版《瓶装地狱》，陆续发表《不冒烟的烟囱》、《爆弹太平记》、《白菊》等。\n\n　　一九三四年，八月辞去黑门邮局局长一职。陆续发表《名君臣之》、《山羊胡编辑长》、《难船小僧》、《杀人直播》、《木魂》、《少女地狱》等。\n\n　　一九三五年，一月出版《脑髓地狱》。三月出版《梅津只园翁传》。七月十九日，父亲茂丸因脑溢血猝死于曲町自宅（享年七十二岁）。十月，借帮父亲举行葬礼之便，携妻子至日本各地旅行。十二月，出版《近世快人传》。陆续发表《微笑哑女》、《超人胡夜博士》、《二重心脏》。\n\n　　一九三六年，二月上京整理父亲遗物，遭遇“二二六\"事件。陆续发表《人肉香肠》、《恶魔祈祷书》。三月出版《少女地狱》，十一日与访客谈话中猝死于东京（死因不详），得年四十七岁。\n\n　　梦野久作有“妖怪作家”之称，其所属的“变格派”讲究人性的怪奇、丑恶、战栗心理的唯美面，使得推理小说充满了文学艺术气息。其代表作《脑髓地狱》（1935年）被称为日本推理小说的四大奇书之一。\n\n# 厄尔·斯坦利·加德纳\nErle Stanley Gardner（1889年7月17日美国马萨诸塞州马尔登-1970年3月11日加州Temecula）\n\n其他署名:\n- yle Corning\n- A. A. Fair\n- Charles M. Green\n- Grant Holiday\n- Carleton Kendrake\n- Charles J. Kenny\n- Robert Parr\n- Dane Rigley\n- Arthur Mann Sellers\n- harles M. Stanton\n- Les Tillray\n\n类型：\n- 大侦探\n- 私人侦探\n- 硬汉\n- 法庭\n\n主要系列：\n- 佩里·梅森Perry Mason, 1933-1973\n- Doug Selby, D.A., 1937-1949\n- Bertha Cool and Donald Lam, 1939-1970\n\n　　加德纳是查尔斯·华尔特人·加德纳（Charles Walter Gardner）和格蕾丝·阿德尔玛·加德纳（Grace Adelma Gardner）之子。他的父亲是一位工程师，因为工作需要到处出差，他将全家搬到西海岸，在加德纳十岁的时候先是搬到了俄勒冈州，1902年又搬到加州奥维尔（Oroville）。加德纳对加州十分喜欢，虽然成年之后他游历四方，但是他还是将加州作为自己的家，并且作为自己笔下人物的背景。\n\n　　加德纳个性独立，勤奋，有想象力，二十一岁时他成为了一名律师，但是他没有进入法律学校而是在律师事务所自学以及担任律师助手，最后通过律师考试。他在洛杉矶西北部的文图拉县开业，很快他因为精明、足智多谋而赢得了声誉，他帮助很多看似不可能打赢官司的委托人获胜。\n\n　　加德纳喜欢户外活动，比如打猎，钓鱼、射箭，他成为作家之前他试过许多不同的生意，三十四岁的时候，他将自己的第一篇小说卖给了一家廉价杂志。他并不是一位有天赋的作家，但是他通过研究那些成功作家的作品以及编辑的意见而进步神速。二三十年代，他为廉价杂志创作了大量短篇小说，并且塑造了一大堆人物。1933年，他出版了第一部长篇小说，主角便是日后著名律师侦探佩里·梅森。那时，他创作速度惊人，每三天便能完成一部一万单词的中篇小说，以至于他无法依靠打自己要而使用口述机，因此他雇请了几位秘书，轮班根据他的口述完成稿件。\n\n　　二次大战之后，加德纳的名声让他的创作数量减少了，因为他涉足其他的事务，包括“最高上诉法院”（Court of Last Resort），这是加德纳和他人创立的一家组织，主要是为了增加美国法律的公正性，还有佩里·梅森系列电视片。\n\n　　1912年，加德纳与纳塔利·塔伯特（Natalie Talbert）结婚，1913年他们生下女儿纳塔利·格蕾丝·加德纳（Natalie Grace Gardner）。1935年，两人分居，不过他们还是朋友，也并未离婚。加德纳一直赡养他的妻子，直到1968年妻子去世。同年，加德纳与他长期以来的秘书艾格尼斯·简·贝斯尔（Agnes Jean Bethell）结婚，贝斯尔被认为是梅森的秘书德拉·斯特里特（Della Street）的原型。1962年，他获得美国侦探作家协会（MWA）大师奖。1970年，加德纳因为癌症去世。\n# 弗瑞德里克·布朗\n　　弗瑞德里克·布朗：Fredric Brown（1906年10月29日美国俄亥俄州辛辛那提-1972年3月11日亚利桑那州图森）\n\n　　类型：私人侦探；硬汉\n\n　　主要系列：Ed and Am Hunter, 1947-1963\n\n　　布朗十多岁的时候父母相继去世，不得不自谋生路。二十年代，他进入汉诺威学院（Hanover College）和辛辛那提大学（Cincinnati University）学习。他于1929年结婚，并且搬到威斯康星州密尔沃基，在那里他为几家出版社担任校对，直到在《密尔沃基期刊》（Milwaukee Journal）找到一份固定的工作。他呆在这家杂志一直到1947年，接着搬到纽约，在一家廉价杂志集团担任编辑。\n\n　　1938年，布朗发表了第一篇小说《镍币之月》（The Moon for a Nickel），刊登在《斯崔特和史密斯侦探小说杂志》（Street and Smith's Detective Story Magazine）。从那时开始，布朗成为廉价杂志的固定投稿者，在不同类型的杂志上发表，包括《一角侦探》（Dime Mystery）、《星球故事》（Planet Stories）、《怪异故事》（Weird Tales）。他在廉价小说读者中拥有一大堆拥趸。\n\n　　布朗第一次普遍的成功是因为发表了第一部长篇小说《传说中的高级夜总会》（The Fabulous Clipjoint，1947），这部作品的主角是一对叔侄组合艾德和阿姆·亨特（Ed and Am Hunter）。他还因此赢得了1984年的埃德加奖。布朗的的经济状况得到改善，他搬到纽约成为一名高级编辑。同时他和第一任妻子海伦（Helen）离婚。\n\n　　他接下来的侦探小说也非常成功，包括《死亡套环》（The Dead Ringer，1948）、《尖叫的米米》（The Screaming Mimi，1949）。1949年末，他遇到了伊丽莎白·查利尔（Elizabeth Charlier），二人结婚后搬到新墨西哥州的陶斯。廉价小说集团倒闭之后，布朗成为了一名受欢迎的犯罪小说家。随着电视在娱乐业中所占的份量越来越重，布朗也将他的小说改编为电视片。\n\n　　布朗的身体一直不好，而且他偶尔酗酒对身体健康更是无益。因为呼吸疾病，布朗和妻子在1954年搬到亚利桑那州图森。尽管他为一些报酬很高的杂志写作，诸如《花花公子》（Playboy），但是他已经在走下坡。他的最后一部长篇小说《墨菲太太的内衣裤》（Mrs. Murphy’s Underpants，1963）已经不是水准之作。他还写了一些短篇小说，但是他全职写作的时代已经过去。1972年，布朗因为肺气肿去世。(ellry)\n\n","slug":"mystery0311","published":1,"updated":"2022-06-03T06:00:55.573Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl42z5h7l005f3gn6e1la2br8","content":"<p>今天是3月11日，在推理界，今天在历史上的意义：</p>\n<ul>\n<li>《东方杂志》（中国）第一期开始连载连载《毒美人》118周年</li>\n<li>小说林社（中国）出版《福尔摩斯再生案》第一册118周年</li>\n<li>克里斯蒂安娜·布兰德（英国）诞辰115周年</li>\n<li>梦野久作（日本）逝世86周年</li>\n<li>厄尔·斯坦利·加德纳（美国）逝世52周年</li>\n<li>弗瑞德里克·布朗（美国）逝世50周年</li>\n</ul>\n<h1>克里斯蒂安娜·布兰德</h1>\n<p>克里斯蒂安娜·布兰德（Christianna Brand，1907.3.11－1988.12.17），英国侦探小说作家，儿童文学作家。</p>\n<p>克里斯蒂安娜·布兰德1907年出生于马来亚，原名为玛丽·克里斯蒂安娜·刘易斯（Mary Christianna Lewis），早年在印度生活。她从事过很多工作，包括模特、舞蹈演员、店员和家庭教师。</p>\n<p>1941年，她创作了第一本以查尔斯·沃斯为主角的侦探小说《高跟鞋之死》（Death in High Heels），当时她还只是一个销售员。同年，她笔下的英国著名探长考克瑞尔在《晕头转向》（Heads You Lose）一书中初次登场，之后考克瑞尔先后七次出现在布兰德的作品中，考克瑞尔探长是她塑造最成功的侦探形象，以他为主角的侦探小说《绿色危机》（Green for Danger）也是布兰德最有名的小说。这部作品描写的是二次大战中一所医院中发生的故事，一名邮递员被送往手术室，不料却因麻醉过度而死。考克瑞尔探长亲自赶来调查，却不料护士长玛丽恩·贝茨也惨遭杀害……《绿色危机》自1944年出版之后，至今仍不断再版。1946年，《绿色危机》被Eagle－Lion公司拍成电影，由阿拉斯泰尔·希姆饰演探长，获得巨大成功。</p>\n<p>由于《绿色危机》的成功，1946年，克里斯蒂安娜·布兰德加入了英国侦探作家俱乐部，自此她的创作生涯一发不可收拾，接连发表了多部小说。</p>\n<p>上世纪50年代末开始，克里斯蒂安娜·布兰德开始专注于撰写各种不同类型的作品和短篇小说。她曾获得三次埃德加奖提名：短篇小说《杯中的毒药》（Poison in the Cup）（1969年2月，《埃勒里·奎因神秘杂志》）、《Twist for Twist》（1967年5月，《埃勒里·奎因神秘杂志》）以及一个有关苏格兰谋杀案的《天堂知道谁》（Heaven Knows Who）（1960年）。</p>\n<p>1972到1973年间，克里斯蒂安娜·布兰德以其杰出的成就，被推选为英国犯罪作家协会主席。</p>\n<p>克里斯蒂安娜·布兰德曾经使用过的笔名还有玛丽·安·阿希、安娜贝尔·琼斯、玛丽·罗兰和查娜·汤姆森。她的作品被称为“黄金时代最后的侦探小说”，克里斯蒂安娜·布兰德的作品善于在活泼、幽默的情节以及吸引人的诡计中寻求平衡，她在1988年去世，享年81岁。</p>\n<h1>梦野久作</h1>\n<p>日本著名幻想文学作家、变格派推理大师。</p>\n<p>本名杉山直树，后改名杉山泰道。</p>\n<p>曾用笔名有海若蓝平、香俱土三鸟、土原耕作、萌圆、杉山萌圆、沙门萌圆、萌圆山人、萌圆生、萌圆泰道、朴平、白木朴平、三鸟山人、香椎村人、青杉居士、外人某氏、钝骨生、TS生、T生等。</p>\n<p>一九二六年，梦野久作在《妖鼓》投稿前，曾拿给父亲过目，父亲看过后说“就像梦野久作所写的小说&quot;。 所谓“梦野久作”是博多地区的方言，意指精神恍惚、成天做白日梦的人。曾有数十个笔名的他自此以后便固定使用了这四个字为其笔名。</p>\n<p>梦野久作有“妖怪作家”之称，其所属的“变格派”讲究人性的怪奇、丑恶、战栗心理的唯美面，使得推理小说充满了文学艺术气息。其代表作《脑髓地狱》（1935年）被称为日本推理小说的四大奇书之一。</p>\n<h2 id=\"生平年表\">生平年表</h2>\n<p>一八八九年一月四日生于九州福冈市。父亲杉山茂丸是右派教父、玄洋社头目头山满的盟友。直树出生後就由祖父母养育。</p>\n<p>一八九一年开始学习四书诵读。亲生母亲与父亲离婚另嫁高桥家。</p>\n<p>一八九二年开始学习能乐。熟读四书，遂有神童之称。</p>\n<p>一八九五年，进入小学就读，身体虚弱瘦小，多由祖父教授学习。求知欲旺盛，具有绘画方面的天赋。</p>\n<p>一八九九年，大名寻常小学毕业。进入高等小学就学。</p>\n<p>一九零二年三月二十日，祖父因中风并发肺炎去世。</p>\n<p>一九零三年三月，高等小学毕业，四月进入福冈县立中学修猷馆就读。</p>\n<p>一九零八年三月福冈县立修猷馆中学毕业，十二月一日，以一年志愿兵身份入近卫步兵第一连队，在部队中担任小队长，颇受士兵们的信赖。</p>\n<p>一九一零年，退伍之后，进入中央大学附属补习班，准备入学考。<br>\n　　<br>\n　　一九一一年，进入庆应大学文科系就读。</p>\n<p>一九一二年，同父异母之弟五郎去世。二月二十六日，奉命成为陆军步兵少尉。十一月八日，继祖母去世。</p>\n<p>一九一三年，因为弟弟的猝死，父亲遂令其从庆应大学休学。三月时，依父亲之命前往福冈县糟屋郡香椎村唐原经营果园。</p>\n<p>一九一五年，于东京本乡的喜福寺剃发为僧。将直树改名为泰道。</p>\n<p>一九一六年，以行脚僧身份从京都走到吉野山。</p>\n<p>一九一七年被父亲叫回农园，还俗，继承杉山家业。从本年起，在父亲所组织的右派团体台华社机关杂志《黑白》发表有关谣曲与时事的评论之外，还撰写小说。这段期间使用的笔名有沙门萌圆、杉山萌圆、萌圆泰道等。</p>\n<p>一九一八年二月二十五日，与镰田昌一的女儿阿仓结婚。连载《冀望日本青年》等。</p>\n<p>一九一九年，长男龙丸出生。成为九州岛日报记者，开始于家庭专栏发表童话至一九二六年。</p>\n<p>一九二零年，三十一岁，在父亲所投资之九州日报社当社会新闻记者，一九二二年在该报家庭版陆续发表童谣，所使用的笔名有梅若蓝平、香具上三鸟、上原耕作、三鸟山人等。并以萌圆泰道之笔名，将《吴井娘次》改名为《蜡人偶》连载。</p>\n<p>一九二一年，移居福冈市荒户町。次男铁儿出生。</p>\n<p>一九二二年，以杉山萌圆为笔名出版《白发小僧》长篇童话集。</p>\n<p>一九二三年，九月因关东大地震，以九州岛日报社震灾特派记者身份发表《火烧后细见记》与《东京震灾素描》。</p>\n<p>一九二四年，辞去九州岛日报社的工作，十月，以杉山泰道名义之《侏儒》，应徵博文馆的推理小说征选活动，获得佳作奖（没出版）。</p>\n<p>一九二五年四月，再度任职九州日报社。三男参绿出生。</p>\n<p>一九二六年是梦野久作生涯的转换年，正月开始撰写《脑髓地狱》初稿《狂人的解放治疗》，五月辞去报社工作，十月以初次使用梦野久作之笔名，《新青年》之侦探小说徵文之《妖鼓》，入选二等奖（没有一等奖），由此篇被公认之迟来的处女作，梦野久作登上推理文坛。其笔名是取自福冈博多地区的方言，指精神恍惚，经常寻找梦幻的人。</p>\n<p>一九二七年二月，停止创作《狂人的解放治疗》初稿，创作短篇连载《乡村事件》。</p>\n<p>一九二八年，陆续发表《人脸》、《死后之恋》、《瓶装地狱》等。</p>\n<p>一九二九年，出版《梦野久作集》。陆续发表《押绘的奇迹》、《铁锤》、《飞翔于空中的洋伞》。</p>\n<p>一九三零年五月，奉命担任妻子老家的福冈市黑门邮局局长。陆续发表《复仇》、《童贞》。</p>\n<p>一九三一年，陆续发表《椰果》、《犬神博士》、《自白心理》等。</p>\n<p>一九三二年，出版《押绘的奇迹》。陆续发表《斜坑》、《幽灵与推进机》、《狂气地狱》。</p>\n<p>一九三三年，一月出版《暗黑公使》，四月出版《冰涯》，五月出版《瓶装地狱》，陆续发表《不冒烟的烟囱》、《爆弹太平记》、《白菊》等。</p>\n<p>一九三四年，八月辞去黑门邮局局长一职。陆续发表《名君臣之》、《山羊胡编辑长》、《难船小僧》、《杀人直播》、《木魂》、《少女地狱》等。</p>\n<p>一九三五年，一月出版《脑髓地狱》。三月出版《梅津只园翁传》。七月十九日，父亲茂丸因脑溢血猝死于曲町自宅（享年七十二岁）。十月，借帮父亲举行葬礼之便，携妻子至日本各地旅行。十二月，出版《近世快人传》。陆续发表《微笑哑女》、《超人胡夜博士》、《二重心脏》。</p>\n<p>一九三六年，二月上京整理父亲遗物，遭遇“二二六&quot;事件。陆续发表《人肉香肠》、《恶魔祈祷书》。三月出版《少女地狱》，十一日与访客谈话中猝死于东京（死因不详），得年四十七岁。</p>\n<p>梦野久作有“妖怪作家”之称，其所属的“变格派”讲究人性的怪奇、丑恶、战栗心理的唯美面，使得推理小说充满了文学艺术气息。其代表作《脑髓地狱》（1935年）被称为日本推理小说的四大奇书之一。</p>\n<h1>厄尔·斯坦利·加德纳</h1>\n<p>Erle Stanley Gardner（1889年7月17日美国马萨诸塞州马尔登-1970年3月11日加州Temecula）</p>\n<p>其他署名:</p>\n<ul>\n<li>yle Corning</li>\n<li>A. A. Fair</li>\n<li>Charles M. Green</li>\n<li>Grant Holiday</li>\n<li>Carleton Kendrake</li>\n<li>Charles J. Kenny</li>\n<li>Robert Parr</li>\n<li>Dane Rigley</li>\n<li>Arthur Mann Sellers</li>\n<li>harles M. Stanton</li>\n<li>Les Tillray</li>\n</ul>\n<p>类型：</p>\n<ul>\n<li>大侦探</li>\n<li>私人侦探</li>\n<li>硬汉</li>\n<li>法庭</li>\n</ul>\n<p>主要系列：</p>\n<ul>\n<li>佩里·梅森Perry Mason, 1933-1973</li>\n<li>Doug Selby, D.A., 1937-1949</li>\n<li>Bertha Cool and Donald Lam, 1939-1970</li>\n</ul>\n<p>加德纳是查尔斯·华尔特人·加德纳（Charles Walter Gardner）和格蕾丝·阿德尔玛·加德纳（Grace Adelma Gardner）之子。他的父亲是一位工程师，因为工作需要到处出差，他将全家搬到西海岸，在加德纳十岁的时候先是搬到了俄勒冈州，1902年又搬到加州奥维尔（Oroville）。加德纳对加州十分喜欢，虽然成年之后他游历四方，但是他还是将加州作为自己的家，并且作为自己笔下人物的背景。</p>\n<p>加德纳个性独立，勤奋，有想象力，二十一岁时他成为了一名律师，但是他没有进入法律学校而是在律师事务所自学以及担任律师助手，最后通过律师考试。他在洛杉矶西北部的文图拉县开业，很快他因为精明、足智多谋而赢得了声誉，他帮助很多看似不可能打赢官司的委托人获胜。</p>\n<p>加德纳喜欢户外活动，比如打猎，钓鱼、射箭，他成为作家之前他试过许多不同的生意，三十四岁的时候，他将自己的第一篇小说卖给了一家廉价杂志。他并不是一位有天赋的作家，但是他通过研究那些成功作家的作品以及编辑的意见而进步神速。二三十年代，他为廉价杂志创作了大量短篇小说，并且塑造了一大堆人物。1933年，他出版了第一部长篇小说，主角便是日后著名律师侦探佩里·梅森。那时，他创作速度惊人，每三天便能完成一部一万单词的中篇小说，以至于他无法依靠打自己要而使用口述机，因此他雇请了几位秘书，轮班根据他的口述完成稿件。</p>\n<p>二次大战之后，加德纳的名声让他的创作数量减少了，因为他涉足其他的事务，包括“最高上诉法院”（Court of Last Resort），这是加德纳和他人创立的一家组织，主要是为了增加美国法律的公正性，还有佩里·梅森系列电视片。</p>\n<p>1912年，加德纳与纳塔利·塔伯特（Natalie Talbert）结婚，1913年他们生下女儿纳塔利·格蕾丝·加德纳（Natalie Grace Gardner）。1935年，两人分居，不过他们还是朋友，也并未离婚。加德纳一直赡养他的妻子，直到1968年妻子去世。同年，加德纳与他长期以来的秘书艾格尼斯·简·贝斯尔（Agnes Jean Bethell）结婚，贝斯尔被认为是梅森的秘书德拉·斯特里特（Della Street）的原型。1962年，他获得美国侦探作家协会（MWA）大师奖。1970年，加德纳因为癌症去世。</p>\n<h1>弗瑞德里克·布朗</h1>\n<p>弗瑞德里克·布朗：Fredric Brown（1906年10月29日美国俄亥俄州辛辛那提-1972年3月11日亚利桑那州图森）</p>\n<p>类型：私人侦探；硬汉</p>\n<p>主要系列：Ed and Am Hunter, 1947-1963</p>\n<p>布朗十多岁的时候父母相继去世，不得不自谋生路。二十年代，他进入汉诺威学院（Hanover College）和辛辛那提大学（Cincinnati University）学习。他于1929年结婚，并且搬到威斯康星州密尔沃基，在那里他为几家出版社担任校对，直到在《密尔沃基期刊》（Milwaukee Journal）找到一份固定的工作。他呆在这家杂志一直到1947年，接着搬到纽约，在一家廉价杂志集团担任编辑。</p>\n<p>1938年，布朗发表了第一篇小说《镍币之月》（The Moon for a Nickel），刊登在《斯崔特和史密斯侦探小说杂志》（Street and Smith’s Detective Story Magazine）。从那时开始，布朗成为廉价杂志的固定投稿者，在不同类型的杂志上发表，包括《一角侦探》（Dime Mystery）、《星球故事》（Planet Stories）、《怪异故事》（Weird Tales）。他在廉价小说读者中拥有一大堆拥趸。</p>\n<p>布朗第一次普遍的成功是因为发表了第一部长篇小说《传说中的高级夜总会》（The Fabulous Clipjoint，1947），这部作品的主角是一对叔侄组合艾德和阿姆·亨特（Ed and Am Hunter）。他还因此赢得了1984年的埃德加奖。布朗的的经济状况得到改善，他搬到纽约成为一名高级编辑。同时他和第一任妻子海伦（Helen）离婚。</p>\n<p>他接下来的侦探小说也非常成功，包括《死亡套环》（The Dead Ringer，1948）、《尖叫的米米》（The Screaming Mimi，1949）。1949年末，他遇到了伊丽莎白·查利尔（Elizabeth Charlier），二人结婚后搬到新墨西哥州的陶斯。廉价小说集团倒闭之后，布朗成为了一名受欢迎的犯罪小说家。随着电视在娱乐业中所占的份量越来越重，布朗也将他的小说改编为电视片。</p>\n<p>布朗的身体一直不好，而且他偶尔酗酒对身体健康更是无益。因为呼吸疾病，布朗和妻子在1954年搬到亚利桑那州图森。尽管他为一些报酬很高的杂志写作，诸如《花花公子》（Playboy），但是他已经在走下坡。他的最后一部长篇小说《墨菲太太的内衣裤》（Mrs. Murphy’s Underpants，1963）已经不是水准之作。他还写了一些短篇小说，但是他全职写作的时代已经过去。1972年，布朗因为肺气肿去世。(ellry)</p>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"cover":"https://blog.huangge1199.cn/post/day20220120/bg.jpeg","excerpt":"","more":"<p>今天是3月11日，在推理界，今天在历史上的意义：</p>\n<ul>\n<li>《东方杂志》（中国）第一期开始连载连载《毒美人》118周年</li>\n<li>小说林社（中国）出版《福尔摩斯再生案》第一册118周年</li>\n<li>克里斯蒂安娜·布兰德（英国）诞辰115周年</li>\n<li>梦野久作（日本）逝世86周年</li>\n<li>厄尔·斯坦利·加德纳（美国）逝世52周年</li>\n<li>弗瑞德里克·布朗（美国）逝世50周年</li>\n</ul>\n<h1>克里斯蒂安娜·布兰德</h1>\n<p>克里斯蒂安娜·布兰德（Christianna Brand，1907.3.11－1988.12.17），英国侦探小说作家，儿童文学作家。</p>\n<p>克里斯蒂安娜·布兰德1907年出生于马来亚，原名为玛丽·克里斯蒂安娜·刘易斯（Mary Christianna Lewis），早年在印度生活。她从事过很多工作，包括模特、舞蹈演员、店员和家庭教师。</p>\n<p>1941年，她创作了第一本以查尔斯·沃斯为主角的侦探小说《高跟鞋之死》（Death in High Heels），当时她还只是一个销售员。同年，她笔下的英国著名探长考克瑞尔在《晕头转向》（Heads You Lose）一书中初次登场，之后考克瑞尔先后七次出现在布兰德的作品中，考克瑞尔探长是她塑造最成功的侦探形象，以他为主角的侦探小说《绿色危机》（Green for Danger）也是布兰德最有名的小说。这部作品描写的是二次大战中一所医院中发生的故事，一名邮递员被送往手术室，不料却因麻醉过度而死。考克瑞尔探长亲自赶来调查，却不料护士长玛丽恩·贝茨也惨遭杀害……《绿色危机》自1944年出版之后，至今仍不断再版。1946年，《绿色危机》被Eagle－Lion公司拍成电影，由阿拉斯泰尔·希姆饰演探长，获得巨大成功。</p>\n<p>由于《绿色危机》的成功，1946年，克里斯蒂安娜·布兰德加入了英国侦探作家俱乐部，自此她的创作生涯一发不可收拾，接连发表了多部小说。</p>\n<p>上世纪50年代末开始，克里斯蒂安娜·布兰德开始专注于撰写各种不同类型的作品和短篇小说。她曾获得三次埃德加奖提名：短篇小说《杯中的毒药》（Poison in the Cup）（1969年2月，《埃勒里·奎因神秘杂志》）、《Twist for Twist》（1967年5月，《埃勒里·奎因神秘杂志》）以及一个有关苏格兰谋杀案的《天堂知道谁》（Heaven Knows Who）（1960年）。</p>\n<p>1972到1973年间，克里斯蒂安娜·布兰德以其杰出的成就，被推选为英国犯罪作家协会主席。</p>\n<p>克里斯蒂安娜·布兰德曾经使用过的笔名还有玛丽·安·阿希、安娜贝尔·琼斯、玛丽·罗兰和查娜·汤姆森。她的作品被称为“黄金时代最后的侦探小说”，克里斯蒂安娜·布兰德的作品善于在活泼、幽默的情节以及吸引人的诡计中寻求平衡，她在1988年去世，享年81岁。</p>\n<h1>梦野久作</h1>\n<p>日本著名幻想文学作家、变格派推理大师。</p>\n<p>本名杉山直树，后改名杉山泰道。</p>\n<p>曾用笔名有海若蓝平、香俱土三鸟、土原耕作、萌圆、杉山萌圆、沙门萌圆、萌圆山人、萌圆生、萌圆泰道、朴平、白木朴平、三鸟山人、香椎村人、青杉居士、外人某氏、钝骨生、TS生、T生等。</p>\n<p>一九二六年，梦野久作在《妖鼓》投稿前，曾拿给父亲过目，父亲看过后说“就像梦野久作所写的小说&quot;。 所谓“梦野久作”是博多地区的方言，意指精神恍惚、成天做白日梦的人。曾有数十个笔名的他自此以后便固定使用了这四个字为其笔名。</p>\n<p>梦野久作有“妖怪作家”之称，其所属的“变格派”讲究人性的怪奇、丑恶、战栗心理的唯美面，使得推理小说充满了文学艺术气息。其代表作《脑髓地狱》（1935年）被称为日本推理小说的四大奇书之一。</p>\n<h2 id=\"生平年表\">生平年表</h2>\n<p>一八八九年一月四日生于九州福冈市。父亲杉山茂丸是右派教父、玄洋社头目头山满的盟友。直树出生後就由祖父母养育。</p>\n<p>一八九一年开始学习四书诵读。亲生母亲与父亲离婚另嫁高桥家。</p>\n<p>一八九二年开始学习能乐。熟读四书，遂有神童之称。</p>\n<p>一八九五年，进入小学就读，身体虚弱瘦小，多由祖父教授学习。求知欲旺盛，具有绘画方面的天赋。</p>\n<p>一八九九年，大名寻常小学毕业。进入高等小学就学。</p>\n<p>一九零二年三月二十日，祖父因中风并发肺炎去世。</p>\n<p>一九零三年三月，高等小学毕业，四月进入福冈县立中学修猷馆就读。</p>\n<p>一九零八年三月福冈县立修猷馆中学毕业，十二月一日，以一年志愿兵身份入近卫步兵第一连队，在部队中担任小队长，颇受士兵们的信赖。</p>\n<p>一九一零年，退伍之后，进入中央大学附属补习班，准备入学考。<br>\n　　<br>\n　　一九一一年，进入庆应大学文科系就读。</p>\n<p>一九一二年，同父异母之弟五郎去世。二月二十六日，奉命成为陆军步兵少尉。十一月八日，继祖母去世。</p>\n<p>一九一三年，因为弟弟的猝死，父亲遂令其从庆应大学休学。三月时，依父亲之命前往福冈县糟屋郡香椎村唐原经营果园。</p>\n<p>一九一五年，于东京本乡的喜福寺剃发为僧。将直树改名为泰道。</p>\n<p>一九一六年，以行脚僧身份从京都走到吉野山。</p>\n<p>一九一七年被父亲叫回农园，还俗，继承杉山家业。从本年起，在父亲所组织的右派团体台华社机关杂志《黑白》发表有关谣曲与时事的评论之外，还撰写小说。这段期间使用的笔名有沙门萌圆、杉山萌圆、萌圆泰道等。</p>\n<p>一九一八年二月二十五日，与镰田昌一的女儿阿仓结婚。连载《冀望日本青年》等。</p>\n<p>一九一九年，长男龙丸出生。成为九州岛日报记者，开始于家庭专栏发表童话至一九二六年。</p>\n<p>一九二零年，三十一岁，在父亲所投资之九州日报社当社会新闻记者，一九二二年在该报家庭版陆续发表童谣，所使用的笔名有梅若蓝平、香具上三鸟、上原耕作、三鸟山人等。并以萌圆泰道之笔名，将《吴井娘次》改名为《蜡人偶》连载。</p>\n<p>一九二一年，移居福冈市荒户町。次男铁儿出生。</p>\n<p>一九二二年，以杉山萌圆为笔名出版《白发小僧》长篇童话集。</p>\n<p>一九二三年，九月因关东大地震，以九州岛日报社震灾特派记者身份发表《火烧后细见记》与《东京震灾素描》。</p>\n<p>一九二四年，辞去九州岛日报社的工作，十月，以杉山泰道名义之《侏儒》，应徵博文馆的推理小说征选活动，获得佳作奖（没出版）。</p>\n<p>一九二五年四月，再度任职九州日报社。三男参绿出生。</p>\n<p>一九二六年是梦野久作生涯的转换年，正月开始撰写《脑髓地狱》初稿《狂人的解放治疗》，五月辞去报社工作，十月以初次使用梦野久作之笔名，《新青年》之侦探小说徵文之《妖鼓》，入选二等奖（没有一等奖），由此篇被公认之迟来的处女作，梦野久作登上推理文坛。其笔名是取自福冈博多地区的方言，指精神恍惚，经常寻找梦幻的人。</p>\n<p>一九二七年二月，停止创作《狂人的解放治疗》初稿，创作短篇连载《乡村事件》。</p>\n<p>一九二八年，陆续发表《人脸》、《死后之恋》、《瓶装地狱》等。</p>\n<p>一九二九年，出版《梦野久作集》。陆续发表《押绘的奇迹》、《铁锤》、《飞翔于空中的洋伞》。</p>\n<p>一九三零年五月，奉命担任妻子老家的福冈市黑门邮局局长。陆续发表《复仇》、《童贞》。</p>\n<p>一九三一年，陆续发表《椰果》、《犬神博士》、《自白心理》等。</p>\n<p>一九三二年，出版《押绘的奇迹》。陆续发表《斜坑》、《幽灵与推进机》、《狂气地狱》。</p>\n<p>一九三三年，一月出版《暗黑公使》，四月出版《冰涯》，五月出版《瓶装地狱》，陆续发表《不冒烟的烟囱》、《爆弹太平记》、《白菊》等。</p>\n<p>一九三四年，八月辞去黑门邮局局长一职。陆续发表《名君臣之》、《山羊胡编辑长》、《难船小僧》、《杀人直播》、《木魂》、《少女地狱》等。</p>\n<p>一九三五年，一月出版《脑髓地狱》。三月出版《梅津只园翁传》。七月十九日，父亲茂丸因脑溢血猝死于曲町自宅（享年七十二岁）。十月，借帮父亲举行葬礼之便，携妻子至日本各地旅行。十二月，出版《近世快人传》。陆续发表《微笑哑女》、《超人胡夜博士》、《二重心脏》。</p>\n<p>一九三六年，二月上京整理父亲遗物，遭遇“二二六&quot;事件。陆续发表《人肉香肠》、《恶魔祈祷书》。三月出版《少女地狱》，十一日与访客谈话中猝死于东京（死因不详），得年四十七岁。</p>\n<p>梦野久作有“妖怪作家”之称，其所属的“变格派”讲究人性的怪奇、丑恶、战栗心理的唯美面，使得推理小说充满了文学艺术气息。其代表作《脑髓地狱》（1935年）被称为日本推理小说的四大奇书之一。</p>\n<h1>厄尔·斯坦利·加德纳</h1>\n<p>Erle Stanley Gardner（1889年7月17日美国马萨诸塞州马尔登-1970年3月11日加州Temecula）</p>\n<p>其他署名:</p>\n<ul>\n<li>yle Corning</li>\n<li>A. A. Fair</li>\n<li>Charles M. Green</li>\n<li>Grant Holiday</li>\n<li>Carleton Kendrake</li>\n<li>Charles J. Kenny</li>\n<li>Robert Parr</li>\n<li>Dane Rigley</li>\n<li>Arthur Mann Sellers</li>\n<li>harles M. Stanton</li>\n<li>Les Tillray</li>\n</ul>\n<p>类型：</p>\n<ul>\n<li>大侦探</li>\n<li>私人侦探</li>\n<li>硬汉</li>\n<li>法庭</li>\n</ul>\n<p>主要系列：</p>\n<ul>\n<li>佩里·梅森Perry Mason, 1933-1973</li>\n<li>Doug Selby, D.A., 1937-1949</li>\n<li>Bertha Cool and Donald Lam, 1939-1970</li>\n</ul>\n<p>加德纳是查尔斯·华尔特人·加德纳（Charles Walter Gardner）和格蕾丝·阿德尔玛·加德纳（Grace Adelma Gardner）之子。他的父亲是一位工程师，因为工作需要到处出差，他将全家搬到西海岸，在加德纳十岁的时候先是搬到了俄勒冈州，1902年又搬到加州奥维尔（Oroville）。加德纳对加州十分喜欢，虽然成年之后他游历四方，但是他还是将加州作为自己的家，并且作为自己笔下人物的背景。</p>\n<p>加德纳个性独立，勤奋，有想象力，二十一岁时他成为了一名律师，但是他没有进入法律学校而是在律师事务所自学以及担任律师助手，最后通过律师考试。他在洛杉矶西北部的文图拉县开业，很快他因为精明、足智多谋而赢得了声誉，他帮助很多看似不可能打赢官司的委托人获胜。</p>\n<p>加德纳喜欢户外活动，比如打猎，钓鱼、射箭，他成为作家之前他试过许多不同的生意，三十四岁的时候，他将自己的第一篇小说卖给了一家廉价杂志。他并不是一位有天赋的作家，但是他通过研究那些成功作家的作品以及编辑的意见而进步神速。二三十年代，他为廉价杂志创作了大量短篇小说，并且塑造了一大堆人物。1933年，他出版了第一部长篇小说，主角便是日后著名律师侦探佩里·梅森。那时，他创作速度惊人，每三天便能完成一部一万单词的中篇小说，以至于他无法依靠打自己要而使用口述机，因此他雇请了几位秘书，轮班根据他的口述完成稿件。</p>\n<p>二次大战之后，加德纳的名声让他的创作数量减少了，因为他涉足其他的事务，包括“最高上诉法院”（Court of Last Resort），这是加德纳和他人创立的一家组织，主要是为了增加美国法律的公正性，还有佩里·梅森系列电视片。</p>\n<p>1912年，加德纳与纳塔利·塔伯特（Natalie Talbert）结婚，1913年他们生下女儿纳塔利·格蕾丝·加德纳（Natalie Grace Gardner）。1935年，两人分居，不过他们还是朋友，也并未离婚。加德纳一直赡养他的妻子，直到1968年妻子去世。同年，加德纳与他长期以来的秘书艾格尼斯·简·贝斯尔（Agnes Jean Bethell）结婚，贝斯尔被认为是梅森的秘书德拉·斯特里特（Della Street）的原型。1962年，他获得美国侦探作家协会（MWA）大师奖。1970年，加德纳因为癌症去世。</p>\n<h1>弗瑞德里克·布朗</h1>\n<p>弗瑞德里克·布朗：Fredric Brown（1906年10月29日美国俄亥俄州辛辛那提-1972年3月11日亚利桑那州图森）</p>\n<p>类型：私人侦探；硬汉</p>\n<p>主要系列：Ed and Am Hunter, 1947-1963</p>\n<p>布朗十多岁的时候父母相继去世，不得不自谋生路。二十年代，他进入汉诺威学院（Hanover College）和辛辛那提大学（Cincinnati University）学习。他于1929年结婚，并且搬到威斯康星州密尔沃基，在那里他为几家出版社担任校对，直到在《密尔沃基期刊》（Milwaukee Journal）找到一份固定的工作。他呆在这家杂志一直到1947年，接着搬到纽约，在一家廉价杂志集团担任编辑。</p>\n<p>1938年，布朗发表了第一篇小说《镍币之月》（The Moon for a Nickel），刊登在《斯崔特和史密斯侦探小说杂志》（Street and Smith’s Detective Story Magazine）。从那时开始，布朗成为廉价杂志的固定投稿者，在不同类型的杂志上发表，包括《一角侦探》（Dime Mystery）、《星球故事》（Planet Stories）、《怪异故事》（Weird Tales）。他在廉价小说读者中拥有一大堆拥趸。</p>\n<p>布朗第一次普遍的成功是因为发表了第一部长篇小说《传说中的高级夜总会》（The Fabulous Clipjoint，1947），这部作品的主角是一对叔侄组合艾德和阿姆·亨特（Ed and Am Hunter）。他还因此赢得了1984年的埃德加奖。布朗的的经济状况得到改善，他搬到纽约成为一名高级编辑。同时他和第一任妻子海伦（Helen）离婚。</p>\n<p>他接下来的侦探小说也非常成功，包括《死亡套环》（The Dead Ringer，1948）、《尖叫的米米》（The Screaming Mimi，1949）。1949年末，他遇到了伊丽莎白·查利尔（Elizabeth Charlier），二人结婚后搬到新墨西哥州的陶斯。廉价小说集团倒闭之后，布朗成为了一名受欢迎的犯罪小说家。随着电视在娱乐业中所占的份量越来越重，布朗也将他的小说改编为电视片。</p>\n<p>布朗的身体一直不好，而且他偶尔酗酒对身体健康更是无益。因为呼吸疾病，布朗和妻子在1954年搬到亚利桑那州图森。尽管他为一些报酬很高的杂志写作，诸如《花花公子》（Playboy），但是他已经在走下坡。他的最后一部长篇小说《墨菲太太的内衣裤》（Mrs. Murphy’s Underpants，1963）已经不是水准之作。他还写了一些短篇小说，但是他全职写作的时代已经过去。1972年，布朗因为肺气肿去世。(ellry)</p>\n"},{"title":"用nexus部署maven私服","date":"2022-01-12T11:52:40.000Z","cover":"/post/nexusCreate/bg.jpeg","_content":"# nexus 服务部署\n\n由于本人习惯问题，本次继续用docker部署\n\n## 查找docker镜像\n通过https://hub.docker.com/ 网站查找，选用了官方的sonatype/nexus3\n\n## 拉取镜像\n\n```sh\ndocker pull sonatype/nexus3\n```\n\n![image-20220112202513617](image-20220112202513617.png)\n\n## 创建宿主机挂载目录并编写docker-compose.yml\n\n执行命令：\n\n```sh\nvi docker-compose.yml\nmkdir nexus-data\n```\n\ndocker-compose.yml内容：\n\n```sh\nversion: '3'\nservices:\n    nexus3:\n        container_name: nexus3\n        image: sonatype/nexus3:latest\n        environment:\n            - TZ=Asia/Shanghai\n        volumes: \n            - ./nexus-data:/var/nexus-data\n        ports: \n            - 8081:8081\n        restart: always\n```\n\n![image-20220112203927784](image-20220112203927784.png)\n\n## 启动容器\n\n```sh\ndocker-compose up -d\n```\n\n![image-20220112204407509](image-20220112204407509.png)\n\n## 浏览器验证\n\n浏览器中输入http://IP:8081/，出现下面的页面启动完成\n\n![image-20220112204921432](image-20220112204921432.png)\n\n# Nexus 服务的配置\n\n## 浏览器中点击右上角的登录\n\n![image-20220112205557025](image-20220112205557025.png)\n\n##  登录\n\n首次登录会提示密码保存在**/nexus-data/admin.password**（位置可能会变，看提示）\n\n![image-20220112214506743](image-20220112214506743.png)\n\n由于这个目录我们的docker并没有引出来，所以我们要去docker容器内查看\n\n```sh\ndocker exec -it nexus3 /bin/bash\ncat /nexus-data/admin.password\n```\n\n这地方注意下，cat后不会换行，注意看下密码，用户名是admin，文件中存的就是密码\n\n![image-20220112214220341](image-20220112214220341.png)\n\n## 设置密码\n\n登录后：\n\n![image-20220112214637528](image-20220112214637528.png)\n\n点击next设置新密码\n\n![image-20220112214717867](image-20220112214717867.png)\n\n![image-20220112214820826](image-20220112214820826.png)\n\n![image-20220112214831857](image-20220112214831857.png)\n\n## 增加阿里云公共仓库\n\n由于默认的里面没有阿里云仓库，用maven的仓库速度慢，所以增加一个阿里云仓库\n\n![image-20220112215708898](image-20220112215708898.png)\n\n![image-20220112215809631](image-20220112215809631.png)\n\n![image-20220112215951755](image-20220112215951755.png)\n\n![image-20220112220131151](image-20220112220131151.png)\n\n接下来填写信息：name这个随意填，为了方便记忆我填写的aliyun-public-proxy，下面的配置阿里云地址https://maven.aliyun.com/repository/public，两个填好后点击最下方的Create repository\n\n![image-20220112220511830](image-20220112220511830.png)\n\n![image-20220112220741095](image-20220112220741095.png)\n\n## 统一私服\n\n- 编辑**maven-public**\n\n![image-20220112221401367](image-20220112221401367.png)\n\n- 将刚刚的aliyun-public-proxy放入 **group** 中，并调整优先级，然后保存\n\n![image-20220112221517343](image-20220112221517343.png)\n\n![image-20220112221637473](image-20220112221637473.png)\n\n## 查看私服地址\n\n回到上一个页面，点击copy，弹出来的地址就是私服地址\n\n![image-20220112221849871](image-20220112221849871.png)\n\n# 使用私服\n\n注：maven地址：E:\\maven\\apache-maven-3.6.3\n\n## maven中setting.xml 文件配置\n\n- 下载依赖\n\n  找到mirrors位置，并将其标签内容修改如下\n\n  ```xml\n  <mirrors>\n    <!-- mirror\n     | Specifies a repository mirror site to use instead of a given repository. The repository that\n     | this mirror serves has an ID that matches the mirrorOf element of this mirror. IDs are used\n     | for inheritance and direct lookup purposes, and must be unique across the set of mirrors.\n     |\n    <mirror>\n      <id>mirrorId</id>\n      <mirrorOf>repositoryId</mirrorOf>\n      <name>Human Readable Name for this Mirror.</name>\n      <url>http://my.repository.com/repo/path</url>\n    </mirror>\n     -->\n  \t<mirror>\n      <!--该镜像的唯一标识符。id用来区分不同的mirror元素。 -->\n      <id>maven-public</id>\n      <!--镜像名称 -->\n      <name>maven-public</name>\n      <!--*指的是访问任何仓库都使用我们的私服-->\n      <mirrorOf>*</mirrorOf>\n      <!--该镜像的URL。构建系统会优先考虑使用该URL，而非使用默认的服务器URL。 -->\n      <url>http://192.168.1.187:8081/repository/maven-public/</url>     \n    </mirror>\n  </mirrors>\n  ```\n\n- 发布依赖\n\n  找到servers位置，并将其标签内容修改如下\n\n  ```xml\n  <servers>\n    <!-- server\n     | Specifies the authentication information to use when connecting to a particular server, identified by\n     | a unique name within the system (referred to by the 'id' attribute below).\n     |\n     | NOTE: You should either specify username/password OR privateKey/passphrase, since these pairings are\n     |       used together.\n     |\n    <server>\n      <id>deploymentRepo</id>\n      <username>repouser</username>\n      <password>repopwd</password>\n    </server>\n    -->\n    <!-- Another sample, using keys to authenticate.\n    <server>\n      <id>siteServer</id>\n      <privateKey>/path/to/private/key</privateKey>\n      <passphrase>optional; leave empty if not used.</passphrase>\n    </server>\n    -->\n    <server>\n        <id>releases</id>\n        <username>admin</username>\n        <password>123456</password>\n    </server>\n    <server>\n        <id>snapshots</id>\n        <username>admin</username>\n        <password>123456</password>\n    </server>\n  </servers>\n  ```\n\n## 新建maven项目\n\n我这边建了一个Springboot项目\n\n![image-20220112223312451](image-20220112223312451.png)\n\n设置maven路径\n\n![image-20220112224909515](image-20220112224909515.png)\n\n## 发布依赖\n\n1. 项目pom中添加 **distributionManagement** 节点\n\n   ```xml\n   <distributionManagement>\n       <repository>\n           <id>releases</id>\n           <name>Releases</name>\n           <url>http://192.168.1.187:8081/repository/maven-releases/</url>\n       </repository>\n       <snapshotRepository>\n           <id>snapshots</id>\n           <name>Snapshot</name>\n           <url>http://192.168.1.187:8081/repository/maven-snapshots/</url>\n       </snapshotRepository>\n   </distributionManagement>\n   ```\n\n   注：**repository** 里的 **id** 需要和上一步里的 **server id** 名称保持一致。\n\n2. 执行 **mvn deploy** 命令发布：\n\n   ![image-20220112230213213](image-20220112230213213.png)\n\n3. 查看网页，是否部署成功\n\n   注：\n\n   - 若项目版本号末尾带有 **-SNAPSHOT**，则会发布到 **snapshots** 快照版本仓库\n   - 若项目版本号末尾带有 **-RELEASES** 或什么都不带，则会发布到 **releases** 正式版本仓库\n\n   ![image-20220112230645860](image-20220112230645860.png)\n","source":"_posts/nexusCreate.md","raw":"---\ntitle: 用nexus部署maven私服\ndate: 2022-01-12 19:52:40\ntags: [maven,nexus,安装部署]\ncategories: nexus\ncover: bg.jpeg\n---\n# nexus 服务部署\n\n由于本人习惯问题，本次继续用docker部署\n\n## 查找docker镜像\n通过https://hub.docker.com/ 网站查找，选用了官方的sonatype/nexus3\n\n## 拉取镜像\n\n```sh\ndocker pull sonatype/nexus3\n```\n\n![image-20220112202513617](image-20220112202513617.png)\n\n## 创建宿主机挂载目录并编写docker-compose.yml\n\n执行命令：\n\n```sh\nvi docker-compose.yml\nmkdir nexus-data\n```\n\ndocker-compose.yml内容：\n\n```sh\nversion: '3'\nservices:\n    nexus3:\n        container_name: nexus3\n        image: sonatype/nexus3:latest\n        environment:\n            - TZ=Asia/Shanghai\n        volumes: \n            - ./nexus-data:/var/nexus-data\n        ports: \n            - 8081:8081\n        restart: always\n```\n\n![image-20220112203927784](image-20220112203927784.png)\n\n## 启动容器\n\n```sh\ndocker-compose up -d\n```\n\n![image-20220112204407509](image-20220112204407509.png)\n\n## 浏览器验证\n\n浏览器中输入http://IP:8081/，出现下面的页面启动完成\n\n![image-20220112204921432](image-20220112204921432.png)\n\n# Nexus 服务的配置\n\n## 浏览器中点击右上角的登录\n\n![image-20220112205557025](image-20220112205557025.png)\n\n##  登录\n\n首次登录会提示密码保存在**/nexus-data/admin.password**（位置可能会变，看提示）\n\n![image-20220112214506743](image-20220112214506743.png)\n\n由于这个目录我们的docker并没有引出来，所以我们要去docker容器内查看\n\n```sh\ndocker exec -it nexus3 /bin/bash\ncat /nexus-data/admin.password\n```\n\n这地方注意下，cat后不会换行，注意看下密码，用户名是admin，文件中存的就是密码\n\n![image-20220112214220341](image-20220112214220341.png)\n\n## 设置密码\n\n登录后：\n\n![image-20220112214637528](image-20220112214637528.png)\n\n点击next设置新密码\n\n![image-20220112214717867](image-20220112214717867.png)\n\n![image-20220112214820826](image-20220112214820826.png)\n\n![image-20220112214831857](image-20220112214831857.png)\n\n## 增加阿里云公共仓库\n\n由于默认的里面没有阿里云仓库，用maven的仓库速度慢，所以增加一个阿里云仓库\n\n![image-20220112215708898](image-20220112215708898.png)\n\n![image-20220112215809631](image-20220112215809631.png)\n\n![image-20220112215951755](image-20220112215951755.png)\n\n![image-20220112220131151](image-20220112220131151.png)\n\n接下来填写信息：name这个随意填，为了方便记忆我填写的aliyun-public-proxy，下面的配置阿里云地址https://maven.aliyun.com/repository/public，两个填好后点击最下方的Create repository\n\n![image-20220112220511830](image-20220112220511830.png)\n\n![image-20220112220741095](image-20220112220741095.png)\n\n## 统一私服\n\n- 编辑**maven-public**\n\n![image-20220112221401367](image-20220112221401367.png)\n\n- 将刚刚的aliyun-public-proxy放入 **group** 中，并调整优先级，然后保存\n\n![image-20220112221517343](image-20220112221517343.png)\n\n![image-20220112221637473](image-20220112221637473.png)\n\n## 查看私服地址\n\n回到上一个页面，点击copy，弹出来的地址就是私服地址\n\n![image-20220112221849871](image-20220112221849871.png)\n\n# 使用私服\n\n注：maven地址：E:\\maven\\apache-maven-3.6.3\n\n## maven中setting.xml 文件配置\n\n- 下载依赖\n\n  找到mirrors位置，并将其标签内容修改如下\n\n  ```xml\n  <mirrors>\n    <!-- mirror\n     | Specifies a repository mirror site to use instead of a given repository. The repository that\n     | this mirror serves has an ID that matches the mirrorOf element of this mirror. IDs are used\n     | for inheritance and direct lookup purposes, and must be unique across the set of mirrors.\n     |\n    <mirror>\n      <id>mirrorId</id>\n      <mirrorOf>repositoryId</mirrorOf>\n      <name>Human Readable Name for this Mirror.</name>\n      <url>http://my.repository.com/repo/path</url>\n    </mirror>\n     -->\n  \t<mirror>\n      <!--该镜像的唯一标识符。id用来区分不同的mirror元素。 -->\n      <id>maven-public</id>\n      <!--镜像名称 -->\n      <name>maven-public</name>\n      <!--*指的是访问任何仓库都使用我们的私服-->\n      <mirrorOf>*</mirrorOf>\n      <!--该镜像的URL。构建系统会优先考虑使用该URL，而非使用默认的服务器URL。 -->\n      <url>http://192.168.1.187:8081/repository/maven-public/</url>     \n    </mirror>\n  </mirrors>\n  ```\n\n- 发布依赖\n\n  找到servers位置，并将其标签内容修改如下\n\n  ```xml\n  <servers>\n    <!-- server\n     | Specifies the authentication information to use when connecting to a particular server, identified by\n     | a unique name within the system (referred to by the 'id' attribute below).\n     |\n     | NOTE: You should either specify username/password OR privateKey/passphrase, since these pairings are\n     |       used together.\n     |\n    <server>\n      <id>deploymentRepo</id>\n      <username>repouser</username>\n      <password>repopwd</password>\n    </server>\n    -->\n    <!-- Another sample, using keys to authenticate.\n    <server>\n      <id>siteServer</id>\n      <privateKey>/path/to/private/key</privateKey>\n      <passphrase>optional; leave empty if not used.</passphrase>\n    </server>\n    -->\n    <server>\n        <id>releases</id>\n        <username>admin</username>\n        <password>123456</password>\n    </server>\n    <server>\n        <id>snapshots</id>\n        <username>admin</username>\n        <password>123456</password>\n    </server>\n  </servers>\n  ```\n\n## 新建maven项目\n\n我这边建了一个Springboot项目\n\n![image-20220112223312451](image-20220112223312451.png)\n\n设置maven路径\n\n![image-20220112224909515](image-20220112224909515.png)\n\n## 发布依赖\n\n1. 项目pom中添加 **distributionManagement** 节点\n\n   ```xml\n   <distributionManagement>\n       <repository>\n           <id>releases</id>\n           <name>Releases</name>\n           <url>http://192.168.1.187:8081/repository/maven-releases/</url>\n       </repository>\n       <snapshotRepository>\n           <id>snapshots</id>\n           <name>Snapshot</name>\n           <url>http://192.168.1.187:8081/repository/maven-snapshots/</url>\n       </snapshotRepository>\n   </distributionManagement>\n   ```\n\n   注：**repository** 里的 **id** 需要和上一步里的 **server id** 名称保持一致。\n\n2. 执行 **mvn deploy** 命令发布：\n\n   ![image-20220112230213213](image-20220112230213213.png)\n\n3. 查看网页，是否部署成功\n\n   注：\n\n   - 若项目版本号末尾带有 **-SNAPSHOT**，则会发布到 **snapshots** 快照版本仓库\n   - 若项目版本号末尾带有 **-RELEASES** 或什么都不带，则会发布到 **releases** 正式版本仓库\n\n   ![image-20220112230645860](image-20220112230645860.png)\n","slug":"nexusCreate","published":1,"updated":"2022-06-03T06:00:55.573Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl42z5h7m005k3gn6d0hkgigd","content":"<h1>nexus 服务部署</h1>\n<p>由于本人习惯问题，本次继续用docker部署</p>\n<h2 id=\"查找docker镜像\">查找docker镜像</h2>\n<p>通过https://hub.docker.com/ 网站查找，选用了官方的sonatype/nexus3</p>\n<h2 id=\"拉取镜像\">拉取镜像</h2>\n<pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">docker pull sonatype&#x2F;nexus3</code></pre>\n<p><img src=\"image-20220112202513617.png\" alt=\"image-20220112202513617\"></p>\n<h2 id=\"创建宿主机挂载目录并编写docker-compose-yml\">创建宿主机挂载目录并编写docker-compose.yml</h2>\n<p>执行命令：</p>\n<pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">vi docker-compose.yml\nmkdir nexus-data</code></pre>\n<p>docker-compose.yml内容：</p>\n<pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">version: &#39;3&#39;\nservices:\n    nexus3:\n        container_name: nexus3\n        image: sonatype&#x2F;nexus3:latest\n        environment:\n            - TZ&#x3D;Asia&#x2F;Shanghai\n        volumes: \n            - .&#x2F;nexus-data:&#x2F;var&#x2F;nexus-data\n        ports: \n            - 8081:8081\n        restart: always</code></pre>\n<p><img src=\"image-20220112203927784.png\" alt=\"image-20220112203927784\"></p>\n<h2 id=\"启动容器\">启动容器</h2>\n<pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">docker-compose up -d</code></pre>\n<p><img src=\"image-20220112204407509.png\" alt=\"image-20220112204407509\"></p>\n<h2 id=\"浏览器验证\">浏览器验证</h2>\n<p>浏览器中输入http://IP:8081/，出现下面的页面启动完成</p>\n<p><img src=\"image-20220112204921432.png\" alt=\"image-20220112204921432\"></p>\n<h1>Nexus 服务的配置</h1>\n<h2 id=\"浏览器中点击右上角的登录\">浏览器中点击右上角的登录</h2>\n<p><img src=\"image-20220112205557025.png\" alt=\"image-20220112205557025\"></p>\n<h2 id=\"登录\">登录</h2>\n<p>首次登录会提示密码保存在**/nexus-data/admin.password**（位置可能会变，看提示）</p>\n<p><img src=\"image-20220112214506743.png\" alt=\"image-20220112214506743\"></p>\n<p>由于这个目录我们的docker并没有引出来，所以我们要去docker容器内查看</p>\n<pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">docker exec -it nexus3 &#x2F;bin&#x2F;bash\ncat &#x2F;nexus-data&#x2F;admin.password</code></pre>\n<p>这地方注意下，cat后不会换行，注意看下密码，用户名是admin，文件中存的就是密码</p>\n<p><img src=\"image-20220112214220341.png\" alt=\"image-20220112214220341\"></p>\n<h2 id=\"设置密码\">设置密码</h2>\n<p>登录后：</p>\n<p><img src=\"image-20220112214637528.png\" alt=\"image-20220112214637528\"></p>\n<p>点击next设置新密码</p>\n<p><img src=\"image-20220112214717867.png\" alt=\"image-20220112214717867\"></p>\n<p><img src=\"image-20220112214820826.png\" alt=\"image-20220112214820826\"></p>\n<p><img src=\"image-20220112214831857.png\" alt=\"image-20220112214831857\"></p>\n<h2 id=\"增加阿里云公共仓库\">增加阿里云公共仓库</h2>\n<p>由于默认的里面没有阿里云仓库，用maven的仓库速度慢，所以增加一个阿里云仓库</p>\n<p><img src=\"image-20220112215708898.png\" alt=\"image-20220112215708898\"></p>\n<p><img src=\"image-20220112215809631.png\" alt=\"image-20220112215809631\"></p>\n<p><img src=\"image-20220112215951755.png\" alt=\"image-20220112215951755\"></p>\n<p><img src=\"image-20220112220131151.png\" alt=\"image-20220112220131151\"></p>\n<p>接下来填写信息：name这个随意填，为了方便记忆我填写的aliyun-public-proxy，下面的配置阿里云地址https://maven.aliyun.com/repository/public，两个填好后点击最下方的Create repository</p>\n<p><img src=\"image-20220112220511830.png\" alt=\"image-20220112220511830\"></p>\n<p><img src=\"image-20220112220741095.png\" alt=\"image-20220112220741095\"></p>\n<h2 id=\"统一私服\">统一私服</h2>\n<ul>\n<li>编辑<strong>maven-public</strong></li>\n</ul>\n<p><img src=\"image-20220112221401367.png\" alt=\"image-20220112221401367\"></p>\n<ul>\n<li>将刚刚的aliyun-public-proxy放入 <strong>group</strong> 中，并调整优先级，然后保存</li>\n</ul>\n<p><img src=\"image-20220112221517343.png\" alt=\"image-20220112221517343\"></p>\n<p><img src=\"image-20220112221637473.png\" alt=\"image-20220112221637473\"></p>\n<h2 id=\"查看私服地址\">查看私服地址</h2>\n<p>回到上一个页面，点击copy，弹出来的地址就是私服地址</p>\n<p><img src=\"image-20220112221849871.png\" alt=\"image-20220112221849871\"></p>\n<h1>使用私服</h1>\n<p>注：maven地址：E:\\maven\\apache-maven-3.6.3</p>\n<h2 id=\"maven中setting-xml-文件配置\">maven中setting.xml 文件配置</h2>\n<ul>\n<li>\n<p>下载依赖</p>\n<p>找到mirrors位置，并将其标签内容修改如下</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;mirrors&gt;\n  &lt;!-- mirror\n   | Specifies a repository mirror site to use instead of a given repository. The repository that\n   | this mirror serves has an ID that matches the mirrorOf element of this mirror. IDs are used\n   | for inheritance and direct lookup purposes, and must be unique across the set of mirrors.\n   |\n  &lt;mirror&gt;\n    &lt;id&gt;mirrorId&lt;&#x2F;id&gt;\n    &lt;mirrorOf&gt;repositoryId&lt;&#x2F;mirrorOf&gt;\n    &lt;name&gt;Human Readable Name for this Mirror.&lt;&#x2F;name&gt;\n    &lt;url&gt;http:&#x2F;&#x2F;my.repository.com&#x2F;repo&#x2F;path&lt;&#x2F;url&gt;\n  &lt;&#x2F;mirror&gt;\n   --&gt;\n\t&lt;mirror&gt;\n    &lt;!--该镜像的唯一标识符。id用来区分不同的mirror元素。 --&gt;\n    &lt;id&gt;maven-public&lt;&#x2F;id&gt;\n    &lt;!--镜像名称 --&gt;\n    &lt;name&gt;maven-public&lt;&#x2F;name&gt;\n    &lt;!--*指的是访问任何仓库都使用我们的私服--&gt;\n    &lt;mirrorOf&gt;*&lt;&#x2F;mirrorOf&gt;\n    &lt;!--该镜像的URL。构建系统会优先考虑使用该URL，而非使用默认的服务器URL。 --&gt;\n    &lt;url&gt;http:&#x2F;&#x2F;192.168.1.187:8081&#x2F;repository&#x2F;maven-public&#x2F;&lt;&#x2F;url&gt;     \n  &lt;&#x2F;mirror&gt;\n&lt;&#x2F;mirrors&gt;</code></pre>\n</li>\n<li>\n<p>发布依赖</p>\n<p>找到servers位置，并将其标签内容修改如下</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;servers&gt;\n  &lt;!-- server\n   | Specifies the authentication information to use when connecting to a particular server, identified by\n   | a unique name within the system (referred to by the &#39;id&#39; attribute below).\n   |\n   | NOTE: You should either specify username&#x2F;password OR privateKey&#x2F;passphrase, since these pairings are\n   |       used together.\n   |\n  &lt;server&gt;\n    &lt;id&gt;deploymentRepo&lt;&#x2F;id&gt;\n    &lt;username&gt;repouser&lt;&#x2F;username&gt;\n    &lt;password&gt;repopwd&lt;&#x2F;password&gt;\n  &lt;&#x2F;server&gt;\n  --&gt;\n  &lt;!-- Another sample, using keys to authenticate.\n  &lt;server&gt;\n    &lt;id&gt;siteServer&lt;&#x2F;id&gt;\n    &lt;privateKey&gt;&#x2F;path&#x2F;to&#x2F;private&#x2F;key&lt;&#x2F;privateKey&gt;\n    &lt;passphrase&gt;optional; leave empty if not used.&lt;&#x2F;passphrase&gt;\n  &lt;&#x2F;server&gt;\n  --&gt;\n  &lt;server&gt;\n      &lt;id&gt;releases&lt;&#x2F;id&gt;\n      &lt;username&gt;admin&lt;&#x2F;username&gt;\n      &lt;password&gt;123456&lt;&#x2F;password&gt;\n  &lt;&#x2F;server&gt;\n  &lt;server&gt;\n      &lt;id&gt;snapshots&lt;&#x2F;id&gt;\n      &lt;username&gt;admin&lt;&#x2F;username&gt;\n      &lt;password&gt;123456&lt;&#x2F;password&gt;\n  &lt;&#x2F;server&gt;\n&lt;&#x2F;servers&gt;</code></pre>\n</li>\n</ul>\n<h2 id=\"新建maven项目\">新建maven项目</h2>\n<p>我这边建了一个Springboot项目</p>\n<p><img src=\"image-20220112223312451.png\" alt=\"image-20220112223312451\"></p>\n<p>设置maven路径</p>\n<p><img src=\"image-20220112224909515.png\" alt=\"image-20220112224909515\"></p>\n<h2 id=\"发布依赖\">发布依赖</h2>\n<ol>\n<li>\n<p>项目pom中添加 <strong>distributionManagement</strong> 节点</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;distributionManagement&gt;\n    &lt;repository&gt;\n        &lt;id&gt;releases&lt;&#x2F;id&gt;\n        &lt;name&gt;Releases&lt;&#x2F;name&gt;\n        &lt;url&gt;http:&#x2F;&#x2F;192.168.1.187:8081&#x2F;repository&#x2F;maven-releases&#x2F;&lt;&#x2F;url&gt;\n    &lt;&#x2F;repository&gt;\n    &lt;snapshotRepository&gt;\n        &lt;id&gt;snapshots&lt;&#x2F;id&gt;\n        &lt;name&gt;Snapshot&lt;&#x2F;name&gt;\n        &lt;url&gt;http:&#x2F;&#x2F;192.168.1.187:8081&#x2F;repository&#x2F;maven-snapshots&#x2F;&lt;&#x2F;url&gt;\n    &lt;&#x2F;snapshotRepository&gt;\n&lt;&#x2F;distributionManagement&gt;</code></pre>\n<p>注：<strong>repository</strong> 里的 <strong>id</strong> 需要和上一步里的 <strong>server id</strong> 名称保持一致。</p>\n</li>\n<li>\n<p>执行 <strong>mvn deploy</strong> 命令发布：</p>\n<p><img src=\"image-20220112230213213.png\" alt=\"image-20220112230213213\"></p>\n</li>\n<li>\n<p>查看网页，是否部署成功</p>\n<p>注：</p>\n<ul>\n<li>若项目版本号末尾带有 <strong>-SNAPSHOT</strong>，则会发布到 <strong>snapshots</strong> 快照版本仓库</li>\n<li>若项目版本号末尾带有 <strong>-RELEASES</strong> 或什么都不带，则会发布到 <strong>releases</strong> 正式版本仓库</li>\n</ul>\n<p><img src=\"image-20220112230645860.png\" alt=\"image-20220112230645860\"></p>\n</li>\n</ol>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"excerpt":"","more":"<h1>nexus 服务部署</h1>\n<p>由于本人习惯问题，本次继续用docker部署</p>\n<h2 id=\"查找docker镜像\">查找docker镜像</h2>\n<p>通过https://hub.docker.com/ 网站查找，选用了官方的sonatype/nexus3</p>\n<h2 id=\"拉取镜像\">拉取镜像</h2>\n<pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">docker pull sonatype&#x2F;nexus3</code></pre>\n<p><img src=\"image-20220112202513617.png\" alt=\"image-20220112202513617\"></p>\n<h2 id=\"创建宿主机挂载目录并编写docker-compose-yml\">创建宿主机挂载目录并编写docker-compose.yml</h2>\n<p>执行命令：</p>\n<pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">vi docker-compose.yml\nmkdir nexus-data</code></pre>\n<p>docker-compose.yml内容：</p>\n<pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">version: &#39;3&#39;\nservices:\n    nexus3:\n        container_name: nexus3\n        image: sonatype&#x2F;nexus3:latest\n        environment:\n            - TZ&#x3D;Asia&#x2F;Shanghai\n        volumes: \n            - .&#x2F;nexus-data:&#x2F;var&#x2F;nexus-data\n        ports: \n            - 8081:8081\n        restart: always</code></pre>\n<p><img src=\"image-20220112203927784.png\" alt=\"image-20220112203927784\"></p>\n<h2 id=\"启动容器\">启动容器</h2>\n<pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">docker-compose up -d</code></pre>\n<p><img src=\"image-20220112204407509.png\" alt=\"image-20220112204407509\"></p>\n<h2 id=\"浏览器验证\">浏览器验证</h2>\n<p>浏览器中输入http://IP:8081/，出现下面的页面启动完成</p>\n<p><img src=\"image-20220112204921432.png\" alt=\"image-20220112204921432\"></p>\n<h1>Nexus 服务的配置</h1>\n<h2 id=\"浏览器中点击右上角的登录\">浏览器中点击右上角的登录</h2>\n<p><img src=\"image-20220112205557025.png\" alt=\"image-20220112205557025\"></p>\n<h2 id=\"登录\">登录</h2>\n<p>首次登录会提示密码保存在**/nexus-data/admin.password**（位置可能会变，看提示）</p>\n<p><img src=\"image-20220112214506743.png\" alt=\"image-20220112214506743\"></p>\n<p>由于这个目录我们的docker并没有引出来，所以我们要去docker容器内查看</p>\n<pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">docker exec -it nexus3 &#x2F;bin&#x2F;bash\ncat &#x2F;nexus-data&#x2F;admin.password</code></pre>\n<p>这地方注意下，cat后不会换行，注意看下密码，用户名是admin，文件中存的就是密码</p>\n<p><img src=\"image-20220112214220341.png\" alt=\"image-20220112214220341\"></p>\n<h2 id=\"设置密码\">设置密码</h2>\n<p>登录后：</p>\n<p><img src=\"image-20220112214637528.png\" alt=\"image-20220112214637528\"></p>\n<p>点击next设置新密码</p>\n<p><img src=\"image-20220112214717867.png\" alt=\"image-20220112214717867\"></p>\n<p><img src=\"image-20220112214820826.png\" alt=\"image-20220112214820826\"></p>\n<p><img src=\"image-20220112214831857.png\" alt=\"image-20220112214831857\"></p>\n<h2 id=\"增加阿里云公共仓库\">增加阿里云公共仓库</h2>\n<p>由于默认的里面没有阿里云仓库，用maven的仓库速度慢，所以增加一个阿里云仓库</p>\n<p><img src=\"image-20220112215708898.png\" alt=\"image-20220112215708898\"></p>\n<p><img src=\"image-20220112215809631.png\" alt=\"image-20220112215809631\"></p>\n<p><img src=\"image-20220112215951755.png\" alt=\"image-20220112215951755\"></p>\n<p><img src=\"image-20220112220131151.png\" alt=\"image-20220112220131151\"></p>\n<p>接下来填写信息：name这个随意填，为了方便记忆我填写的aliyun-public-proxy，下面的配置阿里云地址https://maven.aliyun.com/repository/public，两个填好后点击最下方的Create repository</p>\n<p><img src=\"image-20220112220511830.png\" alt=\"image-20220112220511830\"></p>\n<p><img src=\"image-20220112220741095.png\" alt=\"image-20220112220741095\"></p>\n<h2 id=\"统一私服\">统一私服</h2>\n<ul>\n<li>编辑<strong>maven-public</strong></li>\n</ul>\n<p><img src=\"image-20220112221401367.png\" alt=\"image-20220112221401367\"></p>\n<ul>\n<li>将刚刚的aliyun-public-proxy放入 <strong>group</strong> 中，并调整优先级，然后保存</li>\n</ul>\n<p><img src=\"image-20220112221517343.png\" alt=\"image-20220112221517343\"></p>\n<p><img src=\"image-20220112221637473.png\" alt=\"image-20220112221637473\"></p>\n<h2 id=\"查看私服地址\">查看私服地址</h2>\n<p>回到上一个页面，点击copy，弹出来的地址就是私服地址</p>\n<p><img src=\"image-20220112221849871.png\" alt=\"image-20220112221849871\"></p>\n<h1>使用私服</h1>\n<p>注：maven地址：E:\\maven\\apache-maven-3.6.3</p>\n<h2 id=\"maven中setting-xml-文件配置\">maven中setting.xml 文件配置</h2>\n<ul>\n<li>\n<p>下载依赖</p>\n<p>找到mirrors位置，并将其标签内容修改如下</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;mirrors&gt;\n  &lt;!-- mirror\n   | Specifies a repository mirror site to use instead of a given repository. The repository that\n   | this mirror serves has an ID that matches the mirrorOf element of this mirror. IDs are used\n   | for inheritance and direct lookup purposes, and must be unique across the set of mirrors.\n   |\n  &lt;mirror&gt;\n    &lt;id&gt;mirrorId&lt;&#x2F;id&gt;\n    &lt;mirrorOf&gt;repositoryId&lt;&#x2F;mirrorOf&gt;\n    &lt;name&gt;Human Readable Name for this Mirror.&lt;&#x2F;name&gt;\n    &lt;url&gt;http:&#x2F;&#x2F;my.repository.com&#x2F;repo&#x2F;path&lt;&#x2F;url&gt;\n  &lt;&#x2F;mirror&gt;\n   --&gt;\n\t&lt;mirror&gt;\n    &lt;!--该镜像的唯一标识符。id用来区分不同的mirror元素。 --&gt;\n    &lt;id&gt;maven-public&lt;&#x2F;id&gt;\n    &lt;!--镜像名称 --&gt;\n    &lt;name&gt;maven-public&lt;&#x2F;name&gt;\n    &lt;!--*指的是访问任何仓库都使用我们的私服--&gt;\n    &lt;mirrorOf&gt;*&lt;&#x2F;mirrorOf&gt;\n    &lt;!--该镜像的URL。构建系统会优先考虑使用该URL，而非使用默认的服务器URL。 --&gt;\n    &lt;url&gt;http:&#x2F;&#x2F;192.168.1.187:8081&#x2F;repository&#x2F;maven-public&#x2F;&lt;&#x2F;url&gt;     \n  &lt;&#x2F;mirror&gt;\n&lt;&#x2F;mirrors&gt;</code></pre>\n</li>\n<li>\n<p>发布依赖</p>\n<p>找到servers位置，并将其标签内容修改如下</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;servers&gt;\n  &lt;!-- server\n   | Specifies the authentication information to use when connecting to a particular server, identified by\n   | a unique name within the system (referred to by the &#39;id&#39; attribute below).\n   |\n   | NOTE: You should either specify username&#x2F;password OR privateKey&#x2F;passphrase, since these pairings are\n   |       used together.\n   |\n  &lt;server&gt;\n    &lt;id&gt;deploymentRepo&lt;&#x2F;id&gt;\n    &lt;username&gt;repouser&lt;&#x2F;username&gt;\n    &lt;password&gt;repopwd&lt;&#x2F;password&gt;\n  &lt;&#x2F;server&gt;\n  --&gt;\n  &lt;!-- Another sample, using keys to authenticate.\n  &lt;server&gt;\n    &lt;id&gt;siteServer&lt;&#x2F;id&gt;\n    &lt;privateKey&gt;&#x2F;path&#x2F;to&#x2F;private&#x2F;key&lt;&#x2F;privateKey&gt;\n    &lt;passphrase&gt;optional; leave empty if not used.&lt;&#x2F;passphrase&gt;\n  &lt;&#x2F;server&gt;\n  --&gt;\n  &lt;server&gt;\n      &lt;id&gt;releases&lt;&#x2F;id&gt;\n      &lt;username&gt;admin&lt;&#x2F;username&gt;\n      &lt;password&gt;123456&lt;&#x2F;password&gt;\n  &lt;&#x2F;server&gt;\n  &lt;server&gt;\n      &lt;id&gt;snapshots&lt;&#x2F;id&gt;\n      &lt;username&gt;admin&lt;&#x2F;username&gt;\n      &lt;password&gt;123456&lt;&#x2F;password&gt;\n  &lt;&#x2F;server&gt;\n&lt;&#x2F;servers&gt;</code></pre>\n</li>\n</ul>\n<h2 id=\"新建maven项目\">新建maven项目</h2>\n<p>我这边建了一个Springboot项目</p>\n<p><img src=\"image-20220112223312451.png\" alt=\"image-20220112223312451\"></p>\n<p>设置maven路径</p>\n<p><img src=\"image-20220112224909515.png\" alt=\"image-20220112224909515\"></p>\n<h2 id=\"发布依赖\">发布依赖</h2>\n<ol>\n<li>\n<p>项目pom中添加 <strong>distributionManagement</strong> 节点</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;distributionManagement&gt;\n    &lt;repository&gt;\n        &lt;id&gt;releases&lt;&#x2F;id&gt;\n        &lt;name&gt;Releases&lt;&#x2F;name&gt;\n        &lt;url&gt;http:&#x2F;&#x2F;192.168.1.187:8081&#x2F;repository&#x2F;maven-releases&#x2F;&lt;&#x2F;url&gt;\n    &lt;&#x2F;repository&gt;\n    &lt;snapshotRepository&gt;\n        &lt;id&gt;snapshots&lt;&#x2F;id&gt;\n        &lt;name&gt;Snapshot&lt;&#x2F;name&gt;\n        &lt;url&gt;http:&#x2F;&#x2F;192.168.1.187:8081&#x2F;repository&#x2F;maven-snapshots&#x2F;&lt;&#x2F;url&gt;\n    &lt;&#x2F;snapshotRepository&gt;\n&lt;&#x2F;distributionManagement&gt;</code></pre>\n<p>注：<strong>repository</strong> 里的 <strong>id</strong> 需要和上一步里的 <strong>server id</strong> 名称保持一致。</p>\n</li>\n<li>\n<p>执行 <strong>mvn deploy</strong> 命令发布：</p>\n<p><img src=\"image-20220112230213213.png\" alt=\"image-20220112230213213\"></p>\n</li>\n<li>\n<p>查看网页，是否部署成功</p>\n<p>注：</p>\n<ul>\n<li>若项目版本号末尾带有 <strong>-SNAPSHOT</strong>，则会发布到 <strong>snapshots</strong> 快照版本仓库</li>\n<li>若项目版本号末尾带有 <strong>-RELEASES</strong> 或什么都不带，则会发布到 <strong>releases</strong> 正式版本仓库</li>\n</ul>\n<p><img src=\"image-20220112230645860.png\" alt=\"image-20220112230645860\"></p>\n</li>\n</ol>\n"},{"title":"PhpStorm自动上传修改的内容到服务器","date":"2022-04-30T08:40:05.000Z","_content":"\n# 前言\n\n今天，在修改WordPress时，发现利用宝塔的在线编辑好麻烦，找到方法，确无法直接跳过去，于是乎，我把代码下载到本地了，本来想着利用编辑器来修改就可以跳转了，没想到呀，PhpStorm给了我一个大惊喜，原来它只要配置好久可以直接在本地修改，WordPress刷新就可以直接看到效果。\n\n\n\n接下来，我就详细的说明一下配置的步骤\n\n\n\n# 配置步骤\n\n## 1、设置连接\n\n打开File-->Setting\n\n![](2022-04-30-16-52-00-image.png)\n\n左侧Build,Execution,Deployment-->Deployment，然后右侧加号添加配置选择SFTP\n\n![](2022-04-30-16-54-56-image.png)\n\n弹出的窗口内输入配置的名称，可随意输入，方便记住就好\n\n![](2022-04-30-20-14-03-image.png)\n\n点击红框的位置添加ssh连接\n\n![](2022-04-30-20-12-36-image.png)\n\n在弹出的窗口点击 加号，右边配置\n\n![](2022-04-30-20-20-22-image.png)\n\n点击OK后，ssh会自动添加上，同时再把IP加入到下面的红框内\n\n![](2022-04-30-20-32-37-image.png)\n\n## 2、设置文件映射关系\n\n点击mapping，将服务器上项目的根目录添加到Deployment Path中，如果点击OK\n\n![](2022-04-30-20-35-23-image.png)\n\n## 3、设置自动上传\n\n在PhpStorm中依次点击Tool-->Deployment-->Options...\n\n![](2022-04-30-20-42-16-image.png)\n\n在弹出的窗口中，将红框下拉框设置成第二个，之后只要按Ctrl+S就可将修改的代码上传到服务器上\n\n![](2022-04-30-20-44-58-image.png)\n","source":"_posts/phpDeploy.md","raw":"---\ntitle: PhpStorm自动上传修改的内容到服务器\ndate: 2022-04-30 16:40:05\ntags: [PHP]\ncategories: [PHP]\n---\n\n# 前言\n\n今天，在修改WordPress时，发现利用宝塔的在线编辑好麻烦，找到方法，确无法直接跳过去，于是乎，我把代码下载到本地了，本来想着利用编辑器来修改就可以跳转了，没想到呀，PhpStorm给了我一个大惊喜，原来它只要配置好久可以直接在本地修改，WordPress刷新就可以直接看到效果。\n\n\n\n接下来，我就详细的说明一下配置的步骤\n\n\n\n# 配置步骤\n\n## 1、设置连接\n\n打开File-->Setting\n\n![](2022-04-30-16-52-00-image.png)\n\n左侧Build,Execution,Deployment-->Deployment，然后右侧加号添加配置选择SFTP\n\n![](2022-04-30-16-54-56-image.png)\n\n弹出的窗口内输入配置的名称，可随意输入，方便记住就好\n\n![](2022-04-30-20-14-03-image.png)\n\n点击红框的位置添加ssh连接\n\n![](2022-04-30-20-12-36-image.png)\n\n在弹出的窗口点击 加号，右边配置\n\n![](2022-04-30-20-20-22-image.png)\n\n点击OK后，ssh会自动添加上，同时再把IP加入到下面的红框内\n\n![](2022-04-30-20-32-37-image.png)\n\n## 2、设置文件映射关系\n\n点击mapping，将服务器上项目的根目录添加到Deployment Path中，如果点击OK\n\n![](2022-04-30-20-35-23-image.png)\n\n## 3、设置自动上传\n\n在PhpStorm中依次点击Tool-->Deployment-->Options...\n\n![](2022-04-30-20-42-16-image.png)\n\n在弹出的窗口中，将红框下拉框设置成第二个，之后只要按Ctrl+S就可将修改的代码上传到服务器上\n\n![](2022-04-30-20-44-58-image.png)\n","slug":"phpDeploy","published":1,"updated":"2022-06-03T06:00:55.601Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl42z5h7n005n3gn6ej2xaciq","content":"<h1>前言</h1>\n<p>今天，在修改WordPress时，发现利用宝塔的在线编辑好麻烦，找到方法，确无法直接跳过去，于是乎，我把代码下载到本地了，本来想着利用编辑器来修改就可以跳转了，没想到呀，PhpStorm给了我一个大惊喜，原来它只要配置好久可以直接在本地修改，WordPress刷新就可以直接看到效果。</p>\n<p>接下来，我就详细的说明一下配置的步骤</p>\n<h1>配置步骤</h1>\n<h2 id=\"1、设置连接\">1、设置连接</h2>\n<p>打开File–&gt;Setting</p>\n<p><img src=\"2022-04-30-16-52-00-image.png\" alt=\"\"></p>\n<p>左侧Build,Execution,Deployment–&gt;Deployment，然后右侧加号添加配置选择SFTP</p>\n<p><img src=\"2022-04-30-16-54-56-image.png\" alt=\"\"></p>\n<p>弹出的窗口内输入配置的名称，可随意输入，方便记住就好</p>\n<p><img src=\"2022-04-30-20-14-03-image.png\" alt=\"\"></p>\n<p>点击红框的位置添加ssh连接</p>\n<p><img src=\"2022-04-30-20-12-36-image.png\" alt=\"\"></p>\n<p>在弹出的窗口点击 加号，右边配置</p>\n<p><img src=\"2022-04-30-20-20-22-image.png\" alt=\"\"></p>\n<p>点击OK后，ssh会自动添加上，同时再把IP加入到下面的红框内</p>\n<p><img src=\"2022-04-30-20-32-37-image.png\" alt=\"\"></p>\n<h2 id=\"2、设置文件映射关系\">2、设置文件映射关系</h2>\n<p>点击mapping，将服务器上项目的根目录添加到Deployment Path中，如果点击OK</p>\n<p><img src=\"2022-04-30-20-35-23-image.png\" alt=\"\"></p>\n<h2 id=\"3、设置自动上传\">3、设置自动上传</h2>\n<p>在PhpStorm中依次点击Tool–&gt;Deployment–&gt;Options…</p>\n<p><img src=\"2022-04-30-20-42-16-image.png\" alt=\"\"></p>\n<p>在弹出的窗口中，将红框下拉框设置成第二个，之后只要按Ctrl+S就可将修改的代码上传到服务器上</p>\n<p><img src=\"2022-04-30-20-44-58-image.png\" alt=\"\"></p>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"cover":"https://blog.huangge1199.cn/post/pyListSort/bg.jpeg","excerpt":"","more":"<h1>前言</h1>\n<p>今天，在修改WordPress时，发现利用宝塔的在线编辑好麻烦，找到方法，确无法直接跳过去，于是乎，我把代码下载到本地了，本来想着利用编辑器来修改就可以跳转了，没想到呀，PhpStorm给了我一个大惊喜，原来它只要配置好久可以直接在本地修改，WordPress刷新就可以直接看到效果。</p>\n<p>接下来，我就详细的说明一下配置的步骤</p>\n<h1>配置步骤</h1>\n<h2 id=\"1、设置连接\">1、设置连接</h2>\n<p>打开File–&gt;Setting</p>\n<p><img src=\"2022-04-30-16-52-00-image.png\" alt=\"\"></p>\n<p>左侧Build,Execution,Deployment–&gt;Deployment，然后右侧加号添加配置选择SFTP</p>\n<p><img src=\"2022-04-30-16-54-56-image.png\" alt=\"\"></p>\n<p>弹出的窗口内输入配置的名称，可随意输入，方便记住就好</p>\n<p><img src=\"2022-04-30-20-14-03-image.png\" alt=\"\"></p>\n<p>点击红框的位置添加ssh连接</p>\n<p><img src=\"2022-04-30-20-12-36-image.png\" alt=\"\"></p>\n<p>在弹出的窗口点击 加号，右边配置</p>\n<p><img src=\"2022-04-30-20-20-22-image.png\" alt=\"\"></p>\n<p>点击OK后，ssh会自动添加上，同时再把IP加入到下面的红框内</p>\n<p><img src=\"2022-04-30-20-32-37-image.png\" alt=\"\"></p>\n<h2 id=\"2、设置文件映射关系\">2、设置文件映射关系</h2>\n<p>点击mapping，将服务器上项目的根目录添加到Deployment Path中，如果点击OK</p>\n<p><img src=\"2022-04-30-20-35-23-image.png\" alt=\"\"></p>\n<h2 id=\"3、设置自动上传\">3、设置自动上传</h2>\n<p>在PhpStorm中依次点击Tool–&gt;Deployment–&gt;Options…</p>\n<p><img src=\"2022-04-30-20-42-16-image.png\" alt=\"\"></p>\n<p>在弹出的窗口中，将红框下拉框设置成第二个，之后只要按Ctrl+S就可将修改的代码上传到服务器上</p>\n<p><img src=\"2022-04-30-20-44-58-image.png\" alt=\"\"></p>\n"},{"title":"原型模式","date":"2022-04-26T07:12:44.000Z","_content":"# 定义\n原型模式时指原型实例指定创建对象的种类，并且通过拷贝这些原型创建新的对象，属于创建型模式\n\n# 应用场景\n- 类初始化消耗资源较多 \n- new产生的一个对象需要非常繁琐的过程（数据准备、访问权限等） \n- 构造函数比较复杂 \n- 循环体中生成大量对象时\n\n# 优点\n- 性能优良，Java自带的原型模式是基于内存二进制流的拷贝，比直接new一个对象性能上提升了许多\n- 可以使用深克隆方式保存对象的状态，使用原型模式将对象复制一份并将其状态保存起来，简化了创建过程\n\n# 缺点\n- 必须配备克隆（或者可拷贝）方法\n- 当对已有类进行改造的时候，需要修改代码，违反了开闭原则。\n- 深拷贝、浅拷贝需要运用得当\n\n# 克隆破坏单例模式\n如果我们克隆的目标对象是单例的对象，深克隆就会破坏单例。\n解决办法：可以禁止深克隆。要么你的单例类不实现Cloneable接口；要么我们重写\nclone()方法，在clone方法中返回单例对象即可\n","source":"_posts/prototype.md","raw":"---\ntitle: 原型模式\ndate: 2022-04-26 15:12:44\ntags: [学习笔记,设计模式]\ncategories: [设计模式]\n---\n# 定义\n原型模式时指原型实例指定创建对象的种类，并且通过拷贝这些原型创建新的对象，属于创建型模式\n\n# 应用场景\n- 类初始化消耗资源较多 \n- new产生的一个对象需要非常繁琐的过程（数据准备、访问权限等） \n- 构造函数比较复杂 \n- 循环体中生成大量对象时\n\n# 优点\n- 性能优良，Java自带的原型模式是基于内存二进制流的拷贝，比直接new一个对象性能上提升了许多\n- 可以使用深克隆方式保存对象的状态，使用原型模式将对象复制一份并将其状态保存起来，简化了创建过程\n\n# 缺点\n- 必须配备克隆（或者可拷贝）方法\n- 当对已有类进行改造的时候，需要修改代码，违反了开闭原则。\n- 深拷贝、浅拷贝需要运用得当\n\n# 克隆破坏单例模式\n如果我们克隆的目标对象是单例的对象，深克隆就会破坏单例。\n解决办法：可以禁止深克隆。要么你的单例类不实现Cloneable接口；要么我们重写\nclone()方法，在clone方法中返回单例对象即可\n","slug":"prototype","published":1,"updated":"2022-06-03T06:00:55.605Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl42z5h7p005s3gn659emfefi","content":"<h1>定义</h1>\n<p>原型模式时指原型实例指定创建对象的种类，并且通过拷贝这些原型创建新的对象，属于创建型模式</p>\n<h1>应用场景</h1>\n<ul>\n<li>类初始化消耗资源较多</li>\n<li>new产生的一个对象需要非常繁琐的过程（数据准备、访问权限等）</li>\n<li>构造函数比较复杂</li>\n<li>循环体中生成大量对象时</li>\n</ul>\n<h1>优点</h1>\n<ul>\n<li>性能优良，Java自带的原型模式是基于内存二进制流的拷贝，比直接new一个对象性能上提升了许多</li>\n<li>可以使用深克隆方式保存对象的状态，使用原型模式将对象复制一份并将其状态保存起来，简化了创建过程</li>\n</ul>\n<h1>缺点</h1>\n<ul>\n<li>必须配备克隆（或者可拷贝）方法</li>\n<li>当对已有类进行改造的时候，需要修改代码，违反了开闭原则。</li>\n<li>深拷贝、浅拷贝需要运用得当</li>\n</ul>\n<h1>克隆破坏单例模式</h1>\n<p>如果我们克隆的目标对象是单例的对象，深克隆就会破坏单例。<br>\n解决办法：可以禁止深克隆。要么你的单例类不实现Cloneable接口；要么我们重写<br>\nclone()方法，在clone方法中返回单例对象即可</p>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"cover":"https://blog.huangge1199.cn/post/day20220119/bg.jpeg","excerpt":"","more":"<h1>定义</h1>\n<p>原型模式时指原型实例指定创建对象的种类，并且通过拷贝这些原型创建新的对象，属于创建型模式</p>\n<h1>应用场景</h1>\n<ul>\n<li>类初始化消耗资源较多</li>\n<li>new产生的一个对象需要非常繁琐的过程（数据准备、访问权限等）</li>\n<li>构造函数比较复杂</li>\n<li>循环体中生成大量对象时</li>\n</ul>\n<h1>优点</h1>\n<ul>\n<li>性能优良，Java自带的原型模式是基于内存二进制流的拷贝，比直接new一个对象性能上提升了许多</li>\n<li>可以使用深克隆方式保存对象的状态，使用原型模式将对象复制一份并将其状态保存起来，简化了创建过程</li>\n</ul>\n<h1>缺点</h1>\n<ul>\n<li>必须配备克隆（或者可拷贝）方法</li>\n<li>当对已有类进行改造的时候，需要修改代码，违反了开闭原则。</li>\n<li>深拷贝、浅拷贝需要运用得当</li>\n</ul>\n<h1>克隆破坏单例模式</h1>\n<p>如果我们克隆的目标对象是单例的对象，深克隆就会破坏单例。<br>\n解决办法：可以禁止深克隆。要么你的单例类不实现Cloneable接口；要么我们重写<br>\nclone()方法，在clone方法中返回单例对象即可</p>\n"},{"title":"个人网站加入到搜索引擎中","date":"2022-02-08T10:26:58.000Z","_content":"一般来说，搜索引擎中是不会收入你个人网站的，你可以试试用谷歌或者百度等其他搜索引擎看看，能不能收到你个人网站的相关页面？\n如果搜索不到，你可以申请加入搜索引擎，这个是免费的，下面提供一些搜索引擎的提交地址：\n\n- 谷歌博客搜索收录入口:\n  http://www.google.com/addurl/\n- 百度收录入口:\n  http://www.baidu.com/search/url_submit.html\n- 必应Bing收录入口:\n  https://www.bing.com/toolbox/submit-site-url\n- 360搜索引擎登录入口：\n  http://info.so.360.cn/site_submit.html\n- 搜狗提交入口:\n  http://www.sogou.com/feedback/urlfeedback.php\n\n目前，我所知道的就只有，如果你有其他搜索引擎的提交地址，可以在评论区中留下搜索引擎名称和地址，万分感谢！\n\n","source":"_posts/putWebsiteToSearchEngine.md","raw":"---\ntitle: 个人网站加入到搜索引擎中\ndate: 2022-02-08 18:26:58\ntags: 搜索引擎\ncategories: [网站建设]\n---\n一般来说，搜索引擎中是不会收入你个人网站的，你可以试试用谷歌或者百度等其他搜索引擎看看，能不能收到你个人网站的相关页面？\n如果搜索不到，你可以申请加入搜索引擎，这个是免费的，下面提供一些搜索引擎的提交地址：\n\n- 谷歌博客搜索收录入口:\n  http://www.google.com/addurl/\n- 百度收录入口:\n  http://www.baidu.com/search/url_submit.html\n- 必应Bing收录入口:\n  https://www.bing.com/toolbox/submit-site-url\n- 360搜索引擎登录入口：\n  http://info.so.360.cn/site_submit.html\n- 搜狗提交入口:\n  http://www.sogou.com/feedback/urlfeedback.php\n\n目前，我所知道的就只有，如果你有其他搜索引擎的提交地址，可以在评论区中留下搜索引擎名称和地址，万分感谢！\n\n","slug":"putWebsiteToSearchEngine","published":1,"updated":"2022-06-03T06:00:55.605Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl42z5h7q005v3gn64sqp9w7d","content":"<p>一般来说，搜索引擎中是不会收入你个人网站的，你可以试试用谷歌或者百度等其他搜索引擎看看，能不能收到你个人网站的相关页面？<br>\n如果搜索不到，你可以申请加入搜索引擎，这个是免费的，下面提供一些搜索引擎的提交地址：</p>\n<ul>\n<li>谷歌博客搜索收录入口:<br>\n<a href=\"http://www.google.com/addurl/\">http://www.google.com/addurl/</a></li>\n<li>百度收录入口:<br>\n<a href=\"http://www.baidu.com/search/url_submit.html\">http://www.baidu.com/search/url_submit.html</a></li>\n<li>必应Bing收录入口:<br>\n<a href=\"https://www.bing.com/toolbox/submit-site-url\">https://www.bing.com/toolbox/submit-site-url</a></li>\n<li>360搜索引擎登录入口：<br>\n<a href=\"http://info.so.360.cn/site_submit.html\">http://info.so.360.cn/site_submit.html</a></li>\n<li>搜狗提交入口:<br>\n<a href=\"http://www.sogou.com/feedback/urlfeedback.php\">http://www.sogou.com/feedback/urlfeedback.php</a></li>\n</ul>\n<p>目前，我所知道的就只有，如果你有其他搜索引擎的提交地址，可以在评论区中留下搜索引擎名称和地址，万分感谢！</p>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"cover":"https://blog.huangge1199.cn/post/pyControl/bg.jpeg","excerpt":"","more":"<p>一般来说，搜索引擎中是不会收入你个人网站的，你可以试试用谷歌或者百度等其他搜索引擎看看，能不能收到你个人网站的相关页面？<br>\n如果搜索不到，你可以申请加入搜索引擎，这个是免费的，下面提供一些搜索引擎的提交地址：</p>\n<ul>\n<li>谷歌博客搜索收录入口:<br>\n<a href=\"http://www.google.com/addurl/\">http://www.google.com/addurl/</a></li>\n<li>百度收录入口:<br>\n<a href=\"http://www.baidu.com/search/url_submit.html\">http://www.baidu.com/search/url_submit.html</a></li>\n<li>必应Bing收录入口:<br>\n<a href=\"https://www.bing.com/toolbox/submit-site-url\">https://www.bing.com/toolbox/submit-site-url</a></li>\n<li>360搜索引擎登录入口：<br>\n<a href=\"http://info.so.360.cn/site_submit.html\">http://info.so.360.cn/site_submit.html</a></li>\n<li>搜狗提交入口:<br>\n<a href=\"http://www.sogou.com/feedback/urlfeedback.php\">http://www.sogou.com/feedback/urlfeedback.php</a></li>\n</ul>\n<p>目前，我所知道的就只有，如果你有其他搜索引擎的提交地址，可以在评论区中留下搜索引擎名称和地址，万分感谢！</p>\n"},{"title":"python3学习笔记--条件控制用法整理","date":"2021-12-29T08:04:06.000Z","cover":"https://blog.huangge1199.cn/post/pyControl/bg.jpeg","_content":"\n# if\n\n```python\nif_stmt ::=  \"if\" assignment_expression \":\" suite\n             (\"elif\" assignment_expression \":\" suite)*\n             [\"else\" \":\" suite]\n```\n\n用法：\n\n```python\nif EXPRESSION1:\n    SUITE1\nelif EXPRESSION2:\n    SUITE2\nelse:\n    SUITE\n```\n\n常用的操作符：\n\n- \"<\"：小于\n- \"<=\"：小于等于\n- \">\"：大于\n- \">=\"：大于等于\n- \"==\"：等于\n- \"!=\"：不等于\n- \"and\"：并且\n- \"or\"：或者\n\n# with\n\n```python\nwith_stmt          ::=  \"with\" ( \"(\" with_stmt_contents \",\"? \")\" | with_stmt_contents ) \":\" suite\nwith_stmt_contents ::=  with_item (\",\" with_item)*\nwith_item          ::=  expression [\"as\" target]\n```\n\n用法：\n\n```python\nwith EXPRESSION as TARGET:\n    SUITE\n或者\nwith A() as a, B() as b:\n    SUITE\n或者\nwith A() as a:\n    with B() as b:\n        SUITE\n或者\nwith (\n    A() as a,\n    B() as b,\n):\n    SUITE\n```\n\n# match（3.10新特性）\n\n```python\nmatch_stmt   ::=  'match' subject_expr \":\" NEWLINE INDENT case_block+ DEDENT\nsubject_expr ::=  star_named_expression \",\" star_named_expressions?\n                  | named_expression\ncase_block   ::=  'case' patterns [guard] \":\" block\n```\n\n用法：\n\n```python\nmatch variable: #这里的variable是需要判断的内容\n    case [\"quit\"]: \n        statement_block_1 # 对应案例的执行代码，当variable=\"quit\"时执行statement_block_1\n    case [\"go\", direction]: \n        statement_block_2\n    case [\"drop\", *objects]: \n        statement_block_3\n    ... # 其他的case语句\n    case _: #如果上面的case语句没有命中，则执行这个代码块，类似于Switch的default\n        statement_block_default\n```\n\n","source":"_posts/pyControl.md","raw":"---\ntitle: python3学习笔记--条件控制用法整理\ndate: 2021-12-29 16:04:06\ntags: [学习笔记,python]\ncategories: python\ncover: https://blog.huangge1199.cn/post/pyControl/bg.jpeg\n---\n\n# if\n\n```python\nif_stmt ::=  \"if\" assignment_expression \":\" suite\n             (\"elif\" assignment_expression \":\" suite)*\n             [\"else\" \":\" suite]\n```\n\n用法：\n\n```python\nif EXPRESSION1:\n    SUITE1\nelif EXPRESSION2:\n    SUITE2\nelse:\n    SUITE\n```\n\n常用的操作符：\n\n- \"<\"：小于\n- \"<=\"：小于等于\n- \">\"：大于\n- \">=\"：大于等于\n- \"==\"：等于\n- \"!=\"：不等于\n- \"and\"：并且\n- \"or\"：或者\n\n# with\n\n```python\nwith_stmt          ::=  \"with\" ( \"(\" with_stmt_contents \",\"? \")\" | with_stmt_contents ) \":\" suite\nwith_stmt_contents ::=  with_item (\",\" with_item)*\nwith_item          ::=  expression [\"as\" target]\n```\n\n用法：\n\n```python\nwith EXPRESSION as TARGET:\n    SUITE\n或者\nwith A() as a, B() as b:\n    SUITE\n或者\nwith A() as a:\n    with B() as b:\n        SUITE\n或者\nwith (\n    A() as a,\n    B() as b,\n):\n    SUITE\n```\n\n# match（3.10新特性）\n\n```python\nmatch_stmt   ::=  'match' subject_expr \":\" NEWLINE INDENT case_block+ DEDENT\nsubject_expr ::=  star_named_expression \",\" star_named_expressions?\n                  | named_expression\ncase_block   ::=  'case' patterns [guard] \":\" block\n```\n\n用法：\n\n```python\nmatch variable: #这里的variable是需要判断的内容\n    case [\"quit\"]: \n        statement_block_1 # 对应案例的执行代码，当variable=\"quit\"时执行statement_block_1\n    case [\"go\", direction]: \n        statement_block_2\n    case [\"drop\", *objects]: \n        statement_block_3\n    ... # 其他的case语句\n    case _: #如果上面的case语句没有命中，则执行这个代码块，类似于Switch的default\n        statement_block_default\n```\n\n","slug":"pyControl","published":1,"updated":"2022-06-03T06:00:55.605Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl42z5h7r00603gn690azfd27","content":"<h1>if</h1>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">if_stmt ::&#x3D;  &quot;if&quot; assignment_expression &quot;:&quot; suite\n             (&quot;elif&quot; assignment_expression &quot;:&quot; suite)*\n             [&quot;else&quot; &quot;:&quot; suite]</code></pre>\n<p>用法：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">if EXPRESSION1:\n    SUITE1\nelif EXPRESSION2:\n    SUITE2\nelse:\n    SUITE</code></pre>\n<p>常用的操作符：</p>\n<ul>\n<li>“&lt;”：小于</li>\n<li>“&lt;=”：小于等于</li>\n<li>“&gt;”：大于</li>\n<li>“&gt;=”：大于等于</li>\n<li>“==”：等于</li>\n<li>“!=”：不等于</li>\n<li>“and”：并且</li>\n<li>“or”：或者</li>\n</ul>\n<h1>with</h1>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">with_stmt          ::&#x3D;  &quot;with&quot; ( &quot;(&quot; with_stmt_contents &quot;,&quot;? &quot;)&quot; | with_stmt_contents ) &quot;:&quot; suite\nwith_stmt_contents ::&#x3D;  with_item (&quot;,&quot; with_item)*\nwith_item          ::&#x3D;  expression [&quot;as&quot; target]</code></pre>\n<p>用法：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">with EXPRESSION as TARGET:\n    SUITE\n或者\nwith A() as a, B() as b:\n    SUITE\n或者\nwith A() as a:\n    with B() as b:\n        SUITE\n或者\nwith (\n    A() as a,\n    B() as b,\n):\n    SUITE</code></pre>\n<h1>match（3.10新特性）</h1>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">match_stmt   ::&#x3D;  &#39;match&#39; subject_expr &quot;:&quot; NEWLINE INDENT case_block+ DEDENT\nsubject_expr ::&#x3D;  star_named_expression &quot;,&quot; star_named_expressions?\n                  | named_expression\ncase_block   ::&#x3D;  &#39;case&#39; patterns [guard] &quot;:&quot; block</code></pre>\n<p>用法：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">match variable: #这里的variable是需要判断的内容\n    case [&quot;quit&quot;]: \n        statement_block_1 # 对应案例的执行代码，当variable&#x3D;&quot;quit&quot;时执行statement_block_1\n    case [&quot;go&quot;, direction]: \n        statement_block_2\n    case [&quot;drop&quot;, *objects]: \n        statement_block_3\n    ... # 其他的case语句\n    case _: #如果上面的case语句没有命中，则执行这个代码块，类似于Switch的default\n        statement_block_default</code></pre>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"excerpt":"","more":"<h1>if</h1>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">if_stmt ::&#x3D;  &quot;if&quot; assignment_expression &quot;:&quot; suite\n             (&quot;elif&quot; assignment_expression &quot;:&quot; suite)*\n             [&quot;else&quot; &quot;:&quot; suite]</code></pre>\n<p>用法：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">if EXPRESSION1:\n    SUITE1\nelif EXPRESSION2:\n    SUITE2\nelse:\n    SUITE</code></pre>\n<p>常用的操作符：</p>\n<ul>\n<li>“&lt;”：小于</li>\n<li>“&lt;=”：小于等于</li>\n<li>“&gt;”：大于</li>\n<li>“&gt;=”：大于等于</li>\n<li>“==”：等于</li>\n<li>“!=”：不等于</li>\n<li>“and”：并且</li>\n<li>“or”：或者</li>\n</ul>\n<h1>with</h1>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">with_stmt          ::&#x3D;  &quot;with&quot; ( &quot;(&quot; with_stmt_contents &quot;,&quot;? &quot;)&quot; | with_stmt_contents ) &quot;:&quot; suite\nwith_stmt_contents ::&#x3D;  with_item (&quot;,&quot; with_item)*\nwith_item          ::&#x3D;  expression [&quot;as&quot; target]</code></pre>\n<p>用法：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">with EXPRESSION as TARGET:\n    SUITE\n或者\nwith A() as a, B() as b:\n    SUITE\n或者\nwith A() as a:\n    with B() as b:\n        SUITE\n或者\nwith (\n    A() as a,\n    B() as b,\n):\n    SUITE</code></pre>\n<h1>match（3.10新特性）</h1>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">match_stmt   ::&#x3D;  &#39;match&#39; subject_expr &quot;:&quot; NEWLINE INDENT case_block+ DEDENT\nsubject_expr ::&#x3D;  star_named_expression &quot;,&quot; star_named_expressions?\n                  | named_expression\ncase_block   ::&#x3D;  &#39;case&#39; patterns [guard] &quot;:&quot; block</code></pre>\n<p>用法：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">match variable: #这里的variable是需要判断的内容\n    case [&quot;quit&quot;]: \n        statement_block_1 # 对应案例的执行代码，当variable&#x3D;&quot;quit&quot;时执行statement_block_1\n    case [&quot;go&quot;, direction]: \n        statement_block_2\n    case [&quot;drop&quot;, *objects]: \n        statement_block_3\n    ... # 其他的case语句\n    case _: #如果上面的case语句没有命中，则执行这个代码块，类似于Switch的default\n        statement_block_default</code></pre>\n"},{"title":"python3学习笔记--列表切片","date":"2022-03-01T01:47:34.000Z","_content":"\n列表切片（**List slices**）提供了从列表中检索值的更高级的方法。\n\n> 列表名[num1 : num2 : num3]\n> \n> 从索引num1到num2（不包括num2）间隔为num3的元素\n> \n> num1或num2为负值代表从末尾开始算起的\n> \n> num3为负值代表切片进行逆序截取\n\n以下为具体说明\n\n# 基本用法\n\n用两个以冒号分隔的整数索引列表。\n\n列表切片返回一个包含索引之间旧列表中所有值的新列表。\n\n例如：\n\n```python\nsquares = [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]\nprint(squares[2:6])\nprint(squares[3:8])\nprint(squares[0:1])\n```\n\n结果：\n\n```python\n[4, 9, 16, 25]\n[9, 16, 25, 36, 49]\n[0]\n```\n\n> 和Range参数一样，在一个 slice 中提供的第一个索引被包含在结果中，但是第二个索引没有。\n\n# 省略一个数字\n\n如果省略了切片中的第一个数字，则将从列表第一个元素开始。  \n\n如果第二个数字被省略，则认为是到列表结束。  \n\n例如：\n\n```python\nsquares = [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]\nprint(squares[:7])\nprint(squares[7:])\n```\n\n结果：\n\n```python\n[0, 1, 4, 9, 16, 25, 36]\n[49, 64, 81]\n```\n\n> 切片也可以用在元组上\n\n# 带间隔的切片\n\n列表切片还可以有第三个数字，表示间隔。\n\n例如：\n\n```python\nsquares = [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]\nprint(squares[::2])\nprint(squares[2:8:3])\n```\n\n结果：\n\n```python\n[0, 4, 16, 36, 64]\n[4, 25]\n```\n\n> [2：8：3] 包含从索引2到8间隔3的元素。\n\n# 带负值\n\n负值也可用于列表切片（和正常列表索引）。当切片（或普通索引）中的第一个和第二个值使用负值时，它们将从列表的末尾算起。\n\n例如：\n\n```python\nsquares = [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]\nprint(squares[1:-1])\nprint(squares[-3:-1])\nprint(squares[::-1])\n```\n\n结果：\n\n```python\n[1, 4, 9, 16, 25, 36, 49, 64]\n[49, 64]\n[81, 64, 49, 36, 25, 16, 9, 4, 1, 0]\n```\n\n> 如果切片第三个数值使用负值，则切片进行逆序截取。  \n> 使用[::-1]作为切片是反转列表的常用方法。\n","source":"_posts/pyListSlice.md","raw":"---\ntitle: python3学习笔记--列表切片\ndate: 2022-03-01 09:47:34\ntags: [学习笔记,python]\ncategories: python\n---\n\n列表切片（**List slices**）提供了从列表中检索值的更高级的方法。\n\n> 列表名[num1 : num2 : num3]\n> \n> 从索引num1到num2（不包括num2）间隔为num3的元素\n> \n> num1或num2为负值代表从末尾开始算起的\n> \n> num3为负值代表切片进行逆序截取\n\n以下为具体说明\n\n# 基本用法\n\n用两个以冒号分隔的整数索引列表。\n\n列表切片返回一个包含索引之间旧列表中所有值的新列表。\n\n例如：\n\n```python\nsquares = [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]\nprint(squares[2:6])\nprint(squares[3:8])\nprint(squares[0:1])\n```\n\n结果：\n\n```python\n[4, 9, 16, 25]\n[9, 16, 25, 36, 49]\n[0]\n```\n\n> 和Range参数一样，在一个 slice 中提供的第一个索引被包含在结果中，但是第二个索引没有。\n\n# 省略一个数字\n\n如果省略了切片中的第一个数字，则将从列表第一个元素开始。  \n\n如果第二个数字被省略，则认为是到列表结束。  \n\n例如：\n\n```python\nsquares = [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]\nprint(squares[:7])\nprint(squares[7:])\n```\n\n结果：\n\n```python\n[0, 1, 4, 9, 16, 25, 36]\n[49, 64, 81]\n```\n\n> 切片也可以用在元组上\n\n# 带间隔的切片\n\n列表切片还可以有第三个数字，表示间隔。\n\n例如：\n\n```python\nsquares = [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]\nprint(squares[::2])\nprint(squares[2:8:3])\n```\n\n结果：\n\n```python\n[0, 4, 16, 36, 64]\n[4, 25]\n```\n\n> [2：8：3] 包含从索引2到8间隔3的元素。\n\n# 带负值\n\n负值也可用于列表切片（和正常列表索引）。当切片（或普通索引）中的第一个和第二个值使用负值时，它们将从列表的末尾算起。\n\n例如：\n\n```python\nsquares = [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]\nprint(squares[1:-1])\nprint(squares[-3:-1])\nprint(squares[::-1])\n```\n\n结果：\n\n```python\n[1, 4, 9, 16, 25, 36, 49, 64]\n[49, 64]\n[81, 64, 49, 36, 25, 16, 9, 4, 1, 0]\n```\n\n> 如果切片第三个数值使用负值，则切片进行逆序截取。  \n> 使用[::-1]作为切片是反转列表的常用方法。\n","slug":"pyListSlice","published":1,"updated":"2022-06-03T06:00:55.605Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl42z5h7s00633gn6bne5e7bu","content":"<p>列表切片（<strong>List slices</strong>）提供了从列表中检索值的更高级的方法。</p>\n<blockquote>\n<p>列表名[num1 : num2 : num3]</p>\n<p>从索引num1到num2（不包括num2）间隔为num3的元素</p>\n<p>num1或num2为负值代表从末尾开始算起的</p>\n<p>num3为负值代表切片进行逆序截取</p>\n</blockquote>\n<p>以下为具体说明</p>\n<h1>基本用法</h1>\n<p>用两个以冒号分隔的整数索引列表。</p>\n<p>列表切片返回一个包含索引之间旧列表中所有值的新列表。</p>\n<p>例如：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">squares &#x3D; [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]\nprint(squares[2:6])\nprint(squares[3:8])\nprint(squares[0:1])</code></pre>\n<p>结果：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">[4, 9, 16, 25]\n[9, 16, 25, 36, 49]\n[0]</code></pre>\n<blockquote>\n<p>和Range参数一样，在一个 slice 中提供的第一个索引被包含在结果中，但是第二个索引没有。</p>\n</blockquote>\n<h1>省略一个数字</h1>\n<p>如果省略了切片中的第一个数字，则将从列表第一个元素开始。</p>\n<p>如果第二个数字被省略，则认为是到列表结束。</p>\n<p>例如：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">squares &#x3D; [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]\nprint(squares[:7])\nprint(squares[7:])</code></pre>\n<p>结果：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">[0, 1, 4, 9, 16, 25, 36]\n[49, 64, 81]</code></pre>\n<blockquote>\n<p>切片也可以用在元组上</p>\n</blockquote>\n<h1>带间隔的切片</h1>\n<p>列表切片还可以有第三个数字，表示间隔。</p>\n<p>例如：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">squares &#x3D; [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]\nprint(squares[::2])\nprint(squares[2:8:3])</code></pre>\n<p>结果：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">[0, 4, 16, 36, 64]\n[4, 25]</code></pre>\n<blockquote>\n<p>[2：8：3] 包含从索引2到8间隔3的元素。</p>\n</blockquote>\n<h1>带负值</h1>\n<p>负值也可用于列表切片（和正常列表索引）。当切片（或普通索引）中的第一个和第二个值使用负值时，它们将从列表的末尾算起。</p>\n<p>例如：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">squares &#x3D; [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]\nprint(squares[1:-1])\nprint(squares[-3:-1])\nprint(squares[::-1])</code></pre>\n<p>结果：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">[1, 4, 9, 16, 25, 36, 49, 64]\n[49, 64]\n[81, 64, 49, 36, 25, 16, 9, 4, 1, 0]</code></pre>\n<blockquote>\n<p>如果切片第三个数值使用负值，则切片进行逆序截取。<br>\n使用[::-1]作为切片是反转列表的常用方法。</p>\n</blockquote>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"cover":"https://blog.huangge1199.cn/post/pyControl/bg.jpeg","excerpt":"","more":"<p>列表切片（<strong>List slices</strong>）提供了从列表中检索值的更高级的方法。</p>\n<blockquote>\n<p>列表名[num1 : num2 : num3]</p>\n<p>从索引num1到num2（不包括num2）间隔为num3的元素</p>\n<p>num1或num2为负值代表从末尾开始算起的</p>\n<p>num3为负值代表切片进行逆序截取</p>\n</blockquote>\n<p>以下为具体说明</p>\n<h1>基本用法</h1>\n<p>用两个以冒号分隔的整数索引列表。</p>\n<p>列表切片返回一个包含索引之间旧列表中所有值的新列表。</p>\n<p>例如：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">squares &#x3D; [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]\nprint(squares[2:6])\nprint(squares[3:8])\nprint(squares[0:1])</code></pre>\n<p>结果：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">[4, 9, 16, 25]\n[9, 16, 25, 36, 49]\n[0]</code></pre>\n<blockquote>\n<p>和Range参数一样，在一个 slice 中提供的第一个索引被包含在结果中，但是第二个索引没有。</p>\n</blockquote>\n<h1>省略一个数字</h1>\n<p>如果省略了切片中的第一个数字，则将从列表第一个元素开始。</p>\n<p>如果第二个数字被省略，则认为是到列表结束。</p>\n<p>例如：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">squares &#x3D; [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]\nprint(squares[:7])\nprint(squares[7:])</code></pre>\n<p>结果：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">[0, 1, 4, 9, 16, 25, 36]\n[49, 64, 81]</code></pre>\n<blockquote>\n<p>切片也可以用在元组上</p>\n</blockquote>\n<h1>带间隔的切片</h1>\n<p>列表切片还可以有第三个数字，表示间隔。</p>\n<p>例如：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">squares &#x3D; [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]\nprint(squares[::2])\nprint(squares[2:8:3])</code></pre>\n<p>结果：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">[0, 4, 16, 36, 64]\n[4, 25]</code></pre>\n<blockquote>\n<p>[2：8：3] 包含从索引2到8间隔3的元素。</p>\n</blockquote>\n<h1>带负值</h1>\n<p>负值也可用于列表切片（和正常列表索引）。当切片（或普通索引）中的第一个和第二个值使用负值时，它们将从列表的末尾算起。</p>\n<p>例如：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">squares &#x3D; [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]\nprint(squares[1:-1])\nprint(squares[-3:-1])\nprint(squares[::-1])</code></pre>\n<p>结果：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">[1, 4, 9, 16, 25, 36, 49, 64]\n[49, 64]\n[81, 64, 49, 36, 25, 16, 9, 4, 1, 0]</code></pre>\n<blockquote>\n<p>如果切片第三个数值使用负值，则切片进行逆序截取。<br>\n使用[::-1]作为切片是反转列表的常用方法。</p>\n</blockquote>\n"},{"title":"python3学习笔记--两种排序方法","date":"2021-12-29T02:20:17.000Z","cover":"https://blog.huangge1199.cn/post/pyListSort/bg.jpeg","_content":"# 列表排序方法\n\n- sort()：仅对list对象进行排序，会改变list自身的顺序，没有返回值，即**原地排序**\n- sorted()：对所有可迭代对象进行排序，返回排序后的新对象，原对象保持不变；\n\n# sort()\n\nlist.sort(key=None, reverse=False)\n\n- **key**：设置排序方法，或指定list中用于排序的元素；\n- **reverse**：升降序排列，默认为升序排列；\n\n例子：\n\n```python\nnums = [2, 3, 5, 1, 6]\nnums.sort()\nprint(nums)  # [1, 2, 3, 5, 6]\nnums.sort(key=None, reverse=True)\nprint(nums)  # [6, 5, 3, 2, 1]\n    \nstudents = [('john', 'C', 15), ('jane', 'A', 12), ('dave', 'B', 10)]\nstudents.sort(key=lambda x: x[2])  # 按照列表中第三个元素排序\nprint(students)  # [('dave', 'B', 10), ('jane', 'A', 12), ('john', 'C', 15)]\n```\n\n# sorted()\n\nsorted(iterable [, key[, reverse]])\n\n- **key** ：设置排序方法，或指定迭代对象中，用于排序的元素；\n- **reverse** ：升降序排列，默认为升序排列；\n\n例子：\n\n```python\nnums = [2, 3, 5, 1, 6]\nnewNums = sorted(nums)\nprint(nums)  # [2, 3, 5, 1, 6]\nprint(newNums)  # [1, 2, 3, 5, 6]\nstudents = [('john', 'C', 15), ('jane', 'A', 12), ('dave', 'B', 10)]\nnewStudents = sorted(students, key=lambda x: x[1])\nprint(students)  # [('john', 'C', 15), ('jane', 'A', 12), ('dave', 'B', 10)]\nprint(newStudents)  # [('jane', 'A', 12), ('dave', 'B', 10), ('john', 'C', 15)]\n```\n<script src=\"https://readmore.openwrite.cn/js/readmore.js\" type=\"text/javascript\"></script>\n<script>\n    const btw = new BTWPlugin();\n    btw.init({\n        id: 'article-container',\n        blogId: '28702-1640918923546-365',\n        name: '龙儿之家',\n        qrcode: 'https://blog.huangge1199.cn/images/WeaselLong.jpg',\n        keyword: 'more',\n    });\n</script>\n","source":"_posts/pyListSort.md","raw":"---\ntitle: python3学习笔记--两种排序方法\ndate: 2021-12-29 10:20:17\ntags: [学习笔记,python]\ncategories: python\ncover: https://blog.huangge1199.cn/post/pyListSort/bg.jpeg\n---\n# 列表排序方法\n\n- sort()：仅对list对象进行排序，会改变list自身的顺序，没有返回值，即**原地排序**\n- sorted()：对所有可迭代对象进行排序，返回排序后的新对象，原对象保持不变；\n\n# sort()\n\nlist.sort(key=None, reverse=False)\n\n- **key**：设置排序方法，或指定list中用于排序的元素；\n- **reverse**：升降序排列，默认为升序排列；\n\n例子：\n\n```python\nnums = [2, 3, 5, 1, 6]\nnums.sort()\nprint(nums)  # [1, 2, 3, 5, 6]\nnums.sort(key=None, reverse=True)\nprint(nums)  # [6, 5, 3, 2, 1]\n    \nstudents = [('john', 'C', 15), ('jane', 'A', 12), ('dave', 'B', 10)]\nstudents.sort(key=lambda x: x[2])  # 按照列表中第三个元素排序\nprint(students)  # [('dave', 'B', 10), ('jane', 'A', 12), ('john', 'C', 15)]\n```\n\n# sorted()\n\nsorted(iterable [, key[, reverse]])\n\n- **key** ：设置排序方法，或指定迭代对象中，用于排序的元素；\n- **reverse** ：升降序排列，默认为升序排列；\n\n例子：\n\n```python\nnums = [2, 3, 5, 1, 6]\nnewNums = sorted(nums)\nprint(nums)  # [2, 3, 5, 1, 6]\nprint(newNums)  # [1, 2, 3, 5, 6]\nstudents = [('john', 'C', 15), ('jane', 'A', 12), ('dave', 'B', 10)]\nnewStudents = sorted(students, key=lambda x: x[1])\nprint(students)  # [('john', 'C', 15), ('jane', 'A', 12), ('dave', 'B', 10)]\nprint(newStudents)  # [('jane', 'A', 12), ('dave', 'B', 10), ('john', 'C', 15)]\n```\n<script src=\"https://readmore.openwrite.cn/js/readmore.js\" type=\"text/javascript\"></script>\n<script>\n    const btw = new BTWPlugin();\n    btw.init({\n        id: 'article-container',\n        blogId: '28702-1640918923546-365',\n        name: '龙儿之家',\n        qrcode: 'https://blog.huangge1199.cn/images/WeaselLong.jpg',\n        keyword: 'more',\n    });\n</script>\n","slug":"pyListSort","published":1,"updated":"2022-06-03T06:00:55.605Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl42z5h7u00683gn6de6x8vms","content":"<h1>列表排序方法</h1>\n<ul>\n<li>sort()：仅对list对象进行排序，会改变list自身的顺序，没有返回值，即<strong>原地排序</strong></li>\n<li>sorted()：对所有可迭代对象进行排序，返回排序后的新对象，原对象保持不变；</li>\n</ul>\n<h1>sort()</h1>\n<p>list.sort(key=None, reverse=False)</p>\n<ul>\n<li><strong>key</strong>：设置排序方法，或指定list中用于排序的元素；</li>\n<li><strong>reverse</strong>：升降序排列，默认为升序排列；</li>\n</ul>\n<p>例子：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">nums &#x3D; [2, 3, 5, 1, 6]\nnums.sort()\nprint(nums)  # [1, 2, 3, 5, 6]\nnums.sort(key&#x3D;None, reverse&#x3D;True)\nprint(nums)  # [6, 5, 3, 2, 1]\n    \nstudents &#x3D; [(&#39;john&#39;, &#39;C&#39;, 15), (&#39;jane&#39;, &#39;A&#39;, 12), (&#39;dave&#39;, &#39;B&#39;, 10)]\nstudents.sort(key&#x3D;lambda x: x[2])  # 按照列表中第三个元素排序\nprint(students)  # [(&#39;dave&#39;, &#39;B&#39;, 10), (&#39;jane&#39;, &#39;A&#39;, 12), (&#39;john&#39;, &#39;C&#39;, 15)]</code></pre>\n<h1>sorted()</h1>\n<p>sorted(iterable [, key[, reverse]])</p>\n<ul>\n<li><strong>key</strong> ：设置排序方法，或指定迭代对象中，用于排序的元素；</li>\n<li><strong>reverse</strong> ：升降序排列，默认为升序排列；</li>\n</ul>\n<p>例子：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">nums &#x3D; [2, 3, 5, 1, 6]\nnewNums &#x3D; sorted(nums)\nprint(nums)  # [2, 3, 5, 1, 6]\nprint(newNums)  # [1, 2, 3, 5, 6]\nstudents &#x3D; [(&#39;john&#39;, &#39;C&#39;, 15), (&#39;jane&#39;, &#39;A&#39;, 12), (&#39;dave&#39;, &#39;B&#39;, 10)]\nnewStudents &#x3D; sorted(students, key&#x3D;lambda x: x[1])\nprint(students)  # [(&#39;john&#39;, &#39;C&#39;, 15), (&#39;jane&#39;, &#39;A&#39;, 12), (&#39;dave&#39;, &#39;B&#39;, 10)]\nprint(newStudents)  # [(&#39;jane&#39;, &#39;A&#39;, 12), (&#39;dave&#39;, &#39;B&#39;, 10), (&#39;john&#39;, &#39;C&#39;, 15)]</code></pre>\n<script src=\"https://readmore.openwrite.cn/js/readmore.js\" type=\"text/javascript\"></script>\n<script>\n    const btw = new BTWPlugin();\n    btw.init({\n        id: 'article-container',\n        blogId: '28702-1640918923546-365',\n        name: '龙儿之家',\n        qrcode: 'https://blog.huangge1199.cn/images/WeaselLong.jpg',\n        keyword: 'more',\n    });\n</script>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"excerpt":"","more":"<h1>列表排序方法</h1>\n<ul>\n<li>sort()：仅对list对象进行排序，会改变list自身的顺序，没有返回值，即<strong>原地排序</strong></li>\n<li>sorted()：对所有可迭代对象进行排序，返回排序后的新对象，原对象保持不变；</li>\n</ul>\n<h1>sort()</h1>\n<p>list.sort(key=None, reverse=False)</p>\n<ul>\n<li><strong>key</strong>：设置排序方法，或指定list中用于排序的元素；</li>\n<li><strong>reverse</strong>：升降序排列，默认为升序排列；</li>\n</ul>\n<p>例子：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">nums &#x3D; [2, 3, 5, 1, 6]\nnums.sort()\nprint(nums)  # [1, 2, 3, 5, 6]\nnums.sort(key&#x3D;None, reverse&#x3D;True)\nprint(nums)  # [6, 5, 3, 2, 1]\n    \nstudents &#x3D; [(&#39;john&#39;, &#39;C&#39;, 15), (&#39;jane&#39;, &#39;A&#39;, 12), (&#39;dave&#39;, &#39;B&#39;, 10)]\nstudents.sort(key&#x3D;lambda x: x[2])  # 按照列表中第三个元素排序\nprint(students)  # [(&#39;dave&#39;, &#39;B&#39;, 10), (&#39;jane&#39;, &#39;A&#39;, 12), (&#39;john&#39;, &#39;C&#39;, 15)]</code></pre>\n<h1>sorted()</h1>\n<p>sorted(iterable [, key[, reverse]])</p>\n<ul>\n<li><strong>key</strong> ：设置排序方法，或指定迭代对象中，用于排序的元素；</li>\n<li><strong>reverse</strong> ：升降序排列，默认为升序排列；</li>\n</ul>\n<p>例子：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">nums &#x3D; [2, 3, 5, 1, 6]\nnewNums &#x3D; sorted(nums)\nprint(nums)  # [2, 3, 5, 1, 6]\nprint(newNums)  # [1, 2, 3, 5, 6]\nstudents &#x3D; [(&#39;john&#39;, &#39;C&#39;, 15), (&#39;jane&#39;, &#39;A&#39;, 12), (&#39;dave&#39;, &#39;B&#39;, 10)]\nnewStudents &#x3D; sorted(students, key&#x3D;lambda x: x[1])\nprint(students)  # [(&#39;john&#39;, &#39;C&#39;, 15), (&#39;jane&#39;, &#39;A&#39;, 12), (&#39;dave&#39;, &#39;B&#39;, 10)]\nprint(newStudents)  # [(&#39;jane&#39;, &#39;A&#39;, 12), (&#39;dave&#39;, &#39;B&#39;, 10), (&#39;john&#39;, &#39;C&#39;, 15)]</code></pre>\n<script src=\"https://readmore.openwrite.cn/js/readmore.js\" type=\"text/javascript\"></script>\n<script>\n    const btw = new BTWPlugin();\n    btw.init({\n        id: 'article-container',\n        blogId: '28702-1640918923546-365',\n        name: '龙儿之家',\n        qrcode: 'https://blog.huangge1199.cn/images/WeaselLong.jpg',\n        keyword: 'more',\n    });\n</script>\n"},{"title":"python3学习笔记--集合、元组、字典、列表对比","date":"2022-03-03T13:55:20.000Z","_content":"\n# 数据结构\n\nPython支持以下数据结构：列表，字典，元组，集合。\n\n**何时使用字典：**\n\n- 当您需要键：值对之间的逻辑关联时。\n\n- 当您需要基于自定义密钥快速查找数据时。\n\n- 当你的数据不断修改时。请记住，字典是可变的。\n\n**何时使用其他类型：**\n\n- 如果您有一些不需要随机访问的数据集合，请使用列表。当你需要一个简单的，可迭代的频繁修改的集合可以使用列表。\n\n- 如果你需要元素的唯一性，使用集合。\n\n- 当数据无法更改时使用元组。\n\n> 很多时候，元组与字典结合使用，例如元组可能代表一个关键字，因为它是不可变的。\n\n# 1、列表\n\n使用**方括号**创建\n\n```python\nwords = [\"Hello\", \"world\", \"!\"]\n```\n\n>使用空的方括号创建空列表\n>\n>可以通过索引来访问\n>\n>大多数情况下，列表中的最后一项不会带逗号。然而，在最后一项放置一个逗号是完全有效的，在某些情况下是鼓励的。 \n>\n>列表的索引是从0开始的，而不是从1开始的\n\n# 2、集合\n\n使用**花括号**或 **set** 函数创建\n\n```python\nnum_set = {1, 2, 3, 4, 5}\nword_set = set([\"spam\", \"eggs\", \"sausage\"])\n```\n\n> 要创建一个空集，必须使用 set()，如 {} 是创建一个空字典。\n> \n> 集合是**无序**的，这意味着他们不能被索引。\n> \n> 集合不能包含重复的元素。\n> \n> 由于存储的方式，检查一个项目是否是一个集合的一部分比检查是不是列表的一部分**更快**。  \n> \n> 集合使用 **add** 添加元素 。  \n> \n> **remove** 方法从集合中删除特定的元素; **pop** 删除随机的元素。\n\n#  3、元组\n\n元组 使用**圆括号**创建 ，也可以在没有**圆括号**的情况下创建\n\n```python\nwords = (\"spam\", \"eggs\", \"sausages\",)\nmy_tuple = \"one\", \"two\", \"three\"\n```\n\n> 使用空括号对创建空元组。\n>\n> 元组比列表快，但是元组不能改变。 \n>\n> 可以使用索引访问元组中的值。\n\n# 4、字典\n\n字典是用于将任意键映射到值的数据结构\n\n```python\nages = {\"Dave\": 24, \"Mary\": 42, \"John\": 58}\n```\n\n> 空字典被定义为{}。\n>\n> 字典 中的每个元素都由一个 键:值 对来表示。 \n>\n> 使用 **字典[\"键名\"]** 可以获取对应的值。\n\n\n\n","source":"_posts/pyMulCom.md","raw":"---\ntitle: python3学习笔记--集合、元组、字典、列表对比\ndate: 2022-03-03 21:55:20\ntags: [学习笔记,python]\ncategories: python\n---\n\n# 数据结构\n\nPython支持以下数据结构：列表，字典，元组，集合。\n\n**何时使用字典：**\n\n- 当您需要键：值对之间的逻辑关联时。\n\n- 当您需要基于自定义密钥快速查找数据时。\n\n- 当你的数据不断修改时。请记住，字典是可变的。\n\n**何时使用其他类型：**\n\n- 如果您有一些不需要随机访问的数据集合，请使用列表。当你需要一个简单的，可迭代的频繁修改的集合可以使用列表。\n\n- 如果你需要元素的唯一性，使用集合。\n\n- 当数据无法更改时使用元组。\n\n> 很多时候，元组与字典结合使用，例如元组可能代表一个关键字，因为它是不可变的。\n\n# 1、列表\n\n使用**方括号**创建\n\n```python\nwords = [\"Hello\", \"world\", \"!\"]\n```\n\n>使用空的方括号创建空列表\n>\n>可以通过索引来访问\n>\n>大多数情况下，列表中的最后一项不会带逗号。然而，在最后一项放置一个逗号是完全有效的，在某些情况下是鼓励的。 \n>\n>列表的索引是从0开始的，而不是从1开始的\n\n# 2、集合\n\n使用**花括号**或 **set** 函数创建\n\n```python\nnum_set = {1, 2, 3, 4, 5}\nword_set = set([\"spam\", \"eggs\", \"sausage\"])\n```\n\n> 要创建一个空集，必须使用 set()，如 {} 是创建一个空字典。\n> \n> 集合是**无序**的，这意味着他们不能被索引。\n> \n> 集合不能包含重复的元素。\n> \n> 由于存储的方式，检查一个项目是否是一个集合的一部分比检查是不是列表的一部分**更快**。  \n> \n> 集合使用 **add** 添加元素 。  \n> \n> **remove** 方法从集合中删除特定的元素; **pop** 删除随机的元素。\n\n#  3、元组\n\n元组 使用**圆括号**创建 ，也可以在没有**圆括号**的情况下创建\n\n```python\nwords = (\"spam\", \"eggs\", \"sausages\",)\nmy_tuple = \"one\", \"two\", \"three\"\n```\n\n> 使用空括号对创建空元组。\n>\n> 元组比列表快，但是元组不能改变。 \n>\n> 可以使用索引访问元组中的值。\n\n# 4、字典\n\n字典是用于将任意键映射到值的数据结构\n\n```python\nages = {\"Dave\": 24, \"Mary\": 42, \"John\": 58}\n```\n\n> 空字典被定义为{}。\n>\n> 字典 中的每个元素都由一个 键:值 对来表示。 \n>\n> 使用 **字典[\"键名\"]** 可以获取对应的值。\n\n\n\n","slug":"pyMulCom","published":1,"updated":"2022-06-03T06:00:55.605Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl42z5h7x006b3gn6a0n4g3a8","content":"<h1>数据结构</h1>\n<p>Python支持以下数据结构：列表，字典，元组，集合。</p>\n<p><strong>何时使用字典：</strong></p>\n<ul>\n<li>\n<p>当您需要键：值对之间的逻辑关联时。</p>\n</li>\n<li>\n<p>当您需要基于自定义密钥快速查找数据时。</p>\n</li>\n<li>\n<p>当你的数据不断修改时。请记住，字典是可变的。</p>\n</li>\n</ul>\n<p><strong>何时使用其他类型：</strong></p>\n<ul>\n<li>\n<p>如果您有一些不需要随机访问的数据集合，请使用列表。当你需要一个简单的，可迭代的频繁修改的集合可以使用列表。</p>\n</li>\n<li>\n<p>如果你需要元素的唯一性，使用集合。</p>\n</li>\n<li>\n<p>当数据无法更改时使用元组。</p>\n</li>\n</ul>\n<blockquote>\n<p>很多时候，元组与字典结合使用，例如元组可能代表一个关键字，因为它是不可变的。</p>\n</blockquote>\n<h1>1、列表</h1>\n<p>使用<strong>方括号</strong>创建</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">words &#x3D; [&quot;Hello&quot;, &quot;world&quot;, &quot;!&quot;]</code></pre>\n<blockquote>\n<p>使用空的方括号创建空列表</p>\n<p>可以通过索引来访问</p>\n<p>大多数情况下，列表中的最后一项不会带逗号。然而，在最后一项放置一个逗号是完全有效的，在某些情况下是鼓励的。</p>\n<p>列表的索引是从0开始的，而不是从1开始的</p>\n</blockquote>\n<h1>2、集合</h1>\n<p>使用<strong>花括号</strong>或 <strong>set</strong> 函数创建</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">num_set &#x3D; &#123;1, 2, 3, 4, 5&#125;\nword_set &#x3D; set([&quot;spam&quot;, &quot;eggs&quot;, &quot;sausage&quot;])</code></pre>\n<blockquote>\n<p>要创建一个空集，必须使用 set()，如 {} 是创建一个空字典。</p>\n<p>集合是<strong>无序</strong>的，这意味着他们不能被索引。</p>\n<p>集合不能包含重复的元素。</p>\n<p>由于存储的方式，检查一个项目是否是一个集合的一部分比检查是不是列表的一部分<strong>更快</strong>。</p>\n<p>集合使用 <strong>add</strong> 添加元素 。</p>\n<p><strong>remove</strong> 方法从集合中删除特定的元素; <strong>pop</strong> 删除随机的元素。</p>\n</blockquote>\n<h1>3、元组</h1>\n<p>元组 使用<strong>圆括号</strong>创建 ，也可以在没有<strong>圆括号</strong>的情况下创建</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">words &#x3D; (&quot;spam&quot;, &quot;eggs&quot;, &quot;sausages&quot;,)\nmy_tuple &#x3D; &quot;one&quot;, &quot;two&quot;, &quot;three&quot;</code></pre>\n<blockquote>\n<p>使用空括号对创建空元组。</p>\n<p>元组比列表快，但是元组不能改变。</p>\n<p>可以使用索引访问元组中的值。</p>\n</blockquote>\n<h1>4、字典</h1>\n<p>字典是用于将任意键映射到值的数据结构</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">ages &#x3D; &#123;&quot;Dave&quot;: 24, &quot;Mary&quot;: 42, &quot;John&quot;: 58&#125;</code></pre>\n<blockquote>\n<p>空字典被定义为{}。</p>\n<p>字典 中的每个元素都由一个 键:值 对来表示。</p>\n<p>使用 <strong>字典[“键名”]</strong> 可以获取对应的值。</p>\n</blockquote>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"cover":"https://blog.huangge1199.cn/post/pyListSort/bg.jpeg","excerpt":"","more":"<h1>数据结构</h1>\n<p>Python支持以下数据结构：列表，字典，元组，集合。</p>\n<p><strong>何时使用字典：</strong></p>\n<ul>\n<li>\n<p>当您需要键：值对之间的逻辑关联时。</p>\n</li>\n<li>\n<p>当您需要基于自定义密钥快速查找数据时。</p>\n</li>\n<li>\n<p>当你的数据不断修改时。请记住，字典是可变的。</p>\n</li>\n</ul>\n<p><strong>何时使用其他类型：</strong></p>\n<ul>\n<li>\n<p>如果您有一些不需要随机访问的数据集合，请使用列表。当你需要一个简单的，可迭代的频繁修改的集合可以使用列表。</p>\n</li>\n<li>\n<p>如果你需要元素的唯一性，使用集合。</p>\n</li>\n<li>\n<p>当数据无法更改时使用元组。</p>\n</li>\n</ul>\n<blockquote>\n<p>很多时候，元组与字典结合使用，例如元组可能代表一个关键字，因为它是不可变的。</p>\n</blockquote>\n<h1>1、列表</h1>\n<p>使用<strong>方括号</strong>创建</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">words &#x3D; [&quot;Hello&quot;, &quot;world&quot;, &quot;!&quot;]</code></pre>\n<blockquote>\n<p>使用空的方括号创建空列表</p>\n<p>可以通过索引来访问</p>\n<p>大多数情况下，列表中的最后一项不会带逗号。然而，在最后一项放置一个逗号是完全有效的，在某些情况下是鼓励的。</p>\n<p>列表的索引是从0开始的，而不是从1开始的</p>\n</blockquote>\n<h1>2、集合</h1>\n<p>使用<strong>花括号</strong>或 <strong>set</strong> 函数创建</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">num_set &#x3D; &#123;1, 2, 3, 4, 5&#125;\nword_set &#x3D; set([&quot;spam&quot;, &quot;eggs&quot;, &quot;sausage&quot;])</code></pre>\n<blockquote>\n<p>要创建一个空集，必须使用 set()，如 {} 是创建一个空字典。</p>\n<p>集合是<strong>无序</strong>的，这意味着他们不能被索引。</p>\n<p>集合不能包含重复的元素。</p>\n<p>由于存储的方式，检查一个项目是否是一个集合的一部分比检查是不是列表的一部分<strong>更快</strong>。</p>\n<p>集合使用 <strong>add</strong> 添加元素 。</p>\n<p><strong>remove</strong> 方法从集合中删除特定的元素; <strong>pop</strong> 删除随机的元素。</p>\n</blockquote>\n<h1>3、元组</h1>\n<p>元组 使用<strong>圆括号</strong>创建 ，也可以在没有<strong>圆括号</strong>的情况下创建</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">words &#x3D; (&quot;spam&quot;, &quot;eggs&quot;, &quot;sausages&quot;,)\nmy_tuple &#x3D; &quot;one&quot;, &quot;two&quot;, &quot;three&quot;</code></pre>\n<blockquote>\n<p>使用空括号对创建空元组。</p>\n<p>元组比列表快，但是元组不能改变。</p>\n<p>可以使用索引访问元组中的值。</p>\n</blockquote>\n<h1>4、字典</h1>\n<p>字典是用于将任意键映射到值的数据结构</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">ages &#x3D; &#123;&quot;Dave&quot;: 24, &quot;Mary&quot;: 42, &quot;John&quot;: 58&#125;</code></pre>\n<blockquote>\n<p>空字典被定义为{}。</p>\n<p>字典 中的每个元素都由一个 键:值 对来表示。</p>\n<p>使用 <strong>字典[“键名”]</strong> 可以获取对应的值。</p>\n</blockquote>\n"},{"title":"python3学习笔记--常用的函数","date":"2022-03-01T01:02:19.000Z","_content":"\n{% note info no-icon %}\n本篇博客内容为学习整理笔记，学习地址为：\nhttps://www.w3cschool.cn/minicourse/play/python3course?cp=427&gid=0\n{% endnote %}\n\n# 字符串函数\n\n## 1、join\n\n以另一个字符串作为分隔符连接字符串列表。\n\n例如：\n\n```python\nprint(\", \".join([\"spam\", \"eggs\", \"ham\"]))\n# 打印 \"spam, eggs, ham\"\n```\n\n## 2、replace\n\n用另一个替换字符串中的一个子字符串。\n\n例如：\n\n```python\nprint(\"Hello ME\".replace(\"ME\", \"world\"))\n# 打印 \"Hello world\"\n```\n\n## 3、startswith\n\n确定是否在字符串的开始处有一个子字符串。\n\n例如：\n\n```python\nprint(\"This is a sentence.\".startswith(\"This\"))\n# 打印 \"True\"\n```\n\n## 4、endswith\n\n确定是否在字符串的结尾处有一个子字符串。\n\n例如：\n\n```python\nprint(\"This is a sentence.\".endswith(\"sentence.\"))\n# 打印 \"True\"\n```\n\n## 5、lower\n\n将字符串全部转为小写。\n\n例如：\n\n```python\nprint(\"AN ALL CAPS SENTENCE\".lower())\n# 打印  \"an all caps sentence\"\n```\n\n## 6、upper\n\n将字符串全部转为大写。\n\n例如：\n\n```python\nprint(\"This is a sentence.\".upper())\n# 打印 \"THIS IS A SENTENCE.\"\n```\n\n## 7、split\n\n把一个字符串转换成一个列表。\n\n例如：\n\n```python\nprint(\"spam, eggs, ham\".split(\", \"))\n# 打印  \"['spam', 'eggs', 'ham']\"\n```\n\n# 数字函数\n\n## 1、max\n\n查找某些数字或列表的最大值。\n\n例如：\n\n```python\nprint(max([1, 2, 9, 2, 4, 7, 8]))\n# 打印 9\n```\n\n## 2、min\n\n查找某些数字或列表的最小值。\n\n例如：\n\n```python\nprint(min(1, 6, 3, 4, 0, 7, 1))\n# 打印 0\n```\n\n## 3、abs\n\n将数字转成绝对值（该数字与0的距离）。\n\n例如：\n\n```python\nprint(abs(-93))\nprint(abs(22))\n# 打印 93\n```\n\n## 4、round\n\n要将数字四舍五入到一定的小数位数。\n\n## 5、sum\n\n计算一个列表数字的总和。\n\n例如：\n\n```python\nprint(sum([1, 2, 3, 4, 5, 6]))\n# 打印 21\n```\n\n# 列表函数\n\n## 1、all\n\n列表中所有值均为 True 时，结果为 True，否则结果为 False。\n\n例如：\n\n```python\nnums = [55, 44, 33, 22, 11]\n\nif all([i > 5 for i in nums]):\n    print(\"All larger than 5\")\n\n# 打印 All larger than 5\n```\n\n## 2、any\n\n列表中只要有一个为 True，结果为 True，反之结果为 False。\n\n例如：\n\n```python\nnums = [55, 44, 33, 22, 11]\n\nif any([i % 2 == 0 for i in nums]):\n   print(\"At least one is even\")\n\n# 打印 At least one is even5\n```\n\n## 3、enumerate\n\n用来同时迭代列表的键和值。\n\n例如：\n\n```python\nnums = [55, 44, 33, 22, 11]\n\nfor v in enumerate(nums):\n   print(v)\n\n# 打印\n# (0, 55)\n# (1, 44)\n# (2, 33)\n# (3, 22)\n# (4, 11)\n```\n","source":"_posts/pyUsefulFun.md","raw":"---\ntitle: python3学习笔记--常用的函数\ndate: 2022-03-01 09:02:19\ntags: [学习笔记,python]\ncategories: python\n---\n\n{% note info no-icon %}\n本篇博客内容为学习整理笔记，学习地址为：\nhttps://www.w3cschool.cn/minicourse/play/python3course?cp=427&gid=0\n{% endnote %}\n\n# 字符串函数\n\n## 1、join\n\n以另一个字符串作为分隔符连接字符串列表。\n\n例如：\n\n```python\nprint(\", \".join([\"spam\", \"eggs\", \"ham\"]))\n# 打印 \"spam, eggs, ham\"\n```\n\n## 2、replace\n\n用另一个替换字符串中的一个子字符串。\n\n例如：\n\n```python\nprint(\"Hello ME\".replace(\"ME\", \"world\"))\n# 打印 \"Hello world\"\n```\n\n## 3、startswith\n\n确定是否在字符串的开始处有一个子字符串。\n\n例如：\n\n```python\nprint(\"This is a sentence.\".startswith(\"This\"))\n# 打印 \"True\"\n```\n\n## 4、endswith\n\n确定是否在字符串的结尾处有一个子字符串。\n\n例如：\n\n```python\nprint(\"This is a sentence.\".endswith(\"sentence.\"))\n# 打印 \"True\"\n```\n\n## 5、lower\n\n将字符串全部转为小写。\n\n例如：\n\n```python\nprint(\"AN ALL CAPS SENTENCE\".lower())\n# 打印  \"an all caps sentence\"\n```\n\n## 6、upper\n\n将字符串全部转为大写。\n\n例如：\n\n```python\nprint(\"This is a sentence.\".upper())\n# 打印 \"THIS IS A SENTENCE.\"\n```\n\n## 7、split\n\n把一个字符串转换成一个列表。\n\n例如：\n\n```python\nprint(\"spam, eggs, ham\".split(\", \"))\n# 打印  \"['spam', 'eggs', 'ham']\"\n```\n\n# 数字函数\n\n## 1、max\n\n查找某些数字或列表的最大值。\n\n例如：\n\n```python\nprint(max([1, 2, 9, 2, 4, 7, 8]))\n# 打印 9\n```\n\n## 2、min\n\n查找某些数字或列表的最小值。\n\n例如：\n\n```python\nprint(min(1, 6, 3, 4, 0, 7, 1))\n# 打印 0\n```\n\n## 3、abs\n\n将数字转成绝对值（该数字与0的距离）。\n\n例如：\n\n```python\nprint(abs(-93))\nprint(abs(22))\n# 打印 93\n```\n\n## 4、round\n\n要将数字四舍五入到一定的小数位数。\n\n## 5、sum\n\n计算一个列表数字的总和。\n\n例如：\n\n```python\nprint(sum([1, 2, 3, 4, 5, 6]))\n# 打印 21\n```\n\n# 列表函数\n\n## 1、all\n\n列表中所有值均为 True 时，结果为 True，否则结果为 False。\n\n例如：\n\n```python\nnums = [55, 44, 33, 22, 11]\n\nif all([i > 5 for i in nums]):\n    print(\"All larger than 5\")\n\n# 打印 All larger than 5\n```\n\n## 2、any\n\n列表中只要有一个为 True，结果为 True，反之结果为 False。\n\n例如：\n\n```python\nnums = [55, 44, 33, 22, 11]\n\nif any([i % 2 == 0 for i in nums]):\n   print(\"At least one is even\")\n\n# 打印 At least one is even5\n```\n\n## 3、enumerate\n\n用来同时迭代列表的键和值。\n\n例如：\n\n```python\nnums = [55, 44, 33, 22, 11]\n\nfor v in enumerate(nums):\n   print(v)\n\n# 打印\n# (0, 55)\n# (1, 44)\n# (2, 33)\n# (3, 22)\n# (4, 11)\n```\n","slug":"pyUsefulFun","published":1,"updated":"2022-06-03T06:00:55.605Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl42z5h7z006g3gn6c02118au","content":"<div class=\"note info no-icon flat\"><p>本篇博客内容为学习整理笔记，学习地址为：<br>\n<a href=\"https://www.w3cschool.cn/minicourse/play/python3course?cp=427&amp;gid=0\">https://www.w3cschool.cn/minicourse/play/python3course?cp=427&amp;gid=0</a></p>\n</div>\n<h1>字符串函数</h1>\n<h2 id=\"1、join\">1、join</h2>\n<p>以另一个字符串作为分隔符连接字符串列表。</p>\n<p>例如：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">print(&quot;, &quot;.join([&quot;spam&quot;, &quot;eggs&quot;, &quot;ham&quot;]))\n# 打印 &quot;spam, eggs, ham&quot;</code></pre>\n<h2 id=\"2、replace\">2、replace</h2>\n<p>用另一个替换字符串中的一个子字符串。</p>\n<p>例如：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">print(&quot;Hello ME&quot;.replace(&quot;ME&quot;, &quot;world&quot;))\n# 打印 &quot;Hello world&quot;</code></pre>\n<h2 id=\"3、startswith\">3、startswith</h2>\n<p>确定是否在字符串的开始处有一个子字符串。</p>\n<p>例如：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">print(&quot;This is a sentence.&quot;.startswith(&quot;This&quot;))\n# 打印 &quot;True&quot;</code></pre>\n<h2 id=\"4、endswith\">4、endswith</h2>\n<p>确定是否在字符串的结尾处有一个子字符串。</p>\n<p>例如：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">print(&quot;This is a sentence.&quot;.endswith(&quot;sentence.&quot;))\n# 打印 &quot;True&quot;</code></pre>\n<h2 id=\"5、lower\">5、lower</h2>\n<p>将字符串全部转为小写。</p>\n<p>例如：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">print(&quot;AN ALL CAPS SENTENCE&quot;.lower())\n# 打印  &quot;an all caps sentence&quot;</code></pre>\n<h2 id=\"6、upper\">6、upper</h2>\n<p>将字符串全部转为大写。</p>\n<p>例如：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">print(&quot;This is a sentence.&quot;.upper())\n# 打印 &quot;THIS IS A SENTENCE.&quot;</code></pre>\n<h2 id=\"7、split\">7、split</h2>\n<p>把一个字符串转换成一个列表。</p>\n<p>例如：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">print(&quot;spam, eggs, ham&quot;.split(&quot;, &quot;))\n# 打印  &quot;[&#39;spam&#39;, &#39;eggs&#39;, &#39;ham&#39;]&quot;</code></pre>\n<h1>数字函数</h1>\n<h2 id=\"1、max\">1、max</h2>\n<p>查找某些数字或列表的最大值。</p>\n<p>例如：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">print(max([1, 2, 9, 2, 4, 7, 8]))\n# 打印 9</code></pre>\n<h2 id=\"2、min\">2、min</h2>\n<p>查找某些数字或列表的最小值。</p>\n<p>例如：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">print(min(1, 6, 3, 4, 0, 7, 1))\n# 打印 0</code></pre>\n<h2 id=\"3、abs\">3、abs</h2>\n<p>将数字转成绝对值（该数字与0的距离）。</p>\n<p>例如：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">print(abs(-93))\nprint(abs(22))\n# 打印 93</code></pre>\n<h2 id=\"4、round\">4、round</h2>\n<p>要将数字四舍五入到一定的小数位数。</p>\n<h2 id=\"5、sum\">5、sum</h2>\n<p>计算一个列表数字的总和。</p>\n<p>例如：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">print(sum([1, 2, 3, 4, 5, 6]))\n# 打印 21</code></pre>\n<h1>列表函数</h1>\n<h2 id=\"1、all\">1、all</h2>\n<p>列表中所有值均为 True 时，结果为 True，否则结果为 False。</p>\n<p>例如：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">nums &#x3D; [55, 44, 33, 22, 11]\n\nif all([i &gt; 5 for i in nums]):\n    print(&quot;All larger than 5&quot;)\n\n# 打印 All larger than 5</code></pre>\n<h2 id=\"2、any\">2、any</h2>\n<p>列表中只要有一个为 True，结果为 True，反之结果为 False。</p>\n<p>例如：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">nums &#x3D; [55, 44, 33, 22, 11]\n\nif any([i % 2 &#x3D;&#x3D; 0 for i in nums]):\n   print(&quot;At least one is even&quot;)\n\n# 打印 At least one is even5</code></pre>\n<h2 id=\"3、enumerate\">3、enumerate</h2>\n<p>用来同时迭代列表的键和值。</p>\n<p>例如：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">nums &#x3D; [55, 44, 33, 22, 11]\n\nfor v in enumerate(nums):\n   print(v)\n\n# 打印\n# (0, 55)\n# (1, 44)\n# (2, 33)\n# (3, 22)\n# (4, 11)</code></pre>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"cover":"https://blog.huangge1199.cn/post/jpaCompositePK/bg.jpg","excerpt":"","more":"<div class=\"note info no-icon flat\"><p>本篇博客内容为学习整理笔记，学习地址为：<br>\n<a href=\"https://www.w3cschool.cn/minicourse/play/python3course?cp=427&amp;gid=0\">https://www.w3cschool.cn/minicourse/play/python3course?cp=427&amp;gid=0</a></p>\n</div>\n<h1>字符串函数</h1>\n<h2 id=\"1、join\">1、join</h2>\n<p>以另一个字符串作为分隔符连接字符串列表。</p>\n<p>例如：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">print(&quot;, &quot;.join([&quot;spam&quot;, &quot;eggs&quot;, &quot;ham&quot;]))\n# 打印 &quot;spam, eggs, ham&quot;</code></pre>\n<h2 id=\"2、replace\">2、replace</h2>\n<p>用另一个替换字符串中的一个子字符串。</p>\n<p>例如：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">print(&quot;Hello ME&quot;.replace(&quot;ME&quot;, &quot;world&quot;))\n# 打印 &quot;Hello world&quot;</code></pre>\n<h2 id=\"3、startswith\">3、startswith</h2>\n<p>确定是否在字符串的开始处有一个子字符串。</p>\n<p>例如：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">print(&quot;This is a sentence.&quot;.startswith(&quot;This&quot;))\n# 打印 &quot;True&quot;</code></pre>\n<h2 id=\"4、endswith\">4、endswith</h2>\n<p>确定是否在字符串的结尾处有一个子字符串。</p>\n<p>例如：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">print(&quot;This is a sentence.&quot;.endswith(&quot;sentence.&quot;))\n# 打印 &quot;True&quot;</code></pre>\n<h2 id=\"5、lower\">5、lower</h2>\n<p>将字符串全部转为小写。</p>\n<p>例如：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">print(&quot;AN ALL CAPS SENTENCE&quot;.lower())\n# 打印  &quot;an all caps sentence&quot;</code></pre>\n<h2 id=\"6、upper\">6、upper</h2>\n<p>将字符串全部转为大写。</p>\n<p>例如：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">print(&quot;This is a sentence.&quot;.upper())\n# 打印 &quot;THIS IS A SENTENCE.&quot;</code></pre>\n<h2 id=\"7、split\">7、split</h2>\n<p>把一个字符串转换成一个列表。</p>\n<p>例如：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">print(&quot;spam, eggs, ham&quot;.split(&quot;, &quot;))\n# 打印  &quot;[&#39;spam&#39;, &#39;eggs&#39;, &#39;ham&#39;]&quot;</code></pre>\n<h1>数字函数</h1>\n<h2 id=\"1、max\">1、max</h2>\n<p>查找某些数字或列表的最大值。</p>\n<p>例如：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">print(max([1, 2, 9, 2, 4, 7, 8]))\n# 打印 9</code></pre>\n<h2 id=\"2、min\">2、min</h2>\n<p>查找某些数字或列表的最小值。</p>\n<p>例如：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">print(min(1, 6, 3, 4, 0, 7, 1))\n# 打印 0</code></pre>\n<h2 id=\"3、abs\">3、abs</h2>\n<p>将数字转成绝对值（该数字与0的距离）。</p>\n<p>例如：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">print(abs(-93))\nprint(abs(22))\n# 打印 93</code></pre>\n<h2 id=\"4、round\">4、round</h2>\n<p>要将数字四舍五入到一定的小数位数。</p>\n<h2 id=\"5、sum\">5、sum</h2>\n<p>计算一个列表数字的总和。</p>\n<p>例如：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">print(sum([1, 2, 3, 4, 5, 6]))\n# 打印 21</code></pre>\n<h1>列表函数</h1>\n<h2 id=\"1、all\">1、all</h2>\n<p>列表中所有值均为 True 时，结果为 True，否则结果为 False。</p>\n<p>例如：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">nums &#x3D; [55, 44, 33, 22, 11]\n\nif all([i &gt; 5 for i in nums]):\n    print(&quot;All larger than 5&quot;)\n\n# 打印 All larger than 5</code></pre>\n<h2 id=\"2、any\">2、any</h2>\n<p>列表中只要有一个为 True，结果为 True，反之结果为 False。</p>\n<p>例如：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">nums &#x3D; [55, 44, 33, 22, 11]\n\nif any([i % 2 &#x3D;&#x3D; 0 for i in nums]):\n   print(&quot;At least one is even&quot;)\n\n# 打印 At least one is even5</code></pre>\n<h2 id=\"3、enumerate\">3、enumerate</h2>\n<p>用来同时迭代列表的键和值。</p>\n<p>例如：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">nums &#x3D; [55, 44, 33, 22, 11]\n\nfor v in enumerate(nums):\n   print(v)\n\n# 打印\n# (0, 55)\n# (1, 44)\n# (2, 33)\n# (3, 22)\n# (4, 11)</code></pre>\n"},{"title":"maven打jar包时本地依赖包未在其中？","date":"2022-03-10T06:18:41.000Z","cover":"https://blog.huangge1199.cn/post/question20220310-1/bg.jpeg","_content":"今天，运行jar包时，报错了，报的内容是不存在某一个依赖包中的类，经过一番排查，发现这个类是下面这种形式依赖的\n```xml\n<dependency>\n\t<groupId>com.oracle</groupId>\n\t<artifactId>ojdbc6</artifactId>\n\t<version>11.2.0.4</version>\n\t<scope>system</scope>\n\t<systemPath>D:/work/ojdbc6-11.2.0.4.jar</systemPath>\n</dependency>\n```\n针对依赖包是在本地的这种情况，需要在pom中添加includeSystemScope=true，参考如下：\n```xml\n<build>\n\t<plugins>\n\t\t<plugin>\n\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t<artifactId>spring-boot-maven-plugin</artifactId>\n\t\t\t<version>2.1.7.RELEASE</version>\n\t\t\t<configuration>\n\t\t\t\t<includeSystemScope>true</includeSystemScope>\n\t\t\t</configuration>\n\t\t</plugin>\n\t</plugins>\n</build>\n```\n","source":"_posts/question20220310-1.md","raw":"---\ntitle: maven打jar包时本地依赖包未在其中？\ndate: 2022-03-10 14:18:41\ntags: maven\ncategories: 问题记录\ncover: https://blog.huangge1199.cn/post/question20220310-1/bg.jpeg\n---\n今天，运行jar包时，报错了，报的内容是不存在某一个依赖包中的类，经过一番排查，发现这个类是下面这种形式依赖的\n```xml\n<dependency>\n\t<groupId>com.oracle</groupId>\n\t<artifactId>ojdbc6</artifactId>\n\t<version>11.2.0.4</version>\n\t<scope>system</scope>\n\t<systemPath>D:/work/ojdbc6-11.2.0.4.jar</systemPath>\n</dependency>\n```\n针对依赖包是在本地的这种情况，需要在pom中添加includeSystemScope=true，参考如下：\n```xml\n<build>\n\t<plugins>\n\t\t<plugin>\n\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t<artifactId>spring-boot-maven-plugin</artifactId>\n\t\t\t<version>2.1.7.RELEASE</version>\n\t\t\t<configuration>\n\t\t\t\t<includeSystemScope>true</includeSystemScope>\n\t\t\t</configuration>\n\t\t</plugin>\n\t</plugins>\n</build>\n```\n","slug":"question20220310-1","published":1,"updated":"2022-06-03T06:00:55.605Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl42z5h80006j3gn67o5d3pma","content":"<p>今天，运行jar包时，报错了，报的内容是不存在某一个依赖包中的类，经过一番排查，发现这个类是下面这种形式依赖的</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;dependency&gt;\n\t&lt;groupId&gt;com.oracle&lt;&#x2F;groupId&gt;\n\t&lt;artifactId&gt;ojdbc6&lt;&#x2F;artifactId&gt;\n\t&lt;version&gt;11.2.0.4&lt;&#x2F;version&gt;\n\t&lt;scope&gt;system&lt;&#x2F;scope&gt;\n\t&lt;systemPath&gt;D:&#x2F;work&#x2F;ojdbc6-11.2.0.4.jar&lt;&#x2F;systemPath&gt;\n&lt;&#x2F;dependency&gt;</code></pre>\n<p>针对依赖包是在本地的这种情况，需要在pom中添加includeSystemScope=true，参考如下：</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;build&gt;\n\t&lt;plugins&gt;\n\t\t&lt;plugin&gt;\n\t\t\t&lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;\n\t\t\t&lt;artifactId&gt;spring-boot-maven-plugin&lt;&#x2F;artifactId&gt;\n\t\t\t&lt;version&gt;2.1.7.RELEASE&lt;&#x2F;version&gt;\n\t\t\t&lt;configuration&gt;\n\t\t\t\t&lt;includeSystemScope&gt;true&lt;&#x2F;includeSystemScope&gt;\n\t\t\t&lt;&#x2F;configuration&gt;\n\t\t&lt;&#x2F;plugin&gt;\n\t&lt;&#x2F;plugins&gt;\n&lt;&#x2F;build&gt;</code></pre>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"excerpt":"","more":"<p>今天，运行jar包时，报错了，报的内容是不存在某一个依赖包中的类，经过一番排查，发现这个类是下面这种形式依赖的</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;dependency&gt;\n\t&lt;groupId&gt;com.oracle&lt;&#x2F;groupId&gt;\n\t&lt;artifactId&gt;ojdbc6&lt;&#x2F;artifactId&gt;\n\t&lt;version&gt;11.2.0.4&lt;&#x2F;version&gt;\n\t&lt;scope&gt;system&lt;&#x2F;scope&gt;\n\t&lt;systemPath&gt;D:&#x2F;work&#x2F;ojdbc6-11.2.0.4.jar&lt;&#x2F;systemPath&gt;\n&lt;&#x2F;dependency&gt;</code></pre>\n<p>针对依赖包是在本地的这种情况，需要在pom中添加includeSystemScope=true，参考如下：</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;build&gt;\n\t&lt;plugins&gt;\n\t\t&lt;plugin&gt;\n\t\t\t&lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;\n\t\t\t&lt;artifactId&gt;spring-boot-maven-plugin&lt;&#x2F;artifactId&gt;\n\t\t\t&lt;version&gt;2.1.7.RELEASE&lt;&#x2F;version&gt;\n\t\t\t&lt;configuration&gt;\n\t\t\t\t&lt;includeSystemScope&gt;true&lt;&#x2F;includeSystemScope&gt;\n\t\t\t&lt;&#x2F;configuration&gt;\n\t\t&lt;&#x2F;plugin&gt;\n\t&lt;&#x2F;plugins&gt;\n&lt;&#x2F;build&gt;</code></pre>\n"},{"title":"力扣459:重复的子字符串","date":"2022-04-18T07:53:15.000Z","_content":"\n今天刷力扣发现一道有趣的题，这道题目很普通，但是解法确可以偷懒\n\n原题链接：[力扣459:重复的子字符串](https://leetcode-cn.com/problems/repeated-substring-pattern/)\n\n# 题目\n\n<p>给定一个非空的字符串<meta charset=\"UTF-8\" />&nbsp;<code>s</code>&nbsp;，检查是否可以通过由它的一个子串重复多次构成。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre>\n<strong>输入:</strong> s = \"abab\"\n<strong>输出:</strong> true\n<strong>解释:</strong> 可由子串 \"ab\" 重复两次构成。\n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre>\n<strong>输入:</strong> s = \"aba\"\n<strong>输出:</strong> false\n</pre>\n\n<p><strong>示例 3:</strong></p>\n\n<pre>\n<strong>输入:</strong> s = \"abcabcabcabc\"\n<strong>输出:</strong> true\n<strong>解释:</strong> 可由子串 \"abc\" 重复四次构成。 (或子串 \"abcabc\" 重复两次构成。)\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>提示：</b></p>\n\n<p><meta charset=\"UTF-8\" /></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>s</code>&nbsp;由小写英文字母组成</li>\n</ul>\n<div><div>Related Topics</div><div><li>字符串</li><li>字符串匹配</li></div></div><br>\n\n# 个人解法\n\n想法：既然要判断字符串是否由一个子串重复多次构成，那么如果结果是肯定的，这个字符串的长\n度一定能够整除子串的长度。\n\n所以我首先做一个循环，找到可能作为子串重复的字符串，在其基础上判断是否满足，循环结束\n后都没有找到满足的，那么结果肯定就是false了。\n\n接下来我们考虑循环内部的逻辑，如果一个子串可以满足子串重复多次组成当前的字符串，那么按\n照子串的长度分割，每一部分都是相同的。接下来就是重点了！！！重点！！！怎么判断这些部分\n都相同？？\n\n<div style=\"color: red\">\n假设满足条件：<br/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s = \"abdfs\"<br/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;parent = s1+s2+s3+s4+....sn（s1...sn都是s）<br/>\n根据上面的字符串以及子串作说明<br/>\n可以分为两步判断：\n<ol style=\"color: green\">\n<li>s1和sn相同</li>\n<li>s2s3s4...sn和s1s2s3....s(n-1)相同</li>\n</ol>\n2中s2=s1，s3=s2.....sn=s(n-1)，这样一来s1,s2,s3....sn就都相同了\n</div>\n\n{% tabs categories%}\n\n<!-- tab Java -->\n\n```java\nclass Solution {\n    public boolean repeatedSubstringPattern(String s) {\n        int lens = s.length();\n        for (int i = 1; i < lens; i++) {\n            if (lens % i == 0) {\n                if (s.substring(0, i).equals(s.substring(lens - i))\n                        && s.substring(i).equals(s.substring(0, lens - i))) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n}\n```\n\n<!-- endtab -->\n\n<!-- tab Python3 -->\n\n```python\nclass Solution:\n    def repeatedSubstringPattern(self, s: str) -> bool:\n        for i in range(1, len(s)):\n            if len(s) % i == 0:\n                if s[0:i] == s[len(s)-i:len(s)] and s[0:len(s)-i] == s[i:len(s)]:\n                    return True\n        return False\n```\n\n<!-- endtab -->\n\n{% endtabs %}\n","source":"_posts/repeatedSubstringPattern.md","raw":"---\ntitle: 力扣459:重复的子字符串\ndate: 2022-04-18 15:53:15\ntags: [力扣]\ncategories: [算法,力扣]\n---\n\n今天刷力扣发现一道有趣的题，这道题目很普通，但是解法确可以偷懒\n\n原题链接：[力扣459:重复的子字符串](https://leetcode-cn.com/problems/repeated-substring-pattern/)\n\n# 题目\n\n<p>给定一个非空的字符串<meta charset=\"UTF-8\" />&nbsp;<code>s</code>&nbsp;，检查是否可以通过由它的一个子串重复多次构成。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre>\n<strong>输入:</strong> s = \"abab\"\n<strong>输出:</strong> true\n<strong>解释:</strong> 可由子串 \"ab\" 重复两次构成。\n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre>\n<strong>输入:</strong> s = \"aba\"\n<strong>输出:</strong> false\n</pre>\n\n<p><strong>示例 3:</strong></p>\n\n<pre>\n<strong>输入:</strong> s = \"abcabcabcabc\"\n<strong>输出:</strong> true\n<strong>解释:</strong> 可由子串 \"abc\" 重复四次构成。 (或子串 \"abcabc\" 重复两次构成。)\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>提示：</b></p>\n\n<p><meta charset=\"UTF-8\" /></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>s</code>&nbsp;由小写英文字母组成</li>\n</ul>\n<div><div>Related Topics</div><div><li>字符串</li><li>字符串匹配</li></div></div><br>\n\n# 个人解法\n\n想法：既然要判断字符串是否由一个子串重复多次构成，那么如果结果是肯定的，这个字符串的长\n度一定能够整除子串的长度。\n\n所以我首先做一个循环，找到可能作为子串重复的字符串，在其基础上判断是否满足，循环结束\n后都没有找到满足的，那么结果肯定就是false了。\n\n接下来我们考虑循环内部的逻辑，如果一个子串可以满足子串重复多次组成当前的字符串，那么按\n照子串的长度分割，每一部分都是相同的。接下来就是重点了！！！重点！！！怎么判断这些部分\n都相同？？\n\n<div style=\"color: red\">\n假设满足条件：<br/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s = \"abdfs\"<br/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;parent = s1+s2+s3+s4+....sn（s1...sn都是s）<br/>\n根据上面的字符串以及子串作说明<br/>\n可以分为两步判断：\n<ol style=\"color: green\">\n<li>s1和sn相同</li>\n<li>s2s3s4...sn和s1s2s3....s(n-1)相同</li>\n</ol>\n2中s2=s1，s3=s2.....sn=s(n-1)，这样一来s1,s2,s3....sn就都相同了\n</div>\n\n{% tabs categories%}\n\n<!-- tab Java -->\n\n```java\nclass Solution {\n    public boolean repeatedSubstringPattern(String s) {\n        int lens = s.length();\n        for (int i = 1; i < lens; i++) {\n            if (lens % i == 0) {\n                if (s.substring(0, i).equals(s.substring(lens - i))\n                        && s.substring(i).equals(s.substring(0, lens - i))) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n}\n```\n\n<!-- endtab -->\n\n<!-- tab Python3 -->\n\n```python\nclass Solution:\n    def repeatedSubstringPattern(self, s: str) -> bool:\n        for i in range(1, len(s)):\n            if len(s) % i == 0:\n                if s[0:i] == s[len(s)-i:len(s)] and s[0:len(s)-i] == s[i:len(s)]:\n                    return True\n        return False\n```\n\n<!-- endtab -->\n\n{% endtabs %}\n","slug":"repeatedSubstringPattern","published":1,"updated":"2022-06-03T06:00:55.605Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl42z5h81006o3gn67xlabz22","content":"<p>今天刷力扣发现一道有趣的题，这道题目很普通，但是解法确可以偷懒</p>\n<p>原题链接：<a href=\"https://leetcode-cn.com/problems/repeated-substring-pattern/\">力扣459:重复的子字符串</a></p>\n<h1>题目</h1>\n<p>给定一个非空的字符串<meta charset=\"UTF-8\" />&nbsp;<code>s</code>&nbsp;，检查是否可以通过由它的一个子串重复多次构成。</p>\n<p>&nbsp;</p>\n<p><strong>示例 1:</strong></p>\n<pre>\n<strong>输入:</strong> s = \"abab\"\n<strong>输出:</strong> true\n<strong>解释:</strong> 可由子串 \"ab\" 重复两次构成。\n</pre>\n<p><strong>示例 2:</strong></p>\n<pre>\n<strong>输入:</strong> s = \"aba\"\n<strong>输出:</strong> false\n</pre>\n<p><strong>示例 3:</strong></p>\n<pre>\n<strong>输入:</strong> s = \"abcabcabcabc\"\n<strong>输出:</strong> true\n<strong>解释:</strong> 可由子串 \"abc\" 重复四次构成。 (或子串 \"abcabc\" 重复两次构成。)\n</pre>\n<p>&nbsp;</p>\n<p><b>提示：</b></p>\n<p><meta charset=\"UTF-8\" /></p>\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>s</code>&nbsp;由小写英文字母组成</li>\n</ul>\n<div><div>Related Topics</div><div><li>字符串</li><li>字符串匹配</li></div></div><br>\n<h1>个人解法</h1>\n<p>想法：既然要判断字符串是否由一个子串重复多次构成，那么如果结果是肯定的，这个字符串的长<br>\n度一定能够整除子串的长度。</p>\n<p>所以我首先做一个循环，找到可能作为子串重复的字符串，在其基础上判断是否满足，循环结束<br>\n后都没有找到满足的，那么结果肯定就是false了。</p>\n<p>接下来我们考虑循环内部的逻辑，如果一个子串可以满足子串重复多次组成当前的字符串，那么按<br>\n照子串的长度分割，每一部分都是相同的。接下来就是重点了！！！重点！！！怎么判断这些部分<br>\n都相同？？</p>\n<div style=\"color: red\">\n假设满足条件：<br/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s = \"abdfs\"<br/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;parent = s1+s2+s3+s4+....sn（s1...sn都是s）<br/>\n根据上面的字符串以及子串作说明<br/>\n可以分为两步判断：\n<ol style=\"color: green\">\n<li>s1和sn相同</li>\n<li>s2s3s4...sn和s1s2s3....s(n-1)相同</li>\n</ol>\n2中s2=s1，s3=s2.....sn=s(n-1)，这样一来s1,s2,s3....sn就都相同了\n</div>\n<div class=\"tabs\" id=\"categories\"><ul class=\"nav-tabs\"><li class=\"tab active\"><button type=\"button\" data-href=\"#categories-1\">Java</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#categories-2\">Python3</button></li></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"categories-1\"><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">class Solution &#123;\n    public boolean repeatedSubstringPattern(String s) &#123;\n        int lens &#x3D; s.length();\n        for (int i &#x3D; 1; i &lt; lens; i++) &#123;\n            if (lens % i &#x3D;&#x3D; 0) &#123;\n                if (s.substring(0, i).equals(s.substring(lens - i))\n                        &amp;&amp; s.substring(i).equals(s.substring(0, lens - i))) &#123;\n                    return true;\n                &#125;\n            &#125;\n        &#125;\n        return false;\n    &#125;\n&#125;</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"categories-2\"><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">class Solution:\n    def repeatedSubstringPattern(self, s: str) -&gt; bool:\n        for i in range(1, len(s)):\n            if len(s) % i &#x3D;&#x3D; 0:\n                if s[0:i] &#x3D;&#x3D; s[len(s)-i:len(s)] and s[0:len(s)-i] &#x3D;&#x3D; s[i:len(s)]:\n                    return True\n        return False</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div></div>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"cover":"https://blog.huangge1199.cn/post/day20220121/bg.jpeg","excerpt":"","more":"<p>今天刷力扣发现一道有趣的题，这道题目很普通，但是解法确可以偷懒</p>\n<p>原题链接：<a href=\"https://leetcode-cn.com/problems/repeated-substring-pattern/\">力扣459:重复的子字符串</a></p>\n<h1>题目</h1>\n<p>给定一个非空的字符串<meta charset=\"UTF-8\" />&nbsp;<code>s</code>&nbsp;，检查是否可以通过由它的一个子串重复多次构成。</p>\n<p>&nbsp;</p>\n<p><strong>示例 1:</strong></p>\n<pre>\n<strong>输入:</strong> s = \"abab\"\n<strong>输出:</strong> true\n<strong>解释:</strong> 可由子串 \"ab\" 重复两次构成。\n</pre>\n<p><strong>示例 2:</strong></p>\n<pre>\n<strong>输入:</strong> s = \"aba\"\n<strong>输出:</strong> false\n</pre>\n<p><strong>示例 3:</strong></p>\n<pre>\n<strong>输入:</strong> s = \"abcabcabcabc\"\n<strong>输出:</strong> true\n<strong>解释:</strong> 可由子串 \"abc\" 重复四次构成。 (或子串 \"abcabc\" 重复两次构成。)\n</pre>\n<p>&nbsp;</p>\n<p><b>提示：</b></p>\n<p><meta charset=\"UTF-8\" /></p>\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>s</code>&nbsp;由小写英文字母组成</li>\n</ul>\n<div><div>Related Topics</div><div><li>字符串</li><li>字符串匹配</li></div></div><br>\n<h1>个人解法</h1>\n<p>想法：既然要判断字符串是否由一个子串重复多次构成，那么如果结果是肯定的，这个字符串的长<br>\n度一定能够整除子串的长度。</p>\n<p>所以我首先做一个循环，找到可能作为子串重复的字符串，在其基础上判断是否满足，循环结束<br>\n后都没有找到满足的，那么结果肯定就是false了。</p>\n<p>接下来我们考虑循环内部的逻辑，如果一个子串可以满足子串重复多次组成当前的字符串，那么按<br>\n照子串的长度分割，每一部分都是相同的。接下来就是重点了！！！重点！！！怎么判断这些部分<br>\n都相同？？</p>\n<div style=\"color: red\">\n假设满足条件：<br/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s = \"abdfs\"<br/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;parent = s1+s2+s3+s4+....sn（s1...sn都是s）<br/>\n根据上面的字符串以及子串作说明<br/>\n可以分为两步判断：\n<ol style=\"color: green\">\n<li>s1和sn相同</li>\n<li>s2s3s4...sn和s1s2s3....s(n-1)相同</li>\n</ol>\n2中s2=s1，s3=s2.....sn=s(n-1)，这样一来s1,s2,s3....sn就都相同了\n</div>\n<div class=\"tabs\" id=\"categories\"><ul class=\"nav-tabs\"><li class=\"tab active\"><button type=\"button\" data-href=\"#categories-1\">Java</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#categories-2\">Python3</button></li></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"categories-1\"><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">class Solution &#123;\n    public boolean repeatedSubstringPattern(String s) &#123;\n        int lens &#x3D; s.length();\n        for (int i &#x3D; 1; i &lt; lens; i++) &#123;\n            if (lens % i &#x3D;&#x3D; 0) &#123;\n                if (s.substring(0, i).equals(s.substring(lens - i))\n                        &amp;&amp; s.substring(i).equals(s.substring(0, lens - i))) &#123;\n                    return true;\n                &#125;\n            &#125;\n        &#125;\n        return false;\n    &#125;\n&#125;</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"categories-2\"><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">class Solution:\n    def repeatedSubstringPattern(self, s: str) -&gt; bool:\n        for i in range(1, len(s)):\n            if len(s) % i &#x3D;&#x3D; 0:\n                if s[0:i] &#x3D;&#x3D; s[len(s)-i:len(s)] and s[0:len(s)-i] &#x3D;&#x3D; s[i:len(s)]:\n                    return True\n        return False</code></pre><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div></div>\n"},{"title":"seata1.4.1服务端部署及应用","date":"2022-02-02T01:37:59.000Z","_content":"# seata1.4.1服务端部署及应用\n\nspringcloud-nacos-seata\n\n**分布式事务组件seata的使用demo，AT模式，集成nacos、springboot、springcloud、mybatis-plus、feign，数据库采用mysql**\n\ndemo中使用的相关版本号，具体请看代码。如果搭建个人demo不成功，验证是否是由版本导致，由于目前这几个项目更新比较频繁，版本稍有变化便会出现许多奇怪问题\n\n* seata 1.4.1\n* spring-cloud-alibaba-seata 2.2.0.RELEASE\n* spring-cloud-starter-alibaba-nacos-discovery  2.1.1.RELEASE\n* springboot 2.1.10.RELEASE\n* springcloud Greenwich.SR4\n\n----------\n\n# 1. 服务端配置\n\nseata-server为release版本1.4.1，采用docker部署方式\n\nhttps://github.com/seata/seata/releases/tag/v1.4.1)\n\n## 1.1 docker拉取镜像\n\n```shell\ndocker pull seataio/seata-server:1.4.1\n```\n\n## 1.2 启动临时容器\n\n```shell\ndocker run --rm --name seata-server -d -p 8091:8091 seataio/seata-server:1.4.1\n```\n\n![](https://file.huangge1199.cn/group1/M00/00/00/CgAYB2H54oaAImNHAAAUub2sTS4448.png)\n\n## 1.3 将配置文件拷贝出来\n\n```shell\ndocker cp d5cd81d60189:/seata-server/resources/ ./conf/\n```\n\n## 1.4 修改conf/registry.conf文件\n\n修改文件，用nacos做注册中心和配置中心\n\n```shell\nvi ./conf/registry.conf\n```\n\n原始内容：\n\n```java\nregistry {\n  # file 、nacos 、eureka、redis、zk、consul、etcd3、sofa\n  type = \"file\"\n  loadBalance = \"RandomLoadBalance\"\n  loadBalanceVirtualNodes = 10\n\n  nacos {\n    application = \"seata-server\"\n    serverAddr = \"127.0.0.1:8848\"\n    group = \"SEATA_GROUP\"\n    namespace = \"\"\n    cluster = \"default\"\n    username = \"\"\n    password = \"\"\n  }\n  eureka {\n    serviceUrl = \"http://localhost:8761/eureka\"\n    application = \"default\"\n    weight = \"1\"\n  }\n  redis {\n    serverAddr = \"localhost:6379\"\n    db = 0\n    password = \"\"\n    cluster = \"default\"\n    timeout = 0\n  }\n  zk {\n    cluster = \"default\"\n    serverAddr = \"127.0.0.1:2181\"\n    sessionTimeout = 6000\n    connectTimeout = 2000\n    username = \"\"\n    password = \"\"\n  }\n  consul {\n    cluster = \"default\"\n    serverAddr = \"127.0.0.1:8500\"\n  }\n  etcd3 {\n    cluster = \"default\"\n    serverAddr = \"http://localhost:2379\"\n  }\n  sofa {\n    serverAddr = \"127.0.0.1:9603\"\n    application = \"default\"\n    region = \"DEFAULT_ZONE\"\n    datacenter = \"DefaultDataCenter\"\n    cluster = \"default\"\n    group = \"SEATA_GROUP\"\n    addressWaitTime = \"3000\"\n  }\n  file {\n    name = \"file.conf\"\n  }\n}\n\nconfig {\n  # file、nacos 、apollo、zk、consul、etcd3\n  type = \"file\"\n\n  nacos {\n    serverAddr = \"127.0.0.1:8848\"\n    namespace = \"\"\n    group = \"SEATA_GROUP\"\n    username = \"\"\n    password = \"\"\n  }\n  consul {\n    serverAddr = \"127.0.0.1:8500\"\n  }\n  apollo {\n    appId = \"seata-server\"\n    apolloMeta = \"http://192.168.1.204:8801\"\n    namespace = \"application\"\n    apolloAccesskeySecret = \"\"\n  }\n  zk {\n    serverAddr = \"127.0.0.1:2181\"\n    sessionTimeout = 6000\n    connectTimeout = 2000\n    username = \"\"\n    password = \"\"\n  }\n  etcd3 {\n    serverAddr = \"http://localhost:2379\"\n  }\n  file {\n    name = \"file.conf\"\n  }\n}\n\n```\n\n修改后的内容：\n\n```java\nregistry {\n  # file 、nacos 、eureka、redis、zk、consul、etcd3、sofa\n  type = \"nacos\" # 改为nacos\n  loadBalance = \"RandomLoadBalance\"\n  loadBalanceVirtualNodes = 10\n\n  nacos {\n    application = \"seata-server\"\n    serverAddr = \"IP:端口\" # 改为nacos实际的IP:端口\n    group = \"SEATA_GROUP\"\n    namespace = \"\"\n    cluster = \"default\"\n    username = \"nacos\" # 改为nacos的账号\n    password = \"nacos\" # 改为nacos的密码\n  }\n  eureka {\n    serviceUrl = \"http://localhost:8761/eureka\"\n    application = \"default\"\n    weight = \"1\"\n  }\n  redis {\n    serverAddr = \"localhost:6379\"\n    db = 0\n    password = \"\"\n    cluster = \"default\"\n    timeout = 0\n  }\n  zk {\n    cluster = \"default\"\n    serverAddr = \"127.0.0.1:2181\"\n    sessionTimeout = 6000\n    connectTimeout = 2000\n    username = \"\"\n    password = \"\"\n  }\n  consul {\n    cluster = \"default\"\n    serverAddr = \"127.0.0.1:8500\"\n  }\n  etcd3 {\n    cluster = \"default\"\n    serverAddr = \"http://localhost:2379\"\n  }\n  sofa {\n    serverAddr = \"127.0.0.1:9603\"\n    application = \"default\"\n    region = \"DEFAULT_ZONE\"\n    datacenter = \"DefaultDataCenter\"\n    cluster = \"default\"\n    group = \"SEATA_GROUP\"\n    addressWaitTime = \"3000\"\n  }\n  file {\n    name = \"file.conf\"\n  }\n}\n\nconfig {\n  # file、nacos 、apollo、zk、consul、etcd3\n  type = \"nacos\" # 改为nacos\n\n  nacos {\n    serverAddr = \"IP:端口\" # 改为nacos实际的IP:端口\n    namespace = \"\"\n    group = \"SEATA_GROUP\"\n    username = \"nacos\" # 改为nacos的账号\n    password = \"nacos\" # 改为nacos的密码\n  }\n  consul {\n    serverAddr = \"127.0.0.1:8500\"\n  }\n  apollo {\n    appId = \"seata-server\"\n    apolloMeta = \"http://192.168.1.204:8801\"\n    namespace = \"application\"\n    apolloAccesskeySecret = \"\"\n  }\n  zk {\n    serverAddr = \"127.0.0.1:2181\"\n    sessionTimeout = 6000\n    connectTimeout = 2000\n    username = \"\"\n    password = \"\"\n  }\n  etcd3 {\n    serverAddr = \"http://localhost:2379\"\n  }\n  file {\n    name = \"file.conf\"\n  }\n}\n\n```\n\n## 1.5 执行SQL语句\n\nseata配置使用db事务日志存储方式\n\nSQL文件下载地址：[seata/script/server/db at develop · seata/seata (github.com)](https://github.com/seata/seata/tree/develop/script/server/db)\n\n## 1.6 创建config.txt并修改\n\nconfig.txt文件地址：[seata/config.txt at develop · seata/seata (github.com)](https://github.com/seata/seata/blob/develop/script/config-center/config.txt)\n\nconfig.txt原件：\n\n```properties\ntransport.type=TCP\ntransport.server=NIO\ntransport.heartbeat=true\ntransport.enableClientBatchSendRequest=true\ntransport.threadFactory.bossThreadPrefix=NettyBoss\ntransport.threadFactory.workerThreadPrefix=NettyServerNIOWorker\ntransport.threadFactory.serverExecutorThreadPrefix=NettyServerBizHandler\ntransport.threadFactory.shareBossWorker=false\ntransport.threadFactory.clientSelectorThreadPrefix=NettyClientSelector\ntransport.threadFactory.clientSelectorThreadSize=1\ntransport.threadFactory.clientWorkerThreadPrefix=NettyClientWorkerThread\ntransport.threadFactory.bossThreadSize=1\ntransport.threadFactory.workerThreadSize=default\ntransport.shutdown.wait=3\nservice.vgroupMapping.my_test_tx_group=default\nservice.default.grouplist=127.0.0.1:8091\nservice.enableDegrade=false\nservice.disableGlobalTransaction=false\nclient.rm.asyncCommitBufferLimit=10000\nclient.rm.lock.retryInterval=10\nclient.rm.lock.retryTimes=30\nclient.rm.lock.retryPolicyBranchRollbackOnConflict=true\nclient.rm.reportRetryCount=5\nclient.rm.tableMetaCheckEnable=false\nclient.rm.tableMetaCheckerInterval=60000\nclient.rm.sqlParserType=druid\nclient.rm.reportSuccessEnable=false\nclient.rm.sagaBranchRegisterEnable=false\nclient.rm.tccActionInterceptorOrder=-2147482648\nclient.tm.commitRetryCount=5\nclient.tm.rollbackRetryCount=5\nclient.tm.defaultGlobalTransactionTimeout=60000\nclient.tm.degradeCheck=false\nclient.tm.degradeCheckAllowTimes=10\nclient.tm.degradeCheckPeriod=2000\nclient.tm.interceptorOrder=-2147482648\nstore.mode=file\nstore.lock.mode=file\nstore.session.mode=file\nstore.publicKey=\nstore.file.dir=file_store/data\nstore.file.maxBranchSessionSize=16384\nstore.file.maxGlobalSessionSize=512\nstore.file.fileWriteBufferCacheSize=16384\nstore.file.flushDiskMode=async\nstore.file.sessionReloadReadSize=100\nstore.db.datasource=druid\nstore.db.dbType=mysql\nstore.db.driverClassName=com.mysql.jdbc.Driver\nstore.db.url=jdbc:mysql://127.0.0.1:3306/seata?useUnicode=true&rewriteBatchedStatements=true\nstore.db.user=username\nstore.db.password=password\nstore.db.minConn=5\nstore.db.maxConn=30\nstore.db.globalTable=global_table\nstore.db.branchTable=branch_table\nstore.db.queryLimit=100\nstore.db.lockTable=lock_table\nstore.db.maxWait=5000\nstore.redis.mode=single\nstore.redis.single.host=127.0.0.1\nstore.redis.single.port=6379\nstore.redis.sentinel.masterName=\nstore.redis.sentinel.sentinelHosts=\nstore.redis.maxConn=10\nstore.redis.minConn=1\nstore.redis.maxTotal=100\nstore.redis.database=0\nstore.redis.password=\nstore.redis.queryLimit=100\nserver.recovery.committingRetryPeriod=1000\nserver.recovery.asynCommittingRetryPeriod=1000\nserver.recovery.rollbackingRetryPeriod=1000\nserver.recovery.timeoutRetryPeriod=1000\nserver.maxCommitRetryTimeout=-1\nserver.maxRollbackRetryTimeout=-1\nserver.rollbackRetryTimeoutUnlockEnable=false\nserver.distributedLockExpireTime=10000\nclient.undo.dataValidation=true\nclient.undo.logSerialization=jackson\nclient.undo.onlyCareUpdateColumns=true\nserver.undo.logSaveDays=7\nserver.undo.logDeletePeriod=86400000\nclient.undo.logTable=undo_log\nclient.undo.compress.enable=true\nclient.undo.compress.type=zip\nclient.undo.compress.threshold=64k\nlog.exceptionRate=100\ntransport.serialization=seata\ntransport.compressor=none\nmetrics.enabled=false\nmetrics.registryType=compact\nmetrics.exporterList=prometheus\nmetrics.exporterPrometheusPort=9898\n```\n\n这里根据自己需求做调整，我这里的配置如下：\n\n```properties\nservice.vgroupMapping.order-service-group=default\nservice.vgroupMapping.storage-service-group=default\nservice.enableDegrade=false\nservice.disableGlobalTransaction=false\nstore.mode=db\nstore.db.datasource=druid\nstore.db.dbType=mysql\n#store.db.driverClassName=com.mysql.jdbc.Driver 这个是mysql8以下的驱动\nstore.db.driverClassName=com.mysql.cj.jdbc.Driver #这个是mysql8的驱动\nstore.db.url=jdbc:mysql://192.168.0.1:3306/seata?useUnicode=true #这个是mysql的连接信息\nstore.db.user=root #这个是mysql的用户名\nstore.db.password=123456 #这个是mysql的密码\nstore.db.minConn=5\nstore.db.maxConn=30\nstore.db.globalTable=global_table\nstore.db.branchTable=branch_table\nstore.db.queryLimit=100\nstore.db.lockTable=lock_table\nstore.db.maxWait=5000\n```\n\n\n\n## 1.7 创建nacos-config.sh\n\n在conf中\n\nnacos-config.sh获取地址：[seata/script/config-center/nacos at develop · seata/seata (github.com)](https://github.com/seata/seata/tree/develop/script/config-center/nacos)\n\n## 1.8 上传seata配置信息到nacos\n\n先确认目录结构正确\n\n![](https://file.huangge1199.cn/group1/M00/00/00/CgAYB2H54zyAYKwlAAAi_TSko4g044.png)\n\n```sh\n./nacos-config.sh -h docker所在机器IP -p 8848 -g SEATA_GROUP  -u nacos -w nacos\n```\n\n\n\n#### 1.2.2 修改conf/nacos-config.txt 配置\n\nservice.vgroup_mapping.${your-service-gruop}=default，中间的${your-service-gruop}为自己定义的服务组名称，服务中的application.properties文件里配置服务组名称。\n\ndemo中有两个服务，分别是storage-service和order-service，所以配置如下\n\n~~~properties\nservice.vgroup_mapping.storage-service-group=defaultservice.vgroup_mapping.order-service-group=default\n~~~\n\n** 注意这里,高版本中应该是vgroupMapping 同时后面的如: order-service-group  不能定义为 order_service_group**\n\n\n#### 1.3 启动seata-server\n\n**分两步，如下**\n\n~~~shell\n# 初始化seata 的nacos配置cd confsh nacos-config.sh 192.168.21.89# 启动seata-servercd binsh seata-server.sh -p 8091 -m file\n~~~\n\n----------\n\n# 2. 应用配置\n\n### 2.1 数据库初始化\n\n~~~SQL\n-- 创建 order库、业务表、undo_log表create database seata_order;use seata_order;DROP TABLE IF EXISTS `order_tbl`;CREATE TABLE `order_tbl` (  `id` int(11) NOT NULL AUTO_INCREMENT,  `user_id` varchar(255) DEFAULT NULL,  `commodity_code` varchar(255) DEFAULT NULL,  `count` int(11) DEFAULT 0,  `money` int(11) DEFAULT 0,  PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8;CREATE TABLE `undo_log`(  `id`            BIGINT(20)   NOT NULL AUTO_INCREMENT,  `branch_id`     BIGINT(20)   NOT NULL,  `xid`           VARCHAR(100) NOT NULL,  `context`       VARCHAR(128) NOT NULL,  `rollback_info` LONGBLOB     NOT NULL,  `log_status`    INT(11)      NOT NULL,  `log_created`   DATETIME     NOT NULL,  `log_modified`  DATETIME     NOT NULL,  `ext`           VARCHAR(100) DEFAULT NULL,  PRIMARY KEY (`id`),  UNIQUE KEY `ux_undo_log` (`xid`, `branch_id`)) ENGINE = InnoDB  AUTO_INCREMENT = 1  DEFAULT CHARSET = utf8;-- 创建 storage库、业务表、undo_log表create database seata_storage;use seata_storage;DROP TABLE IF EXISTS `storage_tbl`;CREATE TABLE `storage_tbl` (  `id` int(11) NOT NULL AUTO_INCREMENT,  `commodity_code` varchar(255) DEFAULT NULL,  `count` int(11) DEFAULT 0,  PRIMARY KEY (`id`),  UNIQUE KEY (`commodity_code`)) ENGINE=InnoDB DEFAULT CHARSET=utf8;CREATE TABLE `undo_log`(  `id`            BIGINT(20)   NOT NULL AUTO_INCREMENT,  `branch_id`     BIGINT(20)   NOT NULL,  `xid`           VARCHAR(100) NOT NULL,  `context`       VARCHAR(128) NOT NULL,  `rollback_info` LONGBLOB     NOT NULL,  `log_status`    INT(11)      NOT NULL,  `log_created`   DATETIME     NOT NULL,  `log_modified`  DATETIME     NOT NULL,  `ext`           VARCHAR(100) DEFAULT NULL,  PRIMARY KEY (`id`),  UNIQUE KEY `ux_undo_log` (`xid`, `branch_id`)) ENGINE = InnoDB  AUTO_INCREMENT = 1  DEFAULT CHARSET = utf8;-- 初始化库存模拟数据INSERT INTO seata_storage.storage_tbl (id, commodity_code, count) VALUES (1, 'product-1', 9999999);INSERT INTO seata_storage.storage_tbl (id, commodity_code, count) VALUES (2, 'product-2', 0);\n~~~\n\n### 2.2 应用配置\n\n见代码\n\n几个重要的配置\n\n1. 每个应用的resource里需要配置一个registry.conf ，demo中与seata-server里的配置相同\n2. application.propeties 的各个配置项，注意spring.cloud.alibaba.seata.tx-service-group 是服务组名称，与nacos-config.txt 配置的service.vgroup_mapping.${your-service-gruop}具有对应关系\n\n----------\n\n# 3. 测试\n\n1. 分布式事务成功，模拟正常下单、扣库存\n\n   localhost:9091/order/placeOrder/commit\n\n2. 分布式事务失败，模拟下单成功、扣库存失败，最终同时回滚\n\n   localhost:9091/order/placeOrder/rollback \n\n\n\n\n\n","source":"_posts/seata141demo.md","raw":"---\ntitle: seata1.4.1服务端部署及应用\ndate: 2022-02-02 09:37:59\ntags: [java,seata,安装部署]\ncategories: [java,seata]\n---\n# seata1.4.1服务端部署及应用\n\nspringcloud-nacos-seata\n\n**分布式事务组件seata的使用demo，AT模式，集成nacos、springboot、springcloud、mybatis-plus、feign，数据库采用mysql**\n\ndemo中使用的相关版本号，具体请看代码。如果搭建个人demo不成功，验证是否是由版本导致，由于目前这几个项目更新比较频繁，版本稍有变化便会出现许多奇怪问题\n\n* seata 1.4.1\n* spring-cloud-alibaba-seata 2.2.0.RELEASE\n* spring-cloud-starter-alibaba-nacos-discovery  2.1.1.RELEASE\n* springboot 2.1.10.RELEASE\n* springcloud Greenwich.SR4\n\n----------\n\n# 1. 服务端配置\n\nseata-server为release版本1.4.1，采用docker部署方式\n\nhttps://github.com/seata/seata/releases/tag/v1.4.1)\n\n## 1.1 docker拉取镜像\n\n```shell\ndocker pull seataio/seata-server:1.4.1\n```\n\n## 1.2 启动临时容器\n\n```shell\ndocker run --rm --name seata-server -d -p 8091:8091 seataio/seata-server:1.4.1\n```\n\n![](https://file.huangge1199.cn/group1/M00/00/00/CgAYB2H54oaAImNHAAAUub2sTS4448.png)\n\n## 1.3 将配置文件拷贝出来\n\n```shell\ndocker cp d5cd81d60189:/seata-server/resources/ ./conf/\n```\n\n## 1.4 修改conf/registry.conf文件\n\n修改文件，用nacos做注册中心和配置中心\n\n```shell\nvi ./conf/registry.conf\n```\n\n原始内容：\n\n```java\nregistry {\n  # file 、nacos 、eureka、redis、zk、consul、etcd3、sofa\n  type = \"file\"\n  loadBalance = \"RandomLoadBalance\"\n  loadBalanceVirtualNodes = 10\n\n  nacos {\n    application = \"seata-server\"\n    serverAddr = \"127.0.0.1:8848\"\n    group = \"SEATA_GROUP\"\n    namespace = \"\"\n    cluster = \"default\"\n    username = \"\"\n    password = \"\"\n  }\n  eureka {\n    serviceUrl = \"http://localhost:8761/eureka\"\n    application = \"default\"\n    weight = \"1\"\n  }\n  redis {\n    serverAddr = \"localhost:6379\"\n    db = 0\n    password = \"\"\n    cluster = \"default\"\n    timeout = 0\n  }\n  zk {\n    cluster = \"default\"\n    serverAddr = \"127.0.0.1:2181\"\n    sessionTimeout = 6000\n    connectTimeout = 2000\n    username = \"\"\n    password = \"\"\n  }\n  consul {\n    cluster = \"default\"\n    serverAddr = \"127.0.0.1:8500\"\n  }\n  etcd3 {\n    cluster = \"default\"\n    serverAddr = \"http://localhost:2379\"\n  }\n  sofa {\n    serverAddr = \"127.0.0.1:9603\"\n    application = \"default\"\n    region = \"DEFAULT_ZONE\"\n    datacenter = \"DefaultDataCenter\"\n    cluster = \"default\"\n    group = \"SEATA_GROUP\"\n    addressWaitTime = \"3000\"\n  }\n  file {\n    name = \"file.conf\"\n  }\n}\n\nconfig {\n  # file、nacos 、apollo、zk、consul、etcd3\n  type = \"file\"\n\n  nacos {\n    serverAddr = \"127.0.0.1:8848\"\n    namespace = \"\"\n    group = \"SEATA_GROUP\"\n    username = \"\"\n    password = \"\"\n  }\n  consul {\n    serverAddr = \"127.0.0.1:8500\"\n  }\n  apollo {\n    appId = \"seata-server\"\n    apolloMeta = \"http://192.168.1.204:8801\"\n    namespace = \"application\"\n    apolloAccesskeySecret = \"\"\n  }\n  zk {\n    serverAddr = \"127.0.0.1:2181\"\n    sessionTimeout = 6000\n    connectTimeout = 2000\n    username = \"\"\n    password = \"\"\n  }\n  etcd3 {\n    serverAddr = \"http://localhost:2379\"\n  }\n  file {\n    name = \"file.conf\"\n  }\n}\n\n```\n\n修改后的内容：\n\n```java\nregistry {\n  # file 、nacos 、eureka、redis、zk、consul、etcd3、sofa\n  type = \"nacos\" # 改为nacos\n  loadBalance = \"RandomLoadBalance\"\n  loadBalanceVirtualNodes = 10\n\n  nacos {\n    application = \"seata-server\"\n    serverAddr = \"IP:端口\" # 改为nacos实际的IP:端口\n    group = \"SEATA_GROUP\"\n    namespace = \"\"\n    cluster = \"default\"\n    username = \"nacos\" # 改为nacos的账号\n    password = \"nacos\" # 改为nacos的密码\n  }\n  eureka {\n    serviceUrl = \"http://localhost:8761/eureka\"\n    application = \"default\"\n    weight = \"1\"\n  }\n  redis {\n    serverAddr = \"localhost:6379\"\n    db = 0\n    password = \"\"\n    cluster = \"default\"\n    timeout = 0\n  }\n  zk {\n    cluster = \"default\"\n    serverAddr = \"127.0.0.1:2181\"\n    sessionTimeout = 6000\n    connectTimeout = 2000\n    username = \"\"\n    password = \"\"\n  }\n  consul {\n    cluster = \"default\"\n    serverAddr = \"127.0.0.1:8500\"\n  }\n  etcd3 {\n    cluster = \"default\"\n    serverAddr = \"http://localhost:2379\"\n  }\n  sofa {\n    serverAddr = \"127.0.0.1:9603\"\n    application = \"default\"\n    region = \"DEFAULT_ZONE\"\n    datacenter = \"DefaultDataCenter\"\n    cluster = \"default\"\n    group = \"SEATA_GROUP\"\n    addressWaitTime = \"3000\"\n  }\n  file {\n    name = \"file.conf\"\n  }\n}\n\nconfig {\n  # file、nacos 、apollo、zk、consul、etcd3\n  type = \"nacos\" # 改为nacos\n\n  nacos {\n    serverAddr = \"IP:端口\" # 改为nacos实际的IP:端口\n    namespace = \"\"\n    group = \"SEATA_GROUP\"\n    username = \"nacos\" # 改为nacos的账号\n    password = \"nacos\" # 改为nacos的密码\n  }\n  consul {\n    serverAddr = \"127.0.0.1:8500\"\n  }\n  apollo {\n    appId = \"seata-server\"\n    apolloMeta = \"http://192.168.1.204:8801\"\n    namespace = \"application\"\n    apolloAccesskeySecret = \"\"\n  }\n  zk {\n    serverAddr = \"127.0.0.1:2181\"\n    sessionTimeout = 6000\n    connectTimeout = 2000\n    username = \"\"\n    password = \"\"\n  }\n  etcd3 {\n    serverAddr = \"http://localhost:2379\"\n  }\n  file {\n    name = \"file.conf\"\n  }\n}\n\n```\n\n## 1.5 执行SQL语句\n\nseata配置使用db事务日志存储方式\n\nSQL文件下载地址：[seata/script/server/db at develop · seata/seata (github.com)](https://github.com/seata/seata/tree/develop/script/server/db)\n\n## 1.6 创建config.txt并修改\n\nconfig.txt文件地址：[seata/config.txt at develop · seata/seata (github.com)](https://github.com/seata/seata/blob/develop/script/config-center/config.txt)\n\nconfig.txt原件：\n\n```properties\ntransport.type=TCP\ntransport.server=NIO\ntransport.heartbeat=true\ntransport.enableClientBatchSendRequest=true\ntransport.threadFactory.bossThreadPrefix=NettyBoss\ntransport.threadFactory.workerThreadPrefix=NettyServerNIOWorker\ntransport.threadFactory.serverExecutorThreadPrefix=NettyServerBizHandler\ntransport.threadFactory.shareBossWorker=false\ntransport.threadFactory.clientSelectorThreadPrefix=NettyClientSelector\ntransport.threadFactory.clientSelectorThreadSize=1\ntransport.threadFactory.clientWorkerThreadPrefix=NettyClientWorkerThread\ntransport.threadFactory.bossThreadSize=1\ntransport.threadFactory.workerThreadSize=default\ntransport.shutdown.wait=3\nservice.vgroupMapping.my_test_tx_group=default\nservice.default.grouplist=127.0.0.1:8091\nservice.enableDegrade=false\nservice.disableGlobalTransaction=false\nclient.rm.asyncCommitBufferLimit=10000\nclient.rm.lock.retryInterval=10\nclient.rm.lock.retryTimes=30\nclient.rm.lock.retryPolicyBranchRollbackOnConflict=true\nclient.rm.reportRetryCount=5\nclient.rm.tableMetaCheckEnable=false\nclient.rm.tableMetaCheckerInterval=60000\nclient.rm.sqlParserType=druid\nclient.rm.reportSuccessEnable=false\nclient.rm.sagaBranchRegisterEnable=false\nclient.rm.tccActionInterceptorOrder=-2147482648\nclient.tm.commitRetryCount=5\nclient.tm.rollbackRetryCount=5\nclient.tm.defaultGlobalTransactionTimeout=60000\nclient.tm.degradeCheck=false\nclient.tm.degradeCheckAllowTimes=10\nclient.tm.degradeCheckPeriod=2000\nclient.tm.interceptorOrder=-2147482648\nstore.mode=file\nstore.lock.mode=file\nstore.session.mode=file\nstore.publicKey=\nstore.file.dir=file_store/data\nstore.file.maxBranchSessionSize=16384\nstore.file.maxGlobalSessionSize=512\nstore.file.fileWriteBufferCacheSize=16384\nstore.file.flushDiskMode=async\nstore.file.sessionReloadReadSize=100\nstore.db.datasource=druid\nstore.db.dbType=mysql\nstore.db.driverClassName=com.mysql.jdbc.Driver\nstore.db.url=jdbc:mysql://127.0.0.1:3306/seata?useUnicode=true&rewriteBatchedStatements=true\nstore.db.user=username\nstore.db.password=password\nstore.db.minConn=5\nstore.db.maxConn=30\nstore.db.globalTable=global_table\nstore.db.branchTable=branch_table\nstore.db.queryLimit=100\nstore.db.lockTable=lock_table\nstore.db.maxWait=5000\nstore.redis.mode=single\nstore.redis.single.host=127.0.0.1\nstore.redis.single.port=6379\nstore.redis.sentinel.masterName=\nstore.redis.sentinel.sentinelHosts=\nstore.redis.maxConn=10\nstore.redis.minConn=1\nstore.redis.maxTotal=100\nstore.redis.database=0\nstore.redis.password=\nstore.redis.queryLimit=100\nserver.recovery.committingRetryPeriod=1000\nserver.recovery.asynCommittingRetryPeriod=1000\nserver.recovery.rollbackingRetryPeriod=1000\nserver.recovery.timeoutRetryPeriod=1000\nserver.maxCommitRetryTimeout=-1\nserver.maxRollbackRetryTimeout=-1\nserver.rollbackRetryTimeoutUnlockEnable=false\nserver.distributedLockExpireTime=10000\nclient.undo.dataValidation=true\nclient.undo.logSerialization=jackson\nclient.undo.onlyCareUpdateColumns=true\nserver.undo.logSaveDays=7\nserver.undo.logDeletePeriod=86400000\nclient.undo.logTable=undo_log\nclient.undo.compress.enable=true\nclient.undo.compress.type=zip\nclient.undo.compress.threshold=64k\nlog.exceptionRate=100\ntransport.serialization=seata\ntransport.compressor=none\nmetrics.enabled=false\nmetrics.registryType=compact\nmetrics.exporterList=prometheus\nmetrics.exporterPrometheusPort=9898\n```\n\n这里根据自己需求做调整，我这里的配置如下：\n\n```properties\nservice.vgroupMapping.order-service-group=default\nservice.vgroupMapping.storage-service-group=default\nservice.enableDegrade=false\nservice.disableGlobalTransaction=false\nstore.mode=db\nstore.db.datasource=druid\nstore.db.dbType=mysql\n#store.db.driverClassName=com.mysql.jdbc.Driver 这个是mysql8以下的驱动\nstore.db.driverClassName=com.mysql.cj.jdbc.Driver #这个是mysql8的驱动\nstore.db.url=jdbc:mysql://192.168.0.1:3306/seata?useUnicode=true #这个是mysql的连接信息\nstore.db.user=root #这个是mysql的用户名\nstore.db.password=123456 #这个是mysql的密码\nstore.db.minConn=5\nstore.db.maxConn=30\nstore.db.globalTable=global_table\nstore.db.branchTable=branch_table\nstore.db.queryLimit=100\nstore.db.lockTable=lock_table\nstore.db.maxWait=5000\n```\n\n\n\n## 1.7 创建nacos-config.sh\n\n在conf中\n\nnacos-config.sh获取地址：[seata/script/config-center/nacos at develop · seata/seata (github.com)](https://github.com/seata/seata/tree/develop/script/config-center/nacos)\n\n## 1.8 上传seata配置信息到nacos\n\n先确认目录结构正确\n\n![](https://file.huangge1199.cn/group1/M00/00/00/CgAYB2H54zyAYKwlAAAi_TSko4g044.png)\n\n```sh\n./nacos-config.sh -h docker所在机器IP -p 8848 -g SEATA_GROUP  -u nacos -w nacos\n```\n\n\n\n#### 1.2.2 修改conf/nacos-config.txt 配置\n\nservice.vgroup_mapping.${your-service-gruop}=default，中间的${your-service-gruop}为自己定义的服务组名称，服务中的application.properties文件里配置服务组名称。\n\ndemo中有两个服务，分别是storage-service和order-service，所以配置如下\n\n~~~properties\nservice.vgroup_mapping.storage-service-group=defaultservice.vgroup_mapping.order-service-group=default\n~~~\n\n** 注意这里,高版本中应该是vgroupMapping 同时后面的如: order-service-group  不能定义为 order_service_group**\n\n\n#### 1.3 启动seata-server\n\n**分两步，如下**\n\n~~~shell\n# 初始化seata 的nacos配置cd confsh nacos-config.sh 192.168.21.89# 启动seata-servercd binsh seata-server.sh -p 8091 -m file\n~~~\n\n----------\n\n# 2. 应用配置\n\n### 2.1 数据库初始化\n\n~~~SQL\n-- 创建 order库、业务表、undo_log表create database seata_order;use seata_order;DROP TABLE IF EXISTS `order_tbl`;CREATE TABLE `order_tbl` (  `id` int(11) NOT NULL AUTO_INCREMENT,  `user_id` varchar(255) DEFAULT NULL,  `commodity_code` varchar(255) DEFAULT NULL,  `count` int(11) DEFAULT 0,  `money` int(11) DEFAULT 0,  PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8;CREATE TABLE `undo_log`(  `id`            BIGINT(20)   NOT NULL AUTO_INCREMENT,  `branch_id`     BIGINT(20)   NOT NULL,  `xid`           VARCHAR(100) NOT NULL,  `context`       VARCHAR(128) NOT NULL,  `rollback_info` LONGBLOB     NOT NULL,  `log_status`    INT(11)      NOT NULL,  `log_created`   DATETIME     NOT NULL,  `log_modified`  DATETIME     NOT NULL,  `ext`           VARCHAR(100) DEFAULT NULL,  PRIMARY KEY (`id`),  UNIQUE KEY `ux_undo_log` (`xid`, `branch_id`)) ENGINE = InnoDB  AUTO_INCREMENT = 1  DEFAULT CHARSET = utf8;-- 创建 storage库、业务表、undo_log表create database seata_storage;use seata_storage;DROP TABLE IF EXISTS `storage_tbl`;CREATE TABLE `storage_tbl` (  `id` int(11) NOT NULL AUTO_INCREMENT,  `commodity_code` varchar(255) DEFAULT NULL,  `count` int(11) DEFAULT 0,  PRIMARY KEY (`id`),  UNIQUE KEY (`commodity_code`)) ENGINE=InnoDB DEFAULT CHARSET=utf8;CREATE TABLE `undo_log`(  `id`            BIGINT(20)   NOT NULL AUTO_INCREMENT,  `branch_id`     BIGINT(20)   NOT NULL,  `xid`           VARCHAR(100) NOT NULL,  `context`       VARCHAR(128) NOT NULL,  `rollback_info` LONGBLOB     NOT NULL,  `log_status`    INT(11)      NOT NULL,  `log_created`   DATETIME     NOT NULL,  `log_modified`  DATETIME     NOT NULL,  `ext`           VARCHAR(100) DEFAULT NULL,  PRIMARY KEY (`id`),  UNIQUE KEY `ux_undo_log` (`xid`, `branch_id`)) ENGINE = InnoDB  AUTO_INCREMENT = 1  DEFAULT CHARSET = utf8;-- 初始化库存模拟数据INSERT INTO seata_storage.storage_tbl (id, commodity_code, count) VALUES (1, 'product-1', 9999999);INSERT INTO seata_storage.storage_tbl (id, commodity_code, count) VALUES (2, 'product-2', 0);\n~~~\n\n### 2.2 应用配置\n\n见代码\n\n几个重要的配置\n\n1. 每个应用的resource里需要配置一个registry.conf ，demo中与seata-server里的配置相同\n2. application.propeties 的各个配置项，注意spring.cloud.alibaba.seata.tx-service-group 是服务组名称，与nacos-config.txt 配置的service.vgroup_mapping.${your-service-gruop}具有对应关系\n\n----------\n\n# 3. 测试\n\n1. 分布式事务成功，模拟正常下单、扣库存\n\n   localhost:9091/order/placeOrder/commit\n\n2. 分布式事务失败，模拟下单成功、扣库存失败，最终同时回滚\n\n   localhost:9091/order/placeOrder/rollback \n\n\n\n\n\n","slug":"seata141demo","published":1,"updated":"2022-06-03T06:00:55.605Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl42z5h82006r3gn67vts8bry","content":"<h1>seata1.4.1服务端部署及应用</h1>\n<p>springcloud-nacos-seata</p>\n<p><strong>分布式事务组件seata的使用demo，AT模式，集成nacos、springboot、springcloud、mybatis-plus、feign，数据库采用mysql</strong></p>\n<p>demo中使用的相关版本号，具体请看代码。如果搭建个人demo不成功，验证是否是由版本导致，由于目前这几个项目更新比较频繁，版本稍有变化便会出现许多奇怪问题</p>\n<ul>\n<li>seata 1.4.1</li>\n<li>spring-cloud-alibaba-seata 2.2.0.RELEASE</li>\n<li>spring-cloud-starter-alibaba-nacos-discovery  2.1.1.RELEASE</li>\n<li>springboot 2.1.10.RELEASE</li>\n<li>springcloud Greenwich.SR4</li>\n</ul>\n<hr>\n<h1>1. 服务端配置</h1>\n<p>seata-server为release版本1.4.1，采用docker部署方式</p>\n<p><a href=\"https://github.com/seata/seata/releases/tag/v1.4.1\">https://github.com/seata/seata/releases/tag/v1.4.1</a>)</p>\n<h2 id=\"1-1-docker拉取镜像\">1.1 docker拉取镜像</h2>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">docker pull seataio&#x2F;seata-server:1.4.1</code></pre>\n<h2 id=\"1-2-启动临时容器\">1.2 启动临时容器</h2>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">docker run --rm --name seata-server -d -p 8091:8091 seataio&#x2F;seata-server:1.4.1</code></pre>\n<p><img src=\"https://file.huangge1199.cn/group1/M00/00/00/CgAYB2H54oaAImNHAAAUub2sTS4448.png\" alt=\"\"></p>\n<h2 id=\"1-3-将配置文件拷贝出来\">1.3 将配置文件拷贝出来</h2>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">docker cp d5cd81d60189:&#x2F;seata-server&#x2F;resources&#x2F; .&#x2F;conf&#x2F;</code></pre>\n<h2 id=\"1-4-修改conf-registry-conf文件\">1.4 修改conf/registry.conf文件</h2>\n<p>修改文件，用nacos做注册中心和配置中心</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">vi .&#x2F;conf&#x2F;registry.conf</code></pre>\n<p>原始内容：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">registry &#123;\n  # file 、nacos 、eureka、redis、zk、consul、etcd3、sofa\n  type &#x3D; &quot;file&quot;\n  loadBalance &#x3D; &quot;RandomLoadBalance&quot;\n  loadBalanceVirtualNodes &#x3D; 10\n\n  nacos &#123;\n    application &#x3D; &quot;seata-server&quot;\n    serverAddr &#x3D; &quot;127.0.0.1:8848&quot;\n    group &#x3D; &quot;SEATA_GROUP&quot;\n    namespace &#x3D; &quot;&quot;\n    cluster &#x3D; &quot;default&quot;\n    username &#x3D; &quot;&quot;\n    password &#x3D; &quot;&quot;\n  &#125;\n  eureka &#123;\n    serviceUrl &#x3D; &quot;http:&#x2F;&#x2F;localhost:8761&#x2F;eureka&quot;\n    application &#x3D; &quot;default&quot;\n    weight &#x3D; &quot;1&quot;\n  &#125;\n  redis &#123;\n    serverAddr &#x3D; &quot;localhost:6379&quot;\n    db &#x3D; 0\n    password &#x3D; &quot;&quot;\n    cluster &#x3D; &quot;default&quot;\n    timeout &#x3D; 0\n  &#125;\n  zk &#123;\n    cluster &#x3D; &quot;default&quot;\n    serverAddr &#x3D; &quot;127.0.0.1:2181&quot;\n    sessionTimeout &#x3D; 6000\n    connectTimeout &#x3D; 2000\n    username &#x3D; &quot;&quot;\n    password &#x3D; &quot;&quot;\n  &#125;\n  consul &#123;\n    cluster &#x3D; &quot;default&quot;\n    serverAddr &#x3D; &quot;127.0.0.1:8500&quot;\n  &#125;\n  etcd3 &#123;\n    cluster &#x3D; &quot;default&quot;\n    serverAddr &#x3D; &quot;http:&#x2F;&#x2F;localhost:2379&quot;\n  &#125;\n  sofa &#123;\n    serverAddr &#x3D; &quot;127.0.0.1:9603&quot;\n    application &#x3D; &quot;default&quot;\n    region &#x3D; &quot;DEFAULT_ZONE&quot;\n    datacenter &#x3D; &quot;DefaultDataCenter&quot;\n    cluster &#x3D; &quot;default&quot;\n    group &#x3D; &quot;SEATA_GROUP&quot;\n    addressWaitTime &#x3D; &quot;3000&quot;\n  &#125;\n  file &#123;\n    name &#x3D; &quot;file.conf&quot;\n  &#125;\n&#125;\n\nconfig &#123;\n  # file、nacos 、apollo、zk、consul、etcd3\n  type &#x3D; &quot;file&quot;\n\n  nacos &#123;\n    serverAddr &#x3D; &quot;127.0.0.1:8848&quot;\n    namespace &#x3D; &quot;&quot;\n    group &#x3D; &quot;SEATA_GROUP&quot;\n    username &#x3D; &quot;&quot;\n    password &#x3D; &quot;&quot;\n  &#125;\n  consul &#123;\n    serverAddr &#x3D; &quot;127.0.0.1:8500&quot;\n  &#125;\n  apollo &#123;\n    appId &#x3D; &quot;seata-server&quot;\n    apolloMeta &#x3D; &quot;http:&#x2F;&#x2F;192.168.1.204:8801&quot;\n    namespace &#x3D; &quot;application&quot;\n    apolloAccesskeySecret &#x3D; &quot;&quot;\n  &#125;\n  zk &#123;\n    serverAddr &#x3D; &quot;127.0.0.1:2181&quot;\n    sessionTimeout &#x3D; 6000\n    connectTimeout &#x3D; 2000\n    username &#x3D; &quot;&quot;\n    password &#x3D; &quot;&quot;\n  &#125;\n  etcd3 &#123;\n    serverAddr &#x3D; &quot;http:&#x2F;&#x2F;localhost:2379&quot;\n  &#125;\n  file &#123;\n    name &#x3D; &quot;file.conf&quot;\n  &#125;\n&#125;\n</code></pre>\n<p>修改后的内容：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">registry &#123;\n  # file 、nacos 、eureka、redis、zk、consul、etcd3、sofa\n  type &#x3D; &quot;nacos&quot; # 改为nacos\n  loadBalance &#x3D; &quot;RandomLoadBalance&quot;\n  loadBalanceVirtualNodes &#x3D; 10\n\n  nacos &#123;\n    application &#x3D; &quot;seata-server&quot;\n    serverAddr &#x3D; &quot;IP:端口&quot; # 改为nacos实际的IP:端口\n    group &#x3D; &quot;SEATA_GROUP&quot;\n    namespace &#x3D; &quot;&quot;\n    cluster &#x3D; &quot;default&quot;\n    username &#x3D; &quot;nacos&quot; # 改为nacos的账号\n    password &#x3D; &quot;nacos&quot; # 改为nacos的密码\n  &#125;\n  eureka &#123;\n    serviceUrl &#x3D; &quot;http:&#x2F;&#x2F;localhost:8761&#x2F;eureka&quot;\n    application &#x3D; &quot;default&quot;\n    weight &#x3D; &quot;1&quot;\n  &#125;\n  redis &#123;\n    serverAddr &#x3D; &quot;localhost:6379&quot;\n    db &#x3D; 0\n    password &#x3D; &quot;&quot;\n    cluster &#x3D; &quot;default&quot;\n    timeout &#x3D; 0\n  &#125;\n  zk &#123;\n    cluster &#x3D; &quot;default&quot;\n    serverAddr &#x3D; &quot;127.0.0.1:2181&quot;\n    sessionTimeout &#x3D; 6000\n    connectTimeout &#x3D; 2000\n    username &#x3D; &quot;&quot;\n    password &#x3D; &quot;&quot;\n  &#125;\n  consul &#123;\n    cluster &#x3D; &quot;default&quot;\n    serverAddr &#x3D; &quot;127.0.0.1:8500&quot;\n  &#125;\n  etcd3 &#123;\n    cluster &#x3D; &quot;default&quot;\n    serverAddr &#x3D; &quot;http:&#x2F;&#x2F;localhost:2379&quot;\n  &#125;\n  sofa &#123;\n    serverAddr &#x3D; &quot;127.0.0.1:9603&quot;\n    application &#x3D; &quot;default&quot;\n    region &#x3D; &quot;DEFAULT_ZONE&quot;\n    datacenter &#x3D; &quot;DefaultDataCenter&quot;\n    cluster &#x3D; &quot;default&quot;\n    group &#x3D; &quot;SEATA_GROUP&quot;\n    addressWaitTime &#x3D; &quot;3000&quot;\n  &#125;\n  file &#123;\n    name &#x3D; &quot;file.conf&quot;\n  &#125;\n&#125;\n\nconfig &#123;\n  # file、nacos 、apollo、zk、consul、etcd3\n  type &#x3D; &quot;nacos&quot; # 改为nacos\n\n  nacos &#123;\n    serverAddr &#x3D; &quot;IP:端口&quot; # 改为nacos实际的IP:端口\n    namespace &#x3D; &quot;&quot;\n    group &#x3D; &quot;SEATA_GROUP&quot;\n    username &#x3D; &quot;nacos&quot; # 改为nacos的账号\n    password &#x3D; &quot;nacos&quot; # 改为nacos的密码\n  &#125;\n  consul &#123;\n    serverAddr &#x3D; &quot;127.0.0.1:8500&quot;\n  &#125;\n  apollo &#123;\n    appId &#x3D; &quot;seata-server&quot;\n    apolloMeta &#x3D; &quot;http:&#x2F;&#x2F;192.168.1.204:8801&quot;\n    namespace &#x3D; &quot;application&quot;\n    apolloAccesskeySecret &#x3D; &quot;&quot;\n  &#125;\n  zk &#123;\n    serverAddr &#x3D; &quot;127.0.0.1:2181&quot;\n    sessionTimeout &#x3D; 6000\n    connectTimeout &#x3D; 2000\n    username &#x3D; &quot;&quot;\n    password &#x3D; &quot;&quot;\n  &#125;\n  etcd3 &#123;\n    serverAddr &#x3D; &quot;http:&#x2F;&#x2F;localhost:2379&quot;\n  &#125;\n  file &#123;\n    name &#x3D; &quot;file.conf&quot;\n  &#125;\n&#125;\n</code></pre>\n<h2 id=\"1-5-执行SQL语句\">1.5 执行SQL语句</h2>\n<p>seata配置使用db事务日志存储方式</p>\n<p>SQL文件下载地址：<a href=\"https://github.com/seata/seata/tree/develop/script/server/db\">seata/script/server/db at develop · seata/seata (github.com)</a></p>\n<h2 id=\"1-6-创建config-txt并修改\">1.6 创建config.txt并修改</h2>\n<p>config.txt文件地址：<a href=\"https://github.com/seata/seata/blob/develop/script/config-center/config.txt\">seata/config.txt at develop · seata/seata (github.com)</a></p>\n<p>config.txt原件：</p>\n<pre class=\"line-numbers language-properties\" data-language=\"properties\"><code class=\"language-properties\">transport.type&#x3D;TCP\ntransport.server&#x3D;NIO\ntransport.heartbeat&#x3D;true\ntransport.enableClientBatchSendRequest&#x3D;true\ntransport.threadFactory.bossThreadPrefix&#x3D;NettyBoss\ntransport.threadFactory.workerThreadPrefix&#x3D;NettyServerNIOWorker\ntransport.threadFactory.serverExecutorThreadPrefix&#x3D;NettyServerBizHandler\ntransport.threadFactory.shareBossWorker&#x3D;false\ntransport.threadFactory.clientSelectorThreadPrefix&#x3D;NettyClientSelector\ntransport.threadFactory.clientSelectorThreadSize&#x3D;1\ntransport.threadFactory.clientWorkerThreadPrefix&#x3D;NettyClientWorkerThread\ntransport.threadFactory.bossThreadSize&#x3D;1\ntransport.threadFactory.workerThreadSize&#x3D;default\ntransport.shutdown.wait&#x3D;3\nservice.vgroupMapping.my_test_tx_group&#x3D;default\nservice.default.grouplist&#x3D;127.0.0.1:8091\nservice.enableDegrade&#x3D;false\nservice.disableGlobalTransaction&#x3D;false\nclient.rm.asyncCommitBufferLimit&#x3D;10000\nclient.rm.lock.retryInterval&#x3D;10\nclient.rm.lock.retryTimes&#x3D;30\nclient.rm.lock.retryPolicyBranchRollbackOnConflict&#x3D;true\nclient.rm.reportRetryCount&#x3D;5\nclient.rm.tableMetaCheckEnable&#x3D;false\nclient.rm.tableMetaCheckerInterval&#x3D;60000\nclient.rm.sqlParserType&#x3D;druid\nclient.rm.reportSuccessEnable&#x3D;false\nclient.rm.sagaBranchRegisterEnable&#x3D;false\nclient.rm.tccActionInterceptorOrder&#x3D;-2147482648\nclient.tm.commitRetryCount&#x3D;5\nclient.tm.rollbackRetryCount&#x3D;5\nclient.tm.defaultGlobalTransactionTimeout&#x3D;60000\nclient.tm.degradeCheck&#x3D;false\nclient.tm.degradeCheckAllowTimes&#x3D;10\nclient.tm.degradeCheckPeriod&#x3D;2000\nclient.tm.interceptorOrder&#x3D;-2147482648\nstore.mode&#x3D;file\nstore.lock.mode&#x3D;file\nstore.session.mode&#x3D;file\nstore.publicKey&#x3D;\nstore.file.dir&#x3D;file_store&#x2F;data\nstore.file.maxBranchSessionSize&#x3D;16384\nstore.file.maxGlobalSessionSize&#x3D;512\nstore.file.fileWriteBufferCacheSize&#x3D;16384\nstore.file.flushDiskMode&#x3D;async\nstore.file.sessionReloadReadSize&#x3D;100\nstore.db.datasource&#x3D;druid\nstore.db.dbType&#x3D;mysql\nstore.db.driverClassName&#x3D;com.mysql.jdbc.Driver\nstore.db.url&#x3D;jdbc:mysql:&#x2F;&#x2F;127.0.0.1:3306&#x2F;seata?useUnicode&#x3D;true&amp;rewriteBatchedStatements&#x3D;true\nstore.db.user&#x3D;username\nstore.db.password&#x3D;password\nstore.db.minConn&#x3D;5\nstore.db.maxConn&#x3D;30\nstore.db.globalTable&#x3D;global_table\nstore.db.branchTable&#x3D;branch_table\nstore.db.queryLimit&#x3D;100\nstore.db.lockTable&#x3D;lock_table\nstore.db.maxWait&#x3D;5000\nstore.redis.mode&#x3D;single\nstore.redis.single.host&#x3D;127.0.0.1\nstore.redis.single.port&#x3D;6379\nstore.redis.sentinel.masterName&#x3D;\nstore.redis.sentinel.sentinelHosts&#x3D;\nstore.redis.maxConn&#x3D;10\nstore.redis.minConn&#x3D;1\nstore.redis.maxTotal&#x3D;100\nstore.redis.database&#x3D;0\nstore.redis.password&#x3D;\nstore.redis.queryLimit&#x3D;100\nserver.recovery.committingRetryPeriod&#x3D;1000\nserver.recovery.asynCommittingRetryPeriod&#x3D;1000\nserver.recovery.rollbackingRetryPeriod&#x3D;1000\nserver.recovery.timeoutRetryPeriod&#x3D;1000\nserver.maxCommitRetryTimeout&#x3D;-1\nserver.maxRollbackRetryTimeout&#x3D;-1\nserver.rollbackRetryTimeoutUnlockEnable&#x3D;false\nserver.distributedLockExpireTime&#x3D;10000\nclient.undo.dataValidation&#x3D;true\nclient.undo.logSerialization&#x3D;jackson\nclient.undo.onlyCareUpdateColumns&#x3D;true\nserver.undo.logSaveDays&#x3D;7\nserver.undo.logDeletePeriod&#x3D;86400000\nclient.undo.logTable&#x3D;undo_log\nclient.undo.compress.enable&#x3D;true\nclient.undo.compress.type&#x3D;zip\nclient.undo.compress.threshold&#x3D;64k\nlog.exceptionRate&#x3D;100\ntransport.serialization&#x3D;seata\ntransport.compressor&#x3D;none\nmetrics.enabled&#x3D;false\nmetrics.registryType&#x3D;compact\nmetrics.exporterList&#x3D;prometheus\nmetrics.exporterPrometheusPort&#x3D;9898</code></pre>\n<p>这里根据自己需求做调整，我这里的配置如下：</p>\n<pre class=\"line-numbers language-properties\" data-language=\"properties\"><code class=\"language-properties\">service.vgroupMapping.order-service-group&#x3D;default\nservice.vgroupMapping.storage-service-group&#x3D;default\nservice.enableDegrade&#x3D;false\nservice.disableGlobalTransaction&#x3D;false\nstore.mode&#x3D;db\nstore.db.datasource&#x3D;druid\nstore.db.dbType&#x3D;mysql\n#store.db.driverClassName&#x3D;com.mysql.jdbc.Driver 这个是mysql8以下的驱动\nstore.db.driverClassName&#x3D;com.mysql.cj.jdbc.Driver #这个是mysql8的驱动\nstore.db.url&#x3D;jdbc:mysql:&#x2F;&#x2F;192.168.0.1:3306&#x2F;seata?useUnicode&#x3D;true #这个是mysql的连接信息\nstore.db.user&#x3D;root #这个是mysql的用户名\nstore.db.password&#x3D;123456 #这个是mysql的密码\nstore.db.minConn&#x3D;5\nstore.db.maxConn&#x3D;30\nstore.db.globalTable&#x3D;global_table\nstore.db.branchTable&#x3D;branch_table\nstore.db.queryLimit&#x3D;100\nstore.db.lockTable&#x3D;lock_table\nstore.db.maxWait&#x3D;5000</code></pre>\n<h2 id=\"1-7-创建nacos-config-sh\">1.7 <a href=\"http://xn--nacos-config-sy5ts55l.sh\">创建nacos-config.sh</a></h2>\n<p>在conf中</p>\n<p>nacos-config.sh获取地址：<a href=\"https://github.com/seata/seata/tree/develop/script/config-center/nacos\">seata/script/config-center/nacos at develop · seata/seata (github.com)</a></p>\n<h2 id=\"1-8-上传seata配置信息到nacos\">1.8 上传seata配置信息到nacos</h2>\n<p>先确认目录结构正确</p>\n<p><img src=\"https://file.huangge1199.cn/group1/M00/00/00/CgAYB2H54zyAYKwlAAAi_TSko4g044.png\" alt=\"\"></p>\n<pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">.&#x2F;nacos-config.sh -h docker所在机器IP -p 8848 -g SEATA_GROUP  -u nacos -w nacos</code></pre>\n<h4 id=\"1-2-2-修改conf-nacos-config-txt-配置\">1.2.2 修改conf/nacos-config.txt 配置</h4>\n<p>service.vgroup_mapping.${your-service-gruop}=default，中间的${your-service-gruop}为自己定义的服务组名称，服务中的application.properties文件里配置服务组名称。</p>\n<p>demo中有两个服务，分别是storage-service和order-service，所以配置如下</p>\n<pre class=\"line-numbers language-properties\" data-language=\"properties\"><code class=\"language-properties\">service.vgroup_mapping.storage-service-group&#x3D;defaultservice.vgroup_mapping.order-service-group&#x3D;default</code></pre>\n<p>** 注意这里,高版本中应该是vgroupMapping 同时后面的如: order-service-group  不能定义为 order_service_group**</p>\n<h4 id=\"1-3-启动seata-server\">1.3 启动seata-server</h4>\n<p><strong>分两步，如下</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># 初始化seata 的nacos配置cd confsh nacos-config.sh 192.168.21.89# 启动seata-servercd binsh seata-server.sh -p 8091 -m file</code></pre>\n<hr>\n<h1>2. 应用配置</h1>\n<h3 id=\"2-1-数据库初始化\">2.1 数据库初始化</h3>\n<pre class=\"line-numbers language-SQL\" data-language=\"SQL\"><code class=\"language-SQL\">-- 创建 order库、业务表、undo_log表create database seata_order;use seata_order;DROP TABLE IF EXISTS &#96;order_tbl&#96;;CREATE TABLE &#96;order_tbl&#96; (  &#96;id&#96; int(11) NOT NULL AUTO_INCREMENT,  &#96;user_id&#96; varchar(255) DEFAULT NULL,  &#96;commodity_code&#96; varchar(255) DEFAULT NULL,  &#96;count&#96; int(11) DEFAULT 0,  &#96;money&#96; int(11) DEFAULT 0,  PRIMARY KEY (&#96;id&#96;)) ENGINE&#x3D;InnoDB DEFAULT CHARSET&#x3D;utf8;CREATE TABLE &#96;undo_log&#96;(  &#96;id&#96;            BIGINT(20)   NOT NULL AUTO_INCREMENT,  &#96;branch_id&#96;     BIGINT(20)   NOT NULL,  &#96;xid&#96;           VARCHAR(100) NOT NULL,  &#96;context&#96;       VARCHAR(128) NOT NULL,  &#96;rollback_info&#96; LONGBLOB     NOT NULL,  &#96;log_status&#96;    INT(11)      NOT NULL,  &#96;log_created&#96;   DATETIME     NOT NULL,  &#96;log_modified&#96;  DATETIME     NOT NULL,  &#96;ext&#96;           VARCHAR(100) DEFAULT NULL,  PRIMARY KEY (&#96;id&#96;),  UNIQUE KEY &#96;ux_undo_log&#96; (&#96;xid&#96;, &#96;branch_id&#96;)) ENGINE &#x3D; InnoDB  AUTO_INCREMENT &#x3D; 1  DEFAULT CHARSET &#x3D; utf8;-- 创建 storage库、业务表、undo_log表create database seata_storage;use seata_storage;DROP TABLE IF EXISTS &#96;storage_tbl&#96;;CREATE TABLE &#96;storage_tbl&#96; (  &#96;id&#96; int(11) NOT NULL AUTO_INCREMENT,  &#96;commodity_code&#96; varchar(255) DEFAULT NULL,  &#96;count&#96; int(11) DEFAULT 0,  PRIMARY KEY (&#96;id&#96;),  UNIQUE KEY (&#96;commodity_code&#96;)) ENGINE&#x3D;InnoDB DEFAULT CHARSET&#x3D;utf8;CREATE TABLE &#96;undo_log&#96;(  &#96;id&#96;            BIGINT(20)   NOT NULL AUTO_INCREMENT,  &#96;branch_id&#96;     BIGINT(20)   NOT NULL,  &#96;xid&#96;           VARCHAR(100) NOT NULL,  &#96;context&#96;       VARCHAR(128) NOT NULL,  &#96;rollback_info&#96; LONGBLOB     NOT NULL,  &#96;log_status&#96;    INT(11)      NOT NULL,  &#96;log_created&#96;   DATETIME     NOT NULL,  &#96;log_modified&#96;  DATETIME     NOT NULL,  &#96;ext&#96;           VARCHAR(100) DEFAULT NULL,  PRIMARY KEY (&#96;id&#96;),  UNIQUE KEY &#96;ux_undo_log&#96; (&#96;xid&#96;, &#96;branch_id&#96;)) ENGINE &#x3D; InnoDB  AUTO_INCREMENT &#x3D; 1  DEFAULT CHARSET &#x3D; utf8;-- 初始化库存模拟数据INSERT INTO seata_storage.storage_tbl (id, commodity_code, count) VALUES (1, &#39;product-1&#39;, 9999999);INSERT INTO seata_storage.storage_tbl (id, commodity_code, count) VALUES (2, &#39;product-2&#39;, 0);</code></pre>\n<h3 id=\"2-2-应用配置\">2.2 应用配置</h3>\n<p>见代码</p>\n<p>几个重要的配置</p>\n<ol>\n<li>每个应用的resource里需要配置一个registry.conf ，demo中与seata-server里的配置相同</li>\n<li>application.propeties 的各个配置项，注意spring.cloud.alibaba.seata.tx-service-group 是服务组名称，与nacos-config.txt 配置的service.vgroup_mapping.${your-service-gruop}具有对应关系</li>\n</ol>\n<hr>\n<h1>3. 测试</h1>\n<ol>\n<li>\n<p>分布式事务成功，模拟正常下单、扣库存</p>\n<p>localhost:9091/order/placeOrder/commit</p>\n</li>\n<li>\n<p>分布式事务失败，模拟下单成功、扣库存失败，最终同时回滚</p>\n<p>localhost:9091/order/placeOrder/rollback</p>\n</li>\n</ol>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"cover":"https://blog.huangge1199.cn/post/jpaCompositePK/bg.jpg","excerpt":"","more":"<h1>seata1.4.1服务端部署及应用</h1>\n<p>springcloud-nacos-seata</p>\n<p><strong>分布式事务组件seata的使用demo，AT模式，集成nacos、springboot、springcloud、mybatis-plus、feign，数据库采用mysql</strong></p>\n<p>demo中使用的相关版本号，具体请看代码。如果搭建个人demo不成功，验证是否是由版本导致，由于目前这几个项目更新比较频繁，版本稍有变化便会出现许多奇怪问题</p>\n<ul>\n<li>seata 1.4.1</li>\n<li>spring-cloud-alibaba-seata 2.2.0.RELEASE</li>\n<li>spring-cloud-starter-alibaba-nacos-discovery  2.1.1.RELEASE</li>\n<li>springboot 2.1.10.RELEASE</li>\n<li>springcloud Greenwich.SR4</li>\n</ul>\n<hr>\n<h1>1. 服务端配置</h1>\n<p>seata-server为release版本1.4.1，采用docker部署方式</p>\n<p><a href=\"https://github.com/seata/seata/releases/tag/v1.4.1\">https://github.com/seata/seata/releases/tag/v1.4.1</a>)</p>\n<h2 id=\"1-1-docker拉取镜像\">1.1 docker拉取镜像</h2>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">docker pull seataio&#x2F;seata-server:1.4.1</code></pre>\n<h2 id=\"1-2-启动临时容器\">1.2 启动临时容器</h2>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">docker run --rm --name seata-server -d -p 8091:8091 seataio&#x2F;seata-server:1.4.1</code></pre>\n<p><img src=\"https://file.huangge1199.cn/group1/M00/00/00/CgAYB2H54oaAImNHAAAUub2sTS4448.png\" alt=\"\"></p>\n<h2 id=\"1-3-将配置文件拷贝出来\">1.3 将配置文件拷贝出来</h2>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">docker cp d5cd81d60189:&#x2F;seata-server&#x2F;resources&#x2F; .&#x2F;conf&#x2F;</code></pre>\n<h2 id=\"1-4-修改conf-registry-conf文件\">1.4 修改conf/registry.conf文件</h2>\n<p>修改文件，用nacos做注册中心和配置中心</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">vi .&#x2F;conf&#x2F;registry.conf</code></pre>\n<p>原始内容：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">registry &#123;\n  # file 、nacos 、eureka、redis、zk、consul、etcd3、sofa\n  type &#x3D; &quot;file&quot;\n  loadBalance &#x3D; &quot;RandomLoadBalance&quot;\n  loadBalanceVirtualNodes &#x3D; 10\n\n  nacos &#123;\n    application &#x3D; &quot;seata-server&quot;\n    serverAddr &#x3D; &quot;127.0.0.1:8848&quot;\n    group &#x3D; &quot;SEATA_GROUP&quot;\n    namespace &#x3D; &quot;&quot;\n    cluster &#x3D; &quot;default&quot;\n    username &#x3D; &quot;&quot;\n    password &#x3D; &quot;&quot;\n  &#125;\n  eureka &#123;\n    serviceUrl &#x3D; &quot;http:&#x2F;&#x2F;localhost:8761&#x2F;eureka&quot;\n    application &#x3D; &quot;default&quot;\n    weight &#x3D; &quot;1&quot;\n  &#125;\n  redis &#123;\n    serverAddr &#x3D; &quot;localhost:6379&quot;\n    db &#x3D; 0\n    password &#x3D; &quot;&quot;\n    cluster &#x3D; &quot;default&quot;\n    timeout &#x3D; 0\n  &#125;\n  zk &#123;\n    cluster &#x3D; &quot;default&quot;\n    serverAddr &#x3D; &quot;127.0.0.1:2181&quot;\n    sessionTimeout &#x3D; 6000\n    connectTimeout &#x3D; 2000\n    username &#x3D; &quot;&quot;\n    password &#x3D; &quot;&quot;\n  &#125;\n  consul &#123;\n    cluster &#x3D; &quot;default&quot;\n    serverAddr &#x3D; &quot;127.0.0.1:8500&quot;\n  &#125;\n  etcd3 &#123;\n    cluster &#x3D; &quot;default&quot;\n    serverAddr &#x3D; &quot;http:&#x2F;&#x2F;localhost:2379&quot;\n  &#125;\n  sofa &#123;\n    serverAddr &#x3D; &quot;127.0.0.1:9603&quot;\n    application &#x3D; &quot;default&quot;\n    region &#x3D; &quot;DEFAULT_ZONE&quot;\n    datacenter &#x3D; &quot;DefaultDataCenter&quot;\n    cluster &#x3D; &quot;default&quot;\n    group &#x3D; &quot;SEATA_GROUP&quot;\n    addressWaitTime &#x3D; &quot;3000&quot;\n  &#125;\n  file &#123;\n    name &#x3D; &quot;file.conf&quot;\n  &#125;\n&#125;\n\nconfig &#123;\n  # file、nacos 、apollo、zk、consul、etcd3\n  type &#x3D; &quot;file&quot;\n\n  nacos &#123;\n    serverAddr &#x3D; &quot;127.0.0.1:8848&quot;\n    namespace &#x3D; &quot;&quot;\n    group &#x3D; &quot;SEATA_GROUP&quot;\n    username &#x3D; &quot;&quot;\n    password &#x3D; &quot;&quot;\n  &#125;\n  consul &#123;\n    serverAddr &#x3D; &quot;127.0.0.1:8500&quot;\n  &#125;\n  apollo &#123;\n    appId &#x3D; &quot;seata-server&quot;\n    apolloMeta &#x3D; &quot;http:&#x2F;&#x2F;192.168.1.204:8801&quot;\n    namespace &#x3D; &quot;application&quot;\n    apolloAccesskeySecret &#x3D; &quot;&quot;\n  &#125;\n  zk &#123;\n    serverAddr &#x3D; &quot;127.0.0.1:2181&quot;\n    sessionTimeout &#x3D; 6000\n    connectTimeout &#x3D; 2000\n    username &#x3D; &quot;&quot;\n    password &#x3D; &quot;&quot;\n  &#125;\n  etcd3 &#123;\n    serverAddr &#x3D; &quot;http:&#x2F;&#x2F;localhost:2379&quot;\n  &#125;\n  file &#123;\n    name &#x3D; &quot;file.conf&quot;\n  &#125;\n&#125;\n</code></pre>\n<p>修改后的内容：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">registry &#123;\n  # file 、nacos 、eureka、redis、zk、consul、etcd3、sofa\n  type &#x3D; &quot;nacos&quot; # 改为nacos\n  loadBalance &#x3D; &quot;RandomLoadBalance&quot;\n  loadBalanceVirtualNodes &#x3D; 10\n\n  nacos &#123;\n    application &#x3D; &quot;seata-server&quot;\n    serverAddr &#x3D; &quot;IP:端口&quot; # 改为nacos实际的IP:端口\n    group &#x3D; &quot;SEATA_GROUP&quot;\n    namespace &#x3D; &quot;&quot;\n    cluster &#x3D; &quot;default&quot;\n    username &#x3D; &quot;nacos&quot; # 改为nacos的账号\n    password &#x3D; &quot;nacos&quot; # 改为nacos的密码\n  &#125;\n  eureka &#123;\n    serviceUrl &#x3D; &quot;http:&#x2F;&#x2F;localhost:8761&#x2F;eureka&quot;\n    application &#x3D; &quot;default&quot;\n    weight &#x3D; &quot;1&quot;\n  &#125;\n  redis &#123;\n    serverAddr &#x3D; &quot;localhost:6379&quot;\n    db &#x3D; 0\n    password &#x3D; &quot;&quot;\n    cluster &#x3D; &quot;default&quot;\n    timeout &#x3D; 0\n  &#125;\n  zk &#123;\n    cluster &#x3D; &quot;default&quot;\n    serverAddr &#x3D; &quot;127.0.0.1:2181&quot;\n    sessionTimeout &#x3D; 6000\n    connectTimeout &#x3D; 2000\n    username &#x3D; &quot;&quot;\n    password &#x3D; &quot;&quot;\n  &#125;\n  consul &#123;\n    cluster &#x3D; &quot;default&quot;\n    serverAddr &#x3D; &quot;127.0.0.1:8500&quot;\n  &#125;\n  etcd3 &#123;\n    cluster &#x3D; &quot;default&quot;\n    serverAddr &#x3D; &quot;http:&#x2F;&#x2F;localhost:2379&quot;\n  &#125;\n  sofa &#123;\n    serverAddr &#x3D; &quot;127.0.0.1:9603&quot;\n    application &#x3D; &quot;default&quot;\n    region &#x3D; &quot;DEFAULT_ZONE&quot;\n    datacenter &#x3D; &quot;DefaultDataCenter&quot;\n    cluster &#x3D; &quot;default&quot;\n    group &#x3D; &quot;SEATA_GROUP&quot;\n    addressWaitTime &#x3D; &quot;3000&quot;\n  &#125;\n  file &#123;\n    name &#x3D; &quot;file.conf&quot;\n  &#125;\n&#125;\n\nconfig &#123;\n  # file、nacos 、apollo、zk、consul、etcd3\n  type &#x3D; &quot;nacos&quot; # 改为nacos\n\n  nacos &#123;\n    serverAddr &#x3D; &quot;IP:端口&quot; # 改为nacos实际的IP:端口\n    namespace &#x3D; &quot;&quot;\n    group &#x3D; &quot;SEATA_GROUP&quot;\n    username &#x3D; &quot;nacos&quot; # 改为nacos的账号\n    password &#x3D; &quot;nacos&quot; # 改为nacos的密码\n  &#125;\n  consul &#123;\n    serverAddr &#x3D; &quot;127.0.0.1:8500&quot;\n  &#125;\n  apollo &#123;\n    appId &#x3D; &quot;seata-server&quot;\n    apolloMeta &#x3D; &quot;http:&#x2F;&#x2F;192.168.1.204:8801&quot;\n    namespace &#x3D; &quot;application&quot;\n    apolloAccesskeySecret &#x3D; &quot;&quot;\n  &#125;\n  zk &#123;\n    serverAddr &#x3D; &quot;127.0.0.1:2181&quot;\n    sessionTimeout &#x3D; 6000\n    connectTimeout &#x3D; 2000\n    username &#x3D; &quot;&quot;\n    password &#x3D; &quot;&quot;\n  &#125;\n  etcd3 &#123;\n    serverAddr &#x3D; &quot;http:&#x2F;&#x2F;localhost:2379&quot;\n  &#125;\n  file &#123;\n    name &#x3D; &quot;file.conf&quot;\n  &#125;\n&#125;\n</code></pre>\n<h2 id=\"1-5-执行SQL语句\">1.5 执行SQL语句</h2>\n<p>seata配置使用db事务日志存储方式</p>\n<p>SQL文件下载地址：<a href=\"https://github.com/seata/seata/tree/develop/script/server/db\">seata/script/server/db at develop · seata/seata (github.com)</a></p>\n<h2 id=\"1-6-创建config-txt并修改\">1.6 创建config.txt并修改</h2>\n<p>config.txt文件地址：<a href=\"https://github.com/seata/seata/blob/develop/script/config-center/config.txt\">seata/config.txt at develop · seata/seata (github.com)</a></p>\n<p>config.txt原件：</p>\n<pre class=\"line-numbers language-properties\" data-language=\"properties\"><code class=\"language-properties\">transport.type&#x3D;TCP\ntransport.server&#x3D;NIO\ntransport.heartbeat&#x3D;true\ntransport.enableClientBatchSendRequest&#x3D;true\ntransport.threadFactory.bossThreadPrefix&#x3D;NettyBoss\ntransport.threadFactory.workerThreadPrefix&#x3D;NettyServerNIOWorker\ntransport.threadFactory.serverExecutorThreadPrefix&#x3D;NettyServerBizHandler\ntransport.threadFactory.shareBossWorker&#x3D;false\ntransport.threadFactory.clientSelectorThreadPrefix&#x3D;NettyClientSelector\ntransport.threadFactory.clientSelectorThreadSize&#x3D;1\ntransport.threadFactory.clientWorkerThreadPrefix&#x3D;NettyClientWorkerThread\ntransport.threadFactory.bossThreadSize&#x3D;1\ntransport.threadFactory.workerThreadSize&#x3D;default\ntransport.shutdown.wait&#x3D;3\nservice.vgroupMapping.my_test_tx_group&#x3D;default\nservice.default.grouplist&#x3D;127.0.0.1:8091\nservice.enableDegrade&#x3D;false\nservice.disableGlobalTransaction&#x3D;false\nclient.rm.asyncCommitBufferLimit&#x3D;10000\nclient.rm.lock.retryInterval&#x3D;10\nclient.rm.lock.retryTimes&#x3D;30\nclient.rm.lock.retryPolicyBranchRollbackOnConflict&#x3D;true\nclient.rm.reportRetryCount&#x3D;5\nclient.rm.tableMetaCheckEnable&#x3D;false\nclient.rm.tableMetaCheckerInterval&#x3D;60000\nclient.rm.sqlParserType&#x3D;druid\nclient.rm.reportSuccessEnable&#x3D;false\nclient.rm.sagaBranchRegisterEnable&#x3D;false\nclient.rm.tccActionInterceptorOrder&#x3D;-2147482648\nclient.tm.commitRetryCount&#x3D;5\nclient.tm.rollbackRetryCount&#x3D;5\nclient.tm.defaultGlobalTransactionTimeout&#x3D;60000\nclient.tm.degradeCheck&#x3D;false\nclient.tm.degradeCheckAllowTimes&#x3D;10\nclient.tm.degradeCheckPeriod&#x3D;2000\nclient.tm.interceptorOrder&#x3D;-2147482648\nstore.mode&#x3D;file\nstore.lock.mode&#x3D;file\nstore.session.mode&#x3D;file\nstore.publicKey&#x3D;\nstore.file.dir&#x3D;file_store&#x2F;data\nstore.file.maxBranchSessionSize&#x3D;16384\nstore.file.maxGlobalSessionSize&#x3D;512\nstore.file.fileWriteBufferCacheSize&#x3D;16384\nstore.file.flushDiskMode&#x3D;async\nstore.file.sessionReloadReadSize&#x3D;100\nstore.db.datasource&#x3D;druid\nstore.db.dbType&#x3D;mysql\nstore.db.driverClassName&#x3D;com.mysql.jdbc.Driver\nstore.db.url&#x3D;jdbc:mysql:&#x2F;&#x2F;127.0.0.1:3306&#x2F;seata?useUnicode&#x3D;true&amp;rewriteBatchedStatements&#x3D;true\nstore.db.user&#x3D;username\nstore.db.password&#x3D;password\nstore.db.minConn&#x3D;5\nstore.db.maxConn&#x3D;30\nstore.db.globalTable&#x3D;global_table\nstore.db.branchTable&#x3D;branch_table\nstore.db.queryLimit&#x3D;100\nstore.db.lockTable&#x3D;lock_table\nstore.db.maxWait&#x3D;5000\nstore.redis.mode&#x3D;single\nstore.redis.single.host&#x3D;127.0.0.1\nstore.redis.single.port&#x3D;6379\nstore.redis.sentinel.masterName&#x3D;\nstore.redis.sentinel.sentinelHosts&#x3D;\nstore.redis.maxConn&#x3D;10\nstore.redis.minConn&#x3D;1\nstore.redis.maxTotal&#x3D;100\nstore.redis.database&#x3D;0\nstore.redis.password&#x3D;\nstore.redis.queryLimit&#x3D;100\nserver.recovery.committingRetryPeriod&#x3D;1000\nserver.recovery.asynCommittingRetryPeriod&#x3D;1000\nserver.recovery.rollbackingRetryPeriod&#x3D;1000\nserver.recovery.timeoutRetryPeriod&#x3D;1000\nserver.maxCommitRetryTimeout&#x3D;-1\nserver.maxRollbackRetryTimeout&#x3D;-1\nserver.rollbackRetryTimeoutUnlockEnable&#x3D;false\nserver.distributedLockExpireTime&#x3D;10000\nclient.undo.dataValidation&#x3D;true\nclient.undo.logSerialization&#x3D;jackson\nclient.undo.onlyCareUpdateColumns&#x3D;true\nserver.undo.logSaveDays&#x3D;7\nserver.undo.logDeletePeriod&#x3D;86400000\nclient.undo.logTable&#x3D;undo_log\nclient.undo.compress.enable&#x3D;true\nclient.undo.compress.type&#x3D;zip\nclient.undo.compress.threshold&#x3D;64k\nlog.exceptionRate&#x3D;100\ntransport.serialization&#x3D;seata\ntransport.compressor&#x3D;none\nmetrics.enabled&#x3D;false\nmetrics.registryType&#x3D;compact\nmetrics.exporterList&#x3D;prometheus\nmetrics.exporterPrometheusPort&#x3D;9898</code></pre>\n<p>这里根据自己需求做调整，我这里的配置如下：</p>\n<pre class=\"line-numbers language-properties\" data-language=\"properties\"><code class=\"language-properties\">service.vgroupMapping.order-service-group&#x3D;default\nservice.vgroupMapping.storage-service-group&#x3D;default\nservice.enableDegrade&#x3D;false\nservice.disableGlobalTransaction&#x3D;false\nstore.mode&#x3D;db\nstore.db.datasource&#x3D;druid\nstore.db.dbType&#x3D;mysql\n#store.db.driverClassName&#x3D;com.mysql.jdbc.Driver 这个是mysql8以下的驱动\nstore.db.driverClassName&#x3D;com.mysql.cj.jdbc.Driver #这个是mysql8的驱动\nstore.db.url&#x3D;jdbc:mysql:&#x2F;&#x2F;192.168.0.1:3306&#x2F;seata?useUnicode&#x3D;true #这个是mysql的连接信息\nstore.db.user&#x3D;root #这个是mysql的用户名\nstore.db.password&#x3D;123456 #这个是mysql的密码\nstore.db.minConn&#x3D;5\nstore.db.maxConn&#x3D;30\nstore.db.globalTable&#x3D;global_table\nstore.db.branchTable&#x3D;branch_table\nstore.db.queryLimit&#x3D;100\nstore.db.lockTable&#x3D;lock_table\nstore.db.maxWait&#x3D;5000</code></pre>\n<h2 id=\"1-7-创建nacos-config-sh\">1.7 <a href=\"http://xn--nacos-config-sy5ts55l.sh\">创建nacos-config.sh</a></h2>\n<p>在conf中</p>\n<p>nacos-config.sh获取地址：<a href=\"https://github.com/seata/seata/tree/develop/script/config-center/nacos\">seata/script/config-center/nacos at develop · seata/seata (github.com)</a></p>\n<h2 id=\"1-8-上传seata配置信息到nacos\">1.8 上传seata配置信息到nacos</h2>\n<p>先确认目录结构正确</p>\n<p><img src=\"https://file.huangge1199.cn/group1/M00/00/00/CgAYB2H54zyAYKwlAAAi_TSko4g044.png\" alt=\"\"></p>\n<pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">.&#x2F;nacos-config.sh -h docker所在机器IP -p 8848 -g SEATA_GROUP  -u nacos -w nacos</code></pre>\n<h4 id=\"1-2-2-修改conf-nacos-config-txt-配置\">1.2.2 修改conf/nacos-config.txt 配置</h4>\n<p>service.vgroup_mapping.${your-service-gruop}=default，中间的${your-service-gruop}为自己定义的服务组名称，服务中的application.properties文件里配置服务组名称。</p>\n<p>demo中有两个服务，分别是storage-service和order-service，所以配置如下</p>\n<pre class=\"line-numbers language-properties\" data-language=\"properties\"><code class=\"language-properties\">service.vgroup_mapping.storage-service-group&#x3D;defaultservice.vgroup_mapping.order-service-group&#x3D;default</code></pre>\n<p>** 注意这里,高版本中应该是vgroupMapping 同时后面的如: order-service-group  不能定义为 order_service_group**</p>\n<h4 id=\"1-3-启动seata-server\">1.3 启动seata-server</h4>\n<p><strong>分两步，如下</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># 初始化seata 的nacos配置cd confsh nacos-config.sh 192.168.21.89# 启动seata-servercd binsh seata-server.sh -p 8091 -m file</code></pre>\n<hr>\n<h1>2. 应用配置</h1>\n<h3 id=\"2-1-数据库初始化\">2.1 数据库初始化</h3>\n<pre class=\"line-numbers language-SQL\" data-language=\"SQL\"><code class=\"language-SQL\">-- 创建 order库、业务表、undo_log表create database seata_order;use seata_order;DROP TABLE IF EXISTS &#96;order_tbl&#96;;CREATE TABLE &#96;order_tbl&#96; (  &#96;id&#96; int(11) NOT NULL AUTO_INCREMENT,  &#96;user_id&#96; varchar(255) DEFAULT NULL,  &#96;commodity_code&#96; varchar(255) DEFAULT NULL,  &#96;count&#96; int(11) DEFAULT 0,  &#96;money&#96; int(11) DEFAULT 0,  PRIMARY KEY (&#96;id&#96;)) ENGINE&#x3D;InnoDB DEFAULT CHARSET&#x3D;utf8;CREATE TABLE &#96;undo_log&#96;(  &#96;id&#96;            BIGINT(20)   NOT NULL AUTO_INCREMENT,  &#96;branch_id&#96;     BIGINT(20)   NOT NULL,  &#96;xid&#96;           VARCHAR(100) NOT NULL,  &#96;context&#96;       VARCHAR(128) NOT NULL,  &#96;rollback_info&#96; LONGBLOB     NOT NULL,  &#96;log_status&#96;    INT(11)      NOT NULL,  &#96;log_created&#96;   DATETIME     NOT NULL,  &#96;log_modified&#96;  DATETIME     NOT NULL,  &#96;ext&#96;           VARCHAR(100) DEFAULT NULL,  PRIMARY KEY (&#96;id&#96;),  UNIQUE KEY &#96;ux_undo_log&#96; (&#96;xid&#96;, &#96;branch_id&#96;)) ENGINE &#x3D; InnoDB  AUTO_INCREMENT &#x3D; 1  DEFAULT CHARSET &#x3D; utf8;-- 创建 storage库、业务表、undo_log表create database seata_storage;use seata_storage;DROP TABLE IF EXISTS &#96;storage_tbl&#96;;CREATE TABLE &#96;storage_tbl&#96; (  &#96;id&#96; int(11) NOT NULL AUTO_INCREMENT,  &#96;commodity_code&#96; varchar(255) DEFAULT NULL,  &#96;count&#96; int(11) DEFAULT 0,  PRIMARY KEY (&#96;id&#96;),  UNIQUE KEY (&#96;commodity_code&#96;)) ENGINE&#x3D;InnoDB DEFAULT CHARSET&#x3D;utf8;CREATE TABLE &#96;undo_log&#96;(  &#96;id&#96;            BIGINT(20)   NOT NULL AUTO_INCREMENT,  &#96;branch_id&#96;     BIGINT(20)   NOT NULL,  &#96;xid&#96;           VARCHAR(100) NOT NULL,  &#96;context&#96;       VARCHAR(128) NOT NULL,  &#96;rollback_info&#96; LONGBLOB     NOT NULL,  &#96;log_status&#96;    INT(11)      NOT NULL,  &#96;log_created&#96;   DATETIME     NOT NULL,  &#96;log_modified&#96;  DATETIME     NOT NULL,  &#96;ext&#96;           VARCHAR(100) DEFAULT NULL,  PRIMARY KEY (&#96;id&#96;),  UNIQUE KEY &#96;ux_undo_log&#96; (&#96;xid&#96;, &#96;branch_id&#96;)) ENGINE &#x3D; InnoDB  AUTO_INCREMENT &#x3D; 1  DEFAULT CHARSET &#x3D; utf8;-- 初始化库存模拟数据INSERT INTO seata_storage.storage_tbl (id, commodity_code, count) VALUES (1, &#39;product-1&#39;, 9999999);INSERT INTO seata_storage.storage_tbl (id, commodity_code, count) VALUES (2, &#39;product-2&#39;, 0);</code></pre>\n<h3 id=\"2-2-应用配置\">2.2 应用配置</h3>\n<p>见代码</p>\n<p>几个重要的配置</p>\n<ol>\n<li>每个应用的resource里需要配置一个registry.conf ，demo中与seata-server里的配置相同</li>\n<li>application.propeties 的各个配置项，注意spring.cloud.alibaba.seata.tx-service-group 是服务组名称，与nacos-config.txt 配置的service.vgroup_mapping.${your-service-gruop}具有对应关系</li>\n</ol>\n<hr>\n<h1>3. 测试</h1>\n<ol>\n<li>\n<p>分布式事务成功，模拟正常下单、扣库存</p>\n<p>localhost:9091/order/placeOrder/commit</p>\n</li>\n<li>\n<p>分布式事务失败，模拟下单成功、扣库存失败，最终同时回滚</p>\n<p>localhost:9091/order/placeOrder/rollback</p>\n</li>\n</ol>\n"},{"title":"单例模式","date":"2022-04-26T06:44:05.000Z","_content":"# 定义\n\n确保一个类在任何情况下都绝对只有一个实例，并提供一个全局访问点\n\n# 饿汉式单例\n\n优点：执行效率高、性能高、没有融合的锁\n\n缺点：某些情况下，可能会造成内存浪费\n\n## 常规写法\n\n```java\npublic class HungrySingleton {\n\n    private static final HungrySingleton hungrySingleton = new HungrySingleton();\n\n    private HungrySingleton() {\n    }\n\n    public static HungrySingleton getInstance() {\n        return hungrySingleton;\n    }\n}\n```\n\n## 利用静态代码块的写法\n\n```java\npublic class HungryStaticSingleton {\n    private static final HungryStaticSingleton hungrySingleton;\n\n    static {\n        hungrySingleton = new HungryStaticSingleton();\n    }\n\n    private HungryStaticSingleton() {\n    }\n\n    public static HungryStaticSingleton getInstance() {\n        return hungrySingleton;\n    }\n}\n```\n\n# 懒汉式单例\n\n## 常规写法\n\n优点：节省了内存，线程安全\n\n缺点：性能低\n\n```java\npublic class LazySimpleSingletion {\n    private static LazySimpleSingletion instance;\n    private LazySimpleSingletion(){}\n\n    public synchronized static LazySimpleSingletion getInstance(){\n        if(instance == null){\n            instance = new LazySimpleSingletion();\n        }\n        return instance;\n    }\n}\n```\n\n## 双重检查\n\n优点：性能高了，线程安全了  \n缺点：可读性难度加大，不够优雅\n\n```java\npublic class LazyDoubleCheckSingleton {\n    private volatile static LazyDoubleCheckSingleton instance;\n\n    private LazyDoubleCheckSingleton() {\n    }\n\n    public static LazyDoubleCheckSingleton getInstance() {\n        //检查是否要阻塞\n        if (instance == null) {\n            synchronized (LazyDoubleCheckSingleton.class) {\n                //检查是否要重新创建实例\n                if (instance == null) {\n                    instance = new LazyDoubleCheckSingleton();\n                    //指令重排序的问题\n                }\n            }\n        }\n        return instance;\n    }\n}\n```\n\n## 静态内部类单例\n\n优点：写法优雅，利用了Java本身语法特点，性能高，避免了内存浪费,不能被反射破坏\n\n```java\npublic class LazyStaticInnerClassSingleton {\n\n    private LazyStaticInnerClassSingleton() {\n        if (LazyHolder.INSTANCE != null) {\n            throw new RuntimeException(\"不允许非法访问\");\n        }\n    }\n\n    private static LazyStaticInnerClassSingleton getInstance() {\n        return LazyHolder.INSTANCE;\n    }\n\n    private static class LazyHolder {\n        private static final LazyStaticInnerClassSingleton INSTANCE = new LazyStaticInnerClassSingleton();\n    }\n\n}\n```\n\n# 注册式单例\n\n## 枚举单例\n\n```java\npublic enum EnumSingleton {\n    INSTANCE;\n\n    private Object data;\n\n    public Object getData() {\n        return data;\n    }\n\n    public void setData(Object data) {\n        this.data = data;\n    }\n\n    public static EnumSingleton getInstance() {\n        return INSTANCE;\n    }\n}\n```\n\n## 容器化单例\n\n```java\npublic class ContainerSingleton {\n\n    private ContainerSingleton() {\n    }\n\n    private static Map<String, Object> ioc = new ConcurrentHashMap<String, Object>();\n\n    public static Object getInstance(String className) {\n        Object instance = null;\n        if (!ioc.containsKey(className)) {\n            try {\n                instance = Class.forName(className).newInstance();\n                ioc.put(className, instance);\n            } catch (Exception e) {\n                e.printStackTrace();\n            }\n            return instance;\n        } else {\n            return ioc.get(className);\n        }\n    }\n\n}\n```\n\n# 序列化单例\n\n```java\npublic class SeriableSingleton implements Serializable {\n    \n    public final static SeriableSingleton INSTANCE = new SeriableSingleton();\n\n    private SeriableSingleton() {\n    }\n\n    public static SeriableSingleton getInstance() {\n        return INSTANCE;\n    }\n\n    private Object readResolve() {\n        return INSTANCE;\n    }\n\n}\n```\n\n# 线程\n\n```java\npublic class ThreadLocalSingleton {\n    private static final ThreadLocal<ThreadLocalSingleton> threadLocaLInstance =\n            new ThreadLocal<ThreadLocalSingleton>() {\n                @Override\n                protected ThreadLocalSingleton initialValue() {\n                    return new ThreadLocalSingleton();\n                }\n            };\n\n    private ThreadLocalSingleton() {\n    }\n\n    public static ThreadLocalSingleton getInstance() {\n        return threadLocaLInstance.get();\n    }\n}CE;\n    }\n\n}\n```\n\n# 破坏单例模式的场景和解决方案\n\n## 1、指令重排使懒汉式模式失效\n\n解决办法：加`volatile`关键字\n\n## 2、反射\n\n解决办法：弄一个全局变量标记是否实例化过，如果实例化过，抛异常\n\n## 3、克隆\n\n解决办法：重新克隆方法，调用时直接返回已经实例化的对象\n\n## 4、序列化\n\n解决办法：在反序列化时的回调方法 readResolve()中返回单例对象\n","source":"_posts/singleton.md","raw":"---\ntitle: 单例模式\ndate: 2022-04-26 14:44:05\ntags: [学习笔记,设计模式]\ncategories: [设计模式]\n---\n# 定义\n\n确保一个类在任何情况下都绝对只有一个实例，并提供一个全局访问点\n\n# 饿汉式单例\n\n优点：执行效率高、性能高、没有融合的锁\n\n缺点：某些情况下，可能会造成内存浪费\n\n## 常规写法\n\n```java\npublic class HungrySingleton {\n\n    private static final HungrySingleton hungrySingleton = new HungrySingleton();\n\n    private HungrySingleton() {\n    }\n\n    public static HungrySingleton getInstance() {\n        return hungrySingleton;\n    }\n}\n```\n\n## 利用静态代码块的写法\n\n```java\npublic class HungryStaticSingleton {\n    private static final HungryStaticSingleton hungrySingleton;\n\n    static {\n        hungrySingleton = new HungryStaticSingleton();\n    }\n\n    private HungryStaticSingleton() {\n    }\n\n    public static HungryStaticSingleton getInstance() {\n        return hungrySingleton;\n    }\n}\n```\n\n# 懒汉式单例\n\n## 常规写法\n\n优点：节省了内存，线程安全\n\n缺点：性能低\n\n```java\npublic class LazySimpleSingletion {\n    private static LazySimpleSingletion instance;\n    private LazySimpleSingletion(){}\n\n    public synchronized static LazySimpleSingletion getInstance(){\n        if(instance == null){\n            instance = new LazySimpleSingletion();\n        }\n        return instance;\n    }\n}\n```\n\n## 双重检查\n\n优点：性能高了，线程安全了  \n缺点：可读性难度加大，不够优雅\n\n```java\npublic class LazyDoubleCheckSingleton {\n    private volatile static LazyDoubleCheckSingleton instance;\n\n    private LazyDoubleCheckSingleton() {\n    }\n\n    public static LazyDoubleCheckSingleton getInstance() {\n        //检查是否要阻塞\n        if (instance == null) {\n            synchronized (LazyDoubleCheckSingleton.class) {\n                //检查是否要重新创建实例\n                if (instance == null) {\n                    instance = new LazyDoubleCheckSingleton();\n                    //指令重排序的问题\n                }\n            }\n        }\n        return instance;\n    }\n}\n```\n\n## 静态内部类单例\n\n优点：写法优雅，利用了Java本身语法特点，性能高，避免了内存浪费,不能被反射破坏\n\n```java\npublic class LazyStaticInnerClassSingleton {\n\n    private LazyStaticInnerClassSingleton() {\n        if (LazyHolder.INSTANCE != null) {\n            throw new RuntimeException(\"不允许非法访问\");\n        }\n    }\n\n    private static LazyStaticInnerClassSingleton getInstance() {\n        return LazyHolder.INSTANCE;\n    }\n\n    private static class LazyHolder {\n        private static final LazyStaticInnerClassSingleton INSTANCE = new LazyStaticInnerClassSingleton();\n    }\n\n}\n```\n\n# 注册式单例\n\n## 枚举单例\n\n```java\npublic enum EnumSingleton {\n    INSTANCE;\n\n    private Object data;\n\n    public Object getData() {\n        return data;\n    }\n\n    public void setData(Object data) {\n        this.data = data;\n    }\n\n    public static EnumSingleton getInstance() {\n        return INSTANCE;\n    }\n}\n```\n\n## 容器化单例\n\n```java\npublic class ContainerSingleton {\n\n    private ContainerSingleton() {\n    }\n\n    private static Map<String, Object> ioc = new ConcurrentHashMap<String, Object>();\n\n    public static Object getInstance(String className) {\n        Object instance = null;\n        if (!ioc.containsKey(className)) {\n            try {\n                instance = Class.forName(className).newInstance();\n                ioc.put(className, instance);\n            } catch (Exception e) {\n                e.printStackTrace();\n            }\n            return instance;\n        } else {\n            return ioc.get(className);\n        }\n    }\n\n}\n```\n\n# 序列化单例\n\n```java\npublic class SeriableSingleton implements Serializable {\n    \n    public final static SeriableSingleton INSTANCE = new SeriableSingleton();\n\n    private SeriableSingleton() {\n    }\n\n    public static SeriableSingleton getInstance() {\n        return INSTANCE;\n    }\n\n    private Object readResolve() {\n        return INSTANCE;\n    }\n\n}\n```\n\n# 线程\n\n```java\npublic class ThreadLocalSingleton {\n    private static final ThreadLocal<ThreadLocalSingleton> threadLocaLInstance =\n            new ThreadLocal<ThreadLocalSingleton>() {\n                @Override\n                protected ThreadLocalSingleton initialValue() {\n                    return new ThreadLocalSingleton();\n                }\n            };\n\n    private ThreadLocalSingleton() {\n    }\n\n    public static ThreadLocalSingleton getInstance() {\n        return threadLocaLInstance.get();\n    }\n}CE;\n    }\n\n}\n```\n\n# 破坏单例模式的场景和解决方案\n\n## 1、指令重排使懒汉式模式失效\n\n解决办法：加`volatile`关键字\n\n## 2、反射\n\n解决办法：弄一个全局变量标记是否实例化过，如果实例化过，抛异常\n\n## 3、克隆\n\n解决办法：重新克隆方法，调用时直接返回已经实例化的对象\n\n## 4、序列化\n\n解决办法：在反序列化时的回调方法 readResolve()中返回单例对象\n","slug":"singleton","published":1,"updated":"2022-06-03T06:00:55.605Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl42z5h83006v3gn6et8w47e0","content":"<h1>定义</h1>\n<p>确保一个类在任何情况下都绝对只有一个实例，并提供一个全局访问点</p>\n<h1>饿汉式单例</h1>\n<p>优点：执行效率高、性能高、没有融合的锁</p>\n<p>缺点：某些情况下，可能会造成内存浪费</p>\n<h2 id=\"常规写法\">常规写法</h2>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">public class HungrySingleton &#123;\n\n    private static final HungrySingleton hungrySingleton &#x3D; new HungrySingleton();\n\n    private HungrySingleton() &#123;\n    &#125;\n\n    public static HungrySingleton getInstance() &#123;\n        return hungrySingleton;\n    &#125;\n&#125;</code></pre>\n<h2 id=\"利用静态代码块的写法\">利用静态代码块的写法</h2>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">public class HungryStaticSingleton &#123;\n    private static final HungryStaticSingleton hungrySingleton;\n\n    static &#123;\n        hungrySingleton &#x3D; new HungryStaticSingleton();\n    &#125;\n\n    private HungryStaticSingleton() &#123;\n    &#125;\n\n    public static HungryStaticSingleton getInstance() &#123;\n        return hungrySingleton;\n    &#125;\n&#125;</code></pre>\n<h1>懒汉式单例</h1>\n<h2 id=\"常规写法-2\">常规写法</h2>\n<p>优点：节省了内存，线程安全</p>\n<p>缺点：性能低</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">public class LazySimpleSingletion &#123;\n    private static LazySimpleSingletion instance;\n    private LazySimpleSingletion()&#123;&#125;\n\n    public synchronized static LazySimpleSingletion getInstance()&#123;\n        if(instance &#x3D;&#x3D; null)&#123;\n            instance &#x3D; new LazySimpleSingletion();\n        &#125;\n        return instance;\n    &#125;\n&#125;</code></pre>\n<h2 id=\"双重检查\">双重检查</h2>\n<p>优点：性能高了，线程安全了<br>\n缺点：可读性难度加大，不够优雅</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">public class LazyDoubleCheckSingleton &#123;\n    private volatile static LazyDoubleCheckSingleton instance;\n\n    private LazyDoubleCheckSingleton() &#123;\n    &#125;\n\n    public static LazyDoubleCheckSingleton getInstance() &#123;\n        &#x2F;&#x2F;检查是否要阻塞\n        if (instance &#x3D;&#x3D; null) &#123;\n            synchronized (LazyDoubleCheckSingleton.class) &#123;\n                &#x2F;&#x2F;检查是否要重新创建实例\n                if (instance &#x3D;&#x3D; null) &#123;\n                    instance &#x3D; new LazyDoubleCheckSingleton();\n                    &#x2F;&#x2F;指令重排序的问题\n                &#125;\n            &#125;\n        &#125;\n        return instance;\n    &#125;\n&#125;</code></pre>\n<h2 id=\"静态内部类单例\">静态内部类单例</h2>\n<p>优点：写法优雅，利用了Java本身语法特点，性能高，避免了内存浪费,不能被反射破坏</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">public class LazyStaticInnerClassSingleton &#123;\n\n    private LazyStaticInnerClassSingleton() &#123;\n        if (LazyHolder.INSTANCE !&#x3D; null) &#123;\n            throw new RuntimeException(&quot;不允许非法访问&quot;);\n        &#125;\n    &#125;\n\n    private static LazyStaticInnerClassSingleton getInstance() &#123;\n        return LazyHolder.INSTANCE;\n    &#125;\n\n    private static class LazyHolder &#123;\n        private static final LazyStaticInnerClassSingleton INSTANCE &#x3D; new LazyStaticInnerClassSingleton();\n    &#125;\n\n&#125;</code></pre>\n<h1>注册式单例</h1>\n<h2 id=\"枚举单例\">枚举单例</h2>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">public enum EnumSingleton &#123;\n    INSTANCE;\n\n    private Object data;\n\n    public Object getData() &#123;\n        return data;\n    &#125;\n\n    public void setData(Object data) &#123;\n        this.data &#x3D; data;\n    &#125;\n\n    public static EnumSingleton getInstance() &#123;\n        return INSTANCE;\n    &#125;\n&#125;</code></pre>\n<h2 id=\"容器化单例\">容器化单例</h2>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">public class ContainerSingleton &#123;\n\n    private ContainerSingleton() &#123;\n    &#125;\n\n    private static Map&lt;String, Object&gt; ioc &#x3D; new ConcurrentHashMap&lt;String, Object&gt;();\n\n    public static Object getInstance(String className) &#123;\n        Object instance &#x3D; null;\n        if (!ioc.containsKey(className)) &#123;\n            try &#123;\n                instance &#x3D; Class.forName(className).newInstance();\n                ioc.put(className, instance);\n            &#125; catch (Exception e) &#123;\n                e.printStackTrace();\n            &#125;\n            return instance;\n        &#125; else &#123;\n            return ioc.get(className);\n        &#125;\n    &#125;\n\n&#125;</code></pre>\n<h1>序列化单例</h1>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">public class SeriableSingleton implements Serializable &#123;\n    \n    public final static SeriableSingleton INSTANCE &#x3D; new SeriableSingleton();\n\n    private SeriableSingleton() &#123;\n    &#125;\n\n    public static SeriableSingleton getInstance() &#123;\n        return INSTANCE;\n    &#125;\n\n    private Object readResolve() &#123;\n        return INSTANCE;\n    &#125;\n\n&#125;</code></pre>\n<h1>线程</h1>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">public class ThreadLocalSingleton &#123;\n    private static final ThreadLocal&lt;ThreadLocalSingleton&gt; threadLocaLInstance &#x3D;\n            new ThreadLocal&lt;ThreadLocalSingleton&gt;() &#123;\n                @Override\n                protected ThreadLocalSingleton initialValue() &#123;\n                    return new ThreadLocalSingleton();\n                &#125;\n            &#125;;\n\n    private ThreadLocalSingleton() &#123;\n    &#125;\n\n    public static ThreadLocalSingleton getInstance() &#123;\n        return threadLocaLInstance.get();\n    &#125;\n&#125;CE;\n    &#125;\n\n&#125;</code></pre>\n<h1>破坏单例模式的场景和解决方案</h1>\n<h2 id=\"1、指令重排使懒汉式模式失效\">1、指令重排使懒汉式模式失效</h2>\n<p>解决办法：加<code>volatile</code>关键字</p>\n<h2 id=\"2、反射\">2、反射</h2>\n<p>解决办法：弄一个全局变量标记是否实例化过，如果实例化过，抛异常</p>\n<h2 id=\"3、克隆\">3、克隆</h2>\n<p>解决办法：重新克隆方法，调用时直接返回已经实例化的对象</p>\n<h2 id=\"4、序列化\">4、序列化</h2>\n<p>解决办法：在反序列化时的回调方法 readResolve()中返回单例对象</p>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"cover":"https://blog.huangge1199.cn/post/sublimeText4Purchase/bg.jpeg","excerpt":"","more":"<h1>定义</h1>\n<p>确保一个类在任何情况下都绝对只有一个实例，并提供一个全局访问点</p>\n<h1>饿汉式单例</h1>\n<p>优点：执行效率高、性能高、没有融合的锁</p>\n<p>缺点：某些情况下，可能会造成内存浪费</p>\n<h2 id=\"常规写法\">常规写法</h2>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">public class HungrySingleton &#123;\n\n    private static final HungrySingleton hungrySingleton &#x3D; new HungrySingleton();\n\n    private HungrySingleton() &#123;\n    &#125;\n\n    public static HungrySingleton getInstance() &#123;\n        return hungrySingleton;\n    &#125;\n&#125;</code></pre>\n<h2 id=\"利用静态代码块的写法\">利用静态代码块的写法</h2>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">public class HungryStaticSingleton &#123;\n    private static final HungryStaticSingleton hungrySingleton;\n\n    static &#123;\n        hungrySingleton &#x3D; new HungryStaticSingleton();\n    &#125;\n\n    private HungryStaticSingleton() &#123;\n    &#125;\n\n    public static HungryStaticSingleton getInstance() &#123;\n        return hungrySingleton;\n    &#125;\n&#125;</code></pre>\n<h1>懒汉式单例</h1>\n<h2 id=\"常规写法-2\">常规写法</h2>\n<p>优点：节省了内存，线程安全</p>\n<p>缺点：性能低</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">public class LazySimpleSingletion &#123;\n    private static LazySimpleSingletion instance;\n    private LazySimpleSingletion()&#123;&#125;\n\n    public synchronized static LazySimpleSingletion getInstance()&#123;\n        if(instance &#x3D;&#x3D; null)&#123;\n            instance &#x3D; new LazySimpleSingletion();\n        &#125;\n        return instance;\n    &#125;\n&#125;</code></pre>\n<h2 id=\"双重检查\">双重检查</h2>\n<p>优点：性能高了，线程安全了<br>\n缺点：可读性难度加大，不够优雅</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">public class LazyDoubleCheckSingleton &#123;\n    private volatile static LazyDoubleCheckSingleton instance;\n\n    private LazyDoubleCheckSingleton() &#123;\n    &#125;\n\n    public static LazyDoubleCheckSingleton getInstance() &#123;\n        &#x2F;&#x2F;检查是否要阻塞\n        if (instance &#x3D;&#x3D; null) &#123;\n            synchronized (LazyDoubleCheckSingleton.class) &#123;\n                &#x2F;&#x2F;检查是否要重新创建实例\n                if (instance &#x3D;&#x3D; null) &#123;\n                    instance &#x3D; new LazyDoubleCheckSingleton();\n                    &#x2F;&#x2F;指令重排序的问题\n                &#125;\n            &#125;\n        &#125;\n        return instance;\n    &#125;\n&#125;</code></pre>\n<h2 id=\"静态内部类单例\">静态内部类单例</h2>\n<p>优点：写法优雅，利用了Java本身语法特点，性能高，避免了内存浪费,不能被反射破坏</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">public class LazyStaticInnerClassSingleton &#123;\n\n    private LazyStaticInnerClassSingleton() &#123;\n        if (LazyHolder.INSTANCE !&#x3D; null) &#123;\n            throw new RuntimeException(&quot;不允许非法访问&quot;);\n        &#125;\n    &#125;\n\n    private static LazyStaticInnerClassSingleton getInstance() &#123;\n        return LazyHolder.INSTANCE;\n    &#125;\n\n    private static class LazyHolder &#123;\n        private static final LazyStaticInnerClassSingleton INSTANCE &#x3D; new LazyStaticInnerClassSingleton();\n    &#125;\n\n&#125;</code></pre>\n<h1>注册式单例</h1>\n<h2 id=\"枚举单例\">枚举单例</h2>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">public enum EnumSingleton &#123;\n    INSTANCE;\n\n    private Object data;\n\n    public Object getData() &#123;\n        return data;\n    &#125;\n\n    public void setData(Object data) &#123;\n        this.data &#x3D; data;\n    &#125;\n\n    public static EnumSingleton getInstance() &#123;\n        return INSTANCE;\n    &#125;\n&#125;</code></pre>\n<h2 id=\"容器化单例\">容器化单例</h2>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">public class ContainerSingleton &#123;\n\n    private ContainerSingleton() &#123;\n    &#125;\n\n    private static Map&lt;String, Object&gt; ioc &#x3D; new ConcurrentHashMap&lt;String, Object&gt;();\n\n    public static Object getInstance(String className) &#123;\n        Object instance &#x3D; null;\n        if (!ioc.containsKey(className)) &#123;\n            try &#123;\n                instance &#x3D; Class.forName(className).newInstance();\n                ioc.put(className, instance);\n            &#125; catch (Exception e) &#123;\n                e.printStackTrace();\n            &#125;\n            return instance;\n        &#125; else &#123;\n            return ioc.get(className);\n        &#125;\n    &#125;\n\n&#125;</code></pre>\n<h1>序列化单例</h1>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">public class SeriableSingleton implements Serializable &#123;\n    \n    public final static SeriableSingleton INSTANCE &#x3D; new SeriableSingleton();\n\n    private SeriableSingleton() &#123;\n    &#125;\n\n    public static SeriableSingleton getInstance() &#123;\n        return INSTANCE;\n    &#125;\n\n    private Object readResolve() &#123;\n        return INSTANCE;\n    &#125;\n\n&#125;</code></pre>\n<h1>线程</h1>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">public class ThreadLocalSingleton &#123;\n    private static final ThreadLocal&lt;ThreadLocalSingleton&gt; threadLocaLInstance &#x3D;\n            new ThreadLocal&lt;ThreadLocalSingleton&gt;() &#123;\n                @Override\n                protected ThreadLocalSingleton initialValue() &#123;\n                    return new ThreadLocalSingleton();\n                &#125;\n            &#125;;\n\n    private ThreadLocalSingleton() &#123;\n    &#125;\n\n    public static ThreadLocalSingleton getInstance() &#123;\n        return threadLocaLInstance.get();\n    &#125;\n&#125;CE;\n    &#125;\n\n&#125;</code></pre>\n<h1>破坏单例模式的场景和解决方案</h1>\n<h2 id=\"1、指令重排使懒汉式模式失效\">1、指令重排使懒汉式模式失效</h2>\n<p>解决办法：加<code>volatile</code>关键字</p>\n<h2 id=\"2、反射\">2、反射</h2>\n<p>解决办法：弄一个全局变量标记是否实例化过，如果实例化过，抛异常</p>\n<h2 id=\"3、克隆\">3、克隆</h2>\n<p>解决办法：重新克隆方法，调用时直接返回已经实例化的对象</p>\n<h2 id=\"4、序列化\">4、序列化</h2>\n<p>解决办法：在反序列化时的回调方法 readResolve()中返回单例对象</p>\n"},{"title":"Sublime Text 4 破解","date":"2022-01-14T07:24:18.000Z","cover":"/post/sublimeText4Purchase/bg.jpeg","_content":"\n# 下载地址\nhttps://www.sublimetext.com/download\n# 激活方法\n## 打开在线十六进制编辑器\n\n地址：[hexed](https://hexed.it/)\n\n![image-20220114153619254](image-20220114153619254.png)\n\n## 打开``sublime_text.exe``文件\n![img.png](img.png)\n\n## 替换\n\n根据版本不同替换不同：\n\n- X64版本\n\n  `4157415656575553B828210000` 替换为 `33C0FEC0C3575553B828210000`\n\n- X86版本\n  `55535756B8AC200000` 替换为 `33C0FEC0C3AC200000`\n\n按住`Ctrl+F`，我这边是64位电脑，在搜索中输入`4157415656575553B828210000` ，在替换为输入`33C0FEC0C3AC200000`，如果替换为无法输入，记得将替换为上一行的启用替换勾选上，然后先查找一下，接下来再点击替换\n\n![image-20220114154528250](image-20220114154528250.png)\n\n## 替换后点击另存为，替换掉原来的文件，保存\n\n![image-20220114154843108](image-20220114154843108.png)\n\n## 输入激活码激活\n\n- 打开应用\n\n- 依次点击Help->Enter License\n\n  ![image-20220114155104130](image-20220114155104130.png)\n\n- 在弹出的窗口输入激活码\n\n  激活码如下：\n\n  ```tex\n  ----- BEGIN LICENSE -----\n  RUYO.net\n  Unlimited User License\n  EA7E-81044230\n  0C0CD4A8 CAA317D9 CCABD1AC 434C984C\n  7E4A0B13 77893C3E DD0A5BA1 B2EB721C\n  4BAAB4C4 9B96437D 14EB743E 7DB55D9C\n  7CA26EE2 67C3B4EC 29B2C65A 88D90C59\n  CB6CCBA5 7DE6177B C02C2826 8C9A21B0\n  6AB1A5B6 20B09EA2 01C979BD 29670B19\n  92DC6D90 6E365849 4AB84739 5B4C3EA1\n  048CC1D0 9748ED54 CAC9D585 90CAD815\n  ------ END LICENSE ------\n  ```\n\n  ![image-20220114155245648](image-20220114155245648.png)\n\n- 点击下方的Use License\n\n  ![image-20220114155341371](image-20220114155341371.png)\n\n- 确认\n\n  依次点击Help->About Sublime Text\n\n  ![image-20220114155558214](image-20220114155558214.png)\n","source":"_posts/sublimeText4Purchase.md","raw":"---\ntitle: Sublime Text 4 破解\ndate: 2022-01-14 15:24:18\ncategories: 开发工具\ntags: 破解\ncover: bg.jpeg\n---\n\n# 下载地址\nhttps://www.sublimetext.com/download\n# 激活方法\n## 打开在线十六进制编辑器\n\n地址：[hexed](https://hexed.it/)\n\n![image-20220114153619254](image-20220114153619254.png)\n\n## 打开``sublime_text.exe``文件\n![img.png](img.png)\n\n## 替换\n\n根据版本不同替换不同：\n\n- X64版本\n\n  `4157415656575553B828210000` 替换为 `33C0FEC0C3575553B828210000`\n\n- X86版本\n  `55535756B8AC200000` 替换为 `33C0FEC0C3AC200000`\n\n按住`Ctrl+F`，我这边是64位电脑，在搜索中输入`4157415656575553B828210000` ，在替换为输入`33C0FEC0C3AC200000`，如果替换为无法输入，记得将替换为上一行的启用替换勾选上，然后先查找一下，接下来再点击替换\n\n![image-20220114154528250](image-20220114154528250.png)\n\n## 替换后点击另存为，替换掉原来的文件，保存\n\n![image-20220114154843108](image-20220114154843108.png)\n\n## 输入激活码激活\n\n- 打开应用\n\n- 依次点击Help->Enter License\n\n  ![image-20220114155104130](image-20220114155104130.png)\n\n- 在弹出的窗口输入激活码\n\n  激活码如下：\n\n  ```tex\n  ----- BEGIN LICENSE -----\n  RUYO.net\n  Unlimited User License\n  EA7E-81044230\n  0C0CD4A8 CAA317D9 CCABD1AC 434C984C\n  7E4A0B13 77893C3E DD0A5BA1 B2EB721C\n  4BAAB4C4 9B96437D 14EB743E 7DB55D9C\n  7CA26EE2 67C3B4EC 29B2C65A 88D90C59\n  CB6CCBA5 7DE6177B C02C2826 8C9A21B0\n  6AB1A5B6 20B09EA2 01C979BD 29670B19\n  92DC6D90 6E365849 4AB84739 5B4C3EA1\n  048CC1D0 9748ED54 CAC9D585 90CAD815\n  ------ END LICENSE ------\n  ```\n\n  ![image-20220114155245648](image-20220114155245648.png)\n\n- 点击下方的Use License\n\n  ![image-20220114155341371](image-20220114155341371.png)\n\n- 确认\n\n  依次点击Help->About Sublime Text\n\n  ![image-20220114155558214](image-20220114155558214.png)\n","slug":"sublimeText4Purchase","published":1,"updated":"2022-06-03T06:00:55.605Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl42z5h85006z3gn6810w4ysx","content":"<h1>下载地址</h1>\n<p><a href=\"https://www.sublimetext.com/download\">https://www.sublimetext.com/download</a></p>\n<h1>激活方法</h1>\n<h2 id=\"打开在线十六进制编辑器\">打开在线十六进制编辑器</h2>\n<p>地址：<a href=\"https://hexed.it/\">hexed</a></p>\n<p><img src=\"image-20220114153619254.png\" alt=\"image-20220114153619254\"></p>\n<h2 id=\"打开sublime-text-exe文件\">打开<code>sublime_text.exe</code>文件</h2>\n<p><img src=\"img.png\" alt=\"img.png\"></p>\n<h2 id=\"替换\">替换</h2>\n<p>根据版本不同替换不同：</p>\n<ul>\n<li>\n<p>X64版本</p>\n<p><code>4157415656575553B828210000</code> 替换为 <code>33C0FEC0C3575553B828210000</code></p>\n</li>\n<li>\n<p>X86版本<br>\n<code>55535756B8AC200000</code> 替换为 <code>33C0FEC0C3AC200000</code></p>\n</li>\n</ul>\n<p>按住<code>Ctrl+F</code>，我这边是64位电脑，在搜索中输入<code>4157415656575553B828210000</code> ，在替换为输入<code>33C0FEC0C3AC200000</code>，如果替换为无法输入，记得将替换为上一行的启用替换勾选上，然后先查找一下，接下来再点击替换</p>\n<p><img src=\"image-20220114154528250.png\" alt=\"image-20220114154528250\"></p>\n<h2 id=\"替换后点击另存为，替换掉原来的文件，保存\">替换后点击另存为，替换掉原来的文件，保存</h2>\n<p><img src=\"image-20220114154843108.png\" alt=\"image-20220114154843108\"></p>\n<h2 id=\"输入激活码激活\">输入激活码激活</h2>\n<ul>\n<li>\n<p>打开应用</p>\n</li>\n<li>\n<p>依次点击Help-&gt;Enter License</p>\n<p><img src=\"image-20220114155104130.png\" alt=\"image-20220114155104130\"></p>\n</li>\n<li>\n<p>在弹出的窗口输入激活码</p>\n<p>激活码如下：</p>\n<pre class=\"line-numbers language-latex\" data-language=\"latex\"><code class=\"language-latex\">----- BEGIN LICENSE -----\nRUYO.net\nUnlimited User License\nEA7E-81044230\n0C0CD4A8 CAA317D9 CCABD1AC 434C984C\n7E4A0B13 77893C3E DD0A5BA1 B2EB721C\n4BAAB4C4 9B96437D 14EB743E 7DB55D9C\n7CA26EE2 67C3B4EC 29B2C65A 88D90C59\nCB6CCBA5 7DE6177B C02C2826 8C9A21B0\n6AB1A5B6 20B09EA2 01C979BD 29670B19\n92DC6D90 6E365849 4AB84739 5B4C3EA1\n048CC1D0 9748ED54 CAC9D585 90CAD815\n------ END LICENSE ------</code></pre>\n<p><img src=\"image-20220114155245648.png\" alt=\"image-20220114155245648\"></p>\n</li>\n<li>\n<p>点击下方的Use License</p>\n<p><img src=\"image-20220114155341371.png\" alt=\"image-20220114155341371\"></p>\n</li>\n<li>\n<p>确认</p>\n<p>依次点击Help-&gt;About Sublime Text</p>\n<p><img src=\"image-20220114155558214.png\" alt=\"image-20220114155558214\"></p>\n</li>\n</ul>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"excerpt":"","more":"<h1>下载地址</h1>\n<p><a href=\"https://www.sublimetext.com/download\">https://www.sublimetext.com/download</a></p>\n<h1>激活方法</h1>\n<h2 id=\"打开在线十六进制编辑器\">打开在线十六进制编辑器</h2>\n<p>地址：<a href=\"https://hexed.it/\">hexed</a></p>\n<p><img src=\"image-20220114153619254.png\" alt=\"image-20220114153619254\"></p>\n<h2 id=\"打开sublime-text-exe文件\">打开<code>sublime_text.exe</code>文件</h2>\n<p><img src=\"img.png\" alt=\"img.png\"></p>\n<h2 id=\"替换\">替换</h2>\n<p>根据版本不同替换不同：</p>\n<ul>\n<li>\n<p>X64版本</p>\n<p><code>4157415656575553B828210000</code> 替换为 <code>33C0FEC0C3575553B828210000</code></p>\n</li>\n<li>\n<p>X86版本<br>\n<code>55535756B8AC200000</code> 替换为 <code>33C0FEC0C3AC200000</code></p>\n</li>\n</ul>\n<p>按住<code>Ctrl+F</code>，我这边是64位电脑，在搜索中输入<code>4157415656575553B828210000</code> ，在替换为输入<code>33C0FEC0C3AC200000</code>，如果替换为无法输入，记得将替换为上一行的启用替换勾选上，然后先查找一下，接下来再点击替换</p>\n<p><img src=\"image-20220114154528250.png\" alt=\"image-20220114154528250\"></p>\n<h2 id=\"替换后点击另存为，替换掉原来的文件，保存\">替换后点击另存为，替换掉原来的文件，保存</h2>\n<p><img src=\"image-20220114154843108.png\" alt=\"image-20220114154843108\"></p>\n<h2 id=\"输入激活码激活\">输入激活码激活</h2>\n<ul>\n<li>\n<p>打开应用</p>\n</li>\n<li>\n<p>依次点击Help-&gt;Enter License</p>\n<p><img src=\"image-20220114155104130.png\" alt=\"image-20220114155104130\"></p>\n</li>\n<li>\n<p>在弹出的窗口输入激活码</p>\n<p>激活码如下：</p>\n<pre class=\"line-numbers language-latex\" data-language=\"latex\"><code class=\"language-latex\">----- BEGIN LICENSE -----\nRUYO.net\nUnlimited User License\nEA7E-81044230\n0C0CD4A8 CAA317D9 CCABD1AC 434C984C\n7E4A0B13 77893C3E DD0A5BA1 B2EB721C\n4BAAB4C4 9B96437D 14EB743E 7DB55D9C\n7CA26EE2 67C3B4EC 29B2C65A 88D90C59\nCB6CCBA5 7DE6177B C02C2826 8C9A21B0\n6AB1A5B6 20B09EA2 01C979BD 29670B19\n92DC6D90 6E365849 4AB84739 5B4C3EA1\n048CC1D0 9748ED54 CAC9D585 90CAD815\n------ END LICENSE ------</code></pre>\n<p><img src=\"image-20220114155245648.png\" alt=\"image-20220114155245648\"></p>\n</li>\n<li>\n<p>点击下方的Use License</p>\n<p><img src=\"image-20220114155341371.png\" alt=\"image-20220114155341371\"></p>\n</li>\n<li>\n<p>确认</p>\n<p>依次点击Help-&gt;About Sublime Text</p>\n<p><img src=\"image-20220114155558214.png\" alt=\"image-20220114155558214\"></p>\n</li>\n</ul>\n"},{"title":"力扣周赛292题解","date":"2022-05-10T06:01:37.000Z","_content":"\n# 第一题\n\n## 力扣原题链接：\n\n[2264. 字符串中最大的 3 位相同数字](https://leetcode.cn/problems/largest-3-same-digit-number-in-string/)\n\n## 单个题解：\n\n[力扣2264. 字符串中最大的 3 位相同数字](https://site.huangge1199.cn/211.html)\n\n## 题解：\n\n这题是要找最大的3个相同数并且3个数是相连的，因为数字的话只有0~9这10个数字，找最大的，那我就从999开始，然后依次888、777。。。000，只要字符串中存在，那就是它了。\n\n## java代码：\n\n```java\npublic String largestGoodInteger(String num) {\n    String str;\n    for (int i = 9; i >= 0; i--) {\n        str = \"\" + i + i + i;\n        if (num.contains(str)) {\n            return str;\n        }\n    }\n    return \"\";\n}\n```\n\n# 第二题\n\n## 力扣原题链接：\n\n[6057. 统计值等于子树平均值的节点数](https://leetcode.cn/problems/count-nodes-equal-to-average-of-subtree/)\n\n## 单个题解：\n\n[力扣6057. 统计值等于子树平均值的节点数](https://site.huangge1199.cn/213.html)\n\n## 题解：\n\n这题的思路：\n\n- 先深度遍历树，统计出每个节点包含的节点数，并将其放入队列中\n\n- 再深度遍历一次树，这次计算出每个节点的元素和，并从队列中取到该节点的节点数，然后求平均值做判断\n\n## java代码：\n\n```java\nclass Solution {\n    public int averageOfSubtree(TreeNode root) {\n        counts(root);\n        sums(root);\n        return count;\n    }\n    Queue<Integer> queue = new LinkedList<>();\n    int count = 0;\n    private int counts(TreeNode root) {\n        if (root == null) {\n            return 0;\n        }\n        int cnt = counts(root.left) + counts(root.right) + 1;\n        queue.add(cnt);\n        return cnt;\n    }\n    private int sums(TreeNode root) {\n        if (root == null) {\n            return 0;\n        }\n        int sum = root.val;\n        sum += sums(root.left);\n        sum += sums(root.right);\n        if (sum / queue.poll() == root.val) {\n            count++;\n        }\n        return sum;\n    }\n}\n```\n\n# 第三题\n\n## 力扣原题链接：\n\n[2266. 统计打字方案数](https://leetcode.cn/problems/count-number-of-texts/)\n\n## 单个题解：\n\n[力扣2267. 检查是否有合法括号字符串路径](https://site.huangge1199.cn/215.html)\n\n## 题解：\n\n这题标的是中等题，个人觉得解题方法有点取巧，怎么取巧尼，因为重复的数最多4个，我完全可以嵌套3层if来处理，当然我也是这么干的。只要遍历一遍就可以了。\n\n在遍历到索引`i`时，有如下情况：\n\n1. 当前数字不和前面的组合，自己单独成一个新的\n   \n   索引`i`的种数 = 索引`i-1`的种数\n\n2. 当前数字与前一个相等，那么该数字的组合就有两种情况\n   \n   - 直接和前一个数字凑一起\n     \n     索引`i`的种数=索引`i-2`的种数\n   \n   - 索引`i`的数字和索引`i-2`的数字也相等，这也有2种情况\n     \n     - 把索引`i`,`i-1`,`i-2`都凑一起\n       \n       索引`i`的种数=索引`i-3`的种数\n     \n     - 索引`i`是7或者9，最多可以连续4个，把索引`i`,`i-1`,`i-2`,`i-3`都凑一起\n       \n       索引`i`的种数=索引`i-4`的种数\n\n同时，为了保证数据没有超过int的最大值，这里对于每一次的结果都对109+7取余\n\n## java代码：\n\n```java\nclass Solution {\n    public int countTexts(String pressedKeys) {\n        int[] cnts = new int[pressedKeys.length() + 1];\n        cnts[0] = 1;\n        cnts[1] = 1;\n        int mod = 1000000007;\n        for (int i = 1; i < pressedKeys.length(); i++) {\n            cnts[i + 1] = cnts[i];\n            if (pressdKeys.charAt(i) == pressedKeys.charAt(i - 1)) {\n                cnts[i + 1] += cnts[i - 1];\n                cnts[i + 1] %= mod;\n                if (i > 1 && pressedKeys.charAt(i) == pressedKeys.charAt(i - 2)) {\n                    cnts[i + 1] += cnts[i - 2];\n                    cnts[i + 1] %= mod;\n                    if (i > 2 && pressedKeys.charAt(i) == pressedKeys.charAt(i - 3) && (pressedKeys.charAt(i) == '7' || pressedKeys.charAt(i) == '\n                        cnts[i + 1] += cnts[i - 3];\n                        cnts[i + 1] %= mod;\n                    }\n                }\n            }\n        }\n        return cnts[pressedKeys.length()];\n    }\n}\n```\n\n# 第四题\n\n## 力扣原题链接：\n\n[2267. 检查是否有合法括号字符串路径](https://leetcode.cn/problems/check-if-there-is-a-valid-parentheses-string-path/)\n\n## 单个题解：\n\n[力扣2266. 统计打字方案数](https://site.huangge1199.cn/217.html)\n\n## 题解：\n\n从左上角到右下角，依次路过，下一个坐标一定是该坐标的右侧或者下侧的坐标，同时玩吗记录下路过到该坐标时未配对的’`'('`的个数，如果是负数则这条路不对旧不用继续下去了。然后一直到右下角的时候，如果个数为1，则满足条件\n\n## java代码：\n\n```java\nclass Solution {\n    public boolean hasValidPath(char[][] grid) {\n        xl = grid.length;\n        yl = grid[0].length;\n        use = new boolean[xl][yl][xl * yl];\n        if ((xl + yl) % 2 == 0 || grid[0][0] == ')' || grid[xl - 1][yl - \n            return false;\n        }\n        dfs(grid, 0, 0, 0);\n        return bl;\n    }\n    int xl;\n    int yl;\n    boolean bl = false;\n    boolean[][][] use;\n    private void dfs(char[][] grid, int x, int y, int cnt) {\n        if (x >= xl || y >= yl || cnt > xl - x + yl - y - 1) {\n            return;\n        }\n        if (x == xl - 1 && y == yl - 1) {\n            bl = cnt == 1;\n        }\n        if (use[x][y][cnt]) {\n            return;\n        }\n        use[x][y][cnt] = true;\n        cnt += grid[x][y] == '(' ? 1 : -1;\n        if (cnt < 0) {\n            return;\n        }\n        if (!bl) {\n            dfs(grid, x + 1, y, cnt);\n        }\n        if (!bl) {\n            dfs(grid, x, y + 1, cnt);\n        }\n    }\n}\n```\n","source":"_posts/weekly-contest-292.md","raw":"---\ntitle: 力扣周赛292题解\ndate: 2022-05-10 14:01:37\ntags: [力扣]\ncategories: [算法,力扣,周赛]\n---\n\n# 第一题\n\n## 力扣原题链接：\n\n[2264. 字符串中最大的 3 位相同数字](https://leetcode.cn/problems/largest-3-same-digit-number-in-string/)\n\n## 单个题解：\n\n[力扣2264. 字符串中最大的 3 位相同数字](https://site.huangge1199.cn/211.html)\n\n## 题解：\n\n这题是要找最大的3个相同数并且3个数是相连的，因为数字的话只有0~9这10个数字，找最大的，那我就从999开始，然后依次888、777。。。000，只要字符串中存在，那就是它了。\n\n## java代码：\n\n```java\npublic String largestGoodInteger(String num) {\n    String str;\n    for (int i = 9; i >= 0; i--) {\n        str = \"\" + i + i + i;\n        if (num.contains(str)) {\n            return str;\n        }\n    }\n    return \"\";\n}\n```\n\n# 第二题\n\n## 力扣原题链接：\n\n[6057. 统计值等于子树平均值的节点数](https://leetcode.cn/problems/count-nodes-equal-to-average-of-subtree/)\n\n## 单个题解：\n\n[力扣6057. 统计值等于子树平均值的节点数](https://site.huangge1199.cn/213.html)\n\n## 题解：\n\n这题的思路：\n\n- 先深度遍历树，统计出每个节点包含的节点数，并将其放入队列中\n\n- 再深度遍历一次树，这次计算出每个节点的元素和，并从队列中取到该节点的节点数，然后求平均值做判断\n\n## java代码：\n\n```java\nclass Solution {\n    public int averageOfSubtree(TreeNode root) {\n        counts(root);\n        sums(root);\n        return count;\n    }\n    Queue<Integer> queue = new LinkedList<>();\n    int count = 0;\n    private int counts(TreeNode root) {\n        if (root == null) {\n            return 0;\n        }\n        int cnt = counts(root.left) + counts(root.right) + 1;\n        queue.add(cnt);\n        return cnt;\n    }\n    private int sums(TreeNode root) {\n        if (root == null) {\n            return 0;\n        }\n        int sum = root.val;\n        sum += sums(root.left);\n        sum += sums(root.right);\n        if (sum / queue.poll() == root.val) {\n            count++;\n        }\n        return sum;\n    }\n}\n```\n\n# 第三题\n\n## 力扣原题链接：\n\n[2266. 统计打字方案数](https://leetcode.cn/problems/count-number-of-texts/)\n\n## 单个题解：\n\n[力扣2267. 检查是否有合法括号字符串路径](https://site.huangge1199.cn/215.html)\n\n## 题解：\n\n这题标的是中等题，个人觉得解题方法有点取巧，怎么取巧尼，因为重复的数最多4个，我完全可以嵌套3层if来处理，当然我也是这么干的。只要遍历一遍就可以了。\n\n在遍历到索引`i`时，有如下情况：\n\n1. 当前数字不和前面的组合，自己单独成一个新的\n   \n   索引`i`的种数 = 索引`i-1`的种数\n\n2. 当前数字与前一个相等，那么该数字的组合就有两种情况\n   \n   - 直接和前一个数字凑一起\n     \n     索引`i`的种数=索引`i-2`的种数\n   \n   - 索引`i`的数字和索引`i-2`的数字也相等，这也有2种情况\n     \n     - 把索引`i`,`i-1`,`i-2`都凑一起\n       \n       索引`i`的种数=索引`i-3`的种数\n     \n     - 索引`i`是7或者9，最多可以连续4个，把索引`i`,`i-1`,`i-2`,`i-3`都凑一起\n       \n       索引`i`的种数=索引`i-4`的种数\n\n同时，为了保证数据没有超过int的最大值，这里对于每一次的结果都对109+7取余\n\n## java代码：\n\n```java\nclass Solution {\n    public int countTexts(String pressedKeys) {\n        int[] cnts = new int[pressedKeys.length() + 1];\n        cnts[0] = 1;\n        cnts[1] = 1;\n        int mod = 1000000007;\n        for (int i = 1; i < pressedKeys.length(); i++) {\n            cnts[i + 1] = cnts[i];\n            if (pressdKeys.charAt(i) == pressedKeys.charAt(i - 1)) {\n                cnts[i + 1] += cnts[i - 1];\n                cnts[i + 1] %= mod;\n                if (i > 1 && pressedKeys.charAt(i) == pressedKeys.charAt(i - 2)) {\n                    cnts[i + 1] += cnts[i - 2];\n                    cnts[i + 1] %= mod;\n                    if (i > 2 && pressedKeys.charAt(i) == pressedKeys.charAt(i - 3) && (pressedKeys.charAt(i) == '7' || pressedKeys.charAt(i) == '\n                        cnts[i + 1] += cnts[i - 3];\n                        cnts[i + 1] %= mod;\n                    }\n                }\n            }\n        }\n        return cnts[pressedKeys.length()];\n    }\n}\n```\n\n# 第四题\n\n## 力扣原题链接：\n\n[2267. 检查是否有合法括号字符串路径](https://leetcode.cn/problems/check-if-there-is-a-valid-parentheses-string-path/)\n\n## 单个题解：\n\n[力扣2266. 统计打字方案数](https://site.huangge1199.cn/217.html)\n\n## 题解：\n\n从左上角到右下角，依次路过，下一个坐标一定是该坐标的右侧或者下侧的坐标，同时玩吗记录下路过到该坐标时未配对的’`'('`的个数，如果是负数则这条路不对旧不用继续下去了。然后一直到右下角的时候，如果个数为1，则满足条件\n\n## java代码：\n\n```java\nclass Solution {\n    public boolean hasValidPath(char[][] grid) {\n        xl = grid.length;\n        yl = grid[0].length;\n        use = new boolean[xl][yl][xl * yl];\n        if ((xl + yl) % 2 == 0 || grid[0][0] == ')' || grid[xl - 1][yl - \n            return false;\n        }\n        dfs(grid, 0, 0, 0);\n        return bl;\n    }\n    int xl;\n    int yl;\n    boolean bl = false;\n    boolean[][][] use;\n    private void dfs(char[][] grid, int x, int y, int cnt) {\n        if (x >= xl || y >= yl || cnt > xl - x + yl - y - 1) {\n            return;\n        }\n        if (x == xl - 1 && y == yl - 1) {\n            bl = cnt == 1;\n        }\n        if (use[x][y][cnt]) {\n            return;\n        }\n        use[x][y][cnt] = true;\n        cnt += grid[x][y] == '(' ? 1 : -1;\n        if (cnt < 0) {\n            return;\n        }\n        if (!bl) {\n            dfs(grid, x + 1, y, cnt);\n        }\n        if (!bl) {\n            dfs(grid, x, y + 1, cnt);\n        }\n    }\n}\n```\n","slug":"weekly-contest-292","published":1,"updated":"2022-06-03T06:00:55.613Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl42z5h8600733gn64eskf8ps","content":"<h1>第一题</h1>\n<h2 id=\"力扣原题链接：\">力扣原题链接：</h2>\n<p><a href=\"https://leetcode.cn/problems/largest-3-same-digit-number-in-string/\">2264. 字符串中最大的 3 位相同数字</a></p>\n<h2 id=\"单个题解：\">单个题解：</h2>\n<p><a href=\"https://site.huangge1199.cn/211.html\">力扣2264. 字符串中最大的 3 位相同数字</a></p>\n<h2 id=\"题解：\">题解：</h2>\n<p>这题是要找最大的3个相同数并且3个数是相连的，因为数字的话只有0~9这10个数字，找最大的，那我就从999开始，然后依次888、777。。。000，只要字符串中存在，那就是它了。</p>\n<h2 id=\"java代码：\">java代码：</h2>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">public String largestGoodInteger(String num) &#123;\n    String str;\n    for (int i &#x3D; 9; i &gt;&#x3D; 0; i--) &#123;\n        str &#x3D; &quot;&quot; + i + i + i;\n        if (num.contains(str)) &#123;\n            return str;\n        &#125;\n    &#125;\n    return &quot;&quot;;\n&#125;</code></pre>\n<h1>第二题</h1>\n<h2 id=\"力扣原题链接：-2\">力扣原题链接：</h2>\n<p><a href=\"https://leetcode.cn/problems/count-nodes-equal-to-average-of-subtree/\">6057. 统计值等于子树平均值的节点数</a></p>\n<h2 id=\"单个题解：-2\">单个题解：</h2>\n<p><a href=\"https://site.huangge1199.cn/213.html\">力扣6057. 统计值等于子树平均值的节点数</a></p>\n<h2 id=\"题解：-2\">题解：</h2>\n<p>这题的思路：</p>\n<ul>\n<li>\n<p>先深度遍历树，统计出每个节点包含的节点数，并将其放入队列中</p>\n</li>\n<li>\n<p>再深度遍历一次树，这次计算出每个节点的元素和，并从队列中取到该节点的节点数，然后求平均值做判断</p>\n</li>\n</ul>\n<h2 id=\"java代码：-2\">java代码：</h2>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">class Solution &#123;\n    public int averageOfSubtree(TreeNode root) &#123;\n        counts(root);\n        sums(root);\n        return count;\n    &#125;\n    Queue&lt;Integer&gt; queue &#x3D; new LinkedList&lt;&gt;();\n    int count &#x3D; 0;\n    private int counts(TreeNode root) &#123;\n        if (root &#x3D;&#x3D; null) &#123;\n            return 0;\n        &#125;\n        int cnt &#x3D; counts(root.left) + counts(root.right) + 1;\n        queue.add(cnt);\n        return cnt;\n    &#125;\n    private int sums(TreeNode root) &#123;\n        if (root &#x3D;&#x3D; null) &#123;\n            return 0;\n        &#125;\n        int sum &#x3D; root.val;\n        sum +&#x3D; sums(root.left);\n        sum +&#x3D; sums(root.right);\n        if (sum &#x2F; queue.poll() &#x3D;&#x3D; root.val) &#123;\n            count++;\n        &#125;\n        return sum;\n    &#125;\n&#125;</code></pre>\n<h1>第三题</h1>\n<h2 id=\"力扣原题链接：-3\">力扣原题链接：</h2>\n<p><a href=\"https://leetcode.cn/problems/count-number-of-texts/\">2266. 统计打字方案数</a></p>\n<h2 id=\"单个题解：-3\">单个题解：</h2>\n<p><a href=\"https://site.huangge1199.cn/215.html\">力扣2267. 检查是否有合法括号字符串路径</a></p>\n<h2 id=\"题解：-3\">题解：</h2>\n<p>这题标的是中等题，个人觉得解题方法有点取巧，怎么取巧尼，因为重复的数最多4个，我完全可以嵌套3层if来处理，当然我也是这么干的。只要遍历一遍就可以了。</p>\n<p>在遍历到索引<code>i</code>时，有如下情况：</p>\n<ol>\n<li>\n<p>当前数字不和前面的组合，自己单独成一个新的</p>\n<p>索引<code>i</code>的种数 = 索引<code>i-1</code>的种数</p>\n</li>\n<li>\n<p>当前数字与前一个相等，那么该数字的组合就有两种情况</p>\n<ul>\n<li>\n<p>直接和前一个数字凑一起</p>\n<p>索引<code>i</code>的种数=索引<code>i-2</code>的种数</p>\n</li>\n<li>\n<p>索引<code>i</code>的数字和索引<code>i-2</code>的数字也相等，这也有2种情况</p>\n<ul>\n<li>\n<p>把索引<code>i</code>,<code>i-1</code>,<code>i-2</code>都凑一起</p>\n<p>索引<code>i</code>的种数=索引<code>i-3</code>的种数</p>\n</li>\n<li>\n<p>索引<code>i</code>是7或者9，最多可以连续4个，把索引<code>i</code>,<code>i-1</code>,<code>i-2</code>,<code>i-3</code>都凑一起</p>\n<p>索引<code>i</code>的种数=索引<code>i-4</code>的种数</p>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n<p>同时，为了保证数据没有超过int的最大值，这里对于每一次的结果都对109+7取余</p>\n<h2 id=\"java代码：-3\">java代码：</h2>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">class Solution &#123;\n    public int countTexts(String pressedKeys) &#123;\n        int[] cnts &#x3D; new int[pressedKeys.length() + 1];\n        cnts[0] &#x3D; 1;\n        cnts[1] &#x3D; 1;\n        int mod &#x3D; 1000000007;\n        for (int i &#x3D; 1; i &lt; pressedKeys.length(); i++) &#123;\n            cnts[i + 1] &#x3D; cnts[i];\n            if (pressdKeys.charAt(i) &#x3D;&#x3D; pressedKeys.charAt(i - 1)) &#123;\n                cnts[i + 1] +&#x3D; cnts[i - 1];\n                cnts[i + 1] %&#x3D; mod;\n                if (i &gt; 1 &amp;&amp; pressedKeys.charAt(i) &#x3D;&#x3D; pressedKeys.charAt(i - 2)) &#123;\n                    cnts[i + 1] +&#x3D; cnts[i - 2];\n                    cnts[i + 1] %&#x3D; mod;\n                    if (i &gt; 2 &amp;&amp; pressedKeys.charAt(i) &#x3D;&#x3D; pressedKeys.charAt(i - 3) &amp;&amp; (pressedKeys.charAt(i) &#x3D;&#x3D; &#39;7&#39; || pressedKeys.charAt(i) &#x3D;&#x3D; &#39;\n                        cnts[i + 1] +&#x3D; cnts[i - 3];\n                        cnts[i + 1] %&#x3D; mod;\n                    &#125;\n                &#125;\n            &#125;\n        &#125;\n        return cnts[pressedKeys.length()];\n    &#125;\n&#125;</code></pre>\n<h1>第四题</h1>\n<h2 id=\"力扣原题链接：-4\">力扣原题链接：</h2>\n<p><a href=\"https://leetcode.cn/problems/check-if-there-is-a-valid-parentheses-string-path/\">2267. 检查是否有合法括号字符串路径</a></p>\n<h2 id=\"单个题解：-4\">单个题解：</h2>\n<p><a href=\"https://site.huangge1199.cn/217.html\">力扣2266. 统计打字方案数</a></p>\n<h2 id=\"题解：-4\">题解：</h2>\n<p>从左上角到右下角，依次路过，下一个坐标一定是该坐标的右侧或者下侧的坐标，同时玩吗记录下路过到该坐标时未配对的’<code>'('</code>的个数，如果是负数则这条路不对旧不用继续下去了。然后一直到右下角的时候，如果个数为1，则满足条件</p>\n<h2 id=\"java代码：-4\">java代码：</h2>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">class Solution &#123;\n    public boolean hasValidPath(char[][] grid) &#123;\n        xl &#x3D; grid.length;\n        yl &#x3D; grid[0].length;\n        use &#x3D; new boolean[xl][yl][xl * yl];\n        if ((xl + yl) % 2 &#x3D;&#x3D; 0 || grid[0][0] &#x3D;&#x3D; &#39;)&#39; || grid[xl - 1][yl - \n            return false;\n        &#125;\n        dfs(grid, 0, 0, 0);\n        return bl;\n    &#125;\n    int xl;\n    int yl;\n    boolean bl &#x3D; false;\n    boolean[][][] use;\n    private void dfs(char[][] grid, int x, int y, int cnt) &#123;\n        if (x &gt;&#x3D; xl || y &gt;&#x3D; yl || cnt &gt; xl - x + yl - y - 1) &#123;\n            return;\n        &#125;\n        if (x &#x3D;&#x3D; xl - 1 &amp;&amp; y &#x3D;&#x3D; yl - 1) &#123;\n            bl &#x3D; cnt &#x3D;&#x3D; 1;\n        &#125;\n        if (use[x][y][cnt]) &#123;\n            return;\n        &#125;\n        use[x][y][cnt] &#x3D; true;\n        cnt +&#x3D; grid[x][y] &#x3D;&#x3D; &#39;(&#39; ? 1 : -1;\n        if (cnt &lt; 0) &#123;\n            return;\n        &#125;\n        if (!bl) &#123;\n            dfs(grid, x + 1, y, cnt);\n        &#125;\n        if (!bl) &#123;\n            dfs(grid, x, y + 1, cnt);\n        &#125;\n    &#125;\n&#125;</code></pre>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"cover":"https://blog.huangge1199.cn/post/day20220119/bg.jpeg","excerpt":"","more":"<h1>第一题</h1>\n<h2 id=\"力扣原题链接：\">力扣原题链接：</h2>\n<p><a href=\"https://leetcode.cn/problems/largest-3-same-digit-number-in-string/\">2264. 字符串中最大的 3 位相同数字</a></p>\n<h2 id=\"单个题解：\">单个题解：</h2>\n<p><a href=\"https://site.huangge1199.cn/211.html\">力扣2264. 字符串中最大的 3 位相同数字</a></p>\n<h2 id=\"题解：\">题解：</h2>\n<p>这题是要找最大的3个相同数并且3个数是相连的，因为数字的话只有0~9这10个数字，找最大的，那我就从999开始，然后依次888、777。。。000，只要字符串中存在，那就是它了。</p>\n<h2 id=\"java代码：\">java代码：</h2>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">public String largestGoodInteger(String num) &#123;\n    String str;\n    for (int i &#x3D; 9; i &gt;&#x3D; 0; i--) &#123;\n        str &#x3D; &quot;&quot; + i + i + i;\n        if (num.contains(str)) &#123;\n            return str;\n        &#125;\n    &#125;\n    return &quot;&quot;;\n&#125;</code></pre>\n<h1>第二题</h1>\n<h2 id=\"力扣原题链接：-2\">力扣原题链接：</h2>\n<p><a href=\"https://leetcode.cn/problems/count-nodes-equal-to-average-of-subtree/\">6057. 统计值等于子树平均值的节点数</a></p>\n<h2 id=\"单个题解：-2\">单个题解：</h2>\n<p><a href=\"https://site.huangge1199.cn/213.html\">力扣6057. 统计值等于子树平均值的节点数</a></p>\n<h2 id=\"题解：-2\">题解：</h2>\n<p>这题的思路：</p>\n<ul>\n<li>\n<p>先深度遍历树，统计出每个节点包含的节点数，并将其放入队列中</p>\n</li>\n<li>\n<p>再深度遍历一次树，这次计算出每个节点的元素和，并从队列中取到该节点的节点数，然后求平均值做判断</p>\n</li>\n</ul>\n<h2 id=\"java代码：-2\">java代码：</h2>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">class Solution &#123;\n    public int averageOfSubtree(TreeNode root) &#123;\n        counts(root);\n        sums(root);\n        return count;\n    &#125;\n    Queue&lt;Integer&gt; queue &#x3D; new LinkedList&lt;&gt;();\n    int count &#x3D; 0;\n    private int counts(TreeNode root) &#123;\n        if (root &#x3D;&#x3D; null) &#123;\n            return 0;\n        &#125;\n        int cnt &#x3D; counts(root.left) + counts(root.right) + 1;\n        queue.add(cnt);\n        return cnt;\n    &#125;\n    private int sums(TreeNode root) &#123;\n        if (root &#x3D;&#x3D; null) &#123;\n            return 0;\n        &#125;\n        int sum &#x3D; root.val;\n        sum +&#x3D; sums(root.left);\n        sum +&#x3D; sums(root.right);\n        if (sum &#x2F; queue.poll() &#x3D;&#x3D; root.val) &#123;\n            count++;\n        &#125;\n        return sum;\n    &#125;\n&#125;</code></pre>\n<h1>第三题</h1>\n<h2 id=\"力扣原题链接：-3\">力扣原题链接：</h2>\n<p><a href=\"https://leetcode.cn/problems/count-number-of-texts/\">2266. 统计打字方案数</a></p>\n<h2 id=\"单个题解：-3\">单个题解：</h2>\n<p><a href=\"https://site.huangge1199.cn/215.html\">力扣2267. 检查是否有合法括号字符串路径</a></p>\n<h2 id=\"题解：-3\">题解：</h2>\n<p>这题标的是中等题，个人觉得解题方法有点取巧，怎么取巧尼，因为重复的数最多4个，我完全可以嵌套3层if来处理，当然我也是这么干的。只要遍历一遍就可以了。</p>\n<p>在遍历到索引<code>i</code>时，有如下情况：</p>\n<ol>\n<li>\n<p>当前数字不和前面的组合，自己单独成一个新的</p>\n<p>索引<code>i</code>的种数 = 索引<code>i-1</code>的种数</p>\n</li>\n<li>\n<p>当前数字与前一个相等，那么该数字的组合就有两种情况</p>\n<ul>\n<li>\n<p>直接和前一个数字凑一起</p>\n<p>索引<code>i</code>的种数=索引<code>i-2</code>的种数</p>\n</li>\n<li>\n<p>索引<code>i</code>的数字和索引<code>i-2</code>的数字也相等，这也有2种情况</p>\n<ul>\n<li>\n<p>把索引<code>i</code>,<code>i-1</code>,<code>i-2</code>都凑一起</p>\n<p>索引<code>i</code>的种数=索引<code>i-3</code>的种数</p>\n</li>\n<li>\n<p>索引<code>i</code>是7或者9，最多可以连续4个，把索引<code>i</code>,<code>i-1</code>,<code>i-2</code>,<code>i-3</code>都凑一起</p>\n<p>索引<code>i</code>的种数=索引<code>i-4</code>的种数</p>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n<p>同时，为了保证数据没有超过int的最大值，这里对于每一次的结果都对109+7取余</p>\n<h2 id=\"java代码：-3\">java代码：</h2>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">class Solution &#123;\n    public int countTexts(String pressedKeys) &#123;\n        int[] cnts &#x3D; new int[pressedKeys.length() + 1];\n        cnts[0] &#x3D; 1;\n        cnts[1] &#x3D; 1;\n        int mod &#x3D; 1000000007;\n        for (int i &#x3D; 1; i &lt; pressedKeys.length(); i++) &#123;\n            cnts[i + 1] &#x3D; cnts[i];\n            if (pressdKeys.charAt(i) &#x3D;&#x3D; pressedKeys.charAt(i - 1)) &#123;\n                cnts[i + 1] +&#x3D; cnts[i - 1];\n                cnts[i + 1] %&#x3D; mod;\n                if (i &gt; 1 &amp;&amp; pressedKeys.charAt(i) &#x3D;&#x3D; pressedKeys.charAt(i - 2)) &#123;\n                    cnts[i + 1] +&#x3D; cnts[i - 2];\n                    cnts[i + 1] %&#x3D; mod;\n                    if (i &gt; 2 &amp;&amp; pressedKeys.charAt(i) &#x3D;&#x3D; pressedKeys.charAt(i - 3) &amp;&amp; (pressedKeys.charAt(i) &#x3D;&#x3D; &#39;7&#39; || pressedKeys.charAt(i) &#x3D;&#x3D; &#39;\n                        cnts[i + 1] +&#x3D; cnts[i - 3];\n                        cnts[i + 1] %&#x3D; mod;\n                    &#125;\n                &#125;\n            &#125;\n        &#125;\n        return cnts[pressedKeys.length()];\n    &#125;\n&#125;</code></pre>\n<h1>第四题</h1>\n<h2 id=\"力扣原题链接：-4\">力扣原题链接：</h2>\n<p><a href=\"https://leetcode.cn/problems/check-if-there-is-a-valid-parentheses-string-path/\">2267. 检查是否有合法括号字符串路径</a></p>\n<h2 id=\"单个题解：-4\">单个题解：</h2>\n<p><a href=\"https://site.huangge1199.cn/217.html\">力扣2266. 统计打字方案数</a></p>\n<h2 id=\"题解：-4\">题解：</h2>\n<p>从左上角到右下角，依次路过，下一个坐标一定是该坐标的右侧或者下侧的坐标，同时玩吗记录下路过到该坐标时未配对的’<code>'('</code>的个数，如果是负数则这条路不对旧不用继续下去了。然后一直到右下角的时候，如果个数为1，则满足条件</p>\n<h2 id=\"java代码：-4\">java代码：</h2>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">class Solution &#123;\n    public boolean hasValidPath(char[][] grid) &#123;\n        xl &#x3D; grid.length;\n        yl &#x3D; grid[0].length;\n        use &#x3D; new boolean[xl][yl][xl * yl];\n        if ((xl + yl) % 2 &#x3D;&#x3D; 0 || grid[0][0] &#x3D;&#x3D; &#39;)&#39; || grid[xl - 1][yl - \n            return false;\n        &#125;\n        dfs(grid, 0, 0, 0);\n        return bl;\n    &#125;\n    int xl;\n    int yl;\n    boolean bl &#x3D; false;\n    boolean[][][] use;\n    private void dfs(char[][] grid, int x, int y, int cnt) &#123;\n        if (x &gt;&#x3D; xl || y &gt;&#x3D; yl || cnt &gt; xl - x + yl - y - 1) &#123;\n            return;\n        &#125;\n        if (x &#x3D;&#x3D; xl - 1 &amp;&amp; y &#x3D;&#x3D; yl - 1) &#123;\n            bl &#x3D; cnt &#x3D;&#x3D; 1;\n        &#125;\n        if (use[x][y][cnt]) &#123;\n            return;\n        &#125;\n        use[x][y][cnt] &#x3D; true;\n        cnt +&#x3D; grid[x][y] &#x3D;&#x3D; &#39;(&#39; ? 1 : -1;\n        if (cnt &lt; 0) &#123;\n            return;\n        &#125;\n        if (!bl) &#123;\n            dfs(grid, x + 1, y, cnt);\n        &#125;\n        if (!bl) &#123;\n            dfs(grid, x, y + 1, cnt);\n        &#125;\n    &#125;\n&#125;</code></pre>\n"},{"title":"力扣周赛293题解","date":"2022-05-19T06:52:09.000Z","_content":"\n# 第一题\n\n## 力扣原题链接：\n\n[2273. 移除字母异位词后的结果数组](https://site.huangge1199.cn/?golink=aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9maW5kLXJlc3VsdGFudC1hcnJheS1hZnRlci1yZW1vdmluZy1hbmFncmFtcy8=)\n\n## 单个题解：\n\n[力扣2273. 移除字母异位词后的结果数组](https://site.huangge1199.cn/284.html)\n\n## 题目：\n\n<p>给你一个下标从 <strong>0</strong> 开始的字符串 <code>words</code> ，其中 <code>words[i]</code> 由小写英文字符组成。</p>\n\n<p>在一步操作中，需要选出任一下标 <code>i</code> ，从 <code>words</code> 中 <strong>删除</strong> <code>words[i]</code> 。其中下标 <code>i</code> 需要同时满足下述两个条件：</p>\n\n<ol>    \n   <li><code>0 < i < words.length</code></li>    \n   <li><code>words[i - 1]</code> 和 <code>words[i]</code> 是 <strong>字母异位词</strong> 。</li>    \n</ol>\n\n<p>只要可以选出满足条件的下标，就一直执行这个操作。</p>\n\n<p>在执行所有操作后，返回 <code>words</code> 。可以证明，按任意顺序为每步操作选择下标都会得到相同的结果。</p>\n\n<p><strong>字母异位词</strong> 是由重新排列源单词的字母得到的一个新单词，所有源单词中的字母通常恰好只用一次。例如，<code>\"dacb\"</code> 是 <code>\"abdc\"</code> 的一个字母异位词。</p>\n\n<p> </p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入：</strong>words = [\"abba\",\"baba\",\"bbaa\",\"cd\",\"cd\"]    \n<strong>输出：</strong>[\"abba\",\"cd\"]    \n<strong>解释：</strong>    \n获取结果数组的方法之一是执行下述步骤：  - 由于 words[2] = \"bbaa\" 和 words[1] = \"baba\" 是字母异位词，选择下标 2 并删除 words[2] 。    \n  现在 words = [\"abba\",\"baba\",\"cd\",\"cd\"] 。  - 由于 words[1] = \"baba\" 和 words[0] = \"abba\" 是字母异位词，选择下标 1 并删除 words[1] 。    \n  现在 words = [\"abba\",\"cd\",\"cd\"] 。  - 由于 words[2] = \"cd\" 和 words[1] = \"cd\" 是字母异位词，选择下标 2 并删除 words[2] 。    \n  现在 words = [\"abba\",\"cd\"] 。  无法再执行任何操作，所以 [\"abba\",\"cd\"] 是最终答案。</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入：</strong>words = [\"a\",\"b\",\"c\",\"d\",\"e\"]    \n<strong>输出：</strong>[\"a\",\"b\",\"c\",\"d\",\"e\"]    \n<strong>解释：</strong>    \nwords 中不存在互为字母异位词的两个相邻字符串，所以无需执行任何操作。</pre>\n\n<p> </p>\n\n<p><strong>提示：</strong></p>\n\n<ul>    \n   <li><code>1 <= words.length <= 100</code></li>    \n   <li><code>1 <= words[i].length <= 10</code></li>    \n   <li><code>words[i]</code> 由小写英文字母组成</li>    \n</ul>    \n<div><div>Related Topics</div><div><li>数组</li><li>哈希表</li><li>字符串</li><li>排序</li></div></div>\n\n## 思路：\n\n遍历字符串数组，分别将每一个字符串装换成字符数组，字符数组排序，如果排序后转成的字符串一样，则说明是字母异位词  \n\n## 代码：\n\njava：  \n\n```java\nclass Solution {\n    public List<String> removeAnagrams(String[] words) {\n        char[] strs = words[0].toCharArray();\n        Arrays.sort(strs);\n        List<String> list = new ArrayList<>();\n        int index = 0;\n        for (int i = 1; i < words.length; i++) {\n            char[] strs1 = words[i].toCharArray();\n            Arrays.sort(strs1);\n            if (!String.valueOf(strs).equals(String.valueOf(strs1))) {\n                list.add(words[index]);\n                strs = strs1;\n                index = i;\n            }\n        }\n        list.add(words[index]);\n        return list;\n    }\n}\n```\n\n# 第二题\n\n## 力扣原题链接：\n\n[2274. 不含特殊楼层的最大连续楼层数](https://leetcode.cn/problems/maximum-consecutive-floors-without-special-floors/)\n\n## 单个题解：\n\n[力扣2274. 不含特殊楼层的最大连续楼层数](https://site.huangge1199.cn/288.html)\n\n## 题目：\n\n<p>Alice 管理着一家公司，并租用大楼的部分楼层作为办公空间。Alice 决定将一些楼层作为 <strong>特殊楼层</strong> ，仅用于放松。</p>\n\n<p>给你两个整数 <code>bottom</code> 和 <code>top</code> ，表示 Alice 租用了从 <code>bottom</code> 到 <code>top</code>（含 <code>bottom</code> 和 <code>top</code> 在内）的所有楼层。另给你一个整数数组 <code>special</code> ，其中 <code>special[i]</code> 表示  Alice 指定用于放松的特殊楼层。</p>\n\n<p>返回不含特殊楼层的 <strong>最大</strong> 连续楼层数。</p>\n\n<p> </p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>  \n<strong>输入：</strong>bottom = 2, top = 9, special = [4,6]  \n<strong>输出：</strong>3  \n<strong>解释：</strong>下面列出的是不含特殊楼层的连续楼层范围：  \n- (2, 3) ，楼层数为 2 。  \n- (5, 5) ，楼层数为 1 。  \n- (7, 9) ，楼层数为 3 。  \n因此，返回最大连续楼层数 3 。  \n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>  \n<strong>输入：</strong>bottom = 6, top = 8, special = [7,6,8]  \n<strong>输出：</strong>0  \n<strong>解释：</strong>每层楼都被规划为特殊楼层，所以返回 0 。  \n</pre>\n\n<p> </p>\n\n<p><strong>提示</strong></p>\n\n<ul>  \n   <li><code>1 <= special.length <= 10<sup>5</sup></code></li>  \n   <li><code>1 <= bottom <= special[i] <= top <= 10<sup>9</sup></code></li>  \n   <li><code>special</code> 中的所有值 <strong>互不相同</strong></li>  \n</ul>  \n<div><div>Related Topics</div><div><li>数组</li><li>排序</li></div></div>\n\n## 思路：\n\n这题相当于在bottom到top的范围内，被special的数分割了，我们需要找到分割后最长的一段\n\n步骤：\n\n1. 为了保证数据的顺序进行，对special进行排序\n2. 遍历`special`对`bottom~top`进行分割，当`bottom<=special[i]`时，  \n   连续楼层数为`special[i]-bottom`，与之前的最大连续层数对比，得到当前的最大连续层数，  \n   同时更新`bottom = special[i] + 1`\n3. 遍历完，还有最后一段的连续层数`top - special[special.length - 1]`\n4. 至此，不包含特殊层的最大的连续层数就出来了\n\n## 代码：\n\njava：\n\n```java\nclass Solution {\n    public int maxConsecutive(int bottom, int top, int[] special) {\n        Arrays.sort(special);\n        int max = 0;\n        for (int j : special) {\n            if (bottom <= j) {\n                max = Math.max(max, j - bottom);\n                bottom = j + 1;\n            }\n        }\n        max = Math.max(max, top - special[special.length - 1]);\n        return max;\n    }\n}\n```\n\n# 第三题\n\n## 力扣原题链接：\n\n[2275. 按位与结果大于零的最长组合](https://leetcode.cn/problems/largest-combination-with-bitwise-and-greater-than-zero/)\n\n## 单个题解：\n\n[力扣2275. 按位与结果大于零的最长组合](https://site.huangge1199.cn/286.html)\n\n## 题目：\n\n<p>对数组 <code>nums</code> 执行 <strong>按位与</strong> 相当于对数组 <code>nums</code> 中的所有整数执行 <strong>按位与</strong> 。</p>\n\n<ul>  \n   <li>例如，对 <code>nums = [1, 5, 3]</code> 来说，按位与等于 <code>1 & 5 & 3 = 1</code> 。</li>  \n   <li>同样，对 <code>nums = [7]</code> 而言，按位与等于 <code>7</code> 。</li>  \n</ul>\n\n<p>给你一个正整数数组 <code>candidates</code> 。计算 <code>candidates</code> 中的数字每种组合下 <strong>按位与</strong> 的结果。 <code>candidates</code> 中的每个数字在每种组合中只能使用 <strong>一次</strong> 。</p>\n\n<p>返回按位与结果大于 <code>0</code> 的 <strong>最长</strong> 组合的长度<em>。</em></p>\n\n<p> </p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>  \n<strong>输入：</strong>candidates = [16,17,71,62,12,24,14]  \n<strong>输出：</strong>4  \n<strong>解释：</strong>组合 [16,17,62,24] 的按位与结果是 16 & 17 & 62 & 24 = 16 > 0 。  \n组合长度是 4 。  \n可以证明不存在按位与结果大于 0 且长度大于 4 的组合。  \n注意，符合长度最大的组合可能不止一种。  \n例如，组合 [62,12,24,14] 的按位与结果是 62 & 12 & 24 & 14 = 8 > 0 。  \n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>  \n<strong>输入：</strong>candidates = [8,8]  \n<strong>输出：</strong>2  \n<strong>解释：</strong>最长组合是 [8,8] ，按位与结果 8 & 8 = 8 > 0 。  \n组合长度是 2 ，所以返回 2 。  \n</pre>\n\n<p> </p>\n\n<p><strong>提示：</strong></p>\n\n<ul>  \n   <li><code>1 <= candidates.length <= 10<sup>5</sup></code></li>  \n   <li><code>1 <= candidates[i] <= 10<sup>7</sup></code></li>  \n</ul>  \n<div><div>Related Topics</div><div><li>位运算</li><li>数组</li><li>哈希表</li><li>计数</li></div></div>\n\n## 思路：\n\n这题需要找出按位与结果大于0的最长组合的长度，按位与结果大于0，  \n说明这个数组中的每一个二进制数都有相同的一位是1，根据这题给的数组值的范围，  \n可以确定最多有24位，那么我们可以循环24次数组，每一次循环统计出第`i`位位数为1的个数，  \n然后将每一次的个数做比较，得出最长组合的长度\n\n## 代码：\n\njava：\n\n```java\nclass Solution {\n    public int largestCombination(int[] candidates) {\n        int max = 0;\n        for (int i = 0; i < 25; i++) {\n            int cnt = 0;\n            for (int j = 0; j < candidates.length; j++) {\n                if ((candidates[j] & (1 << i)) > 0) {\n                    cnt++;\n                }\n            }\n            max = Math.max(max, cnt);\n        }\n        return max;\n    }\n}\n```\n\n# 第四题\n\n## 力扣原题链接：\n\n[2276. 统计区间中的整数数目](https://leetcode.cn/problems/count-integers-in-intervals/)\n\n## 单个题解：\n\n[力扣2276. 统计区间中的整数数目](https://site.huangge1199.cn/282.html)\n\n## 题目：\n\n<p>给你区间的 <strong>空</strong> 集，请你设计并实现满足要求的数据结构：</p>\n\n<ul>  \n   <li><strong>新增：</strong>添加一个区间到这个区间集合中。</li>  \n   <li><strong>统计：</strong>计算出现在 <strong>至少一个</strong> 区间中的整数个数。</li>  \n</ul>\n\n<p>实现 <code>CountIntervals</code> 类：</p>\n\n<ul>  \n   <li><code>CountIntervals()</code> 使用区间的空集初始化对象</li>  \n   <li><code>void add(int left, int right)</code> 添加区间 <code>[left, right]</code> 到区间集合之中。</li>  \n   <li><code>int count()</code> 返回出现在 <strong>至少一个</strong> 区间中的整数个数。</li>  \n</ul>\n\n<p><strong>注意：</strong>区间 <code>[left, right]</code> 表示满足 <code>left <= x <= right</code> 的所有整数 <code>x</code> 。</p>\n\n<p> </p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>  \n<strong>输入</strong>  \n[\"CountIntervals\", \"add\", \"add\", \"count\", \"add\", \"count\"]  \n[[], [2, 3], [7, 10], [], [5, 8], []]  \n<strong>输出</strong>  \n[null, null, null, 6, null, 8]  \n\n<strong>解释</strong>  \nCountIntervals countIntervals = new CountIntervals(); // 用一个区间空集初始化对象  \ncountIntervals.add(2, 3);  // 将 [2, 3] 添加到区间集合中  \ncountIntervals.add(7, 10); // 将 [7, 10] 添加到区间集合中  \ncountIntervals.count();    // 返回 6  \n                           // 整数 2 和 3 出现在区间 [2, 3] 中  \n                           // 整数 7、8、9、10 出现在区间 [7, 10] 中  \ncountIntervals.add(5, 8);  // 将 [5, 8] 添加到区间集合中  \ncountIntervals.count();    // 返回 8  \n                           // 整数 2 和 3 出现在区间 [2, 3] 中  \n                           // 整数 5 和 6 出现在区间 [5, 8] 中  \n                           // 整数 7 和 8 出现在区间 [5, 8] 和区间 [7, 10] 中  \n                           // 整数 9 和 10 出现在区间 [7, 10] 中</pre>\n\n<p> </p>\n\n<p><strong>提示：</strong></p>\n\n<ul>  \n   <li><code>1 <= left <= right <= 10<sup>9</sup></code></li>  \n   <li>最多调用  <code>add</code> 和 <code>count</code> 方法 <strong>总计</strong> <code>10<sup>5</sup></code> 次</li>  \n   <li>调用 <code>count</code> 方法至少一次</li>  \n</ul>\n\n## 思路：\n\n这题我的思路是添加一次整理一次并同时计数，利用java的TreeSet结构，可以快速的定位数据。  \n典型的模板题  \n\n## 代码：\n\njava：  \n\n```java\nclass CountIntervals {\n    TreeSet<Interval> ranges;\n    int cnt;\n    public CountIntervals() {\n        ranges = new TreeSet();\n        cnt = 0;\n    }\n    public void add(int left, int right) {\n        Iterator<Interval> itr = ranges.tailSet(new Interval(0, left - 1)).iterator();\n        while (itr.hasNext()) {\n            Interval iv = itr.next();\n            if (right < iv.left) {\n                break;\n            }\n            left = Math.min(left, iv.left);\n            right = Math.max(right, iv.right);\n            cnt -= iv.right - iv.left + 1;\n            itr.remove();\n        }\n        ranges.add(new Interval(left, right));\n        cnt += right - left + 1;\n    }\n    public int count() {\n        return cnt;\n    }\n}\npublic class Interval implements Comparable<Interval> {\n    int left;\n    int right;\n    public Interval(int left, int right) {\n        this.left = left;\n        this.right = right;\n    }\n    public int compareTo(Interval that) {\n        if (this.right == that.right) return this.left - that.left;\n        return this.right - that.right;\n    }\n}\n```\n","source":"_posts/weekly-contest-293.md","raw":"---\ntitle: 力扣周赛293题解\ndate: 2022-05-19 14:52:09\ntags: [力扣]\ncategories: [算法,力扣,周赛]\n\n---\n\n# 第一题\n\n## 力扣原题链接：\n\n[2273. 移除字母异位词后的结果数组](https://site.huangge1199.cn/?golink=aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9maW5kLXJlc3VsdGFudC1hcnJheS1hZnRlci1yZW1vdmluZy1hbmFncmFtcy8=)\n\n## 单个题解：\n\n[力扣2273. 移除字母异位词后的结果数组](https://site.huangge1199.cn/284.html)\n\n## 题目：\n\n<p>给你一个下标从 <strong>0</strong> 开始的字符串 <code>words</code> ，其中 <code>words[i]</code> 由小写英文字符组成。</p>\n\n<p>在一步操作中，需要选出任一下标 <code>i</code> ，从 <code>words</code> 中 <strong>删除</strong> <code>words[i]</code> 。其中下标 <code>i</code> 需要同时满足下述两个条件：</p>\n\n<ol>    \n   <li><code>0 < i < words.length</code></li>    \n   <li><code>words[i - 1]</code> 和 <code>words[i]</code> 是 <strong>字母异位词</strong> 。</li>    \n</ol>\n\n<p>只要可以选出满足条件的下标，就一直执行这个操作。</p>\n\n<p>在执行所有操作后，返回 <code>words</code> 。可以证明，按任意顺序为每步操作选择下标都会得到相同的结果。</p>\n\n<p><strong>字母异位词</strong> 是由重新排列源单词的字母得到的一个新单词，所有源单词中的字母通常恰好只用一次。例如，<code>\"dacb\"</code> 是 <code>\"abdc\"</code> 的一个字母异位词。</p>\n\n<p> </p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入：</strong>words = [\"abba\",\"baba\",\"bbaa\",\"cd\",\"cd\"]    \n<strong>输出：</strong>[\"abba\",\"cd\"]    \n<strong>解释：</strong>    \n获取结果数组的方法之一是执行下述步骤：  - 由于 words[2] = \"bbaa\" 和 words[1] = \"baba\" 是字母异位词，选择下标 2 并删除 words[2] 。    \n  现在 words = [\"abba\",\"baba\",\"cd\",\"cd\"] 。  - 由于 words[1] = \"baba\" 和 words[0] = \"abba\" 是字母异位词，选择下标 1 并删除 words[1] 。    \n  现在 words = [\"abba\",\"cd\",\"cd\"] 。  - 由于 words[2] = \"cd\" 和 words[1] = \"cd\" 是字母异位词，选择下标 2 并删除 words[2] 。    \n  现在 words = [\"abba\",\"cd\"] 。  无法再执行任何操作，所以 [\"abba\",\"cd\"] 是最终答案。</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入：</strong>words = [\"a\",\"b\",\"c\",\"d\",\"e\"]    \n<strong>输出：</strong>[\"a\",\"b\",\"c\",\"d\",\"e\"]    \n<strong>解释：</strong>    \nwords 中不存在互为字母异位词的两个相邻字符串，所以无需执行任何操作。</pre>\n\n<p> </p>\n\n<p><strong>提示：</strong></p>\n\n<ul>    \n   <li><code>1 <= words.length <= 100</code></li>    \n   <li><code>1 <= words[i].length <= 10</code></li>    \n   <li><code>words[i]</code> 由小写英文字母组成</li>    \n</ul>    \n<div><div>Related Topics</div><div><li>数组</li><li>哈希表</li><li>字符串</li><li>排序</li></div></div>\n\n## 思路：\n\n遍历字符串数组，分别将每一个字符串装换成字符数组，字符数组排序，如果排序后转成的字符串一样，则说明是字母异位词  \n\n## 代码：\n\njava：  \n\n```java\nclass Solution {\n    public List<String> removeAnagrams(String[] words) {\n        char[] strs = words[0].toCharArray();\n        Arrays.sort(strs);\n        List<String> list = new ArrayList<>();\n        int index = 0;\n        for (int i = 1; i < words.length; i++) {\n            char[] strs1 = words[i].toCharArray();\n            Arrays.sort(strs1);\n            if (!String.valueOf(strs).equals(String.valueOf(strs1))) {\n                list.add(words[index]);\n                strs = strs1;\n                index = i;\n            }\n        }\n        list.add(words[index]);\n        return list;\n    }\n}\n```\n\n# 第二题\n\n## 力扣原题链接：\n\n[2274. 不含特殊楼层的最大连续楼层数](https://leetcode.cn/problems/maximum-consecutive-floors-without-special-floors/)\n\n## 单个题解：\n\n[力扣2274. 不含特殊楼层的最大连续楼层数](https://site.huangge1199.cn/288.html)\n\n## 题目：\n\n<p>Alice 管理着一家公司，并租用大楼的部分楼层作为办公空间。Alice 决定将一些楼层作为 <strong>特殊楼层</strong> ，仅用于放松。</p>\n\n<p>给你两个整数 <code>bottom</code> 和 <code>top</code> ，表示 Alice 租用了从 <code>bottom</code> 到 <code>top</code>（含 <code>bottom</code> 和 <code>top</code> 在内）的所有楼层。另给你一个整数数组 <code>special</code> ，其中 <code>special[i]</code> 表示  Alice 指定用于放松的特殊楼层。</p>\n\n<p>返回不含特殊楼层的 <strong>最大</strong> 连续楼层数。</p>\n\n<p> </p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>  \n<strong>输入：</strong>bottom = 2, top = 9, special = [4,6]  \n<strong>输出：</strong>3  \n<strong>解释：</strong>下面列出的是不含特殊楼层的连续楼层范围：  \n- (2, 3) ，楼层数为 2 。  \n- (5, 5) ，楼层数为 1 。  \n- (7, 9) ，楼层数为 3 。  \n因此，返回最大连续楼层数 3 。  \n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>  \n<strong>输入：</strong>bottom = 6, top = 8, special = [7,6,8]  \n<strong>输出：</strong>0  \n<strong>解释：</strong>每层楼都被规划为特殊楼层，所以返回 0 。  \n</pre>\n\n<p> </p>\n\n<p><strong>提示</strong></p>\n\n<ul>  \n   <li><code>1 <= special.length <= 10<sup>5</sup></code></li>  \n   <li><code>1 <= bottom <= special[i] <= top <= 10<sup>9</sup></code></li>  \n   <li><code>special</code> 中的所有值 <strong>互不相同</strong></li>  \n</ul>  \n<div><div>Related Topics</div><div><li>数组</li><li>排序</li></div></div>\n\n## 思路：\n\n这题相当于在bottom到top的范围内，被special的数分割了，我们需要找到分割后最长的一段\n\n步骤：\n\n1. 为了保证数据的顺序进行，对special进行排序\n2. 遍历`special`对`bottom~top`进行分割，当`bottom<=special[i]`时，  \n   连续楼层数为`special[i]-bottom`，与之前的最大连续层数对比，得到当前的最大连续层数，  \n   同时更新`bottom = special[i] + 1`\n3. 遍历完，还有最后一段的连续层数`top - special[special.length - 1]`\n4. 至此，不包含特殊层的最大的连续层数就出来了\n\n## 代码：\n\njava：\n\n```java\nclass Solution {\n    public int maxConsecutive(int bottom, int top, int[] special) {\n        Arrays.sort(special);\n        int max = 0;\n        for (int j : special) {\n            if (bottom <= j) {\n                max = Math.max(max, j - bottom);\n                bottom = j + 1;\n            }\n        }\n        max = Math.max(max, top - special[special.length - 1]);\n        return max;\n    }\n}\n```\n\n# 第三题\n\n## 力扣原题链接：\n\n[2275. 按位与结果大于零的最长组合](https://leetcode.cn/problems/largest-combination-with-bitwise-and-greater-than-zero/)\n\n## 单个题解：\n\n[力扣2275. 按位与结果大于零的最长组合](https://site.huangge1199.cn/286.html)\n\n## 题目：\n\n<p>对数组 <code>nums</code> 执行 <strong>按位与</strong> 相当于对数组 <code>nums</code> 中的所有整数执行 <strong>按位与</strong> 。</p>\n\n<ul>  \n   <li>例如，对 <code>nums = [1, 5, 3]</code> 来说，按位与等于 <code>1 & 5 & 3 = 1</code> 。</li>  \n   <li>同样，对 <code>nums = [7]</code> 而言，按位与等于 <code>7</code> 。</li>  \n</ul>\n\n<p>给你一个正整数数组 <code>candidates</code> 。计算 <code>candidates</code> 中的数字每种组合下 <strong>按位与</strong> 的结果。 <code>candidates</code> 中的每个数字在每种组合中只能使用 <strong>一次</strong> 。</p>\n\n<p>返回按位与结果大于 <code>0</code> 的 <strong>最长</strong> 组合的长度<em>。</em></p>\n\n<p> </p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>  \n<strong>输入：</strong>candidates = [16,17,71,62,12,24,14]  \n<strong>输出：</strong>4  \n<strong>解释：</strong>组合 [16,17,62,24] 的按位与结果是 16 & 17 & 62 & 24 = 16 > 0 。  \n组合长度是 4 。  \n可以证明不存在按位与结果大于 0 且长度大于 4 的组合。  \n注意，符合长度最大的组合可能不止一种。  \n例如，组合 [62,12,24,14] 的按位与结果是 62 & 12 & 24 & 14 = 8 > 0 。  \n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>  \n<strong>输入：</strong>candidates = [8,8]  \n<strong>输出：</strong>2  \n<strong>解释：</strong>最长组合是 [8,8] ，按位与结果 8 & 8 = 8 > 0 。  \n组合长度是 2 ，所以返回 2 。  \n</pre>\n\n<p> </p>\n\n<p><strong>提示：</strong></p>\n\n<ul>  \n   <li><code>1 <= candidates.length <= 10<sup>5</sup></code></li>  \n   <li><code>1 <= candidates[i] <= 10<sup>7</sup></code></li>  \n</ul>  \n<div><div>Related Topics</div><div><li>位运算</li><li>数组</li><li>哈希表</li><li>计数</li></div></div>\n\n## 思路：\n\n这题需要找出按位与结果大于0的最长组合的长度，按位与结果大于0，  \n说明这个数组中的每一个二进制数都有相同的一位是1，根据这题给的数组值的范围，  \n可以确定最多有24位，那么我们可以循环24次数组，每一次循环统计出第`i`位位数为1的个数，  \n然后将每一次的个数做比较，得出最长组合的长度\n\n## 代码：\n\njava：\n\n```java\nclass Solution {\n    public int largestCombination(int[] candidates) {\n        int max = 0;\n        for (int i = 0; i < 25; i++) {\n            int cnt = 0;\n            for (int j = 0; j < candidates.length; j++) {\n                if ((candidates[j] & (1 << i)) > 0) {\n                    cnt++;\n                }\n            }\n            max = Math.max(max, cnt);\n        }\n        return max;\n    }\n}\n```\n\n# 第四题\n\n## 力扣原题链接：\n\n[2276. 统计区间中的整数数目](https://leetcode.cn/problems/count-integers-in-intervals/)\n\n## 单个题解：\n\n[力扣2276. 统计区间中的整数数目](https://site.huangge1199.cn/282.html)\n\n## 题目：\n\n<p>给你区间的 <strong>空</strong> 集，请你设计并实现满足要求的数据结构：</p>\n\n<ul>  \n   <li><strong>新增：</strong>添加一个区间到这个区间集合中。</li>  \n   <li><strong>统计：</strong>计算出现在 <strong>至少一个</strong> 区间中的整数个数。</li>  \n</ul>\n\n<p>实现 <code>CountIntervals</code> 类：</p>\n\n<ul>  \n   <li><code>CountIntervals()</code> 使用区间的空集初始化对象</li>  \n   <li><code>void add(int left, int right)</code> 添加区间 <code>[left, right]</code> 到区间集合之中。</li>  \n   <li><code>int count()</code> 返回出现在 <strong>至少一个</strong> 区间中的整数个数。</li>  \n</ul>\n\n<p><strong>注意：</strong>区间 <code>[left, right]</code> 表示满足 <code>left <= x <= right</code> 的所有整数 <code>x</code> 。</p>\n\n<p> </p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>  \n<strong>输入</strong>  \n[\"CountIntervals\", \"add\", \"add\", \"count\", \"add\", \"count\"]  \n[[], [2, 3], [7, 10], [], [5, 8], []]  \n<strong>输出</strong>  \n[null, null, null, 6, null, 8]  \n\n<strong>解释</strong>  \nCountIntervals countIntervals = new CountIntervals(); // 用一个区间空集初始化对象  \ncountIntervals.add(2, 3);  // 将 [2, 3] 添加到区间集合中  \ncountIntervals.add(7, 10); // 将 [7, 10] 添加到区间集合中  \ncountIntervals.count();    // 返回 6  \n                           // 整数 2 和 3 出现在区间 [2, 3] 中  \n                           // 整数 7、8、9、10 出现在区间 [7, 10] 中  \ncountIntervals.add(5, 8);  // 将 [5, 8] 添加到区间集合中  \ncountIntervals.count();    // 返回 8  \n                           // 整数 2 和 3 出现在区间 [2, 3] 中  \n                           // 整数 5 和 6 出现在区间 [5, 8] 中  \n                           // 整数 7 和 8 出现在区间 [5, 8] 和区间 [7, 10] 中  \n                           // 整数 9 和 10 出现在区间 [7, 10] 中</pre>\n\n<p> </p>\n\n<p><strong>提示：</strong></p>\n\n<ul>  \n   <li><code>1 <= left <= right <= 10<sup>9</sup></code></li>  \n   <li>最多调用  <code>add</code> 和 <code>count</code> 方法 <strong>总计</strong> <code>10<sup>5</sup></code> 次</li>  \n   <li>调用 <code>count</code> 方法至少一次</li>  \n</ul>\n\n## 思路：\n\n这题我的思路是添加一次整理一次并同时计数，利用java的TreeSet结构，可以快速的定位数据。  \n典型的模板题  \n\n## 代码：\n\njava：  \n\n```java\nclass CountIntervals {\n    TreeSet<Interval> ranges;\n    int cnt;\n    public CountIntervals() {\n        ranges = new TreeSet();\n        cnt = 0;\n    }\n    public void add(int left, int right) {\n        Iterator<Interval> itr = ranges.tailSet(new Interval(0, left - 1)).iterator();\n        while (itr.hasNext()) {\n            Interval iv = itr.next();\n            if (right < iv.left) {\n                break;\n            }\n            left = Math.min(left, iv.left);\n            right = Math.max(right, iv.right);\n            cnt -= iv.right - iv.left + 1;\n            itr.remove();\n        }\n        ranges.add(new Interval(left, right));\n        cnt += right - left + 1;\n    }\n    public int count() {\n        return cnt;\n    }\n}\npublic class Interval implements Comparable<Interval> {\n    int left;\n    int right;\n    public Interval(int left, int right) {\n        this.left = left;\n        this.right = right;\n    }\n    public int compareTo(Interval that) {\n        if (this.right == that.right) return this.left - that.left;\n        return this.right - that.right;\n    }\n}\n```\n","slug":"weekly-contest-293","published":1,"updated":"2022-06-03T06:00:55.613Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl42z5h8700773gn64kk6c9le","content":"<h1>第一题</h1>\n<h2 id=\"力扣原题链接：-5\">力扣原题链接：</h2>\n<p><a href=\"https://site.huangge1199.cn/?golink=aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9maW5kLXJlc3VsdGFudC1hcnJheS1hZnRlci1yZW1vdmluZy1hbmFncmFtcy8=\">2273. 移除字母异位词后的结果数组</a></p>\n<h2 id=\"单个题解：-5\">单个题解：</h2>\n<p><a href=\"https://site.huangge1199.cn/284.html\">力扣2273. 移除字母异位词后的结果数组</a></p>\n<h2 id=\"题目：\">题目：</h2>\n<p>给你一个下标从 <strong>0</strong> 开始的字符串 <code>words</code> ，其中 <code>words[i]</code> 由小写英文字符组成。</p>\n<p>在一步操作中，需要选出任一下标 <code>i</code> ，从 <code>words</code> 中 <strong>删除</strong> <code>words[i]</code> 。其中下标 <code>i</code> 需要同时满足下述两个条件：</p>\n<ol>    \n   <li><code>0 < i < words.length</code></li>    \n   <li><code>words[i - 1]</code> 和 <code>words[i]</code> 是 <strong>字母异位词</strong> 。</li>    \n</ol>\n<p>只要可以选出满足条件的下标，就一直执行这个操作。</p>\n<p>在执行所有操作后，返回 <code>words</code> 。可以证明，按任意顺序为每步操作选择下标都会得到相同的结果。</p>\n<p><strong>字母异位词</strong> 是由重新排列源单词的字母得到的一个新单词，所有源单词中的字母通常恰好只用一次。例如，<code>\"dacb\"</code> 是 <code>\"abdc\"</code> 的一个字母异位词。</p>\n<p> </p>\n<p><strong>示例 1：</strong></p>\n<pre><strong>输入：</strong>words = [\"abba\",\"baba\",\"bbaa\",\"cd\",\"cd\"]    \n<strong>输出：</strong>[\"abba\",\"cd\"]    \n<strong>解释：</strong>    \n获取结果数组的方法之一是执行下述步骤：  - 由于 words[2] = \"bbaa\" 和 words[1] = \"baba\" 是字母异位词，选择下标 2 并删除 words[2] 。    \n  现在 words = [\"abba\",\"baba\",\"cd\",\"cd\"] 。  - 由于 words[1] = \"baba\" 和 words[0] = \"abba\" 是字母异位词，选择下标 1 并删除 words[1] 。    \n  现在 words = [\"abba\",\"cd\",\"cd\"] 。  - 由于 words[2] = \"cd\" 和 words[1] = \"cd\" 是字母异位词，选择下标 2 并删除 words[2] 。    \n  现在 words = [\"abba\",\"cd\"] 。  无法再执行任何操作，所以 [\"abba\",\"cd\"] 是最终答案。</pre>\n<p><strong>示例 2：</strong></p>\n<pre><strong>输入：</strong>words = [\"a\",\"b\",\"c\",\"d\",\"e\"]    \n<strong>输出：</strong>[\"a\",\"b\",\"c\",\"d\",\"e\"]    \n<strong>解释：</strong>    \nwords 中不存在互为字母异位词的两个相邻字符串，所以无需执行任何操作。</pre>\n<p> </p>\n<p><strong>提示：</strong></p>\n<ul>    \n   <li><code>1 <= words.length <= 100</code></li>    \n   <li><code>1 <= words[i].length <= 10</code></li>    \n   <li><code>words[i]</code> 由小写英文字母组成</li>    \n</ul>    \n<div><div>Related Topics</div><div><li>数组</li><li>哈希表</li><li>字符串</li><li>排序</li></div></div>\n<h2 id=\"思路：\">思路：</h2>\n<p>遍历字符串数组，分别将每一个字符串装换成字符数组，字符数组排序，如果排序后转成的字符串一样，则说明是字母异位词</p>\n<h2 id=\"代码：\">代码：</h2>\n<p>java：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">class Solution &#123;\n    public List&lt;String&gt; removeAnagrams(String[] words) &#123;\n        char[] strs &#x3D; words[0].toCharArray();\n        Arrays.sort(strs);\n        List&lt;String&gt; list &#x3D; new ArrayList&lt;&gt;();\n        int index &#x3D; 0;\n        for (int i &#x3D; 1; i &lt; words.length; i++) &#123;\n            char[] strs1 &#x3D; words[i].toCharArray();\n            Arrays.sort(strs1);\n            if (!String.valueOf(strs).equals(String.valueOf(strs1))) &#123;\n                list.add(words[index]);\n                strs &#x3D; strs1;\n                index &#x3D; i;\n            &#125;\n        &#125;\n        list.add(words[index]);\n        return list;\n    &#125;\n&#125;</code></pre>\n<h1>第二题</h1>\n<h2 id=\"力扣原题链接：-6\">力扣原题链接：</h2>\n<p><a href=\"https://leetcode.cn/problems/maximum-consecutive-floors-without-special-floors/\">2274. 不含特殊楼层的最大连续楼层数</a></p>\n<h2 id=\"单个题解：-6\">单个题解：</h2>\n<p><a href=\"https://site.huangge1199.cn/288.html\">力扣2274. 不含特殊楼层的最大连续楼层数</a></p>\n<h2 id=\"题目：-2\">题目：</h2>\n<p>Alice 管理着一家公司，并租用大楼的部分楼层作为办公空间。Alice 决定将一些楼层作为 <strong>特殊楼层</strong> ，仅用于放松。</p>\n<p>给你两个整数 <code>bottom</code> 和 <code>top</code> ，表示 Alice 租用了从 <code>bottom</code> 到 <code>top</code>（含 <code>bottom</code> 和 <code>top</code> 在内）的所有楼层。另给你一个整数数组 <code>special</code> ，其中 <code>special[i]</code> 表示  Alice 指定用于放松的特殊楼层。</p>\n<p>返回不含特殊楼层的 <strong>最大</strong> 连续楼层数。</p>\n<p> </p>\n<p><strong>示例 1：</strong></p>\n<pre>  \n<strong>输入：</strong>bottom = 2, top = 9, special = [4,6]  \n<strong>输出：</strong>3  \n<strong>解释：</strong>下面列出的是不含特殊楼层的连续楼层范围：  \n- (2, 3) ，楼层数为 2 。  \n- (5, 5) ，楼层数为 1 。  \n- (7, 9) ，楼层数为 3 。  \n因此，返回最大连续楼层数 3 。  \n</pre>\n<p><strong>示例 2：</strong></p>\n<pre>  \n<strong>输入：</strong>bottom = 6, top = 8, special = [7,6,8]  \n<strong>输出：</strong>0  \n<strong>解释：</strong>每层楼都被规划为特殊楼层，所以返回 0 。  \n</pre>\n<p> </p>\n<p><strong>提示</strong></p>\n<ul>  \n   <li><code>1 <= special.length <= 10<sup>5</sup></code></li>  \n   <li><code>1 <= bottom <= special[i] <= top <= 10<sup>9</sup></code></li>  \n   <li><code>special</code> 中的所有值 <strong>互不相同</strong></li>  \n</ul>  \n<div><div>Related Topics</div><div><li>数组</li><li>排序</li></div></div>\n<h2 id=\"思路：-2\">思路：</h2>\n<p>这题相当于在bottom到top的范围内，被special的数分割了，我们需要找到分割后最长的一段</p>\n<p>步骤：</p>\n<ol>\n<li>为了保证数据的顺序进行，对special进行排序</li>\n<li>遍历<code>special</code>对<code>bottom~top</code>进行分割，当<code>bottom&lt;=special[i]</code>时，<br>\n连续楼层数为<code>special[i]-bottom</code>，与之前的最大连续层数对比，得到当前的最大连续层数，<br>\n同时更新<code>bottom = special[i] + 1</code></li>\n<li>遍历完，还有最后一段的连续层数<code>top - special[special.length - 1]</code></li>\n<li>至此，不包含特殊层的最大的连续层数就出来了</li>\n</ol>\n<h2 id=\"代码：-2\">代码：</h2>\n<p>java：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">class Solution &#123;\n    public int maxConsecutive(int bottom, int top, int[] special) &#123;\n        Arrays.sort(special);\n        int max &#x3D; 0;\n        for (int j : special) &#123;\n            if (bottom &lt;&#x3D; j) &#123;\n                max &#x3D; Math.max(max, j - bottom);\n                bottom &#x3D; j + 1;\n            &#125;\n        &#125;\n        max &#x3D; Math.max(max, top - special[special.length - 1]);\n        return max;\n    &#125;\n&#125;</code></pre>\n<h1>第三题</h1>\n<h2 id=\"力扣原题链接：-7\">力扣原题链接：</h2>\n<p><a href=\"https://leetcode.cn/problems/largest-combination-with-bitwise-and-greater-than-zero/\">2275. 按位与结果大于零的最长组合</a></p>\n<h2 id=\"单个题解：-7\">单个题解：</h2>\n<p><a href=\"https://site.huangge1199.cn/286.html\">力扣2275. 按位与结果大于零的最长组合</a></p>\n<h2 id=\"题目：-3\">题目：</h2>\n<p>对数组 <code>nums</code> 执行 <strong>按位与</strong> 相当于对数组 <code>nums</code> 中的所有整数执行 <strong>按位与</strong> 。</p>\n<ul>  \n   <li>例如，对 <code>nums = [1, 5, 3]</code> 来说，按位与等于 <code>1 & 5 & 3 = 1</code> 。</li>  \n   <li>同样，对 <code>nums = [7]</code> 而言，按位与等于 <code>7</code> 。</li>  \n</ul>\n<p>给你一个正整数数组 <code>candidates</code> 。计算 <code>candidates</code> 中的数字每种组合下 <strong>按位与</strong> 的结果。 <code>candidates</code> 中的每个数字在每种组合中只能使用 <strong>一次</strong> 。</p>\n<p>返回按位与结果大于 <code>0</code> 的 <strong>最长</strong> 组合的长度<em>。</em></p>\n<p> </p>\n<p><strong>示例 1：</strong></p>\n<pre>  \n<strong>输入：</strong>candidates = [16,17,71,62,12,24,14]  \n<strong>输出：</strong>4  \n<strong>解释：</strong>组合 [16,17,62,24] 的按位与结果是 16 & 17 & 62 & 24 = 16 > 0 。  \n组合长度是 4 。  \n可以证明不存在按位与结果大于 0 且长度大于 4 的组合。  \n注意，符合长度最大的组合可能不止一种。  \n例如，组合 [62,12,24,14] 的按位与结果是 62 & 12 & 24 & 14 = 8 > 0 。  \n</pre>\n<p><strong>示例 2：</strong></p>\n<pre>  \n<strong>输入：</strong>candidates = [8,8]  \n<strong>输出：</strong>2  \n<strong>解释：</strong>最长组合是 [8,8] ，按位与结果 8 & 8 = 8 > 0 。  \n组合长度是 2 ，所以返回 2 。  \n</pre>\n<p> </p>\n<p><strong>提示：</strong></p>\n<ul>  \n   <li><code>1 <= candidates.length <= 10<sup>5</sup></code></li>  \n   <li><code>1 <= candidates[i] <= 10<sup>7</sup></code></li>  \n</ul>  \n<div><div>Related Topics</div><div><li>位运算</li><li>数组</li><li>哈希表</li><li>计数</li></div></div>\n<h2 id=\"思路：-3\">思路：</h2>\n<p>这题需要找出按位与结果大于0的最长组合的长度，按位与结果大于0，<br>\n说明这个数组中的每一个二进制数都有相同的一位是1，根据这题给的数组值的范围，<br>\n可以确定最多有24位，那么我们可以循环24次数组，每一次循环统计出第<code>i</code>位位数为1的个数，<br>\n然后将每一次的个数做比较，得出最长组合的长度</p>\n<h2 id=\"代码：-3\">代码：</h2>\n<p>java：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">class Solution &#123;\n    public int largestCombination(int[] candidates) &#123;\n        int max &#x3D; 0;\n        for (int i &#x3D; 0; i &lt; 25; i++) &#123;\n            int cnt &#x3D; 0;\n            for (int j &#x3D; 0; j &lt; candidates.length; j++) &#123;\n                if ((candidates[j] &amp; (1 &lt;&lt; i)) &gt; 0) &#123;\n                    cnt++;\n                &#125;\n            &#125;\n            max &#x3D; Math.max(max, cnt);\n        &#125;\n        return max;\n    &#125;\n&#125;</code></pre>\n<h1>第四题</h1>\n<h2 id=\"力扣原题链接：-8\">力扣原题链接：</h2>\n<p><a href=\"https://leetcode.cn/problems/count-integers-in-intervals/\">2276. 统计区间中的整数数目</a></p>\n<h2 id=\"单个题解：-8\">单个题解：</h2>\n<p><a href=\"https://site.huangge1199.cn/282.html\">力扣2276. 统计区间中的整数数目</a></p>\n<h2 id=\"题目：-4\">题目：</h2>\n<p>给你区间的 <strong>空</strong> 集，请你设计并实现满足要求的数据结构：</p>\n<ul>  \n   <li><strong>新增：</strong>添加一个区间到这个区间集合中。</li>  \n   <li><strong>统计：</strong>计算出现在 <strong>至少一个</strong> 区间中的整数个数。</li>  \n</ul>\n<p>实现 <code>CountIntervals</code> 类：</p>\n<ul>  \n   <li><code>CountIntervals()</code> 使用区间的空集初始化对象</li>  \n   <li><code>void add(int left, int right)</code> 添加区间 <code>[left, right]</code> 到区间集合之中。</li>  \n   <li><code>int count()</code> 返回出现在 <strong>至少一个</strong> 区间中的整数个数。</li>  \n</ul>\n<p><strong>注意：</strong>区间 <code>[left, right]</code> 表示满足 <code>left <= x <= right</code> 的所有整数 <code>x</code> 。</p>\n<p> </p>\n<p><strong>示例 1：</strong></p>\n<pre>  \n<strong>输入</strong>  \n[\"CountIntervals\", \"add\", \"add\", \"count\", \"add\", \"count\"]  \n[[], [2, 3], [7, 10], [], [5, 8], []]  \n<strong>输出</strong>  \n[null, null, null, 6, null, 8]  \n\n<strong>解释</strong>  \nCountIntervals countIntervals = new CountIntervals(); // 用一个区间空集初始化对象  \ncountIntervals.add(2, 3);  // 将 [2, 3] 添加到区间集合中  \ncountIntervals.add(7, 10); // 将 [7, 10] 添加到区间集合中  \ncountIntervals.count();    // 返回 6  \n                           // 整数 2 和 3 出现在区间 [2, 3] 中  \n                           // 整数 7、8、9、10 出现在区间 [7, 10] 中  \ncountIntervals.add(5, 8);  // 将 [5, 8] 添加到区间集合中  \ncountIntervals.count();    // 返回 8  \n                           // 整数 2 和 3 出现在区间 [2, 3] 中  \n                           // 整数 5 和 6 出现在区间 [5, 8] 中  \n                           // 整数 7 和 8 出现在区间 [5, 8] 和区间 [7, 10] 中  \n                           // 整数 9 和 10 出现在区间 [7, 10] 中</pre>\n<p> </p>\n<p><strong>提示：</strong></p>\n<ul>  \n   <li><code>1 <= left <= right <= 10<sup>9</sup></code></li>  \n   <li>最多调用  <code>add</code> 和 <code>count</code> 方法 <strong>总计</strong> <code>10<sup>5</sup></code> 次</li>  \n   <li>调用 <code>count</code> 方法至少一次</li>  \n</ul>\n<h2 id=\"思路：-4\">思路：</h2>\n<p>这题我的思路是添加一次整理一次并同时计数，利用java的TreeSet结构，可以快速的定位数据。<br>\n典型的模板题</p>\n<h2 id=\"代码：-4\">代码：</h2>\n<p>java：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">class CountIntervals &#123;\n    TreeSet&lt;Interval&gt; ranges;\n    int cnt;\n    public CountIntervals() &#123;\n        ranges &#x3D; new TreeSet();\n        cnt &#x3D; 0;\n    &#125;\n    public void add(int left, int right) &#123;\n        Iterator&lt;Interval&gt; itr &#x3D; ranges.tailSet(new Interval(0, left - 1)).iterator();\n        while (itr.hasNext()) &#123;\n            Interval iv &#x3D; itr.next();\n            if (right &lt; iv.left) &#123;\n                break;\n            &#125;\n            left &#x3D; Math.min(left, iv.left);\n            right &#x3D; Math.max(right, iv.right);\n            cnt -&#x3D; iv.right - iv.left + 1;\n            itr.remove();\n        &#125;\n        ranges.add(new Interval(left, right));\n        cnt +&#x3D; right - left + 1;\n    &#125;\n    public int count() &#123;\n        return cnt;\n    &#125;\n&#125;\npublic class Interval implements Comparable&lt;Interval&gt; &#123;\n    int left;\n    int right;\n    public Interval(int left, int right) &#123;\n        this.left &#x3D; left;\n        this.right &#x3D; right;\n    &#125;\n    public int compareTo(Interval that) &#123;\n        if (this.right &#x3D;&#x3D; that.right) return this.left - that.left;\n        return this.right - that.right;\n    &#125;\n&#125;</code></pre>\n","site":{"data":{"link":[{"class_name":"博客相关","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网站框架"},{"name":"Valine","link":"https://valine.js.org/","avatar":"https://valine.js.org/images/valine.png","descr":"一款快速、简洁且高效的无后端评论系统"},{"name":"百度统计","link":"https://tongji.baidu.com/","avatar":"https://tongji.baidu.com/web/image/homepage_logo.svg?__v=1641900059690","descr":"领先的中文网站分析平台"},{"name":"墨滴编辑器","link":"https://editor.mdnice.com/","avatar":"https://mdnice.com/favicon.svg","descr":"可将markdown文章转换成匹配知乎、掘金、微信订阅号等多个平台的格式"},{"name":"v-md-editor","link":"https://ckang1229.gitee.io/vue-markdown-editor/zh/","avatar":null,"descr":"Vue的一款markdown插件（支持vue2和vue3）"}]},{"class_name":"视频学习","link_list":[{"name":"咕泡云课堂","link":"https://ke.gupaoedu.cn/","avatar":"https://ke.gupaoedu.cn/favicon.ico","descr":"咕泡云课堂是咕泡教育旗下的在线教育直播平台，集教学管理、在线授课听课、作业考试、互动学习功能于一体，支持web、app、h5等多端同时在线互动直播"},{"name":"谷粒学苑","link":"https://www.gulixueyuan.com/","avatar":"https://www.gulixueyuan.com/files/system/2017/06-21/160846e883d7292766.ico?version=20.4.6","descr":"谷粒学苑为尚硅谷旗下IT课程在线学习平台"}]},{"class_name":"开发工具","link_list":[{"name":"jdk","link":"https://www.oracle.com/java/technologies/downloads/","avatar":"https://blog.huangge1199.cn/link/jdk.png","descr":"Java语言的软件开发工具包"},{"name":"IDEA","link":"https://www.jetbrains.com/zh-cn/idea/","avatar":"https://blog.huangge1199.cn/link/idea.png","descr":"功能强大、符合人体工程学的 Java IDE"},{"name":"webstorm","link":"https://www.jetbrains.com/zh-cn/webstorm/","avatar":"https://blog.huangge1199.cn/link/webstorm.png","descr":"一个适用于JavaScript 和相关技术的集成开发环境"},{"name":"datagrip","link":"https://www.jetbrains.com/zh-cn/datagrip/","avatar":"https://blog.huangge1199.cn/link/datagrip.png","descr":"由JetBrains 开发的数据库和SQL 跨平台IDE"},{"name":"pyCharm","link":"https://www.jetbrains.com/zh-cn/pycharm/","avatar":"https://blog.huangge1199.cn/link/pycharm.png","descr":"JetBrains为专业开发者提供的Python IDE"},{"name":"xshell","link":"https://www.xshell.com/zh/xshell/","avatar":"https://blog.huangge1199.cn/link/xshell.png","descr":"业界最强大的SSH客户机"},{"name":"winscp","link":"https://winscp.net/eng/index.php","avatar":"https://winscp-static-746341.c.cdn77.org/assets/images/logos/logo.png?v=6990","descr":"一个Windows 环境下使用的 SSH 的开源图形化 SFTP 客户端"},{"name":"Another Redis Desktop Manager","link":"https://github.com/qishibo/AnotherRedisDesktopManager","avatar":"https://blog.huangge1199.cn/link/AnotherRedisDesktopManager.png","descr":"更快、更好、更稳定的Redis桌面(GUI)管理客户端，兼容Windows、Mac、Linux，性能出众，轻松加载海量键值"},{"name":"JD-GUI","link":"http://java-decompiler.github.io/","avatar":"https://blog.huangge1199.cn/link/jdgui.png","descr":"一款功能十分强大的JAVA反编译工具"}]},{"class_name":"后端开发","link_list":[{"name":"sa-token","link":"https://sa-token.dev33.cn/","avatar":"https://sa-token.dev33.cn/doc/logo.png","descr":"一个轻量级 java 权限认证框架，让鉴权变得简单、优雅！"},{"name":"sentinel","link":"https://sentinelguard.io/","avatar":"https://sentinelguard.io/img/sentinel.ico","descr":"面向分布式服务架构的高可用流量控制组件"},{"name":"dubbo","link":"https://dubbo.apache.org/","avatar":"https://dubbo.apache.org/favicons/favicon.ico","descr":"一款高性能、轻量级的开源服务框架"},{"name":"nacos","link":"https://nacos.io/","avatar":"https://img.alicdn.com/tfs/TB1hgJpHAPoK1RjSZKbXXX1IXXa-64-64.png","descr":"一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台"},{"name":"nginx","link":"https://nginx.org/","avatar":"https://blog.huangge1199.cn/link/nginx.png","descr":"反向代理服务器"},{"name":"zookeeper","link":"https://zookeeper.apache.org/","avatar":"https://zookeeper.apache.org/images/zookeeper_small.gif","descr":"为大型分布式计算提供开源的分布式配置服务、同步服务和命名注册"},{"name":"kafka","link":"https://kafka.apache.org/","avatar":"https://blog.huangge1199.cn/link/kafka.png","descr":"一种分布式的，基于发布 / 订阅的消息系统"},{"name":"rabbitmq","link":"https://www.rabbitmq.com/","avatar":"https://blog.huangge1199.cn/link/rabbitmq.png","descr":"消息队列"},{"name":"rocketmq","link":"https://rocketmq.apache.org/","avatar":"https://rocketmq.apache.org/assets/images/rmq-logo.png","descr":"消息队列"},{"name":"justauth","link":"https://justauth.wiki/","avatar":"https://justauth.wiki/logo.png","descr":"开箱即用的整合第三方登录的开源组件"},{"name":"XXL-JOB","link":"https://www.xuxueli.com/xxl-job/","avatar":"https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg","descr":"分布式任务调度平台"},{"name":"MQTT","link":"https://www.emqx.com/zh/mqtt","avatar":"https://www.emqx.com/favicon.ico","descr":"MQTT - 轻量级的物联网消息传输协议"},{"name":"powerjob","link":"http://www.powerjob.tech/","avatar":"https://blog.huangge1199.cn/link/powerjob.ico","descr":"新一代分布式任务调度与计算框架，支持CRON、API、固定频率、固定延迟等调度策略，提供工作流来编排任务解决依赖关系，使用简单，功能强大，文档齐全。"}]},{"class_name":"前端开发","link_list":[{"name":"vue","link":"https://cn.vuejs.org/","avatar":"https://cn.vuejs.org/images/logo.svg","descr":"是一套用于构建用户界面的渐进式框架"},{"name":"element","link":"https://element.eleme.cn/#/zh-CN","avatar":"https://element.eleme.cn/favicon.ico","descr":"一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库"},{"name":"Element Plus","link":"https://element-plus.org/zh-CN/","avatar":"https://element-plus.org/images/element-plus-logo-small.svg","descr":"一个 Vue 3 UI 框架 | Element Plus"},{"name":"vant","link":"https://youzan.github.io/vant-weapp/#/home","avatar":"https://img.yzcdn.cn/vant/logo.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"nuxt.js","link":"https://nuxtjs.org/","avatar":"https://nuxtjs.org/_nuxt/icons/icon_512x512.a3b4ce.png","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"echarts","link":"https://echarts.apache.org/","avatar":"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/zh/images/favicon.png?_v_=20200710_1","descr":"轻量、可靠的小程序 UI 组件库"},{"name":"jQuery UI","link":"https://jui.org/","avatar":"https://blog.huangge1199.cn/link/jui.png","descr":"简单实用国产jQuery UI框架 - DWZ富客户端框架(J-UI.com)"},{"name":"mavonEditor","link":"http://www.mavoneditor.com/","avatar":null,"descr":"Vue的一款markdown插件"},{"name":"Ant Design of Vue","link":"https://www.antdv.com/","avatar":"https://www.antdv.com/assets/logo.1ef800a8.svg","descr":"ant-design-vue 为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。"}]},{"class_name":"辅助工具","link_list":[{"name":"YAPI","link":"http://yapi.smart-xwork.cn/","avatar":"https://blog.huangge1199.cn/link/yapi.png","descr":"高效、易用、功能强大的API管理平台"},{"name":"恒星播放器","link":"https://www.stellarplayer.com/","avatar":"https://static.coldlake1.com/staticsource/website-master/assets/logo.5c0ef6da.png","descr":"一款纯粹专注的播放器"},{"name":"NPS","link":"https://ehang-io.github.io/nps/","avatar":"https://ehang-io.github.io/nps/logo.svg","descr":"一款轻量级、高性能、功能强大的内网穿透代理服务器"},{"name":"Ventoy","link":"https://www.ventoy.net/","avatar":"https://www.ventoy.net/static/img/ventoy.png?v=1","descr":"新一代多系统启动U盘解决方案"}]}],"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_亲亲":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_偷笑":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_再见":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_冷漠":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_发怒":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_发财":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_可爱":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_吐血":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_呆":"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png","tv_呕吐":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_困":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_坏笑":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_大佬":"093c1e2c490161aca397afc45573c877cdead616.png","tv_大哭":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_委屈":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_害羞":"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png","tv_尴尬":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_微笑":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_思考":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_惊吓":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"widget":{"top":[{"class_name":"weather","id_name":"weather","name":"和风天气","icon":"fas","html":"<div id=\"he-plugin-standard\"></div> <script> WIDGET = {\"CONFIG\":{\"layout\":\"2\",\"width\":\"260\",\"height\":\"280\",\"background\":\"1\",\"dataColor\":\"FFFFFF\",\"borderRadius\":\"15\",\"key\":\"bf6b4fdd5318487c81962e3b65b643ac\"}} </script> <script src=\"https://widget.qweather.net/standard/static/js/he-standard-common.js?v=2.0\"></script>"}]}}},"cover":"https://blog.huangge1199.cn/images/bg.jpeg","excerpt":"","more":"<h1>第一题</h1>\n<h2 id=\"力扣原题链接：-5\">力扣原题链接：</h2>\n<p><a href=\"https://site.huangge1199.cn/?golink=aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9maW5kLXJlc3VsdGFudC1hcnJheS1hZnRlci1yZW1vdmluZy1hbmFncmFtcy8=\">2273. 移除字母异位词后的结果数组</a></p>\n<h2 id=\"单个题解：-5\">单个题解：</h2>\n<p><a href=\"https://site.huangge1199.cn/284.html\">力扣2273. 移除字母异位词后的结果数组</a></p>\n<h2 id=\"题目：\">题目：</h2>\n<p>给你一个下标从 <strong>0</strong> 开始的字符串 <code>words</code> ，其中 <code>words[i]</code> 由小写英文字符组成。</p>\n<p>在一步操作中，需要选出任一下标 <code>i</code> ，从 <code>words</code> 中 <strong>删除</strong> <code>words[i]</code> 。其中下标 <code>i</code> 需要同时满足下述两个条件：</p>\n<ol>    \n   <li><code>0 < i < words.length</code></li>    \n   <li><code>words[i - 1]</code> 和 <code>words[i]</code> 是 <strong>字母异位词</strong> 。</li>    \n</ol>\n<p>只要可以选出满足条件的下标，就一直执行这个操作。</p>\n<p>在执行所有操作后，返回 <code>words</code> 。可以证明，按任意顺序为每步操作选择下标都会得到相同的结果。</p>\n<p><strong>字母异位词</strong> 是由重新排列源单词的字母得到的一个新单词，所有源单词中的字母通常恰好只用一次。例如，<code>\"dacb\"</code> 是 <code>\"abdc\"</code> 的一个字母异位词。</p>\n<p> </p>\n<p><strong>示例 1：</strong></p>\n<pre><strong>输入：</strong>words = [\"abba\",\"baba\",\"bbaa\",\"cd\",\"cd\"]    \n<strong>输出：</strong>[\"abba\",\"cd\"]    \n<strong>解释：</strong>    \n获取结果数组的方法之一是执行下述步骤：  - 由于 words[2] = \"bbaa\" 和 words[1] = \"baba\" 是字母异位词，选择下标 2 并删除 words[2] 。    \n  现在 words = [\"abba\",\"baba\",\"cd\",\"cd\"] 。  - 由于 words[1] = \"baba\" 和 words[0] = \"abba\" 是字母异位词，选择下标 1 并删除 words[1] 。    \n  现在 words = [\"abba\",\"cd\",\"cd\"] 。  - 由于 words[2] = \"cd\" 和 words[1] = \"cd\" 是字母异位词，选择下标 2 并删除 words[2] 。    \n  现在 words = [\"abba\",\"cd\"] 。  无法再执行任何操作，所以 [\"abba\",\"cd\"] 是最终答案。</pre>\n<p><strong>示例 2：</strong></p>\n<pre><strong>输入：</strong>words = [\"a\",\"b\",\"c\",\"d\",\"e\"]    \n<strong>输出：</strong>[\"a\",\"b\",\"c\",\"d\",\"e\"]    \n<strong>解释：</strong>    \nwords 中不存在互为字母异位词的两个相邻字符串，所以无需执行任何操作。</pre>\n<p> </p>\n<p><strong>提示：</strong></p>\n<ul>    \n   <li><code>1 <= words.length <= 100</code></li>    \n   <li><code>1 <= words[i].length <= 10</code></li>    \n   <li><code>words[i]</code> 由小写英文字母组成</li>    \n</ul>    \n<div><div>Related Topics</div><div><li>数组</li><li>哈希表</li><li>字符串</li><li>排序</li></div></div>\n<h2 id=\"思路：\">思路：</h2>\n<p>遍历字符串数组，分别将每一个字符串装换成字符数组，字符数组排序，如果排序后转成的字符串一样，则说明是字母异位词</p>\n<h2 id=\"代码：\">代码：</h2>\n<p>java：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">class Solution &#123;\n    public List&lt;String&gt; removeAnagrams(String[] words) &#123;\n        char[] strs &#x3D; words[0].toCharArray();\n        Arrays.sort(strs);\n        List&lt;String&gt; list &#x3D; new ArrayList&lt;&gt;();\n        int index &#x3D; 0;\n        for (int i &#x3D; 1; i &lt; words.length; i++) &#123;\n            char[] strs1 &#x3D; words[i].toCharArray();\n            Arrays.sort(strs1);\n            if (!String.valueOf(strs).equals(String.valueOf(strs1))) &#123;\n                list.add(words[index]);\n                strs &#x3D; strs1;\n                index &#x3D; i;\n            &#125;\n        &#125;\n        list.add(words[index]);\n        return list;\n    &#125;\n&#125;</code></pre>\n<h1>第二题</h1>\n<h2 id=\"力扣原题链接：-6\">力扣原题链接：</h2>\n<p><a href=\"https://leetcode.cn/problems/maximum-consecutive-floors-without-special-floors/\">2274. 不含特殊楼层的最大连续楼层数</a></p>\n<h2 id=\"单个题解：-6\">单个题解：</h2>\n<p><a href=\"https://site.huangge1199.cn/288.html\">力扣2274. 不含特殊楼层的最大连续楼层数</a></p>\n<h2 id=\"题目：-2\">题目：</h2>\n<p>Alice 管理着一家公司，并租用大楼的部分楼层作为办公空间。Alice 决定将一些楼层作为 <strong>特殊楼层</strong> ，仅用于放松。</p>\n<p>给你两个整数 <code>bottom</code> 和 <code>top</code> ，表示 Alice 租用了从 <code>bottom</code> 到 <code>top</code>（含 <code>bottom</code> 和 <code>top</code> 在内）的所有楼层。另给你一个整数数组 <code>special</code> ，其中 <code>special[i]</code> 表示  Alice 指定用于放松的特殊楼层。</p>\n<p>返回不含特殊楼层的 <strong>最大</strong> 连续楼层数。</p>\n<p> </p>\n<p><strong>示例 1：</strong></p>\n<pre>  \n<strong>输入：</strong>bottom = 2, top = 9, special = [4,6]  \n<strong>输出：</strong>3  \n<strong>解释：</strong>下面列出的是不含特殊楼层的连续楼层范围：  \n- (2, 3) ，楼层数为 2 。  \n- (5, 5) ，楼层数为 1 。  \n- (7, 9) ，楼层数为 3 。  \n因此，返回最大连续楼层数 3 。  \n</pre>\n<p><strong>示例 2：</strong></p>\n<pre>  \n<strong>输入：</strong>bottom = 6, top = 8, special = [7,6,8]  \n<strong>输出：</strong>0  \n<strong>解释：</strong>每层楼都被规划为特殊楼层，所以返回 0 。  \n</pre>\n<p> </p>\n<p><strong>提示</strong></p>\n<ul>  \n   <li><code>1 <= special.length <= 10<sup>5</sup></code></li>  \n   <li><code>1 <= bottom <= special[i] <= top <= 10<sup>9</sup></code></li>  \n   <li><code>special</code> 中的所有值 <strong>互不相同</strong></li>  \n</ul>  \n<div><div>Related Topics</div><div><li>数组</li><li>排序</li></div></div>\n<h2 id=\"思路：-2\">思路：</h2>\n<p>这题相当于在bottom到top的范围内，被special的数分割了，我们需要找到分割后最长的一段</p>\n<p>步骤：</p>\n<ol>\n<li>为了保证数据的顺序进行，对special进行排序</li>\n<li>遍历<code>special</code>对<code>bottom~top</code>进行分割，当<code>bottom&lt;=special[i]</code>时，<br>\n连续楼层数为<code>special[i]-bottom</code>，与之前的最大连续层数对比，得到当前的最大连续层数，<br>\n同时更新<code>bottom = special[i] + 1</code></li>\n<li>遍历完，还有最后一段的连续层数<code>top - special[special.length - 1]</code></li>\n<li>至此，不包含特殊层的最大的连续层数就出来了</li>\n</ol>\n<h2 id=\"代码：-2\">代码：</h2>\n<p>java：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">class Solution &#123;\n    public int maxConsecutive(int bottom, int top, int[] special) &#123;\n        Arrays.sort(special);\n        int max &#x3D; 0;\n        for (int j : special) &#123;\n            if (bottom &lt;&#x3D; j) &#123;\n                max &#x3D; Math.max(max, j - bottom);\n                bottom &#x3D; j + 1;\n            &#125;\n        &#125;\n        max &#x3D; Math.max(max, top - special[special.length - 1]);\n        return max;\n    &#125;\n&#125;</code></pre>\n<h1>第三题</h1>\n<h2 id=\"力扣原题链接：-7\">力扣原题链接：</h2>\n<p><a href=\"https://leetcode.cn/problems/largest-combination-with-bitwise-and-greater-than-zero/\">2275. 按位与结果大于零的最长组合</a></p>\n<h2 id=\"单个题解：-7\">单个题解：</h2>\n<p><a href=\"https://site.huangge1199.cn/286.html\">力扣2275. 按位与结果大于零的最长组合</a></p>\n<h2 id=\"题目：-3\">题目：</h2>\n<p>对数组 <code>nums</code> 执行 <strong>按位与</strong> 相当于对数组 <code>nums</code> 中的所有整数执行 <strong>按位与</strong> 。</p>\n<ul>  \n   <li>例如，对 <code>nums = [1, 5, 3]</code> 来说，按位与等于 <code>1 & 5 & 3 = 1</code> 。</li>  \n   <li>同样，对 <code>nums = [7]</code> 而言，按位与等于 <code>7</code> 。</li>  \n</ul>\n<p>给你一个正整数数组 <code>candidates</code> 。计算 <code>candidates</code> 中的数字每种组合下 <strong>按位与</strong> 的结果。 <code>candidates</code> 中的每个数字在每种组合中只能使用 <strong>一次</strong> 。</p>\n<p>返回按位与结果大于 <code>0</code> 的 <strong>最长</strong> 组合的长度<em>。</em></p>\n<p> </p>\n<p><strong>示例 1：</strong></p>\n<pre>  \n<strong>输入：</strong>candidates = [16,17,71,62,12,24,14]  \n<strong>输出：</strong>4  \n<strong>解释：</strong>组合 [16,17,62,24] 的按位与结果是 16 & 17 & 62 & 24 = 16 > 0 。  \n组合长度是 4 。  \n可以证明不存在按位与结果大于 0 且长度大于 4 的组合。  \n注意，符合长度最大的组合可能不止一种。  \n例如，组合 [62,12,24,14] 的按位与结果是 62 & 12 & 24 & 14 = 8 > 0 。  \n</pre>\n<p><strong>示例 2：</strong></p>\n<pre>  \n<strong>输入：</strong>candidates = [8,8]  \n<strong>输出：</strong>2  \n<strong>解释：</strong>最长组合是 [8,8] ，按位与结果 8 & 8 = 8 > 0 。  \n组合长度是 2 ，所以返回 2 。  \n</pre>\n<p> </p>\n<p><strong>提示：</strong></p>\n<ul>  \n   <li><code>1 <= candidates.length <= 10<sup>5</sup></code></li>  \n   <li><code>1 <= candidates[i] <= 10<sup>7</sup></code></li>  \n</ul>  \n<div><div>Related Topics</div><div><li>位运算</li><li>数组</li><li>哈希表</li><li>计数</li></div></div>\n<h2 id=\"思路：-3\">思路：</h2>\n<p>这题需要找出按位与结果大于0的最长组合的长度，按位与结果大于0，<br>\n说明这个数组中的每一个二进制数都有相同的一位是1，根据这题给的数组值的范围，<br>\n可以确定最多有24位，那么我们可以循环24次数组，每一次循环统计出第<code>i</code>位位数为1的个数，<br>\n然后将每一次的个数做比较，得出最长组合的长度</p>\n<h2 id=\"代码：-3\">代码：</h2>\n<p>java：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">class Solution &#123;\n    public int largestCombination(int[] candidates) &#123;\n        int max &#x3D; 0;\n        for (int i &#x3D; 0; i &lt; 25; i++) &#123;\n            int cnt &#x3D; 0;\n            for (int j &#x3D; 0; j &lt; candidates.length; j++) &#123;\n                if ((candidates[j] &amp; (1 &lt;&lt; i)) &gt; 0) &#123;\n                    cnt++;\n                &#125;\n            &#125;\n            max &#x3D; Math.max(max, cnt);\n        &#125;\n        return max;\n    &#125;\n&#125;</code></pre>\n<h1>第四题</h1>\n<h2 id=\"力扣原题链接：-8\">力扣原题链接：</h2>\n<p><a href=\"https://leetcode.cn/problems/count-integers-in-intervals/\">2276. 统计区间中的整数数目</a></p>\n<h2 id=\"单个题解：-8\">单个题解：</h2>\n<p><a href=\"https://site.huangge1199.cn/282.html\">力扣2276. 统计区间中的整数数目</a></p>\n<h2 id=\"题目：-4\">题目：</h2>\n<p>给你区间的 <strong>空</strong> 集，请你设计并实现满足要求的数据结构：</p>\n<ul>  \n   <li><strong>新增：</strong>添加一个区间到这个区间集合中。</li>  \n   <li><strong>统计：</strong>计算出现在 <strong>至少一个</strong> 区间中的整数个数。</li>  \n</ul>\n<p>实现 <code>CountIntervals</code> 类：</p>\n<ul>  \n   <li><code>CountIntervals()</code> 使用区间的空集初始化对象</li>  \n   <li><code>void add(int left, int right)</code> 添加区间 <code>[left, right]</code> 到区间集合之中。</li>  \n   <li><code>int count()</code> 返回出现在 <strong>至少一个</strong> 区间中的整数个数。</li>  \n</ul>\n<p><strong>注意：</strong>区间 <code>[left, right]</code> 表示满足 <code>left <= x <= right</code> 的所有整数 <code>x</code> 。</p>\n<p> </p>\n<p><strong>示例 1：</strong></p>\n<pre>  \n<strong>输入</strong>  \n[\"CountIntervals\", \"add\", \"add\", \"count\", \"add\", \"count\"]  \n[[], [2, 3], [7, 10], [], [5, 8], []]  \n<strong>输出</strong>  \n[null, null, null, 6, null, 8]  \n\n<strong>解释</strong>  \nCountIntervals countIntervals = new CountIntervals(); // 用一个区间空集初始化对象  \ncountIntervals.add(2, 3);  // 将 [2, 3] 添加到区间集合中  \ncountIntervals.add(7, 10); // 将 [7, 10] 添加到区间集合中  \ncountIntervals.count();    // 返回 6  \n                           // 整数 2 和 3 出现在区间 [2, 3] 中  \n                           // 整数 7、8、9、10 出现在区间 [7, 10] 中  \ncountIntervals.add(5, 8);  // 将 [5, 8] 添加到区间集合中  \ncountIntervals.count();    // 返回 8  \n                           // 整数 2 和 3 出现在区间 [2, 3] 中  \n                           // 整数 5 和 6 出现在区间 [5, 8] 中  \n                           // 整数 7 和 8 出现在区间 [5, 8] 和区间 [7, 10] 中  \n                           // 整数 9 和 10 出现在区间 [7, 10] 中</pre>\n<p> </p>\n<p><strong>提示：</strong></p>\n<ul>  \n   <li><code>1 <= left <= right <= 10<sup>9</sup></code></li>  \n   <li>最多调用  <code>add</code> 和 <code>count</code> 方法 <strong>总计</strong> <code>10<sup>5</sup></code> 次</li>  \n   <li>调用 <code>count</code> 方法至少一次</li>  \n</ul>\n<h2 id=\"思路：-4\">思路：</h2>\n<p>这题我的思路是添加一次整理一次并同时计数，利用java的TreeSet结构，可以快速的定位数据。<br>\n典型的模板题</p>\n<h2 id=\"代码：-4\">代码：</h2>\n<p>java：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">class CountIntervals &#123;\n    TreeSet&lt;Interval&gt; ranges;\n    int cnt;\n    public CountIntervals() &#123;\n        ranges &#x3D; new TreeSet();\n        cnt &#x3D; 0;\n    &#125;\n    public void add(int left, int right) &#123;\n        Iterator&lt;Interval&gt; itr &#x3D; ranges.tailSet(new Interval(0, left - 1)).iterator();\n        while (itr.hasNext()) &#123;\n            Interval iv &#x3D; itr.next();\n            if (right &lt; iv.left) &#123;\n                break;\n            &#125;\n            left &#x3D; Math.min(left, iv.left);\n            right &#x3D; Math.max(right, iv.right);\n            cnt -&#x3D; iv.right - iv.left + 1;\n            itr.remove();\n        &#125;\n        ranges.add(new Interval(left, right));\n        cnt +&#x3D; right - left + 1;\n    &#125;\n    public int count() &#123;\n        return cnt;\n    &#125;\n&#125;\npublic class Interval implements Comparable&lt;Interval&gt; &#123;\n    int left;\n    int right;\n    public Interval(int left, int right) &#123;\n        this.left &#x3D; left;\n        this.right &#x3D; right;\n    &#125;\n    public int compareTo(Interval that) &#123;\n        if (this.right &#x3D;&#x3D; that.right) return this.left - that.left;\n        return this.right - that.right;\n    &#125;\n&#125;</code></pre>\n"}],"PostAsset":[{"_id":"source/_posts/autowiredWaring/2022-03-28-11-30-49-1648438205(1).png","slug":"2022-03-28-11-30-49-1648438205(1).png","post":"cl42z5h5b00013gn65c895mqk","modified":0,"renderable":0},{"_id":"source/_posts/createMyImage/2022-05-31-16-21-41-image.png","slug":"2022-05-31-16-21-41-image.png","post":"cl42z5h5q000i3gn68gspc9so","modified":0,"renderable":0},{"_id":"source/_posts/createMyImage/2022-05-31-16-28-07-image.png","slug":"2022-05-31-16-28-07-image.png","post":"cl42z5h5q000i3gn68gspc9so","modified":0,"renderable":0},{"_id":"source/_posts/createMyImage/2022-05-31-16-29-22-image.png","slug":"2022-05-31-16-29-22-image.png","post":"cl42z5h5q000i3gn68gspc9so","modified":0,"renderable":0},{"_id":"source/_posts/createMyImage/2022-05-31-16-32-54-image.png","slug":"2022-05-31-16-32-54-image.png","post":"cl42z5h5q000i3gn68gspc9so","modified":0,"renderable":0},{"_id":"source/_posts/createMyImage/2022-05-31-17-08-23-image.png","slug":"2022-05-31-17-08-23-image.png","post":"cl42z5h5q000i3gn68gspc9so","modified":0,"renderable":0},{"_id":"source/_posts/createMyImage/2022-05-31-17-11-22-image.png","slug":"2022-05-31-17-11-22-image.png","post":"cl42z5h5q000i3gn68gspc9so","modified":0,"renderable":0},{"_id":"source/_posts/createMyImage/2022-05-31-17-12-17-image.png","slug":"2022-05-31-17-12-17-image.png","post":"cl42z5h5q000i3gn68gspc9so","modified":0,"renderable":0},{"_id":"source/_posts/createMyImage/2022-05-31-17-22-07-image.png","slug":"2022-05-31-17-22-07-image.png","post":"cl42z5h5q000i3gn68gspc9so","modified":0,"renderable":0},{"_id":"source/_posts/createMyImage/2022-05-31-17-30-38-image.png","slug":"2022-05-31-17-30-38-image.png","post":"cl42z5h5q000i3gn68gspc9so","modified":0,"renderable":0},{"_id":"source/_posts/createMyImage/2022-06-01-08-37-12-image.png","slug":"2022-06-01-08-37-12-image.png","post":"cl42z5h5q000i3gn68gspc9so","modified":0,"renderable":0},{"_id":"source/_posts/createMyImage/2022-06-01-08-38-34-image.png","slug":"2022-06-01-08-38-34-image.png","post":"cl42z5h5q000i3gn68gspc9so","modified":0,"renderable":0},{"_id":"source/_posts/createMyImage/2022-06-01-08-39-28-image.png","slug":"2022-06-01-08-39-28-image.png","post":"cl42z5h5q000i3gn68gspc9so","modified":0,"renderable":0},{"_id":"source/_posts/createMyImage/2022-06-01-08-42-46-image.png","slug":"2022-06-01-08-42-46-image.png","post":"cl42z5h5q000i3gn68gspc9so","modified":0,"renderable":0},{"_id":"source/_posts/day20220118/bg.jpeg","slug":"bg.jpeg","post":"cl42z5h5t000p3gn6eku8cya6","modified":0,"renderable":0},{"_id":"source/_posts/day20220119/bg.jpeg","slug":"bg.jpeg","post":"cl42z5h5w000u3gn61b3964mf","modified":0,"renderable":0},{"_id":"source/_posts/day20220120/bg.jpeg","slug":"bg.jpeg","post":"cl42z5h5x000x3gn67501gujd","modified":0,"renderable":0},{"_id":"source/_posts/day20220121/bg.jpeg","slug":"bg.jpeg","post":"cl42z5h6200123gn642q02r3u","modified":0,"renderable":0},{"_id":"source/_posts/day20220213/1536_ex1_upd.jpeg","slug":"1536_ex1_upd.jpeg","post":"cl42z5h6c001t3gn6esa293i7","modified":0,"renderable":0},{"_id":"source/_posts/day20220213/1536_ex2_upd.jpeg","slug":"1536_ex2_upd.jpeg","post":"cl42z5h6c001t3gn6esa293i7","modified":0,"renderable":0},{"_id":"source/_posts/day20220310/bg.jpeg","slug":"bg.jpeg","post":"cl42z5h6l002a3gn67wqqhd2w","modified":0,"renderable":0},{"_id":"source/_posts/dockerComposeInstall/2022-04-21-00-36-46-image.png","slug":"2022-04-21-00-36-46-image.png","post":"cl42z5h6r002r3gn69lojbeh8","modified":0,"renderable":0},{"_id":"source/_posts/dockerComposeInstall/2022-04-21-00-40-56-image.png","slug":"2022-04-21-00-40-56-image.png","post":"cl42z5h6r002r3gn69lojbeh8","modified":0,"renderable":0},{"_id":"source/_posts/dockerComposeInstall/2022-04-21-00-44-14-image.png","slug":"2022-04-21-00-44-14-image.png","post":"cl42z5h6r002r3gn69lojbeh8","modified":0,"renderable":0},{"_id":"source/_posts/dockerInstall/2022-04-20-23-44-07-image.png","slug":"2022-04-20-23-44-07-image.png","post":"cl42z5h6s002t3gn6bsgz26py","modified":0,"renderable":0},{"_id":"source/_posts/dockerInstall/2022-04-20-23-47-39-image.png","slug":"2022-04-20-23-47-39-image.png","post":"cl42z5h6s002t3gn6bsgz26py","modified":0,"renderable":0},{"_id":"source/_posts/dockerInstall/2022-04-20-23-50-06-image.png","slug":"2022-04-20-23-50-06-image.png","post":"cl42z5h6s002t3gn6bsgz26py","modified":0,"renderable":0},{"_id":"source/_posts/dockerInstall/2022-04-21-00-00-59-image.png","slug":"2022-04-21-00-00-59-image.png","post":"cl42z5h6s002t3gn6bsgz26py","modified":0,"renderable":0},{"_id":"source/_posts/dockerInstall/2022-04-21-00-05-16-image.png","slug":"2022-04-21-00-05-16-image.png","post":"cl42z5h6s002t3gn6bsgz26py","modified":0,"renderable":0},{"_id":"source/_posts/dockerInstall/2022-04-21-00-22-21-image.png","slug":"2022-04-21-00-22-21-image.png","post":"cl42z5h6s002t3gn6bsgz26py","modified":0,"renderable":0},{"_id":"source/_posts/dockerInstall/2022-04-21-00-22-43-image.png","slug":"2022-04-21-00-22-43-image.png","post":"cl42z5h6s002t3gn6bsgz26py","modified":0,"renderable":0},{"_id":"source/_posts/iMySQLByDC/2022-04-24-16-20-33-image.png","slug":"2022-04-24-16-20-33-image.png","post":"cl42z5h6w00383gn66m4q5ggd","modified":0,"renderable":0},{"_id":"source/_posts/iMySQLByDC/2022-04-24-16-30-32-image.png","slug":"2022-04-24-16-30-32-image.png","post":"cl42z5h6w00383gn66m4q5ggd","modified":0,"renderable":0},{"_id":"source/_posts/iMySQLByDC/2022-04-24-16-34-24-image.png","slug":"2022-04-24-16-34-24-image.png","post":"cl42z5h6w00383gn66m4q5ggd","modified":0,"renderable":0},{"_id":"source/_posts/iMySQLByDC/2022-04-24-16-45-29-image.png","slug":"2022-04-24-16-45-29-image.png","post":"cl42z5h6w00383gn66m4q5ggd","modified":0,"renderable":0},{"_id":"source/_posts/iMySQLByDC/img.png","slug":"img.png","post":"cl42z5h6w00383gn66m4q5ggd","modified":0,"renderable":0},{"_id":"source/_posts/iNginxByDC/2022-04-21-00-46-47-image.png","slug":"2022-04-21-00-46-47-image.png","post":"cl42z5h6x003c3gn67j847l07","modified":0,"renderable":0},{"_id":"source/_posts/iNginxByDC/2022-04-21-00-47-51-image.png","slug":"2022-04-21-00-47-51-image.png","post":"cl42z5h6x003c3gn67j847l07","modified":0,"renderable":0},{"_id":"source/_posts/iNginxByDC/2022-04-21-01-03-03-image.png","slug":"2022-04-21-01-03-03-image.png","post":"cl42z5h6x003c3gn67j847l07","modified":0,"renderable":0},{"_id":"source/_posts/iNginxByDC/2022-04-21-19-59-02-image.png","slug":"2022-04-21-19-59-02-image.png","post":"cl42z5h6x003c3gn67j847l07","modified":0,"renderable":0},{"_id":"source/_posts/iNginxByDC/2022-04-21-20-12-55-image.png","slug":"2022-04-21-20-12-55-image.png","post":"cl42z5h6x003c3gn67j847l07","modified":0,"renderable":0},{"_id":"source/_posts/iNginxByDC/2022-04-21-20-43-55-image.png","slug":"2022-04-21-20-43-55-image.png","post":"cl42z5h6x003c3gn67j847l07","modified":0,"renderable":0},{"_id":"source/_posts/iNginxByDC/2022-04-24-15-34-45-image.png","slug":"2022-04-24-15-34-45-image.png","post":"cl42z5h6x003c3gn67j847l07","modified":0,"renderable":0},{"_id":"source/_posts/iRedisByDC/2022-04-24-16-57-51-image.png","slug":"2022-04-24-16-57-51-image.png","post":"cl42z5h6z003f3gn61xgv7tc1","modified":0,"renderable":0},{"_id":"source/_posts/iRedisByDC/2022-04-24-17-04-13-image.png","slug":"2022-04-24-17-04-13-image.png","post":"cl42z5h6z003f3gn61xgv7tc1","modified":0,"renderable":0},{"_id":"source/_posts/iRedisByDC/2022-04-24-17-10-52-image.png","slug":"2022-04-24-17-10-52-image.png","post":"cl42z5h6z003f3gn61xgv7tc1","modified":0,"renderable":0},{"_id":"source/_posts/iRedisByDC/2022-04-24-17-12-56-image.png","slug":"2022-04-24-17-12-56-image.png","post":"cl42z5h6z003f3gn61xgv7tc1","modified":0,"renderable":0},{"_id":"source/_posts/iRedisByDC/2022-04-24-17-14-15-image.png","slug":"2022-04-24-17-14-15-image.png","post":"cl42z5h6z003f3gn61xgv7tc1","modified":0,"renderable":0},{"_id":"source/_posts/inHexoByOsDeepin/image-20220603141423311.png","slug":"image-20220603141423311.png","post":"cl42z5h71003k3gn6fufjb1ib","modified":0,"renderable":0},{"_id":"source/_posts/inHexoByOsDeepin/image-20220603141527169.png","slug":"image-20220603141527169.png","post":"cl42z5h71003k3gn6fufjb1ib","modified":0,"renderable":0},{"_id":"source/_posts/inHexoByOsDeepin/image-20220603141613298.png","slug":"image-20220603141613298.png","post":"cl42z5h71003k3gn6fufjb1ib","modified":0,"renderable":0},{"_id":"source/_posts/inGitByOsDeepin/image-20220603103757605.png","slug":"image-20220603103757605.png","post":"cl42z5h72003n3gn63x5hg0yi","modified":0,"renderable":0},{"_id":"source/_posts/inGitByOsDeepin/image-20220603103959058.png","slug":"image-20220603103959058.png","post":"cl42z5h72003n3gn63x5hg0yi","modified":0,"renderable":0},{"_id":"source/_posts/inGitByOsDeepin/image-20220603104225094.png","slug":"image-20220603104225094.png","post":"cl42z5h72003n3gn63x5hg0yi","modified":0,"renderable":0},{"_id":"source/_posts/inGitByOsDeepin/image-20220603104335664.png","slug":"image-20220603104335664.png","post":"cl42z5h72003n3gn63x5hg0yi","modified":0,"renderable":0},{"_id":"source/_posts/inGitByOsDeepin/image-20220603104447770.png","slug":"image-20220603104447770.png","post":"cl42z5h72003n3gn63x5hg0yi","modified":0,"renderable":0},{"_id":"source/_posts/inJdkByOsDeepin/image-20220603015920009.png","slug":"image-20220603015920009.png","post":"cl42z5h73003r3gn6c2fafbfu","modified":0,"renderable":0},{"_id":"source/_posts/inJdkByOsDeepin/image-20220603020439325.png","slug":"image-20220603020439325.png","post":"cl42z5h73003r3gn6c2fafbfu","modified":0,"renderable":0},{"_id":"source/_posts/inJdkByOsDeepin/image-20220603021925685.png","slug":"image-20220603021925685.png","post":"cl42z5h73003r3gn6c2fafbfu","modified":0,"renderable":0},{"_id":"source/_posts/inJdkByOsDeepin/image-20220603022022217.png","slug":"image-20220603022022217.png","post":"cl42z5h73003r3gn6c2fafbfu","modified":0,"renderable":0},{"_id":"source/_posts/inMavenByOsDeepin/image-20220603115702494.png","slug":"image-20220603115702494.png","post":"cl42z5h74003z3gn6bodf1zr3","modified":0,"renderable":0},{"_id":"source/_posts/inMavenByOsDeepin/image-20220603120000596.png","slug":"image-20220603120000596.png","post":"cl42z5h74003z3gn6bodf1zr3","modified":0,"renderable":0},{"_id":"source/_posts/inMavenByOsDeepin/image-20220603120156243.png","slug":"image-20220603120156243.png","post":"cl42z5h74003z3gn6bodf1zr3","modified":0,"renderable":0},{"_id":"source/_posts/inMavenByOsDeepin/image-20220603120347751.png","slug":"image-20220603120347751.png","post":"cl42z5h74003z3gn6bodf1zr3","modified":0,"renderable":0},{"_id":"source/_posts/inMavenByOsDeepin/image-20220603121051155.png","slug":"image-20220603121051155.png","post":"cl42z5h74003z3gn6bodf1zr3","modified":0,"renderable":0},{"_id":"source/_posts/inMavenByOsDeepin/image-20220603121153205.png","slug":"image-20220603121153205.png","post":"cl42z5h74003z3gn6bodf1zr3","modified":0,"renderable":0},{"_id":"source/_posts/inMavenByOsDeepin/image-20220603121458972.png","slug":"image-20220603121458972.png","post":"cl42z5h74003z3gn6bodf1zr3","modified":0,"renderable":0},{"_id":"source/_posts/inMavenByOsDeepin/image-20220603122200505.png","slug":"image-20220603122200505.png","post":"cl42z5h74003z3gn6bodf1zr3","modified":0,"renderable":0},{"_id":"source/_posts/inMavenByOsDeepin/image-20220603122859128.png","slug":"image-20220603122859128.png","post":"cl42z5h74003z3gn6bodf1zr3","modified":0,"renderable":0},{"_id":"source/_posts/inNodejsByOsDeepin/image-20220603110634896.png","slug":"image-20220603110634896.png","post":"cl42z5h7500433gn6c2dzgwal","modified":0,"renderable":0},{"_id":"source/_posts/inNodejsByOsDeepin/image-20220603111656347.png","slug":"image-20220603111656347.png","post":"cl42z5h7500433gn6c2dzgwal","modified":0,"renderable":0},{"_id":"source/_posts/inNodejsByOsDeepin/image-20220603112001543.png","slug":"image-20220603112001543.png","post":"cl42z5h7500433gn6c2dzgwal","modified":0,"renderable":0},{"_id":"source/_posts/inNodejsByOsDeepin/image-20220603112153367.png","slug":"image-20220603112153367.png","post":"cl42z5h7500433gn6c2dzgwal","modified":0,"renderable":0},{"_id":"source/_posts/inNodejsByOsDeepin/image-20220603112904096.png","slug":"image-20220603112904096.png","post":"cl42z5h7500433gn6c2dzgwal","modified":0,"renderable":0},{"_id":"source/_posts/inNodejsByOsDeepin/image-20220603113034176.png","slug":"image-20220603113034176.png","post":"cl42z5h7500433gn6c2dzgwal","modified":0,"renderable":0},{"_id":"source/_posts/inNodejsByOsDeepin/image-20220603113454241.png","slug":"image-20220603113454241.png","post":"cl42z5h7500433gn6c2dzgwal","modified":0,"renderable":0},{"_id":"source/_posts/inRKE/2022-05-04-16-24-28-image.png","slug":"2022-05-04-16-24-28-image.png","post":"cl42z5h7600473gn63phlgcup","modified":0,"renderable":0},{"_id":"source/_posts/inRKE/2022-05-04-17-23-24-image.png","slug":"2022-05-04-17-23-24-image.png","post":"cl42z5h7600473gn63phlgcup","modified":0,"renderable":0},{"_id":"source/_posts/inRKE/2022-05-04-17-27-23-image.png","slug":"2022-05-04-17-27-23-image.png","post":"cl42z5h7600473gn63phlgcup","modified":0,"renderable":0},{"_id":"source/_posts/inRKE/2022-05-04-17-33-11-image.png","slug":"2022-05-04-17-33-11-image.png","post":"cl42z5h7600473gn63phlgcup","modified":0,"renderable":0},{"_id":"source/_posts/inRKE/2022-05-04-17-38-29-image.png","slug":"2022-05-04-17-38-29-image.png","post":"cl42z5h7600473gn63phlgcup","modified":0,"renderable":0},{"_id":"source/_posts/inRKE/2022-05-04-17-40-07-image.png","slug":"2022-05-04-17-40-07-image.png","post":"cl42z5h7600473gn63phlgcup","modified":0,"renderable":0},{"_id":"source/_posts/inRKE/2022-05-04-17-46-31-image.png","slug":"2022-05-04-17-46-31-image.png","post":"cl42z5h7600473gn63phlgcup","modified":0,"renderable":0},{"_id":"source/_posts/inRKE/2022-05-04-19-41-19-image.png","slug":"2022-05-04-19-41-19-image.png","post":"cl42z5h7600473gn63phlgcup","modified":0,"renderable":0},{"_id":"source/_posts/inRKE/2022-05-04-19-47-43-image.png","slug":"2022-05-04-19-47-43-image.png","post":"cl42z5h7600473gn63phlgcup","modified":0,"renderable":0},{"_id":"source/_posts/inRKE/2022-05-04-19-48-18-image.png","slug":"2022-05-04-19-48-18-image.png","post":"cl42z5h7600473gn63phlgcup","modified":0,"renderable":0},{"_id":"source/_posts/inRKE/2022-05-04-20-50-13-image.png","slug":"2022-05-04-20-50-13-image.png","post":"cl42z5h7600473gn63phlgcup","modified":0,"renderable":0},{"_id":"source/_posts/inRKE/2022-05-04-20-50-57-image.png","slug":"2022-05-04-20-50-57-image.png","post":"cl42z5h7600473gn63phlgcup","modified":0,"renderable":0},{"_id":"source/_posts/inVueByOsDeepin/image-20220603114033774.png","slug":"image-20220603114033774.png","post":"cl42z5h78004e3gn63oy68a0y","modified":0,"renderable":0},{"_id":"source/_posts/inVueByOsDeepin/image-20220603114219499.png","slug":"image-20220603114219499.png","post":"cl42z5h78004e3gn63oy68a0y","modified":0,"renderable":0},{"_id":"source/_posts/inVueByOsDeepin/image-20220603114513508.png","slug":"image-20220603114513508.png","post":"cl42z5h78004e3gn63oy68a0y","modified":0,"renderable":0},{"_id":"source/_posts/inVueByOsDeepin/image-20220603114616673.png","slug":"image-20220603114616673.png","post":"cl42z5h78004e3gn63oy68a0y","modified":0,"renderable":0},{"_id":"source/_posts/influxdbInstall/2022-03-12-18-28-41-image.png","slug":"2022-03-12-18-28-41-image.png","post":"cl42z5h79004h3gn6ayqa6qrt","modified":0,"renderable":0},{"_id":"source/_posts/influxdbInstall/2022-03-12-18-41-44-image.png","slug":"2022-03-12-18-41-44-image.png","post":"cl42z5h79004h3gn6ayqa6qrt","modified":0,"renderable":0},{"_id":"source/_posts/influxdbInstall/2022-03-12-18-42-25-image.png","slug":"2022-03-12-18-42-25-image.png","post":"cl42z5h79004h3gn6ayqa6qrt","modified":0,"renderable":0},{"_id":"source/_posts/influxdbInstall/2022-03-12-18-52-39-image.png","slug":"2022-03-12-18-52-39-image.png","post":"cl42z5h79004h3gn6ayqa6qrt","modified":0,"renderable":0},{"_id":"source/_posts/influxdbInstall/2022-03-12-18-54-58-image.png","slug":"2022-03-12-18-54-58-image.png","post":"cl42z5h79004h3gn6ayqa6qrt","modified":0,"renderable":0},{"_id":"source/_posts/influxdbInstall/2022-03-12-18-56-23-image.png","slug":"2022-03-12-18-56-23-image.png","post":"cl42z5h79004h3gn6ayqa6qrt","modified":0,"renderable":0},{"_id":"source/_posts/jpaCompositePK/bg.jpg","slug":"bg.jpg","post":"cl42z5h7a004k3gn61i9814gm","modified":0,"renderable":0},{"_id":"source/_posts/leetcode204/Sieve_of_Eratosthenes_animation.gif","slug":"Sieve_of_Eratosthenes_animation.gif","post":"cl42z5h7d004t3gn6a5o86v6c","modified":0,"renderable":0},{"_id":"source/_posts/nexusCreate/1A658347.png","slug":"1A658347.png","post":"cl42z5h7m005k3gn6d0hkgigd","modified":0,"renderable":0},{"_id":"source/_posts/nexusCreate/bg.jpeg","slug":"bg.jpeg","post":"cl42z5h7m005k3gn6d0hkgigd","modified":0,"renderable":0},{"_id":"source/_posts/nexusCreate/image-20220112202513617.png","slug":"image-20220112202513617.png","post":"cl42z5h7m005k3gn6d0hkgigd","modified":0,"renderable":0},{"_id":"source/_posts/nexusCreate/image-20220112203927784.png","slug":"image-20220112203927784.png","post":"cl42z5h7m005k3gn6d0hkgigd","modified":0,"renderable":0},{"_id":"source/_posts/nexusCreate/image-20220112204407509.png","slug":"image-20220112204407509.png","post":"cl42z5h7m005k3gn6d0hkgigd","modified":0,"renderable":0},{"_id":"source/_posts/nexusCreate/image-20220112204921432.png","slug":"image-20220112204921432.png","post":"cl42z5h7m005k3gn6d0hkgigd","modified":0,"renderable":0},{"_id":"source/_posts/nexusCreate/image-20220112205557025.png","slug":"image-20220112205557025.png","post":"cl42z5h7m005k3gn6d0hkgigd","modified":0,"renderable":0},{"_id":"source/_posts/nexusCreate/image-20220112211546086.png","slug":"image-20220112211546086.png","post":"cl42z5h7m005k3gn6d0hkgigd","modified":0,"renderable":0},{"_id":"source/_posts/nexusCreate/image-20220112211948810.png","slug":"image-20220112211948810.png","post":"cl42z5h7m005k3gn6d0hkgigd","modified":0,"renderable":0},{"_id":"source/_posts/nexusCreate/image-20220112212243615.png","slug":"image-20220112212243615.png","post":"cl42z5h7m005k3gn6d0hkgigd","modified":0,"renderable":0},{"_id":"source/_posts/nexusCreate/image-20220112212410144.png","slug":"image-20220112212410144.png","post":"cl42z5h7m005k3gn6d0hkgigd","modified":0,"renderable":0},{"_id":"source/_posts/nexusCreate/image-20220112214220341.png","slug":"image-20220112214220341.png","post":"cl42z5h7m005k3gn6d0hkgigd","modified":0,"renderable":0},{"_id":"source/_posts/nexusCreate/image-20220112214506743.png","slug":"image-20220112214506743.png","post":"cl42z5h7m005k3gn6d0hkgigd","modified":0,"renderable":0},{"_id":"source/_posts/nexusCreate/image-20220112214637528.png","slug":"image-20220112214637528.png","post":"cl42z5h7m005k3gn6d0hkgigd","modified":0,"renderable":0},{"_id":"source/_posts/nexusCreate/image-20220112214717867.png","slug":"image-20220112214717867.png","post":"cl42z5h7m005k3gn6d0hkgigd","modified":0,"renderable":0},{"_id":"source/_posts/nexusCreate/image-20220112214820826.png","slug":"image-20220112214820826.png","post":"cl42z5h7m005k3gn6d0hkgigd","modified":0,"renderable":0},{"_id":"source/_posts/nexusCreate/image-20220112214831857.png","slug":"image-20220112214831857.png","post":"cl42z5h7m005k3gn6d0hkgigd","modified":0,"renderable":0},{"_id":"source/_posts/nexusCreate/image-20220112215708898.png","slug":"image-20220112215708898.png","post":"cl42z5h7m005k3gn6d0hkgigd","modified":0,"renderable":0},{"_id":"source/_posts/nexusCreate/image-20220112215809631.png","slug":"image-20220112215809631.png","post":"cl42z5h7m005k3gn6d0hkgigd","modified":0,"renderable":0},{"_id":"source/_posts/nexusCreate/image-20220112215951755.png","slug":"image-20220112215951755.png","post":"cl42z5h7m005k3gn6d0hkgigd","modified":0,"renderable":0},{"_id":"source/_posts/nexusCreate/image-20220112220131151.png","slug":"image-20220112220131151.png","post":"cl42z5h7m005k3gn6d0hkgigd","modified":0,"renderable":0},{"_id":"source/_posts/nexusCreate/image-20220112220511830.png","slug":"image-20220112220511830.png","post":"cl42z5h7m005k3gn6d0hkgigd","modified":0,"renderable":0},{"_id":"source/_posts/nexusCreate/image-20220112220741095.png","slug":"image-20220112220741095.png","post":"cl42z5h7m005k3gn6d0hkgigd","modified":0,"renderable":0},{"_id":"source/_posts/nexusCreate/image-20220112221401367.png","slug":"image-20220112221401367.png","post":"cl42z5h7m005k3gn6d0hkgigd","modified":0,"renderable":0},{"_id":"source/_posts/nexusCreate/image-20220112221517343.png","slug":"image-20220112221517343.png","post":"cl42z5h7m005k3gn6d0hkgigd","modified":0,"renderable":0},{"_id":"source/_posts/nexusCreate/image-20220112221637473.png","slug":"image-20220112221637473.png","post":"cl42z5h7m005k3gn6d0hkgigd","modified":0,"renderable":0},{"_id":"source/_posts/nexusCreate/image-20220112221849871.png","slug":"image-20220112221849871.png","post":"cl42z5h7m005k3gn6d0hkgigd","modified":0,"renderable":0},{"_id":"source/_posts/nexusCreate/image-20220112223312451.png","slug":"image-20220112223312451.png","post":"cl42z5h7m005k3gn6d0hkgigd","modified":0,"renderable":0},{"_id":"source/_posts/nexusCreate/image-20220112224909515.png","slug":"image-20220112224909515.png","post":"cl42z5h7m005k3gn6d0hkgigd","modified":0,"renderable":0},{"_id":"source/_posts/nexusCreate/image-20220112230213213.png","slug":"image-20220112230213213.png","post":"cl42z5h7m005k3gn6d0hkgigd","modified":0,"renderable":0},{"_id":"source/_posts/nexusCreate/image-20220112230645860.png","slug":"image-20220112230645860.png","post":"cl42z5h7m005k3gn6d0hkgigd","modified":0,"renderable":0},{"_id":"source/_posts/phpDeploy/2022-04-30-16-52-00-image.png","slug":"2022-04-30-16-52-00-image.png","post":"cl42z5h7n005n3gn6ej2xaciq","modified":0,"renderable":0},{"_id":"source/_posts/phpDeploy/2022-04-30-16-54-56-image.png","slug":"2022-04-30-16-54-56-image.png","post":"cl42z5h7n005n3gn6ej2xaciq","modified":0,"renderable":0},{"_id":"source/_posts/phpDeploy/2022-04-30-20-12-36-image.png","slug":"2022-04-30-20-12-36-image.png","post":"cl42z5h7n005n3gn6ej2xaciq","modified":0,"renderable":0},{"_id":"source/_posts/phpDeploy/2022-04-30-20-14-03-image.png","slug":"2022-04-30-20-14-03-image.png","post":"cl42z5h7n005n3gn6ej2xaciq","modified":0,"renderable":0},{"_id":"source/_posts/phpDeploy/2022-04-30-20-20-22-image.png","slug":"2022-04-30-20-20-22-image.png","post":"cl42z5h7n005n3gn6ej2xaciq","modified":0,"renderable":0},{"_id":"source/_posts/phpDeploy/2022-04-30-20-32-37-image.png","slug":"2022-04-30-20-32-37-image.png","post":"cl42z5h7n005n3gn6ej2xaciq","modified":0,"renderable":0},{"_id":"source/_posts/phpDeploy/2022-04-30-20-35-23-image.png","slug":"2022-04-30-20-35-23-image.png","post":"cl42z5h7n005n3gn6ej2xaciq","modified":0,"renderable":0},{"_id":"source/_posts/phpDeploy/2022-04-30-20-42-16-image.png","slug":"2022-04-30-20-42-16-image.png","post":"cl42z5h7n005n3gn6ej2xaciq","modified":0,"renderable":0},{"_id":"source/_posts/phpDeploy/2022-04-30-20-44-58-image.png","slug":"2022-04-30-20-44-58-image.png","post":"cl42z5h7n005n3gn6ej2xaciq","modified":0,"renderable":0},{"_id":"source/_posts/pyControl/bg.jpeg","slug":"bg.jpeg","post":"cl42z5h7r00603gn690azfd27","modified":0,"renderable":0},{"_id":"source/_posts/pyListSort/bg.jpeg","slug":"bg.jpeg","post":"cl42z5h7u00683gn6de6x8vms","modified":0,"renderable":0},{"_id":"source/_posts/question20220310-1/bg.jpeg","slug":"bg.jpeg","post":"cl42z5h80006j3gn67o5d3pma","modified":0,"renderable":0},{"_id":"source/_posts/sublimeText4Purchase/bg.jpeg","slug":"bg.jpeg","post":"cl42z5h85006z3gn6810w4ysx","modified":0,"renderable":0},{"_id":"source/_posts/sublimeText4Purchase/image-20220114153619254.png","slug":"image-20220114153619254.png","post":"cl42z5h85006z3gn6810w4ysx","modified":0,"renderable":0},{"_id":"source/_posts/sublimeText4Purchase/image-20220114154528250.png","slug":"image-20220114154528250.png","post":"cl42z5h85006z3gn6810w4ysx","modified":0,"renderable":0},{"_id":"source/_posts/sublimeText4Purchase/image-20220114154843108.png","slug":"image-20220114154843108.png","post":"cl42z5h85006z3gn6810w4ysx","modified":0,"renderable":0},{"_id":"source/_posts/sublimeText4Purchase/image-20220114155104130.png","slug":"image-20220114155104130.png","post":"cl42z5h85006z3gn6810w4ysx","modified":0,"renderable":0},{"_id":"source/_posts/sublimeText4Purchase/image-20220114155245648.png","slug":"image-20220114155245648.png","post":"cl42z5h85006z3gn6810w4ysx","modified":0,"renderable":0},{"_id":"source/_posts/sublimeText4Purchase/image-20220114155341371.png","slug":"image-20220114155341371.png","post":"cl42z5h85006z3gn6810w4ysx","modified":0,"renderable":0},{"_id":"source/_posts/sublimeText4Purchase/image-20220114155558214.png","slug":"image-20220114155558214.png","post":"cl42z5h85006z3gn6810w4ysx","modified":0,"renderable":0},{"_id":"source/_posts/sublimeText4Purchase/img.png","slug":"img.png","post":"cl42z5h85006z3gn6810w4ysx","modified":0,"renderable":0}],"PostCategory":[{"post_id":"cl42z5h5b00013gn65c895mqk","category_id":"cl42z5h5g00043gn66vfr2c22","_id":"cl42z5h5r000j3gn6hpbbaplf"},{"post_id":"cl42z5h5e00033gn68tizfhla","category_id":"cl42z5h5o000c3gn6eq0c404b","_id":"cl42z5h5u000q3gn6ha75bi8z"},{"post_id":"cl42z5h5q000i3gn68gspc9so","category_id":"cl42z5h67001f3gn6a06jcrmg","_id":"cl42z5h6d001v3gn68a7ydc76"},{"post_id":"cl42z5h5s000n3gn6e8sr4viy","category_id":"cl42z5h6a001n3gn67hh47i4j","_id":"cl42z5h6k00263gn62o7u14f1"},{"post_id":"cl42z5h5j00073gn6ec3g7e9j","category_id":"cl42z5h5r000k3gn6aze31mnl","_id":"cl42z5h6n002e3gn6ds2u7t13"},{"post_id":"cl42z5h5j00073gn6ec3g7e9j","category_id":"cl42z5h6d001y3gn6eia98vaz","_id":"cl42z5h6o002h3gn6eqk9cd9i"},{"post_id":"cl42z5h5l00093gn69gggera3","category_id":"cl42z5h5r000k3gn6aze31mnl","_id":"cl42z5h6s002v3gn62d4k0yr6"},{"post_id":"cl42z5h5l00093gn69gggera3","category_id":"cl42z5h6d001y3gn6eia98vaz","_id":"cl42z5h6t002y3gn6e1791app"},{"post_id":"cl42z5h6p002o3gn6571nhbvd","category_id":"cl42z5h5o000c3gn6eq0c404b","_id":"cl42z5h6u00323gn68lt58eo3"},{"post_id":"cl42z5h6r002r3gn69lojbeh8","category_id":"cl42z5h67001f3gn6a06jcrmg","_id":"cl42z5h6v00353gn6gbxtcsqb"},{"post_id":"cl42z5h6s002t3gn6bsgz26py","category_id":"cl42z5h67001f3gn6a06jcrmg","_id":"cl42z5h6x003a3gn6fhow3j0c"},{"post_id":"cl42z5h6t002x3gn6gtxm4f2j","category_id":"cl42z5h5r000k3gn6aze31mnl","_id":"cl42z5h6z003d3gn60u55bk84"},{"post_id":"cl42z5h6t002x3gn6gtxm4f2j","category_id":"cl42z5h6d001y3gn6eia98vaz","_id":"cl42z5h71003h3gn61mox30ow"},{"post_id":"cl42z5h5n000b3gn6137sbqec","category_id":"cl42z5h5r000k3gn6aze31mnl","_id":"cl42z5h72003l3gn60srj62le"},{"post_id":"cl42z5h5n000b3gn6137sbqec","category_id":"cl42z5h6d001y3gn6eia98vaz","_id":"cl42z5h73003p3gn6627j3jg6"},{"post_id":"cl42z5h6w00383gn66m4q5ggd","category_id":"cl42z5h67001f3gn6a06jcrmg","_id":"cl42z5h74003t3gn6fa5u0wqg"},{"post_id":"cl42z5h6x003c3gn67j847l07","category_id":"cl42z5h67001f3gn6a06jcrmg","_id":"cl42z5h74003x3gn62lvj8nq8"},{"post_id":"cl42z5h6z003f3gn61xgv7tc1","category_id":"cl42z5h67001f3gn6a06jcrmg","_id":"cl42z5h7500413gn6alnp0avt"},{"post_id":"cl42z5h5p000g3gn65xqq0k2t","category_id":"cl42z5h5r000k3gn6aze31mnl","_id":"cl42z5h7600453gn65z5rd5uj"},{"post_id":"cl42z5h5p000g3gn65xqq0k2t","category_id":"cl42z5h6d001y3gn6eia98vaz","_id":"cl42z5h7700493gn6bz3zh2lh"},{"post_id":"cl42z5h7b004n3gn61q7dhv11","category_id":"cl42z5h5r000k3gn6aze31mnl","_id":"cl42z5h7e004x3gn655hn51mj"},{"post_id":"cl42z5h7b004n3gn61q7dhv11","category_id":"cl42z5h6d001y3gn6eia98vaz","_id":"cl42z5h7g00513gn6ewpv8w6x"},{"post_id":"cl42z5h7c004q3gn6aq3b1rqh","category_id":"cl42z5h5r000k3gn6aze31mnl","_id":"cl42z5h7i00553gn68vlw5p33"},{"post_id":"cl42z5h7c004q3gn6aq3b1rqh","category_id":"cl42z5h6d001y3gn6eia98vaz","_id":"cl42z5h7j00593gn639lvfivk"},{"post_id":"cl42z5h7d004t3gn6a5o86v6c","category_id":"cl42z5h5r000k3gn6aze31mnl","_id":"cl42z5h7l005d3gn60nrlfv46"},{"post_id":"cl42z5h7d004t3gn6a5o86v6c","category_id":"cl42z5h6d001y3gn6eia98vaz","_id":"cl42z5h7m005h3gn678xgducr"},{"post_id":"cl42z5h7d004w3gn6aeoa9dmm","category_id":"cl42z5h5r000k3gn6aze31mnl","_id":"cl42z5h7n005l3gn6fc9u6mpj"},{"post_id":"cl42z5h7d004w3gn6aeoa9dmm","category_id":"cl42z5h6d001y3gn6eia98vaz","_id":"cl42z5h7o005p3gn6flyifjc8"},{"post_id":"cl42z5h6i00223gn6di89hxjj","category_id":"cl42z5h5r000k3gn6aze31mnl","_id":"cl42z5h7q005t3gn67b6ybnak"},{"post_id":"cl42z5h6i00223gn6di89hxjj","category_id":"cl42z5h6d001y3gn6eia98vaz","_id":"cl42z5h7r005x3gn69j8tejmx"},{"post_id":"cl42z5h6i00223gn6di89hxjj","category_id":"cl42z5h7h00523gn61eecb9s7","_id":"cl42z5h7s00613gn63m4k2xfw"},{"post_id":"cl42z5h6k00253gn63vlkh7ck","category_id":"cl42z5h5r000k3gn6aze31mnl","_id":"cl42z5h7t00653gn62wvddbao"},{"post_id":"cl42z5h6k00253gn63vlkh7ck","category_id":"cl42z5h6d001y3gn6eia98vaz","_id":"cl42z5h7v00693gn63mbvbqh9"},{"post_id":"cl42z5h6k00253gn63vlkh7ck","category_id":"cl42z5h7h00523gn61eecb9s7","_id":"cl42z5h7x006c3gn6h39u8050"},{"post_id":"cl42z5h6l002a3gn67wqqhd2w","category_id":"cl42z5h5r000k3gn6aze31mnl","_id":"cl42z5h80006h3gn65x9y3pfv"},{"post_id":"cl42z5h6l002a3gn67wqqhd2w","category_id":"cl42z5h6d001y3gn6eia98vaz","_id":"cl42z5h81006k3gn605v49xqr"},{"post_id":"cl42z5h6l002a3gn67wqqhd2w","category_id":"cl42z5h7h00523gn61eecb9s7","_id":"cl42z5h82006p3gn64raf36cq"},{"post_id":"cl42z5h7p005s3gn659emfefi","category_id":"cl42z5h5o000c3gn6eq0c404b","_id":"cl42z5h83006s3gn62rm05ti4"},{"post_id":"cl42z5h5t000p3gn6eku8cya6","category_id":"cl42z5h5r000k3gn6aze31mnl","_id":"cl42z5h84006x3gn6992z6tas"},{"post_id":"cl42z5h5t000p3gn6eku8cya6","category_id":"cl42z5h6d001y3gn6eia98vaz","_id":"cl42z5h8500703gn64o8vbke1"},{"post_id":"cl42z5h5t000p3gn6eku8cya6","category_id":"cl42z5h7h00523gn61eecb9s7","_id":"cl42z5h8700753gn6hcrlhzfx"},{"post_id":"cl42z5h6m002c3gn6fulcfn40","category_id":"cl42z5h5r000k3gn6aze31mnl","_id":"cl42z5h8700783gn6ey9n035r"},{"post_id":"cl42z5h6m002c3gn6fulcfn40","category_id":"cl42z5h6d001y3gn6eia98vaz","_id":"cl42z5h88007c3gn67g8p984h"},{"post_id":"cl42z5h6m002c3gn6fulcfn40","category_id":"cl42z5h7h00523gn61eecb9s7","_id":"cl42z5h88007e3gn6aftd80ug"},{"post_id":"cl42z5h6n002g3gn6fadn70ei","category_id":"cl42z5h5r000k3gn6aze31mnl","_id":"cl42z5h89007i3gn65ukm88sq"},{"post_id":"cl42z5h6n002g3gn6fadn70ei","category_id":"cl42z5h6d001y3gn6eia98vaz","_id":"cl42z5h89007k3gn6fhcp4rod"},{"post_id":"cl42z5h6n002g3gn6fadn70ei","category_id":"cl42z5h7h00523gn61eecb9s7","_id":"cl42z5h89007o3gn69f7u17c4"},{"post_id":"cl42z5h5w000u3gn61b3964mf","category_id":"cl42z5h5r000k3gn6aze31mnl","_id":"cl42z5h8a007q3gn6ghbr0z7o"},{"post_id":"cl42z5h5w000u3gn61b3964mf","category_id":"cl42z5h6d001y3gn6eia98vaz","_id":"cl42z5h8a007u3gn67aef5f63"},{"post_id":"cl42z5h5w000u3gn61b3964mf","category_id":"cl42z5h7h00523gn61eecb9s7","_id":"cl42z5h8a007w3gn61tn22z6c"},{"post_id":"cl42z5h81006o3gn67xlabz22","category_id":"cl42z5h5r000k3gn6aze31mnl","_id":"cl42z5h8b007z3gn6g6ai9kno"},{"post_id":"cl42z5h81006o3gn67xlabz22","category_id":"cl42z5h6d001y3gn6eia98vaz","_id":"cl42z5h8b00823gn615ca1ee5"},{"post_id":"cl42z5h6o002j3gn60kvd8er2","category_id":"cl42z5h5r000k3gn6aze31mnl","_id":"cl42z5h8c00853gn6c7fifltf"},{"post_id":"cl42z5h6o002j3gn60kvd8er2","category_id":"cl42z5h6d001y3gn6eia98vaz","_id":"cl42z5h8c00873gn6b6ix4kbq"},{"post_id":"cl42z5h6o002j3gn60kvd8er2","category_id":"cl42z5h7h00523gn61eecb9s7","_id":"cl42z5h8d008a3gn6gt4yfk0y"},{"post_id":"cl42z5h83006v3gn6et8w47e0","category_id":"cl42z5h5o000c3gn6eq0c404b","_id":"cl42z5h8d008c3gn6ezen0iu2"},{"post_id":"cl42z5h6p002m3gn68nnz20rl","category_id":"cl42z5h5r000k3gn6aze31mnl","_id":"cl42z5h8e008f3gn6htp9fw3x"},{"post_id":"cl42z5h6p002m3gn68nnz20rl","category_id":"cl42z5h6d001y3gn6eia98vaz","_id":"cl42z5h8e008h3gn6h9d85g9k"},{"post_id":"cl42z5h6p002m3gn68nnz20rl","category_id":"cl42z5h7h00523gn61eecb9s7","_id":"cl42z5h8e008j3gn6dlfp8a2n"},{"post_id":"cl42z5h5x000x3gn67501gujd","category_id":"cl42z5h5r000k3gn6aze31mnl","_id":"cl42z5h8f008m3gn63464d4y8"},{"post_id":"cl42z5h5x000x3gn67501gujd","category_id":"cl42z5h6d001y3gn6eia98vaz","_id":"cl42z5h8f008o3gn67ktxh3mb"},{"post_id":"cl42z5h5x000x3gn67501gujd","category_id":"cl42z5h7h00523gn61eecb9s7","_id":"cl42z5h8f008r3gn6fgy856jc"},{"post_id":"cl42z5h6200123gn642q02r3u","category_id":"cl42z5h5r000k3gn6aze31mnl","_id":"cl42z5h8f008t3gn6czl3huv3"},{"post_id":"cl42z5h6200123gn642q02r3u","category_id":"cl42z5h6d001y3gn6eia98vaz","_id":"cl42z5h8f008w3gn6327ydhir"},{"post_id":"cl42z5h6200123gn642q02r3u","category_id":"cl42z5h7h00523gn61eecb9s7","_id":"cl42z5h8f008y3gn61xdr947o"},{"post_id":"cl42z5h6u00303gn64b1gb6qi","category_id":"cl42z5h88007g3gn63nh40je4","_id":"cl42z5h8h00913gn66ruk56dh"},{"post_id":"cl42z5h6400153gn66s5t0zpt","category_id":"cl42z5h5r000k3gn6aze31mnl","_id":"cl42z5h8h00933gn65sa7hdrq"},{"post_id":"cl42z5h6400153gn66s5t0zpt","category_id":"cl42z5h6d001y3gn6eia98vaz","_id":"cl42z5h8h00963gn61qghcrc6"},{"post_id":"cl42z5h6400153gn66s5t0zpt","category_id":"cl42z5h7h00523gn61eecb9s7","_id":"cl42z5h8h00983gn6cmlrfkgs"},{"post_id":"cl42z5h71003k3gn6fufjb1ib","category_id":"cl42z5h8a007s3gn60wul9r33","_id":"cl42z5h8i009b3gn675wp7dly"},{"post_id":"cl42z5h65001a3gn6asb3ekoz","category_id":"cl42z5h5r000k3gn6aze31mnl","_id":"cl42z5h8i009d3gn67dbe8xbb"},{"post_id":"cl42z5h65001a3gn6asb3ekoz","category_id":"cl42z5h6d001y3gn6eia98vaz","_id":"cl42z5h8i009g3gn6heaqfw5w"},{"post_id":"cl42z5h65001a3gn6asb3ekoz","category_id":"cl42z5h7h00523gn61eecb9s7","_id":"cl42z5h8i009h3gn69enxc42y"},{"post_id":"cl42z5h72003n3gn63x5hg0yi","category_id":"cl42z5h8a007s3gn60wul9r33","_id":"cl42z5h8j009j3gn6g8omg7gc"},{"post_id":"cl42z5h73003r3gn6c2fafbfu","category_id":"cl42z5h8a007s3gn60wul9r33","_id":"cl42z5h8j009k3gn6hrkdd0xz"},{"post_id":"cl42z5h74003v3gn6beof8ah6","category_id":"cl42z5h8d008e3gn6fl248hoo","_id":"cl42z5h8j009m3gn60srq6q48"},{"post_id":"cl42z5h74003z3gn6bodf1zr3","category_id":"cl42z5h8a007s3gn60wul9r33","_id":"cl42z5h8j009n3gn66mqbahet"},{"post_id":"cl42z5h66001d3gn647x4gikg","category_id":"cl42z5h5r000k3gn6aze31mnl","_id":"cl42z5h8j009p3gn6850g0b8h"},{"post_id":"cl42z5h66001d3gn647x4gikg","category_id":"cl42z5h6d001y3gn6eia98vaz","_id":"cl42z5h8k009q3gn6ac9j5cqm"},{"post_id":"cl42z5h66001d3gn647x4gikg","category_id":"cl42z5h7h00523gn61eecb9s7","_id":"cl42z5h8k009s3gn6ay6ve31j"},{"post_id":"cl42z5h7500433gn6c2dzgwal","category_id":"cl42z5h8a007s3gn60wul9r33","_id":"cl42z5h8k009t3gn6fosg6hor"},{"post_id":"cl42z5h7600473gn63phlgcup","category_id":"cl42z5h8d008e3gn6fl248hoo","_id":"cl42z5h8l009v3gn68um3983d"},{"post_id":"cl42z5h68001i3gn6782t2dhn","category_id":"cl42z5h5r000k3gn6aze31mnl","_id":"cl42z5h8l009w3gn65kh15h91"},{"post_id":"cl42z5h68001i3gn6782t2dhn","category_id":"cl42z5h6d001y3gn6eia98vaz","_id":"cl42z5h8m009y3gn65mpnbsjg"},{"post_id":"cl42z5h68001i3gn6782t2dhn","category_id":"cl42z5h7h00523gn61eecb9s7","_id":"cl42z5h8m009z3gn699b0frto"},{"post_id":"cl42z5h77004b3gn67klihxl6","category_id":"cl42z5h8d008e3gn6fl248hoo","_id":"cl42z5h8m00a13gn6fvade4d1"},{"post_id":"cl42z5h78004e3gn63oy68a0y","category_id":"cl42z5h8a007s3gn60wul9r33","_id":"cl42z5h8m00a23gn6egz8buli"},{"post_id":"cl42z5h69001l3gn6ex4mcdtq","category_id":"cl42z5h5r000k3gn6aze31mnl","_id":"cl42z5h8n00a43gn61y2bbo7u"},{"post_id":"cl42z5h69001l3gn6ex4mcdtq","category_id":"cl42z5h6d001y3gn6eia98vaz","_id":"cl42z5h8n00a53gn62sgwebrp"},{"post_id":"cl42z5h69001l3gn6ex4mcdtq","category_id":"cl42z5h7h00523gn61eecb9s7","_id":"cl42z5h8n00a73gn61b27c771"},{"post_id":"cl42z5h79004h3gn6ayqa6qrt","category_id":"cl42z5h8a007s3gn60wul9r33","_id":"cl42z5h8n00a83gn63usrhxkd"},{"post_id":"cl42z5h7a004k3gn61i9814gm","category_id":"cl42z5h5g00043gn66vfr2c22","_id":"cl42z5h8n00aa3gn64ry0b7ug"},{"post_id":"cl42z5h7a004k3gn61i9814gm","category_id":"cl42z5h8j009o3gn669fq2z8e","_id":"cl42z5h8n00ab3gn67avh8wtc"},{"post_id":"cl42z5h6b001q3gn6f4lc7t1r","category_id":"cl42z5h5r000k3gn6aze31mnl","_id":"cl42z5h8n00ad3gn62fxfc2rn"},{"post_id":"cl42z5h6b001q3gn6f4lc7t1r","category_id":"cl42z5h6d001y3gn6eia98vaz","_id":"cl42z5h8o00ae3gn6awlq2z7k"},{"post_id":"cl42z5h6b001q3gn6f4lc7t1r","category_id":"cl42z5h7h00523gn61eecb9s7","_id":"cl42z5h8o00ag3gn66zn5epme"},{"post_id":"cl42z5h6c001t3gn6esa293i7","category_id":"cl42z5h5r000k3gn6aze31mnl","_id":"cl42z5h8o00ah3gn6gw4q6wnn"},{"post_id":"cl42z5h6c001t3gn6esa293i7","category_id":"cl42z5h6d001y3gn6eia98vaz","_id":"cl42z5h8o00aj3gn6114s80gj"},{"post_id":"cl42z5h6c001t3gn6esa293i7","category_id":"cl42z5h7h00523gn61eecb9s7","_id":"cl42z5h8o00ak3gn6dqt4atpk"},{"post_id":"cl42z5h6d001x3gn602ox9e2o","category_id":"cl42z5h5r000k3gn6aze31mnl","_id":"cl42z5h8o00al3gn64qjuhs7w"},{"post_id":"cl42z5h6d001x3gn602ox9e2o","category_id":"cl42z5h6d001y3gn6eia98vaz","_id":"cl42z5h8o00an3gn63eov98ve"},{"post_id":"cl42z5h6d001x3gn602ox9e2o","category_id":"cl42z5h7h00523gn61eecb9s7","_id":"cl42z5h8o00ao3gn6fyab0lxg"},{"post_id":"cl42z5h7g00503gn6dqpo84rq","category_id":"cl42z5h8m00a03gn60343d8ua","_id":"cl42z5h8p00aq3gn648ii08x4"},{"post_id":"cl42z5h7h00543gn628qs4ma9","category_id":"cl42z5h8m00a03gn60343d8ua","_id":"cl42z5h8p00ar3gn622zp7fvy"},{"post_id":"cl42z5h7j00583gn6cf0l7i11","category_id":"cl42z5h8m00a03gn60343d8ua","_id":"cl42z5h8p00at3gn6dmlh99nf"},{"post_id":"cl42z5h7k005c3gn67m4t33mn","category_id":"cl42z5h8m00a03gn60343d8ua","_id":"cl42z5h8p00au3gn6aae6ebzk"},{"post_id":"cl42z5h7l005f3gn6e1la2br8","category_id":"cl42z5h8m00a03gn60343d8ua","_id":"cl42z5h8p00aw3gn6eyce215k"},{"post_id":"cl42z5h7m005k3gn6d0hkgigd","category_id":"cl42z5h8o00af3gn62frjawuv","_id":"cl42z5h8p00ax3gn68769084w"},{"post_id":"cl42z5h7n005n3gn6ej2xaciq","category_id":"cl42z5h8o00ai3gn614206tw4","_id":"cl42z5h8q00az3gn6g7fa5irb"},{"post_id":"cl42z5h7q005v3gn64sqp9w7d","category_id":"cl42z5h8o00am3gn69d1xhkww","_id":"cl42z5h8q00b03gn65j1k1p86"},{"post_id":"cl42z5h7r00603gn690azfd27","category_id":"cl42z5h8p00ap3gn689ld824b","_id":"cl42z5h8q00b23gn6fwoyg6lo"},{"post_id":"cl42z5h7s00633gn6bne5e7bu","category_id":"cl42z5h8p00ap3gn689ld824b","_id":"cl42z5h8q00b33gn6boc8616j"},{"post_id":"cl42z5h7u00683gn6de6x8vms","category_id":"cl42z5h8p00ap3gn689ld824b","_id":"cl42z5h8q00b53gn682x30me5"},{"post_id":"cl42z5h7x006b3gn6a0n4g3a8","category_id":"cl42z5h8p00ap3gn689ld824b","_id":"cl42z5h8q00b63gn667dweest"},{"post_id":"cl42z5h7z006g3gn6c02118au","category_id":"cl42z5h8p00ap3gn689ld824b","_id":"cl42z5h8r00b83gn6b8tz63r3"},{"post_id":"cl42z5h80006j3gn67o5d3pma","category_id":"cl42z5h8q00b43gn67u7i0adg","_id":"cl42z5h8r00b93gn69vkn6ird"},{"post_id":"cl42z5h82006r3gn67vts8bry","category_id":"cl42z5h5g00043gn66vfr2c22","_id":"cl42z5h8r00bb3gn62rbkgyb9"},{"post_id":"cl42z5h82006r3gn67vts8bry","category_id":"cl42z5h8q00b73gn675xf4tld","_id":"cl42z5h8r00bd3gn62gm8gqg8"},{"post_id":"cl42z5h85006z3gn6810w4ysx","category_id":"cl42z5h8r00ba3gn66o3kajza","_id":"cl42z5h8r00be3gn6bika0p16"},{"post_id":"cl42z5h8600733gn64eskf8ps","category_id":"cl42z5h5r000k3gn6aze31mnl","_id":"cl42z5h8s00bg3gn6ahvif9g2"},{"post_id":"cl42z5h8600733gn64eskf8ps","category_id":"cl42z5h6d001y3gn6eia98vaz","_id":"cl42z5h8s00bh3gn6gm0o9ug0"},{"post_id":"cl42z5h8600733gn64eskf8ps","category_id":"cl42z5h8r00bc3gn654ufhr6u","_id":"cl42z5h8s00bi3gn67cb20k48"},{"post_id":"cl42z5h8700773gn64kk6c9le","category_id":"cl42z5h5r000k3gn6aze31mnl","_id":"cl42z5h8s00bj3gn6akeh4xzx"},{"post_id":"cl42z5h8700773gn64kk6c9le","category_id":"cl42z5h6d001y3gn6eia98vaz","_id":"cl42z5h8s00bk3gn67jbuemam"},{"post_id":"cl42z5h8700773gn64kk6c9le","category_id":"cl42z5h8r00bc3gn654ufhr6u","_id":"cl42z5h8s00bl3gn6534211ue"}],"PostTag":[{"post_id":"cl42z5h5b00013gn65c895mqk","tag_id":"cl42z5h5h00053gn6hpk60z4y","_id":"cl42z5h5o000e3gn6g6fl23vt"},{"post_id":"cl42z5h5e00033gn68tizfhla","tag_id":"cl42z5h5o000d3gn623o601se","_id":"cl42z5h5x000v3gn69ax76rmi"},{"post_id":"cl42z5h5e00033gn68tizfhla","tag_id":"cl42z5h5r000l3gn60wu1fnss","_id":"cl42z5h60000y3gn69n23h05j"},{"post_id":"cl42z5h5w000u3gn61b3964mf","tag_id":"cl42z5h5u000s3gn68d8dcc5i","_id":"cl42z5h6300133gn68hduhc0t"},{"post_id":"cl42z5h5j00073gn6ec3g7e9j","tag_id":"cl42z5h5u000s3gn68d8dcc5i","_id":"cl42z5h6400163gn63iqpdwv9"},{"post_id":"cl42z5h5x000x3gn67501gujd","tag_id":"cl42z5h5u000s3gn68d8dcc5i","_id":"cl42z5h66001b3gn63tsjaanf"},{"post_id":"cl42z5h6200123gn642q02r3u","tag_id":"cl42z5h5u000s3gn68d8dcc5i","_id":"cl42z5h67001e3gn61wwp709x"},{"post_id":"cl42z5h5l00093gn69gggera3","tag_id":"cl42z5h5u000s3gn68d8dcc5i","_id":"cl42z5h69001j3gn624gydaip"},{"post_id":"cl42z5h6400153gn66s5t0zpt","tag_id":"cl42z5h5u000s3gn68d8dcc5i","_id":"cl42z5h6a001m3gn62ltzg0rb"},{"post_id":"cl42z5h65001a3gn6asb3ekoz","tag_id":"cl42z5h5u000s3gn68d8dcc5i","_id":"cl42z5h6c001r3gn6bjmsbub7"},{"post_id":"cl42z5h5n000b3gn6137sbqec","tag_id":"cl42z5h5u000s3gn68d8dcc5i","_id":"cl42z5h6d001u3gn611in1stv"},{"post_id":"cl42z5h66001d3gn647x4gikg","tag_id":"cl42z5h5u000s3gn68d8dcc5i","_id":"cl42z5h6e00203gn60ywu4kv7"},{"post_id":"cl42z5h68001i3gn6782t2dhn","tag_id":"cl42z5h5u000s3gn68d8dcc5i","_id":"cl42z5h6j00233gn69ebv11il"},{"post_id":"cl42z5h5p000g3gn65xqq0k2t","tag_id":"cl42z5h5u000s3gn68d8dcc5i","_id":"cl42z5h6l00293gn65d8tgvof"},{"post_id":"cl42z5h69001l3gn6ex4mcdtq","tag_id":"cl42z5h5u000s3gn68d8dcc5i","_id":"cl42z5h6m002b3gn68m2hdg32"},{"post_id":"cl42z5h6b001q3gn6f4lc7t1r","tag_id":"cl42z5h5u000s3gn68d8dcc5i","_id":"cl42z5h6n002f3gn65e3s8g90"},{"post_id":"cl42z5h6c001t3gn6esa293i7","tag_id":"cl42z5h5u000s3gn68d8dcc5i","_id":"cl42z5h6o002i3gn63jfm4rjz"},{"post_id":"cl42z5h5q000i3gn68gspc9so","tag_id":"cl42z5h6b001o3gn6b24naov0","_id":"cl42z5h6p002l3gn66ukec2wg"},{"post_id":"cl42z5h6d001x3gn602ox9e2o","tag_id":"cl42z5h5u000s3gn68d8dcc5i","_id":"cl42z5h6p002n3gn63ycb0ufn"},{"post_id":"cl42z5h6i00223gn6di89hxjj","tag_id":"cl42z5h5u000s3gn68d8dcc5i","_id":"cl42z5h6r002q3gn63um623cc"},{"post_id":"cl42z5h5s000n3gn6e8sr4viy","tag_id":"cl42z5h6e001z3gn66xx3fa2x","_id":"cl42z5h6s002s3gn6csx90f87"},{"post_id":"cl42z5h6k00253gn63vlkh7ck","tag_id":"cl42z5h5u000s3gn68d8dcc5i","_id":"cl42z5h6t002w3gn68jiyhxdr"},{"post_id":"cl42z5h6l002a3gn67wqqhd2w","tag_id":"cl42z5h5u000s3gn68d8dcc5i","_id":"cl42z5h6t002z3gn601tg5t38"},{"post_id":"cl42z5h5t000p3gn6eku8cya6","tag_id":"cl42z5h5u000s3gn68d8dcc5i","_id":"cl42z5h6u00333gn64zyt8m5j"},{"post_id":"cl42z5h6m002c3gn6fulcfn40","tag_id":"cl42z5h5u000s3gn68d8dcc5i","_id":"cl42z5h6v00363gn6bhjt3j8q"},{"post_id":"cl42z5h6n002g3gn6fadn70ei","tag_id":"cl42z5h5u000s3gn68d8dcc5i","_id":"cl42z5h6x003b3gn64saqcwgh"},{"post_id":"cl42z5h6o002j3gn60kvd8er2","tag_id":"cl42z5h5u000s3gn68d8dcc5i","_id":"cl42z5h6z003e3gn6a11f6jyf"},{"post_id":"cl42z5h6p002m3gn68nnz20rl","tag_id":"cl42z5h5u000s3gn68d8dcc5i","_id":"cl42z5h71003i3gn610g5768m"},{"post_id":"cl42z5h6p002o3gn6571nhbvd","tag_id":"cl42z5h5o000d3gn623o601se","_id":"cl42z5h72003m3gn6eqde4hyv"},{"post_id":"cl42z5h6r002r3gn69lojbeh8","tag_id":"cl42z5h6b001o3gn6b24naov0","_id":"cl42z5h73003q3gn6b32d4zvj"},{"post_id":"cl42z5h6s002t3gn6bsgz26py","tag_id":"cl42z5h6b001o3gn6b24naov0","_id":"cl42z5h74003u3gn67hhy8fy4"},{"post_id":"cl42z5h6t002x3gn6gtxm4f2j","tag_id":"cl42z5h5u000s3gn68d8dcc5i","_id":"cl42z5h74003y3gn6hep3f9xr"},{"post_id":"cl42z5h6w00383gn66m4q5ggd","tag_id":"cl42z5h6b001o3gn6b24naov0","_id":"cl42z5h7500423gn647415ztd"},{"post_id":"cl42z5h6u00303gn64b1gb6qi","tag_id":"cl42z5h6w00373gn69puf9y8b","_id":"cl42z5h7600463gn6c6rwcown"},{"post_id":"cl42z5h6x003c3gn67j847l07","tag_id":"cl42z5h6b001o3gn6b24naov0","_id":"cl42z5h77004a3gn63sczht5x"},{"post_id":"cl42z5h6x003c3gn67j847l07","tag_id":"cl42z5h71003j3gn60hhzgm64","_id":"cl42z5h78004d3gn6c9s457hr"},{"post_id":"cl42z5h74003v3gn6beof8ah6","tag_id":"cl42z5h71003j3gn60hhzgm64","_id":"cl42z5h79004g3gn64dfqh1as"},{"post_id":"cl42z5h6z003f3gn61xgv7tc1","tag_id":"cl42z5h6b001o3gn6b24naov0","_id":"cl42z5h79004j3gn69jtd2yb0"},{"post_id":"cl42z5h6z003f3gn61xgv7tc1","tag_id":"cl42z5h71003j3gn60hhzgm64","_id":"cl42z5h7b004m3gn64oen5nxq"},{"post_id":"cl42z5h7500433gn6c2dzgwal","tag_id":"cl42z5h7500403gn6gmkl5yot","_id":"cl42z5h7c004p3gn6epeybkg6"},{"post_id":"cl42z5h7500433gn6c2dzgwal","tag_id":"cl42z5h71003j3gn60hhzgm64","_id":"cl42z5h7c004s3gn64ii693m4"},{"post_id":"cl42z5h7600473gn63phlgcup","tag_id":"cl42z5h71003j3gn60hhzgm64","_id":"cl42z5h7d004v3gn6299t74hh"},{"post_id":"cl42z5h77004b3gn67klihxl6","tag_id":"cl42z5h6b001o3gn6b24naov0","_id":"cl42z5h7f004z3gn6gfxfafr8"},{"post_id":"cl42z5h77004b3gn67klihxl6","tag_id":"cl42z5h71003j3gn60hhzgm64","_id":"cl42z5h7h00533gn69prv36hy"},{"post_id":"cl42z5h71003k3gn6fufjb1ib","tag_id":"cl42z5h7500403gn6gmkl5yot","_id":"cl42z5h7i00563gn66o0f27s3"},{"post_id":"cl42z5h71003k3gn6fufjb1ib","tag_id":"cl42z5h71003j3gn60hhzgm64","_id":"cl42z5h7k005a3gn6fao6cr1q"},{"post_id":"cl42z5h78004e3gn63oy68a0y","tag_id":"cl42z5h7500403gn6gmkl5yot","_id":"cl42z5h7l005e3gn6b9tbbgx5"},{"post_id":"cl42z5h78004e3gn63oy68a0y","tag_id":"cl42z5h71003j3gn60hhzgm64","_id":"cl42z5h7m005i3gn6hpmjbue3"},{"post_id":"cl42z5h79004h3gn6ayqa6qrt","tag_id":"cl42z5h71003j3gn60hhzgm64","_id":"cl42z5h7n005m3gn63bko6hq4"},{"post_id":"cl42z5h72003n3gn63x5hg0yi","tag_id":"cl42z5h7500403gn6gmkl5yot","_id":"cl42z5h7o005q3gn6484l0w7o"},{"post_id":"cl42z5h72003n3gn63x5hg0yi","tag_id":"cl42z5h71003j3gn60hhzgm64","_id":"cl42z5h7q005u3gn67lgtci11"},{"post_id":"cl42z5h7b004n3gn61q7dhv11","tag_id":"cl42z5h5u000s3gn68d8dcc5i","_id":"cl42z5h7r005y3gn62c7wgdr0"},{"post_id":"cl42z5h73003r3gn6c2fafbfu","tag_id":"cl42z5h7500403gn6gmkl5yot","_id":"cl42z5h7s00623gn67hlh3ibr"},{"post_id":"cl42z5h73003r3gn6c2fafbfu","tag_id":"cl42z5h71003j3gn60hhzgm64","_id":"cl42z5h7t00663gn63akeapb5"},{"post_id":"cl42z5h7c004q3gn6aq3b1rqh","tag_id":"cl42z5h5u000s3gn68d8dcc5i","_id":"cl42z5h7v006a3gn6eel284ei"},{"post_id":"cl42z5h7d004t3gn6a5o86v6c","tag_id":"cl42z5h5u000s3gn68d8dcc5i","_id":"cl42z5h7x006d3gn6c5djg4p2"},{"post_id":"cl42z5h74003z3gn6bodf1zr3","tag_id":"cl42z5h7500403gn6gmkl5yot","_id":"cl42z5h80006i3gn6d7x701wl"},{"post_id":"cl42z5h74003z3gn6bodf1zr3","tag_id":"cl42z5h71003j3gn60hhzgm64","_id":"cl42z5h81006l3gn657v14u8c"},{"post_id":"cl42z5h7d004w3gn6aeoa9dmm","tag_id":"cl42z5h5u000s3gn68d8dcc5i","_id":"cl42z5h82006q3gn67yvzbd49"},{"post_id":"cl42z5h7a004k3gn61i9814gm","tag_id":"cl42z5h5h00053gn6hpk60z4y","_id":"cl42z5h83006t3gn6e6um1fsy"},{"post_id":"cl42z5h7a004k3gn61i9814gm","tag_id":"cl42z5h7e004y3gn6c6o8hdwe","_id":"cl42z5h84006y3gn6h25q8fb6"},{"post_id":"cl42z5h7k005c3gn67m4t33mn","tag_id":"cl42z5h7i00573gn6eghy6676","_id":"cl42z5h8500713gn6gxwgb653"},{"post_id":"cl42z5h7g00503gn6dqpo84rq","tag_id":"cl42z5h7i00573gn6eghy6676","_id":"cl42z5h8700763gn6hits621m"},{"post_id":"cl42z5h7l005f3gn6e1la2br8","tag_id":"cl42z5h7i00573gn6eghy6676","_id":"cl42z5h8700793gn6hg9za8rz"},{"post_id":"cl42z5h7h00543gn628qs4ma9","tag_id":"cl42z5h7i00573gn6eghy6676","_id":"cl42z5h88007d3gn68ndscyq5"},{"post_id":"cl42z5h7p005s3gn659emfefi","tag_id":"cl42z5h5o000d3gn623o601se","_id":"cl42z5h88007f3gn6fxkz6962"},{"post_id":"cl42z5h7p005s3gn659emfefi","tag_id":"cl42z5h5r000l3gn60wu1fnss","_id":"cl42z5h89007j3gn68r4peu96"},{"post_id":"cl42z5h7j00583gn6cf0l7i11","tag_id":"cl42z5h7i00573gn6eghy6676","_id":"cl42z5h89007l3gn60g3qal1c"},{"post_id":"cl42z5h7m005k3gn6d0hkgigd","tag_id":"cl42z5h7r005w3gn6cvzq5be5","_id":"cl42z5h89007p3gn694myahcn"},{"post_id":"cl42z5h7m005k3gn6d0hkgigd","tag_id":"cl42z5h7t00643gn6730d4qw9","_id":"cl42z5h8a007r3gn676ld7hux"},{"post_id":"cl42z5h7m005k3gn6d0hkgigd","tag_id":"cl42z5h71003j3gn60hhzgm64","_id":"cl42z5h8a007v3gn62yes6y6h"},{"post_id":"cl42z5h7n005n3gn6ej2xaciq","tag_id":"cl42z5h7y006e3gn6f3uzd4lb","_id":"cl42z5h8a007x3gn64o2l0d3o"},{"post_id":"cl42z5h80006j3gn67o5d3pma","tag_id":"cl42z5h7r005w3gn6cvzq5be5","_id":"cl42z5h8b00803gn64mrf97v8"},{"post_id":"cl42z5h81006o3gn67xlabz22","tag_id":"cl42z5h5u000s3gn68d8dcc5i","_id":"cl42z5h8b00833gn66o631e1y"},{"post_id":"cl42z5h7q005v3gn64sqp9w7d","tag_id":"cl42z5h81006n3gn68k6afd3b","_id":"cl42z5h8c00863gn6egc2a4hv"},{"post_id":"cl42z5h83006v3gn6et8w47e0","tag_id":"cl42z5h5o000d3gn623o601se","_id":"cl42z5h8c00883gn629rx7yib"},{"post_id":"cl42z5h83006v3gn6et8w47e0","tag_id":"cl42z5h5r000l3gn60wu1fnss","_id":"cl42z5h8d008b3gn67e844hjt"},{"post_id":"cl42z5h7r00603gn690azfd27","tag_id":"cl42z5h5o000d3gn623o601se","_id":"cl42z5h8d008d3gn62i8k7kgr"},{"post_id":"cl42z5h7r00603gn690azfd27","tag_id":"cl42z5h84006w3gn6h17cbhpj","_id":"cl42z5h8e008g3gn6gygke6gu"},{"post_id":"cl42z5h8600733gn64eskf8ps","tag_id":"cl42z5h5u000s3gn68d8dcc5i","_id":"cl42z5h8e008i3gn6b8ju2ugl"},{"post_id":"cl42z5h8700773gn64kk6c9le","tag_id":"cl42z5h5u000s3gn68d8dcc5i","_id":"cl42z5h8e008l3gn6d0jg9hjc"},{"post_id":"cl42z5h7s00633gn6bne5e7bu","tag_id":"cl42z5h5o000d3gn623o601se","_id":"cl42z5h8f008n3gn60o00goxo"},{"post_id":"cl42z5h7s00633gn6bne5e7bu","tag_id":"cl42z5h84006w3gn6h17cbhpj","_id":"cl42z5h8f008q3gn6bgdohsaq"},{"post_id":"cl42z5h7u00683gn6de6x8vms","tag_id":"cl42z5h5o000d3gn623o601se","_id":"cl42z5h8f008s3gn61ec99myd"},{"post_id":"cl42z5h7u00683gn6de6x8vms","tag_id":"cl42z5h84006w3gn6h17cbhpj","_id":"cl42z5h8f008v3gn6hxcu45n1"},{"post_id":"cl42z5h7x006b3gn6a0n4g3a8","tag_id":"cl42z5h5o000d3gn623o601se","_id":"cl42z5h8f008x3gn6152pfz6v"},{"post_id":"cl42z5h7x006b3gn6a0n4g3a8","tag_id":"cl42z5h84006w3gn6h17cbhpj","_id":"cl42z5h8f00903gn634m4f4jz"},{"post_id":"cl42z5h7z006g3gn6c02118au","tag_id":"cl42z5h5o000d3gn623o601se","_id":"cl42z5h8h00923gn6e6efarr5"},{"post_id":"cl42z5h7z006g3gn6c02118au","tag_id":"cl42z5h84006w3gn6h17cbhpj","_id":"cl42z5h8h00953gn6f3nj5i9o"},{"post_id":"cl42z5h82006r3gn67vts8bry","tag_id":"cl42z5h5h00053gn6hpk60z4y","_id":"cl42z5h8h00973gn6ezf83dyr"},{"post_id":"cl42z5h82006r3gn67vts8bry","tag_id":"cl42z5h8a007t3gn66fao15wi","_id":"cl42z5h8h009a3gn6durabwbp"},{"post_id":"cl42z5h82006r3gn67vts8bry","tag_id":"cl42z5h71003j3gn60hhzgm64","_id":"cl42z5h8i009c3gn6fzw5fwts"},{"post_id":"cl42z5h85006z3gn6810w4ysx","tag_id":"cl42z5h8b00813gn6a6nngyh6","_id":"cl42z5h8i009f3gn67xowbqi8"}],"Tag":[{"name":"java","_id":"cl42z5h5h00053gn6hpk60z4y"},{"name":"学习笔记","_id":"cl42z5h5o000d3gn623o601se"},{"name":"设计模式","_id":"cl42z5h5r000l3gn60wu1fnss"},{"name":"力扣","_id":"cl42z5h5u000s3gn68d8dcc5i"},{"name":"docker","_id":"cl42z5h6b001o3gn6b24naov0"},{"name":"it百科","_id":"cl42z5h6e001z3gn66xx3fa2x"},{"name":"git","_id":"cl42z5h6w00373gn69puf9y8b"},{"name":"安装部署","_id":"cl42z5h71003j3gn60hhzgm64"},{"name":"deepin","_id":"cl42z5h7500403gn6gmkl5yot"},{"name":"jpa","_id":"cl42z5h7e004y3gn6c6o8hdwe"},{"name":"推理界的今天","_id":"cl42z5h7i00573gn6eghy6676"},{"name":"maven","_id":"cl42z5h7r005w3gn6cvzq5be5"},{"name":"nexus","_id":"cl42z5h7t00643gn6730d4qw9"},{"name":"PHP","_id":"cl42z5h7y006e3gn6f3uzd4lb"},{"name":"搜索引擎","_id":"cl42z5h81006n3gn68k6afd3b"},{"name":"python","_id":"cl42z5h84006w3gn6h17cbhpj"},{"name":"seata","_id":"cl42z5h8a007t3gn66fao15wi"},{"name":"破解","_id":"cl42z5h8b00813gn6a6nngyh6"}]}}